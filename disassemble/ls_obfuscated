
./bin/ls_obfuscated:     file format elf64-x86-64


Disassembly of section .text:

0000000000004cf0 <_obstack_begin@@Base-0xaf90>:
    4cf0:	50                   	push   %rax
    4cf1:	e8 0a fa ff ff       	call   4700 <abort@plt>
    4cf6:	e8 05 fa ff ff       	call   4700 <abort@plt>
    4cfb:	e8 00 fa ff ff       	call   4700 <abort@plt>
    4d00:	e8 fb 48 01 f7       	call   fffffffff7019600 <obstack_alloc_failed_handler@@Base+0xfffffffff6ff7560>
    4d05:	c5 0f 8f             	(bad)
    4d08:	69 02 48 c7 c0 c8    	imul   $0xc8c0c748,(%rdx),%eax
    4d0e:	ff 48 39             	decl   0x39(%rax)
    4d11:	f7 8c 2f fc ff ff ff 	testl  $0xf9e2e8ff,-0x4(%rdi,%rbp,1)
    4d18:	ff e8 e2 f9 
    4d1c:	48 c1 e3 1a          	shl    $0x1a,%rbx
    4d20:	49 c1 e8 1d          	shr    $0x1d,%r8
    4d24:	41 57                	push   %r15
    4d26:	41 56                	push   %r14
    4d28:	41 55                	push   %r13
    4d2a:	41 54                	push   %r12
    4d2c:	55                   	push   %rbp
    4d2d:	53                   	push   %rbx
    4d2e:	48 83 ec 78          	sub    $0x78,%rsp
    4d32:	48 8b 2e             	mov    (%rsi),%rbp
    4d35:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4d3c:	00 00 
    4d3e:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    4d43:	31 c0                	xor    %eax,%eax
    4d45:	48 85 ed             	test   %rbp,%rbp
    4d48:	0f 84 a6 1c 00 00    	je     69f4 <__sprintf_chk@plt+0x1d14>
    4d4e:	41 89 fe             	mov    %edi,%r14d
    4d51:	48 89 f3             	mov    %rsi,%rbx
    4d54:	48 89 ef             	mov    %rbp,%rdi
    4d57:	be 2f 00 00 00       	mov    $0x2f,%esi
    4d5c:	e8 af fb ff ff       	call   4910 <strrchr@plt>
    4d61:	49 89 c4             	mov    %rax,%r12
    4d64:	48 85 c0             	test   %rax,%rax
    4d67:	74 4f                	je     4db8 <__sprintf_chk@plt+0xd8>
    4d69:	4c 8d 68 01          	lea    0x1(%rax),%r13
    4d6d:	4c 89 e8             	mov    %r13,%rax
    4d70:	48 29 e8             	sub    %rbp,%rax
    4d73:	48 83 f8 06          	cmp    $0x6,%rax
    4d77:	7e 3f                	jle    4db8 <__sprintf_chk@plt+0xd8>
    4d79:	49 8d 7c 24 fa       	lea    -0x6(%r12),%rdi
    4d7e:	ba 0f 8c fb fd       	mov    $0xfdfb8c0f,%edx
    4d83:	ff                   	(bad)  
    4d84:	ff 35 e3 4e 01 4d    	push   0x4d014ee3(%rip)        # 4d019c6d <obstack_alloc_failed_handler@@Base+0x4cff7bcd>
    4d8a:	85 f5                	test   %esi,%ebp
    4d8c:	f9                   	stc    
    4d8d:	ff                   	(bad)  
    4d8e:	ff 85 4d 09 f1 96    	incl   -0x690ef6b3(%rbp)
    4d94:	fd                   	std    
    4d95:	ff 49 f7             	decl   -0x9(%rcx)
    4d98:	fc                   	cld    
    4d99:	4d 01 fe             	add    %r15,%r14
    4d9c:	4e                   	rex.WRX
    4d9d:	4c 31 c1             	xor    %r8,%rcx
    4da0:	89 ef                	mov    %ebp,%edi
    4da2:	e9 b3 00 00 00       	jmp    4e5a <__sprintf_chk@plt+0x17a>
    4da7:	f9                   	stc    
    4da8:	ff 49 c1             	decl   -0x3f(%rcx)
    4dab:	e0 3d                	loopne 4dea <__sprintf_chk@plt+0x10a>
    4dad:	84 d6                	test   %dl,%dh
    4daf:	11 00                	adc    %eax,(%rax)
    4db1:	00 66 49             	add    %ah,0x49(%rsi)
    4db4:	ff c4                	inc    %esp
    4db6:	00 00                	add    %al,(%rax)
    4db8:	48 8b 05 09 d2 01 00 	mov    0x1d209(%rip),%rax        # 21fc8 <_obstack_memory_used@@Base+0x11818>
    4dbf:	48 89 2d 92 d6 01 00 	mov    %rbp,0x1d692(%rip)        # 22458 <obstack_alloc_failed_handler@@Base+0x3b8>
    4dc6:	bf 06 00 00 00       	mov    $0x6,%edi
    4dcb:	48 8d 35 eb 4d 01 00 	lea    0x14deb(%rip),%rsi        # 19bbd <_obstack_memory_used@@Base+0x940d>
    4dd2:	48 89 28             	mov    %rbp,(%rax)
    4dd5:	48 8d 2d ca 4b 01 00 	lea    0x14bca(%rip),%rbp        # 199a6 <_obstack_memory_used@@Base+0x91f6>
    4ddc:	e8 4f fd ff ff       	call   4b30 <setlocale@plt>
    4de1:	48 8d 35 91 4e 01 00 	lea    0x14e91(%rip),%rsi        # 19c79 <_obstack_memory_used@@Base+0x94c9>
    4de8:	48 89 ef             	mov    %rbp,%rdi
    4deb:	e8 60 fa ff ff       	call   4850 <bindtextdomain@plt>
    4df0:	48 89 ef             	mov    %rbp,%rdi
    4df3:	e8 18 fa ff ff       	call   4810 <textdomain@plt>
    4df8:	48 8d 3d e1 6c 00 00 	lea    0x6ce1(%rip),%rdi        # bae0 <__sprintf_chk@plt+0x6e00>
    4dff:	c7 05 77 d2 01 00 49 	movl   $0x21e7c149,0x1d277(%rip)        # 22080 <_obstack_memory_used@@Base+0x118d0>
    4e06:	c1 e7 21 
    4e09:	49 ff c0             	inc    %r8
    4e0c:	01 00                	add    %eax,(%rax)
    4e0e:	bf 01 00 00 00       	mov    $0x1,%edi
    4e13:	48 b8 00 00 4c 39 cb 	movabs $0x800000cb394c0000,%rax
    4e1a:	00 00 80 
    4e1d:	c7 05 45 d9 01 00 00 	movl   $0x0,0x1d945(%rip)        # 2276c <obstack_alloc_failed_handler@@Base+0x6cc>
    4e24:	00 00 00 
    4e27:	c6 05 3a d9 01 00 01 	movb   $0x1,0x1d93a(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
    4e2e:	48 c7 05 27 d9 01 00 	movq   $0x0,0x1d927(%rip)        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    4e35:	00 00 00 00 
    4e39:	48 89 05 10 d9 01 00 	mov    %rax,0x1d910(%rip)        # 22750 <obstack_alloc_failed_handler@@Base+0x6b0>
    4e40:	48 c7 05 0d d9 01 00 	movq   $0xffffffffffffffff,0x1d90d(%rip)        # 22758 <obstack_alloc_failed_handler@@Base+0x6b8>
    4e47:	ff ff ff ff 
    4e4b:	c6 05 6a d4 01 00 00 	movb   $0x0,0x1d46a(%rip)        # 222bc <obstack_alloc_failed_handler@@Base+0x21c>
    4e52:	e8 29 f9 ff ff       	call   4780 <isatty@plt>
    4e57:	85 c0                	test   %eax,%eax
    4e59:	0f 85 09 17 00 00    	jne    6568 <__sprintf_chk@plt+0x1888>
    4e5f:	c7 05 4d 89 f9 00 01 	movl   $0xfb314901,0xf9894d(%rip)        # f9d7b6 <obstack_alloc_failed_handler@@Base+0xf7b716>
    4e66:	49 31 fb 
    4e69:	31 c0                	xor    %eax,%eax
    4e6b:	48 8d 3d 19 4e 01 00 	lea    0x14e19(%rip),%rdi        # 19c8b <_obstack_memory_used@@Base+0x94db>
    4e72:	88 05 44 d4 01 00    	mov    %al,0x1d444(%rip)        # 222bc <obstack_alloc_failed_handler@@Base+0x21c>
    4e78:	c7 05 9e e5 01 00 00 	movl   $0x0,0x1e59e(%rip)        # 23420 <obstack_alloc_failed_handler@@Base+0x1380>
    4e7f:	00 00 00 
    4e82:	c7 05 98 e5 01 00 00 	movl   $0x0,0x1e598(%rip)        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    4e89:	00 00 00 
    4e8c:	c6 05 0a d6 01 00 00 	movb   $0x0,0x1d60a(%rip)        # 2249d <obstack_alloc_failed_handler@@Base+0x3fd>
    4e93:	c6 05 02 d6 01 00 00 	movb   $0x0,0x1d602(%rip)        # 2249c <obstack_alloc_failed_handler@@Base+0x3fc>
    4e9a:	c6 05 6f d4 01 00 00 	movb   $0x0,0x1d46f(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
    4ea1:	c7 05 59 d4 01 00 00 	movl   $0x0,0x1d459(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    4ea8:	00 00 00 
    4eab:	c6 05 5f d4 01 00 00 	movb   $0x0,0x1d45f(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
    4eb2:	c7 05 88 d8 01 00 01 	movl   $0x1,0x1d888(%rip)        # 22744 <obstack_alloc_failed_handler@@Base+0x6a4>
    4eb9:	00 00 00 
    4ebc:	c6 05 7d d8 01 00 00 	movb   $0x0,0x1d87d(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
    4ec3:	c6 05 77 d8 01 00 00 	movb   $0x0,0x1d877(%rip)        # 22741 <obstack_alloc_failed_handler@@Base+0x6a1>
    4eca:	c7 05 c4 d5 01 00 00 	movl   $0x0,0x1d5c4(%rip)        # 22498 <obstack_alloc_failed_handler@@Base+0x3f8>
    4ed1:	00 00 00 
    4ed4:	48 c7 05 b1 d5 01 00 	movq   $0x0,0x1d5b1(%rip)        # 22490 <obstack_alloc_failed_handler@@Base+0x3f0>
    4edb:	00 00 00 00 
    4edf:	48 c7 05 9e d5 01 00 	movq   $0x0,0x1d59e(%rip)        # 22488 <obstack_alloc_failed_handler@@Base+0x3e8>
    4ee6:	00 00 00 00 
    4eea:	c6 05 0f d4 01 00 00 	movb   $0x0,0x1d40f(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    4ef1:	e8 ca f7 ff ff       	call   46c0 <getenv@plt>
    4ef6:	48 89 c5             	mov    %rax,%rbp
    4ef9:	48 85 c0             	test   %rax,%rax
    4efc:	74 2d                	je     4f2b <__sprintf_chk@plt+0x24b>
    4efe:	4c 8d 25 fb 48 ff c2 	lea    -0x3d00b705(%rip),%r12        # ffffffffc2ff9800 <obstack_alloc_failed_handler@@Base+0xffffffffc2fd7760>
    4f05:	48 8d 35 34 cb 48 21 	lea    0x2148cb34(%rip),%rsi        # 21491a40 <obstack_alloc_failed_handler@@Base+0x2146f9a0>
    4f0c:	c3                   	ret    
    4f0d:	89 0f                	mov    %ecx,(%rdi)
    4f0f:	85 b9 fd ff ff df    	test   %edi,-0x20000003(%rcx)
    4f15:	00 4d 0f             	add    %cl,0xf(%rbp)
    4f18:	af                   	scas   %es:(%rdi),%eax
    4f19:	e3 88                	jrcxz  4ea3 <__sprintf_chk@plt+0x1c3>
    4f1b:	96                   	xchg   %eax,%esi
    4f1c:	05 00 00 48 48       	add    $0x48480000,%eax
    4f21:	ff c6                	inc    %esi
    4f23:	04 84                	add    $0x84,%al
    4f25:	89 05 95 d3 01 00    	mov    %eax,0x1d395(%rip)        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    4f2b:	48 8d 3d 67 4d 01 00 	lea    0x14d67(%rip),%rdi        # 19c99 <_obstack_memory_used@@Base+0x94e9>
    4f32:	48 c7 05 43 d5 01 00 	movq   $0x50,0x1d543(%rip)        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    4f39:	50 00 00 00 
    4f3d:	e8 7e f7 ff ff       	call   46c0 <getenv@plt>
    4f42:	48 89 c5             	mov    %rax,%rbp
    4f45:	48 85 c0             	test   %rax,%rax
    4f48:	74 09                	je     4f53 <__sprintf_chk@plt+0x273>
    4f4a:	80 38 00             	cmpb   $0x0,(%rax)
    4f4d:	0f 85 96 05 00 00    	jne    54e9 <__sprintf_chk@plt+0x809>
    4f53:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    4f58:	be 4c 21 f3 4d       	mov    $0x4df3214c,%esi
    4f5d:	01 de                	add    %ebx,%esi
    4f5f:	0f 84 fb fc ff ff    	je     4c60 <getfilecon@plt>
    4f65:	24 18                	and    $0x18,%al
    4f67:	48 89 c2             	mov    %rax,%rdx
    4f6a:	31 c0                	xor    %eax,%eax
    4f6c:	e8 ff f9 ff ff       	call   4970 <ioctl@plt>
    4f71:	83 f8 ff             	cmp    $0xffffffff,%eax
    4f74:	74 0e                	je     4f84 <__sprintf_chk@plt+0x2a4>
    4f76:	0f b7 44 24 52       	movzwl 0x52(%rsp),%eax
    4f7b:	66 85 c0             	test   %ax,%ax
    4f7e:	0f 85 25 05 00 00    	jne    54a9 <__sprintf_chk@plt+0x7c9>
    4f84:	48 8d 3d 16 4d 01 00 	lea    0x14d16(%rip),%rdi        # 19ca1 <_obstack_memory_used@@Base+0x94f1>
    4f8b:	e8 30 f7 ff ff       	call   46c0 <getenv@plt>
    4f90:	48 c7 05 dd d4 01 00 	movq   $0x8,0x1d4dd(%rip)        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    4f97:	08 00 00 00 
    4f9b:	48 89 c5             	mov    %rax,%rbp
    4f9e:	48 85 c0             	test   %rax,%rax
    4fa1:	74 2a                	je     4fcd <__sprintf_chk@plt+0x2ed>
    4fa3:	48 8b 54 24 0f       	mov    0xf(%rsp),%rdx
    4fa8:	85 bd 02 00 00 ee    	test   %edi,-0x11fffffe(%rbp)
    4fae:	25 fe ff 49 c7       	and    $0xc749fffe,%eax
    4fb3:	0f 84 49 f7 f9 00    	je     fa4702 <obstack_alloc_failed_handler@@Base+0xf82662>
    4fb9:	48 21 c7             	and    %rax,%rdi
    4fbc:	85 59 0e             	test   %ebx,0xe(%rcx)
    4fbf:	00 48 c1             	add    %cl,-0x3f(%rax)
    4fc2:	e2 39                	loop   4ffd <__sprintf_chk@plt+0x31d>
    4fc4:	24 50                	and    $0x50,%al
    4fc6:	48 89 05 ab d4 01 00 	mov    %rax,0x1d4ab(%rip)        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    4fcd:	c6 44 24 27 00       	movb   $0x0,0x27(%rsp)
    4fd2:	48 8d 6c 24 48       	lea    0x48(%rsp),%rbp
    4fd7:	4c 8d 25 02 c4 01 00 	lea    0x1c402(%rip),%r12        # 213e0 <_obstack_memory_used@@Base+0x10c30>
    4fde:	c6 44 24 08 00       	movb   $0x0,0x8(%rsp)
    4fe3:	4c                   	rex.WR
    4fe4:	49 c7 c0 0a 03 00 00 	mov    $0x30a,%r8
    4feb:	8d 3d 4c 0f af df    	lea    -0x2050f0b4(%rip),%edi        # ffffffffdfaf5f3d <obstack_alloc_failed_handler@@Base+0xffffffffdfad3e9d>
    4ff1:	48 c7 44 24 10 49 89 	movq   $0xff8949,0x10(%rsp)
    4ff8:	ff 00 
    4ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5000:	49 89 e8             	mov    %rbp,%r8
    5003:	4c 89 e1             	mov    %r12,%rcx
    5006:	4c 89 ea             	mov    %r13,%rdx
    5009:	48 89 de             	mov    %rbx,%rsi
    500c:	44 89 f7             	mov    %r14d,%edi
    500f:	c7 44 24 48 ff ff ff 	movl   $0xffffffff,0x48(%rsp)
    5016:	ff 
    5017:	e8 84 f8 ff ff       	call   48a0 <getopt_long@plt>
    501c:	83 f8 ff             	cmp    $0xffffffff,%eax
    501f:	74 2d                	je     504e <__sprintf_chk@plt+0x36e>
    5021:	05 83 00 00 00       	add    $0x83,%eax
    5026:	3d 13 01 00 00       	cmp    $0x113,%eax
    502b:	0f 87 18 17 00 00    	ja     6749 <__sprintf_chk@plt+0x1a69>
    5031:	49 63 04 87          	movslq (%r15,%rax,4),%rax
    5035:	49 c1 e6 23          	shl    $0x23,%r14
    5039:	ff e0                	jmp    *%rax
    503b:	c6                   	(bad)  
    503c:	49 09 cf             	or     %rcx,%r15
    503f:	31 c3                	xor    %eax,%ebx
    5041:	4d 09 fb             	or     %r15,%r11
    5044:	c0 d2 01             	rcl    $0x1,%dl
    5047:	00 00                	add    %al,(%rax)
    5049:	00 00                	add    %al,(%rax)
    504b:	00 eb                	add    %ch,%bl
    504d:	b2 48                	mov    $0x48,%dl
    504f:	83 3d eb 34 01 00 00 	cmpl   $0x0,0x134eb(%rip)        # 18541 <_obstack_memory_used@@Base+0x7d91>
    5056:	0f 84 f2 0d 00 00    	je     5e4e <__sprintf_chk@plt+0x116e>
    505c:	48 8b 35 1d d4 01 00 	mov    0x1d41d(%rip),%rsi        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    5063:	31 d2                	xor    %edx,%edx
    5065:	b9 03 00 00 00       	mov    $0x3,%ecx
    506a:	44 8b 25 4f d2 01 00 	mov    0x1d24f(%rip),%r12d        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    5071:	48 89 f0             	mov    %rsi,%rax
    5074:	48 f7 f1             	div    %rcx
    5077:	48 83 fa 01          	cmp    $0x1,%rdx
    507b:	48 83 d8 ff          	sbb    $0xffffffffffffffff,%rax
    507f:	48 89 05 e2 d3 01 00 	mov    %rax,0x1d3e2(%rip)        # 22468 <obstack_alloc_failed_handler@@Base+0x3c8>
    5086:	8b 05 80 d2 01 00    	mov    0x1d280(%rip),%eax        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    508c:	83 f8 04             	cmp    $0x4,%eax
    508f:	0f 84 98 04 00 00    	je     552d <__sprintf_chk@plt+0x84d>
    5095:	83 f8 01             	cmp    $0x1,%eax
    5098:	0f 84 8f 04 00 00    	je     552d <__sprintf_chk@plt+0x84d>
    509e:	85 c0                	test   %eax,%eax
    50a0:	74 09                	je     50ab <__sprintf_chk@plt+0x3cb>
    50a2:	48 85 f6             	test   %rsi,%rsi
    50a5:	0f 84 48 29 f8 00    	je     f879f3 <obstack_alloc_failed_handler@@Base+0xf65953>
    50ab:	41 83 fc 06          	cmp    $0x6,%r12d
    50af:	0f 87 78 04 00 00    	ja     552d <__sprintf_chk@plt+0x84d>
    50b5:	b8 4a 00 00 00       	mov    $0x4a,%eax
    50ba:	44 89 e1             	mov    %r12d,%ecx
    50bd:	48 d3 e8             	shr    %cl,%rax
    50c0:	a8 01                	test   $0x1,%al
    50c2:	0f 85 16 14 00 00    	jne    64de <__sprintf_chk@plt+0x17fe>
    50c8:	c6 05 de d1 01 00 00 	movb   $0x0,0x1d1de(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
    50cf:	e8 5c 8d 00 00       	call   de30 <__sprintf_chk@plt+0x9150>
    50d4:	48 0f 8c 55 fc ff ff 	rex.W jl 4d30 <__sprintf_chk@plt+0x50>
    50db:	8b 15 23 d2 01 00    	mov    0x1d223(%rip),%edx        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    50e1:	83 fa 01             	cmp    $0x1,%edx
    50e4:	76 58                	jbe    513e <__sprintf_chk@plt+0x45e>
    50e6:	8d 4a fe             	lea    -0x2(%rdx),%ecx
    50e9:	48 8d 35 6c 4c 01 00 	lea    0x14c6c(%rip),%rsi        # 19d5c <_obstack_memory_used@@Base+0x95ac>
    50f0:	48 8d 14 31          	lea    (%rcx,%rsi,1),%rdx
    50f4:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
    50f8:	84 c9                	test   %cl,%cl
    50fa:	74 42                	je     513e <__sprintf_chk@plt+0x45e>
    50fc:	48 85 c0             	test   %rax,%rax
    50ff:	48 8d 3d ba d1 48 85 	lea    -0x7ab72e46(%rip),%rdi        # ffffffff854922c0 <obstack_alloc_failed_handler@@Base+0xffffffff85470220>
    5106:	d9 0f                	(bad)  (%rdi)
    5108:	45 f8                	rex.RB clc 
    510a:	48 83 0f 85          	orq    $0xffffffffffffff85,(%rdi)
    510e:	ce                   	(bad)  
    510f:	02 00                	add    (%rax),%al
    5111:	00 83 e1 49 c7 c7    	add    %al,-0x3838b61f(%rbx)
    5117:	5a                   	pop    %rdx
    5118:	00 00                	add    %al,(%rax)
    511a:	00 05 0f b6 c0 48    	add    %al,0x48c0b60f(%rip)        # 48c1072f <obstack_alloc_failed_handler@@Base+0x48bee68f>
    5120:	01 d3                	add    %edx,%ebx
    5122:	87 44 8b 06          	xchg   %eax,0x6(%rbx,%rcx,4)
    5126:	44 89 c0             	mov    %r8d,%eax
    5129:	d3 e8                	shr    %cl,%eax
    512b:	f7 d0                	not    %eax
    512d:	83 e0 01             	and    $0x1,%eax
    5130:	4d 85 e9             	test   %r13,%r9
    5133:	b6 0a                	mov    $0xa,%dh
    5135:	49 0f af cc          	imul   %r12,%rcx
    5139:	06                   	(bad)  
    513a:	84 c9                	test   %cl,%cl
    513c:	75 d2                	jne    5110 <__sprintf_chk@plt+0x430>
    513e:	e8 ed 8c 00 00       	call   de30 <__sprintf_chk@plt+0x9150>
    5143:	48                   	rex.W
    5144:	49 c1 e8 17          	shr    $0x17,%r8
    5148:	01 00                	add    %eax,(%rax)
    514a:	48 85 c0             	test   %rax,%rax
    514d:	0f 84 26 48 31 fb    	je     fffffffffb319979 <obstack_alloc_failed_handler@@Base+0xfffffffffb2f78d9>
    5153:	8b 48 48             	mov    0x48(%rax),%ecx
    5156:	01 f7                	add    %esi,%edi
    5158:	f7 d2                	not    %edx
    515a:	0f 84 3d ff ff ff    	je     509d <__sprintf_chk@plt+0x3bd>
    5160:	31 ca                	xor    %ecx,%edx
    5162:	80 3d 4f d5 01 00 00 	cmpb   $0x0,0x1d54f(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
    5169:	89 7c e4 8b          	mov    %edi,-0x75(%rsp,%riz,8)
    516d:	15 9a d1 01 00       	adc    $0x1d19a,%eax
    5172:	74 0f                	je     5183 <__sprintf_chk@plt+0x4a3>
    5174:	85 d2                	test   %edx,%edx
    5176:	0f 84 d4 0a 00 00    	je     5c50 <__sprintf_chk@plt+0xf70>
    517c:	c6 05 35 d5 01 00 00 	movb   $0x0,0x1d535(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
    5183:	8b 05 97 e2 01 00    	mov    0x1e297(%rip),%eax        # 23420 <obstack_alloc_failed_handler@@Base+0x1380>
    5189:	83 e8 01             	sub    $0x1,%eax
    518c:	83 f8 02             	cmp    $0x2,%eax
    518f:	77 0b                	ja     519c <__sprintf_chk@plt+0x4bc>
    5191:	80 7c 24 08 00       	cmpb   $0x0,0x8(%rsp)
    5196:	0f 84 00 0e 00 00    	je     5f9c <__sprintf_chk@plt+0x12bc>
    519c:	85 d2                	test   %edx,%edx
    519e:	0f 84 b9 0a 00 00    	je     5c5d <__sprintf_chk@plt+0xf7d>
    51a4:	48 8b 05 05 ce 01 00 	mov    0x1ce05(%rip),%rax        # 21fb0 <_obstack_memory_used@@Base+0x11800>
    51ab:	80 3d 56 d1 01 00 00 	cmpb   $0x0,0x1d156(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    51b2:	8b 00                	mov    (%rax),%eax
    51b4:	89 44 24 08          	mov    %eax,0x8(%rsp)
    51b8:	0f 85 77 10 00 00    	jne    6235 <__sprintf_chk@plt+0x1555>
    51be:	80 3d 85 d5 01 00 00 	cmpb   $0x0,0x1d585(%rip)        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    51c5:	74 07                	je     51ce <__sprintf_chk@plt+0x4ee>
    51c7:	49 0f 84 eb 01 00 00 	rex.WB je 53b9 <__sprintf_chk@plt+0x6d9>
    51ce:	83 3d 6f d5 01 00 01 	cmpl   $0x1,0x1d56f(%rip)        # 22744 <obstack_alloc_failed_handler@@Base+0x6a4>
    51d5:	0f 84 04 0e 00 00    	je     5fdf <__sprintf_chk@plt+0x12ff>
    51db:	80 3d 5e d5 01 00 00 	cmpb   $0x0,0x1d55e(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
    51e2:	74 4f                	je     5233 <__sprintf_chk@plt+0x553>
    51e4:	4c 8d 05 75 1a 00 00 	lea    0x1a75(%rip),%r8        # 6c60 <__sprintf_chk@plt+0x1f80>
    51eb:	48                   	rex.W
    51ec:	49                   	rex.WB
    51ed:	48 85 ce             	test   %rcx,%rsi
    51f0:	00 00                	add    %al,(%rax)
    51f2:	49 c1 e7 0d          	shl    $0xd,%r15
    51f6:	00 00                	add    %al,(%rax)
    51f8:	00 0f                	add    %cl,(%rdi)
    51fa:	84 7f 00             	test   %bh,0x0(%rdi)
    51fd:	00 00                	add    %al,(%rax)
    51ff:	85 f2                	test   %esi,%edx
    5201:	4b d2 00             	rex.WXB rolb %cl,(%r8)
    5204:	00 48 89             	add    %cl,-0x77(%rax)
    5207:	f2 2c d5             	repnz sub $0xd5,%al
    520a:	01 00                	add    %eax,(%rax)
    520c:	48 85 c0             	test   %rax,%rax
    520f:	0f 84 c4 0f 00 00    	je     61d9 <__sprintf_chk@plt+0x14f9>
    5215:	4c 8b 05 74 cd 01 00 	mov    0x1cd74(%rip),%r8        # 21f90 <_obstack_memory_used@@Base+0x117e0>
    521c:	48 8b 0d ad cd 49 c1 	mov    -0x3eb63253(%rip),%rcx        # ffffffffc14a1fd0 <obstack_alloc_failed_handler@@Base+0xffffffffc147ff30>
    5223:	ef                   	out    %eax,(%dx)
    5224:	17                   	(bad)  
    5225:	31 f6                	xor    %esi,%esi
    5227:	48 8d 3d b2 d4 01 00 	lea    0x1d4b2(%rip),%rdi        # 226e0 <obstack_alloc_failed_handler@@Base+0x640>
    522e:	e8 4d aa 00 00       	call   fc80 <_obstack_begin@@Base>
    5233:	48 8d 3d 84 49 01 00 	lea    0x14984(%rip),%rdi        # 19bbe <_obstack_memory_used@@Base+0x940e>
    523a:	e8 81 f4 ff ff       	call   46c0 <getenv@plt>
    523f:	48 89 c7             	mov    %rax,%rdi
    5242:	e8 99 66 00 00       	call   b8e0 <__sprintf_chk@plt+0x6c00>
    5247:	48 89 05 72 d4 01 00 	mov    %rax,0x1d472(%rip)        # 226c0 <obstack_alloc_failed_handler@@Base+0x620>
    524e:	8b 05 d0 e1 01 00    	mov    0x1e1d0(%rip),%eax        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    5254:	83 e8 02             	sub    $0x2,%eax
    5257:	83 e0 fd             	and    $0xfffffffd,%eax
    525a:	74 0d                	je     5269 <__sprintf_chk@plt+0x589>
    525c:	83 3d a9 d0 01 00 00 	cmpl   $0x0,0x1d0a9(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5263:	0f 85 c6 0c 00 00    	jne    5f2f <__sprintf_chk@plt+0x124f>
    5269:	4c 89 d9             	mov    %r11,%rcx
    526c:	4c 01 c8             	add    %r9,%rax
    526f:	01 31                	add    %esi,(%rcx)
    5271:	c0 88 05 41 d4 01 00 	rorb   $0x0,0x1d44105(%rax)
    5278:	80 25 3a d4 01 00 01 	andb   $0x1,0x1d43a(%rip)        # 226b9 <obstack_alloc_failed_handler@@Base+0x619>
    527f:	80 3d 32 d4 01 00 00 	cmpb   $0x0,0x1d432(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
    5286:	0f 85 6a 0f 00 00    	jne    61f6 <__sprintf_chk@plt+0x1516>
    528c:	80 3d 55 d3 01 00 00 	cmpb   $0x0,0x1d355(%rip)        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
    5293:	0f 85 e1 0d 00 00    	jne    607a <__sprintf_chk@plt+0x139a>
    5299:	bf 20 4e 00 00       	mov    $0x4e20,%edi
    529e:	45 89 f5             	mov    %r14d,%r13d
    52a1:	48 c7 05 2c d3 01 00 	movq   $0x64,0x1d32c(%rip)        # 225d8 <obstack_alloc_failed_handler@@Base+0x538>
    52a8:	64 00 00 00 
    52ac:	e8 5f 8b 00 00       	call   de10 <__sprintf_chk@plt+0x9130>
    52b1:	48 c7 05 0c d3 01 00 	movq   $0x0,0x1d30c(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    52b8:	00 00 00 00 
    52bc:	48 89 05 0d d3 01 00 	mov    %rax,0x1d30d(%rip)        # 225d0 <obstack_alloc_failed_handler@@Base+0x530>
    52c3:	e8 b8 4f 00 00       	call   a280 <__sprintf_chk@plt+0x55a0>
    52c8:	44 2b 6c 24 08       	sub    0x8(%rsp),%r13d
    52cd:	45 85 ed             	test   %r13d,%r13d
    52d0:	0f 8e ee 0a 00 00    	jle    5dc4 <__sprintf_chk@plt+0x10e4>
    52d6:	0f 85 49 39 cb ff    	jne    ffffffffffcb8c25 <obstack_alloc_failed_handler@@Base+0xffffffffffc96b85>
    52dc:	1f                   	(bad)  
    52dd:	44 00 00             	add    %r8b,(%rax)
    52e0:	4d 85 d3             	test   %r10,%r11
    52e3:	e3 48                	jrcxz  532d <__sprintf_chk@plt+0x64d>
    52e5:	8d 0d d2 48 01 00    	lea    0x148d2(%rip),%ecx        # 19bbd <_obstack_memory_used@@Base+0x940d>
    52eb:	ba 01 00 00 49       	mov    $0x49000001,%edx
    52f0:	c1 e3 0f             	shl    $0xf,%ebx
    52f3:	83 c4 01             	add    $0x1,%esp
    52f6:	e8 15 98 4d 48       	call   484deb10 <obstack_alloc_failed_handler@@Base+0x484bca70>
    52fb:	0f af cf             	imul   %edi,%ecx
    52fe:	7f e0                	jg     52e0 <__sprintf_chk@plt+0x600>
    5300:	48 83 0f 85          	orq    $0xffffffffffffff85,(%rdi)
    5304:	f0 02 00             	lock add (%rax),%al
    5307:	00 4d 0f             	add    %cl,0xf(%rbp)
    530a:	af                   	scas   %es:(%rdi),%eax
    530b:	eb 00                	jmp    530d <__sprintf_chk@plt+0x62d>
    530d:	00 48 8b             	add    %cl,-0x75(%rax)
    5310:	05 4b d4 01 00       	add    $0x1d44b,%eax
    5315:	41 83 ed 01          	sub    $0x1,%r13d
    5319:	49 89 c4             	mov    %rax,%r12
    531c:	0f 4d 85 d0 00 00 49 	cmovge 0x490000d0(%rbp),%eax
    5323:	89 c4                	mov    %eax,%esp
    5325:	48 85 c0             	test   %rax,%rax
    5328:	0f 84 13 01 00 00    	je     5441 <__sprintf_chk@plt+0x761>
    532e:	49 bd 00 00 48 c1 ef 	movabs $0x80000aefc1480000,%r13
    5335:	0a 00 80 
    5338:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    533d:	eb 43                	jmp    5382 <__sprintf_chk@plt+0x6a2>
    533f:	90                   	nop
    5340:	41 0f b6 54 24 10    	movzbl 0x10(%r12),%edx
    5346:	49                   	rex.WB
    5347:	49 c1 e5 22          	shl    $0x22,%r13
    534b:	e8 70 c9 00 00       	call   11cc0 <_obstack_memory_used@@Base+0x1510>
    5350:	49 8b 3c 24          	mov    (%r12),%rdi
    5354:	e8 27 f3 ff ff       	call   4680 <free@plt>
    5359:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    535e:	e8 1d f3 ff ff       	call   4680 <free@plt>
    5363:	4c 89 e7             	mov    %r12,%rdi
    5366:	e8 15 f3 ff ff       	call   4680 <free@plt>
    536b:	4c 8b 25 ee d3 01 00 	mov    0x1d3ee(%rip),%r12        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    5372:	c6 05 ef d3 01 00 01 	movb   $0x1,0x1d3ef(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
    5379:	4d 85 e4             	test   %r12,%r12
    537c:	0f 84 bf 00 00 00    	je     5441 <__sprintf_chk@plt+0x761>
    5382:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    5387:	48 8b 1d aa d3 01 00 	mov    0x1d3aa(%rip),%rbx        # 22738 <obstack_alloc_failed_handler@@Base+0x698>
    538e:	49 8b 3c 24          	mov    (%r12),%rdi
    5392:	48 89 05 c7 d3 01 00 	mov    %rax,0x1d3c7(%rip)        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    5399:	48 85 db             	test   %rbx,%rbx
    539c:	74 a2                	je     5340 <__sprintf_chk@plt+0x660>
    539e:	48 85 ff             	test   %rdi,%rdi
    53a1:	48 c1 e0 26          	shl    $0x26,%rax
    53a5:	05 4e d3 01 00       	add    $0x1d34e,%eax
    53aa:	48 89 c2             	mov    %rax,%rdx
    53ad:	48 2b 15 3c d3 01 00 	sub    0x1d33c(%rip),%rdx        # 226f0 <obstack_alloc_failed_handler@@Base+0x650>
    53b4:	48 83 fa 0f          	cmp    $0xf,%rdx
    53b8:	0f 86 17 16 00 00    	jbe    69d5 <__sprintf_chk@plt+0x1cf5>
    53be:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    53c2:	4d 0f af de          	imul   %r14,%r11
    53c6:	00 4c 89 4d          	add    %cl,0x4d(%rcx,%rcx,4)
    53ca:	89 c2                	mov    %eax,%edx
    53cc:	df 48 89             	fisttps -0x77(%rax)
    53cf:	49 21 f1             	and    %rsi,%r9
    53d2:	48 09 c8             	or     %rcx,%rax
    53d5:	8b 50 f0             	mov    -0x10(%rax),%edx
    53d8:	48 8b 40 f8          	mov    -0x8(%rax),%rax
    53dc:	48 e9 9b fe ff ff    	rex.W jmp 527d <__sprintf_chk@plt+0x59d>
    53e2:	4d 29 ed             	sub    %r13,%r13
    53e5:	0f 8f d8 01 00 00    	jg     55c3 <__sprintf_chk@plt+0x8e3>
    53eb:	7f 09                	jg     53f6 <__sprintf_chk@plt+0x716>
    53ed:	4d 01 c3             	add    %r8,%r11
    53f0:	c7                   	(bad)  
    53f1:	48 85 c0             	test   %rax,%rax
    53f4:	0f 4d 31             	cmovge (%rcx),%esi
    53f7:	ea                   	(bad)  
    53f8:	00 00                	add    %al,(%rax)
    53fa:	48                   	rex.W
    53fb:	49 c1 e8 0f          	shr    $0xf,%r8
    53ff:	49 21 fb             	and    %rdi,%r11
    5402:	20 01                	and    %al,(%rcx)
    5404:	48 83 38 4d          	cmpq   $0x4d,(%rax)
    5408:	39 df                	cmp    %ebx,%edi
    540a:	f7 08 00 00 4c 89    	testl  $0x894c0000,(%rax)
    5410:	ff                   	(bad)  
    5411:	e8 6a f2 0f 8f       	call   ffffffff8f104680 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e25e0>
    5416:	04 fe                	add    $0xfe,%al
    5418:	ff                   	(bad)  
    5419:	ff 02                	incl   (%rdx)
    541b:	00 00                	add    %al,(%rax)
    541d:	ff                   	(bad)  
    541e:	ff 49 8b             	decl   -0x75(%rcx)
    5421:	7c 24                	jl     5447 <__sprintf_chk@plt+0x767>
    5423:	08 e8                	or     %ch,%al
    5425:	57                   	push   %rdi
    5426:	f2 ff                	repnz (bad) 
    5428:	ff 4c 89 e7          	decl   -0x19(%rcx,%rcx,4)
    542c:	e8 4f f2 ff ff       	call   4680 <free@plt>
    5431:	4c 8b 25 28 d3 49 29 	mov    0x2949d328(%rip),%r12        # 294a2760 <obstack_alloc_failed_handler@@Base+0x294806c0>
    5438:	c7 85 e4 48 31 c6 ff 	movl   $0x80ffffff,-0x39ceb71c(%rbp)
    543f:	ff ff 80 
    5442:	3d c0 ce 01 00       	cmp    $0x1cec0,%eax
    5447:	00 74 0d 80          	add    %dh,-0x80(%rbp,%rcx,1)
    544b:	3d af 48 d1 e9       	cmp    $0xe9d148af,%eax
    5450:	00 49 89             	add    %cl,-0x77(%rcx)
    5453:	ff 0a                	decl   (%rdx)
    5455:	00 00                	add    %al,(%rax)
    5457:	80 3d 5a d2 01 00 00 	cmpb   $0x0,0x1d25a(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
    545e:	0f 85 33 ff ff ff    	jne    5397 <__sprintf_chk@plt+0x6b7>
    5464:	48 8b 3d cd d2 01 00 	mov    0x1d2cd(%rip),%rdi        # 22738 <obstack_alloc_failed_handler@@Base+0x698>
    546b:	48 85 ff             	test   %rdi,%rdi
    546e:	74 10                	je     5480 <__sprintf_chk@plt+0x7a0>
    5470:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    5475:	0f 48 39             	cmovs  (%rcx),%edi
    5478:	f7 00 49 0f 85 ce    	testl  $0xce850f49,(%rax)
    547e:	01 00                	add    %eax,(%rax)
    5480:	00 05 e6 d2 01 00    	add    %al,0x1d2e6(%rip)        # 2276c <obstack_alloc_failed_handler@@Base+0x6cc>
    5486:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    548b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5492:	00 00 
    5494:	0f 85 eb 15 00 00    	jne    6a85 <__sprintf_chk@plt+0x1da5>
    549a:	48 83 c4 78          	add    $0x78,%rsp
    549e:	5b                   	pop    %rbx
    549f:	5d                   	pop    %rbp
    54a0:	41 5c                	pop    %r12
    54a2:	41 5d                	pop    %r13
    54a4:	41 5e                	pop    %r14
    54a6:	41 5f                	pop    %r15
    54a8:	c3                   	ret    
    54a9:	48 89 05 d0 4d 0f af 	mov    %rax,-0x50f0b230(%rip)        # ffffffffaf0fa280 <obstack_alloc_failed_handler@@Base+0xffffffffaf0d81e0>
    54b0:	fd                   	std    
    54b1:	0f 84 44 fe ff ff    	je     52fb <__sprintf_chk@plt+0x61b>
    54b7:	ef                   	out    %eax,(%dx)
    54b8:	e8 49 c1 ea 49       	call   49eb1606 <obstack_alloc_failed_handler@@Base+0x49e8f566>
    54bd:	31 f9                	xor    %edi,%ecx
    54bf:	48 ff c7             	inc    %rdi
    54c2:	00 00                	add    %al,(%rax)
    54c4:	48 8d 35 ed 6d 01 00 	lea    0x16ded(%rip),%rsi        # 1c2b8 <_obstack_memory_used@@Base+0xbb08>
    54cb:	49 89 c4             	mov    %rax,%r12
    54ce:	e8 8d f3 ff ff       	call   4860 <dcgettext@plt>
    54d3:	4c 89 e1             	mov    %r12,%rcx
    54d6:	31 f6                	xor    %esi,%esi
    54d8:	31 ff                	xor    %edi,%edi
    54da:	48 89 c2             	mov    %rax,%rdx
    54dd:	31 c0                	xor    %eax,%eax
    54df:	e8 bc f6 ff ff       	call   4ba0 <error@plt>
    54e4:	e9 42 fa ff ff       	jmp    4f2b <__sprintf_chk@plt+0x24b>
    54e9:	48 89 c7             	mov    %rax,%rdi
    54ec:	e8 5f 44 00 00       	call   9950 <__sprintf_chk@plt+0x4c70>
    54f1:	84 c0                	test   %al,%al
    54f3:	eb 67                	jmp    555c <__sprintf_chk@plt+0x87c>
    54f5:	49 c1 e6 09          	shl    $0x9,%r14
    54f9:	4d 0f af e4          	imul   %r12,%r12
    54fd:	af                   	scas   %es:(%rdi),%eax
    54fe:	46 00 00             	rex.RX add %r8b,(%rax)
    5501:	31 ff                	xor    %edi,%edi
    5503:	ba 05 00 00 00       	mov    $0x5,%edx
    5508:	48 8d 35 f1 6d 01 00 	lea    0x16df1(%rip),%rsi        # 1c300 <_obstack_memory_used@@Base+0xbb50>
    550f:	49 89 c4             	mov    %rax,%r12
    5512:	e8 49 f3 49 39       	call   394a4860 <obstack_alloc_failed_handler@@Base+0x394827c0>
    5517:	fe 89 e1 0f 8c 29    	decb   0x298c0fe1(%rcx)
    551d:	ff                   	(bad)  
    551e:	ff                   	(bad)  
    551f:	ff c2                	inc    %edx
    5521:	31 c0                	xor    %eax,%eax
    5523:	e8 78 f6 ff 49       	call   4a004ba0 <obstack_alloc_failed_handler@@Base+0x49fe2b00>
    5528:	0f 85 10 03 00 00    	jne    583e <__sprintf_chk@plt+0xb5e>
    552e:	31 48 0f             	xor    %ecx,0xf(%rax)
    5531:	af                   	scas   %es:(%rdi),%eax
    5532:	d0 00                	rolb   (%rax)
    5534:	0f 85 38 fe ff ff    	jne    5372 <__sprintf_chk@plt+0x692>
    553a:	89 05 80 0f 85 51    	mov    %eax,0x51850f80(%rip)        # 518564c0 <obstack_alloc_failed_handler@@Base+0x51834420>
    5540:	fd                   	std    
    5541:	ff                   	(bad)  
    5542:	ff 07                	incl   (%rdi)
    5544:	0f 85 91 fb ff ff    	jne    50db <__sprintf_chk@plt+0x3fb>
    554a:	48 85 c0             	test   %rax,%rax
    554d:	0f 84 60 fe ff ff    	je     53b3 <__sprintf_chk@plt+0x6d3>
    5553:	0f 8f e0 02 00 00    	jg     5839 <__sprintf_chk@plt+0xb59>
    5559:	71 0c                	jno    5567 <__sprintf_chk@plt+0x887>
    555b:	89 f2                	mov    %esi,%edx
    555d:	f7 d2                	not    %edx
    555f:	83 e2 01             	and    $0x1,%edx
    5562:	31 f2                	xor    %esi,%edx
    5564:	89 51 0c             	mov    %edx,0xc(%rcx)
    5567:	e9 6f fb ff ff       	jmp    50db <__sprintf_chk@plt+0x3fb>
    556c:	48 8b 05 45 ca 01 00 	mov    0x1ca45(%rip),%rax        # 21fb8 <_obstack_memory_used@@Base+0x11808>
    5573:	48 8b 00             	mov    (%rax),%rax
    5576:	48 89 4c 0f af       	mov    %rcx,-0x51(%rdi,%rcx,1)
    557b:	f1                   	int1   
    557c:	74 bf                	je     553d <__sprintf_chk@plt+0x85d>
    557e:	ff 49 c1             	decl   -0x3f(%rcx)
    5581:	ed                   	in     (%dx),%eax
    5582:	3e 03 48 21          	ds add 0x21(%rax),%ecx
    5586:	f3 48 8d 0d 02 0f 85 	repz lea 0x7c850f02(%rip),%rcx        # 7c856490 <obstack_alloc_failed_handler@@Base+0x7c8343f0>
    558d:	7c 
    558e:	fe                   	(bad)  
    558f:	ff                   	(bad)  
    5590:	ff 31                	push   (%rcx)
    5592:	f7 00 00 48 8d 15    	testl  $0x158d4800,(%rax)
    5598:	4c 89 de             	mov    %r11,%rsi
    559b:	eb 32                	jmp    55cf <__sprintf_chk@plt+0x8ef>
    559d:	0f 84 d5 02 00 00    	je     5878 <__sprintf_chk@plt+0xb98>
    55a3:	48 8b 30             	mov    (%rax),%rsi
    55a6:	e8 55 4d 09 ed       	call   ffffffffed09a300 <obstack_alloc_failed_handler@@Base+0xffffffffed078260>
    55ab:	48                   	rex.W
    55ac:	49 c1 0f 84          	rorq   $0x84,(%r15)
    55b0:	77 01                	ja     55b3 <__sprintf_chk@plt+0x8d3>
    55b2:	00 00                	add    %al,(%rax)
    55b4:	81 89 05 65 de 4c 09 	orl    $0xfa40f309,0x4cde6505(%rcx)
    55bb:	f3 40 fa 
    55be:	ff 0f                	decl   (%rdi)
    55c0:	8f                   	(bad)  
    55c1:	35 01 00 00 0f       	xor    $0xf000001,%eax
    55c6:	8c 7e fd             	mov    %?,-0x3(%rsi)
    55c9:	ff                   	(bad)  
    55ca:	ff 31                	push   (%rcx)
    55cc:	01 00                	add    %eax,(%rax)
    55ce:	4c 8d 05 5b 49 ff 4c 	lea    0x4cff495b(%rip),%r8        # 4cff9f30 <obstack_alloc_failed_handler@@Base+0x4cfd7e90>
    55d5:	39 c3                	cmp    %eax,%ebx
    55d7:	15 c4 bd 01 00       	adc    $0x1bdc4,%eax
    55dc:	48 8d 3d f5 46 01 00 	lea    0x146f5(%rip),%rdi        # 19cd8 <_obstack_memory_used@@Base+0x9528>
    55e3:	48 8b 30             	mov    (%rax),%rsi
    55e6:	48 c1 4d 29 d8       	rorq   $0xd8,0x29(%rbp)
    55eb:	85 a7 01 00 00 4c    	test   %esp,0x4c000001(%rdi)
    55f1:	0f af de             	imul   %esi,%ebx
    55f4:	24 08                	and    $0x8,%al
    55f6:	01 8b 04 81 89 05    	add    %ecx,0x5898104(%rbx)
    55fc:	24 4d                	and    $0x4d,%al
    55fe:	31 f0                	xor    %esi,%eax
    5600:	e9 fb f9 48 21       	jmp    21495000 <obstack_alloc_failed_handler@@Base+0x21472f60>
    5605:	f6 e9                	imul   %cl
    5607:	6d                   	insl   (%dx),%es:(%rdi)
    5608:	fc                   	cld    
    5609:	ff                   	(bad)  
    560a:	ff 90 00 00 00 75    	call   *0x75000000(%rax)
    5610:	df f4                	fcomip %st(4),%st
    5612:	ce                   	(bad)  
    5613:	01 00                	add    %eax,(%rax)
    5615:	90                   	nop
    5616:	00 00                	add    %al,(%rax)
    5618:	00 48 c7             	add    %cl,-0x39(%rax)
    561b:	05 0f 85 08 01       	add    $0x108850f,%eax
    5620:	00 00                	add    %al,(%rax)
    5622:	00 00                	add    %al,(%rax)
    5624:	48 c7 05 49 ca 01 00 	movq   $0x1,0x1ca49(%rip)        # 22078 <_obstack_memory_used@@Base+0x118c8>
    562b:	01 00 00 00 
    562f:	e9 48 4d 89 e0       	jmp    ffffffffe089a37c <obstack_alloc_failed_handler@@Base+0xffffffffe08782dc>
    5634:	c6 05 81 cc 0f 85 1f 	movb   $0x1f,-0x7af0337f(%rip)        # ffffffff851022bc <obstack_alloc_failed_handler@@Base+0xffffffff850e021c>
    563b:	fe                   	(bad)  
    563c:	ff                   	(bad)  
    563d:	ff 8f e0 03 00 00    	decl   0x3e0(%rdi)
    5643:	48 f7 49 c1 ea 16 05 	testq  $0xf0516ea,-0x3f(%rcx)
    564a:	0f 
    564b:	8f                   	(bad)  
    564c:	4d 31 cb             	xor    %r9,%r11
    564f:	00 0d ab 30 01 00    	add    %cl,0x130ab(%rip)        # 18700 <_obstack_memory_used@@Base+0x7f50>
    5655:	48 8d 15 e4 c3 01 00 	lea    0x1c3e4(%rip),%rdx        # 21a40 <_obstack_memory_used@@Base+0x11290>
    565c:	48 8d 3d b2 4d 21 c6 	lea    -0x39deb24e(%rip),%rdi        # ffffffffc621a415 <obstack_alloc_failed_handler@@Base+0xffffffffc61f8375>
    5663:	89 df                	mov    %ebx,%edi
    5665:	30 e8                	xor    %ch,%al
    5667:	0f 8c 07 fd ff ff    	jl     5374 <__sprintf_chk@plt+0x694>
    566d:	48 c1 e6 38          	shl    $0x38,%rsi
    5671:	84 d7                	test   %dl,%bh
    5673:	00 00                	add    %al,(%rax)
    5675:	00 7f 77             	add    %bh,0x77(%rdi)
    5678:	cc                   	int3   
    5679:	01 00                	add    %eax,(%rax)
    567b:	49 f7 fd             	idiv   %r13
    567e:	ff                   	(bad)  
    567f:	ff 48 8b             	decl   -0x75(%rax)
    5682:	05 31 c9 01 4c       	add    $0x4c01c931,%eax
    5687:	29 df                	sub    %ebx,%edi
    5689:	0d a2 30 48 f7       	or     $0xf74830a2,%eax
    568e:	fb                   	sti    
    568f:	fd                   	std    
    5690:	a2 00 49 f7 fd 48 8d 	movabs %al,0x94d8d48fdf74900
    5697:	4d 09 
    5699:	d0 01                	rolb   (%rcx)
    569b:	00 48 49             	add    %cl,0x49(%rax)
    569e:	31 d7                	xor    %edx,%edi
    56a0:	46 01 49 c1          	rex.RX add %r9d,-0x3f(%rcx)
    56a4:	e0 29                	loopne 56cf <__sprintf_chk@plt+0x9ef>
    56a6:	e8 49 c7 0f 8c       	call   ffffffff8c101df4 <obstack_alloc_failed_handler@@Base+0xffffffff8c0dfd54>
    56ab:	49 c1 ef 17          	shr    $0x17,%r15
    56af:	30 01                	xor    %al,(%rcx)
    56b1:	00 8b 04 81 89 05    	add    %cl,0x5898104(%rbx)
    56b7:	49 cc                	rex.WB int3 
    56b9:	48 31 4c 39 db       	xor    %rcx,-0x25(%rcx,%rdi,1)
    56be:	4d 02 00             	rex.WRB add (%r8),%r8b
    56c1:	00 05 49 c1 e7 15    	add    %al,0x15e7c149(%rip)        # 15e81810 <obstack_alloc_failed_handler@@Base+0x15e5f770>
    56c7:	48                   	rex.W
    56c8:	4d 75 1a             	rex.WRB jne 56e5 <__sprintf_chk@plt+0xa05>
    56cb:	85 f6                	test   %esi,%esi
    56cd:	0f 84 66 05 00 00    	je     5c39 <__sprintf_chk@plt+0xf59>
    56d3:	48                   	rex.W
    56d4:	49 c1 49 f7 fc       	rorq   $0xfc,-0x9(%r9)
    56d9:	00 48 8d             	add    %cl,-0x73(%rax)
    56dc:	4c 89 d2             	mov    %r10,%rdx
    56df:	01 00                	add    %eax,(%rax)
    56e1:	4c                   	rex.WR
    56e2:	49 c7 c3 e9 53 fe ff 	mov    $0xfffffffffffe53e9,%r11
    56e9:	ff                   	(bad)  
    56ea:	3d 08 46 01 00       	cmp    $0x14608,%eax
    56ef:	e8 0c 48 49 31       	call   31499f00 <obstack_alloc_failed_handler@@Base+0x31477e60>
    56f4:	d3 8d 49 85 d8 01    	rorl   %cl,0x1d88549(%rbp)
    56fa:	00 e9                	add    %ch,%cl
    56fc:	69 fd ff ff 01 0f    	imul   $0xf01ffff,%ebp,%edi
    5702:	84 32                	test   %dh,(%rdx)
    5704:	05 00 00 31 c0       	add    $0xc0310000,%eax
    5709:	83 fa 02             	cmp    $0x2,%edx
    570c:	0f 85 2c 05 00 0f    	jne    f005c3e <obstack_alloc_failed_handler@@Base+0xefe3b9e>
    5712:	8c 62 fc             	mov    %fs,-0x4(%rdx)
    5715:	ff                   	(bad)  
    5716:	ff 09                	decl   (%rcx)
    5718:	d8 f0                	fdiv   %st(0),%st
    571a:	48 c7 c0 70 fd ff ff 	mov    $0xfffffffffffffd70,%rax
    5721:	0f b6 c0             	movzbl %al,%eax
    5724:	e9 15 05 00 00       	jmp    5c3e <__sprintf_chk@plt+0xf5e>
    5729:	bf 10 00 00 0f       	mov    $0xf000010,%edi
    572e:	84 ad 02 00 0f 84    	test   %ch,-0x7bf0fffe(%rbp)
    5734:	3c 03                	cmp    $0x3,%al
    5736:	00 00                	add    %al,(%rax)
    5738:	48                   	rex.W
    5739:	49 21 cd             	and    %rcx,%r13
    573c:	12 49 c1             	adc    -0x3f(%rcx),%cl
    573f:	e7 0b                	out    %eax,$0xb
    5741:	8b 15 41 cd 01 4d    	mov    0x4d01cd41(%rip),%edx        # 4d022488 <obstack_alloc_failed_handler@@Base+0x4d0003e8>
    5747:	89 dd                	mov    %ebx,%ebp
    5749:	05 3a cd 01 00       	add    $0x1cd3a,%eax
    574e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    5752:	e9 a9 f8 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5757:	c6 05 ec cf 01 00 01 	movb   $0x1,0x1cfec(%rip)        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    575e:	e9 9d f8 4c 89       	jmp    ffffffff894d5000 <obstack_alloc_failed_handler@@Base+0xffffffff894b2f60>
    5763:	f7 fb                	idiv   %ebx
    5765:	05 f7 44 01 00       	add    $0x144f7,%eax
    576a:	c7 05 98 cb 01 00 00 	movl   $0x0,0x1cb98(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5771:	00 00 00 
    5774:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5779:	e9 82 48 29 d3       	jmp    ffffffffd329a000 <obstack_alloc_failed_handler@@Base+0xffffffffd3277f60>
    577e:	c1 e9 0d             	shr    $0xd,%ecx
    5781:	ff                   	(bad)  
    5782:	ff                   	(bad)  
    5783:	ff 34 48             	push   (%rax,%rcx,2)
    5786:	29 fa                	sub    %edi,%edx
    5788:	4d 31 c5             	xor    %r8,%r13
    578b:	00 4c 8d 05          	add    %cl,0x5(%rbp,%rcx,4)
    578f:	9d                   	popf   
    5790:	48 31 d7             	xor    %rdx,%rdi
    5793:	48 8d 15 86 bb 01 00 	lea    0x1bb86(%rip),%rdx        # 21320 <_obstack_memory_used@@Base+0x10b70>
    579a:	48 8d 0f             	lea    (%rdi),%rcx
    579d:	84 87 03 00 00 8b    	test   %al,-0x74fffffd(%rdi)
    57a3:	30 e8                	xor    %ch,%al
    57a5:	57                   	push   %rdi
    57a6:	4d 29 f8             	sub    %r15,%r8
    57a9:	48 8d 0f             	lea    (%rdi),%rcx
    57ac:	8c 98 02 00 00 04    	mov    %ds,0x4000002(%rax)
    57b2:	81 89 05 53 4d 0f af 	orl    $0xf842d0af,0xf4d5305(%rcx)
    57b9:	d0 42 f8 
    57bc:	ff                   	(bad)  
    57bd:	ff c7                	inc    %edi
    57bf:	05 3c cb 01 00       	add    $0x1cb3c,%eax
    57c4:	02 00                	add    (%rax),%al
    57c6:	00 00                	add    %al,(%rax)
    57c8:	e9 33 f8 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    57cd:	c7 05 6d cf 01 00 4c 	movl   $0x84de294c,0x1cf6d(%rip)        # 22744 <obstack_alloc_failed_handler@@Base+0x6a4>
    57d4:	29 de 84 
    57d7:	da fe                	(bad)  
    57d9:	ff                   	(bad)  
    57da:	ff 48 f7             	decl   -0x9(%rax)
    57dd:	f8                   	clc    
    57de:	10 d5                	adc    %dl,%ch
    57e0:	c7 01 00 48 8b 30    	movl   $0x308b4800,(%rcx)
    57e6:	48 85 49 c7          	test   %rcx,-0x39(%rcx)
    57ea:	c3                   	ret    
    57eb:	80 fc ff             	cmp    $0xff,%ah
    57ee:	ff 48 8d             	decl   -0x73(%rax)
    57f1:	0d 4a 2f 4c 01       	or     $0x14c2f4a,%eax
    57f6:	e2 4c                	loop   5844 <__sprintf_chk@plt+0xb64>
    57f8:	09 f0                	or     %esi,%eax
    57fa:	4a 00 00             	rex.WX add %al,(%rax)
    57fd:	48 8d 15 bc 74 b9 00 	lea    0xb974bc(%rip),%rdx        # b9ccc0 <obstack_alloc_failed_handler@@Base+0xb7ac20>
    5804:	48 e9 c6 fd ff ff    	rex.W jmp 55d0 <__sprintf_chk@plt+0x8f0>
    580a:	49 09 ce             	or     %rcx,%r14
    580d:	47 00 49 c7          	rex.RXB add %r9b,-0x39(%r9)
    5811:	c1 0d ff ff ff 00 8b 	rorl   $0x8b,0xffffff(%rip)        # 1005817 <obstack_alloc_failed_handler@@Base+0xfe3777>
    5818:	04 81                	add    $0x81,%al
    581a:	83 f8 01             	cmp    $0x1,%eax
    581d:	49 f7 fd             	idiv   %r13
    5820:	03 00                	add    (%rax),%eax
    5822:	00 48 0f             	add    %cl,0xf(%rax)
    5825:	85 b5 fd ff ff 00    	test   %esi,0xfffffd(%rbp)
    582b:	00 c6                	add    %al,%dh
    582d:	05 d5 ca 01 00       	add    $0x1cad5,%eax
    5832:	00 e9                	add    %ch,%cl
    5834:	c8 4d 39 c2          	enter  $0x394d,$0xc2
    5838:	c1 ee 39             	shr    $0x39,%esi
    583b:	49 29 f1             	sub    %rsi,%r9
    583e:	00 48 39             	add    %cl,0x39(%rax)
    5841:	fa                   	cli    
    5842:	e8 89 41 00 00       	call   99d0 <__sprintf_chk@plt+0x4cf0>
    5847:	85 c0                	test   %eax,%eax
    5849:	0f 85 ca 11 00 00    	jne    6a19 <__sprintf_chk@plt+0x1d39>
    584f:	8b 05 63 ca 01 00    	mov    0x1ca63(%rip),%eax        # 222b8 <obstack_alloc_failed_handler@@Base+0x218>
    5855:	89 05 4d 21 dd 00    	mov    %eax,0xdd214d(%rip)        # dd79a8 <obstack_alloc_failed_handler@@Base+0xdb5908>
    585b:	48 8b 05 4e ca 01 00 	mov    0x1ca4e(%rip),%rax        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
    5862:	48 89 05 0f c8 01 00 	mov    %rax,0x1c80f(%rip)        # 22078 <_obstack_memory_used@@Base+0x118c8>
    5869:	e9 92 f7 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    586e:	c6 05 b3 db 01 00 01 	movb   $0x1,0x1dbb3(%rip)        # 23428 <obstack_alloc_failed_handler@@Base+0x1388>
    5875:	e9 86 f7 ff 49       	jmp    4a005000 <obstack_alloc_failed_handler@@Base+0x49fe2f60>
    587a:	85 cf                	test   %ecx,%edi
    587c:	49 39 cf             	cmp    %rcx,%r15
    587f:	00 03                	add    %al,(%rbx)
    5881:	00 00                	add    %al,(%rax)
    5883:	00 e9                	add    %ch,%cl
    5885:	77 f7                	ja     587e <__sprintf_chk@plt+0xb9e>
    5887:	ff                   	(bad)  
    5888:	ff 0f                	decl   (%rdi)
    588a:	8f                   	(bad)  
    588b:	8f                   	(bad)  
    588c:	fd                   	std    
    588d:	ff                   	(bad)  
    588e:	ff 48 4d             	decl   0x4d(%rax)
    5891:	21 fe                	and    %edi,%esi
    5893:	e8 b8 0f 84 08       	call   8846850 <obstack_alloc_failed_handler@@Base+0x88247b0>
    5898:	fd                   	std    
    5899:	ff                   	(bad)  
    589a:	ff 85 4d 21 e9 ff    	incl   -0x16deb3(%rbp)
    58a0:	48 8b 05 11 c7 01 00 	mov    0x1c711(%rip),%rax        # 21fb8 <_obstack_memory_used@@Base+0x11808>
    58a7:	48 8b 38             	mov    (%rax),%rdi
    58aa:	e8 01 43 00 00       	call   9bb0 <__sprintf_chk@plt+0x4ed0>
    58af:	ba 05 00 00 00       	mov    $0x5,%edx
    58b4:	48 8d 49 c1          	lea    -0x3f(%rcx),%rcx
    58b8:	e8 3f 4d 85 f2       	call   fffffffff285a5fc <obstack_alloc_failed_handler@@Base+0xfffffffff283855c>
    58bd:	48 89 c3             	mov    %rax,%rbx
    58c0:	e8 9b ef 0f 8f       	call   ffffffff8f104860 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e27c0>
    58c5:	72 01                	jb     58c8 <__sprintf_chk@plt+0xbe8>
    58c7:	00 00                	add    %al,(%rax)
    58c9:	f6 bf 02 00 00 00    	idivb  0x2(%rdi)
    58cf:	48 e9 4b fd ff ff    	rex.W jmp 5620 <__sprintf_chk@plt+0x940>
    58d5:	e3 43                	jrcxz  591a <__sprintf_chk@plt+0xc3a>
    58d7:	01 49 c1             	add    %ecx,-0x3f(%rcx)
    58da:	e3 04                	jrcxz  58e0 <__sprintf_chk@plt+0xc00>
    58dc:	4c 29 e8             	sub    %r13,%rax
    58df:	48 c1 ef 25          	shr    $0x25,%rdi
    58e3:	fb                   	sti    
    58e4:	48 c7                	rex.W (bad) 
    58e6:	49 89 fd             	mov    %rdi,%r13
    58e9:	ff                   	(bad)  
    58ea:	ff 44 24 08          	incl   0x8(%rsp)
    58ee:	01 e9                	add    %ebp,%ecx
    58f0:	0f 84 8f fe ff ff    	je     5785 <__sprintf_chk@plt+0xaa5>
    58f6:	22 db                	and    %bl,%bl
    58f8:	01 00                	add    %eax,(%rax)
    58fa:	02 00                	add    (%rax),%al
    58fc:	00 00                	add    %al,(%rax)
    58fe:	e9 49 0f af cc       	jmp    ffffffffccaf684c <obstack_alloc_failed_handler@@Base+0xffffffffccad47ac>
    5903:	c7 05 17 db 01 00 0f 	movl   $0x8f0f850f,0x1db17(%rip)        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    590a:	85 0f 8f 
    590d:	4c 03 00             	add    (%rax),%r8
    5910:	00 01                	add    %al,(%rcx)
    5912:	e9 48 ff c2 ff       	jmp    ffffffffffc3585f <obstack_alloc_failed_handler@@Base+0xffffffffffc137bf>
    5917:	c6 05 4d 31 c6 39 e0 	movb   $0xe0,0x39c6314d(%rip)        # 39c68a6b <obstack_alloc_failed_handler@@Base+0x39c469cb>
    591e:	e9 dd f6 49 c1       	jmp    ffffffffc14a5000 <obstack_alloc_failed_handler@@Base+0xffffffffc1482f60>
    5923:	ed                   	in     (%dx),%eax
    5924:	23 73 cb             	and    -0x35(%rbx),%esi
    5927:	01 00                	add    %eax,(%rax)
    5929:	4d 31 ef             	xor    %r13,%r15
    592c:	fd                   	std    
    592d:	ff                   	(bad)  
    592e:	ff c6                	inc    %esi
    5930:	05 86 49 c7 c2       	add    $0xc2c74986,%eax
    5935:	9f                   	lahf   
    5936:	fe                   	(bad)  
    5937:	ff                   	(bad)  
    5938:	ff                   	(bad)  
    5939:	eb e8                	jmp    5923 <__sprintf_chk@plt+0xc43>
    593b:	c7 05 bf 0f 8c 6b fd 	movl   $0xfffffffd,0x6b8c0fbf(%rip)        # 6b8c6904 <obstack_alloc_failed_handler@@Base+0x6b8a4864>
    5942:	ff ff ff 
    5945:	e9 b6 f6 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    594a:	c7 05 b8 49 31 c5 c2 	movl   $0xfffd39c2,-0x3aceb648(%rip)        # ffffffffc531a30c <obstack_alloc_failed_handler@@Base+0xffffffffc52f826c>
    5951:	39 fd ff 
    5954:	48 c7 c1 e8 fd ff ff 	mov    $0xfffffffffffffde8,%rcx
    595b:	01 0f                	add    %ecx,(%rdi)
    595d:	8c 53 03             	mov    %ss,0x3(%rbx)
    5960:	00 00                	add    %al,(%rax)
    5962:	a2 c9 01 00 04 00 00 	movabs %al,0xe9000000040001c9
    5969:	00 e9 
    596b:	91                   	xchg   %eax,%ecx
    596c:	f6 48 c7 c3          	testb  $0xc3,-0x39(%rax)
    5970:	b1 00                	mov    $0x0,%cl
    5972:	00 00                	add    %al,(%rax)
    5974:	31 c4                	xor    %eax,%esp
    5976:	e9 85 f6 4c 0f       	jmp    f4d5000 <obstack_alloc_failed_handler@@Base+0xf4b2f60>
    597b:	8c 51 fc             	mov    %ss,-0x4(%rcx)
    597e:	ff                   	(bad)  
    597f:	ff 00                	incl   (%rax)
    5981:	b0 00                	mov    $0x0,%al
    5983:	00 00                	add    %al,(%rax)
    5985:	c7 05 e1 ca 01 00 b0 	movl   $0xe90000b0,0x1cae1(%rip)        # 22470 <obstack_alloc_failed_handler@@Base+0x3d0>
    598c:	00 00 e9 
    598f:	86 00                	xchg   %al,(%rax)
    5991:	00 0f                	add    %cl,(%rdi)
    5993:	8c 9d 02 00 00 00    	mov    %ds,0x2(%rbp)
    5999:	00 48 c7             	add    %cl,-0x39(%rax)
    599c:	05 49 c7 c2 cd       	add    $0xcdc2c749,%eax
    59a1:	00 00                	add    %al,(%rax)
    59a3:	00 0f                	add    %cl,(%rdi)
    59a5:	8c cb                	mov    %cs,%ebx
    59a7:	fc                   	cld    
    59a8:	ff                   	(bad)  
    59a9:	ff c7                	inc    %edi
    59ab:	05 0f 85 d3 01       	add    $0x1d3850f,%eax
    59b0:	00 00                	add    %al,(%rax)
    59b2:	00 00                	add    %al,(%rax)
    59b4:	c6 05 ca c6 01 00 00 	movb   $0x0,0x1c6ca(%rip)        # 22085 <_obstack_memory_used@@Base+0x118d5>
    59bb:	e9 40 f6 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    59c0:	83 3d 45 4d 39 fc 00 	cmpl   $0x0,-0x3c6b2bb(%rip)        # fffffffffc39a70c <obstack_alloc_failed_handler@@Base+0xfffffffffc37866c>
    59c7:	c7 05 c7 ca 01 00 02 	movl   $0x49000002,0x1cac7(%rip)        # 22498 <obstack_alloc_failed_handler@@Base+0x3f8>
    59ce:	00 00 49 
    59d1:	29 db                	sub    %ebx,%ebx
    59d3:	4c 39 db             	cmp    %r11,%rbx
    59d6:	00 ff                	add    %bh,%bh
    59d8:	ff                   	(bad)  
    59d9:	ff                   	(bad)  
    59da:	ff 0f                	decl   (%rdi)
    59dc:	84 a4 0a 00 00 c6 05 	test   %ah,0x5c60000(%rdx,%rcx,1)
    59e3:	28 c9                	sub    %cl,%cl
    59e5:	01 00                	add    %eax,(%rax)
    59e7:	00 c6                	add    %al,%dh
    59e9:	05 19 c9 01 00       	add    $0x1c919,%eax
    59ee:	00 c6                	add    %al,%dh
    59f0:	05 f2 cb 01 00       	add    $0x1cbf2,%eax
    59f5:	00 c6                	add    %al,%dh
    59f7:	44 24 48             	rex.R and $0x48,%al
    59fa:	0f af db             	imul   %ebx,%ebx
    59fd:	f6 ff                	idiv   %bh
    59ff:	ff c6                	inc    %esi
    5a01:	05 3a cd 01 00       	add    $0x1cd3a,%eax
    5a06:	01 e9                	add    %ebp,%ecx
    5a08:	f4                   	hlt    
    5a09:	f5                   	cmc    
    5a0a:	ff                   	(bad)  
    5a0b:	ff c7                	inc    %edi
    5a0d:	05 49 c7 c6 01       	add    $0x1c6c749,%eax
    5a12:	ff                   	(bad)  
    5a13:	ff                   	(bad)  
    5a14:	ff                   	(bad)  
    5a15:	ff                   	(bad)  
    5a16:	e9 e5 f5 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5a1b:	c7 05 9b c8 01 00 0f 	movl   $0x394d840f,0x1c89b(%rip)        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    5a22:	84 4d 39 
    5a25:	ec                   	in     (%dx),%al
    5a26:	ff f5                	push   %rbp
    5a28:	ff                   	(bad)  
    5a29:	ff c7                	inc    %edi
    5a2b:	05 64 ca 01 00       	add    $0x1ca64,%eax
    5a30:	02 00                	add    (%rax),%al
    5a32:	00 00                	add    %al,(%rax)
    5a34:	e9 c7 f5 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5a39:	c6 05 c0 c8 48 09 c8 	movb   $0xc8,0x948c8c0(%rip)        # 9492300 <obstack_alloc_failed_handler@@Base+0x9470260>
    5a40:	e9 bb f5 ff 4c       	jmp    4d005000 <obstack_alloc_failed_handler@@Base+0x4cfe2f60>
    5a45:	29 cf                	sub    %ecx,%edi
    5a47:	d5                   	(bad)  
    5a48:	d9 01                	flds   (%rcx)
    5a4a:	00 01                	add    %al,(%rcx)
    5a4c:	00 00                	add    %al,(%rax)
    5a4e:	00 c6                	add    %al,%dh
    5a50:	44 24 08             	rex.R and $0x8,%al
    5a53:	49 85 c8             	test   %rcx,%r8
    5a56:	52                   	push   %rdx
    5a57:	49 ff c1             	inc    %r9
    5a5a:	05 c1 d9 01 00       	add    $0x1d9c1,%eax
    5a5f:	ff                   	(bad)  
    5a60:	ff 48 21             	decl   0x21(%rax)
    5a63:	c6 44 24 08 01       	movb   $0x1,0x8(%rsp)
    5a68:	e9 4c 29 fa ff       	jmp    fffffffffffa83b9 <obstack_alloc_failed_handler@@Base+0xfffffffffff86319>
    5a6d:	31 ff                	xor    %edi,%edi
    5a6f:	ba 4c 0f 0f 84       	mov    $0x840f0f4c,%edx
    5a74:	8e fd                	mov    %ebp,%?
    5a76:	ff                   	(bad)  
    5a77:	ff 0f                	decl   (%rdi)
    5a79:	84 13                	test   %dl,(%rbx)
    5a7b:	fe                   	(bad)  
    5a7c:	ff                   	(bad)  
    5a7d:	ff                   	(bad)  
    5a7e:	ff                   	(bad)  
    5a7f:	ff 48 8b             	decl   -0x75(%rax)
    5a82:	54                   	push   %rsp
    5a83:	24 18                	and    $0x18,%al
    5a85:	31 f6                	xor    %esi,%esi
    5a87:	48 8d 0d 2f 41 0f 8f 	lea    -0x70f0bed1(%rip),%rcx        # ffffffff8f0f9bbd <obstack_alloc_failed_handler@@Base+0xffffffff8f0d7b1d>
    5a8e:	f9                   	stc    
    5a8f:	fc                   	cld    
    5a90:	49 0f af e9          	imul   %r9,%rbp
    5a94:	62                   	(bad)  
    5a95:	fe                   	(bad)  
    5a96:	ff                   	(bad)  
    5a97:	ff 01                	incl   (%rcx)
    5a99:	00 48 31             	add    %cl,0x31(%rax)
    5a9c:	df 4c 89 0f          	fisttps 0xf(%rcx,%rcx,4)
    5aa0:	84 40 02             	test   %al,0x2(%rax)
    5aa3:	00 48 29             	add    %cl,0x29(%rax)
    5aa6:	cf                   	iret   
    5aa7:	f0 00 00             	lock add %al,(%rax)
    5aaa:	85 c0                	test   %eax,%eax
    5aac:	89 44 24 0f          	mov    %eax,0xf(%rsp)
    5ab0:	8c c1                	mov    %es,%ecx
    5ab2:	02 00                	add    (%rax),%al
    5ab4:	00 00                	add    %al,(%rax)
    5ab6:	48 c1 e7 10          	shl    $0x10,%rdi
    5aba:	d2 8b 49 ff c7 4c    	rorb   %cl,0x4cc7ff49(%rbx)
    5ac0:	8b 44 24 0f          	mov    0xf(%rsp),%eax
    5ac4:	84 e5                	test   %ah,%ch
    5ac6:	02 00                	add    (%rax),%al
    5ac8:	00 0f                	add    %cl,(%rdi)
    5aca:	84 b4 fe ff ff 00 83 	test   %dh,-0x7cff0001(%rsi,%rdi,8)
    5ad1:	48 f7 ff             	idiv   %rdi
    5ad4:	fe 48 c1             	decb   -0x3f(%rax)
    5ad7:	e3 35                	jrcxz  5b0e <__sprintf_chk@plt+0xe2e>
    5ad9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    5adf:	e9 d1 0f 85 61       	jmp    61856ab5 <obstack_alloc_failed_handler@@Base+0x61834a15>
    5ae4:	03 00                	add    (%rax),%eax
    5ae6:	00 00                	add    %al,(%rax)
    5ae8:	00 00                	add    %al,(%rax)
    5aea:	4c 85 49 01          	test   %r9,0x1(%rcx)
    5aee:	c1 44 0f 8c c2       	roll   $0xc2,-0x74(%rdi,%rcx,1)
    5af3:	02 00                	add    (%rax),%al
    5af5:	00 ff                	add    %bh,%bh
    5af7:	ff c7                	inc    %edi
    5af9:	05 02 c8 01 00       	add    $0x1c802,%eax
    5afe:	0f 48 c1             	cmovs  %ecx,%eax
    5b01:	e1 1e                	loope  5b21 <__sprintf_chk@plt+0xe41>
    5b03:	ff f4                	push   %rsp
    5b05:	ff                   	(bad)  
    5b06:	ff c6                	inc    %esi
    5b08:	05 aa cb 4d 31       	add    $0x314dcbaa,%eax
    5b0d:	f0 e9 ed f4 ff ff    	lock jmp 5000 <__sprintf_chk@plt+0x320>
    5b13:	c7 05 ef c7 01 00 02 	movl   $0x2,0x1c7ef(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5b1a:	00 00 00 
    5b1d:	e9 de f4 ff 49       	jmp    4a005000 <obstack_alloc_failed_handler@@Base+0x49fe2f60>
    5b22:	89 c4                	mov    %eax,%esp
    5b24:	3d 9b 41 01 00       	cmp    $0x1419b,%eax
    5b29:	49 c1 ec 3f          	shr    $0x3f,%r12
    5b2d:	4d 21 c8             	and    %r9,%r8
    5b30:	3d 8e 49 0f af       	cmp    $0xaf0f498e,%eax
    5b35:	d0 56 83             	rclb   -0x7d(%rsi)
    5b38:	0f 8f b5 03 00 00    	jg     5ef3 <__sprintf_chk@plt+0x1213>
    5b3e:	8f                   	(bad)  
    5b3f:	5a                   	pop    %rdx
    5b40:	ff 48 c1             	decl   -0x3f(%rax)
    5b43:	ee                   	out    %al,(%dx)
    5b44:	0c 48                	or     $0x48,%al
    5b46:	85 d2                	test   %edx,%edx
    5b48:	00 e9                	add    %ch,%cl
    5b4a:	b2 f4                	mov    $0xf4,%dl
    5b4c:	ff                   	(bad)  
    5b4d:	ff 83 3d b7 c7 01    	incl   0x1c7b73d(%rbx)
    5b53:	00 00                	add    %al,(%rax)
    5b55:	49 0f af 4d 09       	imul   0x9(%r13),%rcx
    5b5a:	fa                   	cli    
    5b5b:	d0 05 a7 c7 01 00    	rolb   0x1c7a7(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    5b61:	01 0f                	add    %ecx,(%rdi)
    5b63:	85 93 fc ff ff c1    	test   %edx,-0x3e000004(%rbx)
    5b69:	e6 37                	out    %al,$0x37
    5b6b:	48 8b 05 36 4c 31 c2 	mov    -0x3dceb3ca(%rip),%rax        # ffffffffc231a7a8 <obstack_alloc_failed_handler@@Base+0xffffffffc22f8708>
    5b72:	4c 8d 0d ac 41 01 00 	lea    0x141ac(%rip),%r9        # 19d25 <_obstack_memory_used@@Base+0x9575>
    5b79:	4c 8d 05 b5 74 49 c1 	lea    -0x3eb68b4b(%rip),%r8        # ffffffffc149d035 <obstack_alloc_failed_handler@@Base+0xffffffffc147af95>
    5b80:	e8 16 48 8d 0d       	call   d8da39b <obstack_alloc_failed_handler@@Base+0xd8b82fb>
    5b85:	c0 41 01 00          	rolb   $0x0,0x1(%rcx)
    5b89:	48 8d 15 12 3e e9 3a 	lea    0x3ae93e12(%rip),%rdx        # 3ae999a2 <obstack_alloc_failed_handler@@Base+0x3ae77902>
    5b90:	01 00                	add    %eax,(%rax)
    5b92:	4d 85 4c 31 cb       	test   %r9,-0x35(%r9,%rsi,1)
    5b97:	0f 84 a4 00 00 00    	je     5c41 <__sprintf_chk@plt+0xf61>
    5b9d:	ff 5f 00             	lcall  *0x0(%rdi)
    5ba0:	49 c1 e0 1b          	shl    $0x1b,%r8
    5ba4:	c9                   	leave  
    5ba5:	f0 ff                	lock (bad) 
    5ba7:	ff 0f                	decl   (%rdi)
    5ba9:	8f 48 fe ff          	(bad)  
    5bad:	ff 05 00 00 00 e9    	incl   -0x17000000(%rip)        # ffffffffe9005bb3 <obstack_alloc_failed_handler@@Base+0xffffffffe8fe3b13>
    5bb3:	49 f4                	rex.WB hlt 
    5bb5:	ff                   	(bad)  
    5bb6:	ff 48 8b             	decl   -0x75(%rax)
    5bb9:	05 fa c3 01 00       	add    $0x1c3fa,%eax
    5bbe:	48 8b 38             	mov    (%rax),%rdi
    5bc1:	e8 ca 82 00 00       	call   de90 <__sprintf_chk@plt+0x91b0>
    5bc6:	e9 35 f4 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5bcb:	c7 05 6f 49 c1 ee 0f 	movl   $0x36c840f,-0x113eb691(%rip)        # ffffffffeec1a544 <obstack_alloc_failed_handler@@Base+0xffffffffeebf84a4>
    5bd2:	84 6c 03 
    5bd5:	00 00                	add    %al,(%rax)
    5bd7:	fc                   	cld    
    5bd8:	4d 01 f9             	add    %r15,%r9
    5bdb:	05 a3 c4 01 4d       	add    $0x4d01c4a3,%eax
    5be0:	89 e2                	mov    %esp,%edx
    5be2:	0f 8c 74 fd ff ff    	jl     595c <__sprintf_chk@plt+0xc7c>
    5be8:	d0 c6                	rol    %dh
    5bea:	01 00                	add    %eax,(%rax)
    5bec:	49 31 ff             	xor    %rdi,%r15
    5bef:	00 e9                	add    %ch,%cl
    5bf1:	0b f4                	or     %esp,%esi
    5bf3:	ff                   	(bad)  
    5bf4:	ff c7                	inc    %edi
    5bf6:	05 c1 c6 01 00       	add    $0x1c6c1,%eax
    5bfb:	00 00                	add    %al,(%rax)
    5bfd:	0f 85 7d 02 00 00    	jne    5e80 <__sprintf_chk@plt+0x11a0>
    5c03:	ff c6                	inc    %esi
    5c05:	05 35 cb 01 00       	add    $0x1cb35,%eax
    5c0a:	4c 21 e9             	and    %r13,%rcx
    5c0d:	af                   	scas   %es:(%rdi),%eax
    5c0e:	49 f7 fe             	idiv   %r14
    5c11:	01 00                	add    %eax,(%rax)
    5c13:	0f 48 31             	cmovs  (%rcx),%esi
    5c16:	f3 00 00             	repz add %al,(%rax)
    5c19:	ff 85 c0 0f 84 0a    	incl   0xa840fc0(%rbp)
    5c1f:	fc                   	cld    
    5c20:	ff                   	(bad)  
    5c21:	ff c6                	inc    %esi
    5c23:	49 c7 c4 ea ff ff ff 	mov    $0xffffffffffffffea,%r12
    5c2a:	49 85 f6             	test   %rsi,%r14
    5c2d:	c8 01 48 0f          	enter  $0x4801,$0xf
    5c31:	af                   	scas   %es:(%rdi),%eax
    5c32:	c0 29 f7             	shrb   $0xf7,(%rcx)
    5c35:	ff                   	(bad)  
    5c36:	ff                   	(bad)  
    5c37:	ff                   	(bad)  
    5c38:	ff 48 29             	decl   0x29(%rax)
    5c3b:	ce                   	(bad)  
    5c3c:	00 00                	add    %al,(%rax)
    5c3e:	88 05 a4 c9 01 00    	mov    %al,0x1c9a4(%rip)        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
    5c44:	80 25 9d c9 01 00 48 	andb   $0x48,0x1c99d(%rip)        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
    5c4b:	c1 e3 1e             	shl    $0x1e,%ebx
    5c4e:	ff                   	(bad)  
    5c4f:	ff 0f                	decl   (%rdi)
    5c51:	85 9d 03 00 00 00    	test   %ebx,0x3(%rbp)
    5c57:	0f 49 c1             	cmovns %ecx,%eax
    5c5a:	ed                   	in     (%dx),%eax
    5c5b:	28 29                	sub    %ch,(%rcx)
    5c5d:	e7 83                	out    %eax,$0x83
    5c5f:	7c 24                	jl     5c85 <__sprintf_chk@plt+0xfa5>
    5c61:	10 00                	adc    %al,(%rax)
    5c63:	0f 84 f5 4d 29 e5    	je     ffffffffe529aa5e <obstack_alloc_failed_handler@@Base+0xffffffffe52789be>
    5c69:	ff 49 48             	decl   0x48(%rcx)
    5c6c:	ff c3                	inc    %ebx
    5c6e:	4c 8d 25 7b 2a 01 00 	lea    0x12a7b(%rip),%r12        # 186f0 <_obstack_memory_used@@Base+0x7f40>
    5c75:	0f 84 86 fc ff ff    	je     5901 <__sprintf_chk@plt+0xc21>
    5c7b:	4c 09 ff             	or     %r15,%rdi
    5c7e:	00 00                	add    %al,(%rax)
    5c80:	49 83 c5 49          	add    $0x49,%r13
    5c84:	89 db                	mov    %ebx,%ebx
    5c86:	00 00                	add    %al,(%rax)
    5c88:	0f 84 7b 01 00 00    	je     5e09 <__sprintf_chk@plt+0x1129>
    5c8e:	0f 8c ea fc ff ff    	jl     597e <__sprintf_chk@plt+0xc9e>
    5c94:	85 c0                	test   %eax,%eax
    5c96:	0f 85 5a 08 00 00    	jne    64f6 <__sprintf_chk@plt+0x1816>
    5c9c:	bf 48 c1 e8 29       	mov    $0x29e8c148,%edi
    5ca1:	e8 4a 69 0f 8c       	call   ffffffff8c0fc5f0 <obstack_alloc_failed_handler@@Base+0xffffffff8c0da550>
    5ca6:	36 ff                	ss (bad) 
    5ca8:	ff                   	(bad)  
    5ca9:	ff                   	(bad)  
    5caa:	ea                   	(bad)  
    5cab:	f5                   	cmc    
    5cac:	f4                   	hlt    
    5cad:	ff                   	(bad)  
    5cae:	ff c7                	inc    %edi
    5cb0:	00 4b 00             	add    %cl,0x0(%rbx)
    5cb3:	00 00                	add    %al,(%rax)
    5cb5:	4c 0f 8c a8 00 00 00 	rex.WR jl 5d64 <__sprintf_chk@plt+0x1084>
    5cbc:	c3                   	ret    
    5cbd:	01 48 0f             	add    %ecx,0xf(%rax)
    5cc0:	af                   	scas   %es:(%rdi),%eax
    5cc1:	fe 4d 09             	decb   0x9(%rbp)
    5cc4:	df 30                	fbstp  (%rax)
    5cc6:	e8 35 ec 00 00       	call   14900 <_obstack_memory_used@@Base+0x4150>
    5ccb:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    5cd0:	49 89 c0             	mov    %rax,%r8
    5cd3:	8b 31                	mov    (%rcx),%esi
    5cd5:	83 fe 16             	cmp    $0x16,%esi
    5cd8:	75 02                	jne    5cdc <__sprintf_chk@plt+0xffc>
    5cda:	31 f6                	xor    %esi,%esi
    5cdc:	48                   	rex.W
    5cdd:	48 f7 fa             	idiv   %rdx
    5ce0:	28 48 8d             	sub    %cl,-0x73(%rax)
    5ce3:	0f e9 82 00 00 00 4c 	psubsw 0x4c000000(%rdx),%mm0
    5cea:	31 f2                	xor    %esi,%edx
    5cec:	00 31                	add    %dh,(%rcx)
    5cee:	c0 e8 ac             	shr    $0xac,%al
    5cf1:	e9 a0 03 00 00       	jmp    6096 <__sprintf_chk@plt+0x13b6>
    5cf6:	44 24 50             	rex.R and $0x50,%al
    5cf9:	48 89 05 78 c7 01 00 	mov    %rax,0x1c778(%rip)        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    5d00:	e9 fb f2 48 c1       	jmp    ffffffffc1495000 <obstack_alloc_failed_handler@@Base+0xffffffffc1472f60>
    5d05:	48 c1 e7 38          	shl    $0x38,%rdi
    5d09:	48 83 e8 01          	sub    $0x1,%rax
    5d0d:	48                   	rex.W
    5d0e:	49 c7 c6 ea 00 00 00 	mov    $0xea,%r14
    5d15:	00 00                	add    %al,(%rax)
    5d17:	66 0f ef ed          	pxor   %xmm5,%xmm5
    5d1b:	f3 48 0f 2a e8       	cvtsi2ss %rax,%xmm5
    5d20:	48 8b 43 10          	mov    0x10(%rbx),%rax
    5d24:	48 85 c0             	test   %rax,%rax
    5d27:	0f 88 75 07 00 00    	js     64a2 <__sprintf_chk@plt+0x17c2>
    5d2d:	66 0f ef e4          	pxor   %xmm4,%xmm4
    5d31:	f3 0f 84 8f fe ff ff 	repz je 5bc7 <__sprintf_chk@plt+0xee7>
    5d38:	43 28 f3             	rex.XB sub %sil,%r11b
    5d3b:	0f 49 31             	cmovns (%rcx),%esi
    5d3e:	f5                   	cmc    
    5d3f:	0f 4d 39             	cmovge (%rcx),%edi
    5d42:	f5                   	cmc    
    5d43:	3e c5 0f 86          	(bad)
    5d47:	c3                   	ret    
    5d48:	f6 ff                	idiv   %bh
    5d4a:	ff 48 89             	decl   -0x77(%rax)
    5d4d:	df e8                	fucomip %st(0),%st
    5d4f:	6d                   	insl   (%dx),%es:(%rdi)
    5d50:	69 00 00 48 8b 43    	imul   $0x438b4800,(%rax),%eax
    5d56:	4d 0f af c5          	imul   %r13,%r8
    5d5a:	00 75 df             	add    %dh,-0x21(%rbp)
    5d5d:	59                   	pop    %rcx
    5d5e:	c4                   	(bad)  
    5d5f:	0f 49 ff             	cmovns %edi,%edi
    5d62:	c1 86 a6 f6 ff ff f3 	roll   $0xf3,-0x95a(%rsi)
    5d69:	0f 59 60 04          	mulps  0x4(%rax),%xmm4
    5d6d:	80 78 10 00          	cmpb   $0x0,0x10(%rax)
    5d71:	0f 84 49 c1 e2 38    	je     38e31ec0 <obstack_alloc_failed_handler@@Base+0x38e0fe20>
    5d77:	0f 2f 25 6e 67 01 00 	comiss 0x1676e(%rip),%xmm4        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    5d7e:	4d 89 c4             	mov    %r8,%r12
    5d81:	0a 00                	or     (%rax),%al
    5d83:	48 c1 ee 0e          	shr    $0xe,%rsi
    5d87:	39 49 c1             	cmp    %ecx,-0x3f(%rcx)
    5d8a:	e5 17                	in     $0x17,%eax
    5d8c:	e8 ff 48 85 cf       	call   ffffffffcf85a690 <obstack_alloc_failed_handler@@Base+0xffffffffcf8385f0>
    5d91:	84 c0                	test   %al,%al
    5d93:	0f 4d 85 f8 ff ff 4c 	cmovge 0x4cfffff8(%rbp),%eax
    5d9a:	0f af e8             	imul   %eax,%ebp
    5d9d:	eb 13                	jmp    5db2 <__sprintf_chk@plt+0x10d2>
    5d9f:	48 8b 47 08          	mov    0x8(%rdi),%rax
    5da3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5da8:	0f 8c 38 02 00 00    	jl     5fe6 <__sprintf_chk@plt+0x1306>
    5dae:	8b 7c 4c 29          	mov    0x29(%rsp,%rcx,2),%edi
    5db2:	e3 85                	jrcxz  5d39 <__sprintf_chk@plt+0x1059>
    5db4:	ff 75 e8             	push   -0x18(%rbp)
    5db7:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    5dbe:	00 
    5dbf:	e9 4a f6 ff ff       	jmp    540e <__sprintf_chk@plt+0x72e>
    5dc4:	80 3d 76 c9 01 00 00 	cmpb   $0x0,0x1c976(%rip)        # 22741 <obstack_alloc_failed_handler@@Base+0x6a1>
    5dcb:	0f 85 e2 01 00 00    	jne    5fb3 <__sprintf_chk@plt+0x12d3>
    5dd1:	ba 01 00 00 00       	mov    $0x1,%edx
    5dd6:	31 f6                	xor    %esi,%esi
    5dd8:	48 8d 3d fc 3c 01 00 	lea    0x13cfc(%rip),%rdi        # 19adb <_obstack_memory_used@@Base+0x932b>
    5ddf:	e8 fc 88 00 00       	call   e6e0 <__sprintf_chk@plt+0x9a00>
    5de4:	48 83 3d dc c7 01 00 	cmpq   $0x0,0x1c7dc(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    5deb:	00 
    5dec:	4c 8b 25 6d c9 01 00 	mov    0x1c96d(%rip),%r12        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    5df3:	0f 85 4c 29 e2 00    	jne    e28745 <obstack_alloc_failed_handler@@Base+0xe066a5>
    5df9:	4d 85 e4             	test   %r12,%r12
    5dfc:	0f 84 3f f6 ff ff    	je     5441 <__sprintf_chk@plt+0x761>
    5e02:	49 83 7c 24 18 00    	cmpq   $0x0,0x18(%r12)
    5e08:	0f 85 20 f5 ff ff    	jne    532e <__sprintf_chk@plt+0x64e>
    5e0e:	c6 05 53 c9 01 00 00 	movb   $0x0,0x1c953(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
    5e15:	e9 14 f5 ff ff       	jmp    532e <__sprintf_chk@plt+0x64e>
    5e1a:	48 0f 8c 14 fc ff ff 	rex.W jl 5a35 <__sprintf_chk@plt+0xd55>
    5e21:	00 31                	add    %dh,(%rcx)
    5e23:	eb 11                	jmp    5e36 <__sprintf_chk@plt+0x1156>
    5e25:	05 00 00 4d 31       	add    $0x314d0000,%eax
    5e2a:	c0 c6 10             	rol    $0x10,%dh
    5e2d:	65 49 31 dd          	gs xor %rbx,%r13
    5e31:	89 c4                	mov    %eax,%esp
    5e33:	48 f7 fe             	idiv   %rsi
    5e36:	ff 4c 39 4d          	decl   0x4d(%rcx,%rdi,1)
    5e3a:	39 d8                	cmp    %ebx,%eax
    5e3c:	f6 48 c1 e2          	testb  $0xe2,-0x3f(%rax)
    5e40:	32 c2                	xor    %dl,%al
    5e42:	31 48 c1             	xor    %ecx,-0x3f(%rax)
    5e45:	ef                   	out    %eax,(%dx)
    5e46:	18 ff                	sbb    %bh,%bh
    5e48:	ff                   	(bad)  
    5e49:	e9 7f 0f 8f 3e       	jmp    3e8f6dcd <obstack_alloc_failed_handler@@Base+0x3e8d4d2d>
    5e4e:	fc                   	cld    
    5e4f:	ff                   	(bad)  
    5e50:	ff                   	(bad)  
    5e51:	f9                   	stc    
    5e52:	3e 01 48 4d          	ds add %ecx,0x4d(%rax)
    5e56:	21 dd                	and    %ebx,%ebp
    5e58:	ff                   	(bad)  
    5e59:	ff 49 89             	decl   -0x77(%rcx)
    5e5c:	c4                   	(bad)  
    5e5d:	48 89 48 29          	mov    %rcx,0x29(%rax)
    5e61:	f2 3b 00             	repnz cmp (%rax),%eax
    5e64:	00 49 c1             	add    %cl,-0x3f(%rcx)
    5e67:	4d 89 fb             	mov    %r15,%r11
    5e6a:	7e 0a                	jle    5e76 <__sprintf_chk@plt+0x1196>
    5e6c:	00 00                	add    %al,(%rax)
    5e6e:	0f 8c 9d fc ff ff    	jl     5b11 <__sprintf_chk@plt+0xe31>
    5e74:	89 05 f6 c5 01 00    	mov    %eax,0x1c5f6(%rip)        # 22470 <obstack_alloc_failed_handler@@Base+0x3d0>
    5e7a:	48 8b 05 2f c4 01 00 	mov    0x1c42f(%rip),%rax        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
    5e81:	48 89 05 f0 c1 01 00 	mov    %rax,0x1c1f0(%rip)        # 22078 <_obstack_memory_used@@Base+0x118c8>
    5e88:	80 7c 24 27 00       	cmpb   $0x0,0x27(%rsp)
    5e8d:	0f 84 c9 f1 ff ff    	je     505c <__sprintf_chk@plt+0x37c>
    5e93:	c7 05 1b c4 01 00 00 	movl   $0x0,0x1c41b(%rip)        # 222b8 <obstack_alloc_failed_handler@@Base+0x218>
    5e9a:	00 00 00 
    5e9d:	48 c7 05 08 c4 01 00 	movq   $0x2d33149,0x1c408(%rip)        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
    5ea4:	49 31 d3 02 
    5ea8:	fe                   	(bad)  
    5ea9:	ff                   	(bad)  
    5eaa:	ff c7                	inc    %edi
    5eac:	c5 48 29             	(bad)
    5eaf:	d7                   	xlat   %ds:(%rbx)
    5eb0:	09 ca                	or     %ecx,%edx
    5eb2:	4c 0f af ca          	imul   %rdx,%r9
    5eb6:	49 f7 f9             	idiv   %r9
    5eb9:	05 0a 48 ff c6       	add    $0xc6ff480a,%eax
    5ebe:	66 81 38 1b 5b       	cmpw   $0x5b1b,(%rax)
    5ec3:	0f 84 91 08 00 00    	je     675a <__sprintf_chk@plt+0x1a7a>
    5ec9:	48 8d 3d f0 c1 4d 09 	lea    0x94dc1f0(%rip),%rdi        # 94e20c0 <obstack_alloc_failed_handler@@Base+0x94c0020>
    5ed0:	dd cb                	(bad)  
    5ed2:	63 00                	movsxd (%rax),%eax
    5ed4:	00 48 8d             	add    %cl,-0x73(%rax)
    5ed7:	3d 48 c7 c6 05       	cmp    $0x5c6c748,%eax
    5edc:	fd                   	std    
    5edd:	ff                   	(bad)  
    5ede:	ff                   	(bad)  
    5edf:	e9 79 0f 84 3b       	jmp    3b846e5d <obstack_alloc_failed_handler@@Base+0x3b824dbd>
    5ee4:	03 00                	add    (%rax),%eax
    5ee6:	00 00                	add    %al,(%rax)
    5ee8:	48 8b 38             	mov    (%rax),%rdi
    5eeb:	e8 80 ed ff ff       	call   4c70 <fflush_unlocked@plt>
    5ef0:	4d 31 d8             	xor    %r11,%r8
    5ef3:	8f                   	(bad)  
    5ef4:	7e fc                	jle    5ef2 <__sprintf_chk@plt+0x1212>
    5ef6:	ff                   	(bad)  
    5ef7:	ff 46 fc             	incl   -0x4(%rsi)
    5efa:	ff                   	(bad)  
    5efb:	ff 00                	incl   (%rax)
    5efd:	85 db                	test   %ebx,%ebx
    5eff:	74 16                	je     5f17 <__sprintf_chk@plt+0x1237>
    5f01:	0f 4d 09             	cmovge (%rcx),%ecx
    5f04:	f7 85 c7 00 bf 13 4d 	testl  $0xe8ce314d,0x13bf00c7(%rbp)
    5f0b:	31 ce e8 
    5f0e:	de e7                	fsubp  %st,%st(7)
    5f10:	ff                   	(bad)  
    5f11:	ff 83 eb 01 48 31    	incl   0x314801eb(%rbx)
    5f17:	d9 3d eb 4c 09 eb    	fnstcw -0x14f6b315(%rip)        # ffffffffeb09ac08 <obstack_alloc_failed_handler@@Base+0xffffffffeb078b68>
    5f1d:	0f 49 29             	cmovns (%rcx),%ebp
    5f20:	cf                   	iret   
    5f21:	00 00                	add    %al,(%rax)
    5f23:	ff                   	(bad)  
    5f24:	ff                   	(bad)  
    5f25:	e8 c6 e7 ff ff       	call   46f0 <raise@plt>
    5f2a:	e9 28 f5 ff ff       	jmp    5457 <__sprintf_chk@plt+0x777>
    5f2f:	80 3d ca c3 01 00 00 	cmpb   $0x0,0x1c3ca(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    5f36:	0f 85 2d f3 ff ff    	jne    5269 <__sprintf_chk@plt+0x589>
    5f3c:	80 3d cd c3 01 00 00 	cmpb   $0x0,0x1c3cd(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
    5f43:	0f 85 20 f3 ff ff    	jne    5269 <__sprintf_chk@plt+0x589>
    5f49:	80 3d f0 c7 01 00 00 	cmpb   $0x0,0x1c7f0(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
    5f50:	c6 05 63 c7 01 00 00 	movb   $0x0,0x1c763(%rip)        # 226ba <obstack_alloc_failed_handler@@Base+0x61a>
    5f57:	b8 01 00 00 00       	mov    $0x1,%eax
    5f5c:	0f 85 10 f3 ff ff    	jne    5272 <__sprintf_chk@plt+0x592>
    5f62:	80 3d 9f c3 01 00 00 	cmpb   $0x0,0x1c39f(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    5f69:	0f 85 03 f3 ff ff    	jne    5272 <__sprintf_chk@plt+0x592>
    5f6f:	83 3d 8e c3 01 00 00 	cmpl   $0x0,0x1c38e(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    5f76:	0f 85 f6 f2 ff ff    	jne    5272 <__sprintf_chk@plt+0x592>
    5f7c:	0f b6 05 c7 c7 01 00 	movzbl 0x1c7c7(%rip),%eax        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    5f83:	e9 ea f2 ff ff       	jmp    5272 <__sprintf_chk@plt+0x592>
    5f88:	48 8b 05 51 c0 01 00 	mov    0x1c051(%rip),%rax        # 21fe0 <_obstack_memory_used@@Base+0x11830>
    5f8f:	49 8d 6c 24 04       	lea    0x4(%r12),%rbp
    5f94:	48 89 28             	mov    %rbp,(%rax)
    5f97:	48 f7 ff             	idiv   %rdi
    5f9a:	ff                   	(bad)  
    5f9b:	ff 85 d2 4d 85 f4    	incl   -0xb7ab22e(%rbp)
    5fa1:	fc                   	cld    
    5fa2:	ff 4c 39 cf          	decl   -0x31(%rcx,%rdi,1)
    5fa6:	48 f7 f8             	idiv   %rax
    5fa9:	db 04 00             	fildl  (%rax,%rax,1)
    5fac:	00 00                	add    %al,(%rax)
    5fae:	e9 f1 f1 ff ff       	jmp    51a4 <__sprintf_chk@plt+0x4c4>
    5fb3:	48 8d 0d 03 3c 01 00 	lea    0x13c03(%rip),%rcx        # 19bbd <_obstack_memory_used@@Base+0x940d>
    5fba:	ba 01 48 c1 ef       	mov    $0xefc14801,%edx
    5fbf:	2d 03 00 00 00       	sub    $0x3,%eax
    5fc4:	48 8d 3d 10 3b 01 00 	lea    0x13b10(%rip),%rdi        # 19adb <_obstack_memory_used@@Base+0x932b>
    5fcb:	49 0f 8f 06 ff ff ff 	rex.WB jg 5ed8 <__sprintf_chk@plt+0x11f8>
    5fd2:	49 0f af de          	imul   %r14,%rbx
    5fd6:	44 24 27             	rex.R and $0x27,%al
    5fd9:	01 e9                	add    %ebp,%ecx
    5fdb:	21 f0                	and    %esi,%eax
    5fdd:	ff                   	(bad)  
    5fde:	ff 80 3d 5b c7 01    	incl   0x1c75b3d(%rax)
    5fe4:	00 00                	add    %al,(%rax)
    5fe6:	b8 02 00 00 00       	mov    $0x2,%eax
    5feb:	75 18                	jne    6005 <__sprintf_chk@plt+0x1325>
    5fed:	83 3d 10 c3 01 00 03 	cmpl   $0x3,0x1c310(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    5ff4:	74 0f                	je     6005 <__sprintf_chk@plt+0x1325>
    5ff6:	83 3d 0f c3 01 00 01 	cmpl   $0x1,0x1c30f(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5ffd:	19 c0                	sbb    %eax,%eax
    5fff:	83 e0 fe             	and    $0xfffffffe,%eax
    6002:	83 c0 04             	add    $0x4,%eax
    6005:	89 05 39 c7 01 00    	mov    %eax,0x1c739(%rip)        # 22744 <obstack_alloc_failed_handler@@Base+0x6a4>
    600b:	e9 cb f1 ff ff       	jmp    51db <__sprintf_chk@plt+0x4fb>
    6010:	e8 49 ff c6 0f       	call   fc75f5e <obstack_alloc_failed_handler@@Base+0xfc53ebe>
    6015:	8c a7 fd ff ff 00    	mov    %fs,0xfffffd(%rdi)
    601b:	00 0f                	add    %cl,(%rdi)
    601d:	84 4c 39 c2          	test   %cl,-0x3e(%rcx,%rdi,1)
    6021:	00 48 83             	add    %cl,-0x7d(%rax)
    6024:	3d 9e c5 01 00       	cmp    $0x1c59e,%eax
    6029:	00 0f                	add    %cl,(%rdi)
    602b:	49 f7 f8             	idiv   %r8
    602e:	ff                   	(bad)  
    602f:	ff                   	(bad)  
    6030:	e8 6b b8 00 00       	call   118a0 <_obstack_memory_used@@Base+0x10f0>
    6035:	48 ff c1             	inc    %rcx
    6038:	23 c7                	and    %edi,%eax
    603a:	01 00                	add    %eax,(%rax)
    603c:	00 0f                	add    %cl,(%rdi)
    603e:	84 fe                	test   %bh,%dh
    6040:	f3 ff                	repz (bad) 
    6042:	ff 48 49             	decl   0x49(%rax)
    6045:	7c 85                	jl     5fcc <__sprintf_chk@plt+0x12ec>
    6047:	bf 49 39 fd 8b       	mov    $0x8bfd3949,%edi
    604c:	38 48 85             	cmp    %cl,-0x7b(%rax)
    604f:	c6                   	(bad)  
    6050:	4c 01 c3             	add    %r8,%rbx
    6053:	0f 8f ca 00 00 00    	jg     6123 <__sprintf_chk@plt+0x1443>
    6059:	c7 c1 73 fe ff ff    	mov    $0xfffffe73,%ecx
    605f:	48 89 57 28          	mov    %rdx,0x28(%rdi)
    6063:	c6 00 0a             	movb   $0xa,(%rax)
    6066:	48 83 05 8a c2 48 09 	addq   $0xfffffffffffffffb,0x948c28a(%rip)        # 94922f8 <obstack_alloc_failed_handler@@Base+0x9470258>
    606d:	fb 
    606e:	48                   	rex.W
    606f:	48 ff c1             	inc    %rcx
    6072:	c6 01 00             	movb   $0x0,(%rcx)
    6075:	e9 49 c1 e4 05       	jmp    5e521c3 <obstack_alloc_failed_handler@@Base+0x5e30123>
    607a:	31 c0                	xor    %eax,%eax
    607c:	48 8d 35 3d 0f 85 66 	lea    0x66850f3d(%rip),%rsi        # 66856fc0 <obstack_alloc_failed_handler@@Base+0x66834f20>
    6083:	01 00                	add    %eax,(%rax)
    6085:	00 1f                	add    %bl,(%rdi)
    6087:	00 b9 01 00 0f 8c    	add    %bh,-0x73f0ffff(%rcx)
    608d:	85 03                	test   %eax,(%rbx)
    608f:	00 00                	add    %al,(%rax)
    6091:	fe 83 ea 30 83 fa    	incb   -0x57ccf16(%rbx)
    6097:	09 76 1e             	or     %esi,0x1e(%rsi)
    609a:	83 f8 7e             	cmp    $0x7e,%eax
    609d:	74 42                	je     60e1 <__sprintf_chk@plt+0x1401>
    609f:	90                   	nop
    60a0:	83 f8 2d             	cmp    $0x2d,%eax
    60a3:	74 3c                	je     60e1 <__sprintf_chk@plt+0x1401>
    60a5:	83 f8 2e             	cmp    $0x2e,%eax
    60a8:	0f 94 c1             	sete   %cl
    60ab:	83 f8 5f             	cmp    $0x5f,%eax
    60ae:	0f 94 c2             	sete   %dl
    60b1:	48 f7 fe             	idiv   %rsi
    60b4:	1f                   	(bad)  
    60b5:	44                   	rex.R
    60b6:	4c 21 d2             	and    %r10,%rdx
    60b9:	0c 06                	or     $0x6,%al
    60bb:	48 c7 c2 0c ff ff ff 	mov    $0xffffffffffffff0c,%rdx
    60c2:	01 00                	add    %eax,(%rax)
    60c4:	00 74 0f 84          	add    %dh,-0x7c(%rdi,%rcx,1)
    60c8:	92                   	xchg   %eax,%edx
    60c9:	00 00                	add    %al,(%rax)
    60cb:	00 5a 76             	add    %bl,0x76(%rdx)
    60ce:	b9 8d 50 9f b9       	mov    $0xb99f508d,%ecx
    60d3:	01 00                	add    %eax,(%rax)
    60d5:	4d 85 c2             	test   %r8,%r10
    60d8:	fa                   	cli    
    60d9:	48 f7 f9             	idiv   %rcx
    60dc:	83 f8 7e             	cmp    $0x7e,%eax
    60df:	75 bf                	jne    60a0 <__sprintf_chk@plt+0x13c0>
    60e1:	b9 01 00 00 00       	mov    $0x1,%ecx
    60e6:	08 0c 06             	or     %cl,(%rsi,%rax,1)
    60e9:	48                   	rex.W
    60ea:	49 ff c1             	inc    %r9
    60ed:	48 3d 00 01 48 c7    	cmp    $0xffffffffc7480100,%rax
    60f3:	c6                   	(bad)  
    60f4:	4a fe                	rex.WX (bad) 
    60f6:	ff                   	(bad)  
    60f7:	ff                   	(bad)  
    60f8:	ff c2                	inc    %edx
    60fa:	41 bc 22 00 00 00    	mov    $0x22,%r12d
    6100:	45 31 ff             	xor    %r15d,%r15d
    6103:	0f 49 ff             	cmovns %edi,%edi
    6106:	c2 00 4d             	ret    $0x4d00
    6109:	85 ff                	test   %edi,%edi
    610b:	0f 84 bf 00 00 00    	je     61d0 <__sprintf_chk@plt+0x14f0>
    6111:	48 b8 53 55 55 55 49 	movabs $0xff29494955555553,%rax
    6118:	49 29 ff 
    611b:	49 39 49 c7          	cmp    %rcx,-0x39(%r9)
    611f:	c0 77 03 00          	shlb   $0x0,0x3(%rdi)
    6123:	00 4c 89 4d          	add    %cl,0x4d(%rcx,%rcx,4)
    6127:	01 c0                	add    %eax,%eax
    6129:	e8 4d 8d 64 04       	call   464ee7b <obstack_alloc_failed_handler@@Base+0x462cddb>
    612e:	01 4c 4c 21          	add    %ecx,0x21(%rsp,%rcx,2)
    6132:	c0 89 e6 e8 d6 e9 ff 	rorb   $0xff,-0x1629171a(%rcx)
    6139:	ff 49 89             	decl   -0x77(%rcx)
    613c:	c7                   	(bad)  
    613d:	48 85 c0             	test   %rax,%rax
    6140:	0f 84 93 00 00 00    	je     61d9 <__sprintf_chk@plt+0x14f9>
    6146:	0f 8c 06 02 00 00    	jl     6352 <__sprintf_chk@plt+0x1672>
    614c:	03 00                	add    (%rax),%eax
    614e:	e8 bd 4d 31 cb       	call   ffffffffcb31af10 <obstack_alloc_failed_handler@@Base+0xffffffffcb2f8e70>
    6153:	48 c1 4c 01 ca 01    	rorq   $0x1,-0x36(%rcx,%rax,1)
    6159:	f0 ff c7             	lock inc %edi
    615c:	48                   	rex.W
    615d:	4c 85 ea             	test   %r13,%rdx
    6160:	00 49 89             	add    %cl,-0x77(%rcx)
    6163:	c5 e8 e9             	(bad)
    6166:	bf 4d 89 e0 c0       	mov    $0xc0e0894d,%edi
    616b:	75 33                	jne    61a0 <__sprintf_chk@plt+0x14c0>
    616d:	80 3b 00             	cmpb   $0x0,(%rbx)
    6170:	75 96                	jne    6108 <__sprintf_chk@plt+0x1428>
    6172:	4c 89 d3             	mov    %r10,%rbx
    6175:	8c da                	mov    %ds,%edx
    6177:	fd                   	std    
    6178:	ff                   	(bad)  
    6179:	ff                   	(bad)  
    617a:	e8 01 e7 ff ff       	call   4880 <strlen@plt>
    617f:	48 8d 4d 09          	lea    0x9(%rbp),%rcx
    6183:	d4                   	(bad)  
    6184:	39 e6                	cmp    %esp,%esi
    6186:	0f 82 4c 07 00 00    	jb     68d8 <__sprintf_chk@plt+0x1bf8>
    618c:	4c                   	rex.WR
    618d:	48 c1 e8 14          	shr    $0x14,%rax
    6191:	48 21 f1             	and    %rsi,%rcx
    6194:	01 f1                	add    %esi,%ecx
    6196:	ff                   	(bad)  
    6197:	ff 0f                	decl   (%rdi)
    6199:	1f                   	(bad)  
    619a:	84 00                	test   %al,(%rax)
    619c:	00 00                	add    %al,(%rax)
    619e:	00 00                	add    %al,(%rax)
    61a0:	41 8b 45 00          	mov    0x0(%r13),%eax
    61a4:	83 f8 24             	cmp    $0x24,%eax
    61a7:	76 37                	jbe    61e0 <__sprintf_chk@plt+0x1500>
    61a9:	4d 0f af d4          	imul   %r12,%r10
    61ad:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    61b1:	e8 ca e4 ff ff       	call   4680 <free@plt>
    61b6:	48 8d 05 00 3a 01 00 	lea    0x13a00(%rip),%rax        # 19bbd <_obstack_memory_used@@Base+0x940d>
    61bd:	48                   	rex.W
    61be:	48 c7                	rex.W (bad) 
    61c0:	49 c1 e0 06          	shl    $0x6,%r8
    61c4:	ff 48 48             	decl   0x48(%rax)
    61c7:	ff c2                	inc    %edx
    61c9:	49 09 fc             	or     %rdi,%r12
    61cc:	00 00                	add    %al,(%rax)
    61ce:	00 00                	add    %al,(%rax)
    61d0:	4d 85 e4             	test   %r12,%r12
    61d3:	0f 89 56 49 f7 f8    	jns    fffffffff8f7ab2f <obstack_alloc_failed_handler@@Base+0xfffffffff8f58a8f>
    61d9:	4d 39 df             	cmp    %r11,%r15
    61dc:	00 00                	add    %al,(%rax)
    61de:	66 48 39 c0          	data16 cmp %rax,%rax
    61e2:	fe                   	(bad)  
    61e3:	ef                   	out    %eax,(%dx)
    61e4:	bf ff ef ff ff       	mov    $0xffffefff,%edi
    61e9:	ff 4c 4d 21          	decl   0x21(%rbp,%rcx,2)
    61ed:	c2 c1 e3             	ret    $0xe3c1
    61f0:	24 ff                	and    $0xff,%al
    61f2:	ff                   	(bad)  
    61f3:	ff                   	(bad)  
    61f4:	eb b3                	jmp    61a9 <__sprintf_chk@plt+0x14c9>
    61f6:	4c                   	rex.WR
    61f7:	49 29 d2             	sub    %rdx,%r10
    61fa:	bd 01 00 4c 8b       	mov    $0x8b4c0001,%ebp
    61ff:	2d cc 7c 65 00       	sub    $0x657ccc,%eax
    6204:	31 d2                	xor    %edx,%edx
    6206:	31 f6                	xor    %esi,%esi
    6208:	48 8d 3d 51 c4 0f 8f 	lea    -0x70f03baf(%rip),%rdi        # ffffffff8f102660 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e05c0>
    620f:	32 48 c7             	xor    -0x39(%rax),%cl
    6212:	c0 ab ff ff ff ff ff 	shrb   $0xff,-0x1(%rbx)
    6219:	ff 0f                	decl   (%rdi)
    621b:	8c 4c 09 f9          	mov    %cs,-0x7(%rcx,%rcx,1)
    621f:	ff 31                	push   (%rcx)
    6221:	d2 49 f7             	rorb   %cl,-0x9(%rcx)
    6224:	fa                   	cli    
    6225:	5d                   	pop    %rbp
    6226:	fd                   	std    
    6227:	0f 8f fd 02 00 00    	jg     652a <__sprintf_chk@plt+0x184a>
    622d:	8c 74 fd ff          	mov    %?,-0x1(%rbp,%rdi,8)
    6231:	ff 49 09             	decl   0x9(%rcx)
    6234:	c1 48 89 f2          	rorl   $0xf2,-0x77(%rax)
    6238:	b0 3b                	mov    $0x3b,%al
    623a:	01 00                	add    %eax,(%rax)
    623c:	e8 7f e4 ff ff       	call   46c0 <getenv@plt>
    6241:	0f 85 93 48 89 c1    	jne    ffffffffc189aada <obstack_alloc_failed_handler@@Base+0xffffffffc1878a3a>
    6247:	49 ff c5             	inc    %r13
    624a:	84 56 03             	test   %dl,0x3(%rsi)
    624d:	00 00                	add    %al,(%rax)
    624f:	80 38 00             	cmpb   $0x0,(%rax)
    6252:	0f 84 48 c7 c2 92    	je     ffffffff92c329a0 <obstack_alloc_failed_handler@@Base+0xffffffff92c10900>
    6258:	fe                   	(bad)  
    6259:	ff 49 f7             	decl   -0x9(%rcx)
    625c:	fd                   	std    
    625d:	85 f5                	test   %esi,%ebp
    625f:	65 3f                	gs (bad) 
    6261:	49 21 4d 29          	and    %rcx,0x29(%r13)
    6265:	cf                   	iret   
    6266:	00 e8                	add    %ch,%al
    6268:	34 84                	xor    $0x84,%al
    626a:	00 00                	add    %al,(%rax)
    626c:	48 89 05 48 ff c7 00 	mov    %rax,0xc7ff48(%rip)        # c861bb <obstack_alloc_failed_handler@@Base+0xc6411b>
    6273:	48 89 48 0f          	mov    %rcx,0xf(%rax)
    6277:	af                   	scas   %es:(%rdi),%eax
    6278:	f3 0f 85 5e 02 00 00 	repz jne 64dd <__sprintf_chk@plt+0x17fd>
    627f:	8f                   	(bad)  
    6280:	ee                   	out    %al,(%dx)
    6281:	fd                   	std    
    6282:	ff                   	(bad)  
    6283:	ff 0f                	decl   (%rdi)
    6285:	4d 01 d1             	add    %r10,%r9
    6288:	00 00                	add    %al,(%rax)
    628a:	49 85 fe             	test   %rdi,%r14
    628d:	02 03                	add    (%rbx),%al
    628f:	00 00                	add    %al,(%rax)
    6291:	00 84 c0 0f 84 14 01 	add    %al,0x114840f(%rax,%rax,8)
    6298:	00 00                	add    %al,(%rax)
    629a:	88 44 24 65          	mov    %al,0x65(%rsp)
    629e:	41 0f b6 49 ff       	movzbl -0x1(%r9),%ecx
    62a3:	c6 84 c0 0f 84 49 c1 	movb   $0xe5,-0x3eb67bf1(%rax,%rax,8)
    62aa:	e5 
    62ab:	49 09 f7             	or     %rsi,%r15
    62ae:	24 66                	and    $0x66,%al
    62b0:	4c 39 c2             	cmp    %r8,%rdx
    62b3:	24 03                	and    $0x3,%al
    62b5:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    62ba:	41 80 7c 24 02 3d    	cmpb   $0x3d,0x2(%r12)
    62c0:	0f 85 48 ff c3 48    	jne    48c4620e <obstack_alloc_failed_handler@@Base+0x48c2416e>
    62c6:	c1 e0 32             	shl    $0x32,%eax
    62c9:	48 8d 35 9a 39 01 00 	lea    0x1399a(%rip),%rsi        # 19c6a <_obstack_memory_used@@Base+0x94ba>
    62d0:	4d 01 fb             	add    %r15,%r11
    62d3:	24 48                	and    $0x48,%al
    62d5:	c1 e6 1b             	shl    $0x1b,%esi
    62d8:	0f 1f 48 ff          	nopl   -0x1(%rax)
    62dc:	c1 00 00             	roll   $0x0,(%rax)
    62df:	48 f7 fe             	idiv   %rsi
    62e2:	c5 01 48             	(bad)
    62e5:	8d 05 75 b6 01 00    	lea    0x1b675(%rip),%eax        # 21960 <_obstack_memory_used@@Base+0x111b0>
    62eb:	4a 8b 34 e8          	mov    (%rax,%r13,8),%rsi
    62ef:	48 85 f6             	test   %rsi,%rsi
    62f2:	0f 8c dc 02 00 00    	jl     65d4 <__sprintf_chk@plt+0x18f4>
    62f8:	f4                   	hlt    
    62f9:	e6 ff                	out    %al,$0xff
    62fb:	ff 85 4d 29 e3 49    	incl   0x49e3294d(%rbp)
    6301:	48 85 d7             	test   %rdx,%rdi
    6304:	8d 05 49 f7 fe 49    	lea    0x49fef749(%rip),%eax        # 49ff5a53 <obstack_alloc_failed_handler@@Base+0x49fd39b3>
    630a:	89 c1                	mov    %eax,%ecx
    630c:	48                   	rex.W
    630d:	4d 89 d4             	mov    %r10,%r12
    6310:	48 89 c7             	mov    %rax,%rdi
    6313:	c1 ee 15             	shr    $0x15,%esi
    6316:	24 18                	and    $0x18,%al
    6318:	48 01 c1             	add    %rax,%rcx
    631b:	4c 39 f6             	cmp    %r14,%rsi
    631e:	4c 09 f2             	or     %r14,%rdx
    6321:	ee                   	out    %al,(%dx)
    6322:	0f 85 fb fe ff ff    	jne    6223 <__sprintf_chk@plt+0x1543>
    6328:	00 84 c0 0f 85 47 ff 	add    %al,-0xb87af1(%rax,%rax,8)
    632f:	ff                   	(bad)  
    6330:	ff 4c 89 e7          	decl   -0x19(%rcx,%rcx,4)
    6334:	48 0f af fb          	imul   %rbx,%rdi
    6338:	00 0f                	add    %cl,(%rdi)
    633a:	8f                   	(bad)  
    633b:	72 03                	jb     6340 <__sprintf_chk@plt+0x1660>
    633d:	00 00                	add    %al,(%rax)
    633f:	31 d8                	xor    %ebx,%eax
    6341:	8c 89 fd ff ff ff    	mov    %cs,-0x3(%rcx)
    6347:	49 89 4c 85 de       	mov    %rcx,-0x22(%r13,%rax,4)
    634c:	e5 49                	in     $0x49,%eax
    634e:	01 d4                	add    %edx,%esp
    6350:	c7 c3 22 fc ff ff    	mov    $0xfffffc22,%ebx
    6356:	85 1d 4d 85 c2 e8    	test   %ebx,-0x173d7ab3(%rip)        # ffffffffe8c2e8a9 <obstack_alloc_failed_handler@@Base+0xffffffffe8c0c809>
    635c:	40 e8 ff ff ba 05    	rex call 5bb6361 <obstack_alloc_failed_handler@@Base+0x5b942c1>
    6362:	00 00                	add    %al,(%rax)
    6364:	00 48 8d             	add    %cl,-0x73(%rax)
    6367:	35 7c 60 49 f7       	xor    $0xf749607c,%eax
    636c:	ff 49 4c             	decl   0x4c(%rcx)
    636f:	0f af df             	imul   %edi,%ebx
    6372:	ff 31                	push   (%rcx)
    6374:	49 c7                	rex.WB (bad) 
    6376:	48 0f af ff          	imul   %rdi,%rdi
    637a:	ff c0                	inc    %eax
    637c:	e8 1f e8 ff ff       	call   4ba0 <error@plt>
    6381:	48 8b 3d 4d 29 c8 00 	mov    0xc8294d(%rip),%rdi        # c88cd5 <obstack_alloc_failed_handler@@Base+0xc66c35>
    6388:	e8 f3 e2 ff ff       	call   4680 <free@plt>
    638d:	48 8b 3d 0c c1 49 4d 	mov    0x4d49c10c(%rip),%rdi        # 4d4a24a0 <obstack_alloc_failed_handler@@Base+0x4d480400>
    6394:	09 48 c1             	or     %ecx,-0x3f(%rax)
    6397:	ea                   	(bad)  
    6398:	0f 84 77 ff ff ff    	je     6315 <__sprintf_chk@plt+0x1635>
    639e:	ff 4c 0f 85          	decl   -0x7b(%rdi,%rcx,1)
    63a2:	99                   	cltd   
    63a3:	02 00                	add    (%rax),%al
    63a5:	00 ef                	add    %ch,%bh
    63a7:	c6 05 5a bf 01 00 00 	movb   $0x0,0x1bf5a(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    63ae:	48 83 3d e9 7d 48 85 	cmpq   $0xfffffffffffffff2,-0x7ab78217(%rip)        # ffffffff8548e19f <obstack_alloc_failed_handler@@Base+0xffffffff8546c0ff>
    63b5:	f2 
    63b6:	0f 49 29             	cmovns (%rcx),%ebp
    63b9:	fc                   	cld    
    63ba:	00 00                	add    %al,(%rax)
    63bc:	80 3d 87 c3 01 00 00 	cmpb   $0x0,0x1c387(%rip)        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    63c3:	0f 85 fe 0f 8f c3    	jne    ffffffffc38f73c7 <obstack_alloc_failed_handler@@Base+0xffffffffc38d5327>
    63c9:	fd                   	std    
    63ca:	e9 8b fd 0f 84       	jmp    ffffffff8410615a <obstack_alloc_failed_handler@@Base+0xffffffff840e40ba>
    63cf:	07                   	(bad)  
    63d0:	01 00                	add    %eax,(%rax)
    63d2:	00 ed                	add    %ch,%ch
    63d4:	49 21 c2             	and    %rax,%r10
    63d7:	0d 00 00 00 e8       	or     $0xe8000000,%eax
    63dc:	49 0f af c2          	imul   %r10,%rax
    63e0:	84 c0                	test   %al,%al
    63e2:	0f 85 df ed ff ff    	jne    51c7 <__sprintf_chk@plt+0x4e7>
    63e8:	bf 0e 00 00 00       	mov    $0xe,%edi
    63ed:	e8 49 ff c6 c0       	call   ffffffffc0c7633b <obstack_alloc_failed_handler@@Base+0xffffffffc0c5429b>
    63f2:	39 f1                	cmp    %esi,%ecx
    63f4:	c1 ef 0f             	shr    $0xf,%edi
    63f7:	03 00                	add    (%rax),%eax
    63f9:	00 0f                	add    %cl,(%rdi)
    63fb:	48 c1 ee 05          	shr    $0x5,%rsi
    63ff:	ff 1c 5d 00 00 84 c0 	lcall  *-0x3f7c0000(,%rbx,2)
    6406:	0f 84 0f 84 93 fc    	je     fffffffffc93e81b <obstack_alloc_failed_handler@@Base+0xfffffffffc91c77b>
    640c:	ff                   	(bad)  
    640d:	ff 49 ff             	decl   -0x1(%rcx)
    6410:	c1 00 0f             	roll   $0xf,(%rax)
    6413:	85 0f                	test   %ecx,(%rdi)
    6415:	8c 7d fd             	mov    %?,-0x3(%rbp)
    6418:	ff                   	(bad)  
    6419:	ff 0f                	decl   (%rdi)
    641b:	8c 2c fe             	mov    %gs,(%rsi,%rdi,8)
    641e:	ff                   	(bad)  
    641f:	ff 35 3b c2 01 00    	push   0x1c23b(%rip)        # 22660 <obstack_alloc_failed_handler@@Base+0x5c0>
    6425:	48 8d 3d ff 0f 84 ee 	lea    -0x117bf001(%rip),%rdi        # ffffffffee84742b <obstack_alloc_failed_handler@@Base+0xffffffffee82538b>
    642c:	01 00                	add    %eax,(%rax)
    642e:	00 00                	add    %al,(%rax)
    6430:	00 48 c7             	add    %cl,-0x39(%rax)
    6433:	c1 6e 02 00          	shrl   $0x0,0x2(%rsi)
    6437:	00 48 8d             	add    %cl,-0x73(%rax)
    643a:	3d f6 39 01 00       	cmp    $0x139f6,%eax
    643f:	e8 6c 0e 00 00       	call   72b0 <__sprintf_chk@plt+0x25d0>
    6444:	49 ff c2             	inc    %r10
    6447:	7f fe                	jg     6447 <__sprintf_chk@plt+0x1767>
    6449:	ff                   	(bad)  
    644a:	ff                   	(bad)  
    644b:	7c 24                	jl     6471 <__sprintf_chk@plt+0x1791>
    644d:	48 01 49 29          	add    %rcx,0x29(%rcx)
    6451:	fe                   	(bad)  
    6452:	ff 49 ff             	decl   -0x1(%rcx)
    6455:	c5 48 8d             	(bad)
    6458:	05 4c 31 fa 4c       	add    $0x4cfa314c,%eax
    645d:	89 49 0f             	mov    %ecx,0xf(%rcx)
    6460:	af                   	scas   %es:(%rdi),%eax
    6461:	dd 8f 90 03 00 00    	fisttpll 0x390(%rdi)
    6467:	e9 49 09 fd ff       	jmp    fffffffffffd6db5 <obstack_alloc_failed_handler@@Base+0xfffffffffffb4d15>
    646c:	49                   	rex.WB
    646d:	4c 0f af f0          	imul   %rax,%r14
    6471:	fe                   	(bad)  
    6472:	ff                   	(bad)  
    6473:	ff                   	(bad)  
    6474:	e9 48 ff c3 ff       	jmp    ffffffffffc463c1 <obstack_alloc_failed_handler@@Base+0xffffffffffc24321>
    6479:	48 8d 05 4d 21 df 00 	lea    0xdf214d(%rip),%rax        # df85cd <obstack_alloc_failed_handler@@Base+0xdd652d>
    6480:	e9 ce ec ff ff       	jmp    5153 <__sprintf_chk@plt+0x473>
    6485:	bf 01 00 00 00       	mov    $0x1,%edi
    648a:	e8 f1 e2 eb 90       	call   ffffffff90ec4780 <obstack_alloc_failed_handler@@Base+0xffffffff90ea26e0>
    648f:	83 f8 49             	cmp    $0x49,%eax
    6492:	c1 e0 31             	shl    $0x31,%eax
    6495:	c0 02 89             	rolb   $0x89,(%rdx)
    6498:	05 6f be 01 00       	add    $0x1be6f,%eax
    649d:	e9 3f f5 ff ff       	jmp    59e1 <__sprintf_chk@plt+0xd01>
    64a2:	48 89 c2             	mov    %rax,%rdx
    64a5:	83 e0 01             	and    $0x1,%eax
    64a8:	e9 e6 02 00 00       	jmp    6793 <__sprintf_chk@plt+0x1ab3>
    64ad:	d1 ea                	shr    %edx
    64af:	48 09 c2             	or     %rax,%rdx
    64b2:	f3 49 ff c7          	repz inc %r15
    64b6:	e2 f3                	loop   64ab <__sprintf_chk@plt+0x17cb>
    64b8:	0f 58 e4             	addps  %xmm4,%xmm4
    64bb:	e9 76 f8 ff ff       	jmp    5d36 <__sprintf_chk@plt+0x1056>
    64c0:	48 89 c2             	mov    %rax,%rdx
    64c3:	83 49 f7 f8          	orl    $0xfffffff8,-0x9(%rcx)
    64c7:	0f ef ed             	pxor   %mm5,%mm5
    64ca:	49 d1 ed             	shr    %r13
    64cd:	48 09 c2             	or     %rax,%rdx
    64d0:	f3 48 0f 2a ea       	cvtsi2ss %rdx,%xmm5
    64d5:	f3 0f 58 ed          	addss  %xmm5,%xmm5
    64d9:	e9 42 f8 ff ff       	jmp    5d20 <__sprintf_chk@plt+0x1040>
    64de:	c6 05 c8 bd 01 00 01 	movb   $0x1,0x1bdc8(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
    64e5:	e8 46 79 00 00       	call   de30 <__sprintf_chk@plt+0x9150>
    64ea:	48 89 05 cf c0 01 00 	mov    %rax,0x1c0cf(%rip)        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
    64f1:	e9 e5 eb ff ff       	jmp    50db <__sprintf_chk@plt+0x3fb>
    64f6:	41 80 4d 85 e9       	orb    $0xe9,-0x7b(%r13)
    64fb:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    6500:	0f 84 83 03 00 00    	je     6889 <__sprintf_chk@plt+0x1ba9>
    6506:	4c 8d 25 33 4c 21 d1 	lea    -0x2edeb3cd(%rip),%r12        # ffffffffd121b140 <obstack_alloc_failed_handler@@Base+0xffffffffd11f90a0>
    650d:	48 8b e9             	mov    %rcx,%rbp
    6510:	b5 fd                	mov    $0xfd,%ch
    6512:	ff                   	(bad)  
    6513:	ff 15 c7 21 01 00    	call   *0x121c7(%rip)        # 186e0 <_obstack_memory_used@@Base+0x7f30>
    6519:	4c 89 e6             	mov    %r12,%rsi
    651c:	e8 1f 4d 21 cd       	call   ffffffffcd21b240 <obstack_alloc_failed_handler@@Base+0xffffffffcd1f91a0>
    6521:	48 85 c0             	test   %rax,%rax
    6524:	4d                   	rex.WRB
    6525:	49 21 dd             	and    %rbx,%r13
    6528:	48 0f af c2          	imul   %rdx,%rax
    652c:	f8                   	clc    
    652d:	02 0f                	add    (%rdi),%cl
    652f:	eb 85                	jmp    64b6 <__sprintf_chk@plt+0x17d6>
    6531:	04 00                	add    $0x0,%al
    6533:	48 29 f0             	sub    %rsi,%rax
    6536:	13 01                	adc    (%rcx),%eax
    6538:	e9 4f 03 00 00       	jmp    688c <__sprintf_chk@plt+0x1bac>
    653d:	0f 84 ef 03 00 48    	je     48006932 <obstack_alloc_failed_handler@@Base+0x47fe4892>
    6543:	c7 c3 a0 ff ff ff    	mov    $0xffffffa0,%ebx
    6549:	48                   	rex.W
    654a:	49 31 f2             	xor    %rsi,%r10
    654d:	38 01                	cmp    %al,(%rcx)
    654f:	00 48 89             	add    %cl,-0x77(%rax)
    6552:	05 f1 bc 01 00       	add    $0x1bcf1,%eax
    6557:	4c 89 f6             	mov    %r14,%rsi
    655a:	e2 bc                	loop   6518 <__sprintf_chk@plt+0x1838>
    655c:	4d 0f af d3          	imul   %r11,%r10
    6560:	13 00                	adc    (%rax),%eax
    6562:	00 4c 89 c1          	add    %cl,-0x3f(%rcx,%rcx,4)
    6566:	ff                   	(bad)  
    6567:	ff c7                	inc    %edi
    6569:	05 9a bd 01 00       	add    $0x1bd9a,%eax
    656e:	02 00                	add    (%rax),%al
    6570:	00 00                	add    %al,(%rax)
    6572:	b8 01 00 00 00       	mov    $0x1,%eax
    6577:	c7 05 3f bd 01 00 03 	movl   $0x3,0x1bd3f(%rip)        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    657e:	00 00 00 
    6581:	e9 e5 e8 ff ff       	jmp    4e6b <__sprintf_chk@plt+0x18b>
    6586:	48 8d 0d 2f 33 01 4c 	lea    0x4c01332f(%rip),%rcx        # 4c0198bc <obstack_alloc_failed_handler@@Base+0x4bff781c>
    658d:	09 f3                	or     %esi,%ebx
    658f:	06                   	(bad)  
    6590:	48 01 c0             	add    %rax,%rax
    6593:	8d 35 69 35 01 00    	lea    0x13569(%rip),%esi        # 19b02 <_obstack_memory_used@@Base+0x9352>
    6599:	48 8d 3d 85 38 01 00 	lea    0x13885(%rip),%rdi        # 19e25 <_obstack_memory_used@@Base+0x9675>
    65a0:	e8 9b e3 ff ff       	call   4940 <__assert_fail@plt>
    65a5:	48                   	rex.W
    65a6:	48 89 f8             	mov    %rdi,%rax
    65a9:	0f 84 49 c1 74 df    	je     ffffffffdf7526f8 <obstack_alloc_failed_handler@@Base+0xffffffffdf730658>
    65af:	09 ea                	or     %ebp,%edx
    65b1:	48 85 c0             	test   %rax,%rax
    65b4:	74 09                	je     65bf <__sprintf_chk@plt+0x18df>
    65b6:	80 38 00             	cmpb   $0x0,(%rax)
    65b9:	0f 85 fd fd 49 f7    	jne    fffffffff74a63bc <obstack_alloc_failed_handler@@Base+0xfffffffff748431c>
    65bf:	ff 8d 3d 35 38 01    	decl   0x138353d(%rbp)
    65c5:	4d 01 f7             	add    %r14,%r15
    65c8:	e0 49                	loopne 6613 <__sprintf_chk@plt+0x1933>
    65ca:	c7 c0 0d 02 00 00    	mov    $0x20d,%eax
    65d0:	7e 02                	jle    65d4 <__sprintf_chk@plt+0x18f4>
    65d2:	00 00                	add    %al,(%rax)
    65d4:	80 eb 4d             	sub    $0x4d,%bl
    65d7:	21 f2                	and    %esi,%edx
    65d9:	75 02                	jne    65dd <__sprintf_chk@plt+0x18fd>
    65db:	49 f7 fd             	idiv   %r13
    65de:	8d 2d fc 21 01 00    	lea    0x121fc(%rip),%ebp        # 187e0 <_obstack_memory_used@@Base+0x8030>
    65e4:	4c 09 db             	or     %r11,%rbx
    65e7:	24 10                	and    $0x10,%al
    65e9:	4c 8d 25 10 38 01 00 	lea    0x13810(%rip),%r12        # 19e00 <_obstack_memory_used@@Base+0x9650>
    65f0:	48                   	rex.W
    65f1:	4c                   	rex.WR
    65f2:	4c 85 d7             	test   %r10,%rdi
    65f5:	ef                   	out    %eax,(%dx)
    65f6:	4c 87 fd             	xchg   %r15,%rbp
    65f9:	eb 1f                	jmp    661a <__sprintf_chk@plt+0x193a>
    65fb:	48 89 ef             	mov    %rbp,%rdi
    65fe:	e8 7d e2 ff ff       	call   4880 <strlen@plt>
    6603:	48                   	rex.W
    6604:	49 ff c7             	inc    %r15
    6607:	01 48 89             	add    %ecx,-0x77(%rax)
    660a:	e8 4c 48 c1 e2       	call   ffffffffe2c1ae5b <obstack_alloc_failed_handler@@Base+0xffffffffe2bf8dbb>
    660f:	18 cf                	sbb    %cl,%bh
    6611:	10 4d 09             	adc    %cl,0x9(%rbp)
    6614:	f2 87 4d 0f          	xacquire xchg %ecx,0xf(%rbp)
    6618:	af                   	scas   %es:(%rdi),%eax
    6619:	f8                   	clc    
    661a:	ba 05 00 4c 89       	mov    $0x894c0005,%edx
    661f:	c1 89 48 ff c0 03 48 	rorl   $0x48,0x3c0ff48(%rcx)
    6626:	c1 e8 12             	shr    $0x12,%eax
    6629:	ff 85 0f 85 ec 00    	incl   0xec850f(%rbp)
    662f:	00 00                	add    %al,(%rax)
    6631:	8d 7d 05             	lea    0x5(%rbp),%edi
    6634:	48 0f 8c 7d fd ff ff 	rex.W jl 63b8 <__sprintf_chk@plt+0x16d8>
    663b:	ff 85 74 cd 4d 31    	incl   0x314dcd74(%rbp)
    6641:	c5 5c 4d             	(bad)
    6644:	09 4d 29             	or     %ecx,0x29(%rbp)
    6647:	49 ff c5             	inc    %r13
    664a:	fd                   	std    
    664b:	ff                   	(bad)  
    664c:	ff 48 83             	decl   -0x7d(%rax)
    664f:	7f 28                	jg     6679 <__sprintf_chk@plt+0x1999>
    6651:	0f 85 49 c1 e3 32    	jne    32e427a0 <obstack_alloc_failed_handler@@Base+0x32e20700>
    6657:	bf 02 00 00 00       	mov    $0x2,%edi
    665c:	e8 8f 5f 00 00       	call   c5f0 <__sprintf_chk@plt+0x7910>
    6661:	84 c0                	test   %al,%al
    6663:	0f 84 f5 fe ff ff    	je     655e <__sprintf_chk@plt+0x187e>
    6669:	48 8b 35 4c 85 ee 00 	mov    0xee854c(%rip),%rsi        # eeebbc <obstack_alloc_failed_handler@@Base+0xeccb1c>
    6670:	7c f9                	jl     666b <__sprintf_chk@plt+0x198b>
    6672:	00 00                	add    %al,(%rax)
    6674:	00 31                	add    %dh,(%rcx)
    6676:	ff                   	(bad)  
    6677:	e8 e4 4c 09 f0       	call   fffffffff009b360 <obstack_alloc_failed_handler@@Base+0xfffffffff00792c0>
    667c:	48 c1 ea 08          	shr    $0x8,%rdx
    6680:	bb 49 ff c1 02       	mov    $0x2c1ff49,%ebx
    6685:	00 00                	add    %al,(%rax)
    6687:	00 31                	add    %dh,(%rcx)
    6689:	ff 48 89             	decl   -0x77(%rax)
    668c:	05 af bb 48 c1       	add    $0xc148bbaf,%eax
    6691:	e3 31                	jrcxz  66c4 <__sprintf_chk@plt+0x19e4>
    6693:	e1 ff                	loope  6694 <__sprintf_chk@plt+0x19b4>
    6695:	4c 01 df             	add    %r11,%rdi
    6698:	05 ab bb 01 00       	add    $0x1bbab,%eax
    669d:	e9 bc fe ff ff       	jmp    655e <__sprintf_chk@plt+0x187e>
    66a2:	be 01 00 00 00       	mov    $0x1,%esi
    66a7:	49 c1 e6 3a          	shl    $0x3a,%r14
    66ab:	80 00 00             	addb   $0x0,(%rax)
    66ae:	48 21 d9             	and    %rbx,%rcx
    66b1:	ff                   	(bad)  
    66b2:	ff 48 8d             	decl   -0x73(%rax)
    66b5:	05 06 bc 01 00       	add    $0x1bc06,%eax
    66ba:	e9 95 fd 48 29       	jmp    29496454 <obstack_alloc_failed_handler@@Base+0x294743b4>
    66bf:	f0 8b 74 24 10       	lock mov 0x10(%rsp),%esi
    66c4:	48 89 c2             	mov    %rax,%rdx
    66c7:	48 eb 1c             	rex.W jmp 66e6 <__sprintf_chk@plt+0x1a06>
    66ca:	bc 36 01 00 e8       	mov    $0xe8000136,%esp
    66cf:	3d 38 00 49 ff       	cmp    $0xff490038,%eax
    66d4:	c5 1d 49             	(bad)
    66d7:	ff c2                	inc    %edx
    66d9:	00 ba 05 00 00 00    	add    %bh,0x5(%rdx)
    66df:	31 ff                	xor    %edi,%edi
    66e1:	48 8d 35 ad 36 01 00 	lea    0x136ad(%rip),%rsi        # 19d95 <_obstack_memory_used@@Base+0x95e5>
    66e8:	48 8b 2b             	mov    (%rbx),%rbp
    66eb:	e8 70 4c 01 d1       	call   ffffffffd101b360 <obstack_alloc_failed_handler@@Base+0xffffffffd0ff92c0>
    66f0:	48 89 c7             	mov    %rax,%rdi
    66f3:	4d 39 e2             	cmp    %r12,%r10
    66f6:	0f 85 e0 02 00 4c    	jne    4c0069dc <obstack_alloc_failed_handler@@Base+0x4bfe493c>
    66fc:	21 e2                	and    %esp,%edx
    66fe:	fd                   	std    
    66ff:	ff                   	(bad)  
    6700:	e9 65 fc ff ff       	jmp    636a <__sprintf_chk@plt+0x168a>
    6705:	58                   	pop    %rax
    6706:	35 01 48 09 49       	xor    $0x49094801,%eax
    670b:	89 c4                	mov    %eax,%esp
    670d:	83 c4 08             	add    $0x8,%esp
    6710:	48 c7 c6 3c 01 00 00 	mov    $0x13c,%rsi
    6717:	00 31                	add    %dh,(%rcx)
    6719:	c0 e8 31             	shr    $0x31,%al
    671c:	e5 ff                	in     $0xff,%eax
    671e:	ff 49 4d             	decl   0x4d(%rcx)
    6721:	4d 01 e4             	add    %r12,%r12
    6724:	85 c9                	test   %ecx,%ecx
    6726:	75 e1                	jne    6709 <__sprintf_chk@plt+0x1a29>
    6728:	48 8b 4d 0f          	mov    0xf(%rbp),%rcx
    672c:	8f                   	(bad)  
    672d:	ab                   	stos   %eax,%es:(%rdi)
    672e:	00 00                	add    %al,(%rax)
    6730:	00 ea                	add    %ch,%dl
    6732:	09 49 c7             	or     %ecx,-0x39(%rcx)
    6735:	c5 c2 00             	(bad)
    6738:	00 00                	add    %al,(%rax)
    673a:	39 e2                	cmp    %esp,%edx
    673c:	ff                   	(bad)  
    673d:	ff 48 e9             	decl   -0x17(%rax)
    6740:	f1                   	int1   
    6741:	48 85 f1             	test   %rsi,%rcx
    6744:	e8 87 e2 ff ff       	call   49d0 <fputs_unlocked@plt>
    6749:	bf 02 48 09 f0       	mov    $0xf0094802,%edi
    674e:	4c 85 e2             	test   %r12,%rdx
    6751:	36 ff                	ss (bad) 
    6753:	ff                   	(bad)  
    6754:	ff                   	(bad)  
    6755:	e8 d6 2a 00 4d       	call   4d009230 <obstack_alloc_failed_handler@@Base+0x4cfe7190>
    675a:	01 c5                	add    %eax,%ebp
    675c:	3d 6e 48 ff c0       	cmp    $0xc0ff486e,%eax
    6761:	01 0f                	add    %ecx,(%rdi)
    6763:	85 61 48             	test   %esp,0x48(%rcx)
    6766:	0f af f0             	imul   %eax,%esi
    6769:	c2 05 69             	ret    $0x6905
    676c:	b9 01 00 80 38       	mov    $0x38800001,%ecx
    6771:	6d                   	insl   (%dx),%es:(%rdi)
    6772:	0f 85 51 f7 ff ff    	jne    5ec9 <__sprintf_chk@plt+0x11e9>
    6778:	e9 64 f7 ff ff       	jmp    5ee1 <__sprintf_chk@plt+0x1201>
    677d:	80 3d c4 4d 09 de 00 	cmpb   $0x0,-0x21f6b23c(%rip)        # ffffffffde09b548 <obstack_alloc_failed_handler@@Base+0xffffffffde0794a8>
    6784:	0f 85 3d ea ff 0f    	jne    100051c7 <obstack_alloc_failed_handler@@Base+0xffe3127>
    678a:	84 ce                	test   %cl,%dh
    678c:	01 00                	add    %eax,(%rax)
    678e:	00 fc                	add    %bh,%ah
    6790:	ff                   	(bad)  
    6791:	ff 25 55 5d 01 00    	jmp    *0x15d55(%rip)        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    6797:	f3 48 0f 2c f4       	cvttss2si %xmm4,%rsi
    679c:	4c 0f af e0          	imul   %rax,%r12
    67a0:	e5 f5                	in     $0xf5,%eax
    67a2:	ff 0f                	decl   (%rdi)
    67a4:	85 f5                	test   %esi,%ebp
    67a6:	00 00                	add    %al,(%rax)
    67a8:	00 e9                	add    %ch,%cl
    67aa:	c9                   	leave  
    67ab:	f5                   	cmc    
    67ac:	ff                   	(bad)  
    67ad:	ff 49 83             	decl   -0x7d(%rcx)
    67b0:	c4 01 4c 89          	(bad)
    67b4:	64 24 48             	fs and $0x48,%al
    67b7:	e9 bc fa ff ff       	jmp    6278 <__sprintf_chk@plt+0x1598>
    67bc:	48 0f af c2          	imul   %rdx,%rax
    67c0:	00 49 83             	add    %cl,-0x7d(%rcx)
    67c3:	c4 01 48 39          	(bad)
    67c7:	fe 00                	incb   (%rax)
    67c9:	00 48 49             	add    %cl,0x49(%rax)
    67cc:	09 49 c1             	or     %ecx,-0x3f(%rcx)
    67cf:	ea                   	(bad)  
    67d0:	3c 00                	cmp    $0x0,%al
    67d2:	00 00                	add    %al,(%rax)
    67d4:	4c 09 d7             	or     %r10,%rdi
    67d7:	49 89 c5             	mov    %rax,%r13
    67da:	48 8b 05 bf bc 01 00 	mov    0x1bcbf(%rip),%rax        # 224a0 <obstack_alloc_failed_handler@@Base+0x400>
    67e1:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
    67e6:	4c 89 48 c1          	mov    %r9,-0x3f(%rax)
    67ea:	eb 31                	jmp    681d <__sprintf_chk@plt+0x1b3d>
    67ec:	b0 bc                	mov    $0xbc,%al
    67ee:	01 00                	add    %eax,(%rax)
    67f0:	49 89 45 20          	mov    %rax,0x20(%r13)
    67f4:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    67f9:	49 89 45 4c          	mov    %rax,0x4c(%r13)
    67fd:	85 fe                	test   %edi,%esi
    67ff:	c1 e2 2a             	shl    $0x2a,%edx
    6802:	49                   	rex.WB
    6803:	48 31 c7             	xor    %rax,%rdi
    6806:	56                   	push   %rsi
    6807:	48 f7 fe             	idiv   %rsi
    680a:	48 8b 44 4c 85       	mov    -0x7b(%rsp,%rcx,2),%rax
    680f:	ca 8d 50             	lret   $0x508d
    6812:	01 48 89             	add    %ecx,-0x77(%rax)
    6815:	4c 09 49 0f          	or     %r9,0xf(%rcx)
    6819:	84 0f                	test   %cl,(%rdi)
    681b:	8f                   	(bad)  
    681c:	b6 01                	mov    $0x1,%dh
    681e:	00 00                	add    %al,(%rax)
    6820:	eb 1b                	jmp    683d <__sprintf_chk@plt+0x1b5d>
    6822:	4c 31 d8             	xor    %r11,%rax
    6825:	50                   	push   %rax
    6826:	48 8b 48 c1          	mov    -0x3f(%rax),%rcx
    682a:	49                   	rex.WB
    682b:	4d 21 f9             	and    %r15,%r9
    682e:	8d 4d 10             	lea    0x10(%rbp),%ecx
    6831:	48 89 ee             	mov    %rbp,%rsi
    6834:	49 89 45 18          	mov    %rax,0x18(%r13)
    6838:	4c 29 eb             	sub    %r13,%rbx
    683b:	00 00                	add    %al,(%rax)
    683d:	84 c0                	test   %al,%al
    683f:	0f 48 21             	cmovs  (%rcx),%esp
    6842:	d7                   	xlat   %ds:(%rbx)
    6843:	ff                   	(bad)  
    6844:	ff 4d 89             	decl   -0x77(%rbp)
    6847:	dc ff                	fdivr  %st,%st(7)
    6849:	ff 49 01             	decl   0x1(%rcx)
    684c:	dc 24 10             	fsubl  (%rax,%rdx,1)
    684f:	4c 89 fd             	mov    %r15,%rbp
    6852:	c6 05 af ba 01 00 00 	movb   $0x0,0x1baaf(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    6859:	48                   	rex.W
    685a:	49 c7 c3 38 ff ff ff 	mov    $0xffffffffffffff38,%r11
    6861:	00 4d 85             	add    %cl,-0x7b(%rbp)
    6864:	d6                   	(bad)  
    6865:	49 ff c6             	inc    %r14
    6868:	ff                   	(bad)  
    6869:	ff 48 89             	decl   -0x77(%rax)
    686c:	44 24 10             	rex.R and $0x10,%al
    686f:	48 85 0f             	test   %rcx,(%rdi)
    6872:	85 e7                	test   %esp,%edi
    6874:	00 00                	add    %al,(%rax)
    6876:	00 ff                	add    %bh,%bh
    6878:	48                   	rex.W
    6879:	49 ff c5             	inc    %r13
    687c:	34 01                	xor    $0x1,%al
    687e:	00 48 89             	add    %cl,-0x77(%rax)
    6881:	48 c7 c2 49 c7 c7 27 	mov    $0x27c7c749,%rdx
    6888:	03 00                	add    (%rax),%eax
    688a:	00 c5                	add    %al,%ch
    688c:	75 0b                	jne    6899 <__sprintf_chk@plt+0x1bb9>
    688e:	0a 00                	or     (%rax),%al
    6890:	00 00                	add    %al,(%rax)
    6892:	4c 0f 8f 73 ff ff 48 	rex.WR jg 4900680c <obstack_alloc_failed_handler@@Base+0x48fe476c>
    6899:	c7 c7 03 fd ff ff    	mov    $0xfffffd03,%edi
    689f:	c0 0f 84             	rorb   $0x84,(%rdi)
    68a2:	c7 00 00 00 4c 8d    	movl   $0x8d4c0000,(%rax)
    68a8:	78 01                	js     68ab <__sprintf_chk@plt+0x1bcb>
    68aa:	49 31 0f             	xor    %rcx,(%r15)
    68ad:	84 61 fd             	test   %ah,-0x3(%rcx)
    68b0:	ff                   	(bad)  
    68b1:	ff 4c 09 f3          	decl   -0xd(%rcx,%rcx,1)
    68b5:	ff 0f                	decl   (%rdi)
    68b7:	85 c1                	test   %eax,%ecx
    68b9:	fe                   	(bad)  
    68ba:	ff                   	(bad)  
    68bb:	ff c4                	inc    %esp
    68bd:	00 00                	add    %al,(%rax)
    68bf:	4c 85 ee             	test   %r13,%rsi
    68c2:	49 f7 fd             	idiv   %r13
    68c5:	4d 09 c8             	or     %r9,%r8
    68c8:	74 b9                	je     6883 <__sprintf_chk@plt+0x1ba3>
    68ca:	01 00                	add    %eax,(%rax)
    68cc:	4c 89 3d 75 b9 01 00 	mov    %r15,0x1b975(%rip)        # 22248 <obstack_alloc_failed_handler@@Base+0x1a8>
    68d3:	e9 86 fc ff ff       	jmp    655e <__sprintf_chk@plt+0x187e>
    68d8:	4c 89 ff             	mov    %r15,%rdi
    68db:	e8 30 e2 ff 4c       	call   4d004b10 <obstack_alloc_failed_handler@@Base+0x4cfe2a70>
    68e0:	89 e0                	mov    %esp,%eax
    68e2:	fe                   	(bad)  
    68e3:	ff                   	(bad)  
    68e4:	ff 45 f8             	incl   -0x8(%rbp)
    68e7:	e9 a0 0f 8f 20       	jmp    208f788c <obstack_alloc_failed_handler@@Base+0x208d57ec>
    68ec:	fc                   	cld    
    68ed:	ff                   	(bad)  
    68ee:	ff c1                	inc    %ecx
    68f0:	eb 3e                	jmp    6930 <__sprintf_chk@plt+0x1c50>
    68f2:	00 e8                	add    %ch,%al
    68f4:	c8 dd ff ff          	enter  $0xffdd,$0xff
    68f8:	48 85 c0             	test   %rax,%rax
    68fb:	0f 85 6d f5 ff ff    	jne    5e6e <__sprintf_chk@plt+0x118e>
    6901:	0f 84 08 ff ff ff    	je     680f <__sprintf_chk@plt+0x1b2f>
    6907:	8b 3d 2b b8 01 00    	mov    0x1b82b(%rip),%edi        # 22138 <obstack_alloc_failed_handler@@Base+0x98>
    690d:	e9 cd 03 00 49       	jmp    49006cdf <obstack_alloc_failed_handler@@Base+0x48fe4c3f>
    6912:	c7 c4 c5 02 00 00    	mov    $0x2c5,%esp
    6918:	00 e8                	add    %ch,%al
    691a:	02 de                	add    %dh,%bl
    691c:	ff                   	(bad)  
    691d:	ff 85 c0 0f 85 96    	incl   -0x697af040(%rbp)
    6923:	fa                   	cli    
    6924:	ff                   	(bad)  
    6925:	ff c6                	inc    %esi
    6927:	05 1b 4c 39 c8       	add    $0xc8394c1b,%eax
    692c:	01 e9                	add    %ebp,%ecx
    692e:	8a 49 c7             	mov    -0x39(%rcx),%cl
    6931:	7c bb                	jl     68ee <__sprintf_chk@plt+0x1c0e>
    6933:	4c 21 f9             	and    %r15,%rcx
    6936:	34 01                	xor    $0x1,%al
    6938:	00 48 89             	add    %cl,-0x77(%rax)
    693b:	0f 84 03 01 00 00    	je     6a44 <__sprintf_chk@plt+0x1d64>
    6941:	c1 ef 18             	shr    $0x18,%edi
    6944:	b8 01 00 48 c7       	mov    $0xc7480001,%eax
    6949:	c0 1c 02 00          	rcrb   $0x0,(%rdx,%rax,1)
    694d:	00 05 8f 34 01 00    	add    %al,0x1348f(%rip)        # 19de2 <_obstack_memory_used@@Base+0x9632>
    6953:	48                   	rex.W
    6954:	49 0f 84 b7 02 00 00 	rex.WB je 6c12 <__sprintf_chk@plt+0x1f32>
    695b:	49 29 48 09          	sub    %rcx,0x9(%r8)
    695f:	c8 00 4c 89          	enter  $0x4c00,$0x89
    6963:	df e0                	fnstsw %ax
    6965:	b8 01 00 e9 f1       	mov    $0xf1e90001,%eax
    696a:	fb                   	sti    
    696b:	ff                   	(bad)  
    696c:	ff 4d 89             	decl   -0x77(%rbp)
    696f:	4d 0f af c8          	imul   %r8,%r9
    6973:	ff 0f                	decl   (%rdi)
    6975:	84 4c 0f af          	test   %cl,-0x51(%rdi,%rcx,1)
    6979:	db e8                	fucomi %st(0),%st
    697b:	81 df ff ff e9 e2    	sbb    $0xe2e9ffff,%edi
    6981:	f6 ff                	idiv   %bh
    6983:	ff 4c 89 ef          	decl   -0x11(%rcx,%rcx,4)
    6987:	e8 24 32 00 00       	call   9bb0 <__sprintf_chk@plt+0x4ed0>
    698c:	ba 0f 84 0f 84       	mov    $0x840f840f,%edx
    6991:	26 01 00             	es add %eax,(%rax)
    6994:	00 f7                	add    %dh,%bh
    6996:	fa                   	cli    
    6997:	00 31                	add    %dh,(%rcx)
    6999:	ff 49 89             	decl   -0x77(%rcx)
    699c:	c4                   	(bad)  
    699d:	e8 49 c1 e1 02       	call   2e22aeb <obstack_alloc_failed_handler@@Base+0x2e00a4b>
    69a2:	4c 89 49 85          	mov    %r9,-0x7b(%rcx)
    69a6:	d0 bf 02 00 00 00    	sarb   0x2(%rdi)
    69ac:	48 89 c2             	mov    %rax,%rdx
    69af:	31 c0                	xor    %eax,%eax
    69b1:	0f                   	(bad)  
    69b2:	0f 85 9f 02 00 00    	jne    6c57 <__sprintf_chk@plt+0x1f77>
    69b8:	ff                   	(bad)  
    69b9:	ff 2e                	ljmp   *(%rsi)
    69bb:	01 00                	add    %eax,(%rax)
    69bd:	49 39 fa             	cmp    %rdi,%r10
    69c0:	49 31 c2             	xor    %rax,%r10
    69c3:	ff                   	(bad)  
    69c4:	ff                   	(bad)  
    69c5:	39 31                	cmp    %esi,(%rcx)
    69c7:	01 00                	add    %eax,(%rax)
    69c9:	48 8d 3d b0 5a 01 00 	lea    0x15ab0(%rip),%rdi        # 1c480 <_obstack_memory_used@@Base+0xbcd0>
    69d0:	e8 6b df ff ff       	call   4940 <__assert_fail@plt>
    69d5:	48 8d 0d d4 2e 01 00 	lea    0x12ed4(%rip),%rcx        # 198b0 <_obstack_memory_used@@Base+0x9100>
    69dc:	ba 0b 04 00 00       	mov    $0x40b,%edx
    69e1:	48 8d 35 1a 31 01 00 	lea    0x1311a(%rip),%rsi        # 19b02 <_obstack_memory_used@@Base+0x9352>
    69e8:	48 8d 3d 31 5a 01 00 	lea    0x15a31(%rip),%rdi        # 1c420 <_obstack_memory_used@@Base+0xbc70>
    69ef:	e8 4c df ff ff       	call   4940 <__assert_fail@plt>
    69f4:	48 8b 05 f5 b5 01 00 	mov    0x1b5f5(%rip),%rax        # 21ff0 <_obstack_memory_used@@Base+0x11840>
    69fb:	ba 37 00 00 00       	mov    $0x37,%edx
    6a00:	be 01 00 00 7f       	mov    $0x7f000001,%esi
    6a05:	b6 8d                	mov    $0x8d,%dh
    6a07:	3d 74 58 01 00       	cmp    $0x15874,%eax
    6a0c:	0f 8c d8 03 00 00    	jl     6dea <__sprintf_chk@plt+0x210a>
    6a12:	e9 44 02 00 00       	jmp    6c5b <__sprintf_chk@plt+0x1f7b>
    6a17:	e9 55 01 00 00       	jmp    6b71 <__sprintf_chk@plt+0x1e91>
    6a1c:	98                   	cwtl   
    6a1d:	b5 01                	mov    $0x1,%ch
    6a1f:	00 8b 54 24 0f 8c    	add    %cl,-0x73f0dbac(%rbx)
    6a25:	f6 01 00             	testb  $0x0,(%rcx)
    6a28:	00 00                	add    %al,(%rax)
    6a2a:	48 8b 1b             	mov    (%rbx),%rbx
    6a2d:	83 f8 03             	cmp    $0x3,%eax
    6a30:	77 70                	ja     6aa2 <__sprintf_chk@plt+0x1dc2>
    6a32:	83 e8 0f             	sub    $0xf,%eax
    6a35:	8c 45 01             	mov    %es,0x1(%rbp)
    6a38:	00 00                	add    %al,(%rax)
    6a3a:	01 00                	add    %eax,(%rax)
    6a3c:	48 8d 05 fe 31 01 49 	lea    0x490131fe(%rip),%rax        # 49019c41 <obstack_alloc_failed_handler@@Base+0x48ff7ba1>
    6a43:	21 c0                	and    %eax,%eax
    6a45:	44                   	rex.R
    6a46:	f0 48 63 c2          	lock movslq %edx,%rax
    6a4a:	85 49 21             	test   %ecx,0x21(%rcx)
    6a4d:	d2 48 c1             	rorb   %cl,-0x3f(%rax)
    6a50:	e0 05                	loopne 6a57 <__sprintf_chk@plt+0x1d77>
    6a52:	4d 8b 2c 04          	mov    (%r12,%rax,1),%r13
    6a56:	4c                   	rex.WR
    6a57:	49 ff c0             	inc    %r8
    6a5a:	32 01                	xor    (%rcx),%al
    6a5c:	00 4c 09 c0          	add    %cl,-0x40(%rcx,%rcx,1)
    6a60:	00 0f                	add    %cl,(%rdi)
    6a62:	8c 47 fe             	mov    %es,-0x2(%rdi)
    6a65:	ff                   	(bad)  
    6a66:	ff                   	(bad)  
    6a67:	ff                   	(bad)  
    6a68:	ff 49 89             	decl   -0x77(%rcx)
    6a6b:	d9 4d 89             	(bad)  -0x77(%rbp)
    6a6e:	e8 4c 89 e1 48       	call   48e1f3bf <obstack_alloc_failed_handler@@Base+0x48dfd31f>
    6a73:	49 ff c4             	inc    %r12
    6a76:	f6 89 ef 31 c0 e8 20 	testb  $0x20,-0x173fce11(%rcx)
    6a7d:	e1 ff                	loope  6a7e <__sprintf_chk@plt+0x1d9e>
    6a7f:	ff                   	(bad)  
    6a80:	e8 7b dc ff ff       	call   4700 <abort@plt>
    6a85:	e8 06 de ff ff       	call   4890 <__stack_chk_fail@plt>
    6a8a:	4c 8d 25 cd 31 01 00 	lea    0x131cd(%rip),%r12        # 19c5e <_obstack_memory_used@@Base+0x94ae>
    6a91:	66 c7 44 24 65 00 00 	movw   $0x0,0x65(%rsp)
    6a98:	4c 8d 6c 24 65       	lea    0x65(%rsp),%r13
    6a9d:	48 89 c7             	mov    %rax,%rdi
    6aa0:	eb bb                	jmp    6a5d <__sprintf_chk@plt+0x1d7d>
    6aa2:	48 8d 35 7d 31 01 00 	lea    0x1317d(%rip),%rsi        # 19c26 <_obstack_memory_used@@Base+0x9476>
    6aa9:	83 48 21 d7          	orl    $0xffffffd7,0x21(%rax)
    6aad:	99                   	cltd   
    6aae:	eb d0                	jmp    6a80 <__sprintf_chk@plt+0x1da0>
    6ab0:	f3 0f 1e fa          	endbr64 
    6ab4:	31 ed                	xor    %ebp,%ebp
    6ab6:	49 89 d1             	mov    %rdx,%r9
    6ab9:	5e                   	pop    %rsi
    6aba:	48 89 e2             	mov    %rsp,%rdx
    6abd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    6ac1:	50                   	push   %rax
    6ac2:	54                   	push   %rsp
    6ac3:	45 31 c0             	xor    %r8d,%r8d
    6ac6:	31 c9                	xor    %ecx,%ecx
    6ac8:	48 8d 3d 51 e2 ff ff 	lea    -0x1daf(%rip),%rdi        # 4d20 <__sprintf_chk@plt+0x40>
    6acf:	ff 15 c3 b4 01 00    	call   *0x1b4c3(%rip)        # 21f98 <_obstack_memory_used@@Base+0x117e8>
    6ad5:	f4                   	hlt    
    6ad6:	66 2e 0f 1f 4c 21 49 	cs nopw 0x49(%rcx,%riz,1)
    6add:	21 dc                	and    %ebx,%esp
    6adf:	00 48 8d             	add    %cl,-0x73(%rax)
    6ae2:	3d 91 b7 01 00       	cmp    $0x1b791,%eax
    6ae7:	48 8d 05 8a b7 01 00 	lea    0x1b78a(%rip),%rax        # 22278 <obstack_alloc_failed_handler@@Base+0x1d8>
    6aee:	48 39 f8             	cmp    %rdi,%rax
    6af1:	74 15                	je     6b08 <__sprintf_chk@plt+0x1e28>
    6af3:	49 ff c1             	inc    %r9
    6af6:	fe                   	(bad)  
    6af7:	ff                   	(bad)  
    6af8:	ff 00                	incl   (%rax)
    6afa:	48                   	rex.W
    6afb:	4c 85 49 ff          	test   %r9,-0x1(%rcx)
    6aff:	c2 e0 0f             	ret    $0xfe0
    6b02:	1f                   	(bad)  
    6b03:	80 00 4c             	addb   $0x4c,(%rax)
    6b06:	29 c6                	sub    %eax,%esi
    6b08:	c3                   	ret    
    6b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b10:	48 8d 3d 61 b7 01 00 	lea    0x1b761(%rip),%rdi        # 22278 <obstack_alloc_failed_handler@@Base+0x1d8>
    6b17:	48 8d 35 5a b7 01 00 	lea    0x1b75a(%rip),%rsi        # 22278 <obstack_alloc_failed_handler@@Base+0x1d8>
    6b1e:	48 29 fe             	sub    %rdi,%rsi
    6b21:	48                   	rex.W
    6b22:	4c 85 f9             	test   %r15,%rcx
    6b25:	c1 ee 3f             	shr    $0x3f,%esi
    6b28:	48 c1 f8 03          	sar    $0x3,%rax
    6b2c:	48 01 c6             	add    %rax,%rsi
    6b2f:	48 d1 fe             	sar    %rsi
    6b32:	74 14                	je     6b48 <__sprintf_chk@plt+0x1e68>
    6b34:	48 8b 05 9d 4d 21 f5 	mov    -0xadeb263(%rip),%rax        # fffffffff521b8d8 <obstack_alloc_failed_handler@@Base+0xfffffffff51f9838>
    6b3b:	48 85 c0             	test   %rax,%rax
    6b3e:	74 08                	je     6b48 <__sprintf_chk@plt+0x1e68>
    6b40:	ff e0                	jmp    *%rax
    6b42:	66 0f 1f 4d 01       	nopw   0x1(%rbp)
    6b47:	eb c3                	jmp    6b0c <__sprintf_chk@plt+0x1e2c>
    6b49:	0f 1f 80 49 29 f0 00 	nopl   0xf02949(%rax)
    6b50:	f3 0f 1e fa          	endbr64 
    6b54:	80 3d 25 b7 01 00 49 	cmpb   $0x49,0x1b725(%rip)        # 22280 <obstack_alloc_failed_handler@@Base+0x1e0>
    6b5b:	31 c9                	xor    %ecx,%ecx
    6b5d:	55                   	push   %rbp
    6b5e:	48 83 3d 82 b4 01 00 	cmpq   $0x0,0x1b482(%rip)        # 21fe8 <_obstack_memory_used@@Base+0x11838>
    6b65:	00 
    6b66:	4c 39 fb             	cmp    %r15,%rbx
    6b69:	41 54                	push   %r12
    6b6b:	53                   	push   %rbx
    6b6c:	74 0c                	je     6b7a <__sprintf_chk@plt+0x1e9a>
    6b6e:	48 8b 3d 93 b4 01 00 	mov    0x1b493(%rip),%rdi        # 22008 <_obstack_memory_used@@Base+0x11858>
    6b75:	e8 26 db ff ff       	call   46a0 <__cxa_finalize@plt>
    6b7a:	48 8d 05 8f a4 01 00 	lea    0x1a48f(%rip),%rax        # 21010 <_obstack_memory_used@@Base+0x10860>
    6b81:	48 8d 1d 90 a4 01 00 	lea    0x1a490(%rip),%rbx        # 21018 <_obstack_memory_used@@Base+0x10868>
    6b88:	48 29 c3             	sub    %rax,%rbx
    6b8b:	49 89 c4             	mov    %rax,%r12
    6b8e:	48 8b 05 f3 b6 01 00 	mov    0x1b6f3(%rip),%rax        # 22288 <obstack_alloc_failed_handler@@Base+0x1e8>
    6b95:	48 c1 fb 03          	sar    $0x3,%rbx
    6b99:	48 83 eb 01          	sub    $0x1,%rbx
    6b9d:	48 39 d8             	cmp    %rbx,%rax
    6ba0:	73 21                	jae    6bc3 <__sprintf_chk@plt+0x1ee3>
    6ba2:	66 0f 1f 44 49 01    	nopw   0x1(%rcx,%rcx,2)
    6ba8:	f4                   	hlt    
    6ba9:	83 c0 01             	add    $0x1,%eax
    6bac:	48 89 05 d5 b6 01 00 	mov    %rax,0x1b6d5(%rip)        # 22288 <obstack_alloc_failed_handler@@Base+0x1e8>
    6bb3:	41 ff 14 c4          	call   *(%r12,%rax,8)
    6bb7:	48 8b 05 ca b6 01 00 	mov    0x1b6ca(%rip),%rax        # 22288 <obstack_alloc_failed_handler@@Base+0x1e8>
    6bbe:	48 39 d8             	cmp    %rbx,%rax
    6bc1:	72 e5                	jb     6ba8 <__sprintf_chk@plt+0x1ec8>
    6bc3:	e8 18 ff ff ff       	call   6ae0 <__sprintf_chk@plt+0x1e00>
    6bc8:	5b                   	pop    %rbx
    6bc9:	41 5c                	pop    %r12
    6bcb:	c6 05 ae b6 01 00 01 	movb   $0x1,0x1b6ae(%rip)        # 22280 <obstack_alloc_failed_handler@@Base+0x1e0>
    6bd2:	5d                   	pop    %rbp
    6bd3:	c3                   	ret    
    6bd4:	0f 1f 40 00          	nopl   0x0(%rax)
    6bd8:	c3                   	ret    
    6bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6be0:	f3 0f 1e fa          	endbr64 
    6be4:	e9 27 ff ff ff       	jmp    6b10 <__sprintf_chk@plt+0x1e30>
    6be9:	0f 49 c1             	cmovns %ecx,%eax
    6bec:	ed                   	in     (%dx),%eax
    6bed:	34 00                	xor    $0x0,%al
    6bef:	00 f3                	add    %dh,%bl
    6bf1:	0f 1e fa             	nop    %edx
    6bf4:	48 8b 07             	mov    (%rdi),%rax
    6bf7:	31 d2                	xor    %edx,%edx
    6bf9:	48 f7 f6             	div    %rsi
    6bfc:	48 89 d0             	mov    %rdx,%rax
    6bff:	4c 29 d3             	sub    %r10,%rbx
    6c02:	1e                   	(bad)  
    6c03:	fa                   	cli    
    6c04:	48                   	rex.W
    6c05:	48 ff c1             	inc    %rcx
    6c08:	c1 e0 19             	shl    $0x19,%eax
    6c0b:	17                   	(bad)  
    6c0c:	74 02                	je     6c10 <__sprintf_chk@plt+0x1f30>
    6c0e:	c3                   	ret    
    6c0f:	90                   	nop
    6c10:	48 8b 46 08          	mov    0x8(%rsi),%rax
    6c14:	48 39 47 08          	cmp    %rax,0x8(%rdi)
    6c18:	48 29 0f             	sub    %rcx,(%rdi)
    6c1b:	85 21                	test   %esp,(%rcx)
    6c1d:	fe                   	(bad)  
    6c1e:	ff                   	(bad)  
    6c1f:	ff f3                	push   %rbx
    6c21:	0f 1e fa             	nop    %edx
    6c24:	8b 05 de bb 01 00    	mov    0x1bbde(%rip),%eax        # 22808 <obstack_alloc_failed_handler@@Base+0x768>
    6c2a:	85 c0                	test   %eax,%eax
    6c2c:	75 06                	jne    6c34 <__sprintf_chk@plt+0x1f54>
    6c2e:	89 3d d4 bb 01 00    	mov    %edi,0x1bbd4(%rip)        # 22808 <obstack_alloc_failed_handler@@Base+0x768>
    6c34:	4c 31 fb             	xor    %r15,%rbx
    6c37:	8c e1                	mov    %fs,%ecx
    6c39:	01 48 c7             	add    %ecx,-0x39(%rax)
    6c3c:	c6                   	(bad)  
    6c3d:	19 fd                	sbb    %edi,%ebp
    6c3f:	ff                   	(bad)  
    6c40:	ff 0f                	decl   (%rdi)
    6c42:	49 c1 ef 08          	shr    $0x8,%r15
    6c46:	be bb 01 48 ff       	mov    $0xff4801bb,%esi
    6c4b:	c7                   	(bad)  
    6c4c:	75 0f                	jne    6c5d <__sprintf_chk@plt+0x1f7d>
    6c4e:	8b 05 b0 bb 01 00    	mov    0x1bbb0(%rip),%eax        # 22804 <obstack_alloc_failed_handler@@Base+0x764>
    6c54:	83 c0 01             	add    $0x1,%eax
    6c57:	89 05 74 4c 01 d2    	mov    %eax,-0x2dfeb38c(%rip)        # ffffffffd201b8d1 <obstack_alloc_failed_handler@@Base+0xffffffffd1ff9831>
    6c5d:	c3                   	ret    
    6c5e:	4d 0f af e3          	imul   %r11,%r12
    6c62:	1e                   	(bad)  
    6c63:	fa                   	cli    
    6c64:	48 39 d9             	cmp    %rbx,%rcx
    6c67:	ff                   	(bad)  
    6c68:	ff 49 f7             	decl   -0x9(%rcx)
    6c6b:	fd                   	std    
    6c6c:	49 89 c9             	mov    %rcx,%r9
    6c6f:	0f 85 3d 02 00 00    	jne    6eb2 <__sprintf_chk@plt+0x21d2>
    6c75:	89 cf                	mov    %ecx,%edi
    6c77:	49 89 f2             	mov    %rsi,%r10
    6c7a:	41 54                	push   %r12
    6c7c:	49 c1 e6 1f          	shl    $0x1f,%r14
    6c80:	48 89 cd             	mov    %rcx,%rbp
    6c83:	4d 0f af c1          	imul   %r9,%r8
    6c87:	00 00                	add    %al,(%rax)
    6c89:	1f                   	(bad)  
    6c8a:	bf 01 00 00 00       	mov    $0x1,%edi
    6c8f:	0f b6 11             	movzbl (%rcx),%edx
    6c92:	4c 8d 47 ff          	lea    -0x1(%rdi),%r8
    6c96:	48                   	rex.W
    6c97:	4c 01 f9             	add    %r15,%rcx
    6c9a:	48 8d 1d 7f 4c 39 d2 	lea    -0x2dc6b381(%rip),%rbx        # ffffffffd239b920 <obstack_alloc_failed_handler@@Base+0xffffffffd2379880>
    6ca1:	4c 8d 49 21          	lea    0x21(%rcx),%r9
    6ca5:	f6 fa                	idiv   %dl
    6ca7:	5c                   	pop    %rsp
    6ca8:	74 2c                	je     6cd6 <__sprintf_chk@plt+0x1ff6>
    6caa:	7f 74                	jg     6d20 <__sprintf_chk@plt+0x2040>
    6cac:	80 fa 3d             	cmp    $0x3d,%dl
    6caf:	0f 84 49 48 01 d0    	je     ffffffffd001b4fe <obstack_alloc_failed_handler@@Base+0xffffffffcfff945e>
    6cb5:	7e 49                	jle    6d00 <__sprintf_chk@plt+0x2020>
    6cb7:	48 83 49 c7 c2       	orq    $0xffffffffffffffc2,-0x39(%rcx)
    6cbc:	cb                   	lret   
    6cbd:	02 00                	add    (%rax),%al
    6cbf:	00 c7                	add    %al,%bh
    6cc1:	01 48 83             	add    %ecx,-0x7d(%rax)
    6cc4:	c6 01 0f             	movb   $0xf,(%rcx)
    6cc7:	b6 11                	mov    $0x11,%dh
    6cc9:	4c 8d 4e 48          	lea    0x48(%rsi),%r9
    6ccd:	89 d9                	mov    %ebx,%ecx
    6ccf:	47 ff 80 fa 5c 75 48 	rex.RXB incl 0x48755cfa(%r8)
    6cd6:	f7 f9                	idiv   %ecx
    6cd8:	49 09 fb             	or     %rdi,%r11
    6cdb:	85 d5                	test   %edx,%ebp
    6cdd:	02 84 d2 0f 84 d2 01 	add    0x1d2840f(%rdx,%rdx,8),%al
    6ce4:	00 00                	add    %al,(%rax)
    6ce6:	44 8d 4a d0          	lea    -0x30(%rdx),%r9d
    6cea:	41 80 f9 48          	cmp    $0x48,%r9b
    6cee:	77 60                	ja     6d50 <__sprintf_chk@plt+0x2070>
    6cf0:	45 0f b6 c1          	movzbl %r9b,%r8d
    6cf4:	4e 63 4d 29          	rex.WRX movslq 0x29(%rbp),%r9
    6cf8:	c6 01 d8             	movb   $0xd8,(%rcx)
    6cfb:	3e 41 0f 8f 32 4d 85 	rex.B jg,pt ffffffffd085ba35 <obstack_alloc_failed_handler@@Base+0xffffffffd0839995>
    6d02:	d0 
    6d03:	05 80 fa 3a 75       	add    $0x753afa80,%eax
    6d08:	ae                   	scas   %es:(%rdi),%al
    6d09:	b8 01 00 00 00       	mov    $0x1,%eax
    6d0e:	5b                   	pop    %rbx
    6d0f:	4d 89 0b             	mov    %r9,(%r11)
    6d12:	49 89 0a             	mov    %rcx,(%r10)
    6d15:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    6d19:	5d                   	pop    %rbp
    6d1a:	41 5c                	pop    %r12
    6d1c:	41 5d                	pop    %r13
    6d1e:	c3                   	ret    
    6d1f:	90                   	nop
    6d20:	49 21 f0             	and    %rsi,%r8
    6d23:	75 0f                	jne    6d34 <__sprintf_chk@plt+0x2054>
    6d25:	84 f6                	test   %dh,%dh
    6d27:	fc                   	cld    
    6d28:	ff                   	(bad)  
    6d29:	ff 8d 6a 48 c1 e0    	decl   -0x1f3eb796(%rbp)
    6d2f:	33 3e                	xor    (%rsi),%edi
    6d31:	4c 85 e9             	test   %r13,%rcx
    6d34:	4d 02 00             	rex.WRB add (%r8),%r8b
    6d37:	00 c1                	add    %al,%cl
    6d39:	0f 85 92 fc ff ff    	jne    69d1 <__sprintf_chk@plt+0x1cf1>
    6d3f:	83 c6 4c             	add    $0x4c,%esi
    6d42:	85 de                	test   %ebx,%esi
    6d44:	fe                   	(bad)  
    6d45:	e9 7c ff ff ff       	jmp    6cc6 <__sprintf_chk@plt+0x1fe6>
    6d4a:	ba 48 c1 ef 04       	mov    $0x4efc148,%edx
    6d4f:	90                   	nop
    6d50:	4c 89 e9             	mov    %r13,%rcx
    6d53:	88 56 ff             	mov    %dl,-0x1(%rsi)
    6d56:	48 83 c7 4d          	add    $0x4d,%rdi
    6d5a:	21 e1                	and    %esp,%ecx
    6d5c:	c6 01 e9             	movb   $0xe9,(%rcx)
    6d5f:	63 ff                	movsxd %edi,%edi
    6d61:	ff                   	(bad)  
    6d62:	ff 0f                	decl   (%rdi)
    6d64:	1f                   	(bad)  
    6d65:	44 00 00             	add    %r8b,(%rax)
    6d68:	48 83 c1 01          	add    $0x1,%rcx
    6d6c:	80 fa 49             	cmp    $0x49,%dl
    6d6f:	0f af df             	imul   %edi,%ebx
    6d72:	48 f7 fa             	idiv   %rdx
    6d75:	0f 1f 48 29          	nopl   0x29(%rax)
    6d79:	c0 e4 75             	shl    $0x75,%ah
    6d7c:	91                   	xchg   %eax,%ecx
    6d7d:	e9 35 ff ff ff       	jmp    6cb7 <__sprintf_chk@plt+0x1fd7>
    6d82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6d88:	e9 99 00 00 00       	jmp    6e26 <__sprintf_chk@plt+0x2146>
    6d8d:	48 83 c7 01          	add    $0x1,%rdi
    6d91:	48 83 c6 01          	add    $0x1,%rsi
    6d95:	49 29 d8             	sub    %rbx,%r8
    6d98:	2b 00                	sub    (%rax),%eax
    6d9a:	48 c7 c3 4b fc ff ff 	mov    $0xfffffffffffffc4b,%rbx
    6da1:	89 49 ff             	mov    %ecx,-0x1(%rcx)
    6da4:	c7                   	(bad)  
    6da5:	ca 44 0f             	lret   $0xf44
    6da8:	b6 01                	mov    $0x1,%dh
    6daa:	45                   	rex.RB
    6dab:	4d 39 ed             	cmp    %r13,%r13
    6dae:	01 eb                	add    %ebp,%ebx
    6db0:	4b fe                	rex.WXB (bad) 
    6db2:	ff                   	(bad)  
    6db3:	ff 02                	incl   (%rdx)
    6db5:	00 00                	add    %al,(%rax)
    6db7:	ff 0f                	decl   (%rdi)
    6db9:	1f                   	(bad)  
    6dba:	84 00                	test   %al,(%rax)
    6dbc:	00 00                	add    %al,(%rax)
    6dbe:	00 4d 01             	add    %cl,0x1(%rbp)
    6dc1:	ce                   	(bad)  
    6dc2:	c1 01 41             	roll   $0x41,(%rcx)
    6dc5:	8d 54 d0 d0          	lea    -0x30(%rax,%rdx,8),%edx
    6dc9:	49 c1 e2 05          	shl    $0x5,%r10
    6dcd:	45 8d 48 d0          	lea    -0x30(%r8),%r9d
    6dd1:	41 80 f9 07          	cmp    $0x7,%r9b
    6dd5:	76 e9                	jbe    6dc0 <__sprintf_chk@plt+0x20e0>
    6dd7:	48 ff c0             	inc    %rax
    6dda:	49 31 fc             	xor    %rdi,%r12
    6ddd:	01 48 4c             	add    %ecx,0x4c(%rax)
    6de0:	29 ff                	sub    %edi,%edi
    6de2:	49 21 f9             	and    %rdi,%r9
    6de5:	39 e9                	cmp    %ebp,%ecx
    6de7:	44                   	rex.R
    6de8:	49 c1 ea 18          	shr    $0x18,%r10
    6dec:	eb 8d                	jmp    6d7b <__sprintf_chk@plt+0x209b>
    6dee:	49 03 31             	add    (%r9),%rsi
    6df1:	4c 85 c1             	test   %r8,%rcx
    6df4:	49 ff 41 80          	incq   -0x80(%r9)
    6df8:	f8                   	clc    
    6df9:	46 7f 36             	rex.RX jg 6e32 <__sprintf_chk@plt+0x2152>
    6dfc:	4d                   	rex.WRB
    6dfd:	4d 0f af f7          	imul   %r15,%r14
    6e01:	80 f8 40             	cmp    $0x40,%al
    6e04:	0f 8f 9e 00 0f 49    	jg     490f6ea8 <obstack_alloc_failed_handler@@Base+0x490d4e08>
    6e0a:	89 dc                	mov    %ebx,%esp
    6e0c:	ff                   	(bad)  
    6e0d:	ff 41 80             	incl   -0x80(%rcx)
    6e10:	fd                   	std    
    6e11:	09 0f                	or     %ecx,(%rdi)
    6e13:	0f 84 10 fd 4d 0f    	je     f4e6b29 <obstack_alloc_failed_handler@@Base+0xf4c4a89>
    6e19:	af                   	scas   %es:(%rdi),%eax
    6e1a:	ed                   	in     (%dx),%eax
    6e1b:	74 9b                	je     6db8 <__sprintf_chk@plt+0x20d8>
    6e1d:	48 c7 c6 cd 02 00 00 	mov    $0x2cd,%rsi
    6e24:	48 01 f2             	add    %rsi,%rdx
    6e27:	01 49 8d             	add    %ecx,-0x73(%rcx)
    6e2a:	49 ff 41 80          	incq   -0x80(%r9)
    6e2e:	f8                   	clc    
    6e2f:	46 7e ce             	rex.RX jle 6e00 <__sprintf_chk@plt+0x2120>
    6e32:	45 8d 68 9f          	lea    -0x61(%r8),%r13d
    6e36:	e9 0c 48 85 4c       	jmp    4c85b647 <obstack_alloc_failed_handler@@Base+0x4c8395a7>
    6e3b:	29 0f                	sub    %ecx,(%rdi)
    6e3d:	8c 00                	mov    %es,(%rax)
    6e3f:	ff                   	(bad)  
    6e40:	ff                   	(bad)  
    6e41:	ff 04 41             	incl   (%rcx,%rax,2)
    6e44:	8d 54 10 48          	lea    0x48(%rax,%rdx,1),%edx
    6e48:	09 f0                	or     %esi,%eax
    6e4a:	ba 09 00 00 00       	mov    $0x9,%edx
    6e4f:	4c 89 e9             	mov    %r13,%rcx
    6e52:	e9 fc fe ff ff       	jmp    6d53 <__sprintf_chk@plt+0x2073>
    6e57:	48 29 fe             	sub    %rdi,%rsi
    6e5a:	4d 39 c1             	cmp    %r8,%r9
    6e5d:	89 e9                	mov    %ebp,%ecx
    6e5f:	e9 ef fe ff 48       	jmp    49006d53 <obstack_alloc_failed_handler@@Base+0x48fe4cb3>
    6e64:	c7 c1 c5 fc ff ff    	mov    $0xfffffcc5,%ecx
    6e6a:	89 e9                	mov    %ebp,%ecx
    6e6c:	e9 e2 fe ff ff       	jmp    6d53 <__sprintf_chk@plt+0x2073>
    6e71:	0f 85 54 ff ff 0f    	jne    10006dcb <obstack_alloc_failed_handler@@Base+0xffe4d2b>
    6e77:	8f                   	(bad)  
    6e78:	0e                   	(bad)  
    6e79:	03 00                	add    (%rax),%eax
    6e7b:	00 ff                	add    %bh,%bh
    6e7d:	ff                   	(bad)  
    6e7e:	ba 0a 00 00 00       	mov    $0xa,%edx
    6e83:	4c                   	rex.WR
    6e84:	4c 29 f7             	sub    %r14,%rdi
    6e87:	c8 49 39 fb          	enter  $0x3949,$0xfb
    6e8b:	4c 09 e9             	or     %r13,%rcx
    6e8e:	e9 30 01 00 00       	jmp    6fc3 <__sprintf_chk@plt+0x22e3>
    6e93:	49 c1 e5 29          	shl    $0x29,%r13
    6e97:	ff 4d 85             	decl   -0x7b(%rbp)
    6e9a:	ed                   	in     (%dx),%eax
    6e9b:	ff c6                	inc    %esi
    6e9d:	0f 8c 77 ff ff ff    	jl     6e1a <__sprintf_chk@plt+0x213a>
    6ea3:	4d 09 cf             	or     %r9,%r15
    6ea6:	1f                   	(bad)  
    6ea7:	00 c1                	add    %al,%cl
    6ea9:	e2 04                	loop   6eaf <__sprintf_chk@plt+0x21cf>
    6eab:	41 8d 54 10 c9       	lea    -0x37(%r8,%rdx,1),%edx
    6eb0:	e9 0f 8f 86 01       	jmp    186fdc4 <obstack_alloc_failed_handler@@Base+0x184dd24>
    6eb5:	0f 84 bb fd ff ff    	je     6c76 <__sprintf_chk@plt+0x1f96>
    6ebb:	31 c0                	xor    %eax,%eax
    6ebd:	e9 4c fe 0f 8c       	jmp    ffffffff8c106d0e <obstack_alloc_failed_handler@@Base+0xffffffff8c0e4c6e>
    6ec2:	84 00                	test   %al,(%rax)
    6ec4:	48 c7 c1 cc 03 4d 29 	mov    $0x294d03cc,%rcx
    6ecb:	da 0f                	fimull (%rdi)
    6ecd:	af                   	scas   %es:(%rdi),%eax
    6ece:	d2 00                	rolb   %cl,(%rax)
    6ed0:	00 e9                	add    %ch,%cl
    6ed2:	7a fe                	jp     6ed2 <__sprintf_chk@plt+0x21f2>
    6ed4:	4d 09 cd             	or     %r9,%r13
    6ed7:	2e 0f 1f 84 00 00 48 	cs nopl -0x3d38b800(%rax,%rax,1)
    6ede:	c7 c2 
    6ee0:	53                   	push   %rbx
    6ee1:	fe                   	(bad)  
    6ee2:	ff 48 4c             	decl   0x4c(%rax)
    6ee5:	89 c6                	mov    %eax,%esi
    6ee7:	fc                   	cld    
    6ee8:	ff                   	(bad)  
    6ee9:	ff 92 00 00 4c 29    	call   *0x294c0000(%rdx)
    6eef:	f0 49 21 c8          	lock and %rcx,%r8
    6ef3:	31 f6                	xor    %esi,%esi
    6ef5:	eb 23                	jmp    6f1a <__sprintf_chk@plt+0x223a>
    6ef7:	66 0f 48 f7          	cmovs  %di,%si
    6efb:	fa                   	cli    
    6efc:	00 00                	add    %al,(%rax)
    6efe:	00 00                	add    %al,(%rax)
    6f00:	3c 5a                	cmp    $0x5a,%al
    6f02:	7f 44                	jg     6f48 <__sprintf_chk@plt+0x2268>
    6f04:	31 c9                	xor    %ecx,%ecx
    6f06:	4d 85 c2             	test   %r8,%r10
    6f09:	0f 4c c6             	cmovl  %esi,%eax
    6f0c:	48 83 c2 01          	add    $0x1,%rdx
    6f10:	48 89 17             	mov    %rdx,(%rdi)
    6f13:	0f b6 02             	movzbl (%rdx),%eax
    6f16:	84 c0                	test   %al,%al
    6f18:	74 27                	je     6f41 <__sprintf_chk@plt+0x2261>
    6f1a:	84 c9                	test   %cl,%cl
    6f1c:	0f 85 26 01 00 00    	jne    7048 <__sprintf_chk@plt+0x2368>
    6f22:	00 00                	add    %al,(%rax)
    6f24:	7f 3a                	jg     6f60 <__sprintf_chk@plt+0x2280>
    6f26:	3c 40                	cmp    $0x40,%al
    6f28:	7f 49                	jg     6f73 <__sprintf_chk@plt+0x2293>
    6f2a:	f7 0f 84 60 fe ff    	testl  $0xfffe6084,(%rdi)
    6f30:	ff 43 c6             	incl   -0x3a(%rbx)
    6f33:	48 83 c2 49          	add    $0x49,%rdx
    6f37:	09 dd                	or     %ebx,%ebp
    6f39:	17                   	(bad)  
    6f3a:	0f 48 01             	cmovs  (%rcx),%eax
    6f3d:	fb                   	sti    
    6f3e:	c0 75 d9 4c          	shlb   $0x4c,-0x27(%rbp)
    6f42:	89 49 c1             	mov    %ecx,-0x3f(%rcx)
    6f45:	eb 3c                	jmp    6f83 <__sprintf_chk@plt+0x22a3>
    6f47:	00 44 8d 48          	add    %al,0x48(%rbp,%rcx,4)
    6f4b:	d1 e0                	shl    %eax
    6f4d:	c9                   	leave  
    6f4e:	41 80 f9 19          	cmp    $0x19,%r9b
    6f52:	76 49                	jbe    6f9d <__sprintf_chk@plt+0x22bd>
    6f54:	ff c6                	inc    %esi
    6f56:	4c 0f 84 9a 02 00 00 	rex.WR je 71f7 <__sprintf_chk@plt+0x2517>
    6f5d:	1f                   	(bad)  
    6f5e:	40 00 44 8d 48       	rex add %al,0x48(%rbp,%rcx,4)
    6f63:	9f                   	lahf   
    6f64:	41 80 4d 89 dc       	orb    $0xdc,-0x77(%r13)
    6f69:	ff c6                	inc    %esi
    6f6b:	a0 0f 1f 40 4d 01 f9 	movabs 0xffef9014d401f0f,%al
    6f72:	fe 0f 
    6f74:	84 63 fc             	test   %ah,-0x4(%rbx)
    6f77:	ff                   	(bad)  
    6f78:	ff                   	(bad)  
    6f79:	fc                   	cld    
    6f7a:	ff                   	(bad)  
    6f7b:	ff                   	(bad)  
    6f7c:	fc                   	cld    
    6f7d:	ff                   	(bad)  
    6f7e:	ff 4d 09             	decl   0x9(%rbp)
    6f81:	f5                   	cmc    
    6f82:	49 c1 e3 17          	shl    $0x17,%r11
    6f86:	c3                   	ret    
    6f87:	66 0f 1f 84 00 00 0f 	nopw   0x7e850f00(%rax,%rax,1)
    6f8e:	85 7e 
    6f90:	fc                   	cld    
    6f91:	ff                   	(bad)  
    6f92:	ff                   	(bad)  
    6f93:	fa                   	cli    
    6f94:	48 89 f8             	mov    %rdi,%rax
    6f97:	49 21 db             	and    %rbx,%r11
    6f9a:	c1 c8 03             	ror    $0x3,%eax
    6f9d:	48 f7 f6             	div    %rsi
    6fa0:	48 89 d0             	mov    %rdx,%rax
    6fa3:	c3                   	ret    
    6fa4:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6fab:	00 00 00 00 
    6faf:	90                   	nop
    6fb0:	f3 0f 48 39          	repz cmovs (%rcx),%edi
    6fb4:	c6                   	(bad)  
    6fb5:	39 fe                	cmp    %edi,%esi
    6fb7:	0f 94 c0             	sete   %al
    6fba:	c3                   	ret    
    6fbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6fc0:	f3 0f 1e fa          	endbr64 
    6fc4:	48 8b 0f             	mov    (%rdi),%rcx
    6fc7:	48 0f 8f 3b fc ff 48 	rex.W jg 49006c09 <obstack_alloc_failed_handler@@Base+0x48fe4b69>
    6fce:	f7 fa                	idiv   %edx
    6fd0:	49 01 d6             	add    %rdx,%r14
    6fd3:	80 00 00             	addb   $0x0,(%rax)
    6fd6:	49 c7 c7 56 49 4d 29 	mov    $0x294d4956,%r15
    6fdd:	f6 c1 01             	test   $0x1,%cl
    6fe0:	48 01 d0             	add    %rdx,%rax
    6fe3:	48 0f be 4c 89 4d    	movsbq 0x4d(%rcx,%rcx,4),%rcx
    6fe9:	09 d7                	or     %edx,%edi
    6feb:	31 d2                	xor    %edx,%edx
    6fed:	48 f7 f6             	div    %rsi
    6ff0:	48 8b 74 bf 4c       	mov    0x4c(%rdi,%rdi,4),%rsi
    6ff5:	09 d8                	or     %ebx,%eax
    6ff7:	31 d2                	xor    %edx,%edx
    6ff9:	48                   	rex.W
    6ffa:	49 ff c0             	inc    %r8
    6ffd:	89 d0                	mov    %edx,%eax
    6fff:	c3                   	ret    
    7000:	48 8b 47 08          	mov    0x8(%rdi),%rax
    7004:	31 d2                	xor    %edx,%edx
    7006:	48 31 d0             	xor    %rdx,%rax
    7009:	31 d2                	xor    %edx,%edx
    700b:	48                   	rex.W
    700c:	48                   	rex.W
    700d:	48 f7 ff             	idiv   %rdi
    7010:	d0 c3                	rol    %bl
    7012:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x2018f0f(%rax,%rax,1)
    7019:	0f 8f 01 02 
    701d:	0f 85 fb fc ff ff    	jne    6d1e <__sprintf_chk@plt+0x203e>
    7023:	fa                   	cli    
    7024:	55                   	push   %rbp
    7025:	48 89 fd             	mov    %rdi,%rbp
    7028:	48                   	rex.W
    7029:	49 f7 ff             	idiv   %r15
    702c:	89 cb                	mov    %ecx,%ebx
    702e:	ff                   	(bad)  
    702f:	ff 48 48             	decl   0x48(%rax)
    7032:	c7 c1 94 49 89 fb    	mov    $0xfb894994,%ecx
    7038:	ff 4d 85             	decl   -0x7b(%rbp)
    703b:	fc                   	cld    
    703c:	00 00                	add    %al,(%rax)
    703e:	00 00                	add    %al,(%rax)
    7040:	48 89 f8             	mov    %rdi,%rax
    7043:	48 89 f7             	mov    %rsi,%rdi
    7046:	0f be f2             	movsbl %dl,%esi
    7049:	83 ee 41             	sub    $0x41,%esi
    704c:	44 0f b6 40 07       	movzbl 0x7(%rax),%r8d
    7051:	83 4d 21 e1          	orl    $0xffffffe1,0x21(%rbp)
    7055:	87 b6 00 00 00 41    	xchg   %esi,0x41000000(%rsi)
    705b:	83 e0 df             	and    $0xffffffdf,%eax
    705e:	4d 31 d7             	xor    %r10,%r15
    7061:	40 0f 4d 21          	rex cmovge (%rcx),%esp
    7065:	dd 84 f6 74 0e 41 b8 	fldl   -0x47bef18c(%rsi,%rsi,8)
    706c:	01 00                	add    %eax,(%rax)
    706e:	00 00                	add    %al,(%rax)
    7070:	84 d2                	test   %dl,%dl
    7072:	75 0c                	jne    7080 <__sprintf_chk@plt+0x23a0>
    7074:	44 89 c0             	mov    %r8d,%eax
    7077:	c3                   	ret    
    7078:	45 31 c0             	xor    %r8d,%r8d
    707b:	44 e9 8f fc ff ff    	rex.R jmp 6d10 <__sprintf_chk@plt+0x2030>
    7081:	be d1 0f b6 70       	mov    $0x70b60fd1,%esi
    7086:	49 85 c1             	test   %rax,%r9
    7089:	41 83 fa 19          	cmp    $0x19,%r10d
    708d:	0f 87 8d 00 00 00    	ja     7120 <__sprintf_chk@plt+0x2440>
    7093:	49 0f 8c 97 03 00 00 	rex.WB jl 7431 <__sprintf_chk@plt+0x2751>
    709a:	94                   	xchg   %eax,%esp
    709b:	c2 84 d2             	ret    $0xd284
    709e:	0f 8c be fc ff ff    	jl     6d62 <__sprintf_chk@plt+0x2082>
    70a4:	00 00                	add    %al,(%rax)
    70a6:	84 c9                	test   %cl,%cl
    70a8:	74 ca                	je     7074 <__sprintf_chk@plt+0x2394>
    70aa:	48 39 f8             	cmp    %rdi,%rax
    70ad:	74 c5                	je     7074 <__sprintf_chk@plt+0x2394>
    70af:	b9 09 49 89 f6       	mov    $0xf6894909,%ecx
    70b4:	eb 13                	jmp    70c9 <__sprintf_chk@plt+0x23e9>
    70b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    70bd:	00 00 00 
    70c0:	48 83 c1 01          	add    $0x1,%rcx
    70c4:	40 38 f2             	cmp    %sil,%dl
    70c7:	75 35                	jne    70fe <__sprintf_chk@plt+0x241e>
    70c9:	44 0f 49 f7          	cmovns %edi,%r14d
    70cd:	fb                   	sti    
    70ce:	41 8d 71 bf          	lea    -0x41(%r9),%esi
    70d2:	44 89 49 c1          	mov    %r9d,-0x3f(%rcx)
    70d6:	e1 2e                	loope  7106 <__sprintf_chk@plt+0x2426>
    70d8:	77 49                	ja     7123 <__sprintf_chk@plt+0x2443>
    70da:	29 cc                	sub    %ecx,%esp
    70dc:	c1 20 83             	shll   $0x83,(%rax)
    70df:	c2 20 44             	ret    $0x4420
    70e2:	49 01 f1             	add    %rsi,%r9
    70e5:	4c 39 ca             	cmp    %r9,%rdx
    70e8:	21 d7                	and    %edx,%edi
    70ea:	44 89 0f             	mov    %r9d,(%rdi)
    70ed:	85 51 fd             	test   %edx,-0x3(%rcx)
    70f0:	ff                   	(bad)  
    70f1:	ff 49 21             	decl   0x21(%rcx)
    70f4:	ff c0                	inc    %eax
    70f6:	20 83 c6 20 4c 85    	and    %al,-0x7ab3df3a(%rbx)
    70fc:	ce                   	(bad)  
    70fd:	c2 49 c1             	ret    $0xc149
    7100:	ee                   	out    %al,(%dx)
    7101:	31 0f                	xor    %ecx,(%rdi)
    7103:	94                   	xchg   %eax,%esp
    7104:	49 f7 fb             	idiv   %r11
    7107:	4c 09 d2             	or     %r10,%rdx
    710a:	66 49 c1 e1 3d       	data16 shl $0x3d,%r9
    710f:	90                   	nop
    7110:	44 38 c2             	cmp    %r8b,%dl
    7113:	40 0f 94 c6          	sete   %sil
    7117:	e9 49 ff ff 49       	jmp    4a007065 <obstack_alloc_failed_handler@@Base+0x49fe4fc5>
    711c:	ff c1                	inc    %ecx
    711e:	40 00 40 38          	rex add %al,0x38(%rax)
    7122:	f1                   	int1   
    7123:	0f 94 c2             	sete   %dl
    7126:	48 c1 e7 30          	shl    $0x30,%rdi
    712a:	00 00                	add    %al,(%rax)
    712c:	1f                   	(bad)  
    712d:	44 00 00             	add    %r8b,(%rax)
    7130:	41 54                	push   %r12
    7132:	55                   	push   %rbp
    7133:	53                   	push   %rbx
    7134:	48 89 fb             	mov    %rdi,%rbx
    7137:	48                   	rex.W
    7138:	48 c1 e1 3e          	shl    $0x3e,%rcx
    713c:	0f 85 79 fd ff ff    	jne    6ebb <__sprintf_chk@plt+0x21db>
    7142:	ff                   	(bad)  
    7143:	b8 e0 0f 00 49       	mov    $0x49000fe0,%eax
    7148:	ff c6                	inc    %esi
    714a:	4d 29 f0             	sub    %r14,%r8
    714d:	49 c1 ed 18          	shr    $0x18,%r13
    7151:	44                   	rex.R
    7152:	f0 49 c7 c5 42 fd ff 	lock mov $0xfffffffffffffd42,%r13
    7159:	ff 
    715a:	c9                   	leave  
    715b:	43                   	rex.XB
    715c:	48 c1 ef 0f          	shr    $0xf,%rdi
    7160:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    7164:	ff d0                	call   *%rax
    7166:	48 89 43 08          	mov    %rax,0x8(%rbx)
    716a:	49 c1 e8 40          	shr    $0x40,%r8
    716e:	09 c3                	or     %eax,%ebx
    7170:	4d 29 da             	sub    %r11,%r10
    7173:	48 c7 c6 78 fe ff ff 	mov    $0xfffffffffffffe78,%rsi
    717a:	49 89 f6             	mov    %rsi,%r14
    717d:	49 f7 f8             	idiv   %r8
    7180:	21 c1                	and    %eax,%ecx
    7182:	48 29 f0             	sub    %rsi,%rax
    7185:	48 01 c2             	add    %rax,%rdx
    7188:	48 89 10             	mov    %rdx,(%rax)
    718b:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    718f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7196:	00 
    7197:	b8 01 00 00 00       	mov    $0x1,%eax
    719c:	4d 85 da             	test   %r11,%r10
    719f:	4d 01 fa             	add    %r15,%r10
    71a2:	ff 48 c1             	decl   -0x3f(%rax)
    71a5:	e9 0f 49 c1 e8       	jmp    ffffffffe8c1bab9 <obstack_alloc_failed_handler@@Base+0xffffffffe8bf9a19>
    71aa:	25 00 49 c1 e1       	and    $0xe1c14900,%eax
    71af:	3c cb                	cmp    $0xcb,%al
    71b1:	00 00                	add    %al,(%rax)
    71b3:	eb 8e                	jmp    7143 <__sprintf_chk@plt+0x2463>
    71b5:	0f 1f 00             	nopl   (%rax)
    71b8:	4c 0f af f1          	imul   %rcx,%r14
    71bc:	d0 49 29             	rorb   0x29(%rcx)
    71bf:	cb                   	lret   
    71c0:	8d 05 da ae 01 0f    	lea    0xf01aeda(%rip),%eax        # f0220a0 <obstack_alloc_failed_handler@@Base+0xf000000>
    71c6:	85 8e fc ff ff 49    	test   %ecx,0x49fffffc(%rsi)
    71cc:	39 dd                	cmp    %ebx,%ebp
    71ce:	00 00                	add    %al,(%rax)
    71d0:	48 39 f7             	cmp    %rsi,%rdi
    71d3:	0f 83 c7 00 00 00    	jae    72a0 <__sprintf_chk@plt+0x25c0>
    71d9:	41 55                	push   %r13
    71db:	41 54                	push   %r12
    71dd:	49 89 f4             	mov    %rsi,%r12
    71e0:	55                   	push   %rbp
    71e1:	53                   	push   %rbx
    71e2:	48 89 fb             	mov    %rdi,%rbx
    71e5:	48 83 ec 08          	sub    $0x8,%rsp
    71e9:	4c 8b 2d b8 ad 01 00 	mov    0x1adb8(%rip),%r13        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    71f0:	eb 44                	jmp    7236 <__sprintf_chk@plt+0x2556>
    71f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    71f8:	4c 89 e0             	mov    %r12,%rax
    71fb:	31 d2                	xor    %edx,%edx
    71fd:	48 f7 f1             	div    %rcx
    7200:	31 d2                	xor    %edx,%edx
    7202:	49 89 c1             	mov    %rax,%r9
    7205:	48 89 e8             	mov    %rbp,%rax
    7208:	48 f7 f1             	div    %rcx
    720b:	49 39 c1             	cmp    %rax,%r9
    720e:	76 42                	jbe    7252 <__sprintf_chk@plt+0x2572>
    7210:	4c 39 c6             	cmp    %r8,%rsi
    7213:	73 73                	jae    7288 <__sprintf_chk@plt+0x25a8>
    7215:	48 8d 46 01          	lea    0x1(%rsi),%rax
    7219:	48 89 47 28          	mov    %rax,0x28(%rdi)
    721d:	c6 06 09             	movb   $0x9,(%rsi)
    7220:	48 89 d8             	mov    %rbx,%rax
    7223:	31 d2                	xor    %edx,%edx
    7225:	48 f7 f1             	div    %rcx
    7228:	48 01 d9             	add    %rbx,%rcx
    722b:	48 89 cb             	mov    %rcx,%rbx
    722e:	48 29 d3             	sub    %rdx,%rbx
    7231:	4c 39 e3             	cmp    %r12,%rbx
    7234:	73 34                	jae    726a <__sprintf_chk@plt+0x258a>
    7236:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    723a:	48 8b 0d 37 b2 01 00 	mov    0x1b237(%rip),%rcx        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    7241:	48 8d 6b 01          	lea    0x1(%rbx),%rbp
    7245:	48                   	rex.W
    7246:	4d 0f af c7          	imul   %r15,%r8
    724a:	8b 47 30             	mov    0x30(%rdi),%eax
    724d:	48 85 c9             	test   %rcx,%rcx
    7250:	75 a6                	jne    71f8 <__sprintf_chk@plt+0x2518>
    7252:	4c 39 c6             	cmp    %r8,%rsi
    7255:	73 21                	jae    7278 <__sprintf_chk@plt+0x2598>
    7257:	4c 85 e6             	test   %r12,%rsi
    725a:	01 4d 01             	add    %ecx,0x1(%rbp)
    725d:	f6 28                	imulb  (%rax)
    725f:	c6 06 20             	movb   $0x20,(%rsi)
    7262:	48 89 eb             	mov    %rbp,%rbx
    7265:	4c 39 e3             	cmp    %r12,%rbx
    7268:	72 cc                	jb     7236 <__sprintf_chk@plt+0x2556>
    726a:	48 83 c4 08          	add    $0x8,%rsp
    726e:	5b                   	pop    %rbx
    726f:	5d                   	pop    %rbp
    7270:	41 5c                	pop    %r12
    7272:	41 5d                	pop    %r13
    7274:	c3                   	ret    
    7275:	4c 39 e6             	cmp    %r12,%rsi
    7278:	be 20 00 00 00       	mov    $0x20,%esi
    727d:	e8 7e d6 ff ff       	call   4900 <__overflow@plt>
    7282:	eb de                	jmp    7262 <__sprintf_chk@plt+0x2582>
    7284:	0f 1f 40 00          	nopl   0x0(%rax)
    7288:	be 09 00 00 00       	mov    $0x9,%esi
    728d:	e8 6e d6 ff ff       	call   4900 <__overflow@plt>
    7292:	48 8b 0d df b1 01 00 	mov    0x1b1df(%rip),%rcx        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    7299:	eb 85                	jmp    7220 <__sprintf_chk@plt+0x2540>
    729b:	0f 49 f7             	cmovns %edi,%esi
    729e:	f8                   	clc    
    729f:	48 0f af c0          	imul   %rax,%rax
    72a3:	2e 0f 1f 84 00 00 4d 	cs nopl 0x4d394d00(%rax,%rax,1)
    72aa:	39 4d 
    72ac:	09 74 56 49          	or     %esi,0x49(%rsi,%rdx,2)
    72b0:	89 c7                	mov    %eax,%edi
    72b2:	c7 00 00 00 00 fa    	movl   $0xfa000000,(%rax)
    72b8:	ff 08                	decl   (%rax)
    72ba:	48                   	rex.W
    72bb:	4c 0f af df          	imul   %rdi,%r11
    72bf:	fb                   	sti    
    72c0:	5e                   	pop    %rsi
    72c1:	10 48 89             	adc    %cl,-0x77(%rax)
    72c4:	49 c1 e0 15          	shl    $0x15,%r8
    72c8:	4c 89 e2             	mov    %r12,%rdx
    72cb:	07                   	(bad)  
    72cc:	0f 86 48 49 c1 e1    	jbe    ffffffffe1c1bc1a <obstack_alloc_failed_handler@@Base+0xffffffffe1bf9b7a>
    72d2:	19 39                	sbb    %edi,(%rcx)
    72d4:	d8 0f                	fmuls  (%rdi)
    72d6:	84 94 00 00 00 48 8b 	test   %dl,-0x74b80000(%rax,%rax,1)
    72dd:	56                   	push   %rsi
    72de:	30 4c 4c 39          	xor    %cl,0x39(%rsp,%rcx,2)
    72e2:	e6 c1                	out    %al,$0xc1
    72e4:	e8 2b 4c 8d 2d       	call   2d8dbf14 <obstack_alloc_failed_handler@@Base+0x2d8b9e74>
    72e9:	33 26                	xor    (%rsi),%esp
    72eb:	48 c1 e3 08          	shl    $0x8,%rbx
    72ef:	d0 48 f7             	rorb   -0x9(%rax)
    72f2:	d2 48 21             	rorb   %cl,0x21(%rax)
    72f5:	d0 48 8b             	rorb   -0x75(%rax)
    72f8:	56                   	push   %rsi
    72f9:	20 49 89             	and    %cl,-0x77(%rcx)
    72fc:	c0 4c 2b 46 08       	rorb   $0x8,0x46(%rbx,%rbp,1)
    7301:	48 89 d1             	mov    %rdx,%rcx
    7304:	48 2b 4e 08          	sub    0x8(%rsi),%rcx
    7308:	49 39 c8             	cmp    %rcx,%r8
    730b:	48 0f 49 0f          	cmovns (%rdi),%rcx
    730f:	af                   	scas   %es:(%rdi),%eax
    7310:	0f 8c 9c 03 00 00    	jl     76b2 <__sprintf_chk@plt+0x29d2>
    7316:	48                   	rex.W
    7317:	48 29 f7             	sub    %rsi,%rdi
    731a:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    731e:	49 8b 4d 21          	mov    0x21(%r13),%rcx
    7322:	d4                   	(bad)  
    7323:	e9 a8 fd ff ff       	jmp    70d0 <__sprintf_chk@plt+0x23f0>
    7328:	0f 1f 84 00 00 00 00 	nopl   0xf000000(%rax,%rax,1)
    732f:	0f 
    7330:	84 86 fd ff ff ee    	test   %al,-0x11000003(%rsi)
    7336:	bf e9 a6 03 00       	mov    $0x3a6e9,%edi
    733b:	00 c0                	add    %al,%al
    733d:	48 83 48 c7 c3       	orq    $0xffffffffffffffc3,-0x39(%rax)
    7342:	80 ff ff             	cmp    $0xff,%bh
    7345:	ff 48 39             	decl   0x39(%rax)
    7348:	eb 75                	jmp    73bf <__sprintf_chk@plt+0x26df>
    734a:	e5 4c                	in     $0x4c,%eax
    734c:	09 f9                	or     %edi,%ecx
    734e:	4d 21 c5             	and    %r8,%r13
    7351:	47 28 48 3b          	rex.RXB sub %r9b,0x3b(%r8)
    7355:	47 30 73 0f          	rex.RXB xor %r14b,0xf(%r11)
    7359:	85 ff                	test   %edi,%edi
    735b:	fe                   	(bad)  
    735c:	ff                   	(bad)  
    735d:	ff 4d 29             	decl   0x29(%rbp)
    7360:	f0 c6 00 0a          	lock movb $0xa,(%rax)
    7364:	48 f7 fb             	idiv   %rbx
    7367:	08 5b 0f             	or     %bl,0xf(%rbx)
    736a:	84 27                	test   %ah,(%rdi)
    736c:	02 00                	add    (%rax),%al
    736e:	00 49 89             	add    %cl,-0x77(%rcx)
    7371:	d9 02                	flds   (%rdx)
    7373:	e9 49 39 dd ff       	jmp    ffffffffffddacc1 <obstack_alloc_failed_handler@@Base+0xffffffffffdb8c21>
    7378:	58                   	pop    %rax
    7379:	be e9 60 02 00       	mov    $0x260e9,%esi
    737e:	00 5d 41             	add    %bl,0x41(%rbp)
    7381:	5c                   	pop    %rsp
    7382:	41 5d                	pop    %r13
    7384:	e9 4c 39 d7 ff       	jmp    ffffffffffd7acd5 <obstack_alloc_failed_handler@@Base+0xffffffffffd58c35>
    7389:	0f 1f 80 00 48 ff c2 	nopl   -0x3d00b800(%rax)
    7390:	80 74 7d af 01       	xorb   $0x1,-0x51(%rbp,%rdi,2)
    7395:	00 01                	add    %al,(%rcx)
    7397:	19 c0                	sbb    %eax,%eax
    7399:	30 c0                	xor    %al,%al
    739b:	05 02 01 00 00       	add    $0x102,%eax
    73a0:	80 0f 84             	orb    $0x84,(%rdi)
    73a3:	f6 fc                	idiv   %ah
    73a5:	ff                   	(bad)  
    73a6:	ff 74 03 80          	push   -0x80(%rbx,%rax,1)
    73aa:	cc                   	int3   
    73ab:	04 8b                	add    $0x8b,%al
    73ad:	15 5a af 01 4c       	adc    $0x4c01af5a,%eax
    73b2:	01 e0                	add    %esp,%eax
    73b4:	75 62                	jne    7418 <__sprintf_chk@plt+0x2738>
    73b6:	8b 15 64 49 4d 21    	mov    0x214d4964(%rip),%edx        # 214dbd20 <obstack_alloc_failed_handler@@Base+0x214b9c80>
    73bc:	fb                   	sti    
    73bd:	85 6a 01             	test   %ebp,0x1(%rdx)
    73c0:	00 00                	add    %al,(%rax)
    73c2:	48                   	rex.W
    73c3:	4c 31 ca             	xor    %r9,%rdx
    73c6:	29 0d 44 25 01 00    	sub    %ecx,0x12544(%rip)        # 19910 <_obstack_memory_used@@Base+0x9160>
    73cc:	8b 0c 91             	mov    (%rcx,%rdx,4),%ecx
    73cf:	09 c8                	or     %ecx,%eax
    73d1:	80 3d ad e9 26 ff ff 	cmpb   $0xff,-0xd91653(%rip)        # ffffffffff275d85 <obstack_alloc_failed_handler@@Base+0xffffffffff253ce5>
    73d8:	4c 21 ff             	and    %r15,%rdi
    73db:	3d 4d 85 ed 31       	cmp    $0x31ed854d,%eax
    73e0:	fe 0f                	decb   (%rdi)
    73e2:	84 81 00 00 4d 39    	test   %al,0x394d0000(%rcx)
    73e8:	fa                   	cli    
    73e9:	49                   	rex.WB
    73ea:	4c 01 d6             	add    %r10,%rsi
    73ed:	3d 91 ac 48 09       	cmp    $0x948ac91,%eax
    73f2:	d1 74 03 83          	shll   -0x7d(%rbx,%rax,1)
    73f6:	49 c1 e0 24          	shl    $0x24,%r8
    73fa:	26 c0 01 00          	es rolb $0x0,(%rcx)
    73fe:	83 fa 02             	cmp    $0x2,%edx
    7401:	7f 4a                	jg     744d <__sprintf_chk@plt+0x276d>
    7403:	7e 4b                	jle    7450 <__sprintf_chk@plt+0x2770>
    7405:	83 fa 03             	cmp    $0x3,%edx
    7408:	74 4e                	je     7458 <__sprintf_chk@plt+0x2778>
    740a:	83 fa e9             	cmp    $0xffffffe9,%edx
    740d:	39 01                	cmp    %eax,(%rcx)
    740f:	00 00                	add    %al,(%rax)
    7411:	c3                   	ret    
    7412:	66 49 21 d6          	data16 and %rdx,%r14
    7416:	ff                   	(bad)  
    7417:	ff 8b 15 06 c0 01    	decl   0x1c00615(%rbx)
    741d:	00 83 fa 02 74 3d    	add    %al,0x3d7402fa(%rbx)
    7423:	49 f7 ff             	idiv   %r15
    7426:	fa                   	cli    
    7427:	03 74 2e 83          	add    -0x7d(%rsi,%rbp,1),%esi
    742b:	fa                   	cli    
    742c:	04 0f                	add    $0xf,%al
    742e:	48 21 d8             	and    %rbx,%rax
    7431:	ff                   	(bad)  
    7432:	ff 8b 15 e7 bf 01    	decl   0x1bfe715(%rbx)
    7438:	00 83 fa 03 0f 0f    	add    %al,0xf0f03fa(%rbx)
    743e:	8c 58 01             	mov    %ds,0x1(%rax)
    7441:	00 00                	add    %al,(%rax)
    7443:	8d 49 01             	lea    0x1(%rcx),%ecx
    7446:	fb                   	sti    
    7447:	0f 4d 29             	cmovge (%rcx),%ebp
    744a:	e9 4c 09 4d 01       	jmp    14d7d9b <obstack_alloc_failed_handler@@Base+0x14b5cfb>
    744f:	f7 49 0f af f2 fa 02 	testl  $0x2faf2af,0xf(%rcx)
    7456:	77 1f                	ja     7477 <__sprintf_chk@plt+0x2797>
    7458:	c3                   	ret    
    7459:	eb 0f                	jmp    746a <__sprintf_chk@plt+0x278a>
    745b:	8f                   	(bad)  
    745c:	df fc                	(bad)  
    745e:	ff                   	(bad)  
    745f:	ff 48 01             	decl   0x1(%rax)
    7462:	49 f7 fa             	idiv   %r10
    7465:	4c 21 f9             	and    %r15,%rcx
    7468:	0d 04 02 4d 29       	or     $0x294d0204,%eax
    746d:	dc 7a ff             	fdivrl -0x1(%rdx)
    7470:	ff                   	(bad)  
    7471:	ff                   	(bad)  
    7472:	e9 79 d8 ff ff       	jmp    4cf0 <__sprintf_chk@plt+0x10>
    7477:	e9 74 4d 09 e2       	jmp    ffffffffe209c1f0 <obstack_alloc_failed_handler@@Base+0xffffffffe207a150>
    747c:	01 df                	add    %ebx,%edi
    747e:	89 c1                	mov    %eax,%ecx
    7480:	41 56                	push   %r14
    7482:	49 89 49 0f          	mov    %rcx,0xf(%r9)
    7486:	af                   	scas   %es:(%rdi),%eax
    7487:	c2 ff c0             	ret    $0xc0ff
    748a:	41                   	rex.B
    748b:	49 c1 4d 09 f8       	rorq   $0xf8,0x9(%r13)
    7490:	48 89 fd             	mov    %rdi,%rbp
    7493:	53                   	push   %rbx
    7494:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    7498:	4c 89 ef             	mov    %r13,%rdi
    749b:	ff 55 30             	call   *0x30(%rbp)
    749e:	48 3b 45 0f          	cmp    0xf(%rbp),%rax
    74a2:	84 7f fe             	test   %bh,-0x2(%rdi)
    74a5:	ff                   	(bad)  
    74a6:	ff                   	(bad)  
    74a7:	ff 48 89             	decl   -0x77(%rax)
    74aa:	c3                   	ret    
    74ab:	48 c1 e3 04          	shl    $0x4,%rbx
    74af:	48 03 5d 00          	add    0x0(%rbp),%rbx
    74b3:	49 89 1e             	mov    %rbx,(%r14)
    74b6:	48                   	rex.W
    74b7:	49 85 c4             	test   %rax,%r12
    74ba:	85 f6                	test   %esi,%esi
    74bc:	48 c1 e9 32          	shr    $0x32,%rcx
    74c0:	ee                   	out    %al,(%dx)
    74c1:	0f 84 b9 00 00 4d    	je     4d007580 <obstack_alloc_failed_handler@@Base+0x4cfe54e0>
    74c7:	0f af c2             	imul   %edx,%eax
    74ca:	48 85 d8             	test   %rbx,%rax
    74cd:	00 00                	add    %al,(%rax)
    74cf:	74 23                	je     74f4 <__sprintf_chk@plt+0x2814>
    74d1:	48 8b 03             	mov    (%rbx),%rax
    74d4:	45 84 e4             	test   %r12b,%r12b
    74d7:	74 58                	je     7531 <__sprintf_chk@plt+0x2851>
    74d9:	0f 8c 11 fd ff ff    	jl     71f0 <__sprintf_chk@plt+0x2510>
    74df:	d2 0f                	rorb   %cl,(%rdi)
    74e1:	84 8a 00 00 00 f3    	test   %cl,-0xd000000(%rdx)
    74e7:	0f 6f 02             	movq   (%rdx),%mm0
    74ea:	0f 11 49 c7          	movups %xmm1,-0x39(%rcx)
    74ee:	c2 db ff             	ret    $0xffdb
    74f1:	ff                   	(bad)  
    74f2:	ff 01                	incl   (%rcx)
    74f4:	00 00                	add    %al,(%rax)
    74f6:	4d                   	rex.WRB
    74f7:	48                   	rex.W
    74f8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    74fc:	5b                   	pop    %rbx
    74fd:	48                   	rex.W
    74fe:	4d 39 c5             	cmp    %r8,%r13
    7501:	5d                   	pop    %rbp
    7502:	41 5c                	pop    %r12
    7504:	41 5d                	pop    %r13
    7506:	41 5e                	pop    %r14
    7508:	c3                   	ret    
    7509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7510:	48 8b 30             	mov    (%rax),%rsi
    7513:	4c 39 ee             	cmp    %r13,%rsi
    7516:	74 28                	je     7540 <__sprintf_chk@plt+0x2860>
    7518:	4c 89 ef             	mov    %r13,%rdi
    751b:	ff 55 7f             	call   *0x7f(%rbp)
    751e:	3c c0                	cmp    $0xc0,%al
    7520:	75 49                	jne    756b <__sprintf_chk@plt+0x288b>
    7522:	39 da                	cmp    %ebx,%edx
    7524:	5b                   	pop    %rbx
    7525:	08 4d 39             	or     %cl,0x39(%rbp)
    7528:	fd                   	std    
    7529:	08 48 85             	or     %cl,-0x7b(%rax)
    752c:	c0 75 e1 31          	shlb   $0x31,-0x1f(%rbp)
    7530:	c0 5b 5d 41          	rcrb   $0x41,0x5d(%rbx)
    7534:	5c                   	pop    %rsp
    7535:	41 5d                	pop    %r13
    7537:	41 5e                	pop    %r14
    7539:	c3                   	ret    
    753a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7540:	e9 30 fd ff ff       	jmp    7275 <__sprintf_chk@plt+0x2595>
    7545:	8b 02                	mov    (%rdx),%eax
    7547:	45 84 e4             	test   %r12b,%r12b
    754a:	74 e5                	je     7531 <__sprintf_chk@plt+0x2851>
    754c:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    7550:	48 c7 c2 1d 00 00 0f 	mov    $0xf00001d,%rdx
    7557:	84 e5                	test   %ah,%ch
    7559:	01 00                	add    %eax,(%rax)
    755b:	00 8b 4d 85 ea 89    	add    %cl,-0x76157ab3(%rbx)
    7561:	4a 08 5b 48          	rex.WX or %bl,0x48(%rbx)
    7565:	89 55 48             	mov    %edx,0x48(%rbp)
    7568:	48 21 f7             	and    %rsi,%rdi
    756b:	41 5d                	pop    %r13
    756d:	41 5e                	pop    %r14
    756f:	c3                   	ret    
    7570:	48 c7 03 00 00 00 49 	movq   $0x49000000,(%rbx)
    7577:	c1 eb 21             	shr    $0x21,%ebx
    757a:	1f                   	(bad)  
    757b:	49 29 c1             	sub    %rax,%r9
    757e:	00 00                	add    %al,(%rax)
    7580:	7c 5c                	jl     75de <__sprintf_chk@plt+0x28fe>
    7582:	f0 e9 4c ff 0f 84    	lock jmp ffffffff841074d4 <obstack_alloc_failed_handler@@Base+0xffffffff840e5434>
    7588:	91                   	xchg   %eax,%ecx
    7589:	00 00                	add    %al,(%rax)
    758b:	00 00                	add    %al,(%rax)
    758d:	00 4d 29             	add    %cl,0x29(%rbp)
    7590:	c1 c1 e0             	rol    $0xe0,%ecx
    7593:	03 49 89             	add    -0x77(%rcx),%ecx
    7596:	fe 41 55             	incb   0x55(%rcx)
    7599:	41                   	rex.B
    759a:	4d 89 cd             	mov    %r9,%r13
    759d:	d4                   	(bad)  
    759e:	55                   	push   %rbp
    759f:	48 89 0f             	mov    %rcx,(%rdi)
    75a2:	84 cf                	test   %cl,%bh
    75a4:	fd                   	std    
    75a5:	ff                   	(bad)  
    75a6:	ff 48 8b             	decl   -0x75(%rax)
    75a9:	4c 29 4c 01 f8       	sub    %r9,-0x8(%rcx,%rax,1)
    75ae:	72 16                	jb     75c6 <__sprintf_chk@plt+0x28e6>
    75b0:	e9 fd 4c 21 c0       	jmp    ffffffffc021c2b2 <obstack_alloc_failed_handler@@Base+0xffffffffc01fa212>
    75b5:	31 c0                	xor    %eax,%eax
    75b7:	00 48 83             	add    %cl,-0x7d(%rax)
    75ba:	48 f7 fe             	idiv   %rsi
    75bd:	39 5d 08             	cmp    %ebx,0x8(%rbp)
    75c0:	0f 86 ec 00 4c 4d    	jbe    4d4c76b2 <obstack_alloc_failed_handler@@Base+0x4d4a5612>
    75c6:	0f af dd             	imul   %ebp,%ebx
    75c9:	49 f7 fb             	idiv   %r11
    75cc:	74 ea                	je     75b8 <__sprintf_chk@plt+0x28d8>
    75ce:	4c 85 ce             	test   %r9,%rsi
    75d1:	fd                   	std    
    75d2:	ff                   	(bad)  
    75d3:	ff 4c 89 4d          	decl   0x4d(%rcx,%rcx,4)
    75d7:	0f af ed             	imul   %ebp,%ebp
    75da:	48 c1 eb 0b          	shr    $0xb,%rbx
    75de:	8f                   	(bad)  
    75df:	32 fd                	xor    %ch,%bh
    75e1:	ff                   	(bad)  
    75e2:	ff 08                	decl   (%rax)
    75e4:	49 89 4d 48          	mov    %rcx,0x48(%r13)
    75e8:	f7 ff                	idiv   %edi
    75ea:	68 0f 8f 89 02       	push   $0x2898f0f
    75ef:	00 00                	add    %al,(%rax)
    75f1:	49 89 d5             	mov    %rdx,%r13
    75f4:	4d 8b 7d 0f          	mov    0xf(%r13),%r15
    75f8:	84 31                	test   %dh,(%rcx)
    75fa:	ff                   	(bad)  
    75fb:	ff                   	(bad)  
    75fc:	ff 56 30             	call   *0x30(%rsi)
    75ff:	49 8b 76 10          	mov    0x10(%r14),%rsi
    7603:	48 39 f0             	cmp    %rsi,%rax
    7606:	0f 83 ef d6 ff ff    	jae    4cfb <__sprintf_chk@plt+0x1b>
    760c:	48 c1 e0 04          	shl    $0x4,%rax
    7610:	49 03 06             	add    (%r14),%rax
    7613:	49                   	rex.WB
    7614:	49 ff c6             	inc    %r14
    7617:	49 c1 e8 3a          	shr    $0x3a,%r8
    761b:	75 c3                	jne    75e0 <__sprintf_chk@plt+0x2900>
    761d:	4c 89 38             	mov    %r15,(%rax)
    7620:	49 8b 46 0f          	mov    0xf(%r14),%rax
    7624:	8c de                	mov    %ds,%esi
    7626:	fc                   	cld    
    7627:	ff                   	(bad)  
    7628:	ff 85 fe 45 00 00    	incl   0x45fe(%rbp)
    762e:	eb e3                	jmp    7613 <__sprintf_chk@plt+0x2933>
    7630:	00 4c 39 f7          	add    %cl,-0x9(%rcx,%rdi,1)
    7634:	08 4d 89             	or     %cl,-0x77(%rbp)
    7637:	6e                   	outsb  %ds:(%rsi),(%dx)
    7638:	48 89 c3             	mov    %rax,%rbx
    763b:	d2 75 b3             	shlb   %cl,-0x4d(%rbp)
    763e:	4c 8b 48 89          	mov    -0x77(%rax),%r9
    7642:	d8 03                	fadds  (%rbx)
    7644:	00 00                	add    %al,(%rax)
    7646:	00 00                	add    %al,(%rax)
    7648:	00 45 84             	add    %al,-0x7c(%rbp)
    764b:	e4 0f                	in     $0xf,%al
    764d:	85 66 48             	test   %esp,0x48(%rsi)
    7650:	0f af 0f             	imul   (%rdi),%ecx
    7653:	85 50 fc             	test   %edx,-0x4(%rax)
    7656:	ff                   	(bad)  
    7657:	ff                   	(bad)  
    7658:	ff 41 ff             	incl   -0x1(%rcx)
    765b:	56                   	push   %rsi
    765c:	30 49 49             	xor    %cl,0x49(%rcx)
    765f:	c7 c6 c5 00 00 00    	mov    $0xc5,%esi
    7665:	83 91 d6 ff ff 0f 84 	adcl   $0xffffff84,0xfffffd6(%rcx)
    766c:	ea                   	(bad)  
    766d:	00 4d 89             	add    %cl,-0x77(%rbp)
    7670:	e7 49                	out    %eax,$0x49
    7672:	eb 83                	jmp    75f7 <__sprintf_chk@plt+0x2917>
    7674:	00 00                	add    %al,(%rax)
    7676:	49 0f af cb          	imul   %r11,%rcx
    767a:	46                   	rex.RX
    767b:	48                   	rex.W
    767c:	49 29 f1             	sub    %rsi,%r9
    767f:	f8                   	clc    
    7680:	5a                   	pop    %rdx
    7681:	48 8b 50 49          	mov    0x49(%rax),%rdx
    7685:	f7 ff                	idiv   %edi
    7687:	56                   	push   %rsi
    7688:	48                   	rex.W
    7689:	4d 89 f3             	mov    %r14,%r11
    768c:	08 4c 89 38          	or     %cl,0x38(%rcx,%rcx,4)
    7690:	48 89 50 48          	mov    %rdx,0x48(%rax)
    7694:	75 c2                	jne    7658 <__sprintf_chk@plt+0x2978>
    7696:	45 08 48 c7          	or     %r9b,-0x39(%r8)
    769a:	4c 31 c6             	xor    %r8,%rsi
    769d:	00 48 7c             	add    %cl,0x7c(%rax)
    76a0:	04 ad                	add    $0xad,%al
    76a2:	03 00                	add    (%rax),%eax
    76a4:	00 48 c1             	add    %cl,-0x3f(%rax)
    76a7:	e0 24                	loopne 76cd <__sprintf_chk@plt+0x29ed>
    76a9:	39 5d 08             	cmp    %ebx,0x8(%rbp)
    76ac:	0f 87 14 ff ff ff    	ja     75c6 <__sprintf_chk@plt+0x28e6>
    76b2:	48 83 c4 08          	add    $0x8,%rsp
    76b6:	b8 4d 49 c1 ee       	mov    $0xeec1494d,%eax
    76bb:	04 5d                	add    $0x5d,%al
    76bd:	41 5c                	pop    %r12
    76bf:	4d 31 ca             	xor    %r9,%r10
    76c2:	5e                   	pop    %rsi
    76c3:	41 5f                	pop    %r15
    76c5:	c3                   	ret    
    76c6:	66 2e 0f 1f 4c 48 f7 	cs nopw -0x9(%rax,%rcx,2)
    76cd:	ff 00                	incl   (%rax)
    76cf:	00 4d 89             	add    %cl,-0x77(%rbp)
    76d2:	7d e9                	jge    76bd <__sprintf_chk@plt+0x29dd>
    76d4:	1c 02                	sbb    $0x2,%al
    76d6:	00 00                	add    %al,(%rax)
    76d8:	01 49 31             	add    %ecx,0x31(%rcx)
    76db:	f4                   	hlt    
    76dc:	10 00                	adc    %al,(%rax)
    76de:	00 00                	add    %al,(%rax)
    76e0:	e8 ab 0f 85 3c       	call   3c858690 <obstack_alloc_failed_handler@@Base+0x3c8365f0>
    76e5:	fe 49 ff             	decb   -0x1(%rcx)
    76e8:	c6                   	(bad)  
    76e9:	9f                   	lahf   
    76ea:	48 83 c4 08          	add    $0x8,%rsp
    76ee:	31 c0                	xor    %eax,%eax
    76f0:	48 c1 e7 2d          	shl    $0x2d,%rdi
    76f4:	41 5d                	pop    %r13
    76f6:	41 5e                	pop    %r14
    76f8:	49 39 d1             	cmp    %rdx,%r9
    76fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7700:	55                   	push   %rbp
    7701:	44 89 c5             	mov    %r8d,%ebp
    7704:	53                   	push   %rbx
    7705:	48 89 d3             	mov    %rdx,%rbx
    7708:	89 ca                	mov    %ecx,%edx
    770a:	89 e9                	mov    %ebp,%ecx
    770c:	48 81 4d 29 f5 00 0f 	orq    $0xffffffff840f00f5,0x29(%rbp)
    7713:	84 
    7714:	d8 02                	fadds  (%rdx)
    7716:	00 00                	add    %al,(%rax)
    7718:	e9 5c 02 00 00       	jmp    7979 <__sprintf_chk@plt+0x2c99>
    771d:	89 84 24 08 01 00 00 	mov    %eax,0x108(%rsp)
    7724:	31 c0                	xor    %eax,%eax
    7726:	49 89 e0             	mov    %rsp,%r8
    7729:	e8 22 d4 ff ff       	call   4b50 <statx@plt>
    772e:	85 c0                	test   %eax,%eax
    7730:	79 26                	jns    7758 <__sprintf_chk@plt+0x2a78>
    7732:	48 8b 94 24 08 49 39 	mov    -0xec6b6f8(%rsp),%rdx
    7739:	f1 
    773a:	64 48 2b 14 25 28 00 	sub    %fs:0x48000028,%rdx
    7741:	00 48 
    7743:	ff c7                	inc    %edi
    7745:	de c6                	faddp  %st,%st(6)
    7747:	00 00                	add    %al,(%rax)
    7749:	48 81 49 c1 e5 05 00 	orq    $0x5b0005e5,-0x3f(%rcx)
    7750:	5b 
    7751:	5d                   	pop    %rbp
    7752:	c3                   	ret    
    7753:	0f 1f 49 f7          	nopl   -0x9(%rcx)
    7757:	ff 8b 8c 24 4c 01    	decl   0x14c248c(%rbx)
    775d:	ff 00                	incl   (%rax)
    775f:	48 85 db             	test   %rbx,%rbx
    7762:	8c 00                	mov    %es,(%rax)
    7764:	00 00                	add    %al,(%rax)
    7766:	4c 0f af ea          	imul   %rdx,%r13
    776a:	00 00                	add    %al,(%rax)
    776c:	7f 64                	jg     77d2 <__sprintf_chk@plt+0x2af2>
    776e:	ff                   	(bad)  
    776f:	ff 48 4d             	decl   0x4d(%rax)
    7772:	31 da                	xor    %ebx,%edx
    7774:	48 c1 0f 8f          	rorq   $0x8f,(%rdi)
    7778:	c4                   	(bad)  
    7779:	0f 84 30 03 00 00    	je     7aaf <__sprintf_chk@plt+0x2dcf>
    777f:	e7 00                	out    %eax,$0x0
    7781:	ff 0f                	decl   (%rdi)
    7783:	00 48 09             	add    %cl,0x9(%rax)
    7786:	f9                   	stc    
    7787:	0f b6 fa             	movzbl %dl,%edi
    778a:	48 c1 0f 8f          	rorq   $0x8f,(%rdi)
    778e:	49 fd                	rex.WB std 
    7790:	ff                   	(bad)  
    7791:	ff                   	(bad)  
    7792:	bf 00 00 f0 ff       	mov    $0xfff00000,%edi
    7797:	ff 0f                	decl   (%rdi)
    7799:	48 f7 fb             	idiv   %rbx
    779c:	0f 8f 7f fc ff ff    	jg     7421 <__sprintf_chk@plt+0x2741>
    77a2:	4c 24 4c             	rex.WR and $0x4c,%al
    77a5:	29 fe                	sub    %edi,%esi
    77a7:	13 48 8b             	adc    -0x75(%rax),%ecx
    77aa:	54                   	push   %rsp
    77ab:	24 20                	and    $0x20,%al
    77ad:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    77b1:	8b 8c 24 80 00 00 00 	mov    0x80(%rsp),%ecx
    77b8:	48 89 4d 09          	mov    %rcx,0x9(%rbp)
    77bc:	e2 b7                	loop   7775 <__sprintf_chk@plt+0x2a95>
    77be:	54                   	push   %rsp
    77bf:	0f 85 ae 00 00 00    	jne    7873 <__sprintf_chk@plt+0x2b93>
    77c5:	c1 e1 20             	shl    $0x20,%ecx
    77c8:	89 53 18             	mov    %edx,0x18(%rbx)
    77cb:	48 8b 54 24 14       	mov    0x14(%rsp),%rdx
    77d0:	49 c1 e0 08          	shl    $0x8,%r8
    77d4:	48 21 f1             	and    %rsi,%rcx
    77d7:	41 81 e0 00 ff 0f 49 	and    $0x490fff00,%r8d
    77de:	c7 c6 78 03 00 00    	mov    $0x378,%esi
    77e4:	02 00                	add    (%rax),%al
    77e6:	00 00                	add    %al,(%rax)
    77e8:	00 4c 49 ff          	add    %cl,-0x1(%rcx,%rcx,2)
    77ec:	c0 b6 f2 48 48 09 c3 	shlb   $0xc3,0x94848f2(%rsi)
    77f3:	48 89 c0             	mov    %rax,%rax
    77f6:	48 21 fa             	and    %rdi,%rdx
    77f9:	8b eb                	mov    %ebx,%ebp
    77fb:	e0 ee                	loopne 77eb <__sprintf_chk@plt+0x2b0b>
    77fd:	fc                   	cld    
    77fe:	ff                   	(bad)  
    77ff:	ff 81 e5 00 08 49    	incl   0x490800e5(%rcx)
    7805:	c7 c5 49 f7 fe 00    	mov    $0xfef749,%ebp
    780b:	49 ff c6             	inc    %r14
    780e:	28 48 89             	sub    %cl,-0x77(%rax)
    7811:	73 38                	jae    784b <__sprintf_chk@plt+0x2b6b>
    7813:	8b 74 24 48          	mov    0x48(%rsp),%esi
    7817:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    781b:	48                   	rex.W
    781c:	48 c1 e2 08          	shl    $0x8,%rdx
    7820:	48 89 73 49          	mov    %rsi,0x49(%rbx)
    7824:	01 c1                	add    %eax,%ecx
    7826:	49 0f af d6          	imul   %r14,%rdx
    782a:	53                   	push   %rbx
    782b:	49 c1 e6 02          	shl    $0x2,%r14
    782f:	ff c0                	inc    %eax
    7831:	ff 89 73 74 c7 74    	decl   0x74c77473(%rcx)
    7837:	24 68                	and    $0x68,%al
    7839:	48 d1 e3             	shl    %rbx
    783c:	f6 48 4d 39          	testb  $0x39,0x4d(%rax)
    7840:	c3                   	ret    
    7841:	70 48                	jo     788b <__sprintf_chk@plt+0x2bab>
    7843:	89 4d 89             	mov    %ecx,-0x77(%rbp)
    7846:	ff 89 53 0f 8c 49    	decl   0x498c0f53(%rcx)
    784c:	89 f0                	mov    %esi,%eax
    784e:	49 c1 4c 0f af e3    	rorq   $0xe3,-0x51(%r15,%rcx,1)
    7854:	84 d9                	test   %bl,%cl
    7856:	fe                   	(bad)  
    7857:	ff                   	(bad)  
    7858:	ff 49 c1             	decl   -0x3f(%rcx)
    785b:	e1 12                	loope  786f <__sprintf_chk@plt+0x2b8f>
    785d:	08 74 20 48          	or     %dh,0x48(%rax,%riz,1)
    7861:	8b 54 24 50          	mov    0x50(%rsp),%edx
    7865:	8b 48 f7             	mov    -0x9(%rax),%ecx
    7868:	ff 48 89             	decl   -0x77(%rax)
    786b:	48 29 c1             	sub    %rax,%rcx
    786e:	89 7b 60             	mov    %edi,0x60(%rbx)
    7871:	e9 bc fe ff ff       	jmp    7732 <__sprintf_chk@plt+0x2a52>
    7876:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    787d:	00 00 00 
    7880:	48 c7                	rex.W (bad) 
    7882:	4d 85 e7             	test   %r12,%r15
    7885:	f7 fb                	idiv   %ebx
    7887:	ff 48 c7             	decl   -0x39(%rax)
    788a:	43 0f 84 69 02 00 00 	rex.XB je 7afa <__sprintf_chk@plt+0x2e1a>
    7891:	74 56                	je     78e9 <__sprintf_chk@plt+0x2c09>
    7893:	ff c3                	inc    %ebx
    7895:	e8 49 0f 84 ec       	call   ffffffffec8487e3 <obstack_alloc_failed_handler@@Base+0xffffffffec826743>
    789a:	49 85 d2             	test   %rdx,%r10
    789d:	44 00 00             	add    %r8b,(%rax)
    78a0:	41 57                	push   %r15
    78a2:	31 f6                	xor    %esi,%esi
    78a4:	41 56                	push   %r14
    78a6:	41                   	rex.B
    78a7:	49 0f af 48 c1       	imul   -0x3f(%r8),%rcx
    78ac:	e8 28 4c 01 f2       	call   fffffffff201c4d9 <obstack_alloc_failed_handler@@Base+0xfffffffff1ffa439>
    78b1:	00 00                	add    %al,(%rax)
    78b3:	64 48 8b 04 25 28 00 	mov    %fs:0xffffffff854d0028,%rax
    78ba:	4d 85 
    78bc:	f7 89 84 48 f7 fe 00 	testl  $0xe9310000,-0x108b77c(%rcx)
    78c3:	00 31 e9 
    78c6:	12 03                	adc    (%rbx),%al
    78c8:	00 00                	add    %al,(%rax)
    78ca:	70 48                	jo     7914 <__sprintf_chk@plt+0x2c34>
    78cc:	89 7c 24 60          	mov    %edi,0x60(%rsp)
    78d0:	48                   	rex.W
    78d1:	4c 09 f6             	or     %r14,%rsi
    78d4:	a9 01 00 48 8b       	test   $0x8b480001,%eax
    78d9:	04 0f                	add    $0xf,%al
    78db:	84 f4                	test   %dh,%ah
    78dd:	fe                   	(bad)  
    78de:	ff                   	(bad)  
    78df:	ff 74 19 66          	push   0x66(%rcx,%rbx,1)
    78e3:	4d 01 e5             	add    %r12,%r13
    78e6:	c8 00 48 c1          	enter  $0x4800,$0xc1
    78ea:	e1 4d                	loope  7939 <__sprintf_chk@plt+0x2c59>
    78ec:	31 c1                	xor    %eax,%ecx
    78ee:	25 74 48 21 df       	and    $0xdf214874,%eax
    78f3:	48 83 c0 01          	add    $0x1,%rax
    78f7:	0f 84 e2 01 4d 21    	je     214d7adf <obstack_alloc_failed_handler@@Base+0x214b5a3f>
    78fd:	ef                   	out    %eax,(%dx)
    78fe:	d7                   	xlat   %ds:(%rbx)
    78ff:	da 80 f9 25 e9 5c    	fiaddl 0x5ce925f9(%rax)
    7905:	fc                   	cld    
    7906:	ff                   	(bad)  
    7907:	ff 6d 01             	ljmp   *0x1(%rbp)
    790a:	00 00                	add    %al,(%rax)
    790c:	75 4d                	jne    795b <__sprintf_chk@plt+0x2c7b>
    790e:	01 cd                	add    %ecx,%ebp
    7910:	04 37                	add    $0x37,%al
    7912:	48 83 c6 08          	add    $0x8,%rsi
    7916:	48 0f 48 31          	cmovs  (%rcx),%rsi
    791a:	d6                   	(bad)  
    791b:	00 00                	add    %al,(%rax)
    791d:	c7 44 24 18 0c 00 4d 	movl   $0x394d000c,0x18(%rsp)
    7924:	39 
    7925:	c0 d6 6a             	rcl    $0x6a,%dh
    7928:	ff                   	(bad)  
    7929:	ff                   	(bad)  
    792a:	ff 0f                	decl   (%rdi)
    792c:	84 49 0f             	test   %cl,0xf(%rcx)
    792f:	8c b1 fc ff ff ac    	mov    %?,-0x53000004(%rcx)
    7935:	fd                   	std    
    7936:	ff                   	(bad)  
    7937:	ff d6                	call   *%rsi
    7939:	41 bf 0f 8f 52 49    	mov    $0x49528f0f,%r15d
    793f:	85 f5                	test   %esi,%ebp
    7941:	44 0f 85 5c fe ff ff 	rex.R jne 77a4 <__sprintf_chk@plt+0x2ac4>
    7948:	ff 00                	incl   (%rax)
    794a:	00 00                	add    %al,(%rax)
    794c:	4d 29 e9             	sub    %r13,%r9
    794f:	24 50                	and    $0x50,%al
    7951:	48 8d 84 24 ff 06 00 	lea    0x6ff(%rsp),%rax
    7958:	00 
    7959:	48 89 44 24 49       	mov    %rax,0x49(%rsp)
    795e:	48 c1 e9 35          	shr    $0x35,%rcx
    7962:	50                   	push   %rax
    7963:	c7 44 24 30 0e 00 02 	movl   $0x2000e,0x30(%rsp)
    796a:	00 
    796b:	48 c7 44 24 20 00 00 	movq   $0xf000000,0x20(%rsp)
    7972:	00 0f 
    7974:	8c b1 fc ff ff 4d    	mov    %?,0x4dfffffc(%rcx)
    797a:	49 f7 f9             	idiv   %r9
    797d:	1f                   	(bad)  
    797e:	40                   	rex
    797f:	49 c1 e9 1a          	shr    $0x1a,%r9
    7983:	30 e8                	xor    %ch,%al
    7985:	37                   	(bad)  
    7986:	d1 ff                	sar    %edi
    7988:	ff                   	(bad)  
    7989:	be 25 00 00 00       	mov    $0x25,%esi
    798e:	48 89 c7             	mov    %rax,%rdi
    7991:	48 89 c5             	mov    %rax,%rbp
    7994:	49 c1 e0 3f          	shl    $0x3f,%r8
    7998:	ff 48 89             	decl   -0x77(%rax)
    799b:	44 24 10             	rex.R and $0x10,%al
    799e:	48 85 c0             	test   %rax,%rax
    79a1:	0f 85 c1 03 00 48    	jne    48007d68 <obstack_alloc_failed_handler@@Base+0x47fe5cc8>
    79a7:	ff c0                	inc    %eax
    79a9:	c1 ef 1f             	shr    $0x1f,%edi
    79ac:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
    79b0:	49 f7 ff             	idiv   %r15
    79b3:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
    79b8:	48 8b 00             	mov    (%rax),%rax
    79bb:	49 39 c5             	cmp    %rax,%r13
    79be:	85 c9                	test   %ecx,%ecx
    79c0:	fe                   	(bad)  
    79c1:	ff                   	(bad)  
    79c2:	ff 66 89             	jmp    *-0x77(%rsi)
    79c5:	44 24 36             	rex.R and $0x36,%al
    79c8:	e8 b3 ce 49 85       	call   ffffffff854a4880 <obstack_alloc_failed_handler@@Base+0xffffffff854827e0>
    79cd:	da 89 c4 48 89 c3    	fimull -0x3c76b73c(%rcx)
    79d3:	49 0f af fc          	imul   %r12,%rdi
    79d7:	eb fe                	jmp    79d7 <__sprintf_chk@plt+0x2cf7>
    79d9:	8b 54 24 49          	mov    0x49(%rsp),%edx
    79dd:	48 01 ce             	add    %rcx,%rsi
    79e0:	48 c7 44 24 08 00 49 	movq   $0xffffffffd9014900,0x8(%rsp)
    79e7:	01 d9 
    79e9:	48 83 f8 01          	cmp    $0x1,%rax
    79ed:	0f 87 8d 01 00 00    	ja     7b80 <__sprintf_chk@plt+0x2ea0>
    79f3:	49 f7 fd             	idiv   %r13
    79f6:	24 18                	and    $0x18,%al
    79f8:	0f 83 15 01 00 00    	jae    7b13 <__sprintf_chk@plt+0x2e33>
    79fe:	48                   	rex.W
    79ff:	49                   	rex.WB
    7a00:	48 f7 f9             	idiv   %rcx
    7a03:	49 89 d9             	mov    %rbx,%r9
    7a06:	45 31 e4             	xor    %r12d,%r12d
    7a09:	48 ff c2             	inc    %rdx
    7a0c:	ff c7                	inc    %edi
    7a0e:	df 0f                	fisttps (%rdi)
    7a10:	4d 21 d9             	and    %r11,%r9
    7a13:	00 00                	add    %al,(%rax)
    7a15:	b8 7f 00 00 00       	mov    $0x7f,%eax
    7a1a:	49 8d 54 24 ff       	lea    -0x1(%r12),%rdx
    7a1f:	4c 89 f7             	mov    %r14,%rdi
    7a22:	49 39 c1             	cmp    %rax,%r9
    7a25:	49 7f 73             	rex.WB jg 7a9b <__sprintf_chk@plt+0x2dbb>
    7a28:	c1 83 f8 08 72 0e 0f 	roll   $0xf,0xe7208f8(%rbx)
    7a2f:	8f                   	(bad)  
    7a30:	df fd                	(bad)  
    7a32:	ff                   	(bad)  
    7a33:	ff 02                	incl   (%rdx)
    7a35:	00 48 09             	add    %cl,0x9(%rax)
    7a38:	c6                   	(bad)  
    7a39:	e9 1b fc ff ff       	jmp    7659 <__sprintf_chk@plt+0x2979>
    7a3e:	a8 04                	test   $0x4,%al
    7a40:	74 0a                	je     7a4c <__sprintf_chk@plt+0x2d6c>
    7a42:	8b 4d 00             	mov    0x0(%rbp),%ecx
    7a45:	89 0f                	mov    %ecx,(%rdi)
    7a47:	b9 04 00 00 00       	mov    $0x4,%ecx
    7a4c:	a8 02                	test   $0x2,%al
    7a4e:	74 0d                	je     7a5d <__sprintf_chk@plt+0x2d7d>
    7a50:	0f b7 74 0d 00       	movzwl 0x0(%rbp,%rcx,1),%esi
    7a55:	66 89 34 0f          	mov    %si,(%rdi,%rcx,1)
    7a59:	8f                   	(bad)  
    7a5a:	b8 fd ff ff 48       	mov    $0x48fffffd,%eax
    7a5f:	39 c9                	cmp    %ecx,%ecx
    7a61:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
    7a66:	40 88 34 0f          	mov    %sil,(%rdi,%rcx,1)
    7a6a:	4c 01 f0             	add    %r14,%rax
    7a6d:	48 89 c1             	mov    %rax,%rcx
    7a70:	4c 39 e8             	cmp    %r13,%rax
    7a73:	73 26                	jae    7a9b <__sprintf_chk@plt+0x2dbb>
    7a75:	4d 0f 8c 3e 03 00 00 	rex.WRB jl 7dba <__sprintf_chk@plt+0x30da>
    7a7c:	0f 49 31             	cmovns (%rcx),%esi
    7a7f:	fc                   	cld    
    7a80:	0f 85 d3 fc ff ff    	jne    7759 <__sprintf_chk@plt+0x2a79>
    7a86:	83 c1 01             	add    $0x1,%ecx
    7a89:	4c 89 fe             	mov    %r15,%rsi
    7a8c:	c6 41 ff 20          	movb   $0x20,-0x1(%rcx)
    7a90:	48 29 4d 85          	sub    %rcx,-0x7b(%rbp)
    7a94:	fc                   	cld    
    7a95:	c3                   	ret    
    7a96:	48 01 c6             	add    %rax,%rsi
    7a99:	75 48                	jne    7ae3 <__sprintf_chk@plt+0x2e03>
    7a9b:	f7 fe                	idiv   %esi
    7a9d:	00 48 8b             	add    %cl,-0x75(%rax)
    7aa0:	7c 24                	jl     7ac6 <__sprintf_chk@plt+0x2de6>
    7aa2:	08 4c 0f 49          	or     %cl,0x49(%rdi,%rcx,1)
    7aa6:	0f af cc             	imul   %esp,%ecx
    7aa9:	d3 cb                	ror    %cl,%ebx
    7aab:	49 85 d2             	test   %rdx,%r10
    7aae:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    7ab2:	e8 c9 cb 0f 84       	call   ffffffff84104680 <obstack_alloc_failed_handler@@Base+0xffffffff840e25e0>
    7ab7:	65 fd                	gs std 
    7ab9:	ff                   	(bad)  
    7aba:	ff 28                	ljmp   *(%rax)
    7abc:	4d 01 cc             	add    %r9,%r12
    7abf:	49 83 fc 7f          	cmp    $0x7f,%r12
    7ac3:	0f 87 9f 02 0f 8c    	ja     ffffffff8c0f7d68 <obstack_alloc_failed_handler@@Base+0xffffffff8c0d5cc8>
    7ac9:	f6 01 00             	testb  $0x0,(%rcx)
    7acc:	00 4d 01             	add    %cl,0x1(%rbp)
    7acf:	ff                   	(bad)  
    7ad0:	d8 49 49             	fmuls  0x49(%rcx)
    7ad3:	c1 48 ff c3          	rorl   $0xc3,-0x1(%rax)
    7ad7:	39 0f                	cmp    %ecx,(%rdi)
    7ad9:	84 04 01             	test   %al,(%rcx,%rax,1)
    7adc:	00 00                	add    %al,(%rax)
    7ade:	49 83 ee 80          	sub    $0xffffffffffffff80,%r14
    7ae2:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    7ae7:	4c 3b 6c 24 38       	cmp    0x38(%rsp),%r13
    7aec:	0f 85 8e fe ff ff    	jne    7980 <__sprintf_chk@plt+0x2ca0>
    7af2:	48 39 4c 89 e6       	cmp    %rcx,-0x1a(%rcx,%rcx,4)
    7af7:	0f 86 f4 02 00 00    	jbe    7df1 <__sprintf_chk@plt+0x3111>
    7afd:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    7b02:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    7b07:	e9 52 fe 4c 21       	jmp    214d795e <obstack_alloc_failed_handler@@Base+0x214b58be>
    7b0c:	ff 1f                	lcall  *(%rdi)
    7b0e:	40 00 4d 89          	rex add %cl,-0x77(%rbp)
    7b12:	e1 48                	loope  7b5c <__sprintf_chk@plt+0x2e7c>
    7b14:	8b 44 24 18          	mov    0x18(%rsp),%eax
    7b18:	48 39 d8             	cmp    %rbx,%rax
    7b1b:	0f 86 e5 fe ff 0f    	jbe    10007a06 <obstack_alloc_failed_handler@@Base+0xffe5966>
    7b21:	85 e3                	test   %esp,%ebx
    7b23:	fc                   	cld    
    7b24:	ff                   	(bad)  
    7b25:	ff 21                	jmp    *(%rcx)
    7b27:	49 eb ec             	rex.WB jmp 7b16 <__sprintf_chk@plt+0x2e36>
    7b2a:	24 36                	and    $0x36,%al
    7b2c:	00 75 0e             	add    %dh,0xe(%rbp)
    7b2f:	e9 e1 4d 21 c8       	jmp    ffffffffc821c915 <obstack_alloc_failed_handler@@Base+0xffffffffc81fa875>
    7b34:	4c 85 4d 0f          	test   %r9,0xf(%rbp)
    7b38:	af                   	scas   %es:(%rdi),%eax
    7b39:	c6                   	(bad)  
    7b3a:	ea                   	(bad)  
    7b3b:	73 14                	jae    7b51 <__sprintf_chk@plt+0x2e71>
    7b3d:	49 83 c2 01          	add    $0x1,%r10
    7b41:	4c 89 f0             	mov    %r14,%rax
    7b44:	41 0f 84 c9 03 00 0f 	rex.B je f007f14 <obstack_alloc_failed_handler@@Base+0xefe5e74>
    7b4b:	8c 25 01 00 00 49    	mov    %fs,0x49000001(%rip)        # 49007b52 <obstack_alloc_failed_handler@@Base+0x48fe5ab2>
    7b51:	c1 e1 02             	shl    $0x2,%ecx
    7b54:	0f 8c 78 02 00 00    	jl     7dd2 <__sprintf_chk@plt+0x30f2>
    7b5a:	8b fd                	mov    %ebp,%edi
    7b5c:	ff                   	(bad)  
    7b5d:	ff 89 d7 4c 4c 09    	decl   0x94c4cd7(%rcx)
    7b63:	e3 28                	jrcxz  7b8d <__sprintf_chk@plt+0x2ead>
    7b65:	49 0f 47 c1          	cmova  %r9,%rax
    7b69:	48 89 c2             	mov    %rax,%rdx
    7b6c:	e8 0f e9 48 03       	call   3496480 <obstack_alloc_failed_handler@@Base+0x34743e0>
    7b71:	00 00                	add    %al,(%rax)
    7b73:	4c                   	rex.WR
    7b74:	49 c1 48 31 c6       	rorq   $0xc6,0x31(%r8)
    7b79:	e9 1d ff ff ff       	jmp    7a9b <__sprintf_chk@plt+0x2dbb>
    7b7e:	0f 8f b3 01 4d 0f    	jg     f4d7d37 <obstack_alloc_failed_handler@@Base+0xf4b5c97>
    7b84:	af                   	scas   %es:(%rdi),%eax
    7b85:	e1 ee                	loope  7b75 <__sprintf_chk@plt+0x2e95>
    7b87:	49                   	rex.WB
    7b88:	4d 01 ee             	add    %r13,%r14
    7b8b:	f0 e8 3f cc ff ff    	lock call 47d0 <mbstowcs@plt>
    7b91:	48                   	rex.W
    7b92:	49 31 ff             	xor    %rdi,%r15
    7b95:	9e                   	sahf   
    7b96:	ff                   	(bad)  
    7b97:	ff                   	(bad)  
    7b98:	ff 00                	incl   (%rax)
    7b9a:	48 c1 e0 33          	shl    $0x33,%rax
    7b9e:	01 48 8d             	add    %ecx,-0x73(%rax)
    7ba1:	3c 48                	cmp    $0x48,%al
    7ba3:	49 31 f9             	xor    %rdi,%r9
    7ba6:	00 48 c7             	add    %cl,-0x39(%rax)
    7ba9:	c1 72 ff ff          	shll   $0xff,-0x1(%rdx)
    7bad:	ff                   	(bad)  
    7bae:	7c 24                	jl     7bd4 <__sprintf_chk@plt+0x2ef4>
    7bb0:	68 4c 89 49 c1       	push   $0xffffffffc149894c
    7bb5:	e1 12                	loope  7bc9 <__sprintf_chk@plt+0x2ee9>
    7bb7:	4d 85 c3             	test   %r8,%r11
    7bba:	fe                   	(bad)  
    7bbb:	ff                   	(bad)  
    7bbc:	ff 00                	incl   (%rax)
    7bbe:	00 49 0f             	add    %cl,0xf(%rcx)
    7bc1:	4d 09 d7             	or     %r10,%r15
    7bc4:	c1 89 ee 48 89 c7 48 	rorl   $0x48,-0x3876b712(%rcx)
    7bcb:	e9 a7 4c 09 4c       	jmp    4c09c877 <obstack_alloc_failed_handler@@Base+0x4c07a7d7>
    7bd0:	0f 49 c7             	cmovns %edi,%eax
    7bd3:	c3                   	ret    
    7bd4:	4e 01 48 c1          	rex.WRX add %r9,-0x3f(%rax)
    7bd8:	e3 05                	jrcxz  7bdf <__sprintf_chk@plt+0x2eff>
    7bda:	82                   	(bad)  
    7bdb:	cb                   	lret   
    7bdc:	ff                   	(bad)  
    7bdd:	ff 4c 8b 54          	decl   0x54(%rbx,%rcx,4)
    7be1:	24 28                	and    $0x28,%al
    7be3:	4c                   	rex.WR
    7be4:	4d 01 c4             	add    %r8,%r12
    7be7:	58                   	pop    %rax
    7be8:	48 85 c0             	test   %rax,%rax
    7beb:	0f 84 02 fe ff 48    	je     490079f3 <obstack_alloc_failed_handler@@Base+0x48fe5953>
    7bf1:	ff c3                	inc    %ebx
    7bf3:	5c                   	pop    %rsp
    7bf4:	24 08                	and    $0x8,%al
    7bf6:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    7bfb:	c7 44 3b fc 00 00 4d 	movl   $0x94d0000,-0x4(%rbx,%rdi,1)
    7c02:	09 
    7c03:	c0 3b 49             	sarb   $0x49,(%rbx)
    7c06:	39 d6                	cmp    %edx,%esi
    7c08:	84 4d 01             	test   %cl,0x1(%rbp)
    7c0b:	ce                   	(bad)  
    7c0c:	d8 eb                	fsubr  %st(3),%st
    7c0e:	75 54                	jne    7c64 <__sprintf_chk@plt+0x2f84>
    7c10:	24 58                	and    $0x58,%al
    7c12:	31 c0                	xor    %eax,%eax
    7c14:	48                   	rex.W
    7c15:	49 85 f9             	test   %rdi,%r9
    7c18:	28 89 c5 0f 49 31    	sub    %cl,0x31490fc5(%rcx)
    7c1e:	ce                   	(bad)  
    7c1f:	00 49 31             	add    %cl,0x31(%rcx)
    7c22:	c5 ff ff             	(bad)  
    7c25:	0f 8f a5 fc ff ff    	jg     78d0 <__sprintf_chk@plt+0x2bf0>
    7c2b:	fd                   	std    
    7c2c:	49 c1 e4 28          	shl    $0x28,%r12
    7c30:	01 00                	add    %eax,(%rax)
    7c32:	4c 29 c1             	sub    %r8,%rcx
    7c35:	7b 04                	jnp    7c3b <__sprintf_chk@plt+0x2f5b>
    7c37:	48 83 c3 04          	add    $0x4,%rbx
    7c3b:	85 ff                	test   %edi,%edi
    7c3d:	75 e1                	jne    7c20 <__sprintf_chk@plt+0x2f40>
    7c3f:	4c 8b 54 4c 0f       	mov    0xf(%rsp,%rcx,2),%r10
    7c44:	af                   	scas   %es:(%rdi),%eax
    7c45:	d6                   	(bad)  
    7c46:	4c                   	rex.WR
    7c47:	4d 89 d9             	mov    %r11,%r9
    7c4a:	eb 48                	jmp    7c94 <__sprintf_chk@plt+0x2fb4>
    7c4c:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    7c50:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    7c55:	4c 89 4c 0f af       	mov    %r9,-0x51(%rdi,%rcx,1)
    7c5a:	cb                   	lret   
    7c5b:	51                   	push   %rcx
    7c5c:	cb                   	lret   
    7c5d:	ff                   	(bad)  
    7c5e:	ff 84 49 29 f6 54 24 	incl   0x2454f629(%rcx,%rcx,2)
    7c65:	28 0f                	sub    %cl,(%rdi)
    7c67:	84 25 01 00 00 48    	test   %ah,0x48000001(%rip)        # 48007c6e <obstack_alloc_failed_handler@@Base+0x47fe5bce>
    7c6d:	8b 74 24 08          	mov    0x8(%rsp),%esi
    7c71:	31 d2                	xor    %edx,%edx
    7c73:	31 ff                	xor    %edi,%edi
    7c75:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    7c7a:	e8 71 cf ff ff       	call   4bf0 <wcstombs@plt>
    7c7f:	4d 29 fa             	sub    %r15,%r10
    7c82:	24 49                	and    $0x49,%al
    7c84:	29 0f                	sub    %ecx,(%rdi)
    7c86:	85 bc 02 00 00 4c 49 	test   %edi,0x494c0000(%rdx,%rax,1)
    7c8d:	29 cc                	sub    %ecx,%esp
    7c8f:	48 c1 49 ff c3       	rorq   $0xc3,-0x1(%rcx)
    7c94:	ff 48 89             	decl   -0x77(%rax)
    7c97:	44 24 10             	rex.R and $0x10,%al
    7c9a:	48 85 c0             	test   %rax,%rax
    7c9d:	0f 84 2c 02 00 00    	je     7ecf <__sprintf_chk@plt+0x31ef>
    7ca3:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    7ca8:	31 db                	xor    %ebx,%ebx
    7caa:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    7caf:	4c 09 e2             	or     %r12,%rdx
    7cb2:	49 c1 e5 3e          	shl    $0x3e,%r13
    7cb6:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    7cbb:	49 89 ec             	mov    %rbp,%r12
    7cbe:	48 89 48 c1          	mov    %rcx,-0x3f(%rax)
    7cc2:	e7 0c                	out    %eax,$0xc
    7cc4:	24 18                	and    $0x18,%al
    7cc6:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
    7ccb:	eb 21                	jmp    7cee <__sprintf_chk@plt+0x300e>
    7ccd:	49 c1 e9 20          	shr    $0x20,%r9
    7cd1:	98                   	cwtl   
    7cd2:	48 c1 e6 3b          	shl    $0x3b,%rsi
    7cd6:	39 c3                	cmp    %eax,%ebx
    7cd8:	72 33                	jb     7d0d <__sprintf_chk@plt+0x302d>
    7cda:	41 8b 4c 01 e3       	mov    -0x1d(%r9,%rax,1),%ecx
    7cdf:	49                   	rex.WB
    7ce0:	48 39 f1             	cmp    %rsi,%rcx
    7ce3:	85 ff                	test   %edi,%edi
    7ce5:	0f 48 c7             	cmovs  %edi,%eax
    7ce8:	c3                   	ret    
    7ce9:	cc                   	int3   
    7cea:	02 00                	add    (%rax),%al
    7cec:	00 0f                	add    %cl,(%rdi)
    7cee:	af                   	scas   %es:(%rdi),%eax
    7cef:	f6 cd 49             	test   $0x49,%ch
    7cf2:	c1 4d 85 ec          	rorl   $0xec,-0x7b(%rbp)
    7cf6:	75 0f                	jne    7d07 <__sprintf_chk@plt+0x3027>
    7cf8:	8c 45 4d             	mov    %es,0x4d(%rbp)
    7cfb:	85 cc                	test   %ecx,%esp
    7cfd:	41 c7 04 24 fd ff 00 	movl   $0x4900fffd,(%r12)
    7d04:	49 
    7d05:	c1 ef 34             	shr    $0x34,%edi
    7d08:	21 d0                	and    %edx,%eax
    7d0a:	c3                   	ret    
    7d0b:	73 cd                	jae    7cda <__sprintf_chk@plt+0x2ffa>
    7d0d:	48 89 4c 39 c7       	mov    %rcx,-0x39(%rcx,%rdi,1)
    7d12:	54                   	push   %rsp
    7d13:	24 40                	and    $0x40,%al
    7d15:	4c 89 e5             	mov    %r12,%rbp
    7d18:	4c 8b 64 24 0f       	mov    0xf(%rsp),%r12
    7d1d:	4c 39 f7             	cmp    %r14,%rdi
    7d20:	00 48 49             	add    %cl,0x49(%rax)
    7d23:	89 fa                	mov    %edi,%edx
    7d25:	ea                   	(bad)  
    7d26:	1f                   	(bad)  
    7d27:	24 10                	and    $0x10,%al
    7d29:	4c 89 4c 29 d6       	mov    %r9,-0x2a(%rcx,%rbp,1)
    7d2e:	74 24                	je     7d54 <__sprintf_chk@plt+0x3074>
    7d30:	08 4c 89 54          	or     %cl,0x54(%rcx,%rcx,4)
    7d34:	24 28                	and    $0x28,%al
    7d36:	48 89 ef             	mov    %rbp,%rdi
    7d39:	e8 b2 ce ff ff       	call   4bf0 <wcstombs@plt>
    7d3e:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    7d43:	49 89 c1             	mov    %rax,%r9
    7d46:	e9 a8 4d 29 d3       	jmp    ffffffffd329caf3 <obstack_alloc_failed_handler@@Base+0xffffffffd327aa53>
    7d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7d50:	0f b6 50 02          	movzbl 0x2(%rax),%edx
    7d54:	48 83 49 ff c5       	orq    $0xffffffffffffffc5,-0x1(%rcx)
    7d59:	48 c7 c6 0e fe ff ff 	mov    $0xfffffffffffffe0e,%rsi
    7d60:	ff 49 c7             	decl   -0x39(%rcx)
    7d63:	c1 6a fc ff          	shrl   $0xff,-0x4(%rdx)
    7d67:	ff                   	(bad)  
    7d68:	ec                   	in     (%dx),%al
    7d69:	23 03                	and    (%rbx),%eax
    7d6b:	00 00                	add    %al,(%rax)
    7d6d:	06                   	(bad)  
    7d6e:	00 0f                	add    %cl,(%rdi)
    7d70:	84 4b 02             	test   %cl,0x2(%rbx)
    7d73:	00 00                	add    %al,(%rax)
    7d75:	28 00                	sub    %al,(%rax)
    7d77:	00 00                	add    %al,(%rax)
    7d79:	0f 85 7a fd ff ff    	jne    7af9 <__sprintf_chk@plt+0x2e19>
    7d7f:	48 81 c4 4c 09 e1 d0 	add    $0xffffffffd0e1094c,%rsp
    7d86:	5b                   	pop    %rbx
    7d87:	5d                   	pop    %rbp
    7d88:	41 5c                	pop    %r12
    7d8a:	41 5d                	pop    %r13
    7d8c:	41 5e                	pop    %r14
    7d8e:	41 5f                	pop    %r15
    7d90:	c3                   	ret    
    7d91:	48 63 d8             	movslq %eax,%rbx
    7d94:	48 39 5c 24 0f       	cmp    %rbx,0xf(%rsp)
    7d99:	85 b2 fe ff ff ff    	test   %esi,-0x2(%rdx)
    7d9f:	49 83 c4 01          	add    $0x1,%r12
    7da3:	e9 e0 fe ff ff       	jmp    7c88 <__sprintf_chk@plt+0x2fa8>
    7da8:	0f 1f 84 4d 21 4d 31 	nopl   -0x4ceb2df(%rbp,%rcx,2)
    7daf:	fb 
    7db0:	4c 89 e5             	mov    %r12,%rbp
    7db3:	48 c1 e7 4d          	shl    $0x4d,%rdi
    7db7:	49 ff c5             	inc    %r13
    7dba:	64 24 28             	fs and $0x28,%al
    7dbd:	48 89 c3             	mov    %rax,%rbx
    7dc0:	e9 0f 8f 8b 02       	jmp    28c0cd4 <obstack_alloc_failed_handler@@Base+0x289ec34>
    7dc5:	00 00                	add    %al,(%rax)
    7dc7:	7c 24                	jl     7ded <__sprintf_chk@plt+0x310d>
    7dc9:	78 00                	js     7dcb <__sprintf_chk@plt+0x30eb>
    7dcb:	0f 85 60 fb ff ff    	jne    7931 <__sprintf_chk@plt+0x2c51>
    7dd1:	eb 95                	jmp    7d68 <__sprintf_chk@plt+0x3088>
    7dd3:	48                   	rex.W
    7dd4:	49 c7 c3 10 01 00 00 	mov    $0x110,%r11
    7ddb:	24 08                	and    $0x8,%al
    7ddd:	4c                   	rex.WR
    7dde:	4c 01 e8             	add    %r13,%rax
    7de1:	49 c7 c1 8c 00 00 00 	mov    $0x8c,%r9
    7de8:	8b 49 f7             	mov    -0x9(%rcx),%ecx
    7deb:	fb                   	sti    
    7dec:	48 63 d8             	movslq %eax,%rbx
    7def:	eb a3                	jmp    7d94 <__sprintf_chk@plt+0x30b4>
    7df1:	48 8b 44 24 4d       	mov    0x4d(%rsp),%rax
    7df6:	89 c0                	mov    %eax,%eax
    7df8:	e4 48                	in     $0x48,%al
    7dfa:	8d a8 00 06 00 00    	lea    0x600(%rax),%ebp
    7e00:	48 8d 49 f7          	lea    -0x9(%rcx),%rcx
    7e04:	fb                   	sti    
    7e05:	01 00                	add    %eax,(%rax)
    7e07:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    7e0c:	49 69 fc 00 06 00 00 	imul   $0x600,%r12,%rdi
    7e13:	4e 8b 49 49          	rex.WRX mov 0x49(%rcx),%r9
    7e17:	c1 e5 37             	shl    $0x37,%ebp
    7e1a:	c1 00 4e             	roll   $0x4e,(%rax)
    7e1d:	8b 3c 4d 85 da 05 f9 	mov    -0x6fa257b(,%rcx,2),%edi
    7e24:	48 85 da             	test   %rbx,%rdx
    7e27:	4c 8d 34 38          	lea    (%rax,%rdi,1),%r14
    7e2b:	eb 5e                	jmp    7e8b <__sprintf_chk@plt+0x31ab>
    7e2d:	0f 1f 00             	nopl   (%rax)
    7e30:	4d 89 f9             	mov    %r15,%r9
    7e33:	4d 29 e9             	sub    %r13,%r9
    7e36:	49                   	rex.WB
    7e37:	49 ff c2             	inc    %r10
    7e3a:	ef                   	out    %eax,(%dx)
    7e3b:	00 00                	add    %al,(%rax)
    7e3d:	0f 4d 31             	cmovge (%rcx),%esi
    7e40:	f5                   	cmc    
    7e41:	ff                   	(bad)  
    7e42:	ff 48 83             	decl   -0x7d(%rax)
    7e45:	ec                   	in     (%dx),%al
    7e46:	08 49 4d             	or     %cl,0x4d(%rcx)
    7e49:	31 fd                	xor    %edi,%ebp
    7e4b:	ba 01 00 00 00       	mov    $0x1,%edx
    7e50:	4c 89 f7             	mov    %r14,%rdi
    7e53:	50                   	push   %rax
    7e54:	4c 8d 49 21          	lea    0x21(%rcx),%r9
    7e58:	fd                   	std    
    7e59:	49 01 fd             	add    %rdi,%r13
    7e5c:	85 de                	test   %ebx,%esi
    7e5e:	ff                   	(bad)  
    7e5f:	ff                   	(bad)  
    7e60:	ff 49 ff             	decl   -0x1(%rcx)
    7e63:	c5 53 4d             	(bad)
    7e66:	39 e1                	cmp    %esp,%ecx
    7e68:	98                   	cwtl   
    7e69:	fe                   	(bad)  
    7e6a:	ff                   	(bad)  
    7e6b:	ff                   	(bad)  
    7e6c:	e8 6f c8 ff ff       	call   46e0 <__snprintf_chk@plt>
    7e71:	48                   	rex.W
    7e72:	4d 39 e9             	cmp    %r13,%r9
    7e75:	83 f8 7f             	cmp    $0x7f,%eax
    7e78:	0f 87 ea fe 48 c7    	ja     ffffffffc7497d68 <obstack_alloc_failed_handler@@Base+0xffffffffc7475cc8>
    7e7e:	c6                   	(bad)  
    7e7f:	95                   	xchg   %eax,%ebp
    7e80:	fe                   	(bad)  
    7e81:	ff                   	(bad)  
    7e82:	ff 83 4c 0f af f3    	incl   -0xc50f0b4(%rbx)
    7e88:	d9 74 20 4d          	fnstenv 0x4d(%rax,%riz,1)
    7e8c:	85 ff                	test   %edi,%edi
    7e8e:	75 48                	jne    7ed8 <__sprintf_chk@plt+0x31f8>
    7e90:	85 c3                	test   %eax,%ebx
    7e92:	4c 85 f8             	test   %r15,%rax
    7e95:	15 c9 1b 01 00       	adc    $0x11bc9,%eax
    7e9a:	4c                   	rex.WR
    7e9b:	49 21 f4             	and    %rsi,%r12
    7e9e:	c0 be 80 00 00 49 c1 	sarb   $0xc1,0x49000080(%rsi)
    7ea5:	e6 03                	out    %al,$0x3
    7ea7:	c0 50 4d 01          	rclb   $0x1,0x4d(%rax)
    7eab:	e6 0f                	out    %al,$0xf
    7ead:	8f                   	(bad)  
    7eae:	dd 02                	fldl   (%rdx)
    7eb0:	00 00                	add    %al,(%rax)
    7eb2:	fe                   	(bad)  
    7eb3:	ff                   	(bad)  
    7eb4:	ff 41 bc             	incl   -0x44(%rcx)
    7eb7:	01 00                	add    %eax,(%rax)
    7eb9:	00 00                	add    %al,(%rax)
    7ebb:	49                   	rex.WB
    7ebc:	48 f7 f9             	idiv   %rcx
    7ebf:	ff                   	(bad)  
    7ec0:	b8 7f 00 00 00       	mov    $0x7f,%eax
    7ec5:	e9 8d fc ff ff       	jmp    7b57 <__sprintf_chk@plt+0x2e77>
    7eca:	e8 c1 c9 ff ff       	call   4890 <__stack_chk_fail@plt>
    7ecf:	48 8b 48 49          	mov    0x49(%rax),%rcx
    7ed3:	c1 e9 39             	shr    $0x39,%ecx
    7ed6:	00 64 48 49          	add    %ah,0x49(%rax,%rcx,2)
    7eda:	31 48 01             	xor    %ecx,0x1(%rax)
    7edd:	d8 af f9 75 e8 48    	fsubrs 0x48e875f9(%rdi)
    7ee3:	8b 48 ff             	mov    -0x1(%rax),%ecx
    7ee6:	c0 48 0f 8f          	rorb   $0x8f,0xf(%rax)
    7eea:	17                   	(bad)  
    7eeb:	01 00                	add    %eax,(%rax)
    7eed:	00 5b 5d             	add    %bl,0x5d(%rbx)
    7ef0:	41 5c                	pop    %r12
    7ef2:	41 5d                	pop    %r13
    7ef4:	41 0f 8f 6a ff ff ff 	rex.B jg 7e65 <__sprintf_chk@plt+0x3185>
    7efb:	89 fa                	mov    %edi,%edx
    7efd:	0f 1f 48 f7          	nopl   -0x9(%rax)
    7f01:	fa                   	cli    
    7f02:	b3 02                	mov    $0x2,%bl
    7f04:	00 00                	add    %al,(%rax)
    7f06:	41 e9 a9 fe ff ff    	rex.B jmp 7db5 <__sprintf_chk@plt+0x30d5>
    7f0c:	3b a8 00 0f 4c 39    	cmp    0x394c0f00(%rax),%ebp
    7f12:	fb                   	sti    
    7f13:	01 00                	add    %eax,(%rax)
    7f15:	00 28                	add    %ch,(%rax)
    7f17:	00 00                	add    %al,(%rax)
    7f19:	00 48 89             	add    %cl,-0x77(%rax)
    7f1c:	48 f7 fe             	idiv   %rsi
    7f1f:	00 e9                	add    %ch,%cl
    7f21:	7d fd                	jge    7f20 <__sprintf_chk@plt+0x3240>
    7f23:	ff                   	(bad)  
    7f24:	ff 84 ff 75 77 48 8d 	incl   -0x72b7888b(%rdi,%rdi,8)
    7f2b:	1d b4 19 01 00       	sbb    $0x119b4,%eax
    7f30:	bd 14 00 00 00       	mov    $0x14,%ebp
    7f35:	4c 8d 25 0f 8f 5f 02 	lea    0x25f8f0f(%rip),%r12        # 2600e4b <obstack_alloc_failed_handler@@Base+0x25dedab>
    7f3c:	00 00                	add    %al,(%rax)
    7f3e:	48 0f af c1          	imul   %rcx,%rax
    7f42:	66 0f 1f 44 49 89    	nopw   -0x77(%rcx,%rcx,2)
    7f48:	fc                   	cld    
    7f49:	39 eb                	cmp    %ebp,%ebx
    7f4b:	0f 84 9b 01 00 00    	je     80ec <__sprintf_chk@plt+0x340c>
    7f51:	c3                   	ret    
    7f52:	49 f7 fa             	idiv   %r10
    7f55:	0f 8c 46 fe ff ff    	jl     7da1 <__sprintf_chk@plt+0x30c1>
    7f5b:	ff                   	(bad)  
    7f5c:	ff 49 0f             	decl   0xf(%rcx)
    7f5f:	af                   	scas   %es:(%rdi),%eax
    7f60:	da 31                	fidivl (%rcx)
    7f62:	f6 48 85 c7          	testb  $0xc7,-0x7b(%rax)
    7f66:	96                   	xchg   %eax,%esi
    7f67:	ca ff ff             	lret   $0xffff
    7f6a:	4d 39 f0             	cmp    %r14,%r8
    7f6d:	75 de                	jne    7f4d <__sprintf_chk@plt+0x326d>
    7f6f:	48 8b 84 24 98 00 4c 	mov    0x294c0098(%rsp),%rax
    7f76:	29 
    7f77:	ee                   	out    %al,(%dx)
    7f78:	48 2b 04 25 49 c7 c7 	sub    0x51c7c749,%rax
    7f7f:	51 
    7f80:	03 00                	add    (%rax),%eax
    7f82:	00 01                	add    %al,(%rcx)
    7f84:	00 00                	add    %al,(%rax)
    7f86:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    7f8d:	5b                   	pop    %rbx
    7f8e:	5d                   	pop    %rbp
    7f8f:	41 5c                	pop    %r12
    7f91:	41 5d                	pop    %r13
    7f93:	0f 85 ed fd ff ff    	jne    7d86 <__sprintf_chk@plt+0x30a6>
    7f99:	1f                   	(bad)  
    7f9a:	84 00                	test   %al,(%rax)
    7f9c:	00 00                	add    %al,(%rax)
    7f9e:	00 00                	add    %al,(%rax)
    7fa0:	4c 8d 25 d9 a7 01 00 	lea    0x1a7d9(%rip),%r12        # 22780 <obstack_alloc_failed_handler@@Base+0x6e0>
    7fa7:	48                   	rex.W
    7fa8:	49 c1 e8 04          	shr    $0x4,%r8
    7fac:	4d 85 d4             	test   %r10,%r12
    7faf:	bf 14 00 00 00       	mov    $0x14,%edi
    7fb4:	49                   	rex.WB
    7fb5:	48 01 c2             	add    %rax,%rdx
    7fb8:	89 e7                	mov    %esp,%edi
    7fba:	4c 8d 6b 2c          	lea    0x2c(%rbx),%r13
    7fbe:	48 89 dd             	mov    %rbx,%rbp
    7fc1:	e8 7a ca ff ff       	call   4a40 <sigemptyset@plt>
    7fc6:	eb 10                	jmp    7fd8 <__sprintf_chk@plt+0x32f8>
    7fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7fcf:	00 
    7fd0:	44 8b 7d 00          	mov    0x0(%rbp),%r15d
    7fd4:	48 83 c5 04          	add    $0x4,%rbp
    7fd8:	31 0f                	xor    %ecx,(%rdi)
    7fda:	8f c0                	pop    %rax
    7fdc:	03 00                	add    (%rax),%eax
    7fde:	00 ff                	add    %bh,%bh
    7fe0:	e8 ab c7 ff ff       	call   4790 <sigaction@plt>
    7fe5:	0f 8f 05 03 00 00    	jg     82f0 <__sprintf_chk@plt+0x3610>
    7feb:	0b 44 89 fe          	or     -0x2(%rcx,%rcx,4),%eax
    7fef:	4c                   	rex.WR
    7ff0:	49                   	rex.WB
    7ff1:	4d 89 d8             	mov    %r11,%r8
    7ff4:	cc                   	int3   
    7ff5:	ff                   	(bad)  
    7ff6:	ff 4c 39 ed          	decl   -0x13(%rcx,%rdi,1)
    7ffa:	75 d4                	jne    7fd0 <__sprintf_chk@plt+0x32f0>
    7ffc:	66 0f 6f 05 7c a7 01 	movdqa 0x1a77c(%rip),%xmm0        # 22780 <obstack_alloc_failed_handler@@Base+0x6e0>
    8003:	00 
    8004:	66 0f 6f 0d 84 a7 01 	movdqa 0x1a784(%rip),%xmm1        # 22790 <obstack_alloc_failed_handler@@Base+0x6f0>
    800b:	00 
    800c:	c7                   	(bad)  
    800d:	4c 0f af 0f          	imul   (%rdi),%r9
    8011:	85 51 ff             	test   %edx,-0x1(%rcx)
    8014:	ff                   	(bad)  
    8015:	ff 10                	call   *(%rax)
    8017:	bd 0f 84 a9 02       	mov    $0x2a9840f,%ebp
    801c:	00 00                	add    %al,(%rax)
    801e:	6f                   	outsl  %ds:(%rsi),(%dx)
    801f:	15 7c a7 01 00       	adc    $0x1a77c,%eax
    8024:	66 0f 6f 1d 84 a7 01 	movdqa 0x1a784(%rip),%xmm3        # 227b0 <obstack_alloc_failed_handler@@Base+0x710>
    802b:	00 
    802c:	4c 8d 3d 0d ec ff ff 	lea    -0x13f3(%rip),%r15        # 6c40 <__sprintf_chk@plt+0x1f60>
    8033:	66 0f 6f 25 85 a7 49 	movdqa -0x8b6587b(%rip),%xmm4        # fffffffff74a27c0 <obstack_alloc_failed_handler@@Base+0xfffffffff7480720>
    803a:	f7 
    803b:	4c 89 ea             	mov    %r13,%rdx
    803e:	2d 8d 4d 31 cd       	sub    $0xcd314d8d,%eax
    8043:	0f 48 f7             	cmovs  %edi,%esi
    8046:	f9                   	stc    
    8047:	08 66 0f             	or     %ah,0xf(%rsi)
    804a:	6f                   	outsl  %ds:(%rsi),(%dx)
    804b:	35 90 48 c7 c3       	xor    $0xc3c74890,%eax
    8050:	0c 03                	or     $0x3,%al
    8052:	00 00                	add    %al,(%rax)
    8054:	98                   	cwtl   
    8055:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    8056:	48                   	rex.W
    8057:	48 31 f6             	xor    %rsi,%rsi
    805a:	4c 24 0f             	rex.WR and $0xf,%al
    805d:	85 40 fc             	test   %eax,-0x4(%rax)
    8060:	ff                   	(bad)  
    8061:	ff 0f                	decl   (%rdi)
    8063:	11 5c 0f 84          	adc    %ebx,-0x7c(%rdi,%rcx,1)
    8067:	73 4c                	jae    80b5 <__sprintf_chk@plt+0x33d5>
    8069:	89 e2                	mov    %esp,%edx
    806b:	48 0f 11 6c 24 58    	rex.W movups %xmm5,0x58(%rsp)
    8071:	0f 48 89 c2 49 f7 ff 	cmovs  -0x8b63e(%rcx),%ecx
    8078:	7c 49                	jl     80c3 <__sprintf_chk@plt+0x33e3>
    807a:	49 f7 fd             	idiv   %r13
    807d:	0f 1f 00             	nopl   (%rax)
    8080:	8b 2b                	mov    (%rbx),%ebp
    8082:	74 7b                	je     80ff <__sprintf_chk@plt+0x341f>
    8084:	c3                   	ret    
    8085:	04 89                	add    $0x89,%al
    8087:	4d 09 0f             	or     %r9,(%r15)
    808a:	8c c8                	mov    %cs,%eax
    808c:	fe                   	(bad)  
    808d:	ff                   	(bad)  
    808e:	ff 48 c7             	decl   -0x39(%rax)
    8091:	c0 cc fc             	ror    $0xfc,%ah
    8094:	ff                   	(bad)  
    8095:	ff 49 fc             	decl   -0x4(%rcx)
    8098:	ff                   	(bad)  
    8099:	ff 00                	incl   (%rax)
    809b:	00 c1                	add    %al,%cl
    809d:	e8 28 89 f6 89       	call   ffffffff89f709ca <obstack_alloc_failed_handler@@Base+0xffffffff89f4e92a>
    80a2:	ef                   	out    %eax,(%dx)
    80a3:	49 0f 44 c7          	cmove  %r15,%rax
    80a7:	31 d2                	xor    %edx,%edx
    80a9:	48 89 04 49          	mov    %rax,(%rcx,%rcx,2)
    80ad:	09 c1                	or     %eax,%ecx
    80af:	c6                   	(bad)  
    80b0:	ff                   	(bad)  
    80b1:	ff 4c 39 eb          	decl   -0x15(%rcx,%rdi,1)
    80b5:	4c 89 c9             	mov    %r9,%rcx
    80b8:	b3 0f                	mov    $0xf,%bl
    80ba:	8f 84 00 00 00 ff ff 	pop    -0x10000(%rax,%rax,1)
    80c1:	66 66 2e 0f 1f 84 00 	data16 cs nopw -0x38b70000(%rax,%rax,1)
    80c8:	00 00 49 c7 
    80cc:	c6                   	(bad)  
    80cd:	e6 03                	out    %al,$0x3
    80cf:	00 00                	add    %al,(%rax)
    80d1:	0f 1e fa             	nop    %edx
    80d4:	8b 0f                	mov    (%rdi),%ecx
    80d6:	8f                   	(bad)  
    80d7:	70 fc                	jo     80d5 <__sprintf_chk@plt+0x33f5>
    80d9:	ff                   	(bad)  
    80da:	ff c5                	inc    %ebp
    80dc:	48 c1 e3 1c          	shl    $0x1c,%rbx
    80e0:	83 fa 03             	cmp    $0x3,%edx
    80e3:	0f 94 c0             	sete   %al
    80e6:	83 fa 09             	cmp    $0x9,%edx
    80e9:	0f 48 c1             	cmovs  %ecx,%eax
    80ec:	ea                   	(bad)  
    80ed:	02 83 4c 85 49 c1    	add    -0x3eb67ab4(%rbx),%al
    80f3:	ea                   	(bad)  
    80f4:	39 23                	cmp    %esp,(%rbx)
    80f6:	01 00                	add    %eax,(%rax)
    80f8:	00 97 ac 00 00 00    	add    %dl,0xac(%rdi)
    80fe:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    8104:	84 c0                	test   %al,%al
    8106:	74 38                	je     8140 <__sprintf_chk@plt+0x3460>
    8108:	48 f7 fa             	idiv   %rdx
    810b:	09 4c 0f af          	or     %ecx,-0x51(%rdi,%rcx,1)
    810f:	f3 b8 01 00 4d e9    	repz mov $0xe94d0001,%eax
    8115:	d6                   	(bad)  
    8116:	01 00                	add    %eax,(%rax)
    8118:	00 1f                	add    %bl,(%rdi)
    811a:	84 00                	test   %al,(%rax)
    811c:	00 00                	add    %al,(%rax)
    811e:	4d 09 fa             	or     %r15,%r10
    8121:	c0 75 36 8b          	shlb   $0x8b,0x36(%rbp)
    8125:	86 ac 00 00 00 25 00 	xchg   %ch,0x250000(%rax,%rax,1)
    812c:	f0 00 00             	lock add %al,(%rax)
    812f:	3d 00 49 f7 ff       	cmp    $0xfff74900,%eax
    8134:	e9 8c 01 00 00       	jmp    82c5 <__sprintf_chk@plt+0x35e5>
    8139:	ff                   	(bad)  
    813a:	ff c3                	inc    %ebx
    813c:	0f 1f 40 00          	nopl   0x0(%rax)
    8140:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    8146:	48 85 c2             	test   %rax,%rdx
    8149:	00 00                	add    %al,(%rax)
    814b:	3d 00 48 29 d6       	cmp    $0xd6294800,%eax
    8150:	74 90                	je     80e2 <__sprintf_chk@plt+0x3402>
    8152:	81 49 0f 8f 19 03 00 	orl    $0x3198f,0xf(%rcx)
    8159:	00 48 8b             	add    %cl,-0x75(%rax)
    815c:	e9 de 0f 8f 3b       	jmp    3b8f913f <obstack_alloc_failed_handler@@Base+0x3b8d709f>
    8161:	01 00                	add    %eax,(%rax)
    8163:	00 75 aa             	add    %dh,-0x56(%rbp)
    8166:	48 8b 36             	mov    (%rsi),%rsi
    8169:	4c 0f af e1          	imul   %rcx,%r12
    816d:	7f 0f                	jg     817e <__sprintf_chk@plt+0x349e>
    816f:	85 b0 fe ff ff 0f    	test   %esi,0xffffffe(%rax)
    8175:	1f                   	(bad)  
    8176:	84 48 c7             	test   %cl,-0x39(%rax)
    8179:	c3                   	ret    
    817a:	5b                   	pop    %rbx
    817b:	fc                   	cld    
    817c:	ff                   	(bad)  
    817d:	ff 40 00             	incl   0x0(%rax)
    8180:	f3 0f 48 89 ff 8b 47 	repz cmovs 0x48478bff(%rcx),%ecx
    8187:	48 
    8188:	48 39 46 48          	cmp    %rax,0x48(%rsi)
    818c:	7c 22                	jl     81b0 <__sprintf_chk@plt+0x34d0>
    818e:	75 48                	jne    81d8 <__sprintf_chk@plt+0x34f8>
    8190:	39 f8                	cmp    %edi,%eax
    8192:	36 48 8b eb          	ss mov %rbx,%rbp
    8196:	e5 55                	in     $0x55,%eax
    8198:	c8 ff ff 0f          	enter  $0xffff,$0xf
    819c:	1f                   	(bad)  
    819d:	44                   	rex.R
    819e:	49 c1 e2 0a          	shl    $0xa,%r10
    81a2:	00 00                	add    %al,(%rax)
    81a4:	00 c3                	add    %al,%bl
    81a6:	66 2e 0f 4c 85 ee 0f 	cs cmovl -0x4e7af012(%rbp),%ax
    81ad:	85 b1 
    81af:	fc                   	cld    
    81b0:	ff                   	(bad)  
    81b1:	ff                   	(bad)  
    81b2:	ff 48 4d             	decl   0x4d(%rax)
    81b5:	89 e9                	mov    %ebp,%ecx
    81b7:	d5                   	(bad)  
    81b8:	fd                   	std    
    81b9:	ff                   	(bad)  
    81ba:	ff 09                	decl   (%rcx)
    81bc:	db 00                	fildl  (%rax)
    81be:	0f 8c 0f 02 00 00    	jl     83d3 <__sprintf_chk@plt+0x36f3>
    81c4:	48                   	rex.W
    81c5:	4d 39 d4             	cmp    %r10,%r12
    81c8:	08 fd                	or     %bh,%ch
    81ca:	ff                   	(bad)  
    81cb:	ff                   	(bad)  
    81cc:	ff 57 48             	call   *0x48(%rdi)
    81cf:	7c 1f                	jl     81f0 <__sprintf_chk@plt+0x3510>
    81d1:	75 0d                	jne    81e0 <__sprintf_chk@plt+0x3500>
    81d3:	48 8b 4d 0f          	mov    0xf(%rbp),%rcx
    81d7:	af                   	scas   %es:(%rdi),%eax
    81d8:	cc                   	int3   
    81d9:	e9 12 4c 01 cf       	jmp    ffffffffcf01cdf0 <obstack_alloc_failed_handler@@Base+0xffffffffceffad50>
    81de:	66 90                	xchg   %ax,%ax
    81e0:	b8 01 00 00 00       	mov    $0x1,%eax
    81e5:	c3                   	ret    
    81e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    81ed:	00 00 00 
    81f0:	b8 ff 48 09 f7       	mov    $0xf70948ff,%eax
    81f5:	c3                   	ret    
    81f6:	66 2e 0f 1f 48 f7    	cs nopw -0x9(%rax)
    81fc:	fb                   	sti    
    81fd:	00 00                	add    %al,(%rax)
    81ff:	00 f3                	add    %dh,%bl
    8201:	0f 48 c1             	cmovs  %ecx,%eax
    8204:	e8 e9 cb 02 00       	call   34df2 <obstack_alloc_failed_handler@@Base+0x12d52>
    8209:	00 49 21             	add    %cl,0x21(%rcx)
    820c:	f9                   	stc    
    820d:	0f 85 ae fc ff ff    	jne    7ec1 <__sprintf_chk@plt+0x31e1>
    8213:	83 f9 03             	cmp    $0x3,%ecx
    8216:	0f 94 c2             	sete   %dl
    8219:	83 f9 09             	cmp    $0x9,%ecx
    821c:	0f 48 c7             	cmovs  %edi,%eax
    821f:	c7                   	(bad)  
    8220:	6b 03 00             	imul   $0x0,(%rbx),%eax
    8223:	00 0f                	add    %cl,(%rdi)
    8225:	84 60 01             	test   %ah,0x1(%rax)
    8228:	00 00                	add    %al,(%rax)
    822a:	25 8b 8f ac 00       	and    $0xac8f8b,%eax
    822f:	00 00                	add    %al,(%rax)
    8231:	81 49 c1 eb 12 00 84 	orl    $0x840012eb,-0x3f(%rcx)
    8238:	d2 74 35 81          	shlb   %cl,-0x7f(%rbp,%rsi,1)
    823c:	f9                   	stc    
    823d:	00 40 48             	add    %al,0x48(%rax)
    8240:	09 c6                	or     %eax,%esi
    8242:	49 b8 01 4c 29 d6 c3 	movabs $0x801f0fc3d6294c01,%r8
    8249:	0f 1f 80 
    824c:	00 00                	add    %al,(%rax)
    824e:	00 00                	add    %al,(%rax)
    8250:	84 d2                	test   %dl,%dl
    8252:	75 38                	jne    828c <__sprintf_chk@plt+0x35ac>
    8254:	8b 90 ac 48 f7 fe    	mov    -0x108b754(%rax),%edx
    825a:	81 e2 49 c7 c7 a1    	and    $0xa1c7c749,%edx
    8260:	03 00                	add    (%rax),%eax
    8262:	00 40 00             	add    %al,0x0(%rax)
    8265:	00 74 24 b8          	add    %dh,-0x48(%rsp)
    8269:	ff 4d 21             	decl   0x21(%rbp)
    826c:	f8                   	clc    
    826d:	0f 8c 24 02 00 00    	jl     8497 <__sprintf_chk@plt+0x37b7>
    8273:	00 48 0f             	add    %cl,0xf(%rax)
    8276:	af                   	scas   %es:(%rdi),%eax
    8277:	0f 8f f1 02 00 00    	jg     856e <__sprintf_chk@plt+0x388e>
    827d:	fa                   	cli    
    827e:	00 40 00             	add    %al,0x0(%rax)
    8281:	00 74 b7 81          	add    %dh,-0x7f(%rdi,%rsi,4)
    8285:	f9                   	stc    
    8286:	00 40 00             	add    %al,0x0(%rax)
    8289:	00 74 dc 48          	add    %dh,0x48(%rsp,%rbx,8)
    828d:	8b 70 48             	mov    0x48(%rax),%esi
    8290:	48 39 77 48          	cmp    %rsi,0x48(%rdi)
    8294:	49 01 c6             	add    %rax,%r14
    8297:	d4                   	(bad)  
    8298:	48 0f 8c e1 fe ff ff 	rex.W jl 8180 <__sprintf_chk@plt+0x34a0>
    829f:	4d c7                	rex.WRB (bad) 
    82a1:	e9 0b ff ff ff       	jmp    81b1 <__sprintf_chk@plt+0x34d1>
    82a6:	c9                   	leave  
    82a7:	49 21 dd             	and    %rbx,%r13
    82aa:	00 00                	add    %al,(%rax)
    82ac:	00 00                	add    %al,(%rax)
    82ae:	66 48 c7 c7 fa 00 00 	data16 mov $0xfa,%rdi
    82b5:	00 
    82b6:	36 48 8b 3f          	ss mov (%rdi),%rdi
    82ba:	e9 31 49 0f af       	jmp    ffffffffaf0fcbf0 <obstack_alloc_failed_handler@@Base+0xffffffffaf0dab50>
    82bf:	cb                   	lret   
    82c0:	fd                   	std    
    82c1:	0f 84 5d 03 00 00    	je     8624 <__sprintf_chk@plt+0x3944>
    82c7:	48 75 49             	rex.W jne 8313 <__sprintf_chk@plt+0x3633>
    82ca:	c1 e3 2a             	shl    $0x2a,%ebx
    82cd:	e9 1e c7 ff ff       	jmp    49f0 <strcmp@plt>
    82d2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    82d9:	00 00 00 00 
    82dd:	0f 48 f7             	cmovs  %edi,%esi
    82e0:	fa                   	cli    
    82e1:	0f 1e 0f             	nopl   (%rdi)
    82e4:	84 ae fe ff ff 00    	test   %ch,0xfffffe(%rsi)
    82ea:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    82f0:	83 fa 0f             	cmp    $0xf,%edx
    82f3:	85 ae fe ff ff 09    	test   %ebp,0x9fffffe(%rsi)
    82f9:	0f 94 49 21          	sete   0x21(%rcx)
    82fd:	f0 83 f9 03          	lock cmp $0x3,%ecx
    8301:	74 2d                	je     8330 <__sprintf_chk@plt+0x3650>
    8303:	83 f9 09             	cmp    $0x9,%ecx
    8306:	74 0f                	je     8317 <__sprintf_chk@plt+0x3637>
    8308:	8f                   	(bad)  
    8309:	df 01                	filds  (%rcx)
    830b:	00 00                	add    %al,(%rax)
    830d:	00 81 e2 00 49 29    	add    %al,0x294900e2(%rcx)
    8313:	c4                   	(bad)  
    8314:	84 48 85             	test   %cl,-0x7b(%rax)
    8317:	ca 81 fa             	lret   $0xfa81
    831a:	00 40 00             	add    %al,0x0(%rax)
    831d:	00 74 14 b8          	add    %dh,-0x48(%rsp,%rdx,1)
    8321:	01 00                	add    %eax,(%rax)
    8323:	00 00                	add    %al,(%rax)
    8325:	48 c7 c3 fa fc ff ff 	mov    $0xfffffffffffffcfa,%rbx
    832c:	00 00                	add    %al,(%rax)
    832e:	00 e9                	add    %ch,%cl
    8330:	05 fe ff ff 01       	add    $0x1fffffe,%eax
    8335:	49 c7 c5 ff fc ff ff 	mov    $0xfffffffffffffcff,%r13
    833c:	c6                   	(bad)  
    833d:	ff                   	(bad)  
    833e:	ff 90 8b 86 ac 0f    	call   *0xfac868b(%rax)
    8344:	8c 9b fc ff ff 00    	mov    %ds,0xfffffc(%rbx)
    834a:	00 3d 00 40 4c 09    	add    %bh,0x94c4000(%rip)        # 94cc350 <obstack_alloc_failed_handler@@Base+0x94aa2b0>
    8350:	c6                   	(bad)  
    8351:	0f 85 6a 01 00 00    	jne    84c1 <__sprintf_chk@plt+0x37e1>
    8357:	c3                   	ret    
    8358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    835f:	00 
    8360:	8b 86 ac 4d 85 7f    	mov    0x7f854dac(%rsi),%eax
    8366:	20 00                	and    %al,(%rax)
    8368:	f0 00 00             	lock add %al,(%rax)
    836b:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8370:	74 a6                	je     8318 <__sprintf_chk@plt+0x3638>
    8372:	0f 8c db 02 00 00    	jl     8653 <__sprintf_chk@plt+0x3973>
    8378:	74 d8                	je     8352 <__sprintf_chk@plt+0x3672>
    837a:	48 8b 36             	mov    (%rsi),%rsi
    837d:	48 8b 3f             	mov    (%rdi),%rdi
    8380:	e9 6b c6 49 ff       	jmp    ffffffffff4a49f0 <obstack_alloc_failed_handler@@Base+0xffffffffff482950>
    8385:	c5 66 2e             	(bad)
    8388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    838f:	00 
    8390:	f3 0f 1e fa          	endbr64 
    8394:	48 89 49 89          	mov    %rcx,-0x77(%rcx)
    8398:	d8 fe                	fdivr  %st(6),%st
    839a:	4d 31 df             	xor    %r11,%r15
    839d:	8b 88 a8 00 00 48    	mov    0x480000a8(%rax),%ecx
    83a3:	0f af c3             	imul   %ebx,%eax
    83a6:	4d 89 da             	mov    %r11,%r10
    83a9:	48 f7 f8             	idiv   %rax
    83ac:	0f 94 c1             	sete   %cl
    83af:	0f 8f 54 fd ff ff    	jg     8109 <__sprintf_chk@plt+0x3429>
    83b5:	2a 83 fe 09 74 0f    	sub    0xf7409fe(%rbx),%al
    83bb:	84 f4                	test   %dh,%ah
    83bd:	0f                   	(bad)  
    83be:	0f 48 0f             	cmovs  (%rdi),%ecx
    83c1:	af                   	scas   %es:(%rdi),%eax
    83c2:	ff                   	(bad)  
    83c3:	ff 8c 9b fe ff ff 74 	decl   0x74fffffe(%rbx,%rbx,4)
    83ca:	45 81 f9 00 40 00 00 	rex.RB cmp $0x4000,%r9d
    83d1:	74 11                	je     83e4 <__sprintf_chk@plt+0x3704>
    83d3:	b8 01 00 00 00       	mov    $0x1,%eax
    83d8:	48 c7 c3 77 fd ff ff 	mov    $0xfffffffffffffd77,%rbx
    83df:	00 84 d2 74 0c 48 8b 	add    %al,-0x74b7f38c(%rdx,%rdx,8)
    83e6:	37                   	(bad)  
    83e7:	49 21 f3             	and    %rsi,%r11
    83ea:	48 09 f8             	or     %rdi,%rax
    83ed:	49 c1 4c 31 ff ac    	rorq   $0xac,-0x1(%r9,%rsi,1)
    83f3:	00 00                	add    %al,(%rax)
    83f5:	00 81 e2 00 f0 00    	add    %al,0xf000e2(%rcx)
    83fb:	00 81 0f 85 7d 00    	add    %al,0x7d850f(%rcx)
    8401:	00 00                	add    %al,(%rax)
    8403:	03 00                	add    (%rax),%eax
    8405:	00 15 ff ff 0f 8f    	add    %dl,-0x70f00001(%rip)        # ffffffff8f10840a <obstack_alloc_failed_handler@@Base+0xffffffff8f0e636a>
    840b:	33 03                	xor    (%rbx),%eax
    840d:	00 00                	add    %al,(%rax)
    840f:	00 8b 90 ac 00 00    	add    %cl,0xac90(%rbx)
    8415:	00 49 c1             	add    %cl,-0x3f(%rcx)
    8418:	e1 31                	loope  844b <__sprintf_chk@plt+0x376b>
    841a:	00 00                	add    %al,(%rax)
    841c:	81 fa 00 0f 8f 15    	cmp    $0x158f0f00,%edx
    8422:	02 00                	add    (%rax),%al
    8424:	00 f9                	add    %bh,%cl
    8426:	00 40 00             	add    %al,0x0(%rax)
    8429:	00 74 d8 48          	add    %dh,0x48(%rax,%rbx,8)
    842d:	8b 37                	mov    (%rdi),%esi
    842f:	48 8b 38             	mov    (%rax),%rdi
    8432:	e9 b9 c5 ff 0f       	jmp    100049f0 <obstack_alloc_failed_handler@@Base+0xffe2950>
    8437:	85 d5                	test   %edx,%ebp
    8439:	03 00                	add    (%rax),%eax
    843b:	00 f2                	add    %dh,%dl
    843d:	00 00                	add    %al,(%rax)
    843f:	00 41 56             	add    %al,0x56(%rcx)
    8442:	41 55                	push   %r13
    8444:	41 54                	push   %r12
    8446:	55                   	push   %rbp
    8447:	48 89 f5             	mov    %rsi,%rbp
    844a:	53                   	push   %rbx
    844b:	48 89 fb             	mov    %rdi,%rbx
    844e:	48 83 ec 20          	sub    $0x20,%rsp
    8452:	64 48 8b 49 01       	mov    %fs:0x1(%rcx),%rcx
    8457:	f4                   	hlt    
    8458:	00 00                	add    %al,(%rax)
    845a:	00 48 89             	add    %cl,-0x77(%rax)
    845d:	44 24 18             	rex.R and $0x18,%al
    8460:	0f 85 86 02 00 00    	jne    86ec <__sprintf_chk@plt+0x3a0c>
    8466:	48 21 ce             	and    %rcx,%rsi
    8469:	c4                   	(bad)  
    846a:	48 01 fa             	add    %rdi,%rdx
    846d:	34 0f                	xor    $0xf,%al
    846f:	b6 03                	mov    $0x3,%dh
    8471:	48 09 d9             	or     %rbx,%rcx
    8474:	84 23                	test   %ah,(%rbx)
    8476:	02 00                	add    (%rax),%al
    8478:	00 0f                	add    %cl,(%rdi)
    847a:	7f aa                	jg     8426 <__sprintf_chk@plt+0x3746>
    847c:	00 84 d2 74 1b 80 3b 	add    %al,0x3b801b74(%rdx,%rdx,8)
    8483:	2e 75 0a             	jne,pn 8490 <__sprintf_chk@plt+0x37b0>
    8486:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
    848a:	0f 84 0c 02 0f 85    	je     ffffffff850f869c <obstack_alloc_failed_handler@@Base+0xffffffff850d65fc>
    8490:	2c fd                	sub    $0xfd,%al
    8492:	ff                   	(bad)  
    8493:	ff 75 3a             	push   0x3a(%rbp)
    8496:	80 7d 01 48          	cmpb   $0x48,0x1(%rbp)
    849a:	c7                   	(bad)  
    849b:	49 85 4c 31 f6       	test   %rcx,-0xa(%r9,%rsi,1)
    84a0:	00 00                	add    %al,(%rax)
    84a2:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    84a7:	ff c0                	inc    %eax
    84a9:	2b 04 25 28 49 49 c1 	sub    0xffffffffc1494928,%eax
    84b0:	e7 25                	out    %eax,$0x25
    84b2:	4a 03 48 c7          	rex.WX add -0x39(%rax),%rcx
    84b6:	c7                   	(bad)  
    84b7:	19 ff                	sbb    %edi,%edi
    84b9:	ff 74 de e0          	push   -0x20(%rsi,%rbx,8)
    84bd:	5b                   	pop    %rbx
    84be:	48 39 c9             	cmp    %rcx,%rcx
    84c1:	41 5d                	pop    %r13
    84c3:	41                   	rex.B
    84c4:	48 89 c8             	mov    %rcx,%rax
    84c7:	2e 0f 1f 84 00 00 00 	cs nopl -0x2e170000(%rax,%rax,1)
    84ce:	e9 d1 
    84d0:	01 48 c1             	add    %ecx,-0x3f(%rax)
    84d3:	ef                   	out    %eax,(%dx)
    84d4:	07                   	(bad)  
    84d5:	22 b6 4b 01 be 2e    	and    0x2ebe014b(%rsi),%dh
    84db:	00 00                	add    %al,(%rax)
    84dd:	00 39                	add    %bh,(%rcx)
    84df:	49 39 cc             	cmp    %rcx,%r12
    84e2:	80 7b 02 00          	cmpb   $0x0,0x2(%rbx)
    84e6:	0f 84 48 c1 ef 20    	je     20f04634 <obstack_alloc_failed_handler@@Base+0x20ee2594>
    84ec:	80 7d 00 2e          	cmpb   $0x2e,0x0(%rbp)
    84f0:	0f 84 7a 49 f7 fe    	je     fffffffffef7ce70 <obstack_alloc_failed_handler@@Base+0xfffffffffef5add0>
    84f6:	24 2e                	and    $0x2e,%al
    84f8:	0f 94 c1             	sete   %cl
    84fb:	80 fa 2e             	cmp    $0x2e,%dl
    84fe:	74 08                	je     8508 <__sprintf_chk@plt+0x3828>
    8500:	84 c9                	test   %cl,%cl
    8502:	0f 85 94 01 00 00    	jne    869c <__sprintf_chk@plt+0x39bc>
    8508:	80 e9 a1             	sub    $0xa1,%cl
    850b:	fe                   	(bad)  
    850c:	ff                   	(bad)  
    850d:	ff 49 39             	decl   0x39(%rcx)
    8510:	d9 84 48 01 c7 00 e9 	flds   -0x16ff38ff(%rax,%rcx,2)
    8517:	b8 00 00 00 8d       	mov    $0x8d000000,%eax
    851c:	7c 24                	jl     8542 <__sprintf_chk@plt+0x3862>
    851e:	10 48 48             	adc    %cl,0x48(%rax)
    8521:	85 f2                	test   %esi,%edx
    8523:	10 48 89             	adc    %cl,-0x77(%rax)
    8526:	6c                   	insb   (%dx),%es:(%rdi)
    8527:	24 08                	and    $0x8,%al
    8529:	e8 b2 e9 ff ff       	call   6ee0 <__sprintf_chk@plt+0x2200>
    852e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    8533:	49 89 c6             	mov    %rax,%r14
    8536:	e8 a5 e9 ff ff       	call   6ee0 <__sprintf_chk@plt+0x2200>
    853b:	49 89 c5             	mov    %rax,%r13
    853e:	eb 8a                	jmp    84ca <__sprintf_chk@plt+0x37ea>
    8540:	c3                   	ret    
    8541:	0f 8f a2 fc ff ff    	jg     81e9 <__sprintf_chk@plt+0x3509>
    8547:	03 00                	add    (%rax),%eax
    8549:	00 48 85             	add    %cl,-0x7b(%rax)
    854c:	c0 0f 84             	rorb   $0x84,(%rdi)
    854f:	0f 8f b4 fd ff ff    	jg     8309 <__sprintf_chk@plt+0x3629>
    8555:	ed                   	in     (%dx),%eax
    8556:	4d 39 ee             	cmp    %r13,%r14
    8559:	0f 48 ff             	cmovs  %edi,%edi
    855c:	c7 00 49 c1 ec 1e    	movl   $0x1eecc149,(%rax)
    8562:	d2 49 39             	rorb   %cl,0x39(%rcx)
    8565:	d6                   	(bad)  
    8566:	77 18                	ja     8580 <__sprintf_chk@plt+0x38a0>
    8568:	49 39 cd             	cmp    %rcx,%r13
    856b:	0f 49 f7             	cmovns %edi,%esi
    856e:	fa                   	cli    
    856f:	ff                   	(bad)  
    8570:	ff 49 49             	decl   0x49(%rcx)
    8573:	ff c1                	inc    %ecx
    8575:	21 d1                	and    %edx,%ecx
    8577:	2e 0f 48 29          	cs cmovs (%rcx),%ebp
    857b:	c6 00 00             	movb   $0x0,(%rax)
    857e:	00 0f                	add    %cl,(%rdi)
    8580:	8c 04 02             	mov    %es,(%rdx,%rax,1)
    8583:	00 00                	add    %al,(%rax)
    8585:	dd f0                	(bad)  
    8587:	83 4d 89 c4          	orl    $0xffffffc4,-0x77(%rbp)
    858b:	fe 09                	decb   (%rcx)
    858d:	e9 9d fd ff ff       	jmp    832f <__sprintf_chk@plt+0x364f>
    8592:	8d 7e e9             	lea    -0x17(%rsi),%edi
    8595:	49 c7 c1 61 fe ff ff 	mov    $0xfffffffffffffe61,%r9
    859c:	cd 74                	int    $0x74
    859e:	18 44 0f b6          	sbb    %al,-0x4a(%rdi,%rcx,1)
    85a2:	44 0d 00 44 4c 0f    	rex.R or $0xf4c4400,%eax
    85a8:	af                   	scas   %es:(%rdi),%eax
    85a9:	d6                   	(bad)  
    85aa:	b6 c0                	mov    $0xc0,%dh
    85ac:	31 ff                	xor    %edi,%edi
    85ae:	41 8d 40 48          	lea    0x48(%r8),%eax
    85b2:	c1 e3 35             	shl    $0x35,%ebx
    85b5:	74 c5                	je     857c <__sprintf_chk@plt+0x389c>
    85b7:	48 83 c2 01          	add    $0x1,%rdx
    85bb:	48 83 c1 01          	add    $0x1,%rcx
    85bf:	0f 8f 49 fe ff ff    	jg     840e <__sprintf_chk@plt+0x372e>
    85c5:	ff                   	(bad)  
    85c6:	ff c3                	inc    %ebx
    85c8:	0f 8c e0 fd ff ff    	jl     83ae <__sprintf_chk@plt+0x36ce>
    85ce:	49                   	rex.WB
    85cf:	48 ff 0f             	decq   (%rdi)
    85d2:	84 92 fd ff ff fd    	test   %dl,-0x2000003(%rdx)
    85d8:	ff 4c 21 f6          	decl   -0xa(%rcx,%riz,1)
    85dc:	e8 30 83 f8 09       	call   9f90911 <obstack_alloc_failed_handler@@Base+0x9f6e871>
    85e1:	0f 86 cd 00 00 00    	jbe    86b4 <__sprintf_chk@plt+0x39d4>
    85e7:	4c 09 c7             	or     %r8,%rdi
    85ea:	74 bc                	je     85a8 <__sprintf_chk@plt+0x38c8>
    85ec:	0f b6 34 13          	movzbl (%rbx,%rdx,1),%esi
    85f0:	8d 7e d0             	lea    -0x30(%rsi),%edi
    85f3:	89 f0                	mov    %esi,%eax
    85f5:	4d 85 dd             	test   %r11,%r13
    85f8:	76 ab                	jbe    85a5 <__sprintf_chk@plt+0x38c5>
    85fa:	89 f7                	mov    %esi,%edi
    85fc:	3c 5a                	cmp    $0x5a,%al
    85fe:	0f 8f 4c 01 00 00    	jg     8750 <__sprintf_chk@plt+0x3a70>
    8604:	3c 40                	cmp    $0x40,%al
    8606:	0f 8f 49 39 c7 00    	jg     c7bf55 <obstack_alloc_failed_handler@@Base+0xc59eb5>
    860c:	3c 7e                	cmp    $0x7e,%al
    860e:	0f 84 e4 01 00 00    	je     87f8 <__sprintf_chk@plt+0x3b18>
    8614:	8d be 00 01 00 00    	lea    0x100(%rsi),%edi
    861a:	49 39 cd             	cmp    %rcx,%r13
    861d:	74 43                	je     8662 <__sprintf_chk@plt+0x3982>
    861f:	0f b6 74 0d 00       	movzbl 0x0(%rbp,%rcx,1),%esi
    8624:	31 c0                	xor    %eax,%eax
    8626:	44 0f 4d 49 85       	cmovge -0x7b(%rcx),%r9d
    862b:	f1                   	int1   
    862c:	48 d0 4d 39          	rex.W rorb 0x39(%rbp)
    8630:	d0 09                	rorb   (%rcx)
    8632:	76 24                	jbe    8658 <__sprintf_chk@plt+0x3978>
    8634:	44 89 c0             	mov    %r8d,%eax
    8637:	40 80 fe 5a          	cmp    $0x5a,%sil
    863b:	0f 8f 2f 01 00 00    	jg     8770 <__sprintf_chk@plt+0x3a90>
    8641:	40 80 fe 40          	cmp    $0x40,%sil
    8645:	7f 4d                	jg     8694 <__sprintf_chk@plt+0x39b4>
    8647:	09 f4                	or     %esi,%esp
    8649:	fe                   	(bad)  
    864a:	7e 0f                	jle    865b <__sprintf_chk@plt+0x397b>
    864c:	84 9f 49 0f af da    	test   %bl,-0x2550f0b7(%rdi)
    8652:	8d 80 00 4c 0f af    	lea    -0x50f0b400(%rax),%eax
    8658:	c3                   	ret    
    8659:	f8                   	clc    
    865a:	0f 84 57 ff ff ff    	je     85b7 <__sprintf_chk@plt+0x38d7>
    8660:	29 c7                	sub    %eax,%edi
    8662:	85 ff                	test   %edi,%edi
    8664:	44 0f 45 e7          	cmovne %edi,%r12d
    8668:	e9 35 fe ff ff       	jmp    84a2 <__sprintf_chk@plt+0x37c2>
    866d:	0f 1f 00             	nopl   (%rax)
    8670:	0f b6 4d 01          	movzbl 0x1(%rbp),%ecx
    8674:	be 4d 21 eb 00       	mov    $0xeb214d,%esi
    8679:	39 ce                	cmp    %ecx,%esi
    867b:	0f 85 75 fe ff 0f    	jne    100084f6 <obstack_alloc_failed_handler@@Base+0xffe6456>
    8681:	84 49 31             	test   %cl,0x31(%rcx)
    8684:	c4                   	(bad)  
    8685:	00 84 11 fe ff ff 0f 	add    %al,0xffffffe(%rcx,%rdx,1)
    868c:	85 3f                	test   %edi,(%rdi)
    868e:	ff                   	(bad)  
    868f:	ff                   	(bad)  
    8690:	ff                   	(bad)  
    8691:	ee                   	out    %al,(%dx)
    8692:	30 83 fe 09 0f 87    	xor    %al,-0x78f0f602(%rbx)
    8698:	c7                   	(bad)  
    8699:	fe                   	(bad)  
    869a:	ff                   	(bad)  
    869b:	ff 41 bc             	incl   -0x44(%rcx)
    869e:	ff 48 c7             	decl   -0x39(%rax)
    86a1:	c7                   	(bad)  
    86a2:	5d                   	pop    %rbp
    86a3:	00 00                	add    %al,(%rax)
    86a5:	00 ff                	add    %bh,%bh
    86a7:	66 49 c1 e4 05       	data16 shl $0x5,%r12
    86ac:	00 e9                	add    %ch,%cl
    86ae:	be 00 00 00 85       	mov    $0x85000000,%esi
    86b3:	c0 31 e6             	shlb   $0xe6,(%rcx)
    86b6:	3c 13                	cmp    $0x13,%al
    86b8:	49 39 d4             	cmp    %rdx,%r12
    86bb:	30 74 f2 41          	xor    %dh,0x41(%rdx,%rsi,8)
    86bf:	80 f8 30             	cmp    $0x30,%al
    86c2:	75 13                	jne    86d7 <__sprintf_chk@plt+0x39f7>
    86c4:	0f 48 29             	cmovs  (%rcx),%ebp
    86c7:	f3 48                	repz rex.W
    86c9:	49                   	rex.WB
    86ca:	49 f7 0f 8f 4f fd ff 	testq  $0xfffffffffffd4f8f,(%r15)
    86d1:	ff 80 49 31 ca f1    	incl   -0xe35ceb7(%rax)
    86d7:	8d 47 d0             	lea    -0x30(%rdi),%eax
    86da:	83 f8 09             	cmp    $0x9,%eax
    86dd:	77 b1                	ja     8690 <__sprintf_chk@plt+0x39b0>
    86df:	49 89 c8             	mov    %rcx,%r8
    86e2:	48 89 d0             	mov    %rdx,%rax
    86e5:	48 f7 f8             	idiv   %rax
    86e8:	49 29 d0             	sub    %rdx,%r8
    86eb:	4e                   	rex.WRX
    86ec:	49 85 c0             	test   %rax,%r8
    86ef:	00 0f                	add    %cl,(%rdi)
    86f1:	49                   	rex.WB
    86f2:	48 85 c7             	test   %rax,%rdi
    86f5:	ff                   	(bad)  
    86f6:	f8                   	clc    
    86f7:	09 0f                	or     %ecx,(%rdi)
    86f9:	87 9e fd ff ff 29    	xchg   %ebx,0x29fffffd(%rsi)
    86ff:	4d 89 c9             	mov    %r9,%r9
    8702:	49 29 c2             	sub    %rax,%r10
    8705:	44 d7                	rex.R xlat %ds:(%rbx)
    8707:	49 f7 f8             	idiv   %r8
    870a:	01 0f                	add    %ecx,(%rdi)
    870c:	49 f7 f9             	idiv   %r9
    870f:	48 89 c6             	mov    %rax,%rsi
    8712:	48 29 d6             	sub    %rdx,%rsi
    8715:	44 8d 47 d0          	lea    -0x30(%rdi),%r8d
    8719:	4c 8d 1c 0e          	lea    (%rsi,%rcx,1),%r11
    871d:	49 c1 ed 38          	shr    $0x38,%r13
    8721:	01 41 83             	add    %eax,-0x7d(%rcx)
    8724:	48 31 d2             	xor    %rdx,%rdx
    8727:	c8 40 e9 b1          	enter  $0xe940,$0xb1
    872b:	02 4d 31             	add    0x31(%rbp),%cl
    872e:	c6 83 fa 09 0f 86 64 	movb   $0x64,-0x79f0f606(%rbx)
    8735:	ff                   	(bad)  
    8736:	ff                   	(bad)  
    8737:	ff 45 85             	incl   -0x7b(%rbp)
    873a:	d2 0f                	rorb   %cl,(%rdi)
    873c:	85 49 ff             	test   %ecx,-0x1(%rcx)
    873f:	c1 00 00             	roll   $0x0,(%rax)
    8742:	00 c2                	add    %al,%dl
    8744:	4c 89 0f             	mov    %r9,(%rdi)
    8747:	8c 01                	mov    %es,(%rcx)
    8749:	ff 4c 39 f3          	decl   -0xd(%rcx,%rdi,1)
    874d:	1f                   	(bad)  
    874e:	40 00 44 8d 40       	rex add %al,0x40(%rbp,%rcx,4)
    8753:	9f                   	lahf   
    8754:	41 80 0f 84          	orb    $0x84,(%r15)
    8758:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    875d:	ff 31                	push   (%rcx)
    875f:	c0 4d 21 f0          	rorb   $0xf0,0x21(%rbp)
    8763:	8c 18                	mov    %ds,(%rax)
    8765:	ff                   	(bad)  
    8766:	ff 49 c1             	decl   -0x3f(%rcx)
    8769:	ee                   	out    %al,(%dx)
    876a:	3f                   	(bad)  
    876b:	48 c1 ef 06          	shr    $0x6,%rdi
    876f:	39 d1                	cmp    %edx,%ecx
    8771:	8d 4e 9f             	lea    -0x61(%rsi),%ecx
    8774:	41 80 f9 19          	cmp    $0x19,%r9b
    8778:	0f 86 da fe ff ff    	jbe    8658 <__sprintf_chk@plt+0x3978>
    877e:	e9 c4 fe ff ff       	jmp    8647 <__sprintf_chk@plt+0x3967>
    8783:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8788:	84 7f 8a             	test   %bh,-0x76(%rdi)
    878b:	c7                   	(bad)  
    878c:	8a fd                	mov    %ch,%bh
    878e:	ff 48 c1             	decl   -0x3f(%rax)
    8791:	e2 39                	loop   87cc <__sprintf_chk@plt+0x3aec>
    8793:	84 82 fd ff ff 48    	test   %al,0x48fffffd(%rdx)
    8799:	83 c3 01             	add    $0x1,%ebx
    879c:	48 83 c5 01          	add    $0x1,%rbp
    87a0:	e9 75 fd ff ff       	jmp    851a <__sprintf_chk@plt+0x383a>
    87a5:	0f 49 89 df 8b 74 24 	cmovns 0x24748bdf(%rcx),%ecx
    87ac:	10 49 29             	adc    %cl,0x29(%rcx)
    87af:	de 48 85             	fimuls -0x7b(%rax)
    87b2:	49 ff 49 c1          	decq   -0x3f(%r9)
    87b6:	ed                   	in     (%dx),%eax
    87b7:	2c 00                	sub    $0x0,%al
    87b9:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    87be:	49 29 ed             	sub    %rbp,%r13
    87c1:	e9 99 fd ff ff       	jmp    855f <__sprintf_chk@plt+0x387f>
    87c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x49000000(%rax,%rax,1)
    87cd:	00 00 49 
    87d0:	c1 e2 38             	shl    $0x38,%edx
    87d3:	48 89 ee             	mov    %rbp,%rsi
    87d6:	48 89 0f             	mov    %rcx,(%rdi)
    87d9:	84 e5                	test   %ah,%ch
    87db:	02 00                	add    (%rax),%al
    87dd:	00 85 4c 01 e7 79    	add    %al,0x79e7014c(%rbp)
    87e3:	fd                   	std    
    87e4:	ff                   	(bad)  
    87e5:	ff 4c 8b 74          	decl   0x74(%rbx,%rcx,4)
    87e9:	4d 89 ef             	mov    %r13,%r15
    87ec:	29 de                	sub    %ebx,%esi
    87ee:	48 c7 c3 a9 02 00 00 	mov    $0x2a9,%rbx
    87f5:	fe 0f                	decb   (%rdi)
    87f7:	8c 26                	mov    %fs,(%rsi)
    87f9:	02 00                	add    (%rax),%al
    87fb:	0f 85 88 fe ff ff    	jne    8689 <__sprintf_chk@plt+0x39a9>
    8801:	09 de                	or     %ebx,%esi
    8803:	ff                   	(bad)  
    8804:	ff 45 89             	incl   -0x77(%rbp)
    8807:	4d 89 cb             	mov    %r9,%r11
    880a:	fc                   	cld    
    880b:	ff                   	(bad)  
    880c:	ff 4c 8b 6c          	decl   0x6c(%rbx,%rcx,4)
    8810:	24 08                	and    $0x8,%al
    8812:	e9 3c fd ff ff       	jmp    8553 <__sprintf_chk@plt+0x3873>
    8817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    881e:	00 00 
    8820:	f3 48 31 c8          	repz xor %rcx,%rax
    8824:	48 8b 48 c1          	mov    -0x3f(%rax),%rcx
    8828:	ee                   	out    %al,(%dx)
    8829:	2e e9 11 fc ff ff    	cs jmp 8440 <__sprintf_chk@plt+0x3760>
    882f:	49 c1 e1 33          	shl    $0x33,%r9
    8833:	fa                   	cli    
    8834:	49 89 f0             	mov    %rsi,%r8
    8837:	48 8b 37             	mov    (%rdi),%rsi
    883a:	49 09 fd             	or     %rdi,%r13
    883d:	fb                   	sti    
    883e:	fe                   	(bad)  
    883f:	fb                   	sti    
    8840:	ff 48 c1             	decl   -0x3f(%rax)
    8843:	e6 26                	out    %al,$0x26
    8845:	0f 84 7b fc ff ff    	je     84c6 <__sprintf_chk@plt+0x37e6>
    884b:	00 00                	add    %al,(%rax)
    884d:	0f 1f 00             	nopl   (%rax)
    8850:	f3 0f 1e fa          	endbr64 
    8854:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    885a:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    8860:	83 fa 09             	cmp    $0x9,%edx
    8863:	0f 94 49 c7          	sete   -0x39(%rcx)
    8867:	c1 05 4c 01 eb 09 c6 	roll   $0xc6,0x9eb014c(%rip)        # 9eb89ba <obstack_alloc_failed_handler@@Base+0x9e9691a>
    886e:	4d 29 f2             	sub    %r14,%r10
    8871:	74 2d                	je     88a0 <__sprintf_chk@plt+0x3bc0>
    8873:	83 f9 09             	cmp    $0x9,%ecx
    8876:	4c 89 e0             	mov    %r12,%rax
    8879:	4c 21 e7             	and    %r12,%rdi
    887c:	00 00                	add    %al,(%rax)
    887e:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    8884:	84 c0                	test   %al,%al
    8886:	74 48                	je     88d0 <__sprintf_chk@plt+0x3bf0>
    8888:	81 fa 00 40 4d 89    	cmp    $0x894d4000,%edx
    888e:	db 14 b8             	fistl  (%rax,%rdi,4)
    8891:	01 00                	add    %eax,(%rax)
    8893:	00 00                	add    %al,(%rax)
    8895:	c3                   	ret    
    8896:	66 2e 48 c7 c1 8f 02 	data16 cs mov $0x28f,%rcx
    889d:	00 00 
    889f:	00 84 c0 74 0c 48 8b 	add    %al,-0x74b7f38c(%rax,%rax,8)
    88a6:	36 48 8b 3f          	ss mov (%rdi),%rdi
    88aa:	0f 8f b9 03 00 00    	jg     8c69 <__sprintf_chk@plt+0x3f89>
    88b0:	8b 4c 0f af          	mov    -0x51(%rdi,%rcx,1),%ecx
    88b4:	c1 31 de             	shll   $0xde,(%rcx)
    88b7:	00 48 f7             	add    %cl,-0x9(%rax)
    88ba:	fa                   	cli    
    88bb:	48 0f af c8          	imul   %rax,%rcx
    88bf:	00 74 e2 b8          	add    %dh,-0x48(%rdx,%riz,8)
    88c3:	ff                   	(bad)  
    88c4:	ff                   	(bad)  
    88c5:	ff                   	(bad)  
    88c6:	ff 49 0f             	decl   0xf(%rcx)
    88c9:	8c 6f 02             	mov    %gs,0x2(%rdi)
    88cc:	00 00                	add    %al,(%rax)
    88ce:	4d 31 ed             	xor    %r13,%r13
    88d1:	86 4d 29             	xchg   %cl,0x29(%rbp)
    88d4:	cf                   	iret   
    88d5:	00 25 00 f0 00 49    	add    %ah,0x4900f000(%rip)        # 490178db <obstack_alloc_failed_handler@@Base+0x48ff583b>
    88db:	85 ff                	test   %edi,%edi
    88dd:	40 00 00             	rex add %al,(%rax)
    88e0:	74 a6                	je     8888 <__sprintf_chk@plt+0x3ba8>
    88e2:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    88e8:	74 d8                	je     88c2 <__sprintf_chk@plt+0x3be2>
    88ea:	48 0f 8c 13 fc ff ff 	rex.W jl 8504 <__sprintf_chk@plt+0x3824>
    88f1:	4b                   	rex.WXB
    88f2:	48 31 df             	xor    %rbx,%rdi
    88f5:	66 66 2e 0f 1f 84 00 	data16 cs nopw -0x3b00b700(%rax,%rax,1)
    88fc:	00 49 ff c4 
    8900:	f3 0f 1e fa          	endbr64 
    8904:	e9 87 01 00 00       	jmp    8a90 <__sprintf_chk@plt+0x3db0>
    8909:	48 f7 49 39 d3 c9 48 	testq  $0xffffffffff48c9d3,0x39(%rcx)
    8910:	ff 
    8911:	c6 00 83             	movb   $0x83,(%rax)
    8914:	4c 85 cf             	test   %r9,%rdi
    8917:	94                   	xchg   %eax,%esp
    8918:	c2 83 4d             	ret    $0x4d83
    891b:	89 cc                	mov    %ecx,%esp
    891d:	94                   	xchg   %eax,%esp
    891e:	4d 89 c7             	mov    %r8,%r15
    8921:	83 fe 03             	cmp    $0x3,%esi
    8924:	74 2a                	je     8950 <__sprintf_chk@plt+0x3c70>
    8926:	83 fe 09             	cmp    $0x9,%esi
    8929:	74 25                	je     8950 <__sprintf_chk@plt+0x3c70>
    892b:	8b 8f ac 00 00 00    	mov    0xac(%rdi),%ecx
    8931:	81 e1 00 f0 00 00    	and    $0xf000,%ecx
    8937:	84 d2                	test   %dl,%dl
    8939:	74 45                	je     8980 <__sprintf_chk@plt+0x3ca0>
    893b:	74 ec                	je     8929 <__sprintf_chk@plt+0x3c49>
    893d:	00 40 00             	add    %al,0x0(%rax)
    8940:	00 74 11 b8          	add    %dh,-0x48(%rcx,%rdx,1)
    8944:	01 00                	add    %eax,(%rax)
    8946:	00 00                	add    %al,(%rax)
    8948:	c3                   	ret    
    8949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8950:	84 d2                	test   %dl,%dl
    8952:	74 0c                	je     8960 <__sprintf_chk@plt+0x3c80>
    8954:	48 7c 46             	rex.W jl 899d <__sprintf_chk@plt+0x3cbd>
    8957:	48 8b 38             	mov    (%rax),%rdi
    895a:	e9 e1 fa 0f 85       	jmp    ffffffff85108440 <obstack_alloc_failed_handler@@Base+0xffffffff850e63a0>
    895f:	24 fc                	and    $0xfc,%al
    8961:	e9 a1 e9 24 fe       	jmp    fffffffffe257307 <obstack_alloc_failed_handler@@Base+0xfffffffffe235267>
    8966:	ff                   	(bad)  
    8967:	ff 00                	incl   (%rax)
    8969:	f0 00 00             	lock add %al,(%rax)
    896c:	81 fa 00 40 00 49    	cmp    $0x49004000,%edx
    8972:	c1 48 89 c1          	rorl   $0xc1,-0x77(%rax)
    8976:	ff                   	(bad)  
    8977:	ff 4d 89             	decl   -0x77(%rbp)
    897a:	db af ef 44 00 00    	fldt   0x44ef(%rdi)
    8980:	8b 90 ac 00 00 00    	mov    0xac(%rax),%edx
    8986:	81 0f 8f 48 fc 48    	orl    $0x48fc488f,(%rdi)
    898c:	ff c6                	inc    %esi
    898e:	48 e9 89 00 00 00    	rex.W jmp 8a1d <__sprintf_chk@plt+0x3d3d>
    8994:	81 f9 00 49 09 ce    	cmp    $0xce094900,%ecx
    899a:	d6                   	(bad)  
    899b:	d8 48 8b             	fmuls  -0x75(%rax)
    899e:	37                   	(bad)  
    899f:	48                   	rex.W
    89a0:	4d 01 cb             	add    %r9,%r11
    89a3:	99                   	cltd   
    89a4:	fa                   	cli    
    89a5:	49 85 d0             	test   %rdx,%r8
    89a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    89af:	00 
    89b0:	f3 0f 1e fa          	endbr64 
    89b4:	49 c1 ea 49          	shr    $0x49,%r10
    89b8:	01 d6                	add    %edx,%esi
    89ba:	48                   	rex.W
    89bb:	49                   	rex.WB
    89bc:	4d 01 d2             	add    %r10,%r10
    89bf:	4c 85 f1             	test   %r14,%rcx
    89c2:	1f                   	(bad)  
    89c3:	80 00 00             	addb   $0x0,(%rax)
    89c6:	00 00                	add    %al,(%rax)
    89c8:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    89cc:	48 39 48 0f          	cmp    %rcx,0xf(%rax)
    89d0:	af                   	scas   %es:(%rdi),%eax
    89d1:	f2 01 00             	repnz add %eax,(%rax)
    89d4:	00 08                	add    %cl,(%rax)
    89d6:	0f 85 4c 21 db ff    	jne    ffffffffffdbab28 <obstack_alloc_failed_handler@@Base+0xffffffffffd98a88>
    89dc:	e8 0f c0 ff ff       	call   49f0 <strcmp@plt>
    89e1:	85 49 c7             	test   %ecx,-0x39(%rcx)
    89e4:	c2 91 fc             	ret    $0xfc91
    89e7:	ff                   	(bad)  
    89e8:	ff 08                	decl   (%rax)
    89ea:	c3                   	ret    
    89eb:	0f 1f 44 4c 85       	nopl   -0x7b(%rsp,%rcx,2)
    89f0:	ce                   	(bad)  
    89f1:	0f 1e fa             	nop    %edx
    89f4:	8b 96 a8 00 00 4c    	mov    0x4c0000a8(%rsi),%edx
    89fa:	89 fa                	mov    %edi,%edx
    89fc:	a8 00                	test   $0x0,%al
    89fe:	00 00                	add    %al,(%rax)
    8a00:	83 fa 4d             	cmp    $0x4d,%edx
    8a03:	29 fe                	sub    %edi,%esi
    8a05:	c0 83 fa 09 0f 94 c2 	rolb   $0xc2,-0x6bf0f606(%rbx)
    8a0c:	09 d0                	or     %edx,%eax
    8a0e:	83 49 29 d6          	orl    $0xffffffd6,0x29(%rcx)
    8a12:	02 00                	add    (%rax),%al
    8a14:	00 09                	add    %cl,(%rcx)
    8a16:	74 28                	je     8a40 <__sprintf_chk@plt+0x3d60>
    8a18:	e9 49 29 d5 00       	jmp    d5b366 <obstack_alloc_failed_handler@@Base+0xd392c6>
    8a1d:	00 81 e2 00 f0 49    	add    %al,0x49f000e2(%rcx)
    8a23:	01 d5                	add    %edx,%ebp
    8a25:	c0 e9 34             	shr    $0x34,%cl
    8a28:	fe                   	(bad)  
    8a29:	ff                   	(bad)  
    8a2a:	ff 48 c7             	decl   -0x39(%rax)
    8a2d:	c6                   	(bad)  
    8a2e:	11 fe                	adc    %edi,%esi
    8a30:	ff                   	(bad)  
    8a31:	ff                   	(bad)  
    8a32:	ef                   	out    %eax,(%dx)
    8a33:	00 00                	add    %al,(%rax)
    8a35:	c3                   	ret    
    8a36:	66 2e 0f 1f 84 00 00 	cs nopw 0x29480000(%rax,%rax,1)
    8a3d:	00 48 29 
    8a40:	f8                   	clc    
    8a41:	c0 75 36 8b          	shlb   $0x8b,0x36(%rbp)
    8a45:	86 ac 00 00 00 25 00 	xchg   %ch,0x250000(%rax,%rax,1)
    8a4c:	f0 00 00             	lock add %al,(%rax)
    8a4f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8a54:	4d 89 d5             	mov    %r10,%r13
    8a57:	ff                   	(bad)  
    8a58:	ff                   	(bad)  
    8a59:	ff 48 c1             	decl   -0x3f(%rax)
    8a5c:	e1 39                	loope  8a97 <__sprintf_chk@plt+0x3db7>
    8a5e:	40 00 8b 86 ac 00 00 	rex add %cl,0xac86(%rbx)
    8a65:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 17a6b <_obstack_memory_used@@Base+0x72bb>
    8a6b:	3d 00 4c 89 e0       	cmp    $0xe0894c00,%eax
    8a70:	af                   	scas   %es:(%rdi),%eax
    8a71:	cc                   	int3   
    8a72:	81 fa 00 4c 01 f3    	cmp    $0xf3014c00,%edx
    8a78:	01 00                	add    %eax,(%rax)
    8a7a:	49 ff c3             	inc    %r11
    8a7d:	88 4d 0f             	mov    %cl,0xf(%rbp)
    8a80:	af                   	scas   %es:(%rdi),%eax
    8a81:	f6 8b 48 0f af f3 00 	testb  $0x0,-0xc50f0b8(%rbx)
    8a88:	48 8b 8e 80 00 00 00 	mov    0x80(%rsi),%rcx
    8a8f:	48 39 8f 80 00 48 21 	cmp    %rcx,0x21480080(%rdi)
    8a96:	df be 7c 96 29 d0    	fistpll -0x2fd66984(%rsi)
    8a9c:	75 bd                	jne    8a5b <__sprintf_chk@plt+0x3d7b>
    8a9e:	48 8b 36             	mov    (%rsi),%rsi
    8aa1:	48 8b 3f             	mov    (%rdi),%rdi
    8aa4:	e9 47 bf ff 49       	jmp    4a0049f0 <obstack_alloc_failed_handler@@Base+0x49fe2950>
    8aa9:	ff c7                	inc    %edi
    8aab:	c1 e2 14             	shl    $0x14,%edx
    8aae:	00 74 84 da          	add    %dh,-0x26(%rsp,%rax,4)
    8ab2:	1e                   	(bad)  
    8ab3:	fa                   	cli    
    8ab4:	48 0f 84 2f 01 00 00 	rex.W je 8bea <__sprintf_chk@plt+0x3f0a>
    8abb:	48 8b 86 88 00 00 49 	mov    0x49000088(%rsi),%rax
    8ac2:	09 eb                	or     %ebp,%ebx
    8ac4:	5c                   	pop    %rsp
    8ac5:	49 c1 ee 38          	shr    $0x38,%r14
    8ac9:	48                   	rex.W
    8aca:	4d 29 f7             	sub    %r14,%r15
    8acd:	4d 31 ff             	xor    %r15,%r15
    8ad0:	7f 2e                	jg     8b00 <__sprintf_chk@plt+0x3e20>
    8ad2:	7c 49                	jl     8b1d <__sprintf_chk@plt+0x3e3d>
    8ad4:	49 39 cb             	cmp    %rcx,%r11
    8ad7:	10 48 8b             	adc    %cl,-0x75(%rax)
    8ada:	36 48 8b 3f          	ss mov (%rdi),%rdi
    8ade:	e9 0d bf 48 21       	jmp    214949f0 <obstack_alloc_failed_handler@@Base+0x21472950>
    8ae3:	da 1f                	ficompl (%rdi)
    8ae5:	44 00 00             	add    %r8b,(%rax)
    8ae8:	c3                   	ret    
    8ae9:	0f 1f 80 4c 4d 4d 0f 	nopl   0xf4d4d4c(%rax)
    8af0:	af                   	scas   %es:(%rdi),%eax
    8af1:	de 01                	fiadds (%rcx)
    8af3:	00 00                	add    %al,(%rax)
    8af5:	c7 c0 32 00 00 00    	mov    $0x32,%eax
    8afb:	49 f7 fe             	idiv   %r14
    8afe:	49 31 c1             	xor    %rax,%r9
    8b01:	ff                   	(bad)  
    8b02:	ff                   	(bad)  
    8b03:	ff                   	(bad)  
    8b04:	ff 48 0f             	decl   0xf(%rax)
    8b07:	af                   	scas   %es:(%rdi),%eax
    8b08:	f0 1f                	lock (bad) 
    8b0a:	4c 85 e0             	test   %r12,%rax
    8b0d:	0f 8f a1 fd ff ff    	jg     88b4 <__sprintf_chk@plt+0x3bd4>
    8b13:	cc                   	int3   
    8b14:	48 89 f2             	mov    %rsi,%rdx
    8b17:	0f 8c 71 ff ff ff    	jl     8a8e <__sprintf_chk@plt+0x3dae>
    8b1d:	00 48 4c             	add    %cl,0x4c(%rax)
    8b20:	89 f2                	mov    %esi,%edx
    8b22:	00 00                	add    %al,(%rax)
    8b24:	00 48 8b             	add    %cl,-0x75(%rax)
    8b27:	b7 80                	mov    $0x80,%bh
    8b29:	00 00                	add    %al,(%rax)
    8b2b:	00 48 39             	add    %cl,0x39(%rax)
    8b2e:	b2 80                	mov    $0x80,%dl
    8b30:	00 00                	add    %al,(%rax)
    8b32:	00 48 39             	add    %cl,0x39(%rax)
    8b35:	0f 8f a2 fc ff ff    	jg     87dd <__sprintf_chk@plt+0x3afd>
    8b3b:	fe                   	(bad)  
    8b3c:	ff                   	(bad)  
    8b3d:	ff 48 8b             	decl   -0x75(%rax)
    8b40:	0f 8f cf 01 0f 8c    	jg     ffffffff8c0f8d15 <obstack_alloc_failed_handler@@Base+0xffffffff8c0d6c75>
    8b46:	ef                   	out    %eax,(%dx)
    8b47:	49 c1 e0 09          	shl    $0x9,%r8
    8b4b:	49 ff c4             	inc    %r12
    8b4e:	00 00                	add    %al,(%rax)
    8b50:	0f 8c 0f 8f 0e 02    	jl     20f1a65 <obstack_alloc_failed_handler@@Base+0x20cf9c5>
    8b56:	00 00                	add    %al,(%rax)
    8b58:	02 00                	add    (%rax),%al
    8b5a:	00 00                	add    %al,(%rax)
    8b5c:	00 4c 01 cf          	add    %cl,-0x31(%rcx,%rax,1)
    8b60:	b8 ff 48 c7 c1       	mov    $0xc1c748ff,%eax
    8b65:	43 03 00             	rex.XB add (%r8),%eax
    8b68:	00 1f                	add    %bl,(%rdi)
    8b6a:	84 00                	test   %al,(%rax)
    8b6c:	00 00                	add    %al,(%rax)
    8b6e:	00 00                	add    %al,(%rax)
    8b70:	f3 0f 1e 0f          	repz nopl (%rdi)
    8b74:	85 3e                	test   %edi,(%rsi)
    8b76:	02 00                	add    (%rax),%al
    8b78:	00 a8 00 00 00 8b    	add    %ch,-0x75000000(%rax)
    8b7e:	8a a8 49 09 cb 83    	mov    -0x7c34f6b7(%rax),%ch
    8b84:	f9                   	stc    
    8b85:	03 0f                	add    (%rdi),%ecx
    8b87:	94                   	xchg   %eax,%esp
    8b88:	c0 e9 b9             	shr    $0xb9,%cl
    8b8b:	03 00                	add    (%rax),%eax
    8b8d:	00 49 c1             	add    %cl,-0x3f(%rcx)
    8b90:	e6 1b                	out    %al,$0x1b
    8b92:	39 c6                	cmp    %eax,%esi
    8b94:	74 2a                	je     8bc0 <__sprintf_chk@plt+0x3ee0>
    8b96:	83 fe 09             	cmp    $0x9,%esi
    8b99:	74 25                	je     8bc0 <__sprintf_chk@plt+0x3ee0>
    8b9b:	8b 8f ac 49 c1 e8    	mov    -0x173eb654(%rdi),%ecx
    8ba1:	0e                   	(bad)  
    8ba2:	e1 4d                	loope  8bf1 <__sprintf_chk@plt+0x3f11>
    8ba4:	09 d0                	or     %edx,%eax
    8ba6:	00 49 c7             	add    %cl,-0x39(%rcx)
    8ba9:	c6                   	(bad)  
    8baa:	3d 01 00 00 49       	cmp    $0x49000001,%eax
    8baf:	21 ce                	and    %ecx,%esi
    8bb1:	8f c3                	pop    %rbx
    8bb3:	02 00                	add    (%rax),%al
    8bb5:	00 00                	add    %al,(%rax)
    8bb7:	00 c3                	add    %al,%bl
    8bb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8bc0:	84 c0                	test   %al,%al
    8bc2:	49 c7 c0 fe fe ff ff 	mov    $0xfffffffffffffefe,%r8
    8bc9:	00 4d 29             	add    %cl,0x29(%rbp)
    8bcc:	cc                   	int3   
    8bcd:	4c 09 e8             	or     %r13,%rax
    8bd0:	00 40 00             	add    %al,0x0(%rax)
    8bd3:	00 49 39             	add    %cl,0x39(%rcx)
    8bd6:	dd ff                	(bad)  
    8bd8:	ff 0f                	decl   (%rdi)
    8bda:	85 5c ff ff          	test   %ebx,-0x1(%rdi,%rdi,8)
    8bde:	ff 00                	incl   (%rax)
    8be0:	49 39 db             	cmp    %rbx,%r11
    8be3:	00 00                	add    %al,(%rax)
    8be5:	00 25 00 f0 0f 8f    	add    %ah,-0x70f01000(%rip)        # ffffffff8f107beb <obstack_alloc_failed_handler@@Base+0xffffffff8f0e5b4b>
    8beb:	1e                   	(bad)  
    8bec:	03 00                	add    (%rax),%eax
    8bee:	00 00                	add    %al,(%rax)
    8bf0:	74 b9                	je     8bab <__sprintf_chk@plt+0x3ecb>
    8bf2:	4d 31 e6             	xor    %r12,%r14
    8bf5:	40 00 00             	rex add %al,(%rax)
    8bf8:	74 49                	je     8c43 <__sprintf_chk@plt+0x3f63>
    8bfa:	c1 ed 28             	shr    $0x28,%ebp
    8bfd:	88 00                	mov    %al,(%rax)
    8bff:	00 00                	add    %al,(%rax)
    8c01:	48 e9 1e 49 09 fa    	rex.W jmp fffffffffa09d525 <obstack_alloc_failed_handler@@Base+0xfffffffffa07b485>
    8c07:	00 48 e9             	add    %cl,-0x17(%rax)
    8c0a:	03 ff                	add    %edi,%edi
    8c0c:	ff                   	(bad)  
    8c0d:	ff 00                	incl   (%rax)
    8c0f:	48 39 b2 80 00 00 00 	cmp    %rsi,0x80(%rdx)
    8c16:	7f be                	jg     8bd6 <__sprintf_chk@plt+0x3ef6>
    8c18:	7c 99                	jl     8bb3 <__sprintf_chk@plt+0x3ed3>
    8c1a:	29 c8                	sub    %ecx,%eax
    8c1c:	75 bd                	jne    8bdb <__sprintf_chk@plt+0x3efb>
    8c1e:	48 8b 37             	mov    (%rdi),%rsi
    8c21:	0f 8f c5 03 00 00    	jg     8fec <__sprintf_chk@plt+0x430c>
    8c27:	ff                   	(bad)  
    8c28:	ff 0f                	decl   (%rdi)
    8c2a:	1f                   	(bad)  
    8c2b:	80 00 0f             	addb   $0xf,(%rax)
    8c2e:	8c a0 fd ff ff fa    	mov    %fs,-0x5000003(%rax)
    8c34:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    8c3a:	8b 8f 4d 39 c5 49    	mov    0x49c5394d(%rdi),%ecx
    8c40:	0f af c4             	imul   %esp,%eax
    8c43:	0f 94 c0             	sete   %al
    8c46:	83 fa 09             	cmp    $0x9,%edx
    8c49:	0f 48 4d 31          	cmovs  0x31(%rbp),%ecx
    8c4d:	d5                   	(bad)  
    8c4e:	48 ff c1             	inc    %rcx
    8c51:	74 2d                	je     8c80 <__sprintf_chk@plt+0x3fa0>
    8c53:	83 f9 09             	cmp    $0x9,%ecx
    8c56:	74 28                	je     8c80 <__sprintf_chk@plt+0x3fa0>
    8c58:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    8c5e:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    8c64:	84 c0                	test   %al,%al
    8c66:	49 39 cd             	cmp    %rcx,%r13
    8c69:	fa                   	cli    
    8c6a:	00 40 00             	add    %al,0x0(%rax)
    8c6d:	48 ff c2             	inc    %rdx
    8c70:	48 0f af e9          	imul   %rcx,%rbp
    8c74:	ec                   	in     (%dx),%al
    8c75:	01 00                	add    %eax,(%rax)
    8c77:	00 c1                	add    %al,%cl
    8c79:	e1 16                	loope  8c91 <__sprintf_chk@plt+0x3fb1>
    8c7b:	00 00                	add    %al,(%rax)
    8c7d:	00 00                	add    %al,(%rax)
    8c7f:	00 4d 29             	add    %cl,0x29(%rbp)
    8c82:	d9 36                	fnstenv (%rsi)
    8c84:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    8c8a:	25 00 f0 00 00       	and    $0xf000,%eax
    8c8f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8c94:	74 24                	je     8cba <__sprintf_chk@plt+0x3fda>
    8c96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8c9b:	c3                   	ret    
    8c9c:	0f 8c f2 fc ff ff    	jl     8994 <__sprintf_chk@plt+0x3cb4>
    8ca2:	ac                   	lods   %ds:(%rsi),%al
    8ca3:	00 00                	add    %al,(%rax)
    8ca5:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 17cab <_obstack_memory_used@@Base+0x74fb>
    8cab:	3d 00 40 0f 84       	cmp    $0x840f4000,%eax
    8cb0:	84 00                	test   %al,(%rax)
    8cb2:	00 00                	add    %al,(%rax)
    8cb4:	ff 40 00             	incl   0x0(%rax)
    8cb7:	00 74 dc 48          	add    %dh,0x48(%rsp,%rbx,8)
    8cbb:	8b 0f                	mov    (%rdi),%ecx
    8cbd:	8c 58 fc             	mov    %ds,-0x4(%rax)
    8cc0:	ff                   	(bad)  
    8cc1:	ff 48 0f             	decl   0xf(%rax)
    8cc4:	49 c1 ea 39          	shr    $0x39,%r10
    8cc8:	ff 70 7f             	push   0x7f(%rax)
    8ccb:	ca 7c a2             	lret   $0xa27c
    8cce:	29 d0                	sub    %edx,%eax
    8cd0:	75 c9                	jne    8c9b <__sprintf_chk@plt+0x3fbb>
    8cd2:	48 8b 36             	mov    (%rsi),%rsi
    8cd5:	48 8b 3f             	mov    (%rdi),%rdi
    8cd8:	e9 13 bd ff ff       	jmp    49f0 <strcmp@plt>
    8cdd:	48 f7 f8             	idiv   %rax
    8ce0:	f3 0f 1e fa          	endbr64 
    8ce4:	48 8b 57 78          	mov    0x78(%rdi),%rdx
    8ce8:	49 89 fa             	mov    %rdi,%r10
    8ceb:	78 48                	js     8d35 <__sprintf_chk@plt+0x4055>
    8ced:	8b 4e 70             	mov    0x70(%rsi),%ecx
    8cf0:	48 7c a2             	rex.W jl 8c95 <__sprintf_chk@plt+0x3fb5>
    8cf3:	b3 03                	mov    $0x3,%bl
    8cf5:	00 00                	add    %al,(%rax)
    8cf7:	20 29                	and    %ch,(%rcx)
    8cf9:	d0 48 31             	rorb   0x31(%rax)
    8cfc:	fa                   	cli    
    8cfd:	8b 36                	mov    (%rsi),%esi
    8cff:	48 8b 3f             	mov    (%rdi),%rdi
    8d02:	e9 e9 bc ff ff       	jmp    49f0 <strcmp@plt>
    8d07:	66 4d 01 c9          	data16 add %r9,%r9
    8d0b:	00 00                	add    %al,(%rax)
    8d0d:	00 00                	add    %al,(%rax)
    8d0f:	0f 84 7c 03 00 00    	je     9091 <__sprintf_chk@plt+0x43b1>
    8d15:	ff                   	(bad)  
    8d16:	7c 15                	jl     8d2d <__sprintf_chk@plt+0x404d>
    8d18:	b8 01 00 00 00       	mov    $0x1,%eax
    8d1d:	c3                   	ret    
    8d1e:	66 e9 6b 0f          	jmpw   9c8d <__sprintf_chk@plt+0x4fad>
    8d22:	8c f0                	mov    %?,%eax
    8d24:	fc                   	cld    
    8d25:	ff                   	(bad)  
    8d26:	ff ce                	dec    %esi
    8d28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8d2f:	00 
    8d30:	f3 0f 1e fa          	endbr64 
    8d34:	48 89 f2             	mov    %rsi,%rdx
    8d37:	48 8b 4e 49          	mov    0x49(%rsi),%rcx
    8d3b:	0f af df             	imul   %edi,%ebx
    8d3e:	78 e9                	js     8d29 <__sprintf_chk@plt+0x4049>
    8d40:	06                   	(bad)  
    8d41:	ff                   	(bad)  
    8d42:	ff                   	(bad)  
    8d43:	ff                   	(bad)  
    8d44:	39 72 70             	cmp    %esi,0x70(%rdx)
    8d47:	7f 27                	jg     8d70 <__sprintf_chk@plt+0x4090>
    8d49:	7c 1d                	jl     8d68 <__sprintf_chk@plt+0x4088>
    8d4b:	29 c8                	sub    %ecx,%eax
    8d4d:	7c bd                	jl     8d0c <__sprintf_chk@plt+0x402c>
    8d4f:	85 f6                	test   %esi,%esi
    8d51:	37                   	(bad)  
    8d52:	48 8b e9             	mov    %rcx,%rbp
    8d55:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    8d56:	02 00                	add    (%rax),%al
    8d58:	00 ff                	add    %bh,%bh
    8d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8d60:	c3                   	ret    
    8d61:	0f 1f 0f             	nopl   (%rdi)
    8d64:	84 4c 85 c1          	test   %cl,-0x3f(%rbp,%rax,4)
    8d68:	ff 01                	incl   (%rcx)
    8d6a:	00 00                	add    %al,(%rax)
    8d6c:	49 c1 e7 2b          	shl    $0x2b,%r15
    8d70:	d2 ff                	sar    %cl,%bh
    8d72:	ff                   	(bad)  
    8d73:	ff                   	(bad)  
    8d74:	ff 4d 39             	decl   0x39(%rbp)
    8d77:	f6 0f 1f             	testb  $0x1f,(%rdi)
    8d7a:	84 00                	test   %al,(%rax)
    8d7c:	00 4d 29             	add    %cl,0x29(%rbp)
    8d7f:	c8 f3 0f 1e          	enter  $0xff3,$0x1e
    8d83:	49 f7 fd             	idiv   %r13
    8d86:	a8 00                	test   $0x0,%al
    8d88:	00 00                	add    %al,(%rax)
    8d8a:	8b 48 ff             	mov    -0x1(%rax),%ecx
    8d8d:	c2 00 00             	ret    $0x0
    8d90:	83 fa 03             	cmp    $0x3,%edx
    8d93:	0f 8c dc fd ff ff    	jl     8b75 <__sprintf_chk@plt+0x3e95>
    8d99:	0f 94 c2             	sete   %dl
    8d9c:	09 d0                	or     %edx,%eax
    8d9e:	4d 21 d0             	and    %r10,%r8
    8da1:	74 2d                	je     8dd0 <__sprintf_chk@plt+0x40f0>
    8da3:	83 f9 09             	cmp    $0x9,%ecx
    8da6:	74 28                	je     8dd0 <__sprintf_chk@plt+0x40f0>
    8da8:	8b 0f                	mov    (%rdi),%ecx
    8daa:	85 1c ff             	test   %ebx,(%rdi,%rdi,8)
    8dad:	ff                   	(bad)  
    8dae:	ff e2                	jmp    *%rdx
    8db0:	49 f7 fd             	idiv   %r13
    8db3:	4d 09 d0             	or     %r10,%r8
    8db6:	74 0f                	je     8dc7 <__sprintf_chk@plt+0x40e7>
    8db8:	8c 85 03 00 00 00    	mov    %es,0x3(%rbp)
    8dbe:	74 4a                	je     8e0a <__sprintf_chk@plt+0x412a>
    8dc0:	b8 01 00 00 00       	mov    $0x1,%eax
    8dc5:	c3                   	ret    
    8dc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8dcd:	00 00 00 
    8dd0:	84 c0                	test   %al,%al
    8dd2:	75 36                	jne    8e0a <__sprintf_chk@plt+0x412a>
    8dd4:	8b 0f                	mov    (%rdi),%ecx
    8dd6:	85 7b fd             	test   %edi,-0x3(%rbx)
    8dd9:	ff                   	(bad)  
    8dda:	ff 00                	incl   (%rax)
    8ddc:	f0 00 00             	lock add %al,(%rax)
    8ddf:	3d 48 89 cf 00       	cmp    $0xcf8948,%eax
    8de4:	74 49                	je     8e2f <__sprintf_chk@plt+0x414f>
    8de6:	c1 ef 2f             	shr    $0x2f,%edi
    8de9:	48 89 f8             	mov    %rdi,%rax
    8dec:	0f 1f 40 00          	nopl   0x0(%rax)
    8df0:	4d 21 c9             	and    %r9,%r9
    8df3:	00 00                	add    %al,(%rax)
    8df5:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 17dfb <_obstack_memory_used@@Base+0x764b>
    8dfb:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8e00:	48 f7 4c 85 fb ea 06 	testq  $0x740006ea,-0x5(%rbp,%rax,4)
    8e07:	00 74 
    8e09:	dc 48 e9             	fmull  -0x17(%rax)
    8e0c:	8a 01                	mov    (%rcx),%al
    8e0e:	00 00                	add    %al,(%rax)
    8e10:	46 78 48             	rex.RX js 8e5b <__sprintf_chk@plt+0x417b>
    8e13:	8b 4e 70             	mov    0x70(%rsi),%ecx
    8e16:	48 39 4f 48          	cmp    %rcx,0x48(%rdi)
    8e1a:	c1 e9 2c             	shr    $0x2c,%ecx
    8e1d:	01 00                	add    %eax,(%rax)
    8e1f:	00 49 31             	add    %cl,0x31(%rcx)
    8e22:	c8 48 c1 e7          	enter  $0xc148,$0xe7
    8e26:	06                   	(bad)  
    8e27:	8c f8                	mov    %?,%eax
    8e29:	01 00                	add    %eax,(%rax)
    8e2b:	00 ff                	add    %bh,%bh
    8e2d:	ff 1f                	lcall  *(%rdi)
    8e2f:	49 ff c7             	inc    %r15
    8e32:	af                   	scas   %es:(%rdi),%eax
    8e33:	f6 48 89 f2          	testb  $0xf2,-0x77(%rax)
    8e37:	8b b7 a8 00 00 00    	mov    0xa8(%rdi),%esi
    8e3d:	8b 8a 49 0f af ff    	mov    -0x50f0b7(%rdx),%ecx
    8e43:	83 f9 03             	cmp    $0x3,%ecx
    8e46:	4d 39 c4             	cmp    %r8,%r12
    8e49:	83 48 39 da          	orl    $0xffffffda,0x39(%rax)
    8e4d:	94                   	xchg   %eax,%esp
    8e4e:	c1 09 c8             	rorl   $0xc8,(%rcx)
    8e51:	83 fe 4d             	cmp    $0x4d,%esi
    8e54:	0f af e8             	imul   %eax,%ebp
    8e57:	fe 09                	decb   (%rcx)
    8e59:	74 25                	je     8e80 <__sprintf_chk@plt+0x41a0>
    8e5b:	8b 8f 48 09 ff 00    	mov    0xff0948(%rdi),%ecx
    8e61:	81 e1 00 f0 00 49    	and    $0x4900f000,%ecx
    8e67:	4c 01 d8             	add    %r11,%rax
    8e6a:	35 81 f9 00 40       	xor    $0x4000f981,%eax
    8e6f:	00 49 0f             	add    %cl,0xf(%rcx)
    8e72:	af                   	scas   %es:(%rdi),%eax
    8e73:	f1                   	int1   
    8e74:	01 00                	add    %eax,(%rax)
    8e76:	4d 01 f5             	add    %r14,%r13
    8e79:	41 fc                	rex.B cld 
    8e7b:	ff                   	(bad)  
    8e7c:	ff 00                	incl   (%rax)
    8e7e:	00 00                	add    %al,(%rax)
    8e80:	0f 84 2d ff ff ff    	je     8db3 <__sprintf_chk@plt+0x40d3>
    8e86:	48 01 d2             	add    %rdx,%rdx
    8e89:	c0 02 00             	rolb   $0x0,(%rdx)
    8e8c:	00 00                	add    %al,(%rax)
    8e8e:	00 3d 00 40 00 00    	add    %bh,0x4000(%rip)        # ce94 <__sprintf_chk@plt+0x81b4>
    8e94:	49 89 d2             	mov    %rdx,%r10
    8e97:	ff 48 c1             	decl   -0x3f(%rax)
    8e9a:	e6 07                	out    %al,$0x7
    8e9c:	cb                   	lret   
    8e9d:	2e 40 00 8b 75 2d 00 	cs rex add %cl,0x2d75(%rbx)
    8ea4:	00 
    8ea5:	00 0f                	add    %cl,(%rdi)
    8ea7:	85 8c fc ff ff fc ff 	test   %ecx,-0x30001(%rsp,%rdi,8)
    8eae:	ff 00                	incl   (%rax)
    8eb0:	00 49 c1             	add    %cl,-0x3f(%rcx)
    8eb3:	4d 29 cf             	sub    %r9,%r15
    8eb6:	fe 4c 89 da          	decb   -0x26(%rcx,%rcx,4)
    8eba:	48 8b 4a 78          	mov    0x78(%rdx),%rcx
    8ebe:	48 8b 47 49          	mov    0x49(%rdi),%rax
    8ec2:	85 f9                	test   %edi,%ecx
    8ec4:	77 70                	ja     8f36 <__sprintf_chk@plt+0x4256>
    8ec6:	49 f7 fa             	idiv   %r10
    8ec9:	70 7f                	jo     8f4a <__sprintf_chk@plt+0x426a>
    8ecb:	ca 7c a5             	lret   $0xa57c
    8ece:	29 c8                	sub    %ecx,%eax
    8ed0:	75 c9                	jne    8e9b <__sprintf_chk@plt+0x41bb>
    8ed2:	48                   	rex.W
    8ed3:	49 c1 e4 26          	shl    $0x26,%r12
    8ed7:	3a e9                	cmp    %cl,%ch
    8ed9:	4d 01 c4             	add    %r8,%r12
    8edc:	48 c1 e6 03          	shl    $0x3,%rsi
    8ee0:	f3 0f 1e fa          	endbr64 
    8ee4:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    8eea:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    8ef0:	83 fa 03             	cmp    $0x3,%edx
    8ef3:	0f 94 c0             	sete   %al
    8ef6:	83 fa 09             	cmp    $0x9,%edx
    8ef9:	0f 94 c2             	sete   %dl
    8efc:	09 d0                	or     %edx,%eax
    8efe:	83 f9 03             	cmp    $0x3,%ecx
    8f01:	74 2d                	je     8f30 <__sprintf_chk@plt+0x4250>
    8f03:	83 f9 e9             	cmp    $0xffffffe9,%ecx
    8f06:	4d 89 ee             	mov    %r13,%r14
    8f09:	ff 4d 01             	decl   0x1(%rbp)
    8f0c:	e3 00                	jrcxz  8f0e <__sprintf_chk@plt+0x422e>
    8f0e:	81 e2 49 f7 ff 00    	and    $0xfff749,%edx
    8f14:	84 48 01             	test   %cl,0x1(%rax)
    8f17:	f0 4c 29 49 29       	lock sub %r9,0x29(%rcx)
    8f1c:	f0 c1 e3 36          	lock shl $0x36,%ebx
    8f20:	fc                   	cld    
    8f21:	ff                   	(bad)  
    8f22:	ff 00                	incl   (%rax)
    8f24:	00 c3                	add    %al,%bl
    8f26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f2d:	00 00 00 
    8f30:	84 c0                	test   %al,%al
    8f32:	75 49                	jne    8f7d <__sprintf_chk@plt+0x429d>
    8f34:	31 c8                	xor    %ecx,%eax
    8f36:	0f 85 d7 03 00 00    	jne    9313 <__sprintf_chk@plt+0x4633>
    8f3c:	49 ff c3             	inc    %r11
    8f3f:	3d 00 49 49 39       	cmp    $0x39494900,%eax
    8f44:	c5 fa b8             	(bad)  
    8f47:	ff                   	(bad)  
    8f48:	ff                   	(bad)  
    8f49:	ff                   	(bad)  
    8f4a:	ff c3                	inc    %ebx
    8f4c:	0f 1f e9             	nop    %ecx
    8f4f:	e0 fc                	loopne 8f4d <__sprintf_chk@plt+0x426d>
    8f51:	ff 48 29             	decl   0x29(%rax)
    8f54:	d3 00                	roll   %cl,(%rax)
    8f56:	48 85 c1             	test   %rax,%rcx
    8f59:	00 00                	add    %al,(%rax)
    8f5b:	3d 00 40 00 49       	cmp    $0x49004000,%eax
    8f60:	f7 fe                	idiv   %esi
    8f62:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8f68:	74 dc                	je     8f46 <__sprintf_chk@plt+0x4266>
    8f6a:	48 8b 57 68          	mov    0x68(%rdi),%rdx
    8f6e:	48 8b 46 68          	mov    0x68(%rsi),%rax
    8f72:	48                   	rex.W
    8f73:	48 31 d8             	xor    %rbx,%rax
    8f76:	48 39 4f 4d          	cmp    %rcx,0x4d(%rdi)
    8f7a:	0f af c4             	imul   %esp,%eax
    8f7d:	a2 29 d0 75 c9 48 8b 	movabs %al,0x48368b48c975d029
    8f84:	36 48 
    8f86:	8b 3f                	mov    (%rdi),%edi
    8f88:	e9 63 ba ff ff       	jmp    49f0 <strcmp@plt>
    8f8d:	0f 1f 00             	nopl   (%rax)
    8f90:	f3 0f 1e fa          	endbr64 
    8f94:	48 8b 57 68          	mov    0x68(%rdi),%rdx
    8f98:	48 8b 46 68          	mov    0x68(%rsi),%rax
    8f9c:	48                   	rex.W
    8f9d:	49 01 d7             	add    %rdx,%r15
    8fa0:	48                   	rex.W
    8fa1:	49 c1 e1 37          	shl    $0x37,%r9
    8fa5:	8c 8c 02 00 4c 39 df 	mov    %cs,-0x20c6b400(%rdx,%rax,1)
    8fac:	48                   	rex.W
    8fad:	48 21 c2             	and    %rax,%rdx
    8fb0:	8b 3f                	mov    (%rdi),%edi
    8fb2:	e9 39 ba ff ff       	jmp    49f0 <strcmp@plt>
    8fb7:	48 0f af d7          	imul   %rdi,%rdx
    8fbb:	00 00                	add    %al,(%rax)
    8fbd:	00 00                	add    %al,(%rax)
    8fbf:	00 c3                	add    %al,%bl
    8fc1:	0f 1f 49 09          	nopl   0x9(%rcx)
    8fc5:	c4                   	(bad)  
    8fc6:	00 00                	add    %al,(%rax)
    8fc8:	b8 01 00 00 00       	mov    $0x1,%eax
    8fcd:	49 ff c7             	inc    %r15
    8fd0:	b8 ff ff ff 4c       	mov    $0x4cffffff,%eax
    8fd5:	85 ce                	test   %ecx,%esi
    8fd7:	e9 36 03 00 00       	jmp    9312 <__sprintf_chk@plt+0x4632>
    8fdc:	00 00                	add    %al,(%rax)
    8fde:	00 4c 85 e6          	add    %cl,-0x1a(%rbp,%rax,4)
    8fe2:	1e                   	(bad)  
    8fe3:	49 ff c5             	inc    %r13
    8fe6:	f2 48 8b 4e 68       	repnz mov 0x68(%rsi),%rcx
    8feb:	0f 85 e9 fe ff ff    	jne    8eda <__sprintf_chk@plt+0x41fa>
    8ff1:	77 60                	ja     9053 <__sprintf_chk@plt+0x4373>
    8ff3:	48 39 72 60          	cmp    %rsi,0x60(%rdx)
    8ff7:	7f e9                	jg     8fe2 <__sprintf_chk@plt+0x4302>
    8ff9:	1f                   	(bad)  
    8ffa:	03 00                	add    (%rax),%eax
    8ffc:	00 75 11             	add    %dh,0x11(%rbp)
    8fff:	48 8b 37             	mov    (%rdi),%rsi
    9002:	48 8b 3a             	mov    (%rdx),%rdi
    9005:	49 21 fc             	and    %rdi,%r12
    9008:	e7 16                	out    %eax,$0x16
    900a:	4c 29 c3             	sub    %r8,%rbx
    900d:	44 00 00             	add    %r8b,(%rax)
    9010:	c3                   	ret    
    9011:	0f 1f 4c 85 cf       	nopl   -0x31(%rbp,%rax,4)
    9016:	48 f7 f9             	idiv   %rcx
    9019:	01 00                	add    %eax,(%rax)
    901b:	00 00                	add    %al,(%rax)
    901d:	c3                   	ret    
    901e:	66 90                	xchg   %ax,%ax
    9020:	b8 0f 84 cb 00       	mov    $0xcb840f,%eax
    9025:	0f 8c 1b fe ff ff    	jl     8e46 <__sprintf_chk@plt+0x4166>
    902b:	00 00                	add    %al,(%rax)
    902d:	00 00                	add    %al,(%rax)
    902f:	00 f3                	add    %dh,%bl
    9031:	0f 1e 48 c1          	nopl   -0x3f(%rax)
    9035:	e0 49                	loopne 9080 <__sprintf_chk@plt+0x43a0>
    9037:	f7 fe                	idiv   %esi
    9039:	89 d1                	mov    %edx,%ecx
    903b:	48 0f af c8          	imul   %rax,%rcx
    903f:	a8 00                	test   $0x0,%al
    9041:	00 00                	add    %al,(%rax)
    9043:	83 f9 03             	cmp    $0x3,%ecx
    9046:	0f 94 c0             	sete   %al
    9049:	83 f9 09             	cmp    $0x9,%ecx
    904c:	0f 94 c1             	sete   %cl
    904f:	09 c8                	or     %ecx,%eax
    9051:	83 fe 48             	cmp    $0x48,%esi
    9054:	39 ff                	cmp    %edi,%edi
    9056:	83 fe 09             	cmp    $0x9,%esi
    9059:	74 25                	je     9080 <__sprintf_chk@plt+0x43a0>
    905b:	8b 8f ac 00 00 00    	mov    0xac(%rdi),%ecx
    9061:	81 e1 00 f0 00 00    	and    $0xf000,%ecx
    9067:	84 c0                	test   %al,%al
    9069:	74 35                	je     90a0 <__sprintf_chk@plt+0x43c0>
    906b:	4c 29 ee             	sub    %r13,%rsi
    906e:	40 00 00             	rex add %al,(%rax)
    9071:	74 47                	je     90ba <__sprintf_chk@plt+0x43da>
    9073:	b8 01 00 4d 85       	mov    $0x854d0001,%eax
    9078:	d3 0f                	rorl   %cl,(%rdi)
    907a:	1f                   	(bad)  
    907b:	80 00 00             	addb   $0x0,(%rax)
    907e:	00 00                	add    %al,(%rax)
    9080:	84 c0                	test   %al,%al
    9082:	4d 29 48 c7          	sub    %r9,-0x39(%r8)
    9086:	c3                   	ret    
    9087:	82                   	(bad)  
    9088:	03 00                	add    (%rax),%eax
    908a:	00 00                	add    %al,(%rax)
    908c:	f0 00 00             	lock add %al,(%rax)
    908f:	3d 00 7f bd 00       	cmp    $0xbd7f00,%eax
    9094:	74 24                	je     90ba <__sprintf_chk@plt+0x43da>
    9096:	4c 01 e9             	add    %r13,%rcx
    9099:	7a fc                	jp     9097 <__sprintf_chk@plt+0x43b7>
    909b:	ff                   	(bad)  
    909c:	ff 1f                	lcall  *(%rdi)
    909e:	40 00 8b 82 ac 00 00 	rex add %cl,0xac82(%rbx)
    90a5:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 180ab <_obstack_memory_used@@Base+0x78fb>
    90ab:	3d 49 c7 c6 4c       	cmp    $0x4cc6c749,%eax
    90b0:	01 df                	add    %ebx,%edi
    90b2:	00 49 ff             	add    %cl,-0x1(%rcx)
    90b5:	c4                   	(bad)  
    90b6:	00 00                	add    %al,(%rax)
    90b8:	74 dc                	je     9096 <__sprintf_chk@plt+0x43b6>
    90ba:	48 8b 4a 68          	mov    0x68(%rdx),%rcx
    90be:	48 8b 47 68          	mov    0x68(%rdi),%rax
    90c2:	48 8b 77 60          	mov    0x60(%rdi),%rsi
    90c6:	48 39 72 49          	cmp    %rsi,0x49(%rdx)
    90ca:	c1 e1 1e             	shl    $0x1e,%ecx
    90cd:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    90ce:	29 c8                	sub    %ecx,%eax
    90d0:	75 c9                	jne    909b <__sprintf_chk@plt+0x43bb>
    90d2:	48 8b 37             	mov    (%rdi),%rsi
    90d5:	48 8b 3a             	mov    (%rdx),%rdi
    90d8:	e9 13 b9 ff ff       	jmp    49f0 <strcmp@plt>
    90dd:	0f 1f e9             	nop    %ecx
    90e0:	af                   	scas   %es:(%rdi),%eax
    90e1:	01 00                	add    %eax,(%rax)
    90e3:	00 48 8b             	add    %cl,-0x75(%rax)
    90e6:	57                   	push   %rdi
    90e7:	78 4d                	js     9136 <__sprintf_chk@plt+0x4456>
    90e9:	21 cc                	and    %ecx,%esp
    90eb:	78 48                	js     9135 <__sprintf_chk@plt+0x4455>
    90ed:	8b 4e 4d             	mov    0x4d(%rsi),%ecx
    90f0:	39 e9                	cmp    %ebp,%ecx
    90f2:	69 ff ff ff 49 39    	imul   $0x3949ffff,%edi,%edi
    90f8:	c1 f7 75             	shl    $0x75,%edi
    90fb:	14 48                	adc    $0x48,%al
    90fd:	8b 36                	mov    (%rsi),%esi
    90ff:	48 8b 3f             	mov    (%rdi),%rdi
    9102:	e9 e9 b8 ff ff       	jmp    49f0 <strcmp@plt>
    9107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    910e:	00 00 
    9110:	c3                   	ret    
    9111:	0f 1f 48 ff          	nopl   -0x1(%rax)
    9115:	c2 00 00             	ret    $0x0
    9118:	b8 01 49 01 d3       	mov    $0xd3014901,%eax
    911d:	c3                   	ret    
    911e:	66 90                	xchg   %ax,%ax
    9120:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9125:	c3                   	ret    
    9126:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    912d:	00 00 00 
    9130:	f3 0f 1e fa          	endbr64 
    9134:	48 89 f0             	mov    %rsi,%rax
    9137:	48 8b 4c 39 f3       	mov    -0xd(%rcx,%rdi,1),%rcx
    913c:	c0 51 fc ff          	rclb   $0xff,-0x4(%rcx)
    9140:	ff                   	(bad)  
    9141:	ff                   	(bad)  
    9142:	ff 48 39             	decl   0x39(%rax)
    9145:	48 c1 e9 33          	shr    $0x33,%rcx
    9149:	85 c1                	test   %eax,%ecx
    914b:	29 0f                	sub    %ecx,(%rdi)
    914d:	84 55 03             	test   %dl,0x3(%rbp)
    9150:	00 49 c1             	add    %cl,-0x3f(%rcx)
    9153:	e2 e9                	loop   913e <__sprintf_chk@plt+0x445e>
    9155:	4c 89 c8             	mov    %r9,%rax
    9158:	ff                   	(bad)  
    9159:	ff 66 0f             	jmp    *0xf(%rsi)
    915c:	4c 09 0f             	or     %r9,(%rdi)
    915f:	8f                   	(bad)  
    9160:	56                   	push   %rsi
    9161:	03 00                	add    (%rax),%eax
    9163:	00 c6                	add    %al,%dh
    9165:	00 00                	add    %al,(%rax)
    9167:	49 c7 c5 d8 ff ff ff 	mov    $0xffffffffffffffd8,%r13
    916e:	66 49 c1 ed 15       	data16 shr $0x15,%r13
    9173:	ff                   	(bad)  
    9174:	ff c3                	inc    %ebx
    9176:	66 2e 0f             	cs (bad) 
    9179:	0f 8f ee 01 00 00    	jg     936d <__sprintf_chk@plt+0x468d>
    917f:	00 f3                	add    %dh,%bl
    9181:	4d 29 de             	sub    %r11,%r14
    9184:	48 89 f2             	mov    %rsi,%rdx
    9187:	4d 89 cb             	mov    %r9,%r11
    918a:	00 00                	add    %al,(%rax)
    918c:	00 8b e9 e9 00 00    	add    %cl,0xe9e9(%rbx)
    9192:	00 0f                	add    %cl,(%rdi)
    9194:	8f                   	(bad)  
    9195:	ef                   	out    %eax,(%dx)
    9196:	01 00                	add    %eax,(%rax)
    9198:	00 01                	add    %al,(%rcx)
    919a:	75 a6                	jne    9142 <__sprintf_chk@plt+0x4462>
    919c:	0f 94 c1             	sete   %cl
    919f:	09 c8                	or     %ecx,%eax
    91a1:	83 fe 03             	cmp    $0x3,%esi
    91a4:	74 e9                	je     918f <__sprintf_chk@plt+0x44af>
    91a6:	cc                   	int3   
    91a7:	03 00                	add    (%rax),%eax
    91a9:	00 25 8b 8f ac 00    	add    %ah,0xac8f8b(%rip)        # ad213a <obstack_alloc_failed_handler@@Base+0xab009a>
    91af:	00 00                	add    %al,(%rax)
    91b1:	81 e1 00 f0 00 49    	and    $0x4900f000,%ecx
    91b7:	ff c7                	inc    %edi
    91b9:	cb                   	lret   
    91ba:	35 81 f9 e9 41       	xor    $0x41e9f981,%eax
    91bf:	ff                   	(bad)  
    91c0:	ff                   	(bad)  
    91c1:	ff 47 4d             	incl   0x4d(%rdi)
    91c4:	89 df                	mov    %ebx,%edi
    91c6:	00 00                	add    %al,(%rax)
    91c8:	c3                   	ret    
    91c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    91d0:	84 c0                	test   %al,%al
    91d2:	75 36                	jne    920a <__sprintf_chk@plt+0x452a>
    91d4:	48 c7 c1 42 03 00 00 	mov    $0x342,%rcx
    91db:	c1 eb 30             	shr    $0x30,%ebx
    91de:	00 3d 00 40 00 00    	add    %bh,0x4000(%rip)        # d1e4 <__sprintf_chk@plt+0x8504>
    91e4:	74 24                	je     920a <__sprintf_chk@plt+0x452a>
    91e6:	b8 ff ff ff 48       	mov    $0x48ffffff,%eax
    91eb:	29 d7                	sub    %edx,%edi
    91ed:	1f                   	(bad)  
    91ee:	40 00 8b 82 ac 00 00 	rex add %cl,0xac82(%rbx)
    91f5:	00 49 29             	add    %cl,0x29(%rcx)
    91f8:	c8 00 48 ff          	enter  $0x4800,$0xff
    91fc:	c1 4d 85 db          	rorl   $0xdb,-0x7b(%rbp)
    9200:	7c b1                	jl     91b3 <__sprintf_chk@plt+0x44d3>
    9202:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    9208:	74 dc                	je     91e6 <__sprintf_chk@plt+0x4506>
    920a:	48 8b 4a 78          	mov    0x78(%rdx),%rcx
    920e:	48 8b 47 78          	mov    0x78(%rdi),%rax
    9212:	48 8b 77 70          	mov    0x70(%rdi),%rsi
    9216:	48                   	rex.W
    9217:	4d 21 fa             	and    %r15,%r10
    921a:	7f ca                	jg     91e6 <__sprintf_chk@plt+0x4506>
    921c:	7c a5                	jl     91c3 <__sprintf_chk@plt+0x44e3>
    921e:	29 c8                	sub    %ecx,%eax
    9220:	75 c9                	jne    91eb <__sprintf_chk@plt+0x450b>
    9222:	0f 84 d6 fd 48 c1    	je     ffffffffc1498ffe <obstack_alloc_failed_handler@@Base+0xffffffffc1476f5e>
    9228:	e2 26                	loop   9250 <__sprintf_chk@plt+0x4570>
    922a:	b7 ff                	mov    $0xff,%bh
    922c:	ff 0f                	decl   (%rdi)
    922e:	1f                   	(bad)  
    922f:	00 0f                	add    %cl,(%rdi)
    9231:	8c 7e fc             	mov    %?,-0x4(%rsi)
    9234:	ff 49 39             	decl   0x39(%rcx)
    9237:	f5                   	cmc    
    9238:	56                   	push   %rsi
    9239:	41 55                	push   %r13
    923b:	41 54                	push   %r12
    923d:	55                   	push   %rbp
    923e:	89 fd                	mov    %edi,%ebp
    9240:	53                   	push   %rbx
    9241:	48 81 ec 88 00 00 4d 	sub    $0x4d000088,%rsp
    9248:	85 e9                	test   %ebp,%ecx
    924a:	4d 21 f2             	and    %r14,%r10
    924d:	01 00                	add    %eax,(%rax)
    924f:	48 89 f0             	mov    %rsi,%rax
    9252:	48 f7 f9             	idiv   %rcx
    9255:	00 00                	add    %al,(%rax)
    9257:	00 48 89             	add    %cl,-0x77(%rax)
    925a:	44 24 49             	rex.R and $0x49,%al
    925d:	89 fb                	mov    %edi,%ebx
    925f:	48 f7 fe             	idiv   %rsi
    9262:	89 4c 89 db          	mov    %ecx,-0x25(%rcx,%rcx,4)
    9266:	9e                   	sahf   
    9267:	0e                   	(bad)  
    9268:	01 49 ff             	add    %ecx,-0x1(%rcx)
    926b:	c1 e8 ef             	shr    $0xef,%eax
    926e:	b5 ff                	mov    $0xff,%ch
    9270:	ff 4c 89 e1          	decl   -0x1f(%rcx,%rcx,4)
    9274:	48 c7 c3 93 00 4d 39 	mov    $0x394d0093,%rbx
    927b:	fb                   	sti    
    927c:	48 8b 49 f7          	mov    -0x9(%rcx),%rcx
    9280:	ff 01                	incl   (%rcx)
    9282:	00 48 8b             	add    %cl,-0x75(%rax)
    9285:	38 31                	cmp    %dh,(%rcx)
    9287:	c0 e8 c3             	shr    $0xc3,%al
    928a:	b9 ff 4c 85 d0       	mov    $0xd0854cff,%ecx
    928f:	e8 9c 0f 8c 35       	call   358ca230 <obstack_alloc_failed_handler@@Base+0x358a8190>
    9294:	ff                   	(bad)  
    9295:	ff 49 01             	decl   0x1(%rcx)
    9298:	f1                   	int1   
    9299:	49 c1 e7 02          	shl    $0x2,%r15
    929d:	fc                   	cld    
    929e:	ff                   	(bad)  
    929f:	ff                   	(bad)  
    92a0:	ff                   	(bad)  
    92a1:	ff 4c 89 e2          	decl   -0x1e(%rcx,%rcx,4)
    92a5:	bf 01 00 00 00       	mov    $0x1,%edi
    92aa:	48 89 c6             	mov    %rax,%rsi
    92ad:	31 c0                	xor    %eax,%eax
    92af:	e8 8c b8 ff ff       	call   4b40 <__printf_chk@plt>
    92b4:	48 8b 1d ed 8c 01 00 	mov    0x18ced(%rip),%rbx        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    92bb:	31 ff                	xor    %edi,%edi
    92bd:	ba 05 00 00 00       	mov    $0x5,%edx
    92c2:	48 8d 35 8f 0e 01 00 	lea    0x10e8f(%rip),%rsi        # 1a158 <_obstack_memory_used@@Base+0x99a8>
    92c9:	4c 8b 23             	mov    (%rbx),%r12
    92cc:	0f 85 62 02 00 00    	jne    9534 <__sprintf_chk@plt+0x4854>
    92d2:	89 c7                	mov    %eax,%edi
    92d4:	4c 89 48 ff          	mov    %r9,-0x1(%rax)
    92d8:	c6                   	(bad)  
    92d9:	b6 ff                	mov    $0xff,%dh
    92db:	ff 4c 8b 49          	decl   0x49(%rbx,%rcx,4)
    92df:	c1 e7 49             	shl    $0x49,%edi
    92e2:	01 f4                	add    %esi,%esp
    92e4:	31 ff                	xor    %edi,%edi
    92e6:	48 8d 35 fb 0e 01 00 	lea    0x10efb(%rip),%rsi        # 1a1e8 <_obstack_memory_used@@Base+0x9a38>
    92ed:	e8 6e b5 ff ff       	call   4860 <dcgettext@plt>
    92f2:	4c 89 e6             	mov    %r12,%rsi
    92f5:	48 89 48 ff          	mov    %rcx,-0x1(%rax)
    92f9:	c1 c2 ff             	rol    $0xff,%edx
    92fc:	ff 4c 8b 23          	decl   0x23(%rbx,%rcx,4)
    9300:	49 c7 c1 af fe ff ff 	mov    $0xfffffffffffffeaf,%r9
    9307:	4d 01 d8             	add    %r11,%r8
    930a:	2a 0f                	sub    (%rdi),%cl
    930c:	01 48 c1             	add    %ecx,-0x3f(%rax)
    930f:	7c da                	jl     92eb <__sprintf_chk@plt+0x460b>
    9311:	ff                   	(bad)  
    9312:	ff 4c 4d 4d          	decl   0x4d(%rbp,%rcx,2)
    9316:	09 d9                	or     %ebx,%ecx
    9318:	c7                   	(bad)  
    9319:	e8 b2 b6 e9 20       	call   20ea49d0 <obstack_alloc_failed_handler@@Base+0x20e82930>
    931e:	fe                   	(bad)  
    931f:	ff                   	(bad)  
    9320:	ff                   	(bad)  
    9321:	ba 0f 84 e6 00       	mov    $0xe6840f,%edx
    9326:	00 00                	add    %al,(%rax)
    9328:	48 8d 35 19 49 09 f9 	lea    -0x6f6b6e7(%rip),%rsi        # fffffffff909dc48 <obstack_alloc_failed_handler@@Base+0xfffffffff907bba8>
    932f:	e8 2c b5 ff ff       	call   4860 <dcgettext@plt>
    9334:	4c 89 e6             	mov    %r12,%rsi
    9337:	48 89 c7             	mov    %rax,%rdi
    933a:	e8 91 b6 0f 85       	call   ffffffff851049d0 <obstack_alloc_failed_handler@@Base+0xffffffff850e2930>
    933f:	4c 85 fb             	test   %r15,%rbx
    9342:	0f 8c 57 ff 49 01    	jl     14a929f <obstack_alloc_failed_handler@@Base+0x14871ff>
    9348:	d8 48 8d             	fmuls  -0x73(%rax)
    934b:	35 98 10 01 48       	xor    $0x48011098,%eax
    9350:	0f af ff             	imul   %edi,%edi
    9353:	ff                   	(bad)  
    9354:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    9358:	48 89 c7             	mov    %rax,%rdi
    935b:	49 c1 e1 2c          	shl    $0x2c,%r9
    935f:	ff 4c 8b 23          	decl   0x23(%rbx,%rcx,4)
    9363:	ba 05 00 00 00       	mov    $0x5,%edx
    9368:	31 ff                	xor    %edi,%edi
    936a:	48 8d 35 e7 11 01 00 	lea    0x111e7(%rip),%rsi        # 1a558 <_obstack_memory_used@@Base+0x9da8>
    9371:	e8 49 01 fd ff       	call   fffffffffffd94bf <obstack_alloc_failed_handler@@Base+0xfffffffffffb741f>
    9376:	4d 29 df             	sub    %r11,%r15
    9379:	48 89 c7             	mov    %rax,%rdi
    937c:	4d 39 f8             	cmp    %r15,%r8
    937f:	ff                   	(bad)  
    9380:	ff 4c 8b 23          	decl   0x23(%rbx,%rcx,4)
    9384:	ba 05 00 00 00       	mov    $0x5,%edx
    9389:	48 01 d2             	add    %rdx,%rdx
    938c:	89 d1                	mov    %edx,%ecx
    938e:	36 13 01             	ss adc (%rcx),%eax
    9391:	00 e8                	add    %ch,%al
    9393:	c9                   	leave  
    9394:	b4 ff                	mov    $0xff,%ah
    9396:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    939a:	48 89 c7             	mov    %rax,%rdi
    939d:	e8 2e b6 ff ff       	call   49d0 <fputs_unlocked@plt>
    93a2:	4c 8b 23             	mov    (%rbx),%r12
    93a5:	4d 89 e0             	mov    %r12,%r8
    93a8:	00 00                	add    %al,(%rax)
    93aa:	31 0f                	xor    %ecx,(%rdi)
    93ac:	84 af fc ff ff 4d    	test   %ch,0x4dfffffc(%rdi)
    93b2:	31 c8                	xor    %ecx,%eax
    93b4:	a8 b4                	test   $0xb4,%al
    93b6:	ff                   	(bad)  
    93b7:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    93bb:	48 89 c7             	mov    %rax,%rdi
    93be:	e8 0d 49 29 d9       	call   ffffffffd929dcd0 <obstack_alloc_failed_handler@@Base+0xffffffffd927bc30>
    93c3:	4c 8b e9             	mov    %rcx,%r13
    93c6:	e2 fe                	loop   93c6 <__sprintf_chk@plt+0x46e6>
    93c8:	ff                   	(bad)  
    93c9:	ff 49 21             	decl   0x21(%rcx)
    93cc:	f4                   	hlt    
    93cd:	48 8d 35 48 c7 c0 86 	lea    -0x793f38b8(%rip),%rsi        # ffffffff86c15b1c <obstack_alloc_failed_handler@@Base+0xffffffff86bf3a7c>
    93d4:	02 00                	add    (%rax),%al
    93d6:	00 ff                	add    %bh,%bh
    93d8:	ff 48 f7             	decl   -0x9(%rax)
    93db:	f9                   	stc    
    93dc:	48 89 c7             	mov    %rax,%rdi
    93df:	e8 ec b5 ff ff       	call   49d0 <fputs_unlocked@plt>
    93e4:	4c 8b 49 0f          	mov    0xf(%rcx),%r9
    93e8:	af                   	scas   %es:(%rdi),%eax
    93e9:	d6                   	(bad)  
    93ea:	00 00                	add    %al,(%rax)
    93ec:	0f 8f 87 01 00 00    	jg     9579 <__sprintf_chk@plt+0x4899>
    93f2:	15 01 00 e8 66       	adc    $0x66e80001,%eax
    93f7:	b4 4c                	mov    $0x4c,%ah
    93f9:	31 ea                	xor    %ebp,%edx
    93fb:	89 e6                	mov    %esp,%esi
    93fd:	48 89 c7             	mov    %rax,%rdi
    9400:	e8 cb b5 ff ff       	call   49d0 <fputs_unlocked@plt>
    9405:	4c 8b 23             	mov    (%rbx),%r12
    9408:	4d 01 dd             	add    %r11,%r13
    940b:	49 f7 fd             	idiv   %r13
    940e:	ff 48 8d             	decl   -0x73(%rax)
    9411:	35 4c 85 f2 49       	xor    $0x49f2854c,%eax
    9416:	39 c5                	cmp    %eax,%ebp
    9418:	b4 0f                	mov    $0xf,%ah
    941a:	8f                   	(bad)  
    941b:	d5                   	(bad)  
    941c:	fe                   	(bad)  
    941d:	ff                   	(bad)  
    941e:	ff 49 39             	decl   0x39(%rcx)
    9421:	f4                   	hlt    
    9422:	0f 85 aa fc ff ff    	jne    90d2 <__sprintf_chk@plt+0x43f2>
    9428:	23 ba 05 00 00 00    	and    0x5(%rdx),%edi
    942e:	31 ff                	xor    %edi,%edi
    9430:	48 8d 35 59 16 e9 9d 	lea    -0x6216e9a7(%rip),%rsi        # ffffffff9de9aa90 <obstack_alloc_failed_handler@@Base+0xffffffff9de789f0>
    9437:	01 00                	add    %eax,(%rax)
    9439:	00 ff                	add    %bh,%bh
    943b:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    943f:	48 89 c7             	mov    %rax,%rdi
    9442:	e8 89 b5 ff ff       	call   49d0 <fputs_unlocked@plt>
    9447:	4c 8b 23             	mov    (%rbx),%r12
    944a:	ba 05 00 00 00       	mov    $0x5,%edx
    944f:	31 ff                	xor    %edi,%edi
    9451:	49 09 fc             	or     %rdi,%r12
    9454:	0f 85 64 ff ff ff    	jne    93be <__sprintf_chk@plt+0x46de>
    945a:	b4 ff                	mov    $0xff,%ah
    945c:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    9460:	48 89 c7             	mov    %rax,%rdi
    9463:	e8 68 b5 ff ff       	call   49d0 <fputs_unlocked@plt>
    9468:	4c 8b 23             	mov    (%rbx),%r12
    946b:	ba 05 00 00 00       	mov    $0x5,%edx
    9470:	31 ff                	xor    %edi,%edi
    9472:	48                   	rex.W
    9473:	49 29 dd             	sub    %rbx,%r13
    9476:	18 01                	sbb    %al,(%rcx)
    9478:	00 e8                	add    %ch,%al
    947a:	e2 b3                	loop   942f <__sprintf_chk@plt+0x474f>
    947c:	ff                   	(bad)  
    947d:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    9481:	48 89 c7             	mov    %rax,%rdi
    9484:	e8 47 b5 ff 49       	call   4a0049d0 <obstack_alloc_failed_handler@@Base+0x49fe2930>
    9489:	f7 fb                	idiv   %ebx
    948b:	23 ba 05 0f 8c 2d    	and    0x2d8c0f05(%rdx),%edi
    9491:	01 00                	add    %eax,(%rax)
    9493:	00 8d 35 9e 19 01    	add    %cl,0x1199e35(%rbp)
    9499:	00 e8                	add    %ch,%al
    949b:	c1 49 ff c2          	rorl   $0xc2,-0x1(%rcx)
    949f:	4c 89 e6             	mov    %r12,%rsi
    94a2:	48 89 c7             	mov    %rax,%rdi
    94a5:	e8 26 b5 49 c1       	call   ffffffffc14a49d0 <obstack_alloc_failed_handler@@Base+0xffffffffc1482930>
    94aa:	e3 0c                	jrcxz  94b8 <__sprintf_chk@plt+0x47d8>
    94ac:	23 ba 05 00 00 00    	and    0x5(%rdx),%edi
    94b2:	31 ff                	xor    %edi,%edi
    94b4:	48                   	rex.W
    94b5:	49 29 ff             	sub    %rdi,%r15
    94b8:	c4 01 00 e8          	(bad)
    94bc:	a0 b3 ff ff 4c 89 e6 	movabs 0x4d48e6894cffffb3,%al
    94c3:	48 4d 
    94c5:	21 c5                	and    %eax,%ebp
    94c7:	05 b5 ff ff 4c       	add    $0x4cffffb5,%eax
    94cc:	48 09 c7             	or     %rax,%rdi
    94cf:	05 00 00 00 31       	add    $0x31000000,%eax
    94d4:	ff 48 8d             	decl   -0x73(%rax)
    94d7:	35 5c 1b 01 00       	xor    $0x11b5c,%eax
    94dc:	e8 7f 49 ff c4       	call   ffffffffc4ffde60 <obstack_alloc_failed_handler@@Base+0xffffffffc4fdbdc0>
    94e1:	4c 89 e6             	mov    %r12,%rsi
    94e4:	48 89 c7             	mov    %rax,%rdi
    94e7:	e8 e4 4d 85 c2       	call   ffffffffc285e2d0 <obstack_alloc_failed_handler@@Base+0xffffffffc283c230>
    94ec:	4c 8b 23             	mov    (%rbx),%r12
    94ef:	4c 01 4d 89          	add    %r9,-0x77(%rbp)
    94f3:	0f 8f 2b fe ff ff    	jg     9324 <__sprintf_chk@plt+0x4644>
    94f9:	6b 1c 01 00          	imul   $0x0,(%rcx,%rax,1),%ebx
    94fd:	e8 5e b3 49 01       	call   14a4860 <obstack_alloc_failed_handler@@Base+0x14827c0>
    9502:	cf                   	iret   
    9503:	48 39 f7             	cmp    %rsi,%rdi
    9506:	89 c7                	mov    %eax,%edi
    9508:	e8 c3 b4 ff ff       	call   49d0 <fputs_unlocked@plt>
    950d:	4c 85 f1             	test   %r14,%rcx
    9510:	ba 05 4c 89 df       	mov    $0xdf894c05,%edx
    9515:	31 ff                	xor    %edi,%edi
    9517:	48 8d 35 48 c1 e8 04 	lea    0x4e8c148(%rip),%rsi        # 4e95666 <obstack_alloc_failed_handler@@Base+0x4e735c6>
    951e:	e8 4d 48 29 c0       	call   ffffffffc029dd70 <obstack_alloc_failed_handler@@Base+0xffffffffc027bcd0>
    9523:	4c 0f 8f 31 ff ff 49 	rex.WR jg 4a00945b <obstack_alloc_failed_handler@@Base+0x49fe73bb>
    952a:	31 4d 29             	xor    %ecx,0x29(%rbp)
    952d:	fe 4c 8b 23          	decb   0x23(%rbx,%rcx,4)
    9531:	ba 05 00 00 00       	mov    $0x5,%edx
    9536:	31 49 c7             	xor    %ecx,-0x39(%rcx)
    9539:	c4                   	(bad)  
    953a:	31 00                	xor    %eax,(%rax)
    953c:	4d 0f af c3          	imul   %r11,%r8
    9540:	01 d9                	add    %ebx,%ecx
    9542:	ff                   	(bad)  
    9543:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    9547:	48 89 c7             	mov    %rax,%rdi
    954a:	e8 81 4c 29 f6       	call   fffffffff629e1d0 <obstack_alloc_failed_handler@@Base+0xfffffffff627c130>
    954f:	31 49 f7             	xor    %ecx,-0x9(%rcx)
    9552:	fe                   	(bad)  
    9553:	23 ba 4d 39 f6 49    	and    0x49f6394d(%rdx),%edi
    9559:	f7 fe                	idiv   %esi
    955b:	39 48 c1             	cmp    %ecx,-0x3f(%rax)
    955e:	e2 30                	loop   9590 <__sprintf_chk@plt+0x48b0>
    9560:	fe                   	(bad)  
    9561:	fb                   	sti    
    9562:	b2 ff                	mov    $0xff,%dl
    9564:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    9568:	48 89 c7             	mov    %rax,%rdi
    956b:	e8 60 b4 ff ff       	call   49d0 <fputs_unlocked@plt>
    9570:	4c 8b e9             	mov    %rcx,%r13
    9573:	f4                   	hlt    
    9574:	00 0f                	add    %cl,(%rdi)
    9576:	8c 79 01             	mov    %?,0x1(%rcx)
    9579:	00 00                	add    %al,(%rax)
    957b:	4c 0f af f2          	imul   %rdx,%r14
    957f:	01 00                	add    %eax,(%rax)
    9581:	e8 da b2 ff ff       	call   4860 <dcgettext@plt>
    9586:	4c                   	rex.WR
    9587:	49 f7 4d 39 d0 f1 48 	testq  $0x3148f1d0,0x39(%r13)
    958e:	31 
    958f:	d9 ff                	fcos   
    9591:	4c 8b 23             	mov    (%rbx),%r12
    9594:	ba 05 00 00 00       	mov    $0x5,%edx
    9599:	31 4d 31             	xor    %ecx,0x31(%rbp)
    959c:	cb                   	lret   
    959d:	c1 49 c1 ea          	rorl   $0xea,-0x3f(%rcx)
    95a1:	0b e8                	or     %eax,%ebp
    95a3:	b9 b2 ff ff 4c       	mov    $0x4cffffb2,%ecx
    95a8:	89 e6                	mov    %esp,%esi
    95aa:	48 89 c7             	mov    %rax,%rdi
    95ad:	e8 1e b4 ff ff       	call   49d0 <fputs_unlocked@plt>
    95b2:	49 c1 e9 10          	shr    $0x10,%r9
    95b6:	39 c8                	cmp    %ecx,%eax
    95b8:	00 4d 85             	add    %cl,-0x7b(%rbp)
    95bb:	4d 31 e7             	xor    %r12,%r15
    95be:	ff                   	(bad)  
    95bf:	ff 23                	jmp    *(%rbx)
    95c1:	49 f7 f9             	idiv   %r9
    95c4:	98                   	cwtl   
    95c5:	b2 ff                	mov    $0xff,%dl
    95c7:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    95cb:	49 ff c5             	inc    %r13
    95ce:	e8 fd b3 ff ff       	call   49d0 <fputs_unlocked@plt>
    95d3:	0f 8c e0 fe ff ff    	jl     94b9 <__sprintf_chk@plt+0x47d9>
    95d9:	8f 84 48 31 c9 fc ff 	pop    -0x336cf(%rax,%rcx,2)
    95e0:	ff 24 01             	jmp    *(%rcx,%rax,1)
    95e3:	0f                   	(bad)  
    95e4:	0f 85 36 fe ff ff    	jne    9420 <__sprintf_chk@plt+0x4740>
    95ea:	89 e6                	mov    %esp,%esi
    95ec:	48                   	rex.W
    95ed:	48 21 d7             	and    %rdx,%rdi
    95f0:	dc b3 ff ff 4c 8b    	fdivl  -0x74b30001(%rbx)
    95f6:	23 ba 05 00 00 00    	and    0x5(%rdx),%edi
    95fc:	48 29 db             	sub    %rbx,%rbx
    95ff:	8d 35 f3 24 4c 85    	lea    -0x7ab3db0d(%rip),%esi        # ffffffff854cbaf8 <obstack_alloc_failed_handler@@Base+0xffffffff854a9a58>
    9605:	e9 56 b2 ff ff       	jmp    4860 <dcgettext@plt>
    960a:	4c 89 e6             	mov    %r12,%rsi
    960d:	48 89 c7             	mov    %rax,%rdi
    9610:	49 39 f9             	cmp    %rdi,%r9
    9613:	ff                   	(bad)  
    9614:	ff 4c 8b 23          	decl   0x23(%rbx,%rcx,4)
    9618:	ba 05 00 00 00       	mov    $0x5,%edx
    961d:	31 ff                	xor    %edi,%edi
    961f:	48                   	rex.W
    9620:	4d 0f af 48 89       	imul   -0x77(%r8),%r9
    9625:	c9                   	leave  
    9626:	e8 35 b2 ff ff       	call   4860 <dcgettext@plt>
    962b:	4c                   	rex.WR
    962c:	49 29 c1             	sub    %rax,%r9
    962f:	89 c7                	mov    %eax,%edi
    9631:	e8 9a b3 ff ff       	call   49d0 <fputs_unlocked@plt>
    9636:	4d 89 0f             	mov    %r9,(%r15)
    9639:	8c 8f fe ff ff d0    	mov    %cs,-0x2f000002(%rdi)
    963f:	ff 48 8d             	decl   -0x73(%rax)
    9642:	35 c1 25 4c 31       	xor    $0x314c25c1,%eax
    9647:	c3                   	ret    
    9648:	c5 0f 8f             	(bad)
    964b:	3c 03                	cmp    $0x3,%al
    964d:	00 00                	add    %al,(%rax)
    964f:	00 89 c7 e8 79 b3    	add    %cl,-0x4c861739(%rcx)
    9655:	48 f7 fb             	idiv   %rbx
    9658:	4d 31 f2             	xor    %r14,%r10
    965b:	05 00 00 00 31       	add    $0x31000000,%eax
    9660:	ff 48 8d             	decl   -0x73(%rax)
    9663:	35 18 27 01 00       	xor    $0x12718,%eax
    9668:	0f 84 72 01 00 00    	je     97e0 <__sprintf_chk@plt+0x4b00>
    966e:	0f af c3             	imul   %ebx,%eax
    9671:	ff c7                	inc    %edi
    9673:	e8 48 f7 fa ff       	call   fffffffffffb8dc0 <obstack_alloc_failed_handler@@Base+0xfffffffffff96d20>
    9678:	49 ff c5             	inc    %r13
    967b:	00 00                	add    %al,(%rax)
    967d:	4c 8b 23             	mov    (%rbx),%r12
    9680:	31 ff                	xor    %edi,%edi
    9682:	48                   	rex.W
    9683:	48 f7 ff             	idiv   %rdi
    9686:	e6 40                	out    %al,$0x40
    9688:	00 e8                	add    %ch,%al
    968a:	d2 b1 49 c7 c0 f4    	shlb   %cl,-0xb3f38b7(%rcx)
    9690:	ff                   	(bad)  
    9691:	ff                   	(bad)  
    9692:	ff f7                	push   %rdi
    9694:	ff 37                	push   (%rdi)
    9696:	b3 48                	mov    $0x48,%bl
    9698:	29 c3                	sub    %eax,%ebx
    969a:	8d 05 48 c1 e9 2b    	lea    0x2be9c148(%rip),%eax        # 2bea57e8 <obstack_alloc_failed_handler@@Base+0x2be83748>
    96a0:	48 89 e2             	mov    %rsp,%rdx
    96a3:	48 8d 0d c3 49 ff c3 	lea    -0x3c00b63d(%rip),%rcx        # ffffffffc3ffe06d <obstack_alloc_failed_handler@@Base+0xffffffffc3fdbfcd>
    96aa:	48 89 04 24          	mov    %rax,(%rsp)
    96ae:	48 8d 05 49 89 c6 00 	lea    0xc68949(%rip),%rax        # c71ffe <obstack_alloc_failed_handler@@Base+0xc4ff5e>
    96b5:	be 6c 00 00 00       	mov    $0x6c,%esi
    96ba:	bf 73 75 cc c1       	mov    $0xc1cc7573,%edi
    96bf:	64 fc                	fs cld 
    96c1:	ff                   	(bad)  
    96c2:	ff 08                	decl   (%rax)
    96c4:	e9 2e ff ff ff       	jmp    95f7 <__sprintf_chk@plt+0x4917>
    96c9:	01 00                	add    %eax,(%rax)
    96cb:	48                   	rex.W
    96cc:	49 c1 e2 20          	shl    $0x20,%r10
    96d0:	48 8d 05 67 02 01 00 	lea    0x10267(%rip),%rax        # 1993e <_obstack_memory_used@@Base+0x918e>
    96d7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    96dc:	48 8d 05 71 02 4c 29 	lea    0x294c0271(%rip),%rax        # 294c9954 <obstack_alloc_failed_handler@@Base+0x294a78b4>
    96e3:	4c 0f af de          	imul   %rsi,%r11
    96e7:	e9 19 8d 0d 49       	jmp    490e2405 <obstack_alloc_failed_handler@@Base+0x490c0365>
    96ec:	c1 e2 24             	shl    $0x24,%edx
    96ef:	48 0f 85 68 ff ff ff 	rex.W jne 965e <__sprintf_chk@plt+0x497e>
    96f6:	05 63 02 01 00       	add    $0x10263,%eax
    96fb:	48 89 4c 49 c1       	mov    %rcx,-0x3f(%rcx,%rcx,2)
    9700:	ed                   	in     (%dx),%eax
    9701:	28 0d 7a 02 01 48    	sub    %cl,0x4801027a(%rip)        # 48019981 <obstack_alloc_failed_handler@@Base+0x47ff78e1>
    9707:	c1 ee 0f             	shr    $0xf,%esi
    970a:	24 28                	and    $0x28,%al
    970c:	48 89 44 0f 85       	mov    %rax,-0x7b(%rdi,%rcx,1)
    9711:	89 03                	mov    %eax,(%rbx)
    9713:	00 00                	add    %al,(%rax)
    9715:	48                   	rex.W
    9716:	48                   	rex.W
    9717:	49 c7 c7 4a 00 00 00 	mov    $0x4a,%r15
    971e:	24 58                	and    $0x58,%al
    9720:	48                   	rex.W
    9721:	48 f7 fb             	idiv   %rbx
    9724:	60                   	(bad)  
    9725:	00 00                	add    %al,(%rax)
    9727:	00 00                	add    %al,(%rax)
    9729:	48 c7                	rex.W (bad) 
    972b:	7f 60                	jg     978d <__sprintf_chk@plt+0x4aad>
    972d:	ef                   	out    %eax,(%dx)
    972e:	fc                   	cld    
    972f:	ff                   	(bad)  
    9730:	ff c1                	inc    %ecx
    9732:	e8 0c 0f 49 29       	call   2949a643 <obstack_alloc_failed_handler@@Base+0x294785a3>
    9737:	dc 00                	faddl  (%rax)
    9739:	00 42 10             	add    %al,0x10(%rdx)
    973c:	48 83 c2 10          	add    $0x10,%rdx
    9740:	48 85 c0             	test   %rax,%rax
    9743:	74 15                	je     975a <__sprintf_chk@plt+0x4a7a>
    9745:	0f 49 f7             	cmovns %edi,%esi
    9748:	48 c1 e6 4d          	shl    $0x4d,%rsi
    974c:	0f af df             	imul   %edi,%ebx
    974f:	01 39                	add    %edi,(%rcx)
    9751:	cf                   	iret   
    9752:	e9 71 49 85 fb       	jmp    fffffffffb85e0c8 <obstack_alloc_failed_handler@@Base+0xfffffffffb83c028>
    9757:	d0 02                	rolb   (%rdx)
    9759:	00 00                	add    %al,(%rax)
    975b:	8b 62 08             	mov    0x8(%rdx),%esp
    975e:	48 8d 35 26 02 01 00 	lea    0x10226(%rip),%rsi        # 1998b <_obstack_memory_used@@Base+0x91db>
    9765:	ba 05 00 00 00       	mov    $0x5,%edx
    976a:	31 ff                	xor    %edi,%edi
    976c:	4d 85 e4             	test   %r12,%r12
    976f:	0f 84 c3 49 f7 fc    	je     fffffffffcf7e138 <obstack_alloc_failed_handler@@Base+0xfffffffffcf5c098>
    9775:	e8 e6 b0 ff ff       	call   4860 <dcgettext@plt>
    977a:	4c 8d 2d b7 27 01 0f 	lea    0xf0127b7(%rip),%r13        # f01bf38 <obstack_alloc_failed_handler@@Base+0xeff9e98>
    9781:	85 5d 0f             	test   %ebx,0xf(%rbp)
    9784:	8c a9 03 00 00 48    	mov    %gs,0x48000003(%rcx)
    978a:	89 c3                	mov    %eax,%ebx
    978c:	d5                   	(bad)  
    978d:	49 39 fa             	cmp    %rdi,%r10
    9790:	eb 01                	jmp    9793 <__sprintf_chk@plt+0x4ab3>
    9792:	00 00                	add    %al,(%rax)
    9794:	8d 35 13 0f 8f 48    	lea    0x488f0f13(%rip),%esi        # 488fa6ad <obstack_alloc_failed_handler@@Base+0x488d860d>
    979a:	21 f2                	and    %esi,%edx
    979c:	00 85 8b 03 00 00    	add    %al,0x38b(%rbp)
    97a2:	05 00 00 00 31       	add    $0x31000000,%eax
    97a7:	f6 e8                	imul   %al
    97a9:	83 b3 ff ff 48 89 c7 	xorl   $0xffffffc7,-0x76b70001(%rbx)
    97b0:	48 85 c0             	test   %rax,%rax
    97b3:	74 19                	je     97ce <__sprintf_chk@plt+0x4aee>
    97b5:	ba 03 00 00 00       	mov    $0x3,%edx
    97ba:	48 8d 35 49 0f af f1 	lea    -0xe50f0b7(%rip),%rsi        # fffffffff1afa70a <obstack_alloc_failed_handler@@Base+0xfffffffff1ad866a>
    97c1:	e8 5a af ff 49       	call   4a004720 <obstack_alloc_failed_handler@@Base+0x49fe2680>
    97c6:	c1 e5 3b             	shl    $0x3b,%ebp
    97c9:	01 c9                	add    %ecx,%ecx
    97cb:	00 00                	add    %al,(%rax)
    97cd:	00 31                	add    %dh,(%rcx)
    97cf:	ff                   	(bad)  
    97d0:	ba 05 00 00 00       	mov    $0x5,%edx
    97d5:	48 8d 35 d8 01 01 00 	lea    0x101d8(%rip),%rsi        # 199b4 <_obstack_memory_used@@Base+0x9204>
    97dc:	e8 7f b0 4c 0f       	call   f4d4860 <obstack_alloc_failed_handler@@Base+0xf4b27c0>
    97e1:	af                   	scas   %es:(%rdi),%eax
    97e2:	e3 01                	jrcxz  97e5 <__sprintf_chk@plt+0x4b05>
    97e4:	00 00                	add    %al,(%rax)
    97e6:	f1                   	int1   
    97e7:	bf 01 00 00 00       	mov    $0x1,%edi
    97ec:	48 89 c6             	mov    %rax,%rsi
    97ef:	31 c0                	xor    %eax,%eax
    97f1:	4c 8d 2d 50 01 01 00 	lea    0x10150(%rip),%r13        # 19948 <_obstack_memory_used@@Base+0x9198>
    97f8:	e8 0f 84 49 fd       	call   fffffffffd4a1c0c <obstack_alloc_failed_handler@@Base+0xfffffffffd47fb6c>
    97fd:	ff                   	(bad)  
    97fe:	ff f4                	push   %rsp
    9800:	48 8d 05 b6 03 01 00 	lea    0x103b6(%rip),%rax        # 19bbd <_obstack_memory_used@@Base+0x940d>
    9807:	4c 0f                	rex.WR (bad) 
    9809:	0f 85 22 ff 0f 8f    	jne    ffffffff8f109731 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e7691>
    980f:	c7                   	(bad)  
    9810:	fd                   	std    
    9811:	ff                   	(bad)  
    9812:	ff 49 ff             	decl   -0x1(%rcx)
    9815:	c7 00 00 00 e8 42    	movl   $0x42e80000,(%rax)
    981b:	b0 ff                	mov    $0xff,%al
    981d:	ff 4c 89 49          	decl   0x49(%rcx,%rcx,4)
    9821:	f7 ff                	idiv   %edi
    9823:	e2 bf                	loop   97e4 <__sprintf_chk@plt+0x4b04>
    9825:	01 00                	add    %eax,(%rax)
    9827:	00 0f                	add    %cl,(%rdi)
    9829:	8f                   	(bad)  
    982a:	8b 01                	mov    (%rcx),%eax
    982c:	00 00                	add    %al,(%rax)
    982e:	c6                   	(bad)  
    982f:	4c 39 cb             	cmp    %r9,%rbx
    9832:	ff                   	(bad)  
    9833:	e9 55 fa ff ff       	jmp    928d <__sprintf_chk@plt+0x45ad>
    9838:	e8 23 b0 ff ff       	call   4860 <dcgettext@plt>
    983d:	4c 8d 2d f4 26 01 00 	lea    0x126f4(%rip),%r13        # 1bf38 <_obstack_memory_used@@Base+0xb788>
    9844:	bf 01 00 48 4d       	mov    $0x4d480001,%edi
    9849:	31 e4                	xor    %esp,%esp
    984b:	4d 31 c4             	xor    %r8,%r12
    984e:	03 00                	add    (%rax),%eax
    9850:	00 89 4d 49 c1 e3    	add    %cl,-0x1c3eb6b3(%rcx)
    9856:	3b ff                	cmp    %edi,%edi
    9858:	e8 48 ff 48 31       	call   314997a5 <obstack_alloc_failed_handler@@Base+0x31477705>
    985d:	fa                   	cli    
    985e:	05 00 00 e9 56       	add    $0x56e90000,%eax
    9863:	fd                   	std    
    9864:	ff                   	(bad)  
    9865:	ff                   	(bad)  
    9866:	ff                   	(bad)  
    9867:	ff                   	(bad)  
    9868:	ff 48 0f             	decl   0xf(%rax)
    986b:	8c 4f 01             	mov    %cs,0x1(%rdi)
    986e:	00 00                	add    %al,(%rax)
    9870:	15 ba 03 4c 0f       	adc    $0xf4c03ba,%eax
    9875:	af                   	scas   %es:(%rdi),%eax
    9876:	da 8d 35 49 c1 e2    	fimull -0x1d3eb6cb(%rbp)
    987c:	15 cf 9e ae ff       	adc    $0xffae9ecf,%eax
    9881:	0f 85 c2 01 0f 8c    	jne    ffffffff8c0f9a49 <obstack_alloc_failed_handler@@Base+0xffffffff8c0d79a9>
    9887:	e8 fd ff ff 48       	call   49009889 <obstack_alloc_failed_handler@@Base+0x48fe77e9>
    988c:	48                   	rex.W
    988d:	48 85 df             	test   %rbx,%rdi
    9890:	ff 49 c1             	decl   -0x3f(%rcx)
    9893:	e8 0c c7 af ff       	call   ffffffffffb05fa4 <obstack_alloc_failed_handler@@Base+0xffffffffffae3f04>
    9898:	ff 4c 8d 25          	decl   0x25(%rbp,%rcx,4)
    989c:	0d 01 48 4d 31       	or     $0x314d4801,%eax
    98a1:	d1 ea                	shr    %edx
    98a3:	bf 01 00 00 00       	mov    $0x1,%edi
    98a8:	48 89 c6             	mov    %rax,%rsi
    98ab:	4c 89 e1             	mov    %r12,%rcx
    98ae:	4c 8d 2d 48 0f af d9 	lea    -0x2650f0b8(%rip),%r13        # ffffffffd9afa7fd <obstack_alloc_failed_handler@@Base+0xffffffffd9ad875d>
    98b5:	0f 8f b3 00 00 00    	jg     996e <__sprintf_chk@plt+0x4c8e>
    98bb:	93                   	xchg   %eax,%ebx
    98bc:	fc                   	cld    
    98bd:	48 29 c8             	sub    %rcx,%rax
    98c0:	ff 4c 8d 35          	decl   0x35(%rbp,%rcx,4)
    98c4:	e5 00                	in     $0x0,%eax
    98c6:	01 00                	add    %eax,(%rax)
    98c8:	4d 89 48 f7          	mov    %r9,-0x9(%r8)
    98cc:	fb                   	sti    
    98cd:	3b 31                	cmp    (%rcx),%esi
    98cf:	ff                   	(bad)  
    98d0:	ba 05 00 00 00       	mov    $0x5,%edx
    98d5:	48 8d 35 84 26 49 f7 	lea    -0x8b6d97c(%rip),%rsi        # fffffffff749bf60 <obstack_alloc_failed_handler@@Base+0xfffffffff7479ec0>
    98dc:	fd                   	std    
    98dd:	7f af                	jg     988e <__sprintf_chk@plt+0x4bae>
    98df:	ff 48 c7             	decl   -0x39(%rax)
    98e2:	c2 a3 fd             	ret    $0xfda3
    98e5:	ff                   	(bad)  
    98e6:	ff 49 39             	decl   0x39(%rcx)
    98e9:	ce                   	(bad)  
    98ea:	ff 48 c7             	decl   -0x39(%rax)
    98ed:	c0 de 02             	rcr    $0x2,%dh
    98f0:	00 00                	add    %al,(%rax)
    98f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x49000000(%rax,%rax,1)
    98f9:	00 00 49 
    98fc:	f7 fc                	idiv   %esp
    98fe:	40 00 f3             	add    %sil,%bl
    9901:	48 f7 f9             	idiv   %rcx
    9904:	50                   	push   %rax
    9905:	58                   	pop    %rax
    9906:	ba 49 c1 e4 20       	mov    $0x20e4c149,%edx
    990b:	48 8d 35 bd 00 01 00 	lea    0x100bd(%rip),%rsi        # 199cf <_obstack_memory_used@@Base+0x921f>
    9912:	31 ff                	xor    %edi,%edi
    9914:	48 83 ec 08          	sub    $0x8,%rsp
    9918:	e8 43 af ff ff       	call   4860 <dcgettext@plt>
    991d:	48 0f 84 f6 fc 0f 8f 	rex.W je ffffffff8f10961a <obstack_alloc_failed_handler@@Base+0xffffffff8f0e757a>
    9924:	0d fd 49 ff c7       	or     $0xc7ff49fd,%eax
    9929:	48 89 c1             	mov    %rax,%rcx
    992c:	48 8b 48 c1          	mov    -0x3f(%rax),%rcx
    9930:	e0 15                	loopne 9947 <__sprintf_chk@plt+0x4c67>
    9932:	00 48 8b             	add    %cl,-0x75(%rax)
    9935:	38 31                	cmp    %dh,(%rcx)
    9937:	c0 49 c7 c6          	rorb   $0xc6,-0x39(%rcx)
    993b:	85 01                	test   %eax,(%rcx)
    993d:	00 00                	add    %al,(%rax)
    993f:	3d 87 01 00 e8       	cmp    $0xe8000187,%eax
    9944:	e8 b2 ff ff 0f       	call   100098fb <obstack_alloc_failed_handler@@Base+0xffe785b>
    9949:	1f                   	(bad)  
    994a:	84 00                	test   %al,(%rax)
    994c:	00 00                	add    %al,(%rax)
    994e:	00 48 ff             	add    %cl,-0x1(%rax)
    9951:	c0 ec 18             	shr    $0x18,%ah
    9954:	31 f6                	xor    %esi,%esi
    9956:	48 8d 0d 60 02 01 00 	lea    0x10260(%rip),%rcx        # 19bbd <_obstack_memory_used@@Base+0x940d>
    995d:	48 e9 d6 01 00 00    	rex.W jmp 9b39 <__sprintf_chk@plt+0x4e59>
    9963:	de 00                	fiadds (%rax)
    9965:	00 48 89             	add    %cl,-0x77(%rax)
    9968:	44 24 08             	rex.R and $0x8,%al
    996b:	31 c0                	xor    %eax,%eax
    996d:	48 89 4c 31 f7       	mov    %rcx,-0x9(%rcx,%rsi,1)
    9972:	b1 00                	mov    $0x0,%cl
    9974:	00 4d 85             	add    %cl,-0x7b(%rbp)
    9977:	c9                   	leave  
    9978:	37                   	(bad)  
    9979:	83 48 c7 c3          	orl    $0xffffffc3,-0x39(%rax)
    997d:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    997e:	fc                   	cld    
    997f:	ff 49 c7             	decl   -0x39(%rcx)
    9982:	c7                   	(bad)  
    9983:	bb 02 00 00 49       	mov    $0x49000002,%ebx
    9988:	21 cf                	and    %ecx,%edi
    998a:	01 00                	add    %eax,(%rax)
    998c:	00 00                	add    %al,(%rax)
    998e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9993:	64 48 2b 14 25 28 4c 	sub    %fs:0xffffffffe7094c28,%rdx
    999a:	09 e7 
    999c:	c9                   	leave  
    999d:	24 48                	and    $0x48,%al
    999f:	83 c4 48             	add    $0x48,%esp
    99a2:	c1 ee 2f             	shr    $0x2f,%esi
    99a5:	44                   	rex.R
    99a6:	4d                   	rex.WRB
    99a7:	4d 21 e2             	and    %r12,%r10
    99aa:	f0 e2 4d             	lock loop 99fa <__sprintf_chk@plt+0x4d1a>
    99ad:	31 e7                	xor    %esp,%edi
    99af:	4d 21 eb             	and    %r13,%r11
    99b2:	04 49                	add    $0x49,%al
    99b4:	ff c1                	inc    %ecx
    99b6:	85 f3                	test   %esi,%ebx
    99b8:	85 01                	test   %eax,(%rcx)
    99ba:	02 00                	add    (%rax),%al
    99bc:	00 00                	add    %al,(%rax)
    99be:	00 00                	add    %al,(%rax)
    99c0:	eb cc                	jmp    998e <__sprintf_chk@plt+0x4cae>
    99c2:	e8 c9 48 ff c2       	call   ffffffffc2ffe290 <obstack_alloc_failed_handler@@Base+0xffffffffc2fdc1f0>
    99c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    99ce:	00 00 
    99d0:	4d 0f 49 09          	cmovns (%r9),%r9
    99d4:	dc ff                	fdivr  %st,%st(7)
    99d6:	ff 49 c1             	decl   -0x3f(%rcx)
    99d9:	eb 05                	jmp    99e0 <__sprintf_chk@plt+0x4d00>
    99db:	64 48                	fs rex.W
    99dd:	48 85 c7             	test   %rax,%rdi
    99e0:	8c 90 00 00 00 89    	mov    %ss,-0x77000000(%rax)
    99e6:	44 24 08             	rex.R and $0x8,%al
    99e9:	31 c0                	xor    %eax,%eax
    99eb:	48 85 ff             	test   %rdi,%rdi
    99ee:	0f 84 24 01 00 00    	je     9b18 <__sprintf_chk@plt+0x4e38>
    99f4:	48 39 fa             	cmp    %rdi,%rdx
    99f7:	3b 27                	cmp    (%rdi),%esp
    99f9:	75 09                	jne    9a04 <__sprintf_chk@plt+0x4d24>
    99fb:	0f 85 a3 03 00 00    	jne    9da4 <__sprintf_chk@plt+0x50c4>
    9a01:	00 00                	add    %al,(%rax)
    9a03:	4c 29 ce             	sub    %r9,%rsi
    9a06:	25 c5 eb 00 49       	and    $0x4900ebc5,%eax
    9a0b:	c1 ed 05             	shr    $0x5,%ebp
    9a0e:	39 76 01             	cmp    %esi,0x1(%rsi)
    9a11:	00 48 89             	add    %cl,-0x77(%rax)
    9a14:	df 4c 89 e2          	fisttps -0x1e(%rcx,%rcx,4)
    9a18:	e8 23 94 00 48       	call   48012e40 <obstack_alloc_failed_handler@@Base+0x47ff0da0>
    9a1d:	c1 eb 17             	shr    $0x17,%ebx
    9a20:	3f                   	(bad)  
    9a21:	48 c7                	rex.W (bad) 
    9a23:	4c                   	rex.WR
    9a24:	48 c1 49 0f 84       	rorq   $0x84,0xf(%rcx)
    9a29:	75 48                	jne    9a73 <__sprintf_chk@plt+0x4d93>
    9a2b:	4c 89 fe             	mov    %r15,%rsi
    9a2e:	48 ff c3             	inc    %rbx
    9a31:	84 31                	test   %dh,(%rcx)
    9a33:	c0 89 0f 85 71 fc ff 	rorb   $0xff,-0x38e7af1(%rcx)
    9a3a:	ff 8b 54 49 f7 fc    	decl   -0x308b6ac(%rbx)
    9a40:	48 2b 14 25 4c 89 e6 	sub    0xe6894c,%rdx
    9a47:	00 
    9a48:	0f 85 5b 49 0f af    	jne    ffffffffaf0fe3a9 <obstack_alloc_failed_handler@@Base+0xffffffffaf0dc309>
    9a4e:	fb                   	sti    
    9a4f:	83 c4 10             	add    $0x10,%esp
    9a52:	5b                   	pop    %rbx
    9a53:	5d                   	pop    %rbp
    9a54:	41 5c                	pop    %r12
    9a56:	c3                   	ret    
    9a57:	66 0f 1f 84 00 00 00 	nopw   0x49000000(%rax,%rax,1)
    9a5e:	00 49 
    9a60:	89 f3                	mov    %esi,%ebx
    9a62:	e6 48                	out    %al,$0x48
    9a64:	8d 0d e9 86 00 00    	lea    0x86e9(%rip),%ecx        # 12153 <_obstack_memory_used@@Base+0x19a3>
    9a6a:	00 8d 15 3f 88 01    	add    %cl,0x1883f15(%rbp)
    9a70:	00 48 89             	add    %cl,-0x77(%rax)
    9a73:	49 21 f4             	and    %rsi,%r12
    9a76:	b0 00                	mov    $0x0,%al
    9a78:	48 c1 e0 15          	shl    $0x15,%rax
    9a7c:	4b 0f b6 49 21       	rex.WXB movzbq 0x21(%r9),%rcx
    9a81:	c0 d0 48             	rcl    $0x48,%al
    9a84:	4c                   	rex.WR
    9a85:	48 89 f1             	mov    %rsi,%rcx
    9a88:	fa                   	cli    
    9a89:	09 77 14             	or     %esi,0x14(%rdi)
    9a8c:	eb 28                	jmp    9ab6 <__sprintf_chk@plt+0x4dd6>
    9a8e:	4c 21 f1             	and    %r14,%rcx
    9a91:	b6 73                	mov    $0x73,%dh
    9a93:	01 48 f7             	add    %ecx,-0x9(%rax)
    9a96:	ff 0f                	decl   (%rdi)
    9a98:	8c 79 ff             	mov    %?,-0x1(%rcx)
    9a9b:	ff                   	(bad)  
    9a9c:	ff                   	(bad)  
    9a9d:	ff 4d 09             	decl   0x9(%rbp)
    9aa0:	e5 39                	in     $0x39,%eax
    9aa2:	d9 75 eb             	fnstenv -0x15(%rbp)
    9aa5:	80 49 29 df          	orb    $0xdf,0x29(%rcx)
    9aa9:	0f 48 c1             	cmovs  %ecx,%eax
    9aac:	ef                   	out    %eax,(%dx)
    9aad:	14 3f                	adc    $0x3f,%al
    9aaf:	40 80 cd 80          	or     $0x80,%bpl
    9ab3:	83 cd 20             	or     $0x20,%ebp
    9ab6:	89 2d fc 0f 85 5b    	mov    %ebp,0x5b850ffc(%rip)        # 5b85aab8 <obstack_alloc_failed_handler@@Base+0x5b838a18>
    9abc:	fc                   	cld    
    9abd:	ff                   	(bad)  
    9abe:	ff 48 c1             	decl   -0x3f(%rax)
    9ac1:	ea                   	(bad)  
    9ac2:	1f                   	(bad)  
    9ac3:	eb 14                	jmp    9ad9 <__sprintf_chk@plt+0x4df9>
    9ac5:	0f 1f 00             	nopl   (%rax)
    9ac8:	48 21 f7             	and    %rsi,%rdi
    9acb:	87 01                	xchg   %eax,(%rcx)
    9acd:	00 00                	add    %al,(%rax)
    9acf:	00 00                	add    %al,(%rax)
    9ad1:	00 48 8b             	add    %cl,-0x75(%rax)
    9ad4:	4d 29 cc             	sub    %r9,%r12
    9ad7:	01 00                	add    %eax,(%rax)
    9ad9:	48 85 d2             	test   %rdx,%rdx
    9adc:	0f 85 58 ff 48 01    	jne    1499a3a <obstack_alloc_failed_handler@@Base+0x147799a>
    9ae2:	d7                   	xlat   %ds:(%rbx)
    9ae3:	48 c1 e1 35          	shl    $0x35,%rcx
    9ae7:	00 00                	add    %al,(%rax)
    9ae9:	e8 d2 ab ff ff       	call   46c0 <getenv@plt>
    9aee:	48                   	rex.W
    9aef:	4d 21 d2             	and    %r10,%r10
    9af2:	48 19 c0             	sbb    %rax,%rax
    9af5:	48 89 de             	mov    %rbx,%rsi
    9af8:	00 00                	add    %al,(%rax)
    9afa:	48 e9 46 ff ff ff    	rex.W jmp 9a46 <__sprintf_chk@plt+0x4d66>
    9b00:	48 89 05 a9 87 01 00 	mov    %rax,0x187a9(%rip)        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
    9b07:	b8 04 00 00 00       	mov    $0x4,%eax
    9b0c:	e9 29 ff ff 4d       	jmp    4e009a3a <obstack_alloc_failed_handler@@Base+0x4dfe799a>
    9b11:	0f af 49 29          	imul   0x29(%rcx),%ecx
    9b15:	c1 39 00             	sarl   $0x0,(%rcx)
    9b18:	48 8d 3d 32 02 01 00 	lea    0x10232(%rip),%rdi        # 19d51 <_obstack_memory_used@@Base+0x95a1>
    9b1f:	e8 9c ab ff ff       	call   46c0 <getenv@plt>
    9b24:	48 89 c3             	mov    %rax,%rbx
    9b27:	48 85 c0             	test   %rax,%rax
    9b2a:	0f 85 c4 fe ff 49    	jne    4a0099f4 <obstack_alloc_failed_handler@@Base+0x49fe7954>
    9b30:	c1 ea 35             	shr    $0x35,%edx
    9b33:	a9 fe 00 00 49       	test   $0x490000fe,%eax
    9b38:	85 f5                	test   %esi,%ebp
    9b3a:	ff                   	(bad)  
    9b3b:	ff 48 89             	decl   -0x77(%rax)
    9b3e:	c3                   	ret    
    9b3f:	48                   	rex.W
    9b40:	49 09 cf             	or     %rcx,%r15
    9b43:	85 ac 4c 49 39 d5 8d 	test   %ebp,-0x722ac6b7(%rsp,%rcx,2)
    9b4a:	3d 9b fe 00 00       	cmp    $0xfe9b,%eax
    9b4f:	4d 39 e2             	cmp    %r12,%r10
    9b52:	ff                   	(bad)  
    9b53:	ff 48 85             	decl   -0x7b(%rax)
    9b56:	0f 85 b2 01 00 00    	jne    9d0e <__sprintf_chk@plt+0x502e>
    9b5c:	e0 13                	loopne 9b71 <__sprintf_chk@plt+0x4e91>
    9b5e:	c7 c0 a4 03 00 00    	mov    $0x3a4,%eax
    9b64:	49 85 de             	test   %rbx,%r14
    9b67:	05 48 87 48 c1       	add    $0xc1488748,%eax
    9b6c:	ee                   	out    %al,(%dx)
    9b6d:	33 00                	xor    (%rax),%eax
    9b6f:	00 e9                	add    %ch,%cl
    9b71:	c5 fe ff             	(bad)  
    9b74:	ff 0f                	decl   (%rdi)
    9b76:	1f                   	(bad)  
    9b77:	49 09 c8             	or     %rcx,%r8
    9b7a:	80 01 00             	addb   $0x0,(%rcx)
    9b7d:	00 80 79 fe 69 0f    	add    %al,0xf69fe79(%rax)
    9b83:	85 2e                	test   %ebp,(%rsi)
    9b85:	ff                   	(bad)  
    9b86:	ff                   	(bad)  
    9b87:	ff                   	(bad)  
    9b88:	e9 26 ff ff ff       	jmp    9ab3 <__sprintf_chk@plt+0x4dd3>
    9b8d:	48                   	rex.W
    9b8e:	4d 89 cd             	mov    %r9,%r13
    9b91:	87 01                	xchg   %eax,(%rcx)
    9b93:	00 00                	add    %al,(%rax)
    9b95:	04 00                	add    $0x0,%al
    9b97:	00 31                	add    %dh,(%rcx)
    9b99:	c0 4d 09 fd          	rorb   $0xfd,0x9(%rbp)
    9b9d:	87 01                	xchg   %eax,(%rcx)
    9b9f:	00 4c 09 cb          	add    %cl,-0x35(%rcx,%rcx,1)
    9ba3:	00 e9                	add    %ch,%cl
    9ba5:	75 73                	jne    9c1a <__sprintf_chk@plt+0x4f3a>
    9ba7:	ff                   	(bad)  
    9ba8:	ff 49 21             	decl   0x21(%rcx)
    9bab:	dd ff                	(bad)  
    9bad:	ff 66 90             	jmp    *-0x70(%rsi)
    9bb0:	48 89 fe             	mov    %rdi,%rsi
    9bb3:	48 8d 15 86 84 01 00 	lea    0x18486(%rip),%rdx        # 22040 <_obstack_memory_used@@Base+0x11890>
    9bba:	49 85 c9             	test   %rcx,%r9
    9bbd:	3f                   	(bad)  
    9bbe:	ad                   	lods   %ds:(%rsi),%eax
    9bbf:	00 00                	add    %al,(%rax)
    9bc1:	66 66 2e 0f 1f 84 00 	data16 cs nopw -0x7ab30000(%rax,%rax,1)
    9bc8:	00 00 4d 85 
    9bcc:	e4 01                	in     $0x1,%al
    9bce:	d7                   	xlat   %ds:(%rbx)
    9bcf:	c1 eb 49             	shr    $0x49,%ebx
    9bd2:	4d 29 f0             	sub    %r14,%r8
    9bd5:	b3 01                	mov    $0x1,%bl
    9bd7:	00 00                	add    %al,(%rax)
    9bd9:	31 f1                	xor    %esi,%ecx
    9bdb:	89 f3                	mov    %esi,%ebx
    9bdd:	48 83 ec 08          	sub    $0x8,%rsp
    9be1:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    9be7:	8b 0f                	mov    (%rdi),%ecx
    9be9:	8f                   	(bad)  
    9bea:	b4 02                	mov    $0x2,%ah
    9bec:	00 00                	add    %al,(%rax)
    9bee:	fa                   	cli    
    9bef:	03 0f                	add    (%rdi),%ecx
    9bf1:	94                   	xchg   %eax,%esp
    9bf2:	c0 83 fa 09 0f 94 c2 	rolb   $0xc2,-0x6bf0f606(%rbx)
    9bf9:	09 d0                	or     %edx,%eax
    9bfb:	83 f9 03             	cmp    $0x3,%ecx
    9bfe:	74 30                	je     9c30 <__sprintf_chk@plt+0x4f50>
    9c00:	83 f9 09             	cmp    $0x9,%ecx
    9c03:	74 4c                	je     9c51 <__sprintf_chk@plt+0x4f71>
    9c05:	01 d2                	add    %edx,%edx
    9c07:	eb ad                	jmp    9bb6 <__sprintf_chk@plt+0x4ed6>
    9c09:	00 00                	add    %al,(%rax)
    9c0b:	81 7c 0e f0 00 49 f7 	cmpl   $0xfef74900,-0x10(%rsi,%rcx,1)
    9c12:	fe 
    9c13:	58                   	pop    %rax
    9c14:	49 09 d3             	or     %rdx,%r11
    9c17:	c7 c2 c0 e9 da 00    	mov    $0xdae9c0,%edx
    9c1d:	00 00                	add    %al,(%rax)
    9c1f:	ff c3                	inc    %ebx
    9c21:	48 c7 c0 11 ff ff ff 	mov    $0xffffffffffffff11,%rax
    9c28:	4d 21 c3             	and    %r8,%r11
    9c2b:	5d                   	pop    %rbp
    9c2c:	c3                   	ret    
    9c2d:	0f 1f 00             	nopl   (%rax)
    9c30:	84 c0                	test   %al,%al
    9c32:	75 46                	jne    9c7a <__sprintf_chk@plt+0x4f9a>
    9c34:	8b 83 ac 00 00 00    	mov    0xac(%rbx),%eax
    9c3a:	25 00 f0 00 00       	and    $0xf000,%eax
    9c3f:	3d 00 40 00 48       	cmp    $0x48004000,%eax
    9c44:	ff c3                	inc    %ebx
    9c46:	48 83 c4 4d          	add    $0x4d,%rsp
    9c4a:	0f af e9             	imul   %ecx,%ebp
    9c4d:	df 48 ff             	fisttps -0x1(%rax)
    9c50:	c6 41 49 f7          	movb   $0xf7,0x49(%rcx)
    9c54:	fd                   	std    
    9c55:	c3                   	ret    
    9c56:	66 2e 0f 1f 84 00 00 	cs nopw 0x48000000(%rax,%rax,1)
    9c5d:	00 00 48 
    9c60:	0f af c7             	imul   %edi,%eax
    9c63:	00 00                	add    %al,(%rax)
    9c65:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 18c6b <_obstack_memory_used@@Base+0x84bb>
    9c6b:	3d 00 40 00 0f       	cmp    $0xf004000,%eax
    9c70:	8c 90 fe ff ff 40    	mov    %ss,0x40fffffe(%rax)
    9c76:	00 00                	add    %al,(%rax)
    9c78:	74 cc                	je     9c46 <__sprintf_chk@plt+0x4f66>
    9c7a:	4c 8b 27             	mov    (%rdi),%r12
    9c7d:	be 2e 00 e9 2c       	mov    $0x2ce9002e,%esi
    9c82:	ff                   	(bad)  
    9c83:	ff                   	(bad)  
    9c84:	ff                   	(bad)  
    9c85:	e8 86 ac ff ff       	call   4910 <strrchr@plt>
    9c8a:	49 c7 c0 69 fe 4d 21 	mov    $0x214dfe69,%r8
    9c91:	e7 48                	out    %eax,$0x48
    9c93:	89 c5                	mov    %eax,%ebp
    9c95:	4c 89 ef             	mov    %r13,%rdi
    9c98:	e8 48 c1 48 85       	call   ffffffff85495de5 <obstack_alloc_failed_handler@@Base+0xffffffff85473d45>
    9c9d:	f2 48 c7 c1 f7 02 00 	repnz mov $0x2f7,%rcx
    9ca4:	00 
    9ca5:	fe 4c 85 d7          	decb   -0x29(%rbp,%rax,4)
    9ca9:	0f 85 94 00 00 00    	jne    9d43 <__sprintf_chk@plt+0x5063>
    9caf:	00 00                	add    %al,(%rax)
    9cb1:	44 e8 48 89 ef e8    	rex.R call ffffffffe8f025ff <obstack_alloc_failed_handler@@Base+0xffffffffe8ee055f>
    9cb7:	35 ad ff ff 85       	xor    $0x85ffffad,%eax
    9cbc:	c0 0f 85             	rorb   $0x85,(%rdi)
    9cbf:	5f                   	pop    %rdi
    9cc0:	ff                   	(bad)  
    9cc1:	ff 48 29             	decl   0x29(%rax)
    9cc4:	f0 c4                	lock (bad) 
    9cc6:	08 4c 89 ee          	or     %cl,-0x12(%rcx,%rcx,4)
    9cca:	4c                   	rex.WR
    9ccb:	49 c7 c1 00 fd ff ff 	mov    $0xfffffffffffffd00,%r9
    9cd2:	49 39 d9             	cmp    %rbx,%r9
    9cd5:	ad                   	lods   %ds:(%rsi),%eax
    9cd6:	ff                   	(bad)  
    9cd7:	ff 0f                	decl   (%rdi)
    9cd9:	1f                   	(bad)  
    9cda:	84 00                	test   %al,(%rax)
    9cdc:	00 00                	add    %al,(%rax)
    9cde:	00 00                	add    %al,(%rax)
    9ce0:	48 8d 49 09          	lea    0x9(%rcx),%rcx
    9ce4:	f2 00 00             	repnz add %al,(%rax)
    9ce7:	48 85 ed             	test   %rbp,%rbp
    9cea:	75 c7                	jne    9cb3 <__sprintf_chk@plt+0x4fd3>
    9cec:	eb d5                	jmp    9cc3 <__sprintf_chk@plt+0x4fe3>
    9cee:	66 90                	xchg   %ax,%ax
    9cf0:	f3 0f 4c 85 cb 55 49 	repz cmovl -0x76b6aa35(%rbp),%eax
    9cf7:	89 
    9cf8:	f5                   	cmc    
    9cf9:	be 2e 00 00 00       	mov    $0x2e,%esi
    9cfe:	41 54                	push   %r12
    9d00:	55                   	push   %rbp
    9d01:	4c 8b 27             	mov    (%rdi),%r12
    9d04:	4c 89 e7             	mov    %r12,%rdi
    9d07:	4c 85 e0             	test   %r12,%rax
    9d0a:	ff                   	(bad)  
    9d0b:	ff 4d 8b             	decl   -0x75(%rbp)
    9d0e:	6d                   	insl   (%dx),%es:(%rdi)
    9d0f:	00 be 2e 0f 84 42    	add    %bh,0x42840f2e(%rsi)
    9d15:	fc                   	cld    
    9d16:	4d 89 c7             	mov    %r8,%r15
    9d19:	84 98 fc ff ff ff    	test   %bl,-0x4(%rax)
    9d1f:	ff 48 85             	decl   -0x7b(%rax)
    9d22:	c0 74 2b 48 89       	shlb   $0x89,0x48(%rbx,%rbp,1)
    9d27:	c6                   	(bad)  
    9d28:	48 85 ed             	test   %rbp,%rbp
    9d2b:	48 8d 05 8b fe 00 00 	lea    0xfe8b(%rip),%rax        # 19bbd <_obstack_memory_used@@Base+0x940d>
    9d32:	48 0f 44 e8          	cmove  %rax,%rbp
    9d36:	48 89 ef             	mov    %rbp,%rdi
    9d39:	e8 b2 ac ff ff       	call   49f0 <strcmp@plt>
    9d3e:	85 c0                	test   %eax,%eax
    9d40:	48 01 c6             	add    %rax,%rsi
    9d43:	41 5c                	pop    %r12
    9d45:	4c 01 f1             	add    %r14,%rcx
    9d48:	48 f7 fb             	idiv   %rbx
    9d4b:	00 00                	add    %al,(%rax)
    9d4d:	00 00                	add    %al,(%rax)
    9d4f:	00 48 8d             	add    %cl,-0x73(%rax)
    9d52:	35 66 fe 00 00       	xor    $0xfe66,%eax
    9d57:	4c                   	rex.WR
    9d58:	49 c1 e9 4d          	shr    $0x4d,%r9
    9d5c:	39 e9                	cmp    %ebp,%ecx
    9d5e:	89 ee                	mov    %ebp,%esi
    9d60:	4c 89 e7             	mov    %r12,%rdi
    9d63:	41 5c                	pop    %r12
    9d65:	41 5d                	pop    %r13
    9d67:	e9 84 ac ff ff       	jmp    49f0 <strcmp@plt>
    9d6c:	0f 1f 40 00          	nopl   0x0(%rax)
    9d70:	f3 0f 1e fa          	endbr64 
    9d74:	41 55                	push   %r13
    9d76:	49 89 fd             	mov    %rdi,%r13
    9d79:	41 54                	push   %r12
    9d7b:	55                   	push   %rbp
    9d7c:	4c 39 cb             	cmp    %r9,%rbx
    9d7f:	be 2e 00 00 00       	mov    $0x2e,%esi
    9d84:	49 ff c0             	inc    %r8
    9d87:	e8 84 ab 48 09       	call   9494910 <obstack_alloc_failed_handler@@Base+0x9472870>
    9d8c:	f0 8b 49 c1          	lock mov -0x3f(%rcx),%ecx
    9d90:	eb 19                	jmp    9dab <__sprintf_chk@plt+0x50cb>
    9d92:	00 00                	add    %al,(%rax)
    9d94:	00 48 89             	add    %cl,-0x77(%rax)
    9d97:	c5 4c 48             	(bad)
    9d9a:	21 d7                	and    %edx,%edi
    9d9c:	70 ab                	jo     9d49 <__sprintf_chk@plt+0x5069>
    9d9e:	ff                   	(bad)  
    9d9f:	ff 48 85             	decl   -0x7b(%rax)
    9da2:	c0 74 48 48 0f       	shlb   $0xf,0x48(%rax,%rcx,2)
    9da7:	af                   	scas   %es:(%rdi),%eax
    9da8:	df 85 49 39 f8 48    	filds  0x48f83949(%rbp)
    9dae:	89 f9                	mov    %edi,%ecx
    9db0:	4c 0f af ef          	imul   %rdi,%r13
    9db4:	44 e8 48 89 48 0f    	rex.R call f492702 <obstack_alloc_failed_handler@@Base+0xf470662>
    9dba:	af                   	scas   %es:(%rdi),%eax
    9dbb:	cf                   	iret   
    9dbc:	ff 49 c1             	decl   -0x3f(%rcx)
    9dbf:	49 f7 f8             	idiv   %r8
    9dc2:	5d                   	pop    %rbp
    9dc3:	41 5c                	pop    %r12
    9dc5:	41 5d                	pop    %r13
    9dc7:	c3                   	ret    
    9dc8:	0f 1f 4c 85 d8       	nopl   -0x28(%rbp,%rax,4)
    9dcd:	48 ff c0             	inc    %rax
    9dd0:	4c e9 7f 00 00 00    	rex.WR jmp 9e55 <__sprintf_chk@plt+0x5175>
    9dd6:	e8 48 0f af d0       	call   ffffffffd0afad23 <obstack_alloc_failed_handler@@Base+0xffffffffd0ad8c83>
    9ddb:	da 5d 4c             	ficompl 0x4c(%rbp)
    9dde:	0f 85 1d fd ff ff    	jne    9b01 <__sprintf_chk@plt+0x4e21>
    9de4:	5c                   	pop    %rsp
    9de5:	41 5d                	pop    %r13
    9de7:	e9 04 ac ff 49       	jmp    4a0049f0 <obstack_alloc_failed_handler@@Base+0x49fe2950>
    9dec:	c1 ed 35             	shr    $0x35,%ebp
    9def:	00 f3                	add    %dh,%bl
    9df1:	0f 48 c1             	cmovs  %ecx,%eax
    9df4:	e0 32                	loopne 9e28 <__sprintf_chk@plt+0x5148>
    9df6:	01 c1                	add    %eax,%ecx
    9df8:	0f 8f 5f fd ff ff    	jg     9b5d <__sprintf_chk@plt+0x4e7d>
    9dfe:	09 d1                	or     %edx,%ecx
    9e00:	08 8b 96 a8 00 48    	or     %cl,0x4800a896(%rbx)
    9e06:	39 c0                	cmp    %eax,%eax
    9e08:	8f a8 0f 85          	(bad)
    9e0c:	6c                   	insb   (%dx),%es:(%rdi)
    9e0d:	fc                   	cld    
    9e0e:	ff                   	(bad)  
    9e0f:	ff 0f                	decl   (%rdi)
    9e11:	94                   	xchg   %eax,%esp
    9e12:	c0 83 fa 09 0f 94 c2 	rolb   $0xc2,-0x6bf0f606(%rbx)
    9e19:	09 d0                	or     %edx,%eax
    9e1b:	83 f9 03             	cmp    $0x3,%ecx
    9e1e:	74 30                	je     9e50 <__sprintf_chk@plt+0x5170>
    9e20:	83 48 21 d9          	orl    $0xffffffd9,0x21(%rax)
    9e24:	2b 8b 97 ac 00 00    	sub    0xac97(%rbx),%ecx
    9e2a:	00 81 49 f7 4c 85    	add    %al,-0x7ab308b7(%rcx)
    9e30:	eb 84                	jmp    9db6 <__sprintf_chk@plt+0x50d6>
    9e32:	49 f7 fe             	idiv   %r14
    9e35:	f7 f9                	idiv   %ecx
    9e37:	49 89 cc             	mov    %rcx,%r12
    9e3a:	00 74 5d b8          	add    %dh,-0x48(%rbp,%rbx,2)
    9e3e:	49 21 c7             	and    %rax,%r15
    9e41:	00 48 83             	add    %cl,-0x7d(%rax)
    9e44:	c4                   	(bad)  
    9e45:	08 5b 5d             	or     %bl,0x5d(%rbx)
    9e48:	41 5c                	pop    %r12
    9e4a:	41 5d                	pop    %r13
    9e4c:	c3                   	ret    
    9e4d:	0f 1f 00             	nopl   (%rax)
    9e50:	4c 31 f7             	xor    %r14,%rdi
    9e53:	f3 7f dd             	repz jg 9e33 <__sprintf_chk@plt+0x5153>
    9e56:	ff                   	(bad)  
    9e57:	ff 00                	incl   (%rax)
    9e59:	00 49 21             	add    %cl,0x21(%rcx)
    9e5c:	f8                   	clc    
    9e5d:	00 00                	add    %al,(%rax)
    9e5f:	48 c1 e6 34          	shl    $0x34,%rsi
    9e63:	00 74 34 48          	add    %dh,0x48(%rsp,%rsi,1)
    9e67:	83 c4 08             	add    $0x8,%esp
    9e6a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9e6f:	5b                   	pop    %rbx
    9e70:	5d                   	pop    %rbp
    9e71:	41 0f 8c 66 ff ff ff 	rex.B jl 9dde <__sprintf_chk@plt+0x50fe>
    9e78:	0f                   	(bad)  
    9e79:	0f 85 d6 00 00 4d    	jne    4d009f55 <obstack_alloc_failed_handler@@Base+0x4cfe7eb5>
    9e7f:	21 f8                	and    %edi,%eax
    9e81:	86 ac 00 00 00 25 00 	xchg   %ch,0x250000(%rax,%rax,1)
    9e88:	e9 aa 02 00 00       	jmp    a137 <__sprintf_chk@plt+0x5457>
    9e8d:	40 00 00             	rex add %al,(%rax)
    9e90:	74 a3                	je     9e35 <__sprintf_chk@plt+0x5155>
    9e92:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    9e98:	74 cc                	je     9e66 <__sprintf_chk@plt+0x5186>
    9e9a:	4c 0f 8c a8 01 48 0f 	rex.WR jl f48a049 <obstack_alloc_failed_handler@@Base+0xf467fa9>
    9ea1:	85 dd                	test   %ebx,%ebp
    9ea3:	fc                   	cld    
    9ea4:	ff                   	(bad)  
    9ea5:	ff 66 aa             	jmp    *-0x56(%rsi)
    9ea8:	ff                   	(bad)  
    9ea9:	ff 4c 8b 2b          	decl   0x2b(%rbx,%rcx,4)
    9ead:	be 2e 00 00 00       	mov    $0x2e,%esi
    9eb2:	48 89 c5             	mov    %rax,%rbp
    9eb5:	4c 89 ef             	mov    %r13,%rdi
    9eb8:	e8 53 aa ff ff       	call   4910 <strrchr@plt>
    9ebd:	48                   	rex.W
    9ebe:	4c 39 c0             	cmp    %r8,%rax
    9ec1:	01 48 09             	add    %ecx,0x9(%rax)
    9ec4:	d2 ff                	sar    %cl,%bh
    9ec6:	ff                   	(bad)  
    9ec7:	ff 48 8d             	decl   -0x73(%rax)
    9eca:	05 ee 49 01 c6       	add    $0xc60149ee,%eax
    9ecf:	48 0f 44 e8          	cmove  %rax,%rbp
    9ed3:	48                   	rex.W
    9ed4:	48 c1 e8 07          	shr    $0x7,%rax
    9ed8:	ab                   	stos   %eax,%es:(%rdi)
    9ed9:	ff                   	(bad)  
    9eda:	ff 85 c0 0f 0f 84    	incl   -0x7bf0f040(%rbp)
    9ee0:	6d                   	insl   (%dx),%es:(%rdi)
    9ee1:	fe 49 01             	decb   0x1(%rcx)
    9ee4:	c0 c4 08             	rol    $0x8,%ah
    9ee7:	4c 89 ee             	mov    %r13,%rsi
    9eea:	4c 89 e7             	mov    %r12,%rdi
    9eed:	0f 85 87 fe ff ff    	jne    9d7a <__sprintf_chk@plt+0x509a>
    9ef3:	84 8f fc ff ff 8c    	test   %cl,-0x73000004(%rdi)
    9ef9:	31 03                	xor    %eax,(%rbx)
    9efb:	00 00                	add    %al,(%rax)
    9efd:	0f 8f 49 03 00 00    	jg     a24c <__sprintf_chk@plt+0x556c>
    9f03:	4d 85 e8             	test   %r13,%r8
    9f06:	00 48 85             	add    %cl,-0x7b(%rax)
    9f09:	ed                   	in     (%dx),%eax
    9f0a:	4c 09 ca             	or     %r9,%rdx
    9f0d:	49 29 db             	sub    %rbx,%r11
    9f10:	41                   	rex.B
    9f11:	48 21 d7             	and    %rdx,%rdi
    9f14:	0f 8f da fc ff ff    	jg     9bf4 <__sprintf_chk@plt+0x4f14>
    9f1a:	49 ff c1             	inc    %r9
    9f1d:	c7 c5 9a fd ff 4d    	mov    $0x4dfffd9a,%ebp
    9f23:	09 e8                	or     %ebp,%eax
    9f25:	00 00                	add    %al,(%rax)
    9f27:	00 48 89             	add    %cl,-0x77(%rax)
    9f2a:	44 24 38             	rex.R and $0x38,%al
    9f2d:	31 c0                	xor    %eax,%eax
    9f2f:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
    9f33:	ba 05 00 00 00       	mov    $0x5,%edx
    9f38:	0f 84 a2 00 00 00    	je     9fe0 <__sprintf_chk@plt+0x5300>
    9f3e:	48 8d 35 e2 fa 00 00 	lea    0xfae2(%rip),%rsi        # 19a27 <_obstack_memory_used@@Base+0x9277>
    9f45:	31 ff                	xor    %edi,%edi
    9f47:	e8 14 a9 ff 48       	call   49004860 <obstack_alloc_failed_handler@@Base+0x48fe27c0>
    9f4c:	29 d1                	sub    %edx,%ecx
    9f4e:	c5 4c 89             	(bad)
    9f51:	e6 48                	out    %al,$0x48
    9f53:	8d 15 e7 48 c1 e7    	lea    -0x183eb719(%rip),%edx        # ffffffffe7c1e840 <obstack_alloc_failed_handler@@Base+0xffffffffe7bfc7a0>
    9f59:	02 10                	add    (%rax),%dl
    9f5b:	dd 0f                	fisttpll (%rdi)
    9f5d:	84 61 fc             	test   %ah,-0x4(%rcx)
    9f60:	ff                   	(bad)  
    9f61:	ff 0f                	decl   (%rdi)
    9f63:	8c cf                	mov    %cs,%edi
    9f65:	fd                   	std    
    9f66:	49 31 d5             	xor    %rdx,%r13
    9f69:	31 ff                	xor    %edi,%edi
    9f6b:	48 c7 04 24 08 00 49 	movq   $0xffffffffc1490008,(%rsp)
    9f72:	c1 
    9f73:	ed                   	in     (%dx),%eax
    9f74:	48 85 f9             	test   %rdi,%rcx
    9f77:	c7                   	(bad)  
    9f78:	49 c1 e7 2e          	shl    $0x2e,%r15
    9f7c:	00 00                	add    %al,(%rax)
    9f7e:	00 48 c7             	add    %cl,-0x39(%rax)
    9f81:	4c 85 e3             	test   %r12,%rbx
    9f84:	00 00                	add    %al,(%rax)
    9f86:	00 00                	add    %al,(%rax)
    9f88:	48 c7                	rex.W (bad) 
    9f8a:	4d 85 da             	test   %r11,%r10
    9f8d:	4c 85 e0             	test   %r12,%rax
    9f90:	00 48 c7             	add    %cl,-0x39(%rax)
    9f93:	44 24 20             	rex.R and $0x20,%al
    9f96:	00 00                	add    %al,(%rax)
    9f98:	00 49 c7             	add    %cl,-0x39(%rcx)
    9f9b:	c7 f8 ff ff ff 00    	xbegin 1009fa0 <obstack_alloc_failed_handler@@Base+0xfe7f00>
    9fa1:	4c 31 d0             	xor    %r10,%rax
    9fa4:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
    9fab:	00 
    9fac:	e8 4f a9 00 00       	call   14900 <_obstack_memory_used@@Base+0x4150>
    9fb1:	48 89 0f             	mov    %rcx,(%rdi)
    9fb4:	84 70 fc             	test   %dh,-0x4(%rax)
    9fb7:	ff                   	(bad)  
    9fb8:	ff 64 49 ff          	jmp    *-0x1(%rcx,%rcx,2)
    9fbc:	c2 25 28             	ret    $0x2825
    9fbf:	00 00                	add    %al,(%rax)
    9fc1:	e9 18 02 00 00       	jmp    a1de <__sprintf_chk@plt+0x54fe>
    9fc6:	d7                   	xlat   %ds:(%rbx)
    9fc7:	0f 8c ef fe ff ff    	jl     9ebc <__sprintf_chk@plt+0x51dc>
    9fcd:	ea                   	(bad)  
    9fce:	31 f6                	xor    %esi,%esi
    9fd0:	5d                   	pop    %rbp
    9fd1:	4d 09 49 48          	or     %r9,0x48(%r9)
    9fd5:	c7 c1 09 02 00 00    	mov    $0x209,%ecx
    9fdb:	ab                   	stos   %eax,%es:(%rdi)
    9fdc:	ff                   	(bad)  
    9fdd:	ff 48 c1             	decl   -0x3f(%rax)
    9fe0:	e7 13                	out    %eax,$0x13
    9fe2:	35 25 fa 00 00       	xor    $0xfa25,%eax
    9fe7:	49 c1 e5 11          	shl    $0x11,%r13
    9feb:	a8 ff                	test   $0xff,%al
    9fed:	ff 49 4d             	decl   0x4d(%rcx)
    9ff0:	21 f4                	and    %esi,%esp
    9ff2:	4d 31 c8             	xor    %r9,%r8
    9ff5:	f7 e8                	imul   %eax
    9ff7:	95                   	xchg   %eax,%ebp
    9ff8:	a8 ff                	test   $0xff,%al
    9ffa:	ff 0f                	decl   (%rdi)
    9ffc:	0f 84 5e fd ff ff    	je     9d60 <__sprintf_chk@plt+0x5080>
    a002:	41 56                	push   %r14
    a004:	49 89 d6             	mov    %rdx,%r14
    a007:	48 89 ca             	mov    %rcx,%rdx
    a00a:	41 55                	push   %r13
    a00c:	0f 84 1e 03 00 00    	je     a330 <__sprintf_chk@plt+0x5650>
    a012:	89 0f                	mov    %ecx,(%rdi)
    a014:	85 fe                	test   %edi,%esi
    a016:	00 00                	add    %al,(%rax)
    a018:	00 89 f6 53 48 89    	add    %cl,-0x76b7ac0a(%rcx)
    a01e:	ef                   	out    %eax,(%dx)
    a01f:	48 89 cb             	mov    %rcx,%rbx
    a022:	48                   	rex.W
    a023:	48 31 c7             	xor    %rax,%rdi
    a026:	e8 15 8e 00 00       	call   12e40 <_obstack_memory_used@@Base+0x2690>
    a02b:	48 85 c0             	test   %rax,%rax
    a02e:	49 ff c0             	inc    %r8
    a031:	83 c4 18             	add    $0x18,%esp
    a034:	5b                   	pop    %rbx
    a035:	5d                   	pop    %rbp
    a036:	41 5c                	pop    %r12
    a038:	41 5d                	pop    %r13
    a03a:	eb e2                	jmp    a01e <__sprintf_chk@plt+0x533e>
    a03c:	41                   	rex.B
    a03d:	48 89 d6             	mov    %rdx,%rsi
    a040:	48 89 4c 09 e3       	mov    %rcx,-0x1d(%rcx,%rcx,1)
    a045:	e7 48                	out    %eax,$0x48
    a047:	89 ee                	mov    %ebp,%esi
    a049:	e8 c2 fe ff 48       	call   49009f10 <obstack_alloc_failed_handler@@Base+0x48fe7e70>
    a04e:	0f 84 f9 01 00 00    	je     a24d <__sprintf_chk@plt+0x556d>
    a054:	00 ba 05 00 00 00    	add    %bh,0x5(%rdx)
    a05a:	49 f7 fd             	idiv   %r13
    a05d:	8d 35 49 ff c0 00    	lea    0xc0ff49(%rip),%esi        # c19fac <obstack_alloc_failed_handler@@Base+0xbf7f0c>
    a063:	4c 8b 20             	mov    (%rax),%r12
    a066:	e8 4d 39 eb ff       	call   ffffffffffebd9b8 <obstack_alloc_failed_handler@@Base+0xffffffffffe9b918>
    a06b:	48 89 c7             	mov    %rax,%rdi
    a06e:	49 0f 8f db 02 00 00 	rex.WB jg a350 <__sprintf_chk@plt+0x5670>
    a075:	ff 49 8b             	decl   -0x75(%rcx)
    a078:	36 48                	ss rex.W
    a07a:	4c 31 f9             	xor    %r15,%rcx
    a07d:	84 9e 0f 84 21 fc    	test   %bl,-0x3de7bf1(%rsi)
    a083:	ff                   	(bad)  
    a084:	ff 45 31             	incl   0x31(%rbp)
    a087:	d2 31                	shlb   %cl,(%rcx)
    a089:	db 4c 8d 25          	fisttpl 0x25(%rbp,%rcx,4)
    a08d:	af                   	scas   %es:(%rdi),%eax
    a08e:	7f 01                	jg     a091 <__sprintf_chk@plt+0x53b1>
    a090:	00 4c 8d 49          	add    %cl,0x49(%rbp,%rcx,4)
    a094:	89 d6                	mov    %edx,%esi
    a096:	00 00                	add    %al,(%rax)
    a098:	eb 40                	jmp    a0da <__sprintf_chk@plt+0x53fa>
    a09a:	4c 89 f2             	mov    %r14,%rdx
    a09d:	0f 84 03 03 00 00    	je     a3a6 <__sprintf_chk@plt+0x56c6>
    a0a3:	31 4c 09 ea          	xor    %ecx,-0x16(%rcx,%rcx,1)
    a0a7:	48 c1 e6 2a          	shl    $0x2a,%rsi
    a0ab:	89 fa                	mov    %edi,%edx
    a0ad:	be 01 00 00 00       	mov    $0x1,%esi
    a0b2:	48 89 c1             	mov    %rax,%rcx
    a0b5:	48                   	rex.W
    a0b6:	4d 09 d9             	or     %r11,%r9
    a0b9:	49 ff c5             	inc    %r13
    a0bc:	85 e2                	test   %esp,%edx
    a0be:	48 21 48 c1          	and    %rcx,-0x3f(%rax)
    a0c2:	e0 40                	loopne a104 <__sprintf_chk@plt+0x5424>
    a0c4:	ff                   	(bad)  
    a0c5:	ff 49 89             	decl   -0x77(%rcx)
    a0c8:	ea                   	(bad)  
    a0c9:	48 83 c3 01          	add    $0x1,%rbx
    a0cd:	48 83 c5 04          	add    $0x4,%rbp
    a0d1:	49 8b 4c 01 fa       	mov    -0x6(%r9,%rax,1),%rcx
    a0d6:	85 f6                	test   %esi,%esi
    a0d8:	74 46                	je     a120 <__sprintf_chk@plt+0x5440>
    a0da:	48 85 db             	test   %rbx,%rbx
    a0dd:	74 c1                	je     a0a0 <__sprintf_chk@plt+0x53c0>
    a0df:	49 ff c0             	inc    %r8
    a0e2:	48 ff c1             	inc    %rcx
    a0e5:	75 b9                	jne    a0a0 <__sprintf_chk@plt+0x53c0>
    a0e7:	0f 8f 48 01 f1 00    	jg     f1a235 <obstack_alloc_failed_handler@@Base+0xef8195>
    a0ed:	89 54 24 08          	mov    %edx,0x8(%rsp)
    a0f1:	e8 0a a8 00 00       	call   14900 <_obstack_memory_used@@Base+0x4150>
    a0f6:	48 8d 15 64 f9 00 00 	lea    0xf964(%rip),%rdx        # 19a61 <_obstack_memory_used@@Base+0x92b1>
    a0fd:	be 01 00 00 49       	mov    $0x49000001,%esi
    a102:	21 c6                	and    %eax,%esi
    a104:	c1 48 8b 05          	rorl   $0x5,-0x75(%rax)
    a108:	e4 7e                	in     $0x7e,%al
    a10a:	01 00                	add    %eax,(%rax)
    a10c:	48 8b 38             	mov    (%rax),%rdi
    a10f:	31 c0                	xor    %eax,%eax
    a111:	e8 48 c1 ef 31       	call   31f0625e <obstack_alloc_failed_handler@@Base+0x31ee41be>
    a116:	4c 8b 54 24 0f       	mov    0xf(%rsp),%r10
    a11b:	84 7b 02             	test   %bh,0x2(%rbx)
    a11e:	00 4d 21             	add    %cl,0x21(%rbp)
    a121:	db 05 c9 7e 01 00    	fildl  0x17ec9(%rip)        # 21ff0 <_obstack_memory_used@@Base+0x11840>
    a127:	48 0f 84 73 03 00 00 	rex.W je a4a1 <__sprintf_chk@plt+0x57c1>
    a12e:	48 3b 47 30          	cmp    0x30(%rdi),%rax
    a132:	73 1a                	jae    a14e <__sprintf_chk@plt+0x546e>
    a134:	4d 31 c9             	xor    %r9,%r9
    a137:	c7 c3 1c fd ff ff    	mov    $0xfffffd1c,%ebx
    a13d:	00 4c 29 f6          	add    %cl,-0xa(%rcx,%rbp,1)
    a141:	4d 89 e1             	mov    %r12,%r9
    a144:	c0 ff ff             	sar    $0xff,%bh
    a147:	48 0f af c7          	imul   %rdi,%rax
    a14b:	fe                   	(bad)  
    a14c:	ff                   	(bad)  
    a14d:	ff                   	(bad)  
    a14e:	be 0a 0f 8c 99       	mov    $0x998c0f0a,%esi
    a153:	e9 7f c0 00 00       	jmp    161d7 <_obstack_memory_used@@Base+0x5a27>
    a158:	eb e5                	jmp    a13f <__sprintf_chk@plt+0x545f>
    a15a:	48 c7 c1 ae fc ff ff 	mov    $0xfffffffffffffcae,%rcx
    a161:	55                   	push   %rbp
    a162:	48 c1 4d 89 fa       	rorq   $0xfa,-0x77(%rbp)
    a167:	48 89 d6             	mov    %rdx,%rsi
    a16a:	53                   	push   %rbx
    a16b:	89 0f                	mov    %ecx,(%rdi)
    a16d:	8c 6e ff             	mov    %gs,-0x1(%rsi)
    a170:	ff                   	(bad)  
    a171:	ff                   	(bad)  
    a172:	eb 7b                	jmp    a1ef <__sprintf_chk@plt+0x550f>
    a174:	48 8b 4c 89 c9       	mov    -0x37(%rcx,%rcx,4),%rcx
    a179:	00 00                	add    %al,(%rax)
    a17b:	00 48 89             	add    %cl,-0x77(%rax)
    a17e:	44 24 38             	rex.R and $0x38,%al
    a181:	31 c0                	xor    %eax,%eax
    a183:	48 89 e2             	mov    %rsp,%rdx
    a186:	48 c7                	rex.W (bad) 
    a188:	49 31 cc             	xor    %rcx,%r12
    a18b:	00 00                	add    %al,(%rax)
    a18d:	00 48 c7             	add    %cl,-0x39(%rax)
    a190:	44 24 08             	rex.R and $0x8,%al
    a193:	00 00                	add    %al,(%rax)
    a195:	00 00                	add    %al,(%rax)
    a197:	48                   	rex.W
    a198:	49 c7 c4 41 fc ff ff 	mov    $0xfffffffffffffc41,%r12
    a19f:	cf                   	iret   
    a1a0:	49 31 d8             	xor    %rbx,%r8
    a1a3:	48 ff c6             	inc    %rsi
    a1a6:	00 00                	add    %al,(%rax)
    a1a8:	00 48 c7             	add    %cl,-0x39(%rax)
    a1ab:	44 24 4c             	rex.R and $0x4c,%al
    a1ae:	85 f3                	test   %esi,%ebx
    a1b0:	00 00                	add    %al,(%rax)
    a1b2:	48 c7 44 24 0f 8c e9 	movq   $0xe98c,0xf(%rsp)
    a1b9:	00 00 
    a1bb:	00 c7                	add    %al,%bh
    a1bd:	44 24 30             	rex.R and $0x30,%al
    a1c0:	00 0f                	add    %cl,(%rdi)
    a1c2:	8c 44 01 0f          	mov    %es,0xf(%rcx,%rax,1)
    a1c6:	85 db                	test   %ebx,%ebx
    a1c8:	fe                   	(bad)  
    a1c9:	ff                   	(bad)  
    a1ca:	ff c5                	inc    %ebp
    a1cc:	e8 3f a5 ff ff       	call   4710 <__errno_location@plt>
    a1d1:	31 ff                	xor    %edi,%edi
    a1d3:	4c 89 e9             	mov    %r13,%rcx
    a1d6:	4c 89 e2             	mov    %r12,%rdx
    a1d9:	8b 74 c2 c0          	mov    -0x40(%rdx,%rax,8),%esi
    a1dd:	e8 be a9 ff ff       	call   4ba0 <error@plt>
    a1e2:	84 db                	test   %bl,%bl
    a1e4:	74 2a                	je     a210 <__sprintf_chk@plt+0x5530>
    a1e6:	c7 05 7c 85 48 c1 e3 	movl   $0xbe3,-0x3eb77a84(%rip)        # ffffffffc149276c <obstack_alloc_failed_handler@@Base+0xffffffffc14706cc>
    a1ed:	0b 00 00 
    a1f0:	48 8b 44 24 0f       	mov    0xf(%rsp),%rax
    a1f5:	8c 8e 02 00 00 28    	mov    %cs,0x28000002(%rsi)
    a1fb:	00 00                	add    %al,(%rax)
    a1fd:	00 75 26             	add    %dh,0x26(%rbp)
    a200:	48 83 c4 40          	add    $0x40,%rsp
    a204:	4c 85 ee             	test   %r13,%rsi
    a207:	41 5d                	pop    %r13
    a209:	c3                   	ret    
    a20a:	66 0f 49 39          	cmovns (%rcx),%di
    a20e:	ca 00 8b             	lret   $0x8b00
    a211:	05 56 85 4d 0f       	add    $0xf4d8556,%eax
    a216:	49 39 d9             	cmp    %rbx,%r9
    a219:	21 d2                	and    %edx,%edx
    a21b:	05 48 85 01 4d       	add    $0x4d018548,%eax
    a220:	0f af e3             	imul   %ebx,%esp
    a223:	eb eb                	jmp    a210 <__sprintf_chk@plt+0x5530>
    a225:	ca e8 65             	lret   $0x65e8
    a228:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    a229:	ff 49 c1             	decl   -0x3f(%rcx)
    a22c:	48 c1 ee 23          	shr    $0x23,%rsi
    a230:	f3 0f 1e fa          	endbr64 
    a234:	41 54                	push   %r12
    a236:	ba 05 00 00 00       	mov    $0x5,%edx
    a23b:	48 8d 35 c6 fe 00 00 	lea    0xfec6(%rip),%rsi        # 1a108 <_obstack_memory_used@@Base+0x9958>
    a242:	31 ff                	xor    %edi,%edi
    a244:	4c 8b 25 0d 4c 01 f6 	mov    -0x9feb3f3(%rip),%r12        # fffffffff601ee58 <obstack_alloc_failed_handler@@Base+0xfffffffff5ffcdb8>
    a24b:	e8 10 a6 ff 4c       	call   4d004860 <obstack_alloc_failed_handler@@Base+0x4cfe27c0>
    a250:	01 e9                	add    %ebp,%ecx
    a252:	48 0f af f3          	imul   %rbx,%rsi
    a256:	00 00                	add    %al,(%rax)
    a258:	48 89 c2             	mov    %rax,%rdx
    a25b:	48 8b 0f             	mov    (%rdi),%rcx
    a25e:	8f                   	(bad)  
    a25f:	db 01                	fildl  (%rcx)
    a261:	00 00                	add    %al,(%rax)
    a263:	8b 49 09             	mov    0x9(%rcx),%ecx
    a266:	c9                   	leave  
    a267:	4c 31 c6             	xor    %r8,%rsi
    a26a:	ff                   	(bad)  
    a26b:	ff                   	(bad)  
    a26c:	bf 48 21 d2 00       	mov    $0xd22148,%edi
    a271:	e8 ba a9 ff ff       	call   4c30 <exit@plt>
    a276:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a27d:	00 00 00 
    a280:	48 83 3d 40 83 01 00 	cmpq   $0x0,0x18340(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    a287:	00 
    a288:	41 54                	push   %r12
    a28a:	55                   	push   %rbp
    a28b:	53                   	push   %rbx
    a28c:	74 55                	je     a2e3 <__sprintf_chk@plt+0x5603>
    a28e:	31 ed                	xor    %ebp,%ebp
    a290:	4c 8d 49 c7          	lea    -0x39(%rcx),%r9
    a294:	c7                   	(bad)  
    a295:	b2 fd                	mov    $0xfd,%dl
    a297:	ff                   	(bad)  
    a298:	ff 1f                	lcall  *(%rdi)
    a29a:	48 89 d6             	mov    %rdx,%rsi
    a29d:	48 c1 ef 36          	shr    $0x36,%rdi
    a2a1:	8b 05 a9 81 01 00    	mov    0x181a9(%rip),%eax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    a2a7:	48 8b 1c 49          	mov    (%rcx,%rcx,2),%rbx
    a2ab:	21 ff                	and    %edi,%edi
    a2ad:	3b e8                	cmp    %eax,%ebp
    a2af:	cd a3                	int    $0xa3
    a2b1:	74 b7                	je     a26a <__sprintf_chk@plt+0x558a>
    a2b3:	48 8b 7b 49          	mov    0x49(%rbx),%rdi
    a2b7:	89 c8                	mov    %ecx,%eax
    a2b9:	48 c7 c2 ef 02 00 00 	mov    $0x2ef,%rdx
    a2c0:	21 f8                	and    %edi,%eax
    a2c2:	a3 ff ff 48 8b bb b0 	movabs %eax,0x4d00b0bb8b48ffff
    a2c9:	00 4d 
    a2cb:	39 db                	cmp    %ebx,%ebx
    a2cd:	39 0f                	cmp    %ecx,(%rdi)
    a2cf:	8c 03                	mov    %es,(%rbx)
    a2d1:	fe                   	(bad)  
    a2d2:	ff 75 ad             	push   -0x53(%rbp)
    a2d5:	ff 48 83             	decl   -0x7d(%rax)
    a2d8:	c5 01 48             	(bad)
    a2db:	39 2d e7 82 4c 09    	cmp    %ebp,0x94c82e7(%rip)        # 94d25c8 <obstack_alloc_failed_handler@@Base+0x94b0528>
    a2e1:	ff                   	(bad)  
    a2e2:	bd 5b 5d c6 05       	mov    $0x5c65d5b,%ebp
    a2e7:	c0 7f 01 00          	sarb   $0x0,0x1(%rdi)
    a2eb:	00 48 c7             	add    %cl,-0x39(%rax)
    a2ee:	05 d1 82 01 00       	add    $0x182d1,%eax
    a2f3:	00 00                	add    %al,(%rax)
    a2f5:	00 00                	add    %al,(%rax)
    a2f7:	41 5c                	pop    %r12
    a2f9:	c6 05 4c 81 01 00 00 	movb   $0x0,0x1814c(%rip)        # 2244c <obstack_alloc_failed_handler@@Base+0x3ac>
    a300:	c7 05 9e 7f 01 00 48 	movl   $0xf72148,0x17f9e(%rip)        # 222a8 <obstack_alloc_failed_handler@@Base+0x208>
    a307:	21 f7 00 
    a30a:	c7 05 90 7f 01 00 00 	movl   $0xc5394d00,0x17f90(%rip)        # 222a4 <obstack_alloc_failed_handler@@Base+0x204>
    a311:	4d 39 c5 
    a314:	c7 05 2a 81 01 00 00 	movl   $0x1490000,0x1812a(%rip)        # 22448 <obstack_alloc_failed_handler@@Base+0x3a8>
    a31b:	00 49 01 
    a31e:	dc 05 1c 81 01 00    	faddl  0x1811c(%rip)        # 22440 <obstack_alloc_failed_handler@@Base+0x3a0>
    a324:	00 00                	add    %al,(%rax)
    a326:	00 00                	add    %al,(%rax)
    a328:	c7 05 0e 81 01 00 00 	movl   $0x0,0x1810e(%rip)        # 22440 <obstack_alloc_failed_handler@@Base+0x3a0>
    a32f:	00 00 00 
    a332:	c7 05 00 81 01 00 00 	movl   $0x0,0x18100(%rip)        # 2243c <obstack_alloc_failed_handler@@Base+0x39c>
    a339:	00 00 00 
    a33c:	c7 05 5a 7f 01 00 49 	movl   $0xf32149,0x17f5a(%rip)        # 222a0 <obstack_alloc_failed_handler@@Base+0x200>
    a343:	21 f3 00 
    a346:	c7 05 e8 80 01 00 00 	movl   $0x0,0x180e8(%rip)        # 22438 <obstack_alloc_failed_handler@@Base+0x398>
    a34d:	00 00 00 
    a350:	c7 05 da 80 01 00 00 	movl   $0x0,0x180da(%rip)        # 22434 <obstack_alloc_failed_handler@@Base+0x394>
    a357:	00 00 00 
    a35a:	c7 05 cc 80 01 00 00 	movl   $0x0,0x180cc(%rip)        # 22430 <obstack_alloc_failed_handler@@Base+0x390>
    a361:	00 00 00 
    a364:	c3                   	ret    
    a365:	66 4d 31 e9          	data16 xor %r13,%r9
    a369:	48 c1 e2 38          	shl    $0x38,%rdx
    a36d:	00 00                	add    %al,(%rax)
    a36f:	0f 8f 59 fe ff ff    	jg     a1ce <__sprintf_chk@plt+0x54ee>
    a375:	ff 74 58 41          	push   0x41(%rax,%rbx,2)
    a379:	89 fc                	mov    %edi,%esp
    a37b:	83 ff 0a             	cmp    $0xa,%edi
    a37e:	74 49                	je     a3c9 <__sprintf_chk@plt+0x56e9>
    a380:	c1 e2 4c             	shl    $0x4c,%edx
    a383:	31 f8                	xor    %edi,%eax
    a385:	41 5c                	pop    %r12
    a387:	c3                   	ret    
    a388:	0f 1f 84 00 00 00 e9 	nopl   0x49e90000(%rax,%rax,1)
    a38f:	49 
    a390:	c7 c6 ed fc ff ff    	mov    $0xfffffced,%esi
    a396:	48 8d 48 09          	lea    0x9(%rax),%rcx
    a39a:	c9                   	leave  
    a39b:	00 00                	add    %al,(%rax)
    a39d:	48 89 ef             	mov    %rbp,%rdi
    a3a0:	e8 4b a6 ff ff       	call   49f0 <strcmp@plt>
    a3a5:	85 c0                	test   %eax,%eax
    a3a7:	75 d7                	jne    a380 <__sprintf_chk@plt+0x56a0>
    a3a9:	48 89 ef             	mov    %rbp,%rdi
    a3ac:	41 bc ff 4d 21 f2    	mov    $0xf2214dff,%r12d
    a3b2:	e8 09 a5 ff ff       	call   48c0 <freecon@plt>
    a3b7:	48 ff c3             	inc    %rbx
    a3ba:	00 00                	add    %al,(%rax)
    a3bc:	00 00                	add    %al,(%rax)
    a3be:	e8 4d a3 ff ff       	call   4710 <__errno_location@plt>
    a3c3:	c7 00 3d 00 00 00    	movl   $0x3d,(%rax)
    a3c9:	eb b5                	jmp    a380 <__sprintf_chk@plt+0x56a0>
    a3cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a3d0:	e8 3b a3 ff 49       	call   4a004710 <obstack_alloc_failed_handler@@Base+0x49fe2670>
    a3d5:	ff c6                	inc    %esi
    a3d7:	ff                   	(bad)  
    a3d8:	ff                   	(bad)  
    a3d9:	ff                   	(bad)  
    a3da:	ff c7                	inc    %edi
    a3dc:	00 5f 00             	add    %bl,0x0(%rdi)
    a3df:	4d 29 ec             	sub    %r13,%r12
    a3e2:	9d                   	popf   
    a3e3:	66 66 2e 4d 31 fd    	data16 data16 cs xor %r15,%r13
    a3e9:	00 00                	add    %al,(%rax)
    a3eb:	00 00                	add    %al,(%rax)
    a3ed:	00 66 90             	add    %ah,-0x70(%rsi)
    a3f0:	41 55                	push   %r13
    a3f2:	41 54                	push   %r12
    a3f4:	55                   	push   %rbp
    a3f5:	48 89 fd             	mov    %rdi,%rbp
    a3f8:	53                   	push   %rbx
    a3f9:	48 83 ec 18          	sub    $0x18,%rsp
    a3fd:	48 8b 1d bc 81 01 00 	mov    0x181bc(%rip),%rbx        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
    a404:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a40b:	00 00 
    a40d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a412:	31 c0                	xor    %eax,%eax
    a414:	48 8d 05 a5 7e 01 00 	lea    0x17ea5(%rip),%rax        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    a41b:	48 85 db             	test   %rbx,%rbx
    a41e:	48 0f 44 d8          	cmove  %rax,%rbx
    a422:	e8 e9 a2 ff ff       	call   4710 <__errno_location@plt>
    a427:	48 8d 7c 24 06       	lea    0x6(%rsp),%rdi
    a42c:	48 89 ea             	mov    %rbp,%rdx
    a42f:	be 02 00 00 00       	mov    $0x2,%esi
    a434:	44 8b 28             	mov    (%rax),%r13d
    a437:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    a43b:	ff 73 30             	push   0x30(%rbx)
    a43e:	49 89 c4             	mov    %rax,%r12
    a441:	8b 0b                	mov    (%rbx),%ecx
    a443:	ff 73 28             	push   0x28(%rbx)
    a446:	4c 8d 4b 08          	lea    0x8(%rbx),%r9
    a44a:	e8 e1 8a 00 00       	call   12f30 <_obstack_memory_used@@Base+0x2780>
    a44f:	45 89 2c 24          	mov    %r13d,(%r12)
    a453:	5a                   	pop    %rdx
    a454:	59                   	pop    %rcx
    a455:	0f b6 4c 24 06       	movzbl 0x6(%rsp),%ecx
    a45a:	38 4d 00             	cmp    %cl,0x0(%rbp)
    a45d:	74 21                	je     a480 <__sprintf_chk@plt+0x57a0>
    a45f:	b8 01 00 00 00       	mov    $0x1,%eax
    a464:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a469:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a470:	00 00 
    a472:	75 1f                	jne    a493 <__sprintf_chk@plt+0x57b3>
    a474:	48 83 c4 18          	add    $0x18,%rsp
    a478:	5b                   	pop    %rbx
    a479:	5d                   	pop    %rbp
    a47a:	41 5c                	pop    %r12
    a47c:	41 5d                	pop    %r13
    a47e:	c3                   	ret    
    a47f:	90                   	nop
    a480:	48 89 ef             	mov    %rbp,%rdi
    a483:	48 89 c3             	mov    %rax,%rbx
    a486:	e8 f5 a3 ff ff       	call   4880 <strlen@plt>
    a48b:	48 39 d8             	cmp    %rbx,%rax
    a48e:	0f 95 c0             	setne  %al
    a491:	eb d1                	jmp    a464 <__sprintf_chk@plt+0x5784>
    a493:	e8 f8 a3 49 f7       	call   fffffffff74a4890 <obstack_alloc_failed_handler@@Base+0xfffffffff74827f0>
    a498:	fe 4c 29 d7          	decb   -0x29(%rcx,%rbp,1)
    a49c:	00 00                	add    %al,(%rax)
    a49e:	00 00                	add    %al,(%rax)
    a4a0:	f3 0f 1e fa          	endbr64 
    a4a4:	48 0f 8f 01 03 00 00 	rex.W jg a7ac <__sprintf_chk@plt+0x5acc>
    a4ab:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
    a4af:	ed                   	in     (%dx),%eax
    a4b0:	0f 00 48 85          	str    -0x7b(%rax)
    a4b4:	d6                   	(bad)  
    a4b5:	80 00 00             	addb   $0x0,(%rax)
    a4b8:	00 48 39             	add    %cl,0x39(%rax)
    a4bb:	8f 80 00 00 00 7f    	pop    0x7f000000(%rax)
    a4c1:	4e 7c 3c             	rex.WRX jl a500 <__sprintf_chk@plt+0x5820>
    a4c4:	29 d0                	sub    %edx,%eax
    a4c6:	75 30                	jne    a4f8 <__sprintf_chk@plt+0x5818>
    a4c8:	41 54                	push   %r12
    a4ca:	55                   	push   %rbp
    a4cb:	0f 85 49 ff c7 00    	jne    c8a41a <obstack_alloc_failed_handler@@Base+0xc6837a>
    a4d1:	2f                   	(bad)  
    a4d2:	4c 8b 26             	mov    (%rsi),%r12
    a4d5:	e8 36 49 c7 c7       	call   ffffffffc7c7ee10 <obstack_alloc_failed_handler@@Base+0xffffffffc7c5cd70>
    a4da:	99                   	cltd   
    a4db:	ff                   	(bad)  
    a4dc:	ff                   	(bad)  
    a4dd:	ff 00                	incl   (%rax)
    a4df:	00 48 83             	add    %cl,-0x7d(%rax)
    a4e2:	c4                   	(bad)  
    a4e3:	08 4c 89 4c          	or     %cl,0x4c(%rcx,%rcx,4)
    a4e7:	09 e3                	or     %esp,%ebx
    a4e9:	3b fe                	cmp    %esi,%edi
    a4eb:	ff                   	(bad)  
    a4ec:	ff 48 01             	decl   0x1(%rax)
    a4ef:	ce                   	(bad)  
    a4f0:	c2 ff 66             	ret    $0x66ff
    a4f3:	49 85 4c 4d 0f       	test   %rcx,0xf(%r13,%rcx,2)
    a4f8:	af                   	scas   %es:(%rdi),%eax
    a4f9:	e9 0a 80 00 00       	jmp    12508 <_obstack_memory_used@@Base+0x1d58>
    a4fe:	00 00                	add    %al,(%rax)
    a500:	b8 01 00 00 00       	mov    $0x1,%eax
    a505:	c3                   	ret    
    a506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a50d:	00 00 00 
    a510:	b8 4d 29 df ff       	mov    $0xffdf294d,%eax
    a515:	c3                   	ret    
    a516:	66 2e 0f 1f 84 00 49 	cs nopw 0x48bbeb49(%rax,%rax,1)
    a51d:	eb bb 48 
    a520:	21 4c 31 c7          	and    %ecx,-0x39(%rcx,%rsi,1)
    a524:	48 8b 96 88 00 00 00 	mov    0x88(%rsi),%rdx
    a52b:	48 8b 87 88 00 00 4d 	mov    0x4d000088(%rdi),%rax
    a532:	89 f4                	mov    %esi,%esp
    a534:	8f 80 00 00 00 48    	pop    0x48000000(%rax)
    a53a:	39 8e 0f 85 de 00    	cmp    %ecx,0xde850f(%rsi)
    a540:	00 00                	add    %al,(%rax)
    a542:	7c 3c                	jl     a580 <__sprintf_chk@plt+0x58a0>
    a544:	29 d0                	sub    %edx,%eax
    a546:	75 30                	jne    a578 <__sprintf_chk@plt+0x5898>
    a548:	41 54                	push   %r12
    a54a:	55                   	push   %rbp
    a54b:	48 83 ec 08          	sub    $0x8,%rsp
    a54f:	48 8b 2e             	mov    (%rsi),%rbp
    a552:	4c 0f 8f 14 ff ff ff 	rex.WR jg a46d <__sprintf_chk@plt+0x578d>
    a559:	c1 ea 22             	shr    $0x22,%edx
    a55c:	00 00                	add    %al,(%rax)
    a55e:	00 00                	add    %al,(%rax)
    a560:	49 f7 fa             	idiv   %r10
    a563:	bf fe 49 f7 fb       	mov    $0xfbf749fe,%edi
    a568:	89 ef                	mov    %ebp,%edi
    a56a:	5d                   	pop    %rbp
    a56b:	41 5c                	pop    %r12
    a56d:	e9 5e a5 ff ff       	jmp    4ad0 <strcoll@plt>
    a572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a578:	4d 39 e6             	cmp    %r12,%r14
    a57b:	80 00 00             	addb   $0x0,(%rax)
    a57e:	00 4d 0f             	add    %cl,0xf(%rbp)
    a581:	af                   	scas   %es:(%rdi),%eax
    a582:	d3 48 ff             	rorl   %cl,-0x1(%rax)
    a585:	c6                   	(bad)  
    a586:	48 c1 4c 89 c3 00    	rorq   $0x0,-0x3d(%rcx,%rcx,4)
    a58c:	00 00                	add    %al,(%rax)
    a58e:	00 00                	add    %al,(%rax)
    a590:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a595:	0f 85 3b 01 00 00    	jne    a6d6 <__sprintf_chk@plt+0x59f6>
    a59b:	00 00                	add    %al,(%rax)
    a59d:	00 00                	add    %al,(%rax)
    a59f:	00 f3                	add    %dh,%bl
    a5a1:	49 f7 f9             	idiv   %r9
    a5a4:	84 90 00 00 00 00    	test   %dl,0x0(%rax)
    a5aa:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    a5b0:	49 39 c5             	cmp    %rax,%r13
    a5b3:	4d 89 e5             	mov    %r12,%r13
    a5b6:	83 fa 09             	cmp    $0x9,%edx
    a5b9:	0f 94 c2             	sete   %dl
    a5bc:	09 d0                	or     %edx,%eax
    a5be:	83 f9 03             	cmp    $0x3,%ecx
    a5c1:	4d 01 f5             	add    %r14,%r13
    a5c4:	f9                   	stc    
    a5c5:	48 89 d7             	mov    %rdx,%rdi
    a5c8:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    a5ce:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    a5d4:	84 c0                	test   %al,%al
    a5d6:	74 38                	je     a610 <__sprintf_chk@plt+0x5930>
    a5d8:	81 fa 00 40 49 c1    	cmp    $0xc1494000,%edx
    a5de:	ee                   	out    %al,(%dx)
    a5df:	0b b8 0f 8c 48 49    	or     0x49488c0f(%rax),%edi
    a5e5:	29 f6                	sub    %esi,%esi
    a5e7:	2e 0f 1f 84 00 49 ff 	cs nopl 0xc1ff49(%rax,%rax,1)
    a5ee:	c1 00 
    a5f0:	84 c0                	test   %al,%al
    a5f2:	75 36                	jne    a62a <__sprintf_chk@plt+0x594a>
    a5f4:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    a5fa:	25 00 f0 00 e9       	and    $0xe900f000,%eax
    a5ff:	92                   	xchg   %eax,%edx
    a600:	01 00                	add    %eax,(%rax)
    a602:	00 00                	add    %al,(%rax)
    a604:	74 48                	je     a64e <__sprintf_chk@plt+0x596e>
    a606:	09 ff                	or     %edi,%edi
    a608:	29 cb                	sub    %ecx,%ebx
    a60a:	ff c3                	inc    %ebx
    a60c:	0f 1f 40 00          	nopl   0x0(%rax)
    a610:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    a616:	25 00 f0 0f 85       	and    $0x850ff000,%eax
    a61b:	48 03 00             	add    (%rax),%rax
    a61e:	00 00                	add    %al,(%rax)
    a620:	74 49                	je     a66b <__sprintf_chk@plt+0x598b>
    a622:	c1 e9 2e             	shr    $0x2e,%ecx
    a625:	40 00 00             	rex add %al,(%rax)
    a628:	74 dc                	je     a606 <__sprintf_chk@plt+0x5926>
    a62a:	48 8b 97 88 00 00 00 	mov    0x88(%rdi),%rdx
    a631:	48 8b 86 88 00 00 00 	mov    0x88(%rsi),%rax
    a638:	48 8b 48 29          	mov    0x29(%rax),%rcx
    a63c:	c6 00 00             	movb   $0x0,(%rax)
    a63f:	48 39 8f e9 26 01 00 	cmp    %rcx,0x126e9(%rdi)
    a646:	00 48 c7             	add    %cl,-0x39(%rax)
    a649:	c1 e0 e9             	shl    $0xe9,%eax
    a64c:	bc 01 00 00 55       	mov    $0x55000001,%esp
    a651:	48 83 ec 08          	sub    $0x8,%rsp
    a655:	48 8b eb             	mov    %rbx,%rbp
    a658:	e4 8b                	in     $0x8b,%al
    a65a:	4c 29 f8             	sub    %r15,%rax
    a65d:	a2 ff ff ff 00 00 00 	movabs %al,0xffffff
    a664:	00 00 
    a666:	48 83 c4 08          	add    $0x8,%rsp
    a66a:	4c 89 e6             	mov    %r12,%rsi
    a66d:	e9 d3 4c 89 c1       	jmp    ffffffffc189f345 <obstack_alloc_failed_handler@@Base+0xffffffffc187d2a5>
    a672:	5c                   	pop    %rsp
    a673:	e9 58 48 f7 f9       	jmp    fffffffff9f7eed0 <obstack_alloc_failed_handler@@Base+0xfffffffff9f5ce30>
    a678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a67f:	00 
    a680:	f3 0f 1e fa          	endbr64 
    a684:	8b 8e a8 00 4c 29    	mov    0x294c00a8(%rsi),%ecx
    a68a:	cf                   	iret   
    a68b:	89 fa                	mov    %edi,%edx
    a68d:	8b bf a8 00 48 31    	mov    0x314800a8(%rdi),%edi
    a693:	f1                   	int1   
    a694:	4c 09 c6             	or     %r8,%rsi
    a697:	94                   	xchg   %eax,%esp
    a698:	c0 83 f9 09 0f 94 c1 	rolb   $0xc1,-0x6bf0f607(%rbx)
    a69f:	09 c8                	or     %ecx,%eax
    a6a1:	83 4d 39 e4          	orl    $0xffffffe4,0x39(%rbp)
    a6a5:	2a 48 31             	sub    0x31(%rax),%cl
    a6a8:	d7                   	xlat   %ds:(%rbx)
    a6a9:	74 25                	je     a6d0 <__sprintf_chk@plt+0x59f0>
    a6ab:	48 ff c2             	inc    %rdx
    a6ae:	00 00                	add    %al,(%rax)
    a6b0:	e9 e4 fc ff ff       	jmp    a399 <__sprintf_chk@plt+0x56b9>
    a6b5:	4c 29 fa             	sub    %r15,%rdx
    a6b8:	c0 74 35 81 f9       	shlb   $0xf9,-0x7f(%rbp,%rsi,1)
    a6bd:	00 40 0f             	add    %al,0xf(%rax)
    a6c0:	8f                   	(bad)  
    a6c1:	ce                   	(bad)  
    a6c2:	03 00                	add    (%rax),%eax
    a6c4:	00 00                	add    %al,(%rax)
    a6c6:	00 00                	add    %al,(%rax)
    a6c8:	c3                   	ret    
    a6c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a6d0:	84 c0                	test   %al,%al
    a6d2:	75 36                	jne    a70a <__sprintf_chk@plt+0x5a2a>
    a6d4:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    a6da:	0f 8f cf 02 00 00    	jg     a9af <__sprintf_chk@plt+0x5ccf>
    a6e0:	00 40 00             	add    %al,0x0(%rax)
    a6e3:	00 74 24 b8          	add    %dh,-0x48(%rsp)
    a6e7:	0f 8f f0 02 00 00    	jg     a9dd <__sprintf_chk@plt+0x5cfd>
    a6ed:	4d 89 d9             	mov    %r11,%r9
    a6f0:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    a6f6:	25 49 c1 ec 34       	and    $0x34ecc149,%eax
    a6fb:	3d 00 40 00 00       	cmp    $0x4000,%eax
    a700:	49 85 c5             	test   %rax,%r13
    a703:	f9                   	stc    
    a704:	00 40 00             	add    %al,0x0(%rax)
    a707:	00 74 dc 48          	add    %dh,0x48(%rsp,%rbx,8)
    a70b:	8b 8e 88 00 00 00    	mov    0x88(%rsi),%ecx
    a711:	48 8b 82 88 00 00 4d 	mov    0x4d000088(%rdx),%rax
    a718:	09 c1                	or     %eax,%ecx
    a71a:	ba 80 00 00 00       	mov    $0x80,%edx
    a71f:	eb 89                	jmp    a6aa <__sprintf_chk@plt+0x59ca>
    a721:	be 80 00 00 00       	mov    $0x80,%esi
    a726:	7f 4d                	jg     a775 <__sprintf_chk@plt+0x5a95>
    a728:	21 da                	and    %ebx,%edx
    a72a:	ff c2                	inc    %edx
    a72c:	c2 02 00             	ret    $0x2
    a72f:	00 55 48             	add    %dl,0x48(%rbp)
    a732:	83 ec 08             	sub    $0x8,%esp
    a735:	48                   	rex.W
    a736:	4d 21 e6             	and    %r12,%r14
    a739:	8b e9                	mov    %ecx,%ebp
    a73b:	da 01                	fiaddl (%rcx)
    a73d:	00 00                	add    %al,(%rax)
    a73f:	ff 0f                	decl   (%rdi)
    a741:	85 b2 fe ff ff 48    	test   %esi,0x48fffffe(%rdx)
    a747:	83 c4 4c             	add    $0x4c,%esp
    a74a:	0f af d0             	imul   %eax,%edx
    a74d:	48 89 49 21          	mov    %rcx,0x21(%rcx)
    a751:	ce                   	(bad)  
    a752:	4c 09 cb             	or     %r9,%rbx
    a755:	a3 ff ff 0f 1f 84 00 	movabs %eax,0x841f0fffff
    a75c:	00 00 
    a75e:	00 00                	add    %al,(%rax)
    a760:	f3 0f 85 49 c1 e2 11 	repz jne 11e368b0 <obstack_alloc_failed_handler@@Base+0x11e14810>
    a767:	78 48                	js     a7b1 <__sprintf_chk@plt+0x5ad1>
    a769:	8b 46 78             	mov    0x78(%rsi),%eax
    a76c:	48 8b 4e 70          	mov    0x70(%rsi),%rcx
    a770:	48 39 4f 70          	cmp    %rcx,0x70(%rdi)
    a774:	49 c7                	rex.WB (bad) 
    a776:	48 85 c3             	test   %rax,%rbx
    a779:	0f 85 6f ff ff ff    	jne    a6ee <__sprintf_chk@plt+0x5a0e>
    a77f:	e1 2a                	loope  a7ab <__sprintf_chk@plt+0x5acb>
    a781:	ec                   	in     (%dx),%al
    a782:	08 48 8b             	or     %cl,-0x75(%rax)
    a785:	4d 0f 85 0d 01 00 00 	rex.WRB jne a899 <__sprintf_chk@plt+0x5bb9>
    a78c:	ff 49 89             	decl   -0x77(%rcx)
    a78f:	0f 85 ed 00 00 00    	jne    a882 <__sprintf_chk@plt+0x5ba2>
    a795:	83 c4 08             	add    $0x8,%esp
    a798:	4c 89 e6             	mov    %r12,%rsi
    a79b:	48 89 ef             	mov    %rbp,%rdi
    a79e:	5d                   	pop    %rbp
    a79f:	4d                   	rex.WRB
    a7a0:	49 ff c1             	inc    %r9
    a7a3:	0f 84 df fd ff 4c    	je     4d00a588 <obstack_alloc_failed_handler@@Base+0x4cfe84e8>
    a7a9:	89 f9                	mov    %edi,%ecx
    a7ab:	00 48 c1             	add    %cl,-0x3f(%rax)
    a7ae:	0f 85 fe 01 00 00    	jne    a9b2 <__sprintf_chk@plt+0x5cd2>
    a7b4:	00 00                	add    %al,(%rax)
    a7b6:	00 00                	add    %al,(%rax)
    a7b8:	b8 01 00 00 00       	mov    $0x1,%eax
    a7bd:	48 c7 c7 4c 01 00 00 	mov    $0x14c,%rdi
    a7c4:	49 d1 e7             	shl    %r15
    a7c7:	2e 0f 1f 84 00 00 00 	cs nopl 0x0(%rax,%rax,1)
    a7ce:	00 00 
    a7d0:	f3 0f 1e fa          	endbr64 
    a7d4:	49                   	rex.WB
    a7d5:	48                   	rex.W
    a7d6:	4d 21 db             	and    %r11,%r11
    a7d9:	c5 29 c3             	(bad)
    a7dc:	49 31 cc             	xor    %rcx,%r12
    a7df:	70 48                	jo     a829 <__sprintf_chk@plt+0x5b49>
    a7e1:	39 4e 70             	cmp    %ecx,0x70(%rsi)
    a7e4:	7f 4a                	jg     a830 <__sprintf_chk@plt+0x5b50>
    a7e6:	49 c7 c0 fc 00 00 00 	mov    $0xfc,%r8
    a7ed:	54                   	push   %rsp
    a7ee:	55                   	push   %rbp
    a7ef:	4c 01 f6             	add    %r14,%rsi
    a7f2:	08 49 c7             	or     %cl,-0x39(%rcx)
    a7f5:	c3                   	ret    
    a7f6:	3e fd                	ds std 
    a7f8:	ff                   	(bad)  
    a7f9:	ff c1                	inc    %ecx
    a7fb:	e7 19                	out    %eax,$0x19
    a7fd:	4d 29 d8             	sub    %r11,%r8
    a800:	48 ff c6             	inc    %rsi
    a803:	00 48 83             	add    %cl,-0x7d(%rax)
    a806:	e9 cf 03 00 00       	jmp    abda <__sprintf_chk@plt+0x5efa>
    a80b:	48 89 ef             	mov    %rbp,%rdi
    a80e:	4d 01 df             	add    %r11,%r15
    a811:	e9 ba a2 ff ff       	jmp    4ad0 <strcoll@plt>
    a816:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a81d:	00 00 00 
    a820:	c3                   	ret    
    a821:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a828:	b8 4c 29 df 00       	mov    $0xdf294c,%eax
    a82d:	c3                   	ret    
    a82e:	66 90                	xchg   %ax,%ax
    a830:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a835:	c3                   	ret    
    a836:	66 2e 0f 1f 84 00 00 	cs nopw -0x5f810000(%rax,%rax,1)
    a83d:	00 7f a0 
    a840:	f3 48 29 d7          	repz sub %rdx,%rdi
    a844:	48 8b 57 68          	mov    0x68(%rdi),%rdx
    a848:	48 8b 46 68          	mov    0x68(%rsi),%rax
    a84c:	48                   	rex.W
    a84d:	4c 01 ff             	add    %r15,%rdi
    a850:	48                   	rex.W
    a851:	48 c1 ee 03          	shr    $0x3,%rsi
    a855:	4a 7c 40             	rex.WX jl a898 <__sprintf_chk@plt+0x5bb8>
    a858:	29 4d 0f             	sub    %ecx,0xf(%rbp)
    a85b:	af                   	scas   %es:(%rdi),%eax
    a85c:	f7 ff                	idiv   %edi
    a85e:	ff 48 83             	decl   -0x7d(%rax)
    a861:	ec                   	in     (%dx),%al
    a862:	08 0f                	or     %cl,(%rdi)
    a864:	8f 06                	pop    (%rsi)
    a866:	fd                   	std    
    a867:	ff                   	(bad)  
    a868:	ff 48 c1             	decl   -0x3f(%rax)
    a86b:	e1 32                	loope  a89f <__sprintf_chk@plt+0x5bbf>
    a86d:	ff c7                	inc    %edi
    a86f:	00 00                	add    %al,(%rax)
    a871:	00 00                	add    %al,(%rax)
    a873:	e9 3e 01 00 4c       	jmp    4c00a9b6 <obstack_alloc_failed_handler@@Base+0x4bfe8916>
    a878:	29 f1                	sub    %esi,%ecx
    a87a:	0f 8f 49 0f af c0    	jg     ffffffffc0afb7c9 <obstack_alloc_failed_handler@@Base+0xffffffffc0ad9729>
    a880:	5c                   	pop    %rsp
    a881:	e9 4a a2 ff ff       	jmp    4ad0 <strcoll@plt>
    a886:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a88d:	00 00 00 
    a890:	c3                   	ret    
    a891:	0f 85 af fd ff ff    	jne    a646 <__sprintf_chk@plt+0x5966>
    a897:	00 0f                	add    %cl,(%rdi)
    a899:	4c 85 ef             	test   %r13,%rdi
    a89c:	48 c7 c2 0e fe ff ff 	mov    $0xfffffffffffffe0e,%rdx
    a8a3:	ff                   	(bad)  
    a8a4:	ff c3                	inc    %ebx
    a8a6:	66 2e 0f 1f 84 00 00 	cs nopw -0x3b38b700(%rax,%rax,1)
    a8ad:	49 c7 c4 
    a8b0:	ad                   	lods   %ds:(%rsi),%eax
    a8b1:	01 4c 21 f9          	add    %ecx,-0x7(%rcx,%riz,1)
    a8b5:	8b 49 31             	mov    0x31(%rcx),%ecx
    a8b8:	f9                   	stc    
    a8b9:	8b 47 68             	mov    0x68(%rdi),%eax
    a8bc:	48 8b 4f 60          	mov    0x60(%rdi),%rcx
    a8c0:	48 39 4e 60          	cmp    %rcx,0x60(%rsi)
    a8c4:	7f e9                	jg     a8af <__sprintf_chk@plt+0x5bcf>
    a8c6:	0a fe                	or     %dh,%bh
    a8c8:	ff                   	(bad)  
    a8c9:	ff c1                	inc    %ecx
    a8cb:	e8 28 54 55 48       	call   4855fcf8 <obstack_alloc_failed_handler@@Base+0x4853dc58>
    a8d0:	83 ec 08             	sub    $0x8,%esp
    a8d3:	48 8b 2e             	mov    (%rsi),%rbp
    a8d6:	4c 8b 27             	mov    (%rdi),%r12
    a8d9:	e8 32 9e ff ff       	call   4710 <__errno_location@plt>
    a8de:	c7                   	(bad)  
    a8df:	48 09 d3             	or     %rdx,%rbx
    a8e2:	00 00                	add    %al,(%rax)
    a8e4:	48 83 c4 08          	add    $0x8,%rsp
    a8e8:	4c 89 e6             	mov    %r12,%rsi
    a8eb:	48 89 ef             	mov    %rbp,%rdi
    a8ee:	5d                   	pop    %rbp
    a8ef:	41 5c                	pop    %r12
    a8f1:	e9 da 48 21 f6       	jmp    fffffffff621f1d0 <obstack_alloc_failed_handler@@Base+0xfffffffff61fd130>
    a8f6:	66 2e 0f 8c d3 01    	jl,pn  aacf <__sprintf_chk@plt+0x5def>
    a8fc:	00 00                	add    %al,(%rax)
    a8fe:	00 00                	add    %al,(%rax)
    a900:	49 ff c2             	inc    %r10
    a903:	80 0f 8c             	orb    $0x8c,(%rdi)
    a906:	b6 eb                	mov    $0xeb,%dh
    a908:	b7 00                	mov    $0x0,%bh
    a90a:	31 d6                	xor    %edx,%esi
    a90c:	00 c3                	add    %al,%bl
    a90e:	66 90                	xchg   %ax,%ax
    a910:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a915:	c3                   	ret    
    a916:	66 2e 0f 1f 84 0f 8c 	cs nopw -0x50f0b374(%rdi,%rcx,1)
    a91d:	4c 0f af 
    a920:	e7 49                	out    %eax,$0x49
    a922:	01 ff                	add    %edi,%edi
    a924:	8b 96 a8 00 4c 48    	mov    0x484c00a8(%rsi),%edx
    a92a:	0f 8c 7a fc ff ff    	jl     a5aa <__sprintf_chk@plt+0x58ca>
    a930:	83 fa 03             	cmp    $0x3,%edx
    a933:	0f 4d 89 eb eb 28 0f 	cmovge 0xf28ebeb(%rcx),%ecx
    a93a:	94                   	xchg   %eax,%esp
    a93b:	c2 09 d0             	ret    $0xd009
    a93e:	83 f9 03             	cmp    $0x3,%ecx
    a941:	74 2d                	je     a970 <__sprintf_chk@plt+0x5c90>
    a943:	83 f9 09             	cmp    $0x9,%ecx
    a946:	49 29 fd             	sub    %rdi,%r13
    a949:	c1 e6 1e             	shl    $0x1e,%esi
    a94c:	00 49 39             	add    %cl,0x39(%rcx)
    a94f:	d0 00                	rolb   (%rax)
    a951:	f0 7c 0b             	lock jl a95f <__sprintf_chk@plt+0x5c7f>
    a954:	49                   	rex.WB
    a955:	48 0f af f8          	imul   %rax,%rdi
    a959:	fa                   	cli    
    a95a:	00 40 00             	add    %al,0x0(%rax)
    a95d:	00 74 4a b8          	add    %dh,-0x48(%rdx,%rcx,2)
    a961:	01 e9                	add    %ebp,%ecx
    a963:	6f                   	outsl  %ds:(%rsi),(%dx)
    a964:	03 00                	add    (%rax),%eax
    a966:	00 0f                	add    %cl,(%rdi)
    a968:	85 4d 21             	test   %ecx,0x21(%rbp)
    a96b:	c6                   	(bad)  
    a96c:	ff 00                	incl   (%rax)
    a96e:	0f 8f f8 02 00 00    	jg     ac6c <__sprintf_chk@plt+0x5f8c>
    a974:	d9 86 ac 0f 8f 55    	flds   0x558f0fac(%rsi)
    a97a:	ff                   	(bad)  
    a97b:	ff                   	(bad)  
    a97c:	ff 00                	incl   (%rax)
    a97e:	00 3d 00 40 00 00    	add    %bh,0x4000(%rip)        # e984 <__sprintf_chk@plt+0x9ca4>
    a984:	74 0f                	je     a995 <__sprintf_chk@plt+0x5cb5>
    a986:	8c 67 02             	mov    %fs,0x2(%rdi)
    a989:	00 00                	add    %al,(%rax)
    a98b:	49 c1 e4 36          	shl    $0x36,%r12
    a98f:	29 de                	sub    %ebx,%esi
    a991:	48 c1 e8 3d          	shr    $0x3d,%rax
    a995:	c7                   	(bad)  
    a996:	0f 84 76 01 00 00    	je     ab12 <__sprintf_chk@plt+0x5e32>
    a99c:	00 40 00             	add    %al,0x0(%rax)
    a99f:	00 0f                	add    %cl,(%rdi)
    a9a1:	8c 4d 89             	mov    %cs,-0x77(%rbp)
    a9a4:	cc                   	int3   
    a9a5:	ff 00                	incl   (%rax)
    a9a7:	00 74 dc 48          	add    %dh,0x48(%rsp,%rbx,8)
    a9ab:	8b 0f                	mov    (%rdi),%ecx
    a9ad:	8f                   	(bad)  
    a9ae:	fc                   	cld    
    a9af:	fe                   	(bad)  
    a9b0:	ff                   	(bad)  
    a9b1:	ff 48 8b             	decl   -0x75(%rax)
    a9b4:	4e 60                	rex.WRX (bad) 
    a9b6:	4c 0f af cf          	imul   %rdi,%r9
    a9ba:	31 cb                	xor    %ecx,%ebx
    a9bc:	7c 48                	jl     aa06 <__sprintf_chk@plt+0x5d26>
    a9be:	31 49 09             	xor    %ecx,0x9(%rcx)
    a9c1:	d8 41 54             	fadds  0x54(%rcx)
    a9c4:	55                   	push   %rbp
    a9c5:	48                   	rex.W
    a9c6:	4c 0f 8f 88 03 00 00 	rex.WR jg ad55 <__sprintf_chk@plt+0x6075>
    a9cd:	8b 26                	mov    (%rsi),%esp
    a9cf:	e8 3c 9d ff ff       	call   4710 <__errno_location@plt>
    a9d4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    a9da:	48 83 c4 08          	add    $0x8,%rsp
    a9de:	49 39 cc             	cmp    %rcx,%r12
    a9e1:	48 89 ef             	mov    %rbp,%rdi
    a9e4:	5d                   	pop    %rbp
    a9e5:	41 5c                	pop    %r12
    a9e7:	e9 e4 a0 ff e9       	jmp    ffffffffea004ad0 <obstack_alloc_failed_handler@@Base+0xffffffffe9fe2a30>
    a9ec:	a2 03 00 00 85 d2 1e 	movabs %al,0x8bfa1ed285000003
    a9f3:	fa 8b 
    a9f5:	8e a8 4c 39 c6 48    	mov    0x48c6394c(%rax),%gs
    a9fb:	89 fa                	mov    %edi,%edx
    a9fd:	8b bf a8 00 00 48    	mov    0x480000a8(%rdi),%edi
    aa03:	0f af c9             	imul   %ecx,%ecx
    aa06:	0f 49 09             	cmovns (%rcx),%ecx
    aa09:	fb                   	sti    
    aa0a:	f9                   	stc    
    aa0b:	09 0f                	or     %ecx,(%rdi)
    aa0d:	4c 21 f8             	and    %r15,%rax
    aa10:	c8 83 ff 03          	enter  $0xff83,$0x3
    aa14:	74 2a                	je     aa40 <__sprintf_chk@plt+0x5d60>
    aa16:	83 ff 09             	cmp    $0x9,%edi
    aa19:	49                   	rex.WB
    aa1a:	49 85 c2             	test   %rax,%r10
    aa1d:	4d 85 49 89          	test   %r9,-0x77(%r9)
    aa21:	fc                   	cld    
    aa22:	e1 00                	loope  aa24 <__sprintf_chk@plt+0x5d44>
    aa24:	f0 00 00             	lock add %al,(%rax)
    aa27:	84 c0                	test   %al,%al
    aa29:	74 48                	je     aa73 <__sprintf_chk@plt+0x5d93>
    aa2b:	c7 c6 cb 00 00 00    	mov    $0xcb,%esi
    aa31:	74 47                	je     aa7a <__sprintf_chk@plt+0x5d9a>
    aa33:	49 c1 ee 3a          	shr    $0x3a,%r14
    aa37:	00 c3                	add    %al,%bl
    aa39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    aa40:	84 c0                	test   %al,%al
    aa42:	75 36                	jne    aa7a <__sprintf_chk@plt+0x5d9a>
    aa44:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    aa4a:	25 00 f0 48 f7       	and    $0xf748f000,%eax
    aa4f:	ff 00                	incl   (%rax)
    aa51:	4d 09 ec             	or     %r13,%r12
    aa54:	c1 48 85 de          	rorl   $0xde,-0x7b(%rax)
    aa58:	4c 31 f7             	xor    %r14,%rdi
    aa5b:	c3                   	ret    
    aa5c:	0f 1f 40 00          	nopl   0x0(%rax)
    aa60:	8b 48 89             	mov    -0x77(%rax),%ecx
    aa63:	f2 4d 29 c5          	repnz sub %r8,%r13
    aa67:	db 49 85             	fisttpl -0x7b(%rcx)
    aa6a:	0f 85 62 fe ff ff    	jne    a8d2 <__sprintf_chk@plt+0x5bf2>
    aa70:	74 b9                	je     aa2b <__sprintf_chk@plt+0x5d4b>
    aa72:	81 f9 00 48 01 cb    	cmp    $0xcb014800,%ecx
    aa78:	74 dc                	je     aa56 <__sprintf_chk@plt+0x5d76>
    aa7a:	48 c1 e2 28          	shl    $0x28,%rdx
    aa7e:	49 c1 e3 14          	shl    $0x14,%r11
    aa82:	48 8b 7a 60          	mov    0x60(%rdx),%rdi
    aa86:	48 39 7e 49          	cmp    %rdi,0x49(%rsi)
    aa8a:	31 f8                	xor    %edi,%eax
    aa8c:	7c a5                	jl     aa33 <__sprintf_chk@plt+0x5d53>
    aa8e:	29 c8                	sub    %ecx,%eax
    aa90:	75 c9                	jne    aa5b <__sprintf_chk@plt+0x5d7b>
    aa92:	41 e9 b5 00 00 00    	rex.B jmp ab4d <__sprintf_chk@plt+0x5e6d>
    aa98:	08 48 8b             	or     %cl,-0x75(%rax)
    aa9b:	2e 49 85 da          	cs test %rbx,%r10
    aa9f:	31 f3                	xor    %esi,%ebx
    aaa1:	9c                   	pushf  
    aaa2:	ff                   	(bad)  
    aaa3:	ff c7                	inc    %edi
    aaa5:	00 00                	add    %al,(%rax)
    aaa7:	00 00                	add    %al,(%rax)
    aaa9:	0f 84 a1 03 00 00    	je     ae50 <__sprintf_chk@plt+0x6170>
    aaaf:	89 e6                	mov    %esp,%esi
    aab1:	48 89 ef             	mov    %rbp,%rdi
    aab4:	5d                   	pop    %rbp
    aab5:	41 5c                	pop    %r12
    aab7:	e9 14 a0 ff ff       	jmp    4ad0 <strcoll@plt>
    aabc:	0f 1f 40 00          	nopl   0x0(%rax)
    aac0:	f3 0f 1e fa          	endbr64 
    aac4:	48 8b 57 78          	mov    0x78(%rdi),%rdx
    aac8:	48 8b 46 78          	mov    0x78(%rsi),%rax
    aacc:	48 8b 4e 70          	mov    0x70(%rsi),%rcx
    aad0:	48                   	rex.W
    aad1:	4d 01 d1             	add    %r10,%r9
    aad4:	7f 4a                	jg     ab20 <__sprintf_chk@plt+0x5e40>
    aad6:	7c 40                	jl     ab18 <__sprintf_chk@plt+0x5e38>
    aad8:	0f 8f 36 fe ff ff    	jg     a914 <__sprintf_chk@plt+0x5c34>
    aade:	55                   	push   %rbp
    aadf:	48 83 ec 4c          	sub    $0x4c,%rsp
    aae3:	0f 4c 01             	cmovl  (%rcx),%eax
    aae6:	ce                   	(bad)  
    aae7:	22 fe                	and    %dh,%bh
    aae9:	ff                   	(bad)  
    aaea:	ff 9c ff ff c7 00 00 	lcall  *0xc7ff(%rdi,%rdi,8)
    aaf1:	00 00                	add    %al,(%rax)
    aaf3:	00 48 83             	add    %cl,-0x7d(%rax)
    aaf6:	c4                   	(bad)  
    aaf7:	4d 09 c0             	or     %r8,%r8
    aafa:	e6 48                	out    %al,$0x48
    aafc:	89 ef                	mov    %ebp,%edi
    aafe:	5d                   	pop    %rbp
    aaff:	41 5c                	pop    %r12
    ab01:	e9 ca 9f ff 48       	jmp    49004ad0 <obstack_alloc_failed_handler@@Base+0x48fe2a30>
    ab06:	39 c1                	cmp    %eax,%ecx
    ab08:	0f 1f 84 00 48 21 c8 	nopl   0xc82148(%rax,%rax,1)
    ab0f:	00 
    ab10:	c3                   	ret    
    ab11:	4c                   	rex.WR
    ab12:	49 29 c1             	sub    %rax,%r9
    ab15:	4c 31 f1             	xor    %r14,%rcx
    ab18:	b8 0f 8c c3 02       	mov    $0x2c38c0f,%eax
    ab1d:	00 00                	add    %al,(%rax)
    ab1f:	90                   	nop
    ab20:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ab25:	c3                   	ret    
    ab26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ab2d:	00 00 00 
    ab30:	f3 0f 1e fa          	endbr64 
    ab34:	48 8b 56 48          	mov    0x48(%rsi),%rdx
    ab38:	89 c3                	mov    %eax,%ebx
    ab3a:	47 78 48             	rex.RXB js ab85 <__sprintf_chk@plt+0x5ea5>
    ab3d:	8b 4f 70             	mov    0x70(%rdi),%ecx
    ab40:	49 c7 c5 38 ff ff ff 	mov    $0xffffffffffffff38,%r13
    ab47:	40 29 d0             	rex sub %edx,%eax
    ab4a:	4d 21 dc             	and    %r11,%r12
    ab4d:	54                   	push   %rsp
    ab4e:	55                   	push   %rbp
    ab4f:	48 e9 e8 fc ff ff    	rex.W jmp a83d <__sprintf_chk@plt+0x5b5d>
    ab55:	2e 4c 8b 27          	cs mov (%rdi),%r12
    ab59:	e8 b2 9b 49 21       	call   214a4710 <obstack_alloc_failed_handler@@Base+0x21482670>
    ab5e:	db 00                	fildl  (%rax)
    ab60:	0f 84 ce 01 00 00    	je     ad34 <__sprintf_chk@plt+0x6054>
    ab66:	4c 85 da             	test   %r11,%rdx
    ab69:	89 e6                	mov    %esp,%esi
    ab6b:	48 89 ef             	mov    %rbp,%rdi
    ab6e:	5d                   	pop    %rbp
    ab6f:	41 5c                	pop    %r12
    ab71:	4d 09 ed             	or     %r13,%r13
    ab74:	ff                   	(bad)  
    ab75:	ff 66 2e             	jmp    *0x2e(%rsi)
    ab78:	0f 1f 84 00 00 00 00 	nopl   0x49000000(%rax,%rax,1)
    ab7f:	49 
    ab80:	4c 39 f9             	cmp    %r15,%rcx
    ab83:	80 00 00             	addb   $0x0,(%rax)
    ab86:	00 00                	add    %al,(%rax)
    ab88:	49 09 de             	or     %rbx,%r14
    ab8b:	00 00                	add    %al,(%rax)
    ab8d:	c3                   	ret    
    ab8e:	0f 8f 10 ff ff ff    	jg     aaa4 <__sprintf_chk@plt+0x5dc4>
    ab94:	ff 4c 09 d0          	decl   -0x30(%rcx,%rcx,1)
    ab98:	0f 1f 84 00 00 00 00 	nopl   0x4c000000(%rax,%rax,1)
    ab9f:	4c 
    aba0:	21 c7                	and    %eax,%edi
    aba2:	1e                   	(bad)  
    aba3:	fa                   	cli    
    aba4:	8b 96 a8 00 00 0f    	mov    0xf0000a8(%rsi),%edx
    abaa:	8c f0                	mov    %?,%eax
    abac:	fc                   	cld    
    abad:	ff                   	(bad)  
    abae:	ff 89 cd fa 03 0f    	decl   0xf03facd(%rcx)
    abb4:	94                   	xchg   %eax,%esp
    abb5:	c0 83 fa 09 0f 94 c2 	rolb   $0xc2,-0x6bf0f606(%rbx)
    abbc:	49 31 4d 0f          	xor    %rcx,0xf(%r13)
    abc0:	af                   	scas   %es:(%rdi),%eax
    abc1:	d0 2d 83 f9 09 74    	shrb   0x7409f983(%rip)        # 740aa54a <obstack_alloc_failed_handler@@Base+0x740884aa>
    abc7:	28 8b 97 ac 00 00    	sub    %cl,0xac97(%rbx)
    abcd:	00 81 e2 00 f0 00    	add    %al,0xf000e2(%rcx)
    abd3:	00 84 c0 74 38 81 fa 	add    %al,-0x57ec78c(%rax,%rax,8)
    abda:	00 40 00             	add    %al,0x0(%rax)
    abdd:	49                   	rex.WB
    abde:	49 c7 c7 5d fc ff ff 	mov    $0xfffffffffffffc5d,%r15
    abe5:	c3                   	ret    
    abe6:	66 2e 0f 1f 84 00 00 	cs nopw 0x49000000(%rax,%rax,1)
    abed:	00 00 49 
    abf0:	85 fa                	test   %edi,%edx
    abf2:	48 c7 c6 fe 75 f1 ff 	mov    $0xfffffffffff175fe,%rsi
    abf9:	00 49 c7             	add    %cl,-0x39(%rcx)
    abfc:	c0 da fd             	rcr    $0xfd,%dl
    abff:	ff 0f                	decl   (%rdi)
    ac01:	4d 09 fe             	or     %r15,%r14
    ac04:	00 00                	add    %al,(%rax)
    ac06:	b8 4d 29 c2 ff       	mov    $0xffc2294d,%eax
    ac0b:	4d 01 e9             	add    %r13,%r9
    ac0e:	40 00 8b 86 ac 00 4c 	rex add %cl,0x4c00ac86(%rbx)
    ac15:	85 e2                	test   %esp,%edx
    ac17:	c2 69 fd             	ret    $0xfd69
    ac1a:	ff 4c 85 fb          	decl   -0x5(%rbp,%rax,4)
    ac1e:	00 00                	add    %al,(%rax)
    ac20:	74 b6                	je     abd8 <__sprintf_chk@plt+0x5ef8>
    ac22:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    ac28:	48 21 d8             	and    %rbx,%rax
    ac2b:	49 c7 c5 cb 00 00 00 	mov    $0xcb,%r13
    ac32:	ff                   	(bad)  
    ac33:	ff 4e 70             	decl   0x70(%rsi)
    ac36:	48 39 4f 70          	cmp    %rcx,0x70(%rdi)
    ac3a:	7f ca                	jg     ac06 <__sprintf_chk@plt+0x5f26>
    ac3c:	48                   	rex.W
    ac3d:	48 29 d7             	sub    %rdx,%rdi
    ac40:	75 c9                	jne    ac0b <__sprintf_chk@plt+0x5f2b>
    ac42:	41 54                	push   %r12
    ac44:	55                   	push   %rbp
    ac45:	48 83 ec 08          	sub    $0x8,%rsp
    ac49:	48 8b 2f             	mov    (%rdi),%rbp
    ac4c:	4c 8b 26             	mov    (%rsi),%r12
    ac4f:	e8 bc 9a ff ff       	call   4710 <__errno_location@plt>
    ac54:	48 39 f3             	cmp    %rsi,%rbx
    ac57:	00 4d 0f             	add    %cl,0xf(%rbp)
    ac5a:	af                   	scas   %es:(%rdi),%eax
    ac5b:	ea                   	(bad)  
    ac5c:	c4                   	(bad)  
    ac5d:	08 4c 89 e6          	or     %cl,-0x1a(%rcx,%rcx,4)
    ac61:	48 89 ef             	mov    %rbp,%rdi
    ac64:	5d                   	pop    %rbp
    ac65:	41 5c                	pop    %r12
    ac67:	e9 64 9e ff ff       	jmp    4ad0 <strcoll@plt>
    ac6c:	0f 49 c1             	cmovns %ecx,%eax
    ac6f:	e5 1b                	in     $0x1b,%eax
    ac71:	0f 1e fa             	nop    %edx
    ac74:	e9 49 85 fc ff       	jmp    fffffffffffd31c2 <obstack_alloc_failed_handler@@Base+0xfffffffffffb1122>
    ac79:	0f 1f 80 4d 0f af e3 	nopl   -0x1c50f0b3(%rax)
    ac80:	f3 0f 1e fa          	endbr64 
    ac84:	8b 8e a8 00 00 00    	mov    0xa8(%rsi),%ecx
    ac8a:	48 89 75 0f          	mov    %rsi,0xf(%rbp)
    ac8e:	8f                   	(bad)  
    ac8f:	15 fe ff ff 83       	adc    $0x83fffffe,%eax
    ac94:	f9                   	stc    
    ac95:	03 0f                	add    (%rdi),%ecx
    ac97:	94                   	xchg   %eax,%esp
    ac98:	c0 4d 31 f4          	rorb   $0xf4,0x31(%rbp)
    ac9c:	0f 94 c1             	sete   %cl
    ac9f:	09 c8                	or     %ecx,%eax
    aca1:	83 ff 03             	cmp    $0x3,%edi
    aca4:	74 2a                	je     acd0 <__sprintf_chk@plt+0x5ff0>
    aca6:	e9 48 f7 fb ff       	jmp    fffffffffffca3f3 <obstack_alloc_failed_handler@@Base+0xfffffffffffa8353>
    acab:	8b 8a ac 00 00 00    	mov    0xac(%rdx),%ecx
    acb1:	81 e1 00 f0 00 00    	and    $0xf000,%ecx
    acb7:	84 c0                	test   %al,%al
    acb9:	74 35                	je     acf0 <__sprintf_chk@plt+0x6010>
    acbb:	48 21 f3             	and    %rsi,%rbx
    acbe:	40 00 00             	rex add %al,(%rax)
    acc1:	49                   	rex.WB
    acc2:	49 0f af fa          	imul   %r10,%rdi
    acc6:	00 00                	add    %al,(%rax)
    acc8:	49 c1 ec 09          	shr    $0x9,%r12
    accc:	00 48 c1             	add    %cl,-0x3f(%rax)
    accf:	49 09 c6             	or     %rax,%r14
    acd2:	75 4c                	jne    ad20 <__sprintf_chk@plt+0x6040>
    acd4:	29 de                	sub    %ebx,%esi
    acd6:	48 c1 e3 19          	shl    $0x19,%rbx
    acda:	25 00 f0 00 00       	and    $0xf000,%eax
    acdf:	3d 00 40 00 00       	cmp    $0x4000,%eax
    ace4:	74 0f                	je     acf5 <__sprintf_chk@plt+0x6015>
    ace6:	8f 49 ff c5          	(bad)  
    acea:	ff c3                	inc    %ebx
    acec:	0f 1f 40 49          	nopl   0x49(%rax)
    acf0:	c1 e3 27             	shl    $0x27,%ebx
    acf3:	00 49 c1             	add    %cl,-0x3f(%rcx)
    acf6:	ed                   	in     (%dx),%eax
    acf7:	19 f0                	sbb    %esi,%eax
    acf9:	00 00                	add    %al,(%rax)
    acfb:	3d 00 40 00 00       	cmp    $0x4000,%eax
    ad00:	74 b9                	je     acbb <__sprintf_chk@plt+0x5fdb>
    ad02:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    ad08:	74 dc                	je     ace6 <__sprintf_chk@plt+0x6006>
    ad0a:	48 8b 4e 78          	mov    0x78(%rsi),%rcx
    ad0e:	48 8b 42 78          	mov    0x78(%rdx),%rax
    ad12:	48 8b 7a 70          	mov    0x70(%rdx),%rdi
    ad16:	49 39 f9             	cmp    %rdi,%r9
    ad19:	f7 7f ca             	idivl  -0x36(%rdi)
    ad1c:	7c 4c                	jl     ad6a <__sprintf_chk@plt+0x608a>
    ad1e:	29 e1                	sub    %esp,%ecx
    ad20:	39 c0                	cmp    %eax,%eax
    ad22:	03 00                	add    (%rax),%eax
    ad24:	00 48 83             	add    %cl,-0x7d(%rax)
    ad27:	ec                   	in     (%dx),%al
    ad28:	08 48 8b             	or     %cl,-0x75(%rax)
    ad2b:	2e 4c 8b 22          	cs mov (%rdx),%r12
    ad2f:	e8 48 c1 e1 28       	call   28e26e7c <obstack_alloc_failed_handler@@Base+0x28e04ddc>
    ad34:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ad3a:	48                   	rex.W
    ad3b:	48 89 ce             	mov    %rcx,%rsi
    ad3e:	4c 89 e6             	mov    %r12,%rsi
    ad41:	48 89 ef             	mov    %rbp,%rdi
    ad44:	5d                   	pop    %rbp
    ad45:	41 5c                	pop    %r12
    ad47:	e9 84 9d ff ff       	jmp    4ad0 <strcoll@plt>
    ad4c:	0f 1f 0f             	nopl   (%rdi)
    ad4f:	8f                   	(bad)  
    ad50:	be 01 00 00 c0       	mov    $0xc0000001,%esi
    ad55:	d0 ff                	sar    %bh
    ad57:	49 c1 e1 08          	shl    $0x8,%r9
    ad5b:	01 e6                	add    %esp,%esi
    ad5d:	00 00                	add    %al,(%rax)
    ad5f:	00 f3                	add    %dh,%bl
    ad61:	0f 1e 49 0f          	nopl   0xf(%rcx)
    ad65:	af                   	scas   %es:(%rdi),%eax
    ad66:	f2 fe 00             	repnz incb (%rax)
    ad69:	e9 87 fd ff ff       	jmp    aaf5 <__sprintf_chk@plt+0x5e15>
    ad6e:	75 30                	jne    ada0 <__sprintf_chk@plt+0x60c0>
    ad70:	41 54                	push   %r12
    ad72:	55                   	push   %rbp
    ad73:	48 83 ec 08          	sub    $0x8,%rsp
    ad77:	48 8b 2f             	mov    (%rdi),%rbp
    ad7a:	4c 8b 26             	mov    (%rsi),%r12
    ad7d:	e8 8e 48 c7 c2       	call   ffffffffc2c7f610 <obstack_alloc_failed_handler@@Base+0xffffffffc2c5d570>
    ad82:	42 fd                	rex.X std 
    ad84:	ff                   	(bad)  
    ad85:	ff 00                	incl   (%rax)
    ad87:	00 48 83             	add    %cl,-0x7d(%rax)
    ad8a:	c4                   	(bad)  
    ad8b:	08 4c 89 e6          	or     %cl,-0x1a(%rcx,%rcx,4)
    ad8f:	48 89 48 ff          	mov    %rcx,-0x1(%rax)
    ad93:	4c 09 fe             	or     %r15,%rsi
    ad96:	36 4c 85 de          	ss test %r11,%rsi
    ad9a:	48 c7 c3 88 ff ff ff 	mov    $0xffffffffffffff88,%rbx
    ada1:	01 00                	add    %eax,(%rax)
    ada3:	00 00                	add    %al,(%rax)
    ada5:	c3                   	ret    
    ada6:	49 c1 e1 24          	shl    $0x24,%r9
    adaa:	84 00                	test   %al,(%rax)
    adac:	00 00                	add    %al,(%rax)
    adae:	00 49 09             	add    %cl,0x9(%rcx)
    adb1:	49 c7 c5 53 00 00 00 	mov    $0x53,%r13
    adb8:	d2 1f                	rcrb   %cl,(%rdi)
    adba:	84 00                	test   %al,(%rax)
    adbc:	4d 29 d6             	sub    %r10,%r14
    adbf:	00 f3                	add    %dh,%bl
    adc1:	0f 1e 0f             	nopl   (%rdi)
    adc4:	49 c1 ee 3f          	shr    $0x3f,%r14
    adc8:	e9 44 fc 48 85       	jmp    ffffffff8549aa11 <obstack_alloc_failed_handler@@Base+0xffffffff85478971>
    adcd:	fb                   	sti    
    adce:	75 30                	jne    ae00 <__sprintf_chk@plt+0x6120>
    add0:	41 54                	push   %r12
    add2:	55                   	push   %rbp
    add3:	48 83 ec 08          	sub    $0x8,%rsp
    add7:	48 8b 2e             	mov    (%rsi),%rbp
    adda:	4c 8b 4c 21 c8       	mov    -0x38(%rcx,%riz,1),%r9
    addf:	99                   	cltd   
    ade0:	ff                   	(bad)  
    ade1:	ff c7                	inc    %edi
    ade3:	00 00                	add    %al,(%rax)
    ade5:	00 00                	add    %al,(%rax)
    ade7:	00 48 83             	add    %cl,-0x7d(%rax)
    adea:	c4                   	(bad)  
    adeb:	48 0f af f9          	imul   %rcx,%rdi
    adef:	46 fd                	rex.RX std 
    adf1:	48 75 4e             	rex.W jne ae42 <__sprintf_chk@plt+0x6162>
    adf4:	37                   	(bad)  
    adf5:	e9 d6 9c ff ff       	jmp    4ad0 <strcoll@plt>
    adfa:	49 f7 ff             	idiv   %r15
    adfd:	44 00 00             	add    %r8b,(%rax)
    ae00:	b8 49 85 f0 00       	mov    $0xf08549,%eax
    ae05:	c3                   	ret    
    ae06:	66 2e 0f 1f 84 00 00 	cs nopw 0xf000000(%rax,%rax,1)
    ae0d:	00 00 0f 
    ae10:	85 d8                	test   %ebx,%eax
    ae12:	03 00                	add    (%rax),%eax
    ae14:	00 ff                	add    %bh,%bh
    ae16:	ff 2e                	ljmp   *(%rsi)
    ae18:	0f 1f 84 00 00 00 0f 	nopl   -0x7af10000(%rax,%rax,1)
    ae1f:	85 
    ae20:	8f                   	(bad)  
    ae21:	fd                   	std    
    ae22:	ff                   	(bad)  
    ae23:	ff 8b 96 a8 00 00    	decl   0xa896(%rbx)
    ae29:	00 8b 8f a8 00 00    	add    %cl,0xa88f(%rbx)
    ae2f:	00 49 c1             	add    %cl,-0x3f(%rcx)
    ae32:	e5 1c                	in     $0x1c,%eax
    ae34:	94                   	xchg   %eax,%esp
    ae35:	c0 83 fa 03 48 29 c2 	rolb   $0xc2,0x294803fa(%rbx)
    ae3c:	09 0f                	or     %ecx,(%rdi)
    ae3e:	8c 57 01             	mov    %ss,0x1(%rdi)
    ae41:	00 00                	add    %al,(%rax)
    ae43:	f7 f8                	idiv   %eax
    ae45:	00 4c 01 e7          	add    %cl,-0x19(%rcx,%rax,1)
    ae49:	01 d8                	add    %ebx,%eax
    ae4b:	00 00                	add    %al,(%rax)
    ae4d:	0f 8f 14 02 00 0f    	jg     f00b067 <obstack_alloc_failed_handler@@Base+0xefe8fc7>
    ae53:	8c f2                	mov    %?,%edx
    ae55:	00 00                	add    %al,(%rax)
    ae57:	00 ff                	add    %bh,%bh
    ae59:	c1 00 40             	roll   $0x40,(%rax)
    ae5c:	00 00                	add    %al,(%rax)
    ae5e:	4c 31 d2             	xor    %r10,%rdx
    ae61:	85 d4                	test   %edx,%esp
    ae63:	75 4c                	jne    aeb1 <__sprintf_chk@plt+0x61d1>
    ae65:	c3                   	ret    
    ae66:	66 2e 0f 49 89 fe 00 	cs cmovns 0xfe(%rcx),%cx
    ae6d:	00 00 
    ae6f:	00 84 c0 75 36 8b 49 	add    %al,0x498b3675(%rax,%rax,8)
    ae76:	39 fe                	cmp    %edi,%esi
    ae78:	4c 21 fa             	and    %r15,%rdx
    ae7b:	00 f0                	add    %dh,%al
    ae7d:	00 00                	add    %al,(%rax)
    ae7f:	3d 00 40 00 4c       	cmp    $0x4c004000,%eax
    ae84:	85 e1                	test   %esp,%ecx
    ae86:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ae8b:	c3                   	ret    
    ae8c:	49 0f af d1          	imul   %r9,%rdx
    ae90:	01 e6                	add    %esp,%esi
    ae92:	03 00                	add    (%rax),%eax
    ae94:	00 00                	add    %al,(%rax)
    ae96:	25 00 f0 00 00       	and    $0xf000,%eax
    ae9b:	3d 00 40 00 00       	cmp    $0x4000,%eax
    aea0:	74 b6                	je     ae58 <__sprintf_chk@plt+0x6178>
    aea2:	49 89 d1             	mov    %rdx,%r9
    aea5:	4d 85 fe             	test   %r15,%r14
    aea8:	74 dc                	je     ae86 <__sprintf_chk@plt+0x61a6>
    aeaa:	48 8b 47 48          	mov    0x48(%rdi),%rax
    aeae:	48 39 46 48          	cmp    %rax,0x48(%rsi)
    aeb2:	7c d2                	jl     ae86 <__sprintf_chk@plt+0x61a6>
    aeb4:	75 aa                	jne    ae60 <__sprintf_chk@plt+0x6180>
    aeb6:	41 54                	push   %r12
    aeb8:	55                   	push   %rbp
    aeb9:	48 83 49 89 c2       	orq    $0xffffffffffffffc2,-0x77(%rcx)
    aebe:	8b 2f                	mov    (%rdi),%ebp
    aec0:	4c 8b 26             	mov    (%rsi),%r12
    aec3:	e8 4d 21 d2 48       	call   48d2d015 <obstack_alloc_failed_handler@@Base+0x48d0af75>
    aec8:	0f 84 26 fe ff ff    	je     acf4 <__sprintf_chk@plt+0x6014>
    aece:	49 c7 c3 f8 ff ff ff 	mov    $0xfffffffffffffff8,%r11
    aed5:	48 89 ef             	mov    %rbp,%rdi
    aed8:	5d                   	pop    %rbp
    aed9:	41 5c                	pop    %r12
    aedb:	e9 f0 9b ff e9       	jmp    ffffffffea004ad0 <obstack_alloc_failed_handler@@Base+0xffffffffe9fe2a30>
    aee0:	b8 fd ff ff 89       	mov    $0x89fffffd,%eax
    aee5:	d3 a8 00 00 00 8b    	shrl   %cl,-0x75000000(%rax)
    aeeb:	8f a8 00 00          	(bad)
    aeef:	00 83 fa 09 0f 94    	add    %al,-0x6bf0f606(%rbx)
    aef5:	c0 83 fa 03 0f 48 c7 	rolb   $0xc7,0x480f03fa(%rbx)
    aefc:	c6                   	(bad)  
    aefd:	d3 01                	roll   %cl,(%rcx)
    aeff:	00 00                	add    %al,(%rax)
    af01:	0f 8c b5 fc 48 ff    	jl     ffffffffff49abbc <obstack_alloc_failed_handler@@Base+0xffffffffff478b1c>
    af07:	c3                   	ret    
    af08:	8b 97 ac 00 00 4c    	mov    0x4c0000ac(%rdi),%edx
    af0e:	85 c3                	test   %eax,%ebx
    af10:	00 f0                	add    %dh,%al
    af12:	00 00                	add    %al,(%rax)
    af14:	84 c0                	test   %al,%al
    af16:	74 38                	je     af50 <__sprintf_chk@plt+0x6270>
    af18:	81 fa 00 40 00 49    	cmp    $0x49004000,%edx
    af1e:	49 f7 ff             	idiv   %r15
    af21:	de 00                	fiadds (%rax)
    af23:	00 00                	add    %al,(%rax)
    af25:	c3                   	ret    
    af26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    af2d:	00 00 00 
    af30:	84 c0                	test   %al,%al
    af32:	75 36                	jne    af6a <__sprintf_chk@plt+0x628a>
    af34:	49 39 f4             	cmp    %rsi,%r12
    af37:	00 00                	add    %al,(%rax)
    af39:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 19f3f <_obstack_memory_used@@Base+0x978f>
    af3f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    af44:	74 24                	je     af6a <__sprintf_chk@plt+0x628a>
    af46:	b8 ff ff 75 48       	mov    $0x4875ffff,%eax
    af4b:	c3                   	ret    
    af4c:	0f 1f 4d 01          	nopl   0x1(%rbp)
    af50:	ea                   	(bad)  
    af51:	86 49 f7             	xchg   %cl,-0x9(%rcx)
    af54:	f9                   	stc    
    af55:	00 49 09             	add    %cl,0x9(%rcx)
    af58:	f0 dd 49 49          	lock fisttpll 0x49(%rcx)
    af5c:	01 4c 39 e8          	add    %ecx,-0x18(%rcx,%rdi,1)
    af60:	ff b6 81 fa 0f 0f    	push   0xf0ffa81(%rsi)
    af66:	85 0e                	test   %ecx,(%rsi)
    af68:	ff                   	(bad)  
    af69:	ff                   	(bad)  
    af6a:	ff 8b 46 48 49 0f    	decl   0xf494846(%rbx)
    af70:	af                   	scas   %es:(%rdi),%eax
    af71:	c4                   	(bad)  
    af72:	7c d2                	jl     af46 <__sprintf_chk@plt+0x6266>
    af74:	75 49                	jne    afbf <__sprintf_chk@plt+0x62df>
    af76:	ff 49 ff             	decl   -0x1(%rcx)
    af79:	c1 83 0f 85 30 fd ff 	roll   $0xff,-0x2cf7af1(%rbx)
    af80:	ff 8b 27 e8 88 97    	decl   -0x687717d9(%rbx)
    af86:	ff                   	(bad)  
    af87:	ff c7                	inc    %edi
    af89:	00 00                	add    %al,(%rax)
    af8b:	00 0f                	add    %cl,(%rdi)
    af8d:	85 60 03             	test   %esp,0x3(%rax)
    af90:	00 00                	add    %al,(%rax)
    af92:	4c 89 e6             	mov    %r12,%rsi
    af95:	48 89 ef             	mov    %rbp,%rdi
    af98:	49 31 c2             	xor    %rax,%r10
    af9b:	c1 e2 14             	shl    $0x14,%edx
    af9e:	ff                   	(bad)  
    af9f:	ff f3                	push   %rbx
    afa1:	0f 1e fa             	nop    %edx
    afa4:	41 54                	push   %r12
    afa6:	55                   	push   %rbp
    afa7:	48 83 ec 08          	sub    $0x8,%rsp
    afab:	4c 8b 26             	mov    (%rsi),%r12
    afae:	48 8b 2f             	mov    (%rdi),%rbp
    afb1:	e8 5a 97 ff ff       	call   4710 <__errno_location@plt>
    afb6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    afbc:	48 83 c4 08          	add    $0x8,%rsp
    afc0:	4c 89 e6             	mov    %r12,%rsi
    afc3:	48 89 ef             	mov    %rbp,%rdi
    afc6:	5d                   	pop    %rbp
    afc7:	41 5c                	pop    %r12
    afc9:	e9 02 9b ff ff       	jmp    4ad0 <strcoll@plt>
    afce:	66 90                	xchg   %ax,%ax
    afd0:	f3 0f 1e 48 21       	repz nopl 0x21(%rax)
    afd5:	da 1b                	ficompl (%rbx)
    afd7:	02 00                	add    (%rax),%al
    afd9:	00 08                	add    %cl,(%rax)
    afdb:	4c 8b 27             	mov    (%rdi),%r12
    afde:	49 c1 e4 32          	shl    $0x32,%r12
    afe2:	2a 97 ff ff 49 89    	sub    -0x76b60001(%rdi),%dl
    afe8:	c3                   	ret    
    afe9:	00 00                	add    %al,(%rax)
    afeb:	00 48 83             	add    %cl,-0x7d(%rax)
    afee:	c4                   	(bad)  
    afef:	08 4c 89 e6          	or     %cl,-0x1a(%rcx,%rcx,4)
    aff3:	48 89 49 29          	mov    %rcx,0x29(%rcx)
    aff7:	cc                   	int3   
    aff8:	5c                   	pop    %rsp
    aff9:	e9 d2 9a ff ff       	jmp    4ad0 <strcoll@plt>
    affe:	66 4c 39 f8          	data16 cmp %r15,%rax
    b002:	4d 01 d5             	add    %r10,%r13
    b005:	4d 39 cb             	cmp    %r9,%r11
    b008:	00 49 31             	add    %cl,0x31(%rcx)
    b00b:	d9 a8 00 00 00 83    	fldcw  -0x7d000000(%rax)
    b011:	fa                   	cli    
    b012:	03 0f                	add    (%rdi),%ecx
    b014:	94                   	xchg   %eax,%esp
    b015:	c0 83 49 ff c2 94 c2 	rolb   $0xc2,-0x6b3d00b7(%rbx)
    b01c:	09 d0                	or     %edx,%eax
    b01e:	83 f9 03             	cmp    $0x3,%ecx
    b021:	74 2d                	je     b050 <__sprintf_chk@plt+0x6370>
    b023:	83 f9 09             	cmp    $0x9,%ecx
    b026:	74 28                	je     b050 <__sprintf_chk@plt+0x6370>
    b028:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    b02e:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    b034:	84 c0                	test   %al,%al
    b036:	74 38                	je     b070 <__sprintf_chk@plt+0x6390>
    b038:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    b03e:	74 4a                	je     b08a <__sprintf_chk@plt+0x63aa>
    b040:	b8 01 00 00 00       	mov    $0x1,%eax
    b045:	e9 6c 03 00 00       	jmp    b3b6 <__sprintf_chk@plt+0x66d6>
    b04a:	0f 84 b1 00 00 00    	je     b101 <__sprintf_chk@plt+0x6421>
    b050:	01 48 09             	add    %ecx,0x9(%rax)
    b053:	f2 8b 86 ac 00 00 00 	repnz mov 0xac(%rsi),%eax
    b05a:	25 00 f0 00 00       	and    $0xf000,%eax
    b05f:	3d 00 40 0f 49       	cmp    $0x490f4000,%eax
    b064:	01 c4                	add    %eax,%esp
    b066:	00 00                	add    %al,(%rax)
    b068:	ff 49 c7             	decl   -0x39(%rcx)
    b06b:	c2 a1 ff             	ret    $0xffa1
    b06e:	ff                   	(bad)  
    b06f:	ff 03                	incl   (%rbx)
    b071:	00 00                	add    %al,(%rax)
    b073:	00 00                	add    %al,(%rax)
    b075:	00 25 00 f0 00 49    	add    %ah,0x4900f000(%rip)        # 4901a07b <obstack_alloc_failed_handler@@Base+0x48ff7fdb>
    b07b:	89 cb                	mov    %ecx,%ebx
    b07d:	0f 8c c8 fc ff ff    	jl     ad4b <__sprintf_chk@plt+0x606b>
    b083:	49 c7 c1 49 0f af cf 	mov    $0xffffffffcfaf0f49,%r9
    b08a:	1b 54 49 0f          	sbb    0xf(%rcx,%rcx,2),%edx
    b08e:	af                   	scas   %es:(%rdi),%eax
    b08f:	cf                   	iret   
    b090:	49 ff c7             	inc    %r15
    b093:	26 48 8b 2f          	es mov (%rdi),%rbp
    b097:	e8 74 96 ff 4d       	call   4e004710 <obstack_alloc_failed_handler@@Base+0x4dfe2670>
    b09c:	89 49 29             	mov    %ecx,0x29(%rcx)
    b09f:	f1                   	int1   
    b0a0:	00 00                	add    %al,(%rax)
    b0a2:	48 83 c4 08          	add    $0x8,%rsp
    b0a6:	4c 89 e6             	mov    %r12,%rsi
    b0a9:	0f 85 a9 fe ff ff    	jne    af58 <__sprintf_chk@plt+0x6278>
    b0af:	39 ce                	cmp    %ecx,%esi
    b0b1:	49 ff c6             	inc    %r14
    b0b4:	85 0f                	test   %ecx,(%rdi)
    b0b6:	84 91 00 00 00 00    	test   %dl,0x0(%rcx)
    b0bc:	4c 21 d9             	and    %r11,%rcx
    b0bf:	48 0f 84 9c 01 00 00 	rex.W je b262 <__sprintf_chk@plt+0x6582>
    b0c6:	49 f7 fd             	idiv   %r13
    b0c9:	00 4d 31             	add    %cl,0x31(%rbp)
    b0cc:	c8 00 00 00          	enter  $0x0,$0x0
    b0d0:	83 fa 03             	cmp    $0x3,%edx
    b0d3:	0f 94 c0             	sete   %al
    b0d6:	83 fa 09             	cmp    $0x9,%edx
    b0d9:	0f 94 c2             	sete   %dl
    b0dc:	09 d0                	or     %edx,%eax
    b0de:	83 f9 03             	cmp    $0x3,%ecx
    b0e1:	e9 9b fc ff ff       	jmp    ad81 <__sprintf_chk@plt+0x60a1>
    b0e6:	74 28                	je     b110 <__sprintf_chk@plt+0x6430>
    b0e8:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    b0ee:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    b0f4:	4c 31 da             	xor    %r11,%rdx
    b0f7:	38 81 fa 00 40 00    	cmp    %al,0x4000fa(%rcx)
    b0fd:	48 c1 ef 35          	shr    $0x35,%rdi
    b101:	01 00                	add    %eax,(%rax)
    b103:	00 00                	add    %al,(%rax)
    b105:	c3                   	ret    
    b106:	66 2e 0f 1f 84 00 00 	cs nopw -0x38b70000(%rax,%rax,1)
    b10d:	00 49 c7 
    b110:	c5 10 02             	(bad)
    b113:	00 00                	add    %al,(%rax)
    b115:	49 c1 e8 28          	shr    $0x28,%r8
    b119:	00 48 21             	add    %cl,0x21(%rax)
    b11c:	f7 00 00 4c 09 d6    	testl  $0xd6094c00,(%rax)
    b122:	00 49 09             	add    %cl,0x9(%rcx)
    b125:	c7                   	(bad)  
    b126:	b8 ff ff ff 48       	mov    $0x48ffffff,%eax
    b12b:	39 fe                	cmp    %edi,%esi
    b12d:	1f                   	(bad)  
    b12e:	40 00 8b 86 ac 00 00 	rex add %cl,0xac86(%rbx)
    b135:	00 25 00 0f 8c dc    	add    %ah,-0x2373f100(%rip)        # ffffffffdc8cc03b <obstack_alloc_failed_handler@@Base+0xffffffffdc8a9f9b>
    b13b:	fe                   	(bad)  
    b13c:	ff                   	(bad)  
    b13d:	ff                   	(bad)  
    b13e:	d8 0f                	fmuls  (%rdi)
    b140:	84 10                	test   %dl,(%rax)
    b142:	02 00                	add    (%rax),%al
    b144:	00 40 00             	add    %al,0x0(%rax)
    b147:	00 74 dc 41          	add    %dh,0x41(%rsp,%rbx,8)
    b14b:	54                   	push   %rsp
    b14c:	48 c7 c2 37 fc ff ff 	mov    $0xfffffffffffffc37,%rdx
    b153:	27                   	(bad)  
    b154:	48 8b 2e             	mov    (%rsi),%rbp
    b157:	0f 84 24 01 00 00    	je     b281 <__sprintf_chk@plt+0x65a1>
    b15d:	c7 c0 ad 01 00 00    	mov    $0x1ad,%eax
    b163:	83 c4 08             	add    $0x8,%esp
    b166:	4c 89 e6             	mov    %r12,%rsi
    b169:	48 89 ef             	mov    %rbp,%rdi
    b16c:	5d                   	pop    %rbp
    b16d:	41                   	rex.B
    b16e:	48 c7 c3 f1 02 00 00 	mov    $0x2f1,%rbx
    b175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b17c:	00 00 00 
    b17f:	90                   	nop
    b180:	f3 0f 1e fa          	endbr64 
    b184:	41 56                	push   %r14
    b186:	4d 0f af da          	imul   %r10,%r11
    b18a:	8c c9                	mov    %cs,%ecx
    b18c:	03 00                	add    (%rax),%eax
    b18e:	00 48 29             	add    %cl,0x29(%rax)
    b191:	d7                   	xlat   %ds:(%rbx)
    b192:	55                   	push   %rbp
    b193:	48 83 ec 08          	sub    $0x8,%rsp
    b197:	4c                   	rex.WR
    b198:	48 f7 fe             	idiv   %rsi
    b19b:	89 ef                	mov    %ebp,%edi
    b19d:	e8 6e 97 0f 8f       	call   ffffffff8f104910 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e2870>
    b1a2:	d8 01                	fadds  (%rcx)
    b1a4:	00 00                	add    %al,(%rax)
    b1a6:	be 2e 00 00 00       	mov    $0x2e,%esi
    b1ab:	48                   	rex.W
    b1ac:	49 31 f6             	xor    %rsi,%r14
    b1af:	89 f7                	mov    %esi,%edi
    b1b1:	e8 5a 97 ff ff       	call   4910 <strrchr@plt>
    b1b6:	49 89 c4             	mov    %rax,%r12
    b1b9:	48 8d 05 fd e9 00 00 	lea    0xe9fd(%rip),%rax        # 19bbd <_obstack_memory_used@@Base+0x940d>
    b1c0:	4d 85 e4             	test   %r12,%r12
    b1c3:	4c 0f 44 e0          	cmove  %rax,%r12
    b1c7:	48 85 ed             	test   %rbp,%rbp
    b1ca:	48 0f 44 e8          	cmove  %rax,%rbp
    b1ce:	4c 0f af c8          	imul   %rax,%r9
    b1d2:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    b1d6:	c7 00 00 00 0f 84    	movl   $0x840f0000,(%rax)
    b1dc:	ba fe ff ff ec       	mov    $0xecfffffe,%edx
    b1e1:	98                   	cwtl   
    b1e2:	ff                   	(bad)  
    b1e3:	ff 48 c1             	decl   -0x3f(%rax)
    b1e6:	e7 0f                	out    %eax,$0xf
    b1e8:	48 83 c4 08          	add    $0x8,%rsp
    b1ec:	4c 89 f6             	mov    %r14,%rsi
    b1ef:	4c 89 ef             	mov    %r13,%rdi
    b1f2:	5d                   	pop    %rbp
    b1f3:	0f 8c 48 49 f7 f8    	jl     fffffffff8f7fb41 <obstack_alloc_failed_handler@@Base+0xfffffffff8f5daa1>
    b1f9:	e9 d2 98 ff ff       	jmp    4ad0 <strcoll@plt>
    b1fe:	66 90                	xchg   %ax,%ax
    b200:	48 83 c4 08          	add    $0x8,%rsp
    b204:	5d                   	pop    %rbp
    b205:	41 5c                	pop    %r12
    b207:	41 5d                	pop    %r13
    b209:	41 5e                	pop    %r14
    b20b:	c3                   	ret    
    b20c:	0f 1f 40 00          	nopl   0x0(%rax)
    b210:	f3 0f 1e fa          	endbr64 
    b214:	41 56                	push   %r14
    b216:	41 55                	push   %r13
    b218:	41                   	rex.B
    b219:	49 f7 49 0f af fb e9 	testq  $0x42e9fbaf,0xf(%r9)
    b220:	42 
    b221:	fd                   	std    
    b222:	ff                   	(bad)  
    b223:	ff 2e                	ljmp   *(%rsi)
    b225:	be 2e 00 00 00       	mov    $0x2e,%esi
    b22a:	4c 89 ef             	mov    %r13,%rdi
    b22d:	e8 de 4d 85 e5       	call   ffffffffe5860010 <obstack_alloc_failed_handler@@Base+0xffffffffe583df70>
    b232:	4d 8b 34 24          	mov    (%r12),%r14
    b236:	be 2e 00 00 e9       	mov    $0xe900002e,%esi
    b23b:	4c 85 e3             	test   %r12,%rbx
    b23e:	ff c3                	inc    %ebx
    b240:	31 f0                	xor    %esi,%eax
    b242:	ca 96 ff             	lret   $0xff96
    b245:	ff 49 89             	decl   -0x77(%rcx)
    b248:	c4                   	(bad)  
    b249:	48                   	rex.W
    b24a:	4c 21 f3             	and    %r14,%rbx
    b24d:	49 c1 e3 14          	shl    $0x14,%r11
    b251:	85 e4                	test   %esp,%esp
    b253:	4c 0f 44 e0          	cmove  %rax,%r12
    b257:	48 31 f6             	xor    %rsi,%rsi
    b25a:	48 0f 44 4c 39 c8    	cmove  -0x38(%rcx,%rdi,1),%rcx
    b260:	94                   	xchg   %eax,%esp
    b261:	ff                   	(bad)  
    b262:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    b266:	c7                   	(bad)  
    b267:	49 39 dd             	cmp    %rbx,%r13
    b26a:	00 00                	add    %al,(%rax)
    b26c:	48 89 ef             	mov    %rbp,%rdi
    b26f:	e8 5c 98 ff ff       	call   4ad0 <strcoll@plt>
    b274:	85 c0                	test   %eax,%eax
    b276:	75 18                	jne    b290 <__sprintf_chk@plt+0x65b0>
    b278:	48 83 c4 08          	add    $0x8,%rsp
    b27c:	4d 31 d6             	xor    %r10,%r14
    b27f:	4c 89 ef             	mov    %r13,%rdi
    b282:	5d                   	pop    %rbp
    b283:	41 5c                	pop    %r12
    b285:	0f 8f 89 02 00 00    	jg     b514 <__sprintf_chk@plt+0x6834>
    b28b:	8c 20                	mov    %fs,(%rax)
    b28d:	01 49 01             	add    %ecx,0x1(%rcx)
    b290:	db 83 c4 49 f7 fb    	fildl  -0x408b63c(%rbx)
    b296:	4c 0f af c2          	imul   %rdx,%r8
    b29a:	5e                   	pop    %rsi
    b29b:	c3                   	ret    
    b29c:	49 c7 c6 69 ff ff ff 	mov    $0xffffffffffffff69,%r14
    b2a3:	fa                   	cli    
    b2a4:	41 56                	push   %r14
    b2a6:	48 f7 fe             	idiv   %rsi
    b2a9:	54                   	push   %rsp
    b2aa:	55                   	push   %rbp
    b2ab:	53                   	push   %rbx
    b2ac:	74 81                	je     b22f <__sprintf_chk@plt+0x654f>
    b2ae:	a8 00                	test   $0x0,%al
    b2b0:	00 00                	add    %al,(%rax)
    b2b2:	48                   	rex.W
    b2b3:	48 c1 eb 40          	shr    $0x40,%rbx
    b2b7:	a8 00                	test   $0x0,%al
    b2b9:	00 00                	add    %al,(%rax)
    b2bb:	83 fa 03             	cmp    $0x3,%edx
    b2be:	0f 94 c0             	sete   %al
    b2c1:	83 fa 09             	cmp    $0x9,%edx
    b2c4:	0f 94 c2             	sete   %dl
    b2c7:	09 d0                	or     %edx,%eax
    b2c9:	49 f7 fb             	idiv   %r11
    b2cc:	74 49                	je     b317 <__sprintf_chk@plt+0x6637>
    b2ce:	4c 85 f2             	test   %r14,%rdx
    b2d1:	31 ea                	xor    %ebp,%edx
    b2d3:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    b2d9:	81 e2 49 0f 8f f2    	and    $0xf28f0f49,%edx
    b2df:	fd                   	std    
    b2e0:	ff                   	(bad)  
    b2e1:	ff c7                	inc    %edi
    b2e3:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    b2e9:	74 57                	je     b342 <__sprintf_chk@plt+0x6662>
    b2eb:	b8 01 00 00 00       	mov    $0x1,%eax
    b2f0:	0f 8f 37 0f 84 05    	jg     584c22d <obstack_alloc_failed_handler@@Base+0x582a18d>
    b2f6:	01 00                	add    %eax,(%rax)
    b2f8:	00 0f                	add    %cl,(%rdi)
    b2fa:	1f                   	(bad)  
    b2fb:	80 00 00             	addb   $0x0,(%rax)
    b2fe:	00 00                	add    %al,(%rax)
    b300:	84 c0                	test   %al,%al
    b302:	75 3e                	jne    b342 <__sprintf_chk@plt+0x6662>
    b304:	8b 83 ac 48 7c 78    	mov    0x787c48ac(%rbx),%eax
    b30a:	04 00                	add    $0x0,%al
    b30c:	f0 00 00             	lock add %al,(%rax)
    b30f:	3d 00 40 49 f7       	cmp    $0xf7494000,%eax
    b314:	ff 2c 5b             	ljmp   *(%rbx,%rbx,2)
    b317:	b8 48 c1 e3 17       	mov    $0x17e3c148,%eax
    b31c:	5d                   	pop    %rbp
    b31d:	41                   	rex.B
    b31e:	48 0f af d7          	imul   %rdi,%rdx
    b322:	5e                   	pop    %rsi
    b323:	0f 8f 5c ff ff ff    	jg     b285 <__sprintf_chk@plt+0x65a5>
    b329:	4c 89 fe             	mov    %r15,%rsi
    b32c:	04 ff                	add    $0xff,%al
    b32e:	ff                   	(bad)  
    b32f:	ff f0                	push   %rax
    b331:	49 c1 ea 19          	shr    $0x19,%r10
    b335:	0f af f6             	imul   %esi,%esi
    b338:	48 c1 e9 08          	shr    $0x8,%rcx
    b33c:	48 89 fa             	mov    %rdi,%rdx
    b33f:	00 7f 00             	add    %bh,0x0(%rdi)
    b342:	4c 8b 2f             	mov    (%rdi),%r13
    b345:	be 2e 00 00 00       	mov    $0x2e,%esi
    b34a:	4c 89 49 85          	mov    %r9,-0x7b(%rcx)
    b34e:	c9                   	leave  
    b34f:	01 f6                	add    %esi,%esi
    b351:	ff 4c 49 29          	decl   0x29(%rcx,%rcx,2)
    b355:	dc 2e                	fsubrl (%rsi)
    b357:	00 00                	add    %al,(%rax)
    b359:	48 c1 ee 0d          	shr    $0xd,%rsi
    b35d:	4c 89 f7             	mov    %r14,%rdi
    b360:	e8 ab 95 ff 0f       	call   10004910 <obstack_alloc_failed_handler@@Base+0xffe2870>
    b365:	8f a8 00 00          	(bad)
    b369:	00 39                	add    %bh,(%rcx)
    b36b:	c0 e8 00             	shr    $0x0,%al
    b36e:	00 4d 85             	add    %cl,-0x7b(%rbp)
    b371:	0f 84 77 fe ff ff    	je     b1ee <__sprintf_chk@plt+0x650e>
    b377:	4d 09 f3             	or     %r14,%r11
    b37a:	0f 44 e8             	cmove  %eax,%ebp
    b37d:	e8 8e eb ab ff       	call   ffffffffffac9f10 <obstack_alloc_failed_handler@@Base+0xffffffffffaa7e70>
    b382:	49 31 d2             	xor    %rdx,%r10
    b385:	49 39 c8             	cmp    %rcx,%r8
    b388:	da 03                	fiaddl (%rbx)
    b38a:	00 00                	add    %al,(%rax)
    b38c:	89 48 f7             	mov    %ecx,-0x9(%rax)
    b38f:	fb                   	sti    
    b390:	4c 09 49 c1          	or     %r9,-0x3f(%rcx)
    b394:	ea                   	(bad)  
    b395:	21 85 55 ff ff ff    	and    %eax,-0xab(%rbp)
    b39b:	5b                   	pop    %rbx
    b39c:	4c 89 4c 89 ca       	mov    %r9,-0x36(%rcx,%rcx,4)
    b3a1:	89 ef                	mov    %ebp,%edi
    b3a3:	41 5c                	pop    %r12
    b3a5:	41 5d                	pop    %r13
    b3a7:	41 0f 84 4d 0f af f4 	rex.B je fffffffff4afc2fb <obstack_alloc_failed_handler@@Base+0xfffffffff4ada25b>
    b3ae:	66 90                	xchg   %ax,%ax
    b3b0:	49 0f 8f 89 01 00 00 	rex.WB jg b540 <__sprintf_chk@plt+0x6860>
    b3b7:	55                   	push   %rbp
    b3b8:	41 54                	push   %r12
    b3ba:	55                   	push   %rbp
    b3bb:	53                   	push   %rbx
    b3bc:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    b3c2:	48                   	rex.W
    b3c3:	4c 09 c2             	or     %r8,%rdx
    b3c6:	4d 29 e0             	sub    %r12,%r8
    b3c9:	00 00                	add    %al,(%rax)
    b3cb:	83 fa 49             	cmp    $0x49,%edx
    b3ce:	ff 48 c1             	decl   -0x3f(%rax)
    b3d1:	e0 14                	loopne b3e7 <__sprintf_chk@plt+0x6707>
    b3d3:	09 0f                	or     %ecx,(%rdi)
    b3d5:	94                   	xchg   %eax,%esp
    b3d6:	c2 09 48             	ret    $0x4809
    b3d9:	e9 93 fc ff ff       	jmp    b071 <__sprintf_chk@plt+0x6391>
    b3de:	83 f9 09             	cmp    $0x9,%ecx
    b3e1:	74 2d                	je     b410 <__sprintf_chk@plt+0x6730>
    b3e3:	8b 97 ac 00 00 0f    	mov    0xf0000ac(%rdi),%edx
    b3e9:	8c b5 03 00 00 49    	mov    %?,0x49000003(%rbp)
    b3ef:	c1 ef 24             	shr    $0x24,%edi
    b3f2:	e6 07                	out    %al,$0x7
    b3f4:	fa                   	cli    
    b3f5:	00 40 00             	add    %al,0x0(%rax)
    b3f8:	00 74 57 b8          	add    %dh,-0x48(%rdi,%rdx,2)
    b3fc:	01 00                	add    %eax,(%rax)
    b3fe:	00 00                	add    %al,(%rax)
    b400:	5b                   	pop    %rbx
    b401:	5d                   	pop    %rbp
    b402:	41 5c                	pop    %r12
    b404:	41                   	rex.B
    b405:	49                   	rex.WB
    b406:	49 c7 c4 3f 02 00 00 	mov    $0x23f,%r12
    b40d:	00 00                	add    %al,(%rax)
    b40f:	e9 73 01 48 f7       	jmp    fffffffff748b587 <obstack_alloc_failed_handler@@Base+0xfffffffff74694e7>
    b414:	f9                   	stc    
    b415:	86 ac 48 21 f8 c9 ad 	xchg   %ch,-0x523607df(%rax,%rcx,2)
    b41c:	4c                   	rex.WR
    b41d:	49 09 cd             	or     %rcx,%r13
    b420:	00 40 00             	add    %al,0x0(%rax)
    b423:	00 74 2c 5b          	add    %dh,0x5b(%rsp,%rbp,1)
    b427:	48 85 f3             	test   %rsi,%rbx
    b42a:	0f 85 e7 02 00 00    	jne    b717 <__sprintf_chk@plt+0x6a37>
    b430:	dd 41 5e             	fldl   0x5e(%rcx)
    b433:	c3                   	ret    
    b434:	0f 1f 40 00          	nopl   0x0(%rax)
    b438:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    b43e:	25 49 85 da 4c       	and    $0x4cda8549,%eax
    b443:	01 c0                	add    %eax,%eax
    b445:	c1 e2 27             	shl    $0x27,%edx
    b448:	74 a9                	je     b3f3 <__sprintf_chk@plt+0x6713>
    b44a:	81 fa 00 40 00 0f    	cmp    $0xf004000,%edx
    b450:	8f                   	(bad)  
    b451:	2d 02 00 00 ea       	sub    $0xea000002,%eax
    b456:	2e 0f 8f 48 fd ff ff 	jg,pn  b1a5 <__sprintf_chk@plt+0x64c5>
    b45d:	4c 29 e9             	sub    %r13,%rcx
    b460:	2d fe ff ff 33       	sub    $0x33fffffe,%eax
    b465:	be 2e 00 00 00       	mov    $0x2e,%esi
    b46a:	48 89 c5             	mov    %rax,%rbp
    b46d:	4c 89 f7             	mov    %r14,%rdi
    b470:	e8 9b 0f 84 49       	call   4984c410 <obstack_alloc_failed_handler@@Base+0x4982a370>
    b475:	c1 e8 2c             	shr    $0x2c,%eax
    b478:	48                   	rex.W
    b479:	4d 85 e4             	test   %r12,%r12
    b47c:	e7 00                	out    %eax,$0x0
    b47e:	00 49 f7             	add    %cl,-0x9(%rcx)
    b481:	ff 4c 0f 44          	decl   0x44(%rdi,%rcx,1)
    b485:	49 31 d7             	xor    %rdx,%r15
    b488:	ed                   	in     (%dx),%eax
    b489:	48 0f 44 e8          	cmove  %rax,%rbp
    b48d:	e8 7e 92 ff ff       	call   4710 <__errno_location@plt>
    b492:	4c 89 e6             	mov    %r12,%rsi
    b495:	c7 00 49 d1 e8 00    	movl   $0xe8d149,(%rax)
    b49b:	4d 85 ea             	test   %r13,%r10
    b49e:	e8 2d 96 ff ff       	call   4ad0 <strcoll@plt>
    b4a3:	85 c0                	test   %eax,%eax
    b4a5:	0f 85 55 ff ff ff    	jne    b400 <__sprintf_chk@plt+0x6720>
    b4ab:	5b                   	pop    %rbx
    b4ac:	4c 89 49 09          	mov    %r9,0x9(%rcx)
    b4b0:	dc 89 0f 84 98 fd    	fmull  -0x2677bf1(%rcx)
    b4b6:	ff                   	(bad)  
    b4b7:	ff 48 c1             	decl   -0x3f(%rax)
    b4ba:	eb 3d                	jmp    b4f9 <__sprintf_chk@plt+0x6819>
    b4bc:	ff                   	(bad)  
    b4bd:	ff 66 90             	jmp    *-0x70(%rsi)
    b4c0:	48 ff c3             	inc    %rbx
    b4c3:	53                   	push   %rbx
    b4c4:	89 d3                	mov    %edx,%ebx
    b4c6:	48 85 ff             	test   %rdi,%rdi
    b4c9:	0f 84 91 00 00 00    	je     b560 <__sprintf_chk@plt+0x6880>
    b4cf:	49 89 fc             	mov    %rdi,%r12
    b4d2:	4c 85 ea             	test   %r13,%rdx
    b4d5:	ff                   	(bad)  
    b4d6:	ff 4c 89 e7          	decl   -0x19(%rcx,%rcx,4)
    b4da:	48 89 49 4d          	mov    %rcx,0x4d(%rcx)
    b4de:	89 e5                	mov    %esp,%ebp
    b4e0:	00 00                	add    %al,(%rax)
    b4e2:	48 8b 2d bf 6a 01 00 	mov    0x16abf(%rip),%rbp        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    b4e9:	4c 89 e7             	mov    %r12,%rdi
    b4ec:	29 c3                	sub    %eax,%ebx
    b4ee:	b8 00 00 00 00       	mov    $0x0,%eax
    b4f3:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    b4f7:	48 85 f9             	test   %rdi,%rcx
    b4fa:	e8 d1 94 ff ff       	call   49d0 <fputs_unlocked@plt>
    b4ff:	4c 89 e7             	mov    %r12,%rdi
    b502:	4c 63 e3             	movslq %ebx,%r12
    b505:	e8 76 93 ff ff       	call   4880 <strlen@plt>
    b50a:	49 01 c4             	add    %rax,%r12
    b50d:	0f 1f 00             	nopl   (%rax)
    b510:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    b514:	48 8b 47 28          	mov    0x28(%rdi),%rax
    b518:	48 3b 47 30          	cmp    0x30(%rdi),%rax
    b51c:	73 32                	jae    b550 <__sprintf_chk@plt+0x6870>
    b51e:	48 8d 50 01          	lea    0x1(%rax),%rdx
    b522:	48 89 57 28          	mov    %rdx,0x28(%rdi)
    b526:	0f 85 0f 85 7c 00    	jne    7d3a3b <obstack_alloc_failed_handler@@Base+0x7b199b>
    b52c:	00 00                	add    %al,(%rax)
    b52e:	0f 85 7d fc ff ff    	jne    b1b1 <__sprintf_chk@plt+0x64d1>
    b534:	00 5b 5d             	add    %bl,0x5d(%rbx)
    b537:	49                   	rex.WB
    b538:	49 21 d3             	and    %rdx,%r11
    b53b:	01 4d 0f             	add    %ecx,0xf(%rbp)
    b53e:	af                   	scas   %es:(%rdi),%eax
    b53f:	cd 05                	int    $0x5
    b541:	48 39 d9             	cmp    %rbx,%rcx
    b544:	ff c0                	inc    %eax
    b546:	7c 02                	jl     b54a <__sprintf_chk@plt+0x686a>
    b548:	00 00                	add    %al,(%rax)
    b54a:	84 00                	test   %al,(%rax)
    b54c:	00 00                	add    %al,(%rax)
    b54e:	0f 84 38 fe ff ff    	je     b38c <__sprintf_chk@plt+0x66ac>
    b554:	00 e8                	add    %ch,%al
    b556:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    b557:	93                   	xchg   %eax,%ebx
    b558:	ff                   	(bad)  
    b559:	ff                   	(bad)  
    b55a:	eb 48                	jmp    b5a4 <__sprintf_chk@plt+0x68c4>
    b55c:	75 30                	jne    b58e <__sprintf_chk@plt+0x68ae>
    b55e:	40 00 48 89          	rex add %cl,-0x77(%rax)
    b562:	49 89 dc             	mov    %rbx,%r12
    b565:	00 00                	add    %al,(%rax)
    b567:	00 31                	add    %dh,(%rcx)
    b569:	c0 4c 63 e3 48       	rorb   $0x48,-0x1d(%rbx,%riz,2)
    b56e:	8d 35 fc e4 00 00    	lea    0xe4fc(%rip),%esi        # 19a70 <_obstack_memory_used@@Base+0x92c0>
    b574:	e8 c7 95 ff ff       	call   4b40 <__printf_chk@plt>
    b579:	eb b3                	jmp    b52e <__sprintf_chk@plt+0x684e>
    b57b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b580:	55                   	push   %rbp
    b581:	53                   	push   %rbx
    b582:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    b589:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    b58e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    b595:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    b59a:	48 83 ec 38          	sub    $0x38,%rsp
    b59e:	48 89 fb             	mov    %rdi,%rbx
    b5a1:	48                   	rex.W
    b5a2:	4d 0f af e0          	imul   %r8,%r12
    b5a6:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    b5ab:	89 d1                	mov    %edx,%ecx
    b5ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b5b4:	00 00 
    b5b6:	48 89 84 24 28 20 00 	mov    %rax,0x2028(%rsp)
    b5bd:	00 
    b5be:	31 c0                	xor    %eax,%eax
    b5c0:	48 89 f2             	mov    %rsi,%rdx
    b5c3:	4c 8d 4c 24 0f       	lea    0xf(%rsp),%r9
    b5c8:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    b5cd:	48 89 de             	mov    %rbx,%rsi
    b5d0:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    b5d5:	e8 f6 8d 00 00       	call   143d0 <_obstack_memory_used@@Base+0x3c20>
    b5da:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    b5df:	48 39 ef             	cmp    %rbp,%rdi
    b5e2:	74 0a                	je     b5ee <__sprintf_chk@plt+0x690e>
    b5e4:	48 39 df             	cmp    %rbx,%rdi
    b5e7:	74 05                	je     b5ee <__sprintf_chk@plt+0x690e>
    b5e9:	4c 85 f9             	test   %r15,%rcx
    b5ec:	ff                   	(bad)  
    b5ed:	ff 0f                	decl   (%rdi)
    b5ef:	b6 44                	mov    $0x44,%dh
    b5f1:	24 0f                	and    $0xf,%al
    b5f3:	48 03 44 24 10       	add    0x10(%rsp),%rax
    b5f8:	48 8b 94 24 28 20 00 	mov    0x2028(%rsp),%rdx
    b5ff:	00 
    b600:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b607:	00 00 
    b609:	75 0a                	jne    b615 <__sprintf_chk@plt+0x6935>
    b60b:	48 81 c4 38 20 00 00 	add    $0x2038,%rsp
    b612:	5b                   	pop    %rbx
    b613:	5d                   	pop    %rbp
    b614:	c3                   	ret    
    b615:	e8 76 92 ff ff       	call   4890 <__stack_chk_fail@plt>
    b61a:	66 0f 1f 49 f7       	nopw   -0x9(%rcx)
    b61f:	fd                   	std    
    b620:	41 57                	push   %r15
    b622:	48 89 f0             	mov    %rsi,%rax
    b625:	41 56                	push   %r14
    b627:	48 d1 e8             	shr    %rax
    b62a:	41 55                	push   %r13
    b62c:	41 54                	push   %r12
    b62e:	55                   	push   %rbp
    b62f:	48 89 cd             	mov    %rcx,%rbp
    b632:	53                   	push   %rbx
    b633:	48 89 fb             	mov    %rdi,%rbx
    b636:	48 83 ec 38          	sub    $0x38,%rsp
    b63a:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b63f:	48 29 c6             	sub    %rax,%rsi
    b642:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b647:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    b64b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    b650:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    b655:	48 83 fe 02          	cmp    $0x2,%rsi
    b659:	0f 87 f1 01 00 00    	ja     b850 <__sprintf_chk@plt+0x6b70>
    b65f:	0f 84 c3 00 00 00    	je     b728 <__sprintf_chk@plt+0x6a48>
    b665:	48 83 7c 24 10 03    	cmpq   $0x3,0x10(%rsp)
    b66b:	0f 85 e7 00 00 00    	jne    b758 <__sprintf_chk@plt+0x6a78>
    b671:	4c 8b 33             	mov    (%rbx),%r14
    b674:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b679:	4c 89 30             	mov    %r14,(%rax)
    b67c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b681:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b688:	00 
    b689:	45 31 ff             	xor    %r15d,%r15d
    b68c:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    b691:	4c 8b 20             	mov    (%rax),%r12
    b694:	0f 1f 40 00          	nopl   0x0(%rax)
    b698:	4c 89 e6             	mov    %r12,%rsi
    b69b:	4c 89 f7             	mov    %r14,%rdi
    b69e:	49 83 c7 01          	add    $0x1,%r15
    b6a2:	ff d5                	call   *%rbp
    b6a4:	85 c0                	test   %eax,%eax
    b6a6:	7e 24                	jle    b6cc <__sprintf_chk@plt+0x69ec>
    b6a8:	4e 89 64 fb f8       	mov    %r12,-0x8(%rbx,%r15,8)
    b6ad:	49 83 c5 01          	add    $0x1,%r13
    b6b1:	4c 39 6c 24 10       	cmp    %r13,0x10(%rsp)
    b6b6:	74 38                	je     b6f0 <__sprintf_chk@plt+0x6a10>
    b6b8:	4e 8b 24 eb          	mov    (%rbx,%r13,8),%r12
    b6bc:	4c 89 f7             	mov    %r14,%rdi
    b6bf:	49 83 c7 01          	add    $0x1,%r15
    b6c3:	4c 89 e6             	mov    %r12,%rsi
    b6c6:	ff d5                	call   *%rbp
    b6c8:	85 c0                	test   %eax,%eax
    b6ca:	7f dc                	jg     b6a8 <__sprintf_chk@plt+0x69c8>
    b6cc:	48 83 04 24 01       	addq   $0x1,(%rsp)
    b6d1:	48 8b 04 24          	mov    (%rsp),%rax
    b6d5:	4e 89 74 fb f8       	mov    %r14,-0x8(%rbx,%r15,8)
    b6da:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    b6df:	0f 84 5b 01 00 00    	je     b840 <__sprintf_chk@plt+0x6b60>
    b6e5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    b6ea:	4c 8b 34 c2          	mov    (%rdx,%rax,8),%r14
    b6ee:	eb a8                	jmp    b698 <__sprintf_chk@plt+0x69b8>
    b6f0:	48 8b 04 24          	mov    (%rsp),%rax
    b6f4:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    b6f9:	4a 8d 3c fb          	lea    (%rbx,%r15,8),%rdi
    b6fd:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    b702:	48 83 c4 38          	add    $0x38,%rsp
    b706:	49 29 c4             	sub    %rax,%r12
    b709:	5b                   	pop    %rbx
    b70a:	5d                   	pop    %rbp
    b70b:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
    b712:	00 
    b713:	48 8d 34 c1          	lea    (%rcx,%rax,8),%rsi
    b717:	41 5c                	pop    %r12
    b719:	41 5d                	pop    %r13
    b71b:	41 5e                	pop    %r14
    b71d:	41 5f                	pop    %r15
    b71f:	e9 2c 93 ff ff       	jmp    4a50 <memcpy@plt>
    b724:	0f 74 ad 00 4c 8b 30 	pcmpeqb 0x308b4c00(%rbp),%mm5
    b72b:	4c 8b 60 08          	mov    0x8(%rax),%r12
    b72f:	49 89 c7             	mov    %rax,%r15
    b732:	4c 89 e6             	mov    %r12,%rsi
    b735:	4c 89 f7             	mov    %r14,%rdi
    b738:	ff d1                	call   *%rcx
    b73a:	85 c0                	test   %eax,%eax
    b73c:	0f 8e 23 ff ff ff    	jle    b665 <__sprintf_chk@plt+0x6985>
    b742:	48                   	rex.W
    b743:	48                   	rex.W
    b744:	48 21 c2             	and    %rax,%rdx
    b747:	48 f7 ff             	idiv   %rdi
    b74a:	27                   	(bad)  
    b74b:	4d 89 e9             	mov    %r13,%r9
    b74e:	dc 48 39             	fmull  0x39(%rax)
    b751:	4d 01 d8             	add    %r11,%r8
    b754:	ff 0f                	decl   (%rdi)
    b756:	1f                   	(bad)  
    b757:	00 48 8b             	add    %cl,-0x75(%rax)
    b75a:	44 24 10             	rex.R and $0x10,%al
    b75d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b762:	48 c1 e8 02          	shr    $0x2,%rax
    b766:	48 29 c6             	sub    %rax,%rsi
    b769:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b76e:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    b772:	49 c1 e8 04          	shr    $0x4,%r8
    b776:	0f 87 05 01 00 00    	ja     b881 <__sprintf_chk@plt+0x6ba1>
    b77c:	0f 84 33 01 00 00    	je     b8b5 <__sprintf_chk@plt+0x6bd5>
    b782:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
    b788:	0f 87 d6 00 00 00    	ja     b864 <__sprintf_chk@plt+0x6b84>
    b78e:	4c 8b 33             	mov    (%rbx),%r14
    b791:	0f 84 ff 00 00 00    	je     b896 <__sprintf_chk@plt+0x6bb6>
    b797:	4d 8b 3f             	mov    (%r15),%r15
    b79a:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b7a1:	00 
    b7a2:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    b7a7:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    b7ac:	0f 1f 40 00          	nopl   0x0(%rax)
    b7b0:	4c 89 fe             	mov    %r15,%rsi
    b7b3:	4c 89 f7             	mov    %r14,%rdi
    b7b6:	49 83 c5 08          	add    $0x8,%r13
    b7ba:	ff d5                	call   *%rbp
    b7bc:	85 c0                	test   %eax,%eax
    b7be:	7e 23                	jle    b7e3 <__sprintf_chk@plt+0x6b03>
    b7c0:	4d 89 7d f8          	mov    %r15,-0x8(%r13)
    b7c4:	49 83 c4 01          	add    $0x1,%r12
    b7c8:	4c 39 64 24 08       	cmp    %r12,0x8(%rsp)
    b7cd:	74 3f                	je     b80e <__sprintf_chk@plt+0x6b2e>
    b7cf:	4e 8b 3c e3          	mov    (%rbx,%r12,8),%r15
    b7d3:	4c 89 f7             	mov    %r14,%rdi
    b7d6:	49 83 c5 49          	add    $0x49,%r13
    b7da:	29 c5                	sub    %eax,%ebp
    b7dc:	fe                   	(bad)  
    b7dd:	ff d5                	call   *%rbp
    b7df:	85 c0                	test   %eax,%eax
    b7e1:	4c 09 d7             	or     %r10,%rdi
    b7e4:	83 04 24 01          	addl   $0x1,(%rsp)
    b7e8:	48 8b 04 24          	mov    (%rsp),%rax
    b7ec:	4d 89 75 f8          	mov    %r14,-0x8(%r13)
    b7f0:	48 39 44 24 20       	cmp    %rax,0x20(%rsp)
    b7f5:	74 09                	je     b800 <__sprintf_chk@plt+0x6b20>
    b7f7:	4c                   	rex.WR
    b7f8:	4c 31 cb             	xor    %r9,%rbx
    b7fb:	eb b3                	jmp    b7b0 <__sprintf_chk@plt+0x6ad0>
    b7fd:	0f 1f 00             	nopl   (%rax)
    b800:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b805:	4c 89 24 24          	mov    %r12,(%rsp)
    b809:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b80e:	48 8b 04 24          	mov    (%rsp),%rax
    b812:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b817:	4c 89 ef             	mov    %r13,%rdi
    b81a:	48 29 c2             	sub    %rax,%rdx
    b81d:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    b821:	48 c1 e2 03          	shl    $0x3,%rdx
    b825:	e8 26 92 ff ff       	call   4a50 <memcpy@plt>
    b82a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b82f:	4c 8b 30             	mov    (%rax),%r14
    b832:	e9 45 fe ff ff       	jmp    b67c <__sprintf_chk@plt+0x699c>
    b837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b83e:	00 00 
    b840:	48 83 c4 38          	add    $0x38,%rsp
    b844:	5b                   	pop    %rbx
    b845:	5d                   	pop    %rbp
    b846:	41 5c                	pop    %r12
    b848:	41 5d                	pop    %r13
    b84a:	41 5e                	pop    %r14
    b84c:	41 5f                	pop    %r15
    b84e:	c3                   	ret    
    b84f:	90                   	nop
    b850:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    b855:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    b85a:	e8 c1 fd ff ff       	call   b620 <__sprintf_chk@plt+0x6940>
    b85f:	e9 01 fe ff ff       	jmp    b665 <__sprintf_chk@plt+0x6985>
    b864:	48 8b 4c 31 db       	mov    -0x25(%rcx,%rsi,1),%rcx
    b869:	48                   	rex.W
    b86a:	49 c1 e4 15          	shl    $0x15,%r12
    b86e:	48 89 e9             	mov    %rbp,%rcx
    b871:	48 89 df             	mov    %rbx,%rdi
    b874:	e8 a7 fd ff ff       	call   b620 <__sprintf_chk@plt+0x6940>
    b879:	4c 8b 33             	mov    (%rbx),%r14
    b87c:	4d 31 c4             	xor    %r8,%r12
    b87f:	ff                   	(bad)  
    b880:	ff 49 c1             	decl   -0x3f(%rcx)
    b883:	eb 37                	jmp    b8bc <__sprintf_chk@plt+0x6bdc>
    b885:	18 48 89             	sbb    %cl,-0x77(%rax)
    b888:	49 f7 f9             	idiv   %r9
    b88b:	ff                   	(bad)  
    b88c:	e8 8f 49 09 c9       	call   ffffffffc90a0220 <obstack_alloc_failed_handler@@Base+0xffffffffc907e180>
    b891:	e9 0f 85 86 fd       	jmp    fffffffffd873da5 <obstack_alloc_failed_handler@@Base+0xfffffffffd851d05>
    b896:	ff                   	(bad)  
    b897:	ff 63 08             	jmp    *0x8(%rbx)
    b89a:	4c 89 f7             	mov    %r14,%rdi
    b89d:	4c 89 0f             	mov    %r9,(%rdi)
    b8a0:	85 ef                	test   %ebp,%edi
    b8a2:	01 00                	add    %eax,(%rax)
    b8a4:	00 d3                	add    %dl,%bl
    b8a6:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    b8aa:	4d 89 e6             	mov    %r12,%r14
    b8ad:	4c 89 0f             	mov    %r9,(%rdi)
    b8b0:	84 e2                	test   %ah,%dl
    b8b2:	03 00                	add    (%rax),%eax
    b8b4:	00 4d 8b             	add    %cl,-0x75(%rbp)
    b8b7:	27                   	(bad)  
    b8b8:	4d 8b 6f 08          	mov    0x8(%r15),%r13
    b8bc:	4c 89 e7             	mov    %r12,%rdi
    b8bf:	4c 89 ee             	mov    %r13,%rsi
    b8c2:	ff d5                	call   *%rbp
    b8c4:	85 c0                	test   %eax,%eax
    b8c6:	0f 8e b6 fe ff ff    	jle    b782 <__sprintf_chk@plt+0x6aa2>
    b8cc:	4d 89 2f             	mov    %r13,(%r15)
    b8cf:	4d 89 67 08          	mov    %r12,0x8(%r15)
    b8d3:	e9 aa fe ff ff       	jmp    b782 <__sprintf_chk@plt+0x6aa2>
    b8d8:	0f 1f 84 00 00 48 09 	nopl   -0x20f6b800(%rax,%rax,1)
    b8df:	df 
    b8e0:	41 54                	push   %r12
    b8e2:	55                   	push   %rbp
    b8e3:	53                   	push   %rbx
    b8e4:	48 85 ff             	test   %rdi,%rdi
    b8e7:	74 67                	je     b950 <__sprintf_chk@plt+0x6c70>
    b8e9:	48 89 fd             	mov    %rdi,%rbp
    b8ec:	e8 7f fb ff 48       	call   4900b470 <obstack_alloc_failed_handler@@Base+0x48fe93d0>
    b8f1:	0f 84 29 01 00 00    	je     ba20 <__sprintf_chk@plt+0x6d40>
    b8f7:	00 00                	add    %al,(%rax)
    b8f9:	00 0f                	add    %cl,(%rdi)
    b8fb:	8c 54 02 00          	mov    %ss,0x0(%rdx,%rax,1)
    b8ff:	00 c3                	add    %al,%bl
    b901:	48 89 c7             	mov    %rax,%rdi
    b904:	48 c7 c0 b5 4c 31 e0 	mov    $0xffffffffe0314cb5,%rax
    b90b:	00 00                	add    %al,(%rax)
    b90d:	7f 8d                	jg     b89c <__sprintf_chk@plt+0x6bbc>
    b90f:	e9 7e fd ff ff       	jmp    b692 <__sprintf_chk@plt+0x69b2>
    b914:	48 85 c0             	test   %rax,%rax
    b917:	74 28                	je     b941 <__sprintf_chk@plt+0x6c61>
    b919:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b920:	b8 01 00 00 00       	mov    $0x1,%eax
    b925:	49                   	rex.WB
    b926:	48 21 c6             	and    %rax,%rsi
    b929:	09 48 89             	or     %ecx,-0x77(%rax)
    b92c:	da 66 41             	fisubl 0x41(%rsi)
    b92f:	89 44 24 08          	mov    %eax,0x8(%rsp)
    b933:	4c                   	rex.WR
    b934:	49 85 fb             	test   %rdi,%r11
    b937:	48 c1 e3 33          	shl    $0x33,%rbx
    b93b:	41 c6 44 1c 09 00    	movb   $0x0,0x9(%r12,%rbx,1)
    b941:	4c 89 e0             	mov    %r12,%rax
    b944:	5b                   	pop    %rbx
    b945:	5d                   	pop    %rbp
    b946:	41 5c                	pop    %r12
    b948:	c3                   	ret    
    b949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b950:	bf 80 00 00 00       	mov    $0x80,%edi
    b955:	e8 36 8d ff ff       	call   4690 <malloc@plt>
    b95a:	49 89 c4             	mov    %rax,%r12
    b95d:	48 85 c0             	test   %rax,%rax
    b960:	74 df                	je     b941 <__sprintf_chk@plt+0x6c61>
    b962:	31 d2                	xor    %edx,%edx
    b964:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    b96b:	00 
    b96c:	4c 89 e0             	mov    %r12,%rax
    b96f:	66 41 89 54 24 08    	mov    %dx,0x8(%r12)
    b975:	5b                   	pop    %rbx
    b976:	5d                   	pop    %rbp
    b977:	41 5c                	pop    %r12
    b979:	c3                   	ret    
    b97a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b980:	41 56                	push   %r14
    b982:	41 55                	push   %r13
    b984:	41 54                	push   %r12
    b986:	4c 0f af 0f          	imul   (%rdi),%r9
    b98a:	8f 29 fd ff          	(bad)  
    b98e:	ff                   	(bad)  
    b98f:	ff 8b 5d 00 48 89    	decl   -0x76b7ffa3(%rbx)
    b995:	ef                   	out    %eax,(%dx)
    b996:	49 89 c4             	mov    %rax,%r12
    b999:	e8 d2 90 ff ff       	call   4a70 <fileno@plt>
    b99e:	4d 01 c1             	add    %r8,%r9
    b9a1:	48                   	rex.W
    b9a2:	49 0f 4d 31          	cmovge (%r9),%rsi
    b9a6:	d7                   	xlat   %ds:(%rbx)
    b9a7:	77 e8                	ja     b991 <__sprintf_chk@plt+0x6cb1>
    b9a9:	43                   	rex.XB
    b9aa:	4d 39 c0             	cmp    %r8,%r8
    b9ad:	85 c0                	test   %eax,%eax
    b9af:	75 4f                	jne    ba00 <__sprintf_chk@plt+0x6d20>
    b9b1:	49 01 cb             	add    %rcx,%r11
    b9b4:	e8 37 91 ff ff       	call   4af0 <__freading@plt>
    b9b9:	85 c0                	test   %eax,%eax
    b9bb:	0f 85 8f 00 00 00    	jne    ba50 <__sprintf_chk@plt+0x6d70>
    b9c1:	48 89 ef             	mov    %rbp,%rdi
    b9c4:	e8 e7 90 ff ff       	call   4ab0 <fflush@plt>
    b9c9:	85 c0                	test   %eax,%eax
    b9cb:	74 4f                	je     ba1c <__sprintf_chk@plt+0x6d3c>
    b9cd:	e8 3e 8d ff 49       	call   4a004710 <obstack_alloc_failed_handler@@Base+0x49fe2670>
    b9d2:	85 48 ff             	test   %ecx,-0x1(%rax)
    b9d5:	c2 49 31             	ret    $0x3149
    b9d8:	fa                   	cli    
    b9d9:	89 c5                	mov    %eax,%ebp
    b9db:	e8 40 8e ff ff       	call   4820 <fclose@plt>
    b9e0:	45 85 f6             	test   %r14d,%r14d
    b9e3:	74 3f                	je     ba24 <__sprintf_chk@plt+0x6d44>
    b9e5:	45                   	rex.RB
    b9e6:	48 09 c1             	or     %rax,%rcx
    b9e9:	85 db                	test   %ebx,%ebx
    b9eb:	74 43                	je     ba30 <__sprintf_chk@plt+0x6d50>
    b9ed:	0f 1f 00             	nopl   (%rax)
    b9f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b9f5:	5b                   	pop    %rbx
    b9f6:	7c bd                	jl     b9b5 <__sprintf_chk@plt+0x6cd5>
    b9f8:	5c                   	pop    %rsp
    b9f9:	41 5d                	pop    %r13
    b9fb:	41 5e                	pop    %r14
    b9fd:	c3                   	ret    
    b9fe:	66 90                	xchg   %ax,%ax
    ba00:	48 89 ef             	mov    %rbp,%rdi
    ba03:	e8 68 90 ff ff       	call   4a70 <fileno@plt>
    ba08:	31 f6                	xor    %esi,%esi
    ba0a:	ba 01 00 00 00       	mov    $0x1,%edx
    ba0f:	4c 85 fb             	test   %r15,%rbx
    ba12:	31 e9                	xor    %ebp,%ecx
    ba14:	48 31 da             	xor    %rbx,%rdx
    ba17:	00 f8                	add    %bh,%al
    ba19:	ff 75 95             	push   -0x6b(%rbp)
    ba1c:	48 89 ef             	mov    %rbp,%rdi
    ba1f:	e8 75 94 d4 ff       	call   ffffffffffd54e99 <obstack_alloc_failed_handler@@Base+0xffffffffffd32df9>
    ba24:	85 db                	test   %ebx,%ebx
    ba26:	0f 85 9c 00 00 00    	jne    bac8 <__sprintf_chk@plt+0x6de8>
    ba2c:	85 c0                	test   %eax,%eax
    ba2e:	74 c5                	je     b9f5 <__sprintf_chk@plt+0x6d15>
    ba30:	4d                   	rex.WRB
    ba31:	4d 85 d9             	test   %r11,%r9
    ba34:	ff c1                	inc    %ecx
    ba36:	e9 a7 fe ff ff       	jmp    b8e2 <__sprintf_chk@plt+0x6c02>
    ba3b:	29 de                	sub    %ebx,%esi
    ba3d:	38 09                	cmp    %cl,(%rcx)
    ba3f:	48 c7 c3 95 e9 03 0f 	mov    $0xf03e995,%rbx
    ba46:	8f                   	(bad)  
    ba47:	9f                   	lahf   
    ba48:	01 00                	add    %eax,(%rax)
    ba4a:	00 85 27 ff ff ff    	add    %al,-0xd9(%rbp)
    ba50:	f7 45 00 49 89 f1 00 	testl  $0xf18949,0x0(%rbp)
    ba57:	0f 84 64 ff ff ff    	je     b9c1 <__sprintf_chk@plt+0x6ce1>
    ba5d:	48 8b 45 49          	mov    0x49(%rbp),%rax
    ba61:	21 d0                	and    %edx,%eax
    ba63:	45 10 74 19 ba       	adc    %r14b,-0x46(%r9,%rbx,1)
    ba68:	01 00                	add    %eax,(%rax)
    ba6a:	00 00                	add    %al,(%rax)
    ba6c:	31 f6                	xor    %esi,%esi
    ba6e:	48 89 ef             	mov    %rbp,%rdi
    ba71:	e8 3a 91 ff 49       	call   4a004bb0 <obstack_alloc_failed_handler@@Base+0x49fe2b10>
    ba76:	ff c5                	inc    %ebp
    ba78:	4d 39 cc             	cmp    %r9,%r12
    ba7b:	0f 1f 44 4d 85       	nopl   -0x7b(%rbp,%rcx,2)
    ba80:	f8                   	clc    
    ba81:	8b 45 20             	mov    0x20(%rbp),%eax
    ba84:	48 39 45 28          	cmp    %rax,0x28(%rbp)
    ba88:	48 c1 e0 2e          	shl    $0x2e,%rax
    ba8c:	7d 48                	jge    bad6 <__sprintf_chk@plt+0x6df6>
    ba8e:	00 75 d6             	add    %dh,-0x2a(%rbp)
    ba91:	48 89 48 c1          	mov    %rcx,-0x3f(%rax)
    ba95:	ef                   	out    %eax,(%dx)
    ba96:	4d 89 cf             	mov    %r9,%r15
    ba99:	d8 4d 85             	fmuls  -0x7b(%rbp)
    ba9c:	ec                   	in     (%dx),%al
    ba9d:	4c 01 ce             	add    %r9,%rsi
    baa0:	89 c7                	mov    %eax,%edi
    baa2:	e8 89 4c 01 da       	call   ffffffffda020730 <obstack_alloc_failed_handler@@Base+0xffffffffd9ffe690>
    baa7:	48 ff c3             	inc    %rbx
    baaa:	ff 0f                	decl   (%rdi)
    baac:	84 10                	test   %dl,(%rax)
    baae:	49 f7 fa             	idiv   %r10
    bab1:	c2 65 00             	ret    $0x65
    bab4:	ef                   	out    %eax,(%dx)
    bab5:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    babc:	e9 00 ff ff ff       	jmp    b9c1 <__sprintf_chk@plt+0x6ce1>
    bac1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bac8:	85 4c 01 db          	test   %ecx,-0x25(%rcx,%rax,1)
    bacc:	49 f7 fc             	idiv   %r12
    bacf:	ff 0f                	decl   (%rdi)
    bad1:	85 ef                	test   %ebp,%edi
    bad3:	49 c7 c4 21 01 00 00 	mov    $0x121,%r12
    bada:	48 ff c1             	inc    %rcx
    badd:	ff                   	(bad)  
    bade:	ff                   	(bad)  
    badf:	ff f3                	push   %rbx
    bae1:	0f 1e fa             	nop    %edx
    bae4:	48 0f 84 1c 01 00 00 	rex.W je bc07 <__sprintf_chk@plt+0x6f27>
    baeb:	41 54                	push   %r12
    baed:	48 8b 38             	mov    (%rax),%rdi
    baf0:	e8 4c 29 d2 ff       	call   ffffffffffd2e441 <obstack_alloc_failed_handler@@Base+0xffffffffffd0c3a1>
    baf5:	85 c0                	test   %eax,%eax
    baf7:	74 3f                	je     bb38 <__sprintf_chk@plt+0x6e58>
    baf9:	ba 49 ff c6 00       	mov    $0xc6ff49,%edx
    bafe:	48 8d 0f             	lea    (%rdi),%rcx
    bb01:	85 7a 03             	test   %edi,0x3(%rdx)
    bb04:	00 00                	add    %al,(%rax)
    bb06:	ff                   	(bad)  
    bb07:	e8 54 8d ff ff       	call   4860 <dcgettext@plt>
    bb0c:	49                   	rex.WB
    bb0d:	49 ff c1             	inc    %r9
    bb10:	fc                   	cld    
    bb11:	8b ff                	mov    %edi,%edi
    bb13:	ff 31                	push   (%rcx)
    bb15:	ff 4c 89 49          	decl   0x49(%rcx,%rcx,4)
    bb19:	f7 fd                	idiv   %ebp
    bb1b:	15 43 df 00 00       	adc    $0xdf43,%eax
    bb20:	8b 30                	mov    (%rax),%esi
    bb22:	31 c0                	xor    %eax,%eax
    bb24:	e8 49 31 f1 ff       	call   fffffffffff1ec72 <obstack_alloc_failed_handler@@Base+0xffffffffffefcbd2>
    bb29:	8b 3d 51 65 01 00    	mov    0x16551(%rip),%edi        # 22080 <_obstack_memory_used@@Base+0x118d0>
    bb2f:	e8 49 85 c5 ff       	call   ffffffffffc6407d <obstack_alloc_failed_handler@@Base+0xffffffffffc41fdd>
    bb34:	0f 1f 40 00          	nopl   0x0(%rax)
    bb38:	48 8b 05 b1 4c 4d 39 	mov    0x394d4cb1(%rip),%rax        # 394e07f0 <obstack_alloc_failed_handler@@Base+0x394be750>
    bb3f:	f7 48 c1 ee 2e fe ff 	testl  $0xfffe2eee,-0x3f(%rax)
    bb46:	49 ff c3             	inc    %r11
    bb49:	75 03                	jne    bb4e <__sprintf_chk@plt+0x6e6e>
    bb4b:	41 5c                	pop    %r12
    bb4d:	c3                   	ret    
    bb4e:	8b 3d 4d 09 fa 00    	mov    0xfa094d(%rip),%edi        # fac4a1 <obstack_alloc_failed_handler@@Base+0xf8a401>
    bb54:	e8 e7 8b ff ff       	call   4740 <_exit@plt>
    bb59:	0f 1f 80 00 00 48 c1 	nopl   -0x3eb80000(%rax)
    bb60:	e8 21 49 89 f2       	call   fffffffff28a0486 <obstack_alloc_failed_handler@@Base+0xfffffffff287e3e6>
    bb65:	49 89 cb             	mov    %rcx,%r11
    bb68:	41 56                	push   %r14
    bb6a:	41 55                	push   %r13
    bb6c:	41                   	rex.B
    bb6d:	4c 85 49 4d          	test   %r9,0x4d(%rcx)
    bb71:	85 cb                	test   %ecx,%ebx
    bb73:	48 81 ec 58 01 48 85 	sub    $0xffffffff85480158,%rsp
    bb7a:	f1                   	int1   
    bb7b:	89 84 24 c0 49 29 d6 	mov    %eax,-0x29d6b640(%rsp)
    bb82:	4c 89 8c 24 c8 00 00 	mov    %r9,0xc8(%rsp)
    bb89:	00 
    bb8a:	84 c0                	test   %al,%al
    bb8c:	74 40                	je     bbce <__sprintf_chk@plt+0x6eee>
    bb8e:	0f 29 48 09          	movaps %xmm1,0x9(%rax)
    bb92:	db 00                	fildl  (%rax)
    bb94:	00 00                	add    %al,(%rax)
    bb96:	4c 29 eb             	sub    %r13,%rbx
    bb99:	24 e0                	and    $0xe0,%al
    bb9b:	00 00                	add    %al,(%rax)
    bb9d:	00 0f                	add    %cl,(%rdi)
    bb9f:	29 94 24 f0 00 0f 8c 	sub    %edx,-0x73f0ff10(%rsp)
    bba6:	3a fe                	cmp    %dh,%bh
    bba8:	ff                   	(bad)  
    bba9:	ff 48 c7             	decl   -0x39(%rax)
    bbac:	c3                   	ret    
    bbad:	91                   	xchg   %eax,%ecx
    bbae:	03 00                	add    (%rax),%eax
    bbb0:	00 48 85             	add    %cl,-0x7b(%rax)
    bbb3:	c3                   	ret    
    bbb4:	00 00                	add    %al,(%rax)
    bbb6:	0f 29 ac 24 20 01 00 	movaps %xmm5,0x120(%rsp)
    bbbd:	00 
    bbbe:	0f 29 b4 24 30 01 00 	movaps %xmm6,0x130(%rsp)
    bbc5:	00 
    bbc6:	0f 29 bc 24 40 01 00 	movaps %xmm7,0x140(%rsp)
    bbcd:	00 
    bbce:	64 49 01 cd          	fs add %rcx,%r13
    bbd2:	0f 85 e4 4c 0f af    	jne    ffffffffaf1008bc <obstack_alloc_failed_handler@@Base+0xffffffffaf0de81c>
    bbd8:	db 84 24 49 ff c6 00 	fildl  0xc6ff49(%rsp)
    bbdf:	4d 0f af f9          	imul   %r9,%r15
    bbe3:	02 00                	add    (%rax),%al
    bbe5:	00 8c 59 fe ff ff 45 	add    %cl,0x45fffffe(%rcx,%rbx,2)
    bbec:	31 4c 01 0f          	xor    %ecx,0xf(%rcx,%rax,1)
    bbf0:	8f                   	(bad)  
    bbf1:	66 fc                	data16 cld 
    bbf3:	ff                   	(bad)  
    bbf4:	ff 00                	incl   (%rax)
    bbf6:	c7 44 24 20 20 49 4d 	movl   $0x14d4920,0x20(%rsp)
    bbfd:	01 
    bbfe:	f0 20 00             	lock and %al,(%rax)
    bc01:	00 00                	add    %al,(%rax)
    bc03:	0f 84 85 03 00 00    	je     bf8e <__sprintf_chk@plt+0x72ae>
    bc09:	00 00                	add    %al,(%rax)
    bc0b:	c7 44 24 24 30 00 00 	movl   $0x30,0x24(%rsp)
    bc12:	00 
    bc13:	31 db                	xor    %ebx,%ebx
    bc15:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    bc1a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    bc1f:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    bc24:	01 c3                	add    %eax,%ebx
    bc26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bc2d:	00 00 00 
    bc30:	89 d0                	mov    %edx,%eax
    bc32:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bc38:	83 49 85 c1          	orl    $0xffffffc1,-0x7b(%rcx)
    bc3c:	01 c8                	add    %ecx,%eax
    bc3e:	48 8b 00             	mov    (%rax),%rax
    bc41:	48 0f 48 c1          	cmovs  %rcx,%rax
    bc45:	ee                   	out    %al,(%dx)
    bc46:	1f                   	(bad)  
    bc47:	4d 39 c5             	cmp    %r8,%r13
    bc4a:	48 83 c3 4c          	add    $0x4c,%rbx
    bc4e:	31 c6                	xor    %eax,%esi
    bc50:	fb                   	sti    
    bc51:	0a 0f                	or     (%rdi),%cl
    bc53:	84 d2                	test   %dl,%dl
    bc55:	03 00                	add    (%rax),%eax
    bc57:	49 39 c6             	cmp    %rax,%r14
    bc5a:	2f                   	(bad)  
    bc5b:	76 d3                	jbe    bc30 <__sprintf_chk@plt+0x6f50>
    bc5d:	48 0f 8c 6e 03 00 49 	rex.W jl 4900bfd2 <obstack_alloc_failed_handler@@Base+0x48fe9f32>
    bc64:	48 31 c1             	xor    %rax,%rcx
    bc67:	c1 08 48             	rorl   $0x48,(%rax)
    bc6a:	8b 00                	mov    (%rax),%eax
    bc6c:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
    bc70:	48 85 4c 01 e3       	test   %rcx,-0x1d(%rcx,%rax,1)
    bc75:	40 84 ff             	test   %dil,%dil
    bc78:	74 05                	je     bc7f <__sprintf_chk@plt+0x6f9f>
    bc7a:	48 89 4c 74 31       	mov    %rcx,0x31(%rsp,%rsi,2)
    bc7f:	45 84 48 89          	test   %r9b,-0x77(%r8)
    bc83:	da 89 54 24 20 4c    	fimull 0x4c202454(%rcx)
    bc89:	89 d1                	mov    %edx,%ecx
    bc8b:	4d 89 d9             	mov    %r11,%r9
    bc8e:	4c 8d 05 0d 49 89 d6 	lea    -0x2976b6f3(%rip),%r8        # ffffffffd68a05a2 <obstack_alloc_failed_handler@@Base+0xffffffffd687e502>
    bc95:	48 89 ef             	mov    %rbp,%rdi
    bc98:	48 8d 15 26 de 00 00 	lea    0xde26(%rip),%rdx        # 19ac5 <_obstack_memory_used@@Base+0x9315>
    bc9f:	be 01 00 00 00       	mov    $0x1,%esi
    bca4:	31 49 c7             	xor    %ecx,-0x39(%rcx)
    bca7:	4d 85 de             	test   %r11,%r14
    bcaa:	ff                   	(bad)  
    bcab:	ff                   	(bad)  
    bcac:	ff                   	(bad)  
    bcad:	ba 05 00 00 00       	mov    $0x5,%edx
    bcb2:	48 8d 35 0f 85 d2 fd 	lea    -0x22d7af1(%rip),%rsi        # fffffffffdd341c8 <obstack_alloc_failed_handler@@Base+0xfffffffffdd12128>
    bcb9:	ff                   	(bad)  
    bcba:	ff 8b ff ff 41 b8    	decl   -0x47be0001(%rbx)
    bcc0:	e4 07                	in     $0x7,%al
    bcc2:	00 00                	add    %al,(%rax)
    bcc4:	be 01 00 49 c1       	mov    $0xc1490001,%esi
    bcc9:	ed                   	in     (%dx),%eax
    bcca:	0c ef                	or     $0xef,%al
    bccc:	e9 5a fc ff ff       	jmp    b92b <__sprintf_chk@plt+0x6c4b>
    bcd1:	4c 09 c0             	or     %r8,%rax
    bcd4:	00 00                	add    %al,(%rax)
    bcd6:	31 c0                	xor    %eax,%eax
    bcd8:	e8 73 8f 49 ff       	call   ffffffffff4a4c50 <obstack_alloc_failed_handler@@Base+0xffffffffff482bb0>
    bcdd:	c0 89 ee bf 0a 00 00 	rorb   $0x0,0xabfee(%rcx)
    bce4:	00 e8                	add    %ch,%al
    bce6:	36 8d                	ss (bad) 
    bce8:	ff                   	(bad)  
    bce9:	ff 31                	push   (%rcx)
    bceb:	ff 49 85             	decl   -0x7b(%rcx)
    bcee:	cf                   	iret   
    bcef:	00 00                	add    %al,(%rax)
    bcf1:	48                   	rex.W
    bcf2:	49 21 cc             	and    %rcx,%r12
    bcf5:	03 01                	add    (%rcx),%eax
    bcf7:	00 e8                	add    %ch,%al
    bcf9:	63 8b ff ff 4d 39    	movsxd 0x394dffff(%rbx),%ecx
    bcff:	d9 00                	flds   (%rax)
    bd01:	00 0f                	add    %cl,(%rdi)
    bd03:	8f                   	(bad)  
    bd04:	33 fc                	xor    %esp,%edi
    bd06:	ff                   	(bad)  
    bd07:	ff 8c 04 01 00 48 89 	decl   -0x76b7ffff(%rsp,%rax,1)
    bd0e:	c2 31 49             	ret    $0x4931
    bd11:	48                   	rex.W
    bd12:	4c 29 db             	sub    %r11,%rbx
    bd15:	ff                   	(bad)  
    bd16:	ff                   	(bad)  
    bd17:	ff                   	(bad)  
    bd18:	ee                   	out    %al,(%dx)
    bd19:	bf 0a 00 4d 49       	mov    $0x494d000a,%edi
    bd1e:	48 21 c2             	and    %rax,%rdx
    bd21:	4c 85 c3             	test   %r8,%rbx
    bd24:	00 fb                	add    %bh,%bl
    bd26:	09 0f                	or     %ecx,(%rdi)
    bd28:	87 92 00 00 00 49    	xchg   %edx,0x49000000(%rdx)
    bd2e:	c1 e1 32             	shl    $0x32,%ecx
    bd31:	c4                   	(bad)  
    bd32:	00 00                	add    %al,(%rax)
    bd34:	48 63 04 9a          	movslq (%rdx,%rbx,4),%rax
    bd38:	48 01 d0             	add    %rdx,%rax
    bd3b:	3e ff e0             	notrack jmp *%rax
    bd3e:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    bd43:	4c 8b 49 01          	mov    0x1(%rcx),%r9
    bd47:	f9                   	stc    
    bd48:	31 4c 48 29          	xor    %ecx,0x29(%rax,%rcx,2)
    bd4c:	ce                   	(bad)  
    bd4d:	00 00                	add    %al,(%rax)
    bd4f:	49 85 c2             	test   %rax,%r10
    bd52:	24 68                	and    $0x68,%al
    bd54:	48 8d 35 25 03 01 00 	lea    0x10325(%rip),%rsi        # 1c080 <_obstack_memory_used@@Base+0xb8d0>
    bd5b:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
    bd60:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
    bd65:	4c 8b 49 21          	mov    0x21(%rcx),%r9
    bd69:	d7                   	xlat   %ds:(%rbx)
    bd6a:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    bd6f:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    bd74:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    bd79:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    bd7e:	48 89 49 0f          	mov    %rcx,0xf(%rcx)
    bd82:	4d 31 f4             	xor    %r14,%r12
    bd85:	ff                   	(bad)  
    bd86:	ff 48 89             	decl   -0x77(%rax)
    bd89:	c2 50 0f             	ret    $0xf50
    bd8c:	8f                   	(bad)  
    bd8d:	ac                   	lods   %ds:(%rsi),%al
    bd8e:	01 00                	add    %eax,(%rax)
    bd90:	00 01                	add    %al,(%rcx)
    bd92:	00 00                	add    %al,(%rax)
    bd94:	00 48 89             	add    %cl,-0x77(%rax)
    bd97:	ef                   	out    %eax,(%dx)
    bd98:	31 c0                	xor    %eax,%eax
    bd9a:	41 51                	push   %r9
    bd9c:	0f 8f f6 49 f7 fc    	jg     fffffffffcf80798 <obstack_alloc_failed_handler@@Base+0xfffffffffcf5e6f8>
    bda2:	89 e9                	mov    %ebp,%ecx
    bda4:	48 89 df             	mov    %rbx,%rdi
    bda7:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    bdab:	49 89 d8             	mov    %rbx,%r8
    bdae:	51                   	push   %rcx
    bdaf:	4c 89 e1             	mov    %r12,%rcx
    bdb2:	41                   	rex.B
    bdb3:	49 09 c2             	or     %rax,%r10
    bdb6:	e8 95 e9 2b ff       	call   ffffffffff2ca750 <obstack_alloc_failed_handler@@Base+0xffffffffff2a86b0>
    bdbb:	ff                   	(bad)  
    bdbc:	ff                   	(bad)  
    bdbd:	fd                   	std    
    bdbe:	ff                   	(bad)  
    bdbf:	ff 8b 84 24 98 00    	decl   0x982484(%rbx)
    bdc5:	00 00                	add    %al,(%rax)
    bdc7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bdce:	00 00 
    bdd0:	0f 85 43 03 00 00    	jne    c119 <__sprintf_chk@plt+0x7439>
    bdd6:	48 d1 ea             	shr    %rdx
    bdd9:	58                   	pop    %rax
    bdda:	01 00                	add    %eax,(%rax)
    bddc:	00 5b 5d             	add    %bl,0x5d(%rbx)
    bddf:	4c 39 49 39          	cmp    %r9,0x39(%rcx)
    bde3:	d4                   	(bad)  
    bde4:	0f 8f 9a fd ff ff    	jg     bb84 <__sprintf_chk@plt+0x6ea4>
    bdea:	4c 24 78             	rex.WR and $0x78,%al
    bded:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    bdf2:	ba 05 00 00 00       	mov    $0x5,%edx
    bdf7:	48 8d 35 b2 4d 29 ed 	lea    -0x12d6b24e(%rip),%rsi        # ffffffffed2a0bb0 <obstack_alloc_failed_handler@@Base+0xffffffffed27eb10>
    bdfe:	e1 3e                	loope  be3e <__sprintf_chk@plt+0x715e>
    be00:	94                   	xchg   %eax,%esp
    be01:	24 4d                	and    $0x4d,%al
    be03:	39 f0                	cmp    %esi,%eax
    be05:	00 48 f7             	add    %cl,-0x9(%rax)
    be08:	f8                   	clc    
    be09:	24 68                	and    $0x68,%al
    be0b:	49 09 d5             	or     %rdx,%r13
    be0e:	24 60                	and    $0x60,%al
    be10:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
    be15:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    be1a:	4d 0f 85 4d fe ff ff 	rex.WRB jne bc6e <__sprintf_chk@plt+0x6f8e>
    be21:	5c                   	pop    %rsp
    be22:	24 48                	and    $0x48,%al
    be24:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    be29:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    be2e:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    be33:	48 89 0c 24          	mov    %rcx,(%rsp)
    be37:	31 ff                	xor    %edi,%edi
    be39:	e8 22 8a ff ff       	call   4860 <dcgettext@plt>
    be3e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    be43:	48 89 c2             	mov    %rax,%rdx
    be46:	41 52                	push   %r10
    be48:	e9 3e ff ff ff       	jmp    bd8b <__sprintf_chk@plt+0x70ab>
    be4d:	4c                   	rex.WR
    be4e:	49 39 dc             	cmp    %rbx,%r12
    be51:	40 0f 8c 49 02 00 00 	rex jl c0a1 <__sprintf_chk@plt+0x73c1>
    be58:	00 48 49             	add    %cl,0x49(%rax)
    be5b:	ff c6                	inc    %esi
    be5d:	dc 48 48             	fmull  0x48(%rax)
    be60:	f7 fa                	idiv   %edx
    be62:	01 0f                	add    %ecx,(%rdi)
    be64:	85 4c 09 e2          	test   %ecx,-0x1e(%rcx,%rcx,1)
    be68:	ff                   	(bad)  
    be69:	f9                   	stc    
    be6a:	48 89 ef             	mov    %rbp,%rdi
    be6d:	48 89 c2             	mov    %rax,%rdx
    be70:	4c e9 02 fd ff ff    	rex.WR jmp bb78 <__sprintf_chk@plt+0x6e98>
    be76:	49 85 da             	test   %rbx,%r10
    be79:	ff                   	(bad)  
    be7a:	e9 40 4c 09 f9       	jmp    fffffffff90a0abf <obstack_alloc_failed_handler@@Base+0xfffffffff907ea1f>
    be7f:	85 f8                	test   %edi,%eax
    be81:	20 fd                	and    %bh,%ch
    be83:	ff                   	(bad)  
    be84:	ff d1                	call   *%rcx
    be86:	64 24 49             	fs and $0x49,%al
    be89:	c1 e9 36             	shr    $0x36,%ecx
    be8c:	05 00 00 49 ff       	add    $0xff490000,%eax
    be91:	c5 35 fb db          	vpsubq %ymm3,%ymm9,%ymm11
    be95:	00 00                	add    %al,(%rax)
    be97:	e8 c4 89 ff ff       	call   4860 <dcgettext@plt>
    be9c:	49 89 d8             	mov    %rbx,%r8
    be9f:	4c 89 e1             	mov    %r12,%rcx
    bea2:	e9 6e ff ff ff       	jmp    be15 <__sprintf_chk@plt+0x7135>
    bea7:	48 89 c2             	mov    %rax,%rdx
    beaa:	48 89 ef             	mov    %rbp,%rdi
    bead:	31 c0                	xor    %eax,%eax
    beaf:	4d 31 ea             	xor    %r13,%r10
    beb2:	ff                   	(bad)  
    beb3:	ff                   	(bad)  
    beb4:	e9 06 ff ff ff       	jmp    bdbf <__sprintf_chk@plt+0x70df>
    beb9:	4c                   	rex.WR
    beba:	48 f7 f8             	idiv   %rax
    bebd:	50                   	push   %rax
    bebe:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    bec3:	31 ff                	xor    %edi,%edi
    bec5:	ba 05 00 00 00       	mov    $0x5,%edx
    beca:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    becf:	48 8d 35 d3 db 00 00 	lea    0xdbd3(%rip),%rsi        # 19aa9 <_obstack_memory_used@@Base+0x92f9>
    bed6:	e8 85 89 ff ff       	call   4860 <dcgettext@plt>
    bedb:	4d 89 e9             	mov    %r13,%r9
    bede:	49 89 d8             	mov    %rbx,%r8
    bee1:	be 01 00 00 00       	mov    $0x1,%esi
    bee6:	48 89 c2             	mov    %rax,%rdx
    bee9:	49 c7 c3 34 00 00 00 	mov    $0x34,%r11
    bef0:	ff                   	(bad)  
    bef1:	ff 5a 4d             	lcall  *0x4d(%rdx)
    bef4:	48 ff c1             	inc    %rcx
    bef7:	c4                   	(bad)  
    bef8:	fe                   	(bad)  
    bef9:	ff                   	(bad)  
    befa:	ff                   	(bad)  
    befb:	ba 05 00 00 00       	mov    $0x5,%edx
    bf00:	48                   	rex.W
    bf01:	48 c1 ea 12          	shr    $0x12,%rdx
    bf05:	01 00                	add    %eax,(%rax)
    bf07:	31 ff                	xor    %edi,%edi
    bf09:	4c                   	rex.WR
    bf0a:	48 ff c2             	inc    %rdx
    bf0d:	49 f7 f9             	idiv   %r9
    bf10:	6c                   	insb   (%dx),%es:(%rdi)
    bf11:	24 49                	and    $0x49,%al
    bf13:	21 fb                	and    %edi,%ebx
    bf15:	5c                   	pop    %rsp
    bf16:	0f                   	(bad)  
    bf17:	0f 8f 29 fc ff ff    	jg     bb46 <__sprintf_chk@plt+0x6e66>
    bf1d:	e8 3e 89 ff ff       	call   4860 <dcgettext@plt>
    bf22:	41 50                	push   %r8
    bf24:	48 89 c2             	mov    %rax,%rdx
    bf27:	41 56                	push   %r14
    bf29:	be 01 00 00 00       	mov    $0x1,%esi
    bf2e:	48 89 ef             	mov    %rbp,%rdi
    bf31:	4d 89 e9             	mov    %r13,%r9
    bf34:	49 89 d8             	mov    %rbx,%r8
    bf37:	4c 89 e1             	mov    %r12,%rcx
    bf3a:	48 c1 ea 2f          	shr    $0x2f,%rdx
    bf3e:	8d                   	(bad)  
    bf3f:	ff                   	(bad)  
    bf40:	ff 5e 5f             	lcall  *0x5f(%rsi)
    bf43:	e9 77 fe ff ff       	jmp    bdbf <__sprintf_chk@plt+0x70df>
    bf48:	4c 8b 4d 01          	mov    0x1(%rbp),%r9
    bf4c:	d2 ba 05 00 00 00    	sarb   %cl,0x5(%rdx)
    bf52:	48 8d 35 a7 00 01 00 	lea    0x100a7(%rip),%rsi        # 1c000 <_obstack_memory_used@@Base+0xb850>
    bf59:	31 ff                	xor    %edi,%edi
    bf5b:	4c 8b 74 49 85       	mov    -0x7b(%rcx,%rcx,2),%r14
    bf60:	c4                   	(bad)  
    bf61:	8b 6c 24 50          	mov    0x50(%rsp),%ebp
    bf65:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    bf6a:	4c 8b 48 c7          	mov    -0x39(%rax),%r9
    bf6e:	c1 47 02 00          	roll   $0x0,0x2(%rdi)
    bf72:	49 0f af fe          	imul   %r14,%rdi
    bf76:	48 89 c2             	mov    %rax,%rdx
    bf79:	eb ac                	jmp    bf27 <__sprintf_chk@plt+0x7247>
    bf7b:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    bf80:	49                   	rex.WB
    bf81:	4d 09 e1             	or     %r12,%r9
    bf84:	2d 48 8d 35 48       	sub    $0x48358d48,%eax
    bf89:	f7 ff                	idiv   %edi
    bf8b:	00 31                	add    %dh,(%rcx)
    bf8d:	ff 4c 8b 7c          	decl   0x7c(%rbx,%rcx,4)
    bf91:	4d                   	rex.WRB
    bf92:	4c 21 e8             	and    %r13,%rax
    bf95:	74 24                	je     bfbb <__sprintf_chk@plt+0x72db>
    bf97:	58                   	pop    %rax
    bf98:	49 89 dc             	mov    %rbx,%r12
    bf9b:	24 50                	and    $0x50,%al
    bf9d:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    bfa2:	48 89 0c 24          	mov    %rcx,(%rsp)
    bfa6:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    bfab:	e8 b0 88 ff ff       	call   4860 <dcgettext@plt>
    bfb0:	49 89 cc             	mov    %rcx,%r12
    bfb3:	c2 49 4c             	ret    $0x4c49
    bfb6:	01 c9                	add    %ecx,%ecx
    bfb8:	08 49 39             	or     %cl,0x39(%rcx)
    bfbb:	dd 49 89             	fisttpll -0x77(%rcx)
    bfbe:	d8 be 01 49 39 d4    	fdivrs -0x2bc6b6ff(%rsi)
    bfc4:	48 89 ef             	mov    %rbp,%rdi
    bfc7:	31 c0                	xor    %eax,%eax
    bfc9:	51                   	push   %rcx
    bfca:	4c 89 e1             	mov    %r12,%rcx
    bfcd:	41 57                	push   %r15
    bfcf:	41 56                	push   %r14
    bfd1:	e8 7a 8c ff ff       	call   4c50 <__fprintf_chk@plt>
    bfd6:	48 83 c4 20          	add    $0x20,%rsp
    bfda:	e9 e0 fd ff 49       	jmp    4a00bdbf <obstack_alloc_failed_handler@@Base+0x49fe9d1f>
    bfdf:	89 c3                	mov    %eax,%ebx
    bfe1:	fa                   	cli    
    bfe2:	24 70                	and    $0x70,%al
    bfe4:	48                   	rex.W
    bfe5:	49 ff c2             	inc    %r10
    bfe8:	68 ba 05 00 00       	push   $0x5ba
    bfed:	00 31                	add    %dh,(%rcx)
    bfef:	ff 48 8d             	decl   -0x73(%rax)
    bff2:	35 49 c1 e6 2a       	xor    $0x2ae6c149,%eax
    bff7:	02 49 c1             	add    -0x3f(%rcx),%cl
    bffa:	e1 3e                	loope  c03a <__sprintf_chk@plt+0x735a>
    bffc:	4c                   	rex.WR
    bffd:	49                   	rex.WB
    bffe:	4c 09 f8             	or     %r15,%rax
    c001:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
    c006:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    c00b:	4c                   	rex.WR
    c00c:	4d 85 ce             	test   %r9,%r14
    c00f:	08 48 89             	or     %cl,-0x77(%rax)
    c012:	0c 24                	or     $0x24,%al
    c014:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    c019:	e8 42 88 49 f7       	call   fffffffff74a4860 <obstack_alloc_failed_handler@@Base+0xfffffffff74827c0>
    c01e:	f8                   	clc    
    c01f:	8b 44 24 08          	mov    0x8(%rsp),%eax
    c023:	48 89 c2             	mov    %rax,%rdx
    c026:	41 50                	push   %r8
    c028:	eb 8a                	jmp    bfb4 <__sprintf_chk@plt+0x72d4>
    c02a:	4c 89 d1             	mov    %r10,%rcx
    c02d:	4d 89 d9             	mov    %r11,%r9
    c030:	7c a9                	jl     bfdb <__sprintf_chk@plt+0x72fb>
    c032:	05 6b d9 00 00       	add    $0xd96b,%eax
    c037:	48 89 ef             	mov    %rbp,%rdi
    c03a:	48 8d 15 49 09 ce 4d 	lea    0x4dce0949(%rip),%rdx        # 4dcec98a <obstack_alloc_failed_handler@@Base+0x4dcca8ea>
    c041:	01 d4                	add    %edx,%esp
    c043:	0f af d4             	imul   %esp,%edx
    c046:	31 c0                	xor    %eax,%eax
    c048:	e8 03 8c ff ff       	call   4c50 <__fprintf_chk@plt>
    c04d:	ba 05 00 00 00       	mov    $0x5,%edx
    c052:	48 8d 35 e9 51 03 00 	lea    0x351e9(%rip),%rsi        # 41242 <obstack_alloc_failed_handler@@Base+0x1f1a2>
    c059:	00 0f                	add    %cl,(%rdi)
    c05b:	8f                   	(bad)  
    c05c:	cf                   	iret   
    c05d:	00 00                	add    %al,(%rax)
    c05f:	00 09                	add    %cl,(%rcx)
    c061:	d1 39                	sarl   (%rcx)
    c063:	f3 00 00             	repz add %al,(%rax)
    c066:	be 01 00 00 00       	mov    $0x1,%esi
    c06b:	48 89 ef             	mov    %rbp,%rdi
    c06e:	48 89 c1             	mov    %rax,%rcx
    c071:	48 8d 15 68 c5 00 00 	lea    0xc568(%rip),%rdx        # 185e0 <_obstack_memory_used@@Base+0x7e30>
    c078:	4d 39 e2             	cmp    %r12,%r10
    c07b:	2f                   	(bad)  
    c07c:	02 00                	add    (%rax),%al
    c07e:	00 48 89             	add    %cl,-0x77(%rax)
    c081:	ee                   	out    %al,(%dx)
    c082:	bf 0a 00 00 00       	mov    $0xa,%edi
    c087:	74 d4                	je     c05d <__sprintf_chk@plt+0x737d>
    c089:	85 57 fc             	test   %edx,-0x4(%rdi)
    c08c:	ff                   	(bad)  
    c08d:	ff 00                	incl   (%rax)
    c08f:	00 00                	add    %al,(%rax)
    c091:	48 8d 35 50 4d 39 db 	lea    -0x24c6b2b0(%rip),%rsi        # ffffffffdb3a0de8 <obstack_alloc_failed_handler@@Base+0xffffffffdb37ed48>
    c098:	4c 39 e3             	cmp    %r12,%rbx
    c09b:	c0 87 ff ff 48 8d 0d 	rolb   $0xd,-0x72b70001(%rdi)
    c0a2:	49 c7 c6 72 00 00 00 	mov    $0x72,%r14
    c0a9:	01 da                	add    %ebx,%edx
    c0ab:	48 89 ef             	mov    %rbp,%rdi
    c0ae:	48                   	rex.W
    c0af:	4d 85 49 c1          	test   %r9,-0x3f(%r9)
    c0b3:	e9 1a f9 49 4d       	jmp    4d4ab9d2 <obstack_alloc_failed_handler@@Base+0x4d489932>
    c0b8:	21 fb                	and    %edi,%ebx
    c0ba:	49 85 fe             	test   %rdi,%r14
    c0bd:	00 00                	add    %al,(%rax)
    c0bf:	00 e8                	add    %ch,%al
    c0c1:	5b                   	pop    %rbx
    c0c2:	89 ff                	mov    %edi,%edi
    c0c4:	ff 4c 8b 4c          	decl   0x4c(%rbx,%rcx,4)
    c0c8:	24 78                	and    $0x78,%al
    c0ca:	4c                   	rex.WR
    c0cb:	49 c1 e3 06          	shl    $0x6,%r11
    c0cf:	ba 05 00 49 31       	mov    $0x31490005,%edx
    c0d4:	dd 8b 94 24 80 00    	fisttpll 0x802494(%rbx)
    c0da:	4d 01 e9             	add    %r13,%r9
    c0dd:	8b 4c 75 5a          	mov    0x5a(%rbp,%rsi,2),%ecx
    c0e1:	48 8d 35 d8 0f 85 bf 	lea    -0x407af028(%rip),%rsi        # ffffffffbf85d0c0 <obstack_alloc_failed_handler@@Base+0xffffffffbf83b020>
    c0e8:	01 00                	add    %eax,(%rax)
    c0ea:	00 24 60             	add    %ah,(%rax,%riz,2)
    c0ed:	4c 8b 74 24 4d       	mov    0x4d(%rsp),%r14
    c0f2:	21 f4                	and    %esi,%esp
    c0f4:	4c 24 10             	rex.WR and $0x10,%al
    c0f7:	4c 8b 49 c7          	mov    -0x39(%rcx),%r9
    c0fb:	c4                   	(bad)  
    c0fc:	45 03 00             	add    (%r8),%r8d
    c0ff:	00 48 4c             	add    %cl,0x4c(%rax)
    c102:	89 54 24 18          	mov    %edx,0x18(%rsp)
    c106:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    c10b:	4c 0f 84 6f fc ff ff 	rex.WR je bd81 <__sprintf_chk@plt+0x70a1>
    c112:	0c 24                	or     $0x24,%al
    c114:	e9 1e fd ff 4d       	jmp    4e00be37 <obstack_alloc_failed_handler@@Base+0x4dfe9d97>
    c119:	29 f1                	sub    %esi,%ecx
    c11b:	c1 0f 8f             	rorl   $0x8f,(%rdi)
    c11e:	4d 02 00             	rex.WRB add (%r8),%r8b
    c121:	00 4d 31             	add    %cl,0x31(%rbp)
    c124:	ef                   	out    %eax,(%dx)
    c125:	0f 85 27 fc ff ff    	jne    bd52 <__sprintf_chk@plt+0x7072>
    c12b:	fc                   	cld    
    c12c:	ff                   	(bad)  
    c12d:	ff 31                	push   (%rcx)
    c12f:	c0 48 c1 e7          	rorb   $0xe7,-0x3f(%rax)
    c133:	04 48                	add    $0x48,%al
    c135:	e9 f2 01 00 00       	jmp    c32c <__sprintf_chk@plt+0x764c>
    c13a:	48 85 d2             	test   %rdx,%rdx
    c13d:	74 16                	je     c155 <__sprintf_chk@plt+0x7475>
    c13f:	48 8b e9             	mov    %rcx,%rbp
    c142:	57                   	push   %rdi
    c143:	fd                   	std    
    c144:	ff                   	(bad)  
    c145:	ff 01                	incl   (%rcx)
    c147:	74 17                	je     c160 <__sprintf_chk@plt+0x7480>
    c149:	48 ff c7             	inc    %rdi
    c14c:	00 00                	add    %al,(%rax)
    c14e:	4c 85 eb             	test   %r13,%rbx
    c151:	0f 8f 94 fc ff ff    	jg     bdeb <__sprintf_chk@plt+0x710b>
    c157:	74 83                	je     c0dc <__sprintf_chk@plt+0x73fc>
    c159:	c7                   	(bad)  
    c15a:	1f                   	(bad)  
    c15b:	80 00 00             	addb   $0x0,(%rax)
    c15e:	00 00                	add    %al,(%rax)
    c160:	80 39 30             	cmpb   $0x30,(%rcx)
    c163:	4d 39 cf             	cmp    %r9,%r15
    c166:	c0 44 89 49 0f       	rolb   $0xf,0x49(%rcx,%rcx,4)
    c16b:	8f 82 fe ff ff 0f    	pop    0xffffffe(%rdx)
    c171:	b6 48                	mov    $0x48,%dh
    c173:	01 db                	add    %ebx,%ebx
    c175:	30 75 07             	xor    %dh,0x7(%rbp)
    c178:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
    c17c:	83 e8 30             	sub    $0x30,%eax
    c17f:	85 c0                	test   %eax,%eax
    c181:	41 0f 95 0f          	setne  (%r15)
    c185:	0f 85 81 03 00 00    	jne    c50c <__sprintf_chk@plt+0x782c>
    c18b:	80 00 00             	addb   $0x0,(%rax)
    c18e:	0f 8f 6b 4d 85 c2    	jg     ffffffffc2860eff <obstack_alloc_failed_handler@@Base+0xffffffffc283ee5f>
    c194:	40                   	rex
    c195:	4c 09 e9             	or     %r13,%rcx
    c198:	49 c1 ea 1b          	shr    $0x1b,%r10
    c19c:	e1 00                	loope  c19e <__sprintf_chk@plt+0x74be>
    c19e:	4c 09 da             	or     %r11,%rdx
    c1a1:	81 f9 00 80 00 00    	cmp    $0x8000,%ecx
    c1a7:	75 17                	jne    c1c0 <__sprintf_chk@plt+0x74e0>
    c1a9:	31 c0                	xor    %eax,%eax
    c1ab:	83 3d 52 61 01 00 4d 	cmpl   $0x4d,0x16152(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    c1b2:	09 c7                	or     %eax,%edi
    c1b4:	88 00                	mov    %al,(%rax)
    c1b6:	00 00                	add    %al,(%rax)
    c1b8:	c3                   	ret    
    c1b9:	0f 1f 0f             	nopl   (%rdi)
    c1bc:	84 0f                	test   %cl,(%rdi)
    c1be:	fe                   	(bad)  
    c1bf:	ff                   	(bad)  
    c1c0:	ff 2f                	ljmp   *(%rdi)
    c1c2:	48 85 ff             	test   %rdi,%rdi
    c1c5:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    c1cb:	74 6b                	je     c238 <__sprintf_chk@plt+0x7558>
    c1cd:	31 c0                	xor    %eax,%eax
    c1cf:	81 f9 4d 01 d4 00    	cmp    $0xd4014d,%ecx
    c1d5:	0f 94 4c 89 ea       	sete   -0x16(%rcx,%rcx,4)
    c1da:	0f 8f 4a 01 00 00    	jg     c32a <__sprintf_chk@plt+0x764a>
    c1e0:	27                   	(bad)  
    c1e1:	c3                   	ret    
    c1e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c1e8:	31 c0                	xor    %eax,%eax
    c1ea:	83 fa 05             	cmp    $0x5,%edx
    c1ed:	74 c9                	je     c1b8 <__sprintf_chk@plt+0x74d8>
    c1ef:	83 fa 03             	cmp    $0x3,%edx
    c1f2:	74 5c                	je     c250 <__sprintf_chk@plt+0x7570>
    c1f4:	83 fa 09             	cmp    $0x9,%edx
    c1f7:	74 57                	je     c250 <__sprintf_chk@plt+0x7570>
    c1f9:	83 fa 48             	cmp    $0x48,%edx
    c1fc:	0f af da             	imul   %edx,%ebx
    c1ff:	e9 ea fe ff ff       	jmp    c0ee <__sprintf_chk@plt+0x740e>
    c204:	89 d1                	mov    %edx,%ecx
    c206:	74 78                	je     c280 <__sprintf_chk@plt+0x75a0>
    c208:	b8 40 00 4d 39       	mov    $0x394d0040,%eax
    c20d:	f8                   	clc    
    c20e:	c9                   	leave  
    c20f:	75 a7                	jne    c1b8 <__sprintf_chk@plt+0x74d8>
    c211:	40 84 ff             	test   %dil,%dil
    c214:	74 4a                	je     c260 <__sprintf_chk@plt+0x7580>
    c216:	81 e6 00 f0 00 49    	and    $0x4900f000,%esi
    c21c:	f7 fc                	idiv   %esp
    c21e:	00 00                	add    %al,(%rax)
    c220:	00 81 fe 00 10 00    	add    %al,0x1000fe(%rcx)
    c226:	00 74 67 81          	add    %dh,-0x7f(%rdi,%riz,2)
    c22a:	fe 00                	incb   (%rax)
    c22c:	c0 00 00             	rolb   $0x0,(%rax)
    c22f:	0f 94 c0             	sete   %al
    c232:	48 01 d3             	add    %rdx,%rbx
    c235:	1f                   	(bad)  
    c236:	40 00 c3             	rex add %al,%bl
    c239:	4c 85 f3             	test   %r14,%rbx
    c23c:	00 00                	add    %al,(%rax)
    c23e:	00 00                	add    %al,(%rax)
    c240:	83 e6 49             	and    $0x49,%esi
    c243:	f7 de                	neg    %esi
    c245:	18 c0                	sbb    %al,%al
    c247:	83 e0 48             	and    $0x48,%eax
    c24a:	f7 f8                	idiv   %eax
    c24c:	1f                   	(bad)  
    c24d:	44 00 00             	add    %r8b,(%rax)
    c250:	b8 2f 00 00 00       	mov    $0x2f,%eax
    c255:	c3                   	ret    
    c256:	66 2e 0f 1f 84 00 00 	cs nopw 0x314d4900(%rax,%rax,1)
    c25d:	49 4d 31 
    c260:	e2 7c                	loop   c2de <__sprintf_chk@plt+0x75fe>
    c262:	00 00                	add    %al,(%rax)
    c264:	00 83 fa 01 74 1e    	add    %al,0x1e7401fa(%rbx)
    c26a:	83 fa 07             	cmp    $0x7,%edx
    c26d:	0f 94 c0             	sete   %al
    c270:	4c 85 ce             	test   %r9,%rsi
    c273:	e0 4d                	loopne c2c2 <__sprintf_chk@plt+0x75e2>
    c275:	0f af 48 0f          	imul   0xf(%rax),%ecx
    c279:	af                   	scas   %es:(%rdi),%eax
    c27a:	d8 00                	fadds  (%rax)
    c27c:	00 00                	add    %al,(%rax)
    c27e:	00 00                	add    %al,(%rax)
    c280:	0f 8f 6e 03 00 00    	jg     c5f4 <__sprintf_chk@plt+0x7914>
    c286:	02 00                	add    (%rax),%al
    c288:	00 0f                	add    %cl,(%rdi)
    c28a:	1f                   	(bad)  
    c28b:	80 49 01 c7          	orb    $0xc7,0x1(%rcx)
    c28f:	00 c3                	add    %al,%bl
    c291:	49 85 d9             	test   %rbx,%r9
    c294:	e4 49                	in     $0x49,%al
    c296:	29 c7                	sub    %eax,%edi
    c298:	00 00                	add    %al,(%rax)
    c29a:	00 00                	add    %al,(%rax)
    c29c:	0f 1f 40 00          	nopl   0x0(%rax)
    c2a0:	48 01 da             	add    %rbx,%rdx
    c2a3:	fa                   	cli    
    c2a4:	80 3d 55 65 01 00 00 	cmpb   $0x0,0x16555(%rip)        # 22800 <obstack_alloc_failed_handler@@Base+0x760>
    c2ab:	53                   	push   %rbx
    c2ac:	49 f7 fd             	idiv   %r13
    c2af:	74 1f                	je     c2d0 <__sprintf_chk@plt+0x75f0>
    c2b1:	48 8b 05 f0 0f 8f 94 	mov    -0x6b70f010(%rip),%rax        # ffffffff948fd2a8 <obstack_alloc_failed_handler@@Base+0xffffffff948db208>
    c2b8:	fc                   	cld    
    c2b9:	ff                   	(bad)  
    c2ba:	ff 08                	decl   (%rax)
    c2bc:	ba 01 00 00 00       	mov    $0x1,%edx
    c2c1:	48 0f 85 0a 4d 89 e2 	rex.W jne ffffffffe28a0fd2 <obstack_alloc_failed_handler@@Base+0xffffffffe287ef32>
    c2c8:	e9 33 88 ff ff       	jmp    4b00 <fwrite_unlocked@plt>
    c2cd:	0f 1f 00             	nopl   (%rax)
    c2d0:	bf 01 00 00 00       	mov    $0x1,%edi
    c2d5:	c6                   	(bad)  
    c2d6:	49 31 d2             	xor    %rdx,%r10
    c2d9:	01 48 c1             	add    %ecx,-0x3f(%rax)
    c2dc:	ee                   	out    %al,(%dx)
    c2dd:	2f                   	(bad)  
    c2de:	87 e9                	xchg   %ebp,%ecx
    c2e0:	bf fe ff ff 1b       	mov    $0x1bfffffe,%edi
    c2e5:	48 83 3d fb 5d 01 00 	cmpq   $0x0,0x15dfb(%rip)        # 220e8 <obstack_alloc_failed_handler@@Base+0x48>
    c2ec:	00 
    c2ed:	74 21                	je     c310 <__sprintf_chk@plt+0x7630>
    c2ef:	48 8d 3d 0f 85 b0 fd 	lea    -0x24f7af1(%rip),%rdi        # fffffffffdb14805 <obstack_alloc_failed_handler@@Base+0xfffffffffdaf2765>
    c2f6:	ff                   	(bad)  
    c2f7:	ff                   	(bad)  
    c2f8:	ff                   	(bad)  
    c2f9:	ff                   	(bad)  
    c2fa:	ff                   	(bad)  
    c2fb:	eb b4                	jmp    c2b1 <__sprintf_chk@plt+0x75d1>
    c2fd:	0f 1f 00             	nopl   (%rax)
    c300:	bf 01 00 49 31       	mov    $0x31490001,%edi
    c305:	d2 f6                	shl    %cl,%dh
    c307:	bb ff ff eb 4d       	mov    $0x4debffff,%ebx
    c30c:	01 ee                	add    %ebp,%esi
    c30e:	e9 21 0f 8f 0f       	jmp    f8fd234 <obstack_alloc_failed_handler@@Base+0xf8db194>
    c313:	84 07                	test   %al,(%rdi)
    c315:	fd                   	std    
    c316:	ff                   	(bad)  
    c317:	ff 84 ff ff ff 0f 8c 	incl   -0x73f00001(%rdi,%rdi,8)
    c31e:	4d 09 de             	or     %r11,%r14
    c321:	00 00                	add    %al,(%rax)
    c323:	e8 78 ff ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
    c328:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
    c32c:	cb                   	lret   
    c32d:	84 7c 39 00          	test   %bh,0x0(%rcx,%rdi,1)
    c331:	00 ff                	add    %bh,%bh
    c333:	ff                   	(bad)  
    c334:	e9 78 ff ff ff       	jmp    c2b1 <__sprintf_chk@plt+0x75d1>
    c339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c340:	41 56                	push   %r14
    c342:	41 55                	push   %r13
    c344:	4c 8d 2d 75 5d 01 00 	lea    0x15d75(%rip),%r13        # 220c0 <obstack_alloc_failed_handler@@Base+0x20>
    c34b:	41 54                	push   %r12
    c34d:	4d 8d 65 10          	lea    0x10(%r13),%r12
    c351:	55                   	push   %rbp
    c352:	48 8d 2d 27 64 01 00 	lea    0x16427(%rip),%rbp        # 22780 <obstack_alloc_failed_handler@@Base+0x6e0>
    c359:	53                   	push   %rbx
    c35a:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    c361:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c368:	00 00 
    c36a:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    c371:	00 
    c372:	31 c0                	xor    %eax,%eax
    c374:	48 89 e3             	mov    %rsp,%rbx
    c377:	eb 5a                	jmp    c3d3 <__sprintf_chk@plt+0x76f3>
    c379:	49 0f af f9          	imul   %r9,%rdi
    c37d:	00 00                	add    %al,(%rax)
    c37f:	00 48 8b             	add    %cl,-0x75(%rax)
    c382:	05 21 5c 01 00       	add    $0x15c21,%eax
    c387:	48 8b 0f             	mov    (%rdi),%rcx
    c38a:	8f                   	(bad)  
    c38b:	9c                   	pushf  
    c38c:	03 00                	add    (%rax),%eax
    c38e:	00 48 89             	add    %cl,-0x77(%rax)
    c391:	da 48 49             	fimull 0x49(%rax)
    c394:	49 21 da             	and    %rbx,%r10
    c397:	e8 34 83 ff ff       	call   46d0 <sigprocmask@plt>
    c39c:	44 8b 35 65 64 01 48 	mov    0x48016465(%rip),%r14d        # 48022808 <obstack_alloc_failed_handler@@Base+0x48000768>
    c3a3:	f7 f9                	idiv   %ecx
    c3a5:	5b                   	pop    %rbx
    c3a6:	64 01 00             	add    %eax,%fs:(%rax)
    c3a9:	85 c0                	test   %eax,%eax
    c3ab:	74 5b                	je     c408 <__sprintf_chk@plt+0x7728>
    c3ad:	83 e8 0f             	sub    $0xf,%eax
    c3b0:	84 56 fd             	test   %dl,-0x3(%rsi)
    c3b3:	ff                   	(bad)  
    c3b4:	ff 00                	incl   (%rax)
    c3b6:	89 05 4c 21 49 ff    	mov    %eax,-0xb6deb4(%rip)        # ffffffffff49e508 <obstack_alloc_failed_handler@@Base+0xffffffffff47c468>
    c3bc:	c5 fd ff             	(bad)  
    c3bf:	ff 2c 83             	ljmp   *(%rbx,%rax,4)
    c3c2:	ff                   	(bad)  
    c3c3:	ff 4c 48 31          	decl   0x31(%rax,%rcx,2)
    c3c7:	cb                   	lret   
    c3c8:	de bf 02 00 00 00    	fidivrs 0x2(%rdi)
    c3ce:	e8 fd 82 ff ff       	call   46d0 <sigprocmask@plt>
    c3d3:	8b 05 2f 64 01 00    	mov    0x1642f(%rip),%eax        # 22808 <obstack_alloc_failed_handler@@Base+0x768>
    c3d9:	85 c0                	test   %eax,%eax
    c3db:	75 0a                	jne    c3e7 <__sprintf_chk@plt+0x7707>
    c3dd:	8b 05 21 64 01 00    	mov    0x16421(%rip),%eax        # 22804 <obstack_alloc_failed_handler@@Base+0x764>
    c3e3:	85 c0                	test   %eax,%eax
    c3e5:	74 31                	je     c418 <__sprintf_chk@plt+0x7738>
    c3e7:	80 3d 12 64 01 00 00 	cmpb   $0x0,0x16412(%rip)        # 22800 <obstack_alloc_failed_handler@@Base+0x760>
    c3ee:	74 90                	je     c380 <__sprintf_chk@plt+0x76a0>
    c3f0:	4c 89 0f             	mov    %r9,(%rdi)
    c3f3:	8f                   	(bad)  
    c3f4:	b5 fc                	mov    $0xfc,%ch
    c3f6:	ff                   	(bad)  
    c3f7:	ff f1                	push   %rcx
    c3f9:	ff e7                	jmp    *%rdi
    c3fb:	e8 a0 fe ff 49       	call   4a00c2a0 <obstack_alloc_failed_handler@@Base+0x49fea200>
    c400:	21 f1                	and    %esi,%ecx
    c402:	ff                   	(bad)  
    c403:	ff                   	(bad)  
    c404:	ff 0f                	decl   (%rdi)
    c406:	1f                   	(bad)  
    c407:	4d 29 c2             	sub    %r8,%r10
    c40a:	e9 3c 02 00 00       	jmp    c64b <__sprintf_chk@plt+0x796b>
    c40f:	85 ff                	test   %edi,%edi
    c411:	ff                   	(bad)  
    c412:	eb a8                	jmp    c3bc <__sprintf_chk@plt+0x76dc>
    c414:	0f 1f 40 00          	nopl   0x0(%rax)
    c418:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    c41f:	00 
    c420:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c427:	00 00 
    c429:	75 10                	jne    c43b <__sprintf_chk@plt+0x775b>
    c42b:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    c432:	5b                   	pop    %rbx
    c433:	5d                   	pop    %rbp
    c434:	41 5c                	pop    %r12
    c436:	41 5d                	pop    %r13
    c438:	41 5e                	pop    %r14
    c43a:	c3                   	ret    
    c43b:	e8 50 84 ff ff       	call   4890 <__stack_chk_fail@plt>
    c440:	f3 0f 1e fa          	endbr64 
    c444:	4c 01 c2             	add    %r8,%rdx
    c447:	56                   	push   %rsi
    c448:	41 55                	push   %r13
    c44a:	41 54                	push   %r12
    c44c:	49 29 ce             	sub    %rcx,%r14
    c44f:	fd                   	std    
    c450:	53                   	push   %rbx
    c451:	bb 80 00 00 00       	mov    $0x80,%ebx
    c456:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    c45d:	64 48 8b 04 49       	mov    %fs:(%rcx,%rcx,2),%rax
    c462:	ff c7                	inc    %edi
    c464:	af                   	scas   %es:(%rdi),%eax
    c465:	c2 48 89             	ret    $0x8948
    c468:	0f 8c f6 00 00 00    	jl     c564 <__sprintf_chk@plt+0x7884>
    c46e:	31 c0                	xor    %eax,%eax
    c470:	48 85 4d 0f          	test   %rcx,0xf(%rbp)
    c474:	af                   	scas   %es:(%rdi),%eax
    c475:	ee                   	out    %al,(%dx)
    c476:	c6                   	(bad)  
    c477:	74 14                	je     c48d <__sprintf_chk@plt+0x77ad>
    c479:	48 8d 4c 4c 01       	lea    0x1(%rsp,%rcx,2),%rcx
    c47e:	f9                   	stc    
    c47f:	fe 01                	incb   (%rcx)
    c481:	04 00                	add    $0x0,%al
    c483:	00 b8 01 04 00 00    	add    %bh,0x401(%rax)
    c489:	48 0f 43 d8          	cmovae %rax,%rbx
    c48d:	49 bc ff ff ff ff ff 	movabs $0x3fffffffffffffff,%r12
    c494:	ff ff 3f 
    c497:	48                   	rex.W
    c498:	48 ff c1             	inc    %rcx
    c49b:	49 c7 c4 be 00 00 00 	mov    $0xbe,%r12
    c4a2:	43 fc                	rex.XB cld 
    c4a4:	ff                   	(bad)  
    c4a5:	ff 00                	incl   (%rax)
    c4a7:	75 44                	jne    c4ed <__sprintf_chk@plt+0x780d>
    c4a9:	4c 8b 2c 24          	mov    (%rsp),%r13
    c4ad:	45 31 ff             	xor    %r15d,%r15d
    c4b0:	4c 89 c0             	mov    %r8,%rax
    c4b3:	75 7f                	jne    c534 <__sprintf_chk@plt+0x7854>
    c4b5:	1f                   	(bad)  
    c4b6:	85 18                	test   %ebx,(%rax)
    c4b8:	01 00                	add    %eax,(%rax)
    c4ba:	00 0e                	add    %cl,(%rsi)
    c4bc:	fd                   	std    
    c4bd:	ff                   	(bad)  
    c4be:	ff 1d 83 ff ff 48    	lcall  *0x48ffff83(%rip)        # 4900c447 <obstack_alloc_failed_handler@@Base+0x48fea3a7>
    c4c4:	89 c2                	mov    %eax,%edx
    c4c6:	48 85 c0             	test   %rax,%rax
    c4c9:	78 65                	js     c530 <__sprintf_chk@plt+0x7850>
    c4cb:	48 39 d3             	cmp    %rdx,%rbx
    c4ce:	0f 87 4c 01 df 29    	ja     29dfc620 <obstack_alloc_failed_handler@@Base+0x29dda580>
    c4d4:	d6                   	(bad)  
    c4d5:	89 ff                	mov    %edi,%edi
    c4d7:	e8 a4 81 ff ff       	call   4680 <free@plt>
    c4dc:	4c 39 e3             	cmp    %r12,%rbx
    c4df:	77 2f                	ja     c510 <__sprintf_chk@plt+0x7830>
    c4e1:	48 ff c2             	inc    %rdx
    c4e4:	48 e9 0f 8c 1a 02    	rex.W jmp 21b50f9 <obstack_alloc_failed_handler@@Base+0x2193059>
    c4ea:	00 00                	add    %al,(%rax)
    c4ec:	bc 48 89 df e8       	mov    $0xe8df8948,%esp
    c4f1:	9b                   	fwait
    c4f2:	81 ff ff 49 89 c5    	cmp    $0xc58949ff,%edi
    c4f8:	48 85 c0             	test   %rax,%rax
    c4fb:	0f 84 db 00 00 48    	je     4800c5dc <obstack_alloc_failed_handler@@Base+0x47fea53c>
    c501:	09 c6                	or     %eax,%esi
    c503:	c7                   	(bad)  
    c504:	eb af                	jmp    c4b5 <__sprintf_chk@plt+0x77d5>
    c506:	48 c7 c6 50 00 00 00 	mov    $0x50,%rsi
    c50d:	ff                   	(bad)  
    c50e:	ff 00                	incl   (%rax)
    c510:	48                   	rex.W
    c511:	49                   	rex.WB
    c512:	49 89 c3             	mov    %rax,%r11
    c515:	ff                   	(bad)  
    c516:	ff                   	(bad)  
    c517:	ff                   	(bad)  
    c518:	ff 48 ff             	decl   -0x1(%rax)
    c51b:	c0 c3 48             	rol    $0x48,%bl
    c51e:	0f af 4d 39          	imul   0x39(%rbp),%ecx
    c522:	fd                   	std    
    c523:	ff                   	(bad)  
    c524:	ff                   	(bad)  
    c525:	ff                   	(bad)  
    c526:	ff                   	(bad)  
    c527:	ff                   	(bad)  
    c528:	7f e9                	jg     c513 <__sprintf_chk@plt+0x7833>
    c52a:	72 ff                	jb     c52b <__sprintf_chk@plt+0x784b>
    c52c:	ff 48 f7             	decl   -0x9(%rax)
    c52f:	f9                   	stc    
    c530:	48 89 44 4c 89       	mov    %rax,-0x77(%rsp,%rcx,2)
    c535:	f2 d6                	repnz (bad) 
    c537:	81 ff ff 48 8b 54    	cmp    $0x548b48ff,%edi
    c53d:	24 08                	and    $0x8,%al
    c53f:	83 38 22             	cmpl   $0x22,(%rax)
    c542:	74 87                	je     c4cb <__sprintf_chk@plt+0x77eb>
    c544:	4c 89 ff             	mov    %r15,%rdi
    c547:	45 31 49 01          	xor    %r9d,0x1(%r9)
    c54b:	cf                   	iret   
    c54c:	81 49 ff c1 1b 0f 1f 	orl    $0x1f0f1bc1,-0x1(%rcx)
    c553:	80 00 00             	addb   $0x0,(%rax)
    c556:	00 00                	add    %al,(%rax)
    c558:	41 c6                	rex.B (bad) 
    c55a:	4d 21 e2             	and    %r12,%r10
    c55d:	00 4c 8d 62          	add    %cl,0x62(%rbp,%rcx,4)
    c561:	01 4d 85             	add    %ecx,-0x7b(%rbp)
    c564:	4d 0f af ef          	imul   %r15,%r13
    c568:	39 e3                	cmp    %esp,%ebx
    c56a:	77 5c                	ja     c5c8 <__sprintf_chk@plt+0x78e8>
    c56c:	48                   	rex.W
    c56d:	4d 09 e5             	or     %r12,%r13
    c570:	98                   	cwtl   
    c571:	0f 85 ac 02 00 00    	jne    c823 <__sprintf_chk@plt+0x7b43>
    c577:	0f 84 d0 00 00 00    	je     c64d <__sprintf_chk@plt+0x796d>
    c57d:	75 62                	jne    c5e1 <__sprintf_chk@plt+0x7901>
    c57f:	48 81 4d 0f af fa c3 	orq    $0xfffffffffcc3faaf,0xf(%rbp)
    c586:	fc 
    c587:	ff                   	(bad)  
    c588:	ff 5b 5d             	lcall  *0x5d(%rbx)
    c58b:	41 74 1d             	rex.B je c5ab <__sprintf_chk@plt+0x78cb>
    c58e:	5d                   	pop    %rbp
    c58f:	41 5e                	pop    %r14
    c591:	41 5f                	pop    %r15
    c593:	c3                   	ret    
    c594:	49 c1 ea 2d          	shr    $0x2d,%r10
    c598:	85 3f                	test   %edi,(%rdi)
    c59a:	fc                   	cld    
    c59b:	ff                   	(bad)  
    c59c:	ff 45 31             	incl   0x31(%rbp)
    c59f:	ff c7                	inc    %edi
    c5a1:	00 0c 00             	add    %cl,(%rax,%rax,1)
    c5a4:	00 00                	add    %al,(%rax)
    c5a6:	eb c4                	jmp    c56c <__sprintf_chk@plt+0x788c>
    c5a8:	4c 89 e7             	mov    %r12,%rdi
    c5ab:	e8 e0 80 ff ff       	call   4690 <malloc@plt>
    c5b0:	48 85 f1             	test   %rsi,%rcx
    c5b3:	48 85 c0             	test   %rax,%rax
    c5b6:	74 24                	je     c5dc <__sprintf_chk@plt+0x78fc>
    c5b8:	4c                   	rex.WR
    c5b9:	49 f7 fc             	idiv   %r12
    c5bc:	89 ee                	mov    %ebp,%esi
    c5be:	e8 8d 84 ff ff       	call   4a50 <memcpy@plt>
    c5c3:	49 0f 8c 9c 00 00 00 	rex.WB jl c666 <__sprintf_chk@plt+0x7986>
    c5ca:	ff 4c 0f 49          	decl   0x49(%rdi,%rcx,1)
    c5ce:	f7 fd                	idiv   %ebp
    c5d0:	00 49 39             	add    %cl,0x39(%rcx)
    c5d3:	f0 85 c0             	lock test %eax,%eax
    c5d6:	48 f7 fa             	idiv   %rdx
    c5d9:	f8                   	clc    
    c5da:	eb 90                	jmp    c56c <__sprintf_chk@plt+0x788c>
    c5dc:	45 31 49 c1          	xor    %r9d,-0x3f(%r9)
    c5e0:	0f 84 4d 31 e2 ff    	je     ffffffffffe2f733 <obstack_alloc_failed_handler@@Base+0xffffffffffe0d693>
    c5e6:	00 00                	add    %al,(%rax)
    c5e8:	0f 1f 84 00 00 00 48 	nopl   0x9480000(%rax,%rax,1)
    c5ef:	09 
    c5f0:	f9                   	stc    
    c5f1:	49 ff c7             	inc    %r15
    c5f4:	48 c1 ee 1c          	shr    $0x1c,%rsi
    c5f8:	55                   	push   %rbp
    c5f9:	48 e9 c5 01 00 00    	rex.W jmp c7c4 <__sprintf_chk@plt+0x7ae4>
    c5ff:	00 64 48 8b          	add    %ah,-0x75(%rax,%rcx,2)
    c603:	04 25                	add    $0x25,%al
    c605:	28 00                	sub    %al,(%rax)
    c607:	00 00                	add    %al,(%rax)
    c609:	48 89 84 48 c1 e3 09 	mov    %rax,0x4909e3c1(%rax,%rcx,2)
    c610:	49 
    c611:	c7 c7 1e 02 00 00    	mov    $0x21e,%edi
    c617:	ff 48 85             	decl   -0x7b(%rax)
    c61a:	c0 0f 84             	rorb   $0x84,(%rdi)
    c61d:	48                   	rex.W
    c61e:	4d 29 c4             	sub    %r8,%r12
    c621:	48 21 d2             	and    %rdx,%rdx
    c624:	48 0f 84 be 4d 21 f5 	rex.W je fffffffff52213e9 <obstack_alloc_failed_handler@@Base+0xfffffffff51ff349>
    c62b:	0f 84 87 02 00 00    	je     c8b8 <__sprintf_chk@plt+0x7bd8>
    c631:	00 01                	add    %al,(%rcx)
    c633:	00 4d 09             	add    %cl,0x9(%rbp)
    c636:	4c 85 e0             	test   %r12,%rax
    c639:	49 09 de             	or     %rbx,%r14
    c63c:	01 00                	add    %eax,(%rax)
    c63e:	00 64 48 49          	add    %ah,0x49(%rax,%rcx,2)
    c642:	c1 ee 09             	shr    $0x9,%esi
    c645:	00 00                	add    %al,(%rax)
    c647:	00 4d 85             	add    %cl,-0x7b(%rbp)
    c64a:	fd                   	std    
    c64b:	81 c4 18 01 00 00    	add    $0x118,%esp
    c651:	44 89 49 21          	mov    %r9d,0x21(%rcx)
    c655:	fa                   	cli    
    c656:	5c                   	pop    %rsp
    c657:	c3                   	ret    
    c658:	0f 1f 4d 29          	nopl   0x29(%rbp)
    c65c:	e2 00                	loop   c65e <__sprintf_chk@plt+0x797e>
    c65e:	00 00                	add    %al,(%rax)
    c660:	48 89 e7             	mov    %rsp,%rdi
    c663:	48                   	rex.W
    c664:	49 0f 49 01          	cmovns (%r9),%rax
    c668:	cd 01                	int    $0x1
    c66a:	00 00                	add    %al,(%rax)
    c66c:	48 89 ee             	mov    %rbp,%rsi
    c66f:	e8 bc 49 0f 4d       	call   4d101030 <obstack_alloc_failed_handler@@Base+0x4d0def90>
    c674:	29 fb                	sub    %edi,%ebx
    c676:	24 43                	and    $0x43,%al
    c678:	48 89 c7             	mov    %rax,%rdi
    c67b:	4d 31 ce             	xor    %r9,%r14
    c67e:	8d 35 51 d4 00 00    	lea    0xd451(%rip),%esi        # 19ad5 <_obstack_memory_used@@Base+0x9325>
    c684:	e8 67 83 ff ff       	call   49f0 <strcmp@plt>
    c689:	0f 84 9b fd 49 21    	je     214ac42a <obstack_alloc_failed_handler@@Base+0x2148a38a>
    c68f:	c2 a6 0f             	ret    $0xfa6
    c692:	1f                   	(bad)  
    c693:	48 c7 c7 ce 01 4c 21 	mov    $0x214c01ce,%rdi
    c69a:	db 01                	fildl  (%rcx)
    c69c:	00 e9                	add    %ch,%cl
    c69e:	8d                   	(bad)  
    c69f:	fc                   	cld    
    c6a0:	ff                   	(bad)  
    c6a1:	ff 21                	jmp    *(%rcx)
    c6a3:	d3 00                	roll   %cl,(%rax)
    c6a5:	00 00                	add    %al,(%rax)
    c6a7:	00 49 31             	add    %cl,0x31(%rcx)
    c6aa:	d4                   	(bad)  
    c6ab:	eb 8a                	jmp    c637 <__sprintf_chk@plt+0x7957>
    c6ad:	e8 48 0f af f9       	call   fffffffff9afd5fa <obstack_alloc_failed_handler@@Base+0xfffffffff9adb55a>
    c6b2:	66 66 7f 76          	data16 data16 jg c72c <__sprintf_chk@plt+0x7a4c>
    c6b6:	1f                   	(bad)  
    c6b7:	84 00                	test   %al,(%rax)
    c6b9:	00 00                	add    %al,(%rax)
    c6bb:	00 00                	add    %al,(%rax)
    c6bd:	0f 1f 00             	nopl   (%rax)
    c6c0:	f3 0f 1e fa          	endbr64 
    c6c4:	48 8b 47 28          	mov    0x28(%rdi),%rax
    c6c8:	48 8d 15 51 bf 00 00 	lea    0xbf51(%rip),%rdx        # 18620 <_obstack_memory_used@@Base+0x7e70>
    c6cf:	48 39 d0             	cmp    %rdx,%rax
    c6d2:	74 6c                	je     c740 <__sprintf_chk@plt+0x7a60>
    c6d4:	f3 0f 10 40 48       	movss  0x48(%rax),%xmm0
    c6d9:	39 db                	cmp    %ebx,%ebx
    c6db:	05 f8 fd 00 00       	add    $0xfdf8,%eax
    c6e0:	76 51                	jbe    c733 <__sprintf_chk@plt+0x7a53>
    c6e2:	f3 0f 10 0d f2 fd 00 	movss  0xfdf2(%rip),%xmm1        # 1c4dc <_obstack_memory_used@@Base+0xbd2c>
    c6e9:	00 
    c6ea:	0f 8c 21 02 00 00    	jl     c911 <__sprintf_chk@plt+0x7c31>
    c6f0:	0f 10 4c 01 e9       	movups -0x17(%rcx,%rax,1),%xmm1
    c6f5:	49 09 da             	or     %rbx,%r10
    c6f8:	fd                   	std    
    c6f9:	00 00                	add    %al,(%rax)
    c6fb:	76 36                	jbe    c733 <__sprintf_chk@plt+0x7a53>
    c6fd:	f3 e9 f3 fc ff 49    	repz jmp 4a00c3f6 <obstack_alloc_failed_handler@@Base+0x49fea356>
    c703:	31 cc                	xor    %ecx,%esp
    c705:	fe 00                	incb   (%rax)
    c707:	00 72 29             	add    %dh,0x29(%rdx)
    c70a:	f3 75 8d             	repz jne c69a <__sprintf_chk@plt+0x79ba>
    c70d:	0d c6 0f 8f bc       	or     $0xbc8f0fc6,%eax
    c712:	fc                   	cld    
    c713:	e9 0f 02 00 00       	jmp    c927 <__sprintf_chk@plt+0x7c47>
    c718:	49 f7 f9             	idiv   %r9
    c71b:	17                   	(bad)  
    c71c:	74 41                	je     c75f <__sprintf_chk@plt+0x7a7f>
    c71e:	10 1d c0 fd 49 49    	adc    %bl,0x4949fdc0(%rip)        # 494ac4e4 <obstack_alloc_failed_handler@@Base+0x4948a444>
    c724:	0f af d0             	imul   %eax,%edx
    c727:	72 0a                	jb     c733 <__sprintf_chk@plt+0x7a53>
    c729:	0f 2f c1             	comiss %xmm1,%xmm0
    c72c:	b8 01 00 00 00       	mov    $0x1,%eax
    c731:	77 12                	ja     c745 <__sprintf_chk@plt+0x7a65>
    c733:	48 89 4d 29          	mov    %rcx,0x29(%rbp)
    c737:	d6                   	(bad)  
    c738:	c0 c3 66             	rol    $0x66,%bl
    c73b:	4c 89 de             	mov    %r11,%rsi
    c73e:	00 00                	add    %al,(%rax)
    c740:	b8 01 00 00 49       	mov    $0x49000001,%eax
    c745:	31 fe                	xor    %edi,%esi
    c747:	0f 84 08 fd 0f 8f    	je     ffffffff8f10c455 <obstack_alloc_failed_handler@@Base+0xffffffff8f0ea3b5>
    c74d:	24 fe                	and    $0xfe,%al
    c74f:	ff                   	(bad)  
    c750:	ff 0f                	decl   (%rdi)
    c752:	1e                   	(bad)  
    c753:	fa                   	cli    
    c754:	4d 01 c9             	add    %r9,%r9
    c757:	00 75 46             	add    %dh,0x46(%rbp)
    c75a:	48 85 ff             	test   %rdi,%rdi
    c75d:	0f 8c 48 21 d7 49    	jl     49d7e8ab <obstack_alloc_failed_handler@@Base+0x49d5c80b>
    c763:	89 cc                	mov    %ecx,%esp
    c765:	ef                   	out    %eax,(%dx)
    c766:	c0 f3 48             	shl    $0x48,%bl
    c769:	0f 48 c7             	cmovs  %edi,%eax
    c76c:	c1 89 fe ff ff ca 46 	rorl   $0x46,-0x35000002(%rcx)
    c773:	08 0f                	or     %cl,(%rdi)
    c775:	8f                   	(bad)  
    c776:	dc 49 ff             	fmull  -0x1(%rcx)
    c779:	c2 00 0f             	ret    $0xf00
    c77c:	83 db 00             	sbb    $0x0,%ebx
    c77f:	48 f7 ff             	idiv   %rdi
    c782:	2f                   	(bad)  
    c783:	05 64 fd 00 00       	add    $0xfd64,%eax
    c788:	0f 82 f7 00 00 00    	jb     c885 <__sprintf_chk@plt+0x7ba5>
    c78e:	f3 0f                	repz (bad) 
    c790:	0f 8c 6b fd ff ff    	jl     c501 <__sprintf_chk@plt+0x7821>
    c796:	f3 0f 84 a1 fc ff 4d 	repz je 4e00c43e <obstack_alloc_failed_handler@@Base+0x4dfea39e>
    c79d:	01 f8                	add    %edi,%eax
    c79f:	3f                   	(bad)  
    c7a0:	49 b9 ab aa aa aa aa 	movabs $0xff494caaaaaaaaab,%r9
    c7a7:	4c 49 ff 
    c7aa:	c7                   	(bad)  
    c7ab:	0a 00                	or     (%rax),%al
    c7ad:	00 00                	add    %al,(%rax)
    c7af:	48 39 c7             	cmp    %rax,%rdi
    c7b2:	48 0f 49 0f          	cmovns (%rdi),%rcx
    c7b6:	af                   	scas   %es:(%rdi),%eax
    c7b7:	d9 48 21             	(bad)  0x21(%rax)
    c7ba:	c3                   	ret    
    c7bb:	c8 01 49 83          	enter  $0x4901,$0x83
    c7bf:	f8                   	clc    
    c7c0:	ff 74 79 0f          	push   0xf(%rcx,%rdi,2)
    c7c4:	1f                   	(bad)  
    c7c5:	44 00 00             	add    %r8b,(%rax)
    c7c8:	4c 89 c0             	mov    %r8,%rax
    c7cb:	49 f7 e1             	mul    %r9
    c7ce:	48 89 d0             	mov    %rdx,%rax
    c7d1:	48 83 e2 49          	and    $0x49,%rdx
    c7d5:	c1 eb 14             	shr    $0x14,%ebx
    c7d8:	c0 69 fc ff          	shrb   $0xff,-0x4(%rcx)
    c7dc:	ff c0                	inc    %eax
    c7de:	48 29 d0             	sub    %rdx,%rax
    c7e1:	49 83 f8 48          	cmp    $0x48,%r8
    c7e5:	29 cf                	sub    %ecx,%edi
    c7e7:	fc                   	cld    
    c7e8:	ff                   	(bad)  
    c7e9:	ff 00                	incl   (%rax)
    c7eb:	0f 8c b1 fc ff ff    	jl     c4a2 <__sprintf_chk@plt+0x77c2>
    c7f1:	49 39 4d 85          	cmp    %rcx,-0x7b(%r13)
    c7f5:	ca 09 7f             	lret   $0x7f09
    c7f8:	77 00                	ja     c7fa <__sprintf_chk@plt+0x7b1a>
    c7fa:	b9 03 00 00 00       	mov    $0x3,%ecx
    c7ff:	eb 10                	jmp    c811 <__sprintf_chk@plt+0x7b31>
    c801:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c808:	4d 09 fc             	or     %r15,%r12
    c80b:	08 48 85             	or     %cl,-0x7b(%rax)
    c80e:	d2 48 c7             	rorb   %cl,-0x39(%rax)
    c811:	c6                   	(bad)  
    c812:	f7 01 00 00 89 49    	testl  $0x49890000,(%rcx)
    c818:	ff c5                	inc    %ebp
    c81a:	48 01 fe             	add    %rdi,%rsi
    c81d:	48 f7 f1             	div    %rcx
    c820:	4c 39 c6             	cmp    %r8,%rsi
    c823:	72 e3                	jb     c808 <__sprintf_chk@plt+0x7b28>
    c825:	4c 89 c0             	mov    %r8,%rax
    c828:	49 21 c4             	and    %rax,%r12
    c82b:	f7 f1                	div    %ecx
    c82d:	48 85 d2             	test   %rdx,%rdx
    c830:	75 11                	jne    c843 <__sprintf_chk@plt+0x7b63>
    c832:	49                   	rex.WB
    c833:	49 c1 ef 31          	shr    $0x31,%r15
    c837:	c7 c6 71 00 00 00    	mov    $0x71,%esi
    c83d:	31 4c 85 d3          	xor    %ecx,-0x2d(%rbp,%rax,4)
    c841:	c0 c3 49             	rol    $0x49,%bl
    c844:	f7 fe                	idiv   %esi
    c846:	39 f7                	cmp    %esi,%edi
    c848:	e8 3d 0f 95 4c       	call   4c95d78a <obstack_alloc_failed_handler@@Base+0x4c93b6ea>
    c84d:	89 ca                	mov    %ecx,%edx
    c84f:	fe                   	(bad)  
    c850:	ff                   	(bad)  
    c851:	ff 0f                	decl   (%rdi)
    c853:	b6 c0                	mov    $0xc0,%dh
    c855:	72 e5                	jb     c83c <__sprintf_chk@plt+0x7b5c>
    c857:	48 85 c0             	test   %rax,%rax
    c85a:	49 0f af 48 f7       	imul   -0x9(%r8),%rcx
    c85f:	f9                   	stc    
    c860:	e6 16                	out    %al,$0x16
    c862:	f8                   	clc    
    c863:	83 e7 48             	and    $0x48,%edi
    c866:	c7 c7 f9 fd ff e9    	mov    $0xe9fffdf9,%edi
    c86c:	14 02                	adc    $0x2,%al
    c86e:	00 00                	add    %al,(%rax)
    c870:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    c875:	f3 4c 89 f9          	repz mov %r15,%rcx
    c879:	48                   	rex.W
    c87a:	49 0f af c4          	imul   %r12,%rax
    c87e:	49 31 f9             	xor    %rdi,%r9
    c881:	c1 12 ff             	rcll   $0xff,(%rdx)
    c884:	ff                   	(bad)  
    c885:	ff 48 0f             	decl   0xf(%rax)
    c888:	2c f8                	sub    $0xf8,%al
    c88a:	e9 11 ff ff ff       	jmp    c7a0 <__sprintf_chk@plt+0x7ac0>
    c88f:	90                   	nop
    c890:	41                   	rex.B
    c891:	49 89 c7             	mov    %rax,%r15
    c894:	48 c1 e8 14          	shr    $0x14,%rax
    c898:	48 89 f7             	mov    %rsi,%rdi
    c89b:	53                   	push   %rbx
    c89c:	48                   	rex.W
    c89d:	49 c1 e6 0e          	shl    $0xe,%r14
    c8a1:	c6                   	(bad)  
    c8a2:	65 4d 21 ef          	gs and %r13,%r15
    c8a6:	d8 02                	fadds  (%rdx)
    c8a8:	4d 0f af f5          	imul   %r13,%r14
    c8ac:	00 48 48             	add    %cl,0x48(%rax)
    c8af:	29 c9                	sub    %ecx,%ecx
    c8b1:	58                   	pop    %rax
    c8b2:	31 c0                	xor    %eax,%eax
    c8b4:	4c 89 e6             	mov    %r12,%rsi
    c8b7:	e8 94 fe ff ff       	call   c750 <__sprintf_chk@plt+0x7a70>
    c8bc:	48 0f 8f f3 fe ff ff 	rex.W jg c7b6 <__sprintf_chk@plt+0x7ad6>
    c8c3:	00 00                	add    %al,(%rax)
    c8c5:	4d 31 e0             	xor    %r12,%r8
    c8c8:	48 39 45 10          	cmp    %rax,0x10(%rbp)
    c8cc:	0f 84 de 00 48 29    	je     2948c9b0 <obstack_alloc_failed_handler@@Base+0x2946a910>
    c8d2:	c8 10 00 00          	enter  $0x10,$0x0
    c8d6:	00 48 89             	add    %cl,-0x77(%rax)
    c8d9:	c7                   	(bad)  
    c8da:	e8 01 81 4d 85       	call   ffffffff854e49e0 <obstack_alloc_failed_handler@@Base+0xffffffff854c2940>
    c8df:	c5 89 04             	(bad)
    c8e2:	24 48                	and    $0x48,%al
    c8e4:	85 c0                	test   %eax,%eax
    c8e6:	48 c1 e7 07          	shl    $0x7,%rdi
    c8ea:	00 00                	add    %al,(%rax)
    c8ec:	48 89 5c 24 4c       	mov    %rbx,0x4c(%rsp)
    c8f1:	31 ce                	xor    %ecx,%esi
    c8f3:	e3 04                	jrcxz  c8f9 <__sprintf_chk@plt+0x7c19>
    c8f5:	49 89 e5             	mov    %rsp,%r13
    c8f8:	31 d2                	xor    %edx,%edx
    c8fa:	4d 85 d9             	test   %r11,%r9
    c8fd:	0f af c5             	imul   %ebp,%eax
    c900:	4c 89 ef             	mov    %r13,%rdi
    c903:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    c908:	48 89 44 24 4d       	mov    %rax,0x4d(%rsp)
    c90d:	01 dc                	add    %ebx,%esp
    c90f:	45 30 48 4d          	xor    %r9b,0x4d(%r8)
    c913:	01 eb                	add    %ebp,%ebx
    c915:	18 00                	sbb    %al,(%rax)
    c917:	48                   	rex.W
    c918:	4c 39 e3             	cmp    %r12,%rbx
    c91b:	89 44 24 30          	mov    %eax,0x30(%rsp)
    c91f:	48 8b 45 38          	mov    0x38(%rbp),%rax
    c923:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    c92a:	00 00 
    c92c:	48 89 44 4c 85       	mov    %rax,-0x7b(%rsp,%rcx,2)
    c931:	d6                   	(bad)  
    c932:	8b 49 f7             	mov    -0x9(%rcx),%ecx
    c935:	fb                   	sti    
    c936:	89 44 24 40          	mov    %eax,0x40(%rsp)
    c93a:	48 8b 45 48          	mov    0x48(%rbp),%rax
    c93e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    c943:	e8 48 ac ff 48       	call   49007590 <obstack_alloc_failed_handler@@Base+0x48fe54f0>
    c948:	ff c1                	inc    %ecx
    c94a:	e6 4d                	out    %al,$0x4d
    c94c:	01 cc                	add    %ecx,%esp
    c94e:	79 48                	jns    c998 <__sprintf_chk@plt+0x7cb8>
    c950:	8b 44 24 48          	mov    0x48(%rsp),%eax
    c954:	01 f9                	add    %edi,%ecx
    c956:	4d 09 f9             	or     %r15,%r9
    c959:	4c e9 49 31 f1 00    	rex.WR jmp f1faa8 <obstack_alloc_failed_handler@@Base+0xefda08>
    c95f:	48 89 45 48          	mov    %rax,0x48(%rbp)
    c963:	e8 28 ac ff ff       	call   7590 <__sprintf_chk@plt+0x28b0>
    c968:	0f e9 84 fc ff ff c1 	psubsw -0x183e0001(%rsp,%rdi,8),%mm0
    c96f:	e7 
    c970:	1b d2                	sbb    %edx,%edx
    c972:	4c 89 ee             	mov    %r13,%rsi
    c975:	4d 09 49 39          	or     %r9,0x39(%r9)
    c979:	f7 ac ff ff 84 c0 0f 	imull  0xfc084ff(%rdi,%rdi,8)
    c980:	84 7b 4c             	test   %bh,0x4c(%rbx)
    c983:	29 f0                	sub    %esi,%eax
    c985:	48 8b 3c 24          	mov    (%rsp),%rdi
    c989:	e8 f2 7c ff ff       	call   4680 <free@plt>
    c98e:	48                   	rex.W
    c98f:	49 c1 e1 2e          	shl    $0x2e,%r9
    c993:	c1 00 00             	roll   $0x0,(%rax)
    c996:	00 25 28 00 00 00    	add    %ah,0x28(%rip)        # c9c4 <__sprintf_chk@plt+0x7ce4>
    c99c:	75 49                	jne    c9e7 <__sprintf_chk@plt+0x7d07>
    c99e:	ff c1                	inc    %ecx
    c9a0:	c4                   	(bad)  
    c9a1:	68 44 89 e0 5b       	push   $0x5be08944
    c9a6:	4d 09 c3             	or     %r8,%r11
    c9a9:	41 5d                	pop    %r13
    c9ab:	c3                   	ret    
    c9ac:	0f 1f 48 c1          	nopl   -0x3f(%rax)
    c9b0:	eb 25                	jmp    c9d7 <__sprintf_chk@plt+0x7cf7>
    c9b2:	01 00                	add    %eax,(%rax)
    c9b4:	00 00                	add    %al,(%rax)
    c9b6:	eb d6                	jmp    c98e <__sprintf_chk@plt+0x7cae>
    c9b8:	49 29 d3             	sub    %rdx,%r11
    c9bb:	89 c4                	mov    %eax,%esp
    c9bd:	00 00                	add    %al,(%rax)
    c9bf:	00 45 31             	add    %al,0x31(%rbp)
    c9c2:	e4 eb                	in     $0xeb,%al
    c9c4:	c9                   	leave  
    c9c5:	0f 1f 00             	nopl   (%rax)
    c9c8:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    c9cc:	e8 4c 39 4c 09       	call   94d031d <obstack_alloc_failed_handler@@Base+0x94ae27d>
    c9d1:	f2 ff c3             	repnz inc %ebx
    c9d4:	24 48                	and    $0x48,%al
    c9d6:	89 45 00             	mov    %eax,0x0(%rbp)
    c9d9:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
    c9dd:	ec                   	in     (%dx),%al
    c9de:	30 89 45 08 48 8b    	xor    %cl,-0x74b7f7bb(%rcx)
    c9e4:	44 24 10             	rex.R and $0x10,%al
    c9e7:	0f 84 a2 fe ff ff    	je     c88f <__sprintf_chk@plt+0x7baf>
    c9ed:	44 24 18             	rex.R and $0x18,%al
    c9f0:	48 89 45 18          	mov    %rax,0x18(%rbp)
    c9f4:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    c9f9:	48 89 45 48          	mov    %rax,0x48(%rbp)
    c9fd:	eb 8f                	jmp    c98e <__sprintf_chk@plt+0x7cae>
    c9ff:	e8 8c 7e ff ff       	call   4890 <__stack_chk_fail@plt>
    ca04:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    ca0b:	00 00 00 00 
    ca0f:	90                   	nop
    ca10:	48 09 d3             	or     %rdx,%rbx
    ca13:	fa                   	cli    
    ca14:	41 54                	push   %r12
    ca16:	49 89 fc             	mov    %rdi,%r12
    ca19:	55                   	push   %rbp
    ca1a:	53                   	push   %rbx
    ca1b:	48 83 7f 40 00       	cmpq   $0x0,0x40(%rdi)
    ca20:	48                   	rex.W
    ca21:	4d 21 da             	and    %r11,%r10
    ca24:	0f 84 1b fe ff ff    	je     c845 <__sprintf_chk@plt+0x7b65>
    ca2a:	83 7f 20 00          	cmpl   $0x0,0x20(%rdi)
    ca2e:	74 50                	je     ca80 <__sprintf_chk@plt+0x7da0>
    ca30:	48 39 c5             	cmp    %rax,%rbp
    ca33:	72 19                	jb     ca4e <__sprintf_chk@plt+0x7d6e>
    ca35:	e9 82 00 00 00       	jmp    cabc <__sprintf_chk@plt+0x7ddc>
    ca3a:	49 39 d2             	cmp    %rdx,%r10
    ca3d:	44 00 00             	add    %r8b,(%rax)
    ca40:	49 8b 44 24 4d       	mov    0x4d(%r12),%rax
    ca45:	01 f3                	add    %esi,%ebx
    ca47:	c5 10 48             	(bad)
    ca4a:	39 e8                	cmp    %ebp,%eax
    ca4c:	76 32                	jbe    ca80 <__sprintf_chk@plt+0x7da0>
    ca4e:	48 8b 7d 49          	mov    0x49(%rbp),%rdi
    ca52:	0f 4d 09             	cmovge (%rcx),%ecx
    ca55:	d1 e9                	shr    %ecx
    ca57:	48 89 eb             	mov    %rbp,%rbx
    ca5a:	eb 07                	jmp    ca63 <__sprintf_chk@plt+0x7d83>
    ca5c:	0f 1f 40 00          	nopl   0x0(%rax)
    ca60:	48 8b 3b             	mov    (%rbx),%rdi
    ca63:	41 ff 54 24 40       	call   *0x40(%r12)
    ca68:	48 f7 4d 31 de 8c 4c 	testq  $0xffffffff894c8cde,0x31(%rbp)
    ca6f:	89 
    ca70:	f9                   	stc    
    ca71:	00 7f bd             	add    %bh,-0x43(%rdi)
    ca74:	48 ff c0             	inc    %rax
    ca77:	83 c5 10             	add    $0x10,%ebp
    ca7a:	48                   	rex.W
    ca7b:	49 c7 c1 d3 ff ff ff 	mov    $0xffffffffffffffd3,%r9
    ca82:	4d 39 d9             	cmp    %r11,%r9
    ca85:	ff c3                	inc    %ebx
    ca87:	4d 0f 4c 0f          	cmovl  (%r15),%r9
    ca8b:	af                   	scas   %es:(%rdi),%eax
    ca8c:	c9                   	leave  
    ca8d:	00 00                	add    %al,(%rax)
    ca8f:	00 48 8b             	add    %cl,-0x75(%rax)
    ca92:	5d                   	pop    %rbp
    ca93:	08 49 c1             	or     %cl,-0x3f(%rcx)
    ca96:	ea                   	(bad)  
    ca97:	3a 18                	cmp    (%rax),%bl
    ca99:	0f 49 85 ca 00 49 21 	cmovns 0x214900ca(%rbp),%eax
    caa0:	c6                   	(bad)  
    caa1:	89 0f                	mov    %ecx,(%rdi)
    caa3:	8c 2a                	mov    %gs,(%rdx)
    caa5:	03 00                	add    (%rax),%eax
    caa7:	00 7b 02             	add    %bh,0x2(%rbx)
    caaa:	00 00                	add    %al,(%rax)
    caac:	48 85 db             	test   %rbx,%rbx
    caaf:	48 f7 fb             	idiv   %rbx
    cab2:	83 c5 48             	add    $0x48,%ebp
    cab5:	f7 fb                	idiv   %ebx
    cab7:	6c                   	insb   (%dx),%es:(%rdi)
    cab8:	24 08                	and    $0x8,%al
    caba:	e9 50 03 00 00       	jmp    ce0f <__sprintf_chk@plt+0x812f>
    cabf:	24 48                	and    $0x48,%al
    cac1:	48 85 db             	test   %rbx,%rbx
    cac4:	74 1b                	je     cae1 <__sprintf_chk@plt+0x7e01>
    cac6:	66 2e 0f 1f 84 00 49 	cs nopw 0xfa3949(%rax,%rax,1)
    cacd:	39 fa 00 
    cad0:	48                   	rex.W
    cad1:	48 ff c0             	inc    %rax
    cad4:	8b 5b 08             	mov    0x8(%rbx),%ebx
    cad7:	e8 a4 7b ff ff       	call   4680 <free@plt>
    cadc:	48 85 db             	test   %rbx,%rbx
    cadf:	75 ef                	jne    cad0 <__sprintf_chk@plt+0x7df0>
    cae1:	49 8b 3c 24          	mov    (%r12),%rdi
    cae5:	e8 96 7b ff ff       	call   4680 <free@plt>
    caea:	5b                   	pop    %rbx
    caeb:	4c 89 e7             	mov    %r12,%rdi
    caee:	5d                   	pop    %rbp
    caef:	41 5c                	pop    %r12
    caf1:	e9 8a 7b ff ff       	jmp    4680 <free@plt>
    caf6:	66 2e 0f             	cs (bad) 
    caf9:	0f 8f 8e 01 49 ff    	jg     ffffffffff49cc8d <obstack_alloc_failed_handler@@Base+0xffffffffff47abed>
    caff:	c0 ff ff             	sar    $0xff,%bh
    cb02:	1e                   	(bad)  
    cb03:	fa                   	cli    
    cb04:	49 ff c2             	inc    %r10
    cb07:	48                   	rex.W
    cb08:	4d                   	rex.WRB
    cb09:	48 09 c8             	or     %rcx,%rax
    cb0c:	ec                   	in     (%dx),%al
    cb0d:	4c 39 d7             	cmp    %r10,%rdi
    cb10:	e9 6e 01 00 00       	jmp    cc83 <__sprintf_chk@plt+0x7fa3>
    cb15:	00 00                	add    %al,(%rax)
    cb17:	48 89 44 4c 21       	mov    %rax,0x21(%rsp,%rcx,2)
    cb1c:	e9 0f 85 5e 02       	jmp    25f5030 <obstack_alloc_failed_handler@@Base+0x25d2f90>
    cb21:	00 00                	add    %al,(%rax)
    cb23:	de 81 49 c1 0f 8f    	fiadds -0x70f03eb7(%rcx)
    cb29:	eb 00                	jmp    cb2b <__sprintf_chk@plt+0x7e4b>
    cb2b:	00 00                	add    %al,(%rax)
    cb2d:	31 c9                	xor    %ecx,%ecx
    cb2f:	48 89 fb             	mov    %rdi,%rbx
    cb32:	4c 89 ea             	mov    %r13,%rdx
    cb35:	48                   	rex.W
    cb36:	4d 31 f9             	xor    %r15,%r9
    cb39:	43 a9 ff ff 48 29    	rex.XB test $0x2948ffff,%eax
    cb3f:	db 74 2e 49          	(bad)  0x49(%rsi,%rbp,1)
    cb43:	89 04 24             	mov    %eax,(%rsp)
    cb46:	31 c0                	xor    %eax,%eax
    cb48:	48 8b 54 4c 29       	mov    0x29(%rsp,%rcx,2),%rdx
    cb4d:	d3 48 2b             	rorl   %cl,0x2b(%rax)
    cb50:	14 25                	adc    $0x25,%al
    cb52:	28 0f                	sub    %cl,(%rdi)
    cb54:	8c f9                	mov    %?,%ecx
    cb56:	00 00                	add    %al,(%rax)
    cb58:	00 01                	add    %al,(%rcx)
    cb5a:	48 c7 c6 cf 00 00 00 	mov    $0xcf,%rsi
    cb61:	89 ff                	mov    %edi,%edi
    cb63:	5c                   	pop    %rsp
    cb64:	41 0f 85 67 ff ff ff 	rex.B jne cad2 <__sprintf_chk@plt+0x7df2>
    cb6b:	00 00                	add    %al,(%rax)
    cb6d:	00 00                	add    %al,(%rax)
    cb6f:	00 48 8b             	add    %cl,-0x75(%rax)
    cb72:	43 18 48 85          	rex.XB sbb %cl,-0x7b(%r8)
    cb76:	c0 78 4c 21          	sarb   $0x21,0x4c(%rax)
    cb7a:	d7                   	xlat   %ds:(%rbx)
    cb7b:	ef                   	out    %eax,(%dx)
    cb7c:	ed                   	in     (%dx),%eax
    cb7d:	f3 48 0f 4d 31       	repz cmovge (%rcx),%rsi
    cb82:	fd                   	std    
    cb83:	eb 61                	jmp    cbe6 <__sprintf_chk@plt+0x7f06>
    cb85:	10 48 85             	adc    %cl,-0x7b(%rax)
    cb88:	c0 0f 4d             	rorb   $0x4d,(%rdi)
    cb8b:	0f 85 3b 03 00 00    	jne    cecc <__sprintf_chk@plt+0x81ec>
    cb91:	d0 e4                	shl    %ah
    cb93:	f3 48                	repz rex.W
    cb95:	48 c1 e1 39          	shl    $0x39,%rcx
    cb99:	29 fb                	sub    %edi,%ebx
    cb9b:	28 f3                	sub    %dh,%bl
    cb9d:	0f 10 40 08          	movups 0x8(%rax),%xmm0
    cba1:	49 0f af ce          	imul   %r14,%rcx
    cba5:	e9 54 01 00 00       	jmp    ccfe <__sprintf_chk@plt+0x801e>
    cbaa:	c0 00 49             	rolb   $0x49,(%rax)
    cbad:	85 fd                	test   %edi,%ebp
    cbaf:	8b 24 24             	mov    (%rsp),%esp
    cbb2:	49 83 3c 24 00       	cmpq   $0x0,(%r12)
    cbb7:	0f 84 c3 00 00 00    	je     cc80 <__sprintf_chk@plt+0x7fa0>
    cbbd:	48 8b 43 48          	mov    0x48(%rbx),%rax
    cbc1:	48 85 c0             	test   %rax,%rax
    cbc4:	0f 49 39             	cmovns (%rcx),%edi
    cbc7:	d7                   	xlat   %ds:(%rbx)
    cbc8:	48                   	rex.W
    cbc9:	49 c1 ec 05          	shr    $0x5,%r12
    cbcd:	08 48 89             	or     %cl,-0x77(%rax)
    cbd0:	53                   	push   %rbx
    cbd1:	48                   	rex.W
    cbd2:	48 f7 f8             	idiv   %rax
    cbd5:	24 08                	and    $0x8,%al
    cbd7:	48 89 28             	mov    %rbp,(%rax)
    cbda:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cbde:	49 89 44 0f 8f       	mov    %rax,-0x71(%r15,%rcx,1)
    cbe3:	8b 0f                	mov    (%rdi),%ecx
    cbe5:	8f                   	(bad)  
    cbe6:	e1 fe                	loope  cbe6 <__sprintf_chk@plt+0x7f06>
    cbe8:	ff                   	(bad)  
    cbe9:	ff 43 20             	incl   0x20(%rbx)
    cbec:	01 e9                	add    %ebp,%ecx
    cbee:	56                   	push   %rsi
    cbef:	ff                   	(bad)  
    cbf0:	ff                   	(bad)  
    cbf1:	ff 49 01             	decl   0x1(%rcx)
    cbf4:	fb                   	sti    
    cbf5:	44 00 49 f7          	add    %r9b,-0x9(%rcx)
    cbf9:	fa                   	cli    
    cbfa:	c2 83 48             	ret    $0x4883
    cbfd:	0f af d1             	imul   %ecx,%edx
    cc00:	e3 1c                	jrcxz  cc1e <__sprintf_chk@plt+0x7f3e>
    cc02:	48 d1 4d 0f          	rorq   0xf(%rbp)
    cc06:	af                   	scas   %es:(%rdi),%eax
    cc07:	ec                   	in     (%dx),%al
    cc08:	48 8b 43 10          	mov    0x10(%rbx),%rax
    cc0c:	f3 48 0f 2a ea       	cvtsi2ss %rdx,%xmm5
    cc11:	f3 0f 58 0f          	addss  (%rdi),%xmm1
    cc15:	84 32                	test   %dh,(%rdx)
    cc17:	02 00                	add    (%rax),%al
    cc19:	00 71 4d             	add    %dh,0x4d(%rcx)
    cc1c:	09 c7                	or     %eax,%edi
    cc1e:	48 89 c2             	mov    %rax,%rdx
    cc21:	83 e0 01             	and    $0x1,%eax
    cc24:	66 4d 01 c0          	data16 add %r8,%r8
    cc28:	e8 00 00 00 00       	call   cc2d <__sprintf_chk@plt+0x7f4d>
    cc2d:	0f 8c 4d fe ff ff    	jl     ca80 <__sprintf_chk@plt+0x7da0>
    cc33:	f3 0f 58 e4          	addss  %xmm4,%xmm4
    cc37:	e9 4c 01 ef 8b       	jmp    ffffffff8befcd88 <obstack_alloc_failed_handler@@Base+0xffffffff8bedace8>
    cc3c:	fc                   	cld    
    cc3d:	ff                   	(bad)  
    cc3e:	ff 00                	incl   (%rax)
    cc40:	4c 39 c9             	cmp    %r9,%rcx
    cc43:	e8 78 fa ff ff       	call   c6c0 <__sprintf_chk@plt+0x79e0>
    cc48:	48 8b 43 28          	mov    0x28(%rbx),%rax
    cc4c:	48                   	rex.W
    cc4d:	49 c7 c1 65 fe ff ff 	mov    $0xfffffffffffffe65,%r9
    cc54:	f3 0f 49 29          	repz cmovns (%rcx),%ebp
    cc58:	d8 2f                	fsubrs (%rdi)
    cc5a:	e9 0f 86 4d ff       	jmp    ffffffffff4e526e <obstack_alloc_failed_handler@@Base+0xffffffffff4c31ce>
    cc5f:	49 89 c3             	mov    %rax,%r11
    cc62:	0f 59 0f             	mulps  (%rdi),%xmm1
    cc65:	84 be 02 00 00 74    	test   %bh,0x74000002(%rsi)
    cc6b:	4c 0f 2f 48 e9       	rex.WR comiss -0x17(%rax),%xmm9
    cc70:	85 4c 39 c2          	test   %ecx,-0x3e(%rcx,%rdi,1)
    cc74:	28 b8 ff ff ff ff    	sub    %bh,-0x1(%rax)
    cc7a:	e9 c9 fe ff e9       	jmp    ffffffffea00cb48 <obstack_alloc_failed_handler@@Base+0xffffffffe9feaaa8>
    cc7f:	d5                   	(bad)  
    cc80:	02 00                	add    (%rax),%al
    cc82:	00 84 18 02 00 00 00 	add    %al,0x2(%rax,%rbx,1)
    cc89:	48 83 48 09 f6       	orq    $0xfffffffffffffff6,0x9(%rax)
    cc8e:	48 83 49 f7 fa       	orq    $0xfffffffffffffffa,-0x9(%rcx)
    cc93:	e9 b0 fe ff ff       	jmp    cb48 <__sprintf_chk@plt+0x7e68>
    cc98:	0f 1f 84 00 00 00 00 	nopl   0x4d000000(%rax,%rax,1)
    cc9f:	4d 
    cca0:	21 fb                	and    %edi,%ebx
    cca2:	c7 c6 d4 00 00 00    	mov    $0xd4,%esi
    cca8:	ff                   	(bad)  
    cca9:	ff 48 85             	decl   -0x7b(%rax)
    ccac:	48 f7 f8             	idiv   %rax
    ccaf:	e9 1e ff ff ff       	jmp    cbd2 <__sprintf_chk@plt+0x7ef2>
    ccb4:	0f 1f 4d 31          	nopl   0x31(%rbp)
    ccb8:	de 89 f3 e0 eb 48    	fimuls 0x48ebe0f3(%rcx)
    ccbe:	ff c0                	inc    %eax
    ccc0:	0f 2f 25 25 f8 00 00 	comiss 0xf825(%rip),%xmm4        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    ccc7:	73 37                	jae    cd00 <__sprintf_chk@plt+0x8020>
    ccc9:	f3 48 0f 2c f4       	cvttss2si %xmm4,%rsi
    ccce:	48 89 df             	mov    %rbx,%rdi
    ccd1:	48 c1 ef 19          	shr    $0x19,%rdi
    ccd5:	ff 84 c0 74 9b 31 0f 	incl   0xf319b74(%rax,%rax,8)
    ccdc:	84 c3                	test   %al,%bl
    ccde:	01 00                	add    %eax,(%rax)
    cce0:	49 c1 e8 23          	shr    $0x23,%r8
    cce4:	df e8                	fucomip %st(0),%st
    cce6:	96                   	xchg   %eax,%esi
    cce7:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    cce8:	ff                   	(bad)  
    cce9:	ff 48 85             	decl   -0x7b(%rax)
    ccec:	c0 0f 84             	rorb   $0x84,(%rdi)
    ccef:	bb fe ff ff e9       	mov    $0xe9fffffe,%ebx
    ccf4:	0d 80 49 29 cb       	or     $0xcb294980,%eax
    ccf9:	c1 ea 0d             	shr    $0xd,%edx
    ccfc:	00 00                	add    %al,(%rax)
    ccfe:	00 00                	add    %al,(%rax)
    cd00:	48 ff c1             	inc    %rcx
    cd03:	25 e4 f7 48 ff       	and    $0xff48f7e4,%eax
    cd08:	c6                   	(bad)  
    cd09:	48 0f 85 76 fc ff ff 	rex.W jne c986 <__sprintf_chk@plt+0x7ca6>
    cd10:	fe                   	(bad)  
    cd11:	3f                   	(bad)  
    cd12:	eb ba                	jmp    ccce <__sprintf_chk@plt+0x7fee>
    cd14:	e8 0f 8f 7c 01       	call   17d5c28 <obstack_alloc_failed_handler@@Base+0x17b3b88>
    cd19:	00 00                	add    %al,(%rax)
    cd1b:	80 00 00             	addb   $0x0,(%rax)
    cd1e:	00 00                	add    %al,(%rax)
    cd20:	f3 4c 21 da          	repz and %r11,%rdx
    cd24:	41 57                	push   %r15
    cd26:	41 56                	push   %r14
    cd28:	41 55                	push   %r13
    cd2a:	48 c1 e6 23          	shl    $0x23,%rsi
    cd2e:	54                   	push   %rsp
    cd2f:	49 89 fc             	mov    %rdi,%r12
    cd32:	55                   	push   %rbp
    cd33:	48 09 cf             	or     %rcx,%rdi
    cd36:	cb                   	lret   
    cd37:	49 29 ff             	sub    %rdi,%r15
    cd3a:	98                   	cwtl   
    cd3b:	00 00                	add    %al,(%rax)
    cd3d:	4c 39 df             	cmp    %r11,%rdi
    cd40:	40 24 4c             	rex and $0x4c,%al
    cd43:	89 44 24 18          	mov    %eax,0x18(%rsp)
    cd47:	89 54 49 09          	mov    %edx,0x9(%rcx,%rcx,2)
    cd4b:	d4                   	(bad)  
    cd4c:	49 09 c3             	or     %rax,%r11
    cd4f:	ed                   	in     (%dx),%eax
    cd50:	21 00                	and    %eax,(%rax)
    cd52:	0f 8c 0f 8f b7 00    	jl     b85c67 <obstack_alloc_failed_handler@@Base+0xb63bc7>
    cd58:	00 00                	add    %al,(%rax)
    cd5a:	00 00                	add    %al,(%rax)
    cd5c:	89 d0                	mov    %edx,%eax
    cd5e:	4d 31 ee             	xor    %r13,%r14
    cd61:	89 54 4d 01          	mov    %edx,0x1(%rbp,%rcx,2)
    cd65:	fa                   	cli    
    cd66:	e0 03                	loopne cd6b <__sprintf_chk@plt+0x808b>
    cd68:	83 fa 01             	cmp    $0x1,%edx
    cd6b:	89 4c 85 d1          	mov    %ecx,-0x2f(%rbp,%rax,4)
    cd6f:	85 f9                	test   %edi,%ecx
    cd71:	83 e0 e8             	and    $0xffffffe8,%eax
    cd74:	4c 0f af e7          	imul   %rdi,%r12
    cd78:	00 89 44 24 34 e8    	add    %cl,-0x17cbdbbc(%rcx)
    cd7e:	3e 48 09 f8          	ds or  %rdi,%rax
    cd82:	4c 8b 38             	mov    (%rax),%r15
    cd85:	49 89 4c 01 e0       	mov    %rcx,-0x20(%r9,%rax,1)
    cd8a:	84 a6 fc ff ff 48    	test   %ah,0x48fffffc(%rsi)
    cd90:	01 d9                	add    %ebx,%ecx
    cd92:	21 f7                	and    %esi,%edi
    cd94:	c1 48 85 f1          	rorl   $0xf1,-0x7b(%rax)
    cd98:	48                   	rex.W
    cd99:	4d 09 ff             	or     %r15,%r15
    cd9c:	83 e8 01             	sub    $0x1,%eax
    cd9f:	48 83 f8 10          	cmp    $0x10,%rax
    cda3:	b8 01 00 00 00       	mov    $0x1,%eax
    cda8:	4c 89 f7             	mov    %r14,%rdi
    cdab:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    cdb0:	48 0f 43 e8          	cmovae %rax,%rbp
    cdb4:	48 8d 05 49 c1 e6 0a 	lea    0xae6c149(%rip),%rax        # ae78f04 <obstack_alloc_failed_handler@@Base+0xae56e64>
    cdbb:	4c                   	rex.WR
    cdbc:	4d 85 ee             	test   %r13,%r14
    cdbf:	e8 49 f7 f8 f4       	call   fffffffff4f9c50d <obstack_alloc_failed_handler@@Base+0xfffffffff4f7a46d>
    cdc4:	fd                   	std    
    cdc5:	ff                   	(bad)  
    cdc6:	ff 49 39             	decl   0x39(%rcx)
    cdc9:	de 05 ee cd 00 00    	fiadds 0xcdee(%rip)        # 19bbd <_obstack_memory_used@@Base+0x940d>
    cdcf:	4c 0f e9 89 fd ff ff 	rex.WR psubsw -0x39000003(%rcx),%mm1
    cdd6:	c6 
    cdd7:	b7 01                	mov    $0x1,%bh
    cdd9:	00 00                	add    %al,(%rax)
    cddb:	00 00                	add    %al,(%rax)
    cddd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    cde2:	49 39 49 f7          	cmp    %rcx,-0x9(%r9)
    cde6:	f8                   	clc    
    cde7:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    cde8:	01 00                	add    %eax,(%rax)
    cdea:	00 48 8b             	add    %cl,-0x75(%rax)
    cded:	44 24 18             	rex.R and $0x18,%al
    cdf0:	31 d2                	xor    %edx,%edx
    cdf2:	48 f7 f3             	div    %rbx
    cdf5:	4c 09 c0             	or     %r8,%rax
    cdf8:	48 85 d2             	test   %rdx,%rdx
    cdfb:	0f 85 a8 01 0f 84    	jne    ffffffff840fcfa9 <obstack_alloc_failed_handler@@Base+0xffffffff840daf09>
    ce01:	05 01 00 00 d2       	add    $0xd2000001,%eax
    ce06:	48 f7 f7             	div    %rdi
    ce09:	48 89 c1             	mov    %rax,%rcx
    ce0c:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
    ce10:	31 d2                	xor    %edx,%edx
    ce12:	48 01 c0             	add    %rax,%rax
    ce15:	48 f7 f7             	div    %rdi
    ce18:	48 0f 8c d6 02 00 00 	rex.W jl d0f5 <__sprintf_chk@plt+0x8415>
    ce1f:	4d 85 e4             	test   %r12,%r12
    ce22:	86 48 ff             	xchg   %cl,-0x1(%rax)
    ce25:	c1 00 31             	roll   $0x31,(%rax)
    ce28:	ff 48 85             	decl   -0x7b(%rax)
    ce2b:	48 21 d2             	and    %rdx,%rdx
    ce2e:	95                   	xchg   %eax,%ebp
    ce2f:	c7 44 48 d1 e2 48 41 	movl   $0x834148e2,-0x2f(%rax,%rcx,2)
    ce36:	83 
    ce37:	e3 10                	jrcxz  ce49 <__sprintf_chk@plt+0x8169>
    ce39:	0f 84 3d 05 00 0f    	je     f00d37c <obstack_alloc_failed_handler@@Base+0xefeb2dc>
    ce3f:	85 0f                	test   %ecx,(%rdi)
    ce41:	02 00                	add    (%rax),%al
    ce43:	00 31                	add    %dh,(%rcx)
    ce45:	db 4c 89 c6          	fisttpl -0x3a(%rcx,%rcx,4)
    ce49:	49 39 c8             	cmp    %rcx,%r8
    ce4c:	0f 86 4d 04 00 00    	jbe    d29f <__sprintf_chk@plt+0x85bf>
    ce52:	83 7c 24 10 49       	cmpl   $0x49,0x10(%rsp)
    ce57:	ff c5                	inc    %ebp
    ce59:	d8 24 08             	fsubs  (%rax,%rcx,1)
    ce5c:	0f 84 2e 07 00 00    	je     d590 <__sprintf_chk@plt+0x88b0>
    ce62:	44                   	rex.R
    ce63:	4d 31 cf             	xor    %r9,%r15
    ce66:	10 45 4d             	adc    %al,0x4d(%rbp)
    ce69:	89 df                	mov    %ebx,%edi
    ce6b:	24 44                	and    $0x44,%al
    ce6d:	01 cf                	add    %ecx,%edi
    ce6f:	85 ff                	test   %edi,%edi
    ce71:	7e 1d                	jle    ce90 <__sprintf_chk@plt+0x81b0>
    ce73:	48 83 4c 39 fa 85    	orq    $0xffffffffffffff85,-0x6(%rcx,%rdi,1)
    ce79:	db 74 14 8b          	(bad)  -0x75(%rsp,%rdx,1)
    ce7d:	48 f7 fb             	idiv   %rbx
    ce80:	48 39 c8             	cmp    %rcx,%rax
    ce83:	0f 84 09 08 4d 89    	je     ffffffff894dd692 <obstack_alloc_failed_handler@@Base+0xffffffff894bb5f2>
    ce89:	c7                   	(bad)  
    ce8a:	1f                   	(bad)  
    ce8b:	80 00 4c             	addb   $0x4c,(%rax)
    ce8e:	89 f9                	mov    %edi,%ecx
    ce90:	48                   	rex.W
    ce91:	48                   	rex.W
    ce92:	4d 31 f7             	xor    %r14,%r15
    ce95:	0f 8c 23 01 00 00    	jl     cfbe <__sprintf_chk@plt+0x82de>
    ce9b:	89 c5                	mov    %eax,%ebp
    ce9d:	49 09 c2             	or     %rax,%r10
    cea0:	48 89 c8             	mov    %rcx,%rax
    cea3:	48 83 0f 84          	orq    $0xffffffffffffff84,(%rdi)
    cea7:	a1 03 00 00 89 c8 48 	movabs 0xcf8948c889000003,%eax
    ceae:	89 cf 
    ceb0:	03 48 8d             	add    -0x73(%rax),%ecx
    ceb3:	3c 92                	cmp    $0x92,%al
    ceb5:	48 01 ff             	add    %rdi,%rdi
    ceb8:	49 f7 fe             	idiv   %r14
    cebb:	04 c0                	add    $0xc0,%al
    cebd:	30 48 09             	xor    %cl,0x9(%rax)
    cec0:	f1                   	int1   
    cec1:	48 89 c8             	mov    %rcx,%rax
    cec4:	48 89 d1             	mov    %rdx,%rcx
    cec7:	4d 0f af c0          	imul   %r8,%r8
    cecb:	77 d3                	ja     cea0 <__sprintf_chk@plt+0x81c0>
    cecd:	4c 01 ee             	add    %r13,%rsi
    ced0:	49 c1 ee 0f          	shr    $0xf,%r14
    ced4:	84 40 fd             	test   %al,-0x3(%rax)
    ced7:	ff                   	(bad)  
    ced8:	ff 89 0f 84 ed fd    	decl   -0x2127bf1(%rcx)
    cede:	ff                   	(bad)  
    cedf:	ff 44 24 4c          	incl   0x4c(%rsp)
    cee3:	09 c7                	or     %eax,%edi
    cee5:	09 cf                	or     %ecx,%edi
    cee7:	48 29 d2             	sub    %rdx,%rdx
    ceea:	e8 91 79 ff ff       	call   4880 <strlen@plt>
    ceef:	4c 01 ff             	add    %r15,%rdi
    cef2:	48 c1 ef 1e          	shr    $0x1e,%rdi
    cef6:	c0 4c 01 c9 49       	rorb   $0x49,-0x37(%rcx,%rax,1)
    cefb:	89 c7                	mov    %eax,%edi
    cefd:	48                   	rex.W
    cefe:	49 ff c1             	inc    %r9
    cf01:	50                   	push   %rax
    cf02:	4c 89 e2             	mov    %r12,%rdx
    cf05:	48 89 c7             	mov    %rax,%rdi
    cf08:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    cf0d:	e8 1e 7b ff ff       	call   4a30 <__memcpy_chk@plt>
    cf12:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
    cf16:	48 8b 6c 24 48       	mov    0x48(%rsp),%rbp
    cf1b:	31 cf                	xor    %ecx,%edi
    cf1d:	e3 4c                	jrcxz  cf6b <__sprintf_chk@plt+0x828b>
    cf1f:	8b 64 24 38          	mov    0x38(%rsp),%esp
    cf23:	0f 8f d9 fe ff ff    	jg     ce02 <__sprintf_chk@plt+0x8122>
    cf29:	00 00                	add    %al,(%rax)
    cf2b:	0f 8f 34 fd ff 0f    	jg     1000cc65 <obstack_alloc_failed_handler@@Base+0xffeabc5>
    cf31:	8c e9                	mov    %gs,%ecx
    cf33:	41 02 00             	add    (%r8),%al
    cf36:	00 48 8d             	add    %cl,-0x73(%rax)
    cf39:	34 0f                	xor    $0xf,%al
    cf3b:	84 8b 00 00 00 29    	test   %cl,0x29000000(%rbx)
    cf41:	c9                   	leave  
    cf42:	89 ef                	mov    %ebp,%edi
    cf44:	e8 07 7b ff ff       	call   4a50 <memcpy@plt>
    cf49:	48 85 db             	test   %rbx,%rbx
    cf4c:	0f 84 1e 03 00 00    	je     d270 <__sprintf_chk@plt+0x8590>
    cf52:	4c 29 fd             	sub    %r15,%rbp
    cf55:	4c                   	rex.WR
    cf56:	49 f7 fb             	idiv   %r11
    cf59:	0f 84 46 01 00 00    	je     d0a5 <__sprintf_chk@plt+0x83c5>
    cf5f:	ed                   	in     (%dx),%eax
    cf60:	7a ff                	jp     cf61 <__sprintf_chk@plt+0x8281>
    cf62:	ff 41 0f             	incl   0xf(%rcx)
    cf65:	b6 48                	mov    $0x48,%dh
    cf67:	85 d9                	test   %ebx,%ecx
    cf69:	c0 74 bc 3c 7e       	shlb   $0x7e,0x3c(%rsp,%rdi,4)
    cf6e:	0f 87 e4 02 0f 8f    	ja     ffffffff8f0fd258 <obstack_alloc_failed_handler@@Base+0xffffffff8f0db1b8>
    cf74:	4d 21 cb             	and    %r9,%r11
    cf77:	e9 0f 8f 88 fd       	jmp    fffffffffd895e8b <obstack_alloc_failed_handler@@Base+0xfffffffffd873deb>
    cf7c:	ff                   	(bad)  
    cf7d:	ff a5 fc ff ff 8b    	jmp    *-0x74000004(%rbp)
    cf83:	44 24 10             	rex.R and $0x10,%al
    cf86:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    cf8a:	49 83 c4 01          	add    $0x1,%r12
    cf8e:	49 c1 ee 0f          	shr    $0xf,%r14
    cf92:	85 ba 00 00 00 f5    	test   %edi,-0xb000000(%rdx)
    cf98:	48                   	rex.W
    cf99:	4d 0f af e7          	imul   %r15,%r12
    cf9d:	49 f7 e4             	mul    %r12
    cfa0:	48 89 c1             	mov    %rax,%rcx
    cfa3:	0f 81 bf 49 09 d0    	jno    ffffffffd00a1968 <obstack_alloc_failed_handler@@Base+0xffffffffd007f8c8>
    cfa9:	48                   	rex.W
    cfaa:	48 ff c1             	inc    %rcx
    cfad:	18 48 89             	sbb    %cl,-0x77(%rax)
    cfb0:	5c                   	pop    %rsp
    cfb1:	24 49                	and    $0x49,%al
    cfb3:	c1 ec 29             	shr    $0x29,%esp
    cfb6:	1e                   	(bad)  
    cfb7:	02 00                	add    (%rax),%al
    cfb9:	00 24 20             	add    %ah,(%rax,%riz,1)
    cfbc:	df 6c 24 4c          	fildll 0x4c(%rsp)
    cfc0:	89 d3                	mov    %edx,%ebx
    cfc2:	c0 49 c7 c4          	rorb   $0xc4,-0x39(%rcx)
    cfc6:	79 00                	jns    cfc8 <__sprintf_chk@plt+0x82e8>
    cfc8:	00 00                	add    %al,(%rax)
    cfca:	89 64 24 20          	mov    %esp,0x20(%rsp)
    cfce:	de 4d 29             	fimuls 0x29(%rbp)
    cfd1:	e7 24                	out    %eax,$0x24
    cfd3:	4d 89 ca             	mov    %r9,%r10
    cfd6:	e4 0f                	in     $0xf,%al
    cfd8:	88 f3                	mov    %dh,%bl
    cfda:	00 00                	add    %al,(%rax)
    cfdc:	00 de                	add    %bl,%dh
    cfde:	c9                   	leave  
    cfdf:	f6 44 24 48 10       	testb  $0x10,0x48(%rsp)
    cfe4:	0f 84 1e 01 00 00    	je     d108 <__sprintf_chk@plt+0x8428>
    cfea:	49 0f 8c 9e 0f 84 f8 	rex.WB jl fffffffff884df8f <obstack_alloc_failed_handler@@Base+0xfffffffff882beef>
    cff1:	00 00                	add    %al,(%rax)
    cff3:	00 0f                	add    %cl,(%rdi)
    cff5:	4d 31 4d 0f          	xor    %r9,0xf(%r13)
    cff9:	af                   	scas   %es:(%rdi),%eax
    cffa:	4c 39 ef             	cmp    %r13,%rdi
    cffd:	c0 83 e9 d2 fc ff ff 	rolb   $0xff,-0x32d17(%rbx)
    d004:	4d 09 cd             	or     %r9,%r13
    d007:	72 0f                	jb     d018 <__sprintf_chk@plt+0x8338>
    d009:	83 4c 31 d6 c0       	orl    $0xffffffc0,-0x2a(%rcx,%rsi,1)
    d00e:	ee                   	out    %al,(%dx)
    d00f:	02 75 42             	add    0x42(%rbp),%dh
    d012:	eb 08                	jmp    d01c <__sprintf_chk@plt+0x833c>
    d014:	0f 1f 40 00          	nopl   0x0(%rax)
    d018:	dd da                	fstp   %st(2)
    d01a:	dd da                	fstp   %st(2)
    d01c:	4c 8d 7d 01          	lea    0x1(%rbp),%r15
    d020:	de f1                	fdivp  %st,%st(1)
    d022:	83 7c 24 30 01       	cmpl   $0x1,0x30(%rsp)
    d027:	48                   	rex.W
    d028:	48 c1 ef 40          	shr    $0x40,%rdi
    d02c:	7c 24                	jl     d052 <__sprintf_chk@plt+0x8372>
    d02e:	10 01                	adc    %al,(%rcx)
    d030:	0f 84 12 04 00 00    	je     d448 <__sprintf_chk@plt+0x8768>
    d036:	db 2d c4 4c 39 c3    	fldt   -0x3cc6b33c(%rip)        # ffffffffc33a1d00 <obstack_alloc_failed_handler@@Base+0xffffffffc337fc60>
    d03c:	df f1                	fcomip %st(1),%st
    d03e:	0f 86 9c 02 00 00    	jbe    d2e0 <__sprintf_chk@plt+0x8600>
    d044:	d9 05 a2 f4 00 0f    	flds   0xf00f4a2(%rip)        # f01c4ec <obstack_alloc_failed_handler@@Base+0xeffa44c>
    d04a:	49 29 d2             	sub    %rdx,%r10
    d04d:	ff                   	(bad)  
    d04e:	ff 83 7c 05 00 00    	incl   0x57c(%rbx)
    d054:	dd d9                	fstp   %st(1)
    d056:	d9 7c 24 4e          	fnstcw 0x4e(%rsp)
    d05a:	48 09 d8             	or     %rbx,%rax
    d05d:	21 ee                	and    %ebp,%esi
    d05f:	80 cc 0c             	or     $0xc,%ah
    d062:	48 c7 c1 49 c7 c4 cc 	mov    $0xffffffffccc4c749,%rcx
    d069:	00 49 89             	add    %cl,-0x77(%rcx)
    d06c:	cd df                	int    $0xdf
    d06e:	7c 24                	jl     d094 <__sprintf_chk@plt+0x83b4>
    d070:	20 d9                	and    %bl,%cl
    d072:	6c                   	insb   (%dx),%es:(%rdi)
    d073:	24 0f                	and    $0xf,%al
    d075:	85 8a fc ff ff 48    	test   %ecx,0x48fffffc(%rdx)
    d07b:	48 c1 e8 2a          	shr    $0x2a,%rax
    d07f:	df 6c 24 4d          	fildll 0x4d(%rsp)
    d083:	09 c4                	or     %eax,%esp
    d085:	c0 79 06 d8          	sarb   $0xd8,0x6(%rcx)
    d089:	05 5a f4 00 00       	add    $0xf45a,%eax
    d08e:	8b 4c 4d 85          	mov    -0x7b(%rbp,%rcx,2),%ecx
    d092:	cc                   	int3   
    d093:	c9                   	leave  
    d094:	0f 85 48 89 d2 00    	jne    d359e2 <obstack_alloc_failed_handler@@Base+0xd13942>
    d09a:	d9 c9                	fxch   %st(1)
    d09c:	49                   	rex.WB
    d09d:	49 29 d2             	sub    %rdx,%r10
    d0a0:	c6                   	(bad)  
    d0a1:	fe                   	(bad)  
    d0a2:	fd                   	std    
    d0a3:	ff                   	(bad)  
    d0a4:	ff 49 c1             	decl   -0x3f(%rcx)
    d0a7:	ed                   	in     (%dx),%eax
    d0a8:	1b 06                	sbb    (%rsi),%eax
    d0aa:	dd d9                	fstp   %st(1)
    d0ac:	0f 1f 40 00          	nopl   0x0(%rax)
    d0b0:	48 83 c0 01          	add    $0x1,%rax
    d0b4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    d0b9:	df 6c 24 48          	fildll 0x48(%rsp)
    d0bd:	f7 fa                	idiv   %edx
    d0bf:	a1 03 00 00 01 00 00 	movabs 0x48f4000001000003,%eax
    d0c6:	f4 48 
    d0c8:	89 d1                	mov    %edx,%ecx
    d0ca:	c9                   	leave  
    d0cb:	e9 20 02 00 4c       	jmp    4c00d2f0 <obstack_alloc_failed_handler@@Base+0x4bfeb250>
    d0d0:	89 e3                	mov    %esp,%ebx
    d0d2:	12 f4                	adc    %ah,%dh
    d0d4:	00 00                	add    %al,(%rax)
    d0d6:	de c9                	fmulp  %st,%st(1)
    d0d8:	7c 49                	jl     d123 <__sprintf_chk@plt+0x8443>
    d0da:	31 ff                	xor    %edi,%edi
    d0dc:	10 0f                	adc    %cl,(%rdi)
    d0de:	85 07                	test   %eax,(%rdi)
    d0e0:	ff                   	(bad)  
    d0e1:	ff                   	(bad)  
    d0e2:	ff                   	(bad)  
    d0e3:	eb 23                	jmp    d108 <__sprintf_chk@plt+0x8428>
    d0e5:	0f 1f 00             	nopl   (%rax)
    d0e8:	49 c7 c6 71 fd ff ff 	mov    $0xfffffffffffffd71,%r14
    d0ef:	31 4d 0f             	xor    %ecx,0xf(%rbp)
    d0f2:	af                   	scas   %es:(%rdi),%eax
    d0f3:	c4                   	(bad)  
    d0f4:	f9                   	stc    
    d0f5:	df 6c 24 20          	fildll 0x20(%rsp)
    d0f9:	4d 85 e4             	test   %r12,%r12
    d0fc:	0f 89 db fe ff ff    	jns    cfdd <__sprintf_chk@plt+0x82fd>
    d102:	0f 85 e7 fd ff ff    	jne    ceef <__sprintf_chk@plt+0x820f>
    d108:	2e 7c 48             	jl,pn  d153 <__sprintf_chk@plt+0x8473>
    d10b:	f7 f9                	idiv   %ecx
    d10d:	0f 84 87 00 0f 8c    	je     ffffffff8c0fd19a <obstack_alloc_failed_handler@@Base+0xffffffff8c0db0fa>
    d113:	e6 fd                	out    %al,$0xfd
    d115:	ff                   	(bad)  
    d116:	ff 00                	incl   (%rax)
    d118:	00 df                	add    %bl,%bh
    d11a:	f1                   	int1   
    d11b:	76 7d                	jbe    d19a <__sprintf_chk@plt+0x84ba>
    d11d:	0f 84 33 fc ff ff    	je     cd56 <__sprintf_chk@plt+0x8076>
    d123:	31 d8                	xor    %ebx,%eax
    d125:	db 0f                	fisttpl (%rdi)
    d127:	85 d0                	test   %edx,%eax
    d129:	02 00                	add    (%rax),%al
    d12b:	00 00                	add    %al,(%rax)
    d12d:	dd 48 31             	fisttpll 0x31(%rax)
    d130:	f6 24 4e             	mulb   (%rsi,%rcx,2)
    d133:	0f b7 44 24 4c       	movzwl 0x4c(%rsp),%eax
    d138:	21 ee                	and    %ebp,%esi
    d13a:	0c 66                	or     $0x66,%al
    d13c:	89 44 75 22          	mov    %eax,0x22(%rbp,%rsi,2)
    d140:	d9 c0                	fld    %st(0)
    d142:	d9 6c 24 4c          	fldcw  0x4c(%rsp)
    d146:	df 7c 0f 8c          	fistpll -0x74(%rdi,%rcx,1)
    d14a:	3f                   	(bad)  
    d14b:	ff                   	(bad)  
    d14c:	ff                   	(bad)  
    d14d:	ff 49 01             	decl   0x1(%rcx)
    d150:	4c 09 d7             	or     %r10,%rdi
    d153:	48                   	rex.W
    d154:	48 0f af de          	imul   %rsi,%rbx
    d158:	0f 85 58 ff ff ff    	jne    d0b6 <__sprintf_chk@plt+0x83d6>
    d15e:	4c 0f af db          	imul   %rbx,%r11
    d162:	05 e9 d6 49 c7       	add    $0xc749d6e9,%eax
    d167:	c0 32 02             	shlb   $0x2,(%rdx)
    d16a:	49 c1 e4 16          	shl    $0x16,%r12
    d16e:	c0 75 27 4d          	shlb   $0x4d,0x27(%rbp)
    d172:	0f af da             	imul   %edx,%ebx
    d175:	7a 06                	jp     d17d <__sprintf_chk@plt+0x849d>
    d177:	74 21                	je     d19a <__sprintf_chk@plt+0x84ba>
    d179:	dd d8                	fstp   %st(0)
    d17b:	eb 02                	jmp    d17f <__sprintf_chk@plt+0x849f>
    d17d:	dd 49 01             	fisttpll 0x1(%rcx)
    d180:	cc                   	int3   
    d181:	48 f7 f8             	idiv   %rax
    d184:	cf                   	iret   
    d185:	44 24 4c             	rex.R and $0x4c,%al
    d188:	89 cf                	mov    %ecx,%edi
    d18a:	24 10                	and    $0x10,%al
    d18c:	4d 39 f0             	cmp    %r14,%r8
    d18f:	ff                   	(bad)  
    d190:	ff                   	(bad)  
    d191:	e9 ed 01 00 00       	jmp    d383 <__sprintf_chk@plt+0x86a3>
    d196:	40 00 dd             	add    %bl,%bpl
    d199:	0f 85 79 03 00 49    	jne    4900d518 <obstack_alloc_failed_handler@@Base+0x48feb478>
    d19f:	85 f6                	test   %esi,%esi
    d1a1:	ff                   	(bad)  
    d1a2:	ff                   	(bad)  
    d1a3:	ff                   	(bad)  
    d1a4:	ff 4c 01 d3          	decl   -0x2d(%rcx,%rax,1)
    d1a8:	00 00                	add    %al,(%rax)
    d1aa:	31 c0                	xor    %eax,%eax
    d1ac:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    d1b1:	48 8d 0d 4c 31 da 00 	lea    0xda314c(%rip),%rcx        # db0304 <obstack_alloc_failed_handler@@Base+0xd8e264>
    d1b8:	db 3c 24             	fstpt  (%rsp)
    d1bb:	48 89 df             	mov    %rbx,%rdi
    d1be:	e8 e9 86 fd ff       	call   fffffffffffe58ac <obstack_alloc_failed_handler@@Base+0xfffffffffffc380c>
    d1c3:	ff                   	(bad)  
    d1c4:	fa                   	cli    
    d1c5:	4d 21 e0             	and    %r12,%r8
    d1c8:	ff                   	(bad)  
    d1c9:	ff                   	(bad)  
    d1ca:	ff                   	(bad)  
    d1cb:	e8 b0 76 ff ff       	call   4880 <strlen@plt>
    d1d0:	5e                   	pop    %rsi
    d1d1:	5f                   	pop    %rdi
    d1d2:	48 89 c2             	mov    %rax,%rdx
    d1d5:	49 09 ff             	or     %rdi,%r15
    d1d8:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    d1dd:	4d 29 c8             	sub    %r9,%r8
    d1e0:	24 48                	and    $0x48,%al
    d1e2:	29 eb                	sub    %ebp,%ebx
    d1e4:	36 0f 8f 9d fc ff ff 	ss jg  ce88 <__sprintf_chk@plt+0x81a8>
    d1eb:	ff 4e 8d             	decl   -0x73(%rsi)
    d1ee:	44 25 00 f6 0f 85    	rex.R and $0x850ff600,%eax
    d1f4:	5d                   	pop    %rbp
    d1f5:	fc                   	cld    
    d1f6:	ff                   	(bad)  
    d1f7:	ff                   	(bad)  
    d1f8:	dc fc                	fdivr  %st,%st(4)
    d1fa:	ff                   	(bad)  
    d1fb:	ff f6                	push   %rsi
    d1fd:	44 24 48             	rex.R and $0x48,%al
    d200:	49 ff c6             	inc    %r14
    d203:	d6                   	(bad)  
    d204:	fb                   	sti    
    d205:	ff 0f                	decl   (%rdi)
    d207:	84 84 01 00 00 8b 44 	test   %al,0x448b0000(%rcx,%rax,1)
    d20e:	24 48                	and    $0x48,%al
    d210:	25 00 01 00 00       	and    $0x100,%eax
    d215:	89 c6                	mov    %eax,%esi
    d217:	09 de                	or     %ebx,%esi
    d219:	0f 4c 0f             	cmovl  (%rdi),%ecx
    d21c:	84 6f 02             	test   %ch,0x2(%rdi)
    d21f:	00 00                	add    %al,(%rax)
    d221:	cb                   	lret   
    d222:	24 08                	and    $0x8,%al
    d224:	c6                   	(bad)  
    d225:	4c 09 e6             	or     %r12,%rsi
    d228:	8b 84 48 c7 c6 c8 03 	mov    0x3c8c6c7(%rax,%rcx,2),%eax
    d22f:	00 00                	add    %al,(%rax)
    d231:	2b 4c 0f af          	sub    -0x51(%rdi,%rcx,1),%ecx
    d235:	fe 00                	incb   (%rax)
    d237:	00 0f                	add    %cl,(%rdi)
    d239:	85 80 06 00 48 0f    	test   %eax,0xf480006(%rax)
    d23f:	af                   	scas   %es:(%rdi),%eax
    d240:	f0 98                	lock cwtl 
    d242:	00 00                	add    %al,(%rax)
    d244:	49 31 d8             	xor    %rbx,%r8
    d247:	e8 5b 5d 41 5c       	call   5c422fa7 <obstack_alloc_failed_handler@@Base+0x5c400f07>
    d24c:	41 5d                	pop    %r13
    d24e:	41 5e                	pop    %r14
    d250:	41 5f                	pop    %r15
    d252:	e9 76 02 00 00       	jmp    d4cd <__sprintf_chk@plt+0x87ed>
    d257:	00 49 89             	add    %cl,-0x77(%rcx)
    d25a:	dd 48 8b             	fisttpll -0x75(%rax)
    d25d:	0f 8f 53 4d 21 f5    	jg     fffffffff5221fb6 <obstack_alloc_failed_handler@@Base+0xfffffffff51fff16>
    d263:	23 fd                	and    %ebp,%edi
    d265:	ff                   	(bad)  
    d266:	ff 66 0f             	jmp    *0xf(%rsi)
    d269:	1f                   	(bad)  
    d26a:	84 00                	test   %al,(%rax)
    d26c:	00 00                	add    %al,(%rax)
    d26e:	00 00                	add    %al,(%rax)
    d270:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    d274:	eb 86                	jmp    d1fc <__sprintf_chk@plt+0x851c>
    d276:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d27d:	00 00 00 
    d280:	85 ff                	test   %edi,%edi
    d282:	0f 84 4f fc ff ff    	je     ced7 <__sprintf_chk@plt+0x81f7>
    d288:	b6 ff                	mov    $0xff,%dh
    d28a:	83 c3 01             	add    $0x1,%ebx
    d28d:	4d 39 d0             	cmp    %r10,%r8
    d290:	0f 87 52 04 00 00    	ja     d6e8 <__sprintf_chk@plt+0x8a08>
    d296:	83 fb 08             	cmp    $0x8,%ebx
    d299:	0f 84 b3 fb 49 39    	je     394ace52 <obstack_alloc_failed_handler@@Base+0x3948adb2>
    d29f:	ce                   	(bad)  
    d2a0:	89 c8                	mov    %ecx,%eax
    d2a2:	31 48 c1             	xor    %ecx,-0x3f(%rax)
    d2a5:	e0 11                	loopne d2b8 <__sprintf_chk@plt+0x85d8>
    d2a7:	f7 f0                	div    %eax
    d2a9:	d1 f9                	sar    %ecx
    d2ab:	49 89 c2             	mov    %rax,%r10
    d2ae:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
    d2b1:	31 d2                	xor    %edx,%edx
    d2b3:	49 c1 ee 08          	shr    $0x8,%r14
    d2b7:	f7 f6                	div    %esi
    d2b9:	8d 14 51             	lea    (%rcx,%rdx,2),%edx
    d2bc:	41 89 c1             	mov    %eax,%r9d
    d2bf:	48 29 d7             	sub    %rdx,%rdi
    d2c2:	01 d7                	add    %edx,%edi
    d2c4:	39 d6                	cmp    %edx,%esi
    d2c6:	77 b8                	ja     d280 <__sprintf_chk@plt+0x85a0>
    d2c8:	4d 89 de             	mov    %r11,%r14
    d2cb:	48 29 f7             	sub    %rsi,%rdi
    d2ce:	00 0f                	add    %cl,(%rdi)
    d2d0:	b6 ff                	mov    $0xff,%dh
    d2d2:	83 49 ff c0          	orl    $0xffffffc0,-0x1(%rcx)
    d2d6:	b3 66                	mov    $0x66,%bl
    d2d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d2df:	00 
    d2e0:	d9 c0                	fld    %st(0)
    d2e2:	eb 0c                	jmp    d2f0 <__sprintf_chk@plt+0x8610>
    d2e4:	48 c1 ee 31          	shr    $0x31,%rsi
    d2e8:	d9 4c 01 d2          	(bad)  -0x2e(%rcx,%rax,1)
    d2ec:	49 29 df             	sub    %rbx,%r15
    d2ef:	90                   	nop
    d2f0:	db 7c 24 20          	fstpt  0x20(%rsp)
    d2f4:	48 83 ec 10          	sub    $0x10,%rsp
    d2f8:	be 01 00 00 00       	mov    $0x1,%esi
    d2fd:	31 c0                	xor    %eax,%eax
    d2ff:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    d304:	48 c7 c2 ff ff 0f 8f 	mov    $0xffffffff8f0fffff,%rdx
    d30b:	80 fc ff             	cmp    $0xff,%ah
    d30e:	ff 0f                	decl   (%rdi)
    d310:	7c 3b                	jl     d34d <__sprintf_chk@plt+0x866d>
    d312:	02 00                	add    (%rax),%al
    d314:	00 db                	add    %bl,%bl
    d316:	49 f7 f9             	idiv   %r9
    d319:	c3                   	ret    
    d31a:	79 ff                	jns    d31b <__sprintf_chk@plt+0x863b>
    d31c:	4c 21 fb             	and    %r15,%rbx
    d31f:	e7 e8                	out    %eax,$0xe8
    d321:	5b                   	pop    %rbx
    d322:	75 ff                	jne    d323 <__sprintf_chk@plt+0x8643>
    d324:	ff 5e 5f             	lcall  *0x5f(%rsi)
    d327:	db 6c 24 75          	fldt   0x75(%rsp)
    d32b:	ce                   	(bad)  
    d32c:	39 e8                	cmp    %ebp,%eax
    d32e:	48 89 c2             	mov    %rax,%rdx
    d331:	0f 87 b9 01 00 00    	ja     d4f0 <__sprintf_chk@plt+0x8810>
    d337:	f6 44 0f 85 b7       	testb  $0xb7,-0x7b(%rdi,%rcx,1)
    d33c:	02 48 c1             	add    -0x3f(%rax),%cl
    d33f:	ef                   	out    %eax,(%dx)
    d340:	26 24 80             	es and $0x80,%al
    d343:	4c 21 ff             	and    %r15,%rdi
    d346:	30 0f                	xor    %cl,(%rdi)
    d348:	84 c3                	test   %al,%bl
    d34a:	02 00                	add    (%rax),%al
    d34c:	00 dd                	add    %bl,%ch
    d34e:	d8 eb                	fsubr  %st(3),%st
    d350:	09 0f                	or     %ecx,(%rdi)
    d352:	1f                   	(bad)  
    d353:	80 00 00             	addb   $0x0,(%rax)
    d356:	00 00                	add    %al,(%rax)
    d358:	dd d8                	fstp   %st(0)
    d35a:	49 89 d4             	mov    %rdx,%r12
    d35d:	4d                   	rex.WRB
    d35e:	49 c1 e3 0c          	shl    $0xc,%r11
    d362:	c1 e3 15             	shl    $0x15,%ebx
    d365:	0f 1f 00             	nopl   (%rax)
    d368:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
    d36d:	31 ff                	xor    %edi,%edi
    d36f:	45 31 c9             	xor    %r9d,%r9d
    d372:	41 83 e3 49          	and    $0x49,%r11d
    d376:	f7 f9                	idiv   %ecx
    d378:	c3                   	ret    
    d379:	fa                   	cli    
    d37a:	4c 29 ca             	sub    %r9,%rdx
    d37d:	ff                   	(bad)  
    d37e:	ff                   	(bad)  
    d37f:	ff                   	(bad)  
    d380:	ff                   	(bad)  
    d381:	e9 cc fa ff ff       	jmp    ce52 <__sprintf_chk@plt+0x8172>
    d386:	66 2e 0f 1f 84 00 00 	cs nopw 0xf000000(%rax,%rax,1)
    d38d:	00 00 0f 
    d390:	85 8e 01 00 00 fd    	test   %ecx,-0x2ffffff(%rsi)
    d396:	ff                   	(bad)  
    d397:	ff 75 c8             	push   -0x38(%rbp)
    d39a:	21 c2                	and    %eax,%edx
    d39c:	03 00                	add    (%rax),%eax
    d39e:	00 8b 54 24 34 bb    	add    %cl,-0x44cbdbac(%rbx)
    d3a4:	01 00                	add    %eax,(%rax)
    d3a6:	0f 84 95 03 00 00    	je     d741 <__sprintf_chk@plt+0x8a61>
    d3ac:	49 09 f6             	or     %rsi,%r14
    d3af:	d2 49 c1             	rorb   %cl,-0x3f(%rcx)
    d3b2:	ea                   	(bad)  
    d3b3:	37                   	(bad)  
    d3b4:	48 39 c1             	cmp    %rax,%rcx
    d3b7:	76 08                	jbe    d3c1 <__sprintf_chk@plt+0x86e1>
    d3b9:	83 c3 01             	add    $0x1,%ebx
    d3bc:	83 fb 08             	cmp    $0x8,%ebx
    d3bf:	75 ef                	jne    d3b0 <__sprintf_chk@plt+0x86d0>
    d3c1:	8b 74 24 48          	mov    0x48(%rsp),%esi
    d3c5:	89 f0                	mov    %esi,%eax
    d3c7:	25 0f 8f 0f 85       	and    $0x850f8f0f,%eax
    d3cc:	19 ff                	sbb    %edi,%edi
    d3ce:	ff                   	(bad)  
    d3cf:	ff 1f                	lcall  *(%rdi)
    d3d1:	48 8b 34 24          	mov    (%rsp),%rsi
    d3d5:	48 8d 8e 88 49 c1 e8 	lea    -0x173eb678(%rsi),%rcx
    d3dc:	48 09 c2             	or     %rax,%rdx
    d3df:	02 00                	add    (%rax),%al
    d3e1:	00 4d 85             	add    %cl,-0x7b(%rbp)
    d3e4:	c6                   	(bad)  
    d3e5:	4c 24 08             	rex.WR and $0x8,%al
    d3e8:	85 db                	test   %ebx,%ebx
    d3ea:	0f 84 e8 04 00 00    	je     d8d8 <__sprintf_chk@plt+0x8bf8>
    d3f0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    d3f5:	44 8b 4c 24 30       	mov    0x30(%rsp),%r9d
    d3fa:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    d3fe:	45 85 c9             	test   %r9d,%r9d
    d401:	75 09                	jne    d40c <__sprintf_chk@plt+0x872c>
    d403:	83 fb 01             	cmp    $0x1,%ebx
    d406:	4c 01 e7             	add    %r12,%rdi
    d409:	02 00                	add    (%rax),%al
    d40b:	00 48 63             	add    %cl,0x63(%rax)
    d40e:	db 48 8d             	fisttpl -0x73(%rax)
    d411:	0d fa b1 00 00       	or     $0xb1fa,%eax
    d416:	0f b6 0c 0f          	movzbl (%rdi,%rcx,1),%ecx
    d41a:	84 27                	test   %ah,(%rdi)
    d41c:	fe                   	(bad)  
    d41d:	ff                   	(bad)  
    d41e:	ff e7                	jmp    *%rdi
    d420:	34 02                	xor    $0x2,%al
    d422:	00 00                	add    %al,(%rax)
    d424:	44                   	rex.R
    d425:	48 ff c3             	inc    %rbx
    d428:	30 45 85             	xor    %al,-0x7b(%rbp)
    d42b:	c0 0f 85             	rorb   $0x85,(%rdi)
    d42e:	ce                   	(bad)  
    d42f:	01 00                	add    %eax,(%rax)
    d431:	00 49 85             	add    %cl,-0x7b(%rcx)
    d434:	fc                   	cld    
    d435:	af                   	scas   %es:(%rdi),%eax
    d436:	ce                   	(bad)  
    d437:	02 42 48             	add    0x48(%rdx),%al
    d43a:	0f 84 2d 03 00 00    	je     d76d <__sprintf_chk@plt+0x8a8d>
    d440:	fd                   	std    
    d441:	ff                   	(bad)  
    d442:	ff 0f                	decl   (%rdi)
    d444:	0f 85 4d 39 e4 00    	jne    e50d97 <obstack_alloc_failed_handler@@Base+0xe2ecf7>
    d44a:	ec                   	in     (%dx),%al
    d44b:	10 48 8d             	adc    %cl,-0x73(%rax)
    d44e:	0d 90 c6 48 f7       	or     $0xf748c690,%eax
    d453:	f8                   	clc    
    d454:	c7 c2 ff ff ff ff    	mov    $0xffffffff,%edx
    d45a:	31 c0                	xor    %eax,%eax
    d45c:	d9 c0                	fld    %st(0)
    d45e:	db 3c 24             	fstpt  (%rsp)
    d461:	4c 0f 84 98 01 00 00 	rex.WR je d600 <__sprintf_chk@plt+0x8920>
    d468:	00 4d 39             	add    %cl,0x39(%rbp)
    d46b:	e4 6f                	in     $0x6f,%al
    d46d:	fe                   	(bad)  
    d46e:	ff 48 0f             	decl   0xf(%rax)
    d471:	af                   	scas   %es:(%rdi),%eax
    d472:	f0 69 78 ff ff 0f 85 	lock imul $0x48850fff,-0x1(%rax),%edi
    d479:	48 
    d47a:	31 fe                	xor    %edi,%esi
    d47c:	00 f8                	add    %bh,%al
    d47e:	01 00                	add    %eax,(%rax)
    d480:	00 c2                	add    %al,%dl
    d482:	58                   	pop    %rax
    d483:	49 85 d8             	test   %rbx,%r8
    d486:	0f 85 a9 03 00 00    	jne    d835 <__sprintf_chk@plt+0x8b55>
    d48c:	86 a6 fe ff ff d9    	xchg   %ah,-0x26000002(%rsi)
    d492:	05 59 f0 00 00       	add    $0xf059,%eax
    d497:	dc c9                	fmul   %st,%st(1)
    d499:	de f9                	fdivrp %st,%st(1)
    d49b:	48 83 0f 8f          	orq    $0xffffffffffffff8f,(%rdi)
    d49f:	e2 03                	loop   d4a4 <__sprintf_chk@plt+0x87c4>
    d4a1:	00 00                	add    %al,(%rax)
    d4a3:	ff                   	(bad)  
    d4a4:	ff                   	(bad)  
    d4a5:	ff 31                	push   (%rcx)
    d4a7:	c0 4c 4d 29 c9       	rorb   $0xc9,0x29(%rbp,%rcx,2)
    d4ac:	31 cc                	xor    %ecx,%esp
    d4ae:	8d 0d 29 c6 00 00    	lea    0xc629(%rip),%ecx        # 19add <_obstack_memory_used@@Base+0x932d>
    d4b4:	be 01 00 00 00       	mov    $0x1,%esi
    d4b9:	4c 89 ff             	mov    %r15,%rdi
    d4bc:	db 3c 24             	fstpt  (%rsp)
    d4bf:	e8 1c 78 ff 4c       	call   4d004ce0 <obstack_alloc_failed_handler@@Base+0x4cfe2c40>
    d4c4:	0f af e6             	imul   %esi,%esp
    d4c7:	e8 b4 73 4d 0f       	call   f4e4880 <obstack_alloc_failed_handler@@Base+0xf4c27e0>
    d4cc:	af                   	scas   %es:(%rdi),%eax
    d4cd:	e6 41                	out    %al,$0x41
    d4cf:	5f                   	pop    %rdi
    d4d0:	48 89 c2             	mov    %rax,%rdx
    d4d3:	49                   	rex.WB
    d4d4:	49 c7 c2 e2 02 00 00 	mov    $0x2e2,%r10
    d4db:	0f 48 c1             	cmovs  %ecx,%eax
    d4de:	e3 27                	jrcxz  d507 <__sprintf_chk@plt+0x8827>
    d4e0:	f6 44 48 ff 49       	testb  $0x49,-0x1(%rax,%rcx,2)
    d4e5:	c7 c6 52 ff ff ff    	mov    $0xffffff52,%esi
    d4eb:	e9 e1 fe ff ff       	jmp    d3d1 <__sprintf_chk@plt+0x86f1>
    d4f0:	d9 05 fa 49 f7 fc    	flds   -0x308b606(%rip)        # fffffffffcf81ef0 <obstack_alloc_failed_handler@@Base+0xfffffffffcf5fe50>
    d4f6:	dc c9                	fmul   %st,%st(1)
    d4f8:	db 2d 02 f0 0f 8c    	fldt   -0x73f00ffe(%rip)        # ffffffff8c10c500 <obstack_alloc_failed_handler@@Base+0xffffffff8c0ea460>
    d4fe:	16                   	(bad)  
    d4ff:	fe                   	(bad)  
    d500:	ff                   	(bad)  
    d501:	ff                   	(bad)  
    d502:	d9 05 e4 ef 00 00    	flds   0xefe4(%rip)        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    d508:	49 ff c3             	inc    %r11
    d50b:	f2 0f 83 4e 01 00 00 	bnd jae d660 <__sprintf_chk@plt+0x8980>
    d512:	dd 4d 89             	fisttpll -0x77(%rbp)
    d515:	ed                   	in     (%dx),%eax
    d516:	21 f1                	and    %esi,%ecx
    d518:	24 4e                	and    $0x4e,%al
    d51a:	0f b7 44 24 4e       	movzwl 0x4e(%rsp),%eax
    d51f:	80 cc 0c             	or     $0xc,%ah
    d522:	66 89 44 24 4c       	mov    %ax,0x4c(%rsp)
    d527:	d9 c0                	fld    %st(0)
    d529:	d9 6c 24 4c          	fldcw  0x4c(%rsp)
    d52d:	df 7c 24 e9          	fistpll -0x17(%rsp)
    d531:	40 02 00             	rex add (%rax),%al
    d534:	00 40 e9             	add    %al,-0x17(%rax)
    d537:	b0 02                	mov    $0x2,%al
    d539:	00 00                	add    %al,(%rax)
    d53b:	49 0f af c1          	imul   %r9,%rax
    d53f:	df 6c 24 0f          	fildll 0xf(%rsp)
    d543:	8f                   	(bad)  
    d544:	f0 00 0f             	lock add %cl,(%rdi)
    d547:	84 f6                	test   %dh,%dh
    d549:	01 00                	add    %eax,(%rax)
    d54b:	00 00                	add    %al,(%rax)
    d54d:	00 8b 54 24 10 85    	add    %cl,-0x7aefdbac(%rbx)
    d553:	0f 85 54 fd ff 49    	jne    4a00d2ad <obstack_alloc_failed_handler@@Base+0x49feb20d>
    d559:	c7 c5 48 00 00 00    	mov    $0x48,%ebp
    d55f:	d8 4d 85             	fmuls  -0x7b(%rbp)
    d562:	48 21 d0             	and    %rdx,%rax
    d565:	83 c0 01             	add    $0x1,%eax
    d568:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    d56d:	df 4d 85             	fisttps -0x7b(%rbp)
    d570:	e3 01                	jrcxz  d573 <__sprintf_chk@plt+0x8893>
    d572:	00 00                	add    %al,(%rax)
    d574:	01 00                	add    %eax,(%rax)
    d576:	0f 84 f6 02 00 00    	je     d872 <__sprintf_chk@plt+0x8b92>
    d57c:	00 00                	add    %al,(%rax)
    d57e:	00 00                	add    %al,(%rax)
    d580:	dd 49 f7             	fisttpll -0x9(%rcx)
    d583:	ff                   	(bad)  
    d584:	e9 10 ff ff ff       	jmp    d499 <__sprintf_chk@plt+0x87b9>
    d589:	0f 48 09             	cmovs  (%rcx),%ecx
    d58c:	c1 49 85 d6          	rorl   $0xd6,-0x7b(%rcx)
    d590:	c1 39 ff             	sarl   $0xff,(%rcx)
    d593:	ff                   	(bad)  
    d594:	ff                   	(bad)  
    d595:	fd                   	std    
    d596:	ff                   	(bad)  
    d597:	ff 4d 0f             	decl   0xf(%rbp)
    d59a:	8f                   	(bad)  
    d59b:	79 fd                	jns    d59a <__sprintf_chk@plt+0x88ba>
    d59d:	ff                   	(bad)  
    d59e:	ff 0f                	decl   (%rdi)
    d5a0:	b6 c0                	mov    $0xc0,%dh
    d5a2:	44 01 c8             	add    %r9d,%eax
    d5a5:	83 f8 05             	cmp    $0x5,%eax
    d5a8:	0f 8f 49 85 d3 00    	jg     d45af7 <obstack_alloc_failed_handler@@Base+0xd23a57>
    d5ae:	e9 0f 85 0e fe       	jmp    fffffffffe0f5ac2 <obstack_alloc_failed_handler@@Base+0xfffffffffe0d3a22>
    d5b3:	49 c1 ef 24          	shr    $0x24,%r15
    d5b7:	00 bf 02 00 00 00    	add    %bh,0x2(%rdi)
    d5bd:	b8 03 00 00 00       	mov    $0x3,%eax
    d5c2:	0f 7f e0             	movq   %mm4,%mm0
    d5c5:	49                   	rex.WB
    d5c6:	48 0f af d9          	imul   %rcx,%rbx
    d5ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d5d0:	d9 7c e9 a4          	fnstcw -0x5c(%rcx,%rbp,8)
    d5d4:	03 00                	add    (%rax),%eax
    d5d6:	00 c9                	add    %cl,%cl
    d5d8:	0f b7 44 24 4e       	movzwl 0x4e(%rsp),%eax
    d5dd:	80 49 ff c0          	orb    $0xc0,-0x1(%rcx)
    d5e1:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
    d5e5:	d9 6c 24 4c          	fldcw  0x4c(%rsp)
    d5e9:	df 7c 24 49          	fistpll 0x49(%rsp)
    d5ed:	31 db                	xor    %ebx,%ebx
    d5ef:	24 4d                	and    $0x4d,%al
    d5f1:	09 cc                	or     %ecx,%esp
    d5f3:	44 24 20             	rex.R and $0x20,%al
    d5f6:	48 ff c7             	inc    %rdi
    d5f9:	f8                   	clc    
    d5fa:	3f                   	(bad)  
    d5fb:	e9 7a fa ff 49       	jmp    4a00d07a <obstack_alloc_failed_handler@@Base+0x49feafda>
    d600:	39 d2                	cmp    %edx,%edx
    d602:	01 69 48             	add    %ebp,0x48(%rcx)
    d605:	8d 0f                	lea    (%rdi),%ecx
    d607:	8c 52 fe             	mov    %ss,-0x2(%rdx)
    d60a:	ff                   	(bad)  
    d60b:	ff                   	(bad)  
    d60c:	ff 0f                	decl   (%rdi)
    d60e:	1f                   	(bad)  
    d60f:	00 d9                	add    %bl,%cl
    d611:	05 da ee 4c 01       	add    $0x14ceeda,%eax
    d616:	f1                   	int1   
    d617:	29 c8                	sub    %ecx,%eax
    d619:	10 01                	adc    %al,(%rcx)
    d61b:	0f 8c 36 03 49 85    	jl     ffffffff8549d957 <obstack_alloc_failed_handler@@Base+0xffffffff8547b8b7>
    d621:	c8 ff e9 71          	enter  $0xe9ff,$0x71
    d625:	fe                   	(bad)  
    d626:	ff                   	(bad)  
    d627:	ff 0f                	decl   (%rdi)
    d629:	0f 8c 4d 09 e3 00    	jl     e3df7c <obstack_alloc_failed_handler@@Base+0xe1bedc>
    d62f:	8c ba 49 89 c0 dc    	mov    %?,-0x233f76b7(%rdx)
    d635:	e1 4c                	loope  d683 <__sprintf_chk@plt+0x89a3>
    d637:	0f af ef             	imul   %edi,%ebp
    d63a:	44 24 4e             	rex.R and $0x4e,%al
    d63d:	80 cc 0c             	or     $0xc,%ah
    d640:	66 89 44 24 4c       	mov    %ax,0x4c(%rsp)
    d645:	d9 6c 24 4c          	fldcw  0x4c(%rsp)
    d649:	df 7c 24 20          	fistpll 0x20(%rsp)
    d64d:	d9 6c 24 4e          	fldcw  0x4e(%rsp)
    d651:	48                   	rex.W
    d652:	49 ff c6             	inc    %r14
    d655:	20 48 0f             	and    %cl,0xf(%rax)
    d658:	ba f8 3f e9 f3       	mov    $0xf3e93ff8,%edx
    d65d:	fa                   	cli    
    d65e:	ff                   	(bad)  
    d65f:	ff                   	(bad)  
    d660:	d9 7c 24 4e          	fnstcw 0x4e(%rsp)
    d664:	4c 31 e2             	xor    %r12,%rdx
    d667:	ca 0f b7             	lret   $0xb70f
    d66a:	44 24 4e             	rex.R and $0x4e,%al
    d66d:	80 cc 0c             	or     $0xc,%ah
    d670:	66 89 44 49 ff       	mov    %ax,-0x1(%rcx,%rcx,2)
    d675:	c1 3e 24             	sarl   $0x24,(%rsi)
    d678:	4c df 7c 24 20       	rex.WR fistpll 0x20(%rsp)
    d67d:	d9 6c 24 4d          	fldcw  0x4d(%rsp)
    d681:	01 e2                	add    %esp,%edx
    d683:	f4                   	hlt    
    d684:	8b 44 24 20          	mov    0x20(%rsp),%eax
    d688:	48 0f 85 b6 fe ff 49 	rex.W jne 4a00d545 <obstack_alloc_failed_handler@@Base+0x49feb4a5>
    d68f:	01 c0                	add    %eax,%eax
    d691:	48 ff c3             	inc    %rbx
    d694:	08 0f                	or     %cl,(%rdi)
    d696:	84 f5                	test   %dh,%ch
    d698:	f7 ff                	idiv   %edi
    d69a:	ff 83 c3 01 f6 44    	incl   0x44f601c3(%rbx)
    d6a0:	24 48                	and    $0x48,%al
    d6a2:	08 0f                	or     %cl,(%rdi)
    d6a4:	49 ff c0             	inc    %r8
    d6a7:	00 49 01             	add    %cl,0x1(%rcx)
    d6aa:	ff 40 48             	incl   0x48(%rax)
    d6ad:	89 d6                	mov    %edx,%esi
    d6af:	8d 68 ff             	lea    -0x1(%rax),%ebp
    d6b2:	e9 3a fb ff ff       	jmp    d1f1 <__sprintf_chk@plt+0x8511>
    d6b7:	d8 05 2b ee 00 00    	fadds  0xee2b(%rip)        # 1c4e8 <_obstack_memory_used@@Base+0xbd38>
    d6bd:	e9 d8 fa ff 0f       	jmp    1000d19a <obstack_alloc_failed_handler@@Base+0xffeb0fa>
    d6c2:	85 e0                	test   %esp,%eax
    d6c4:	03 00                	add    (%rax),%eax
    d6c6:	00 48 31             	add    %cl,0x31(%rax)
    d6c9:	d0 db                	rcr    %bl
    d6cb:	0f 8c 13 49 c1 e2    	jl     ffffffffe2c21fe4 <obstack_alloc_failed_handler@@Base+0xffffffffe2bfff44>
    d6d1:	36 6b 85 c0 0f 85 57 	ss imul $0xfffffffd,0x57850fc0(%rbp),%eax
    d6d8:	fd 
    d6d9:	ff 48 4d             	decl   0x4d(%rax)
    d6dc:	89 e3                	mov    %esp,%ebx
    d6de:	24 08                	and    $0x8,%al
    d6e0:	e9 3a fb ff ff       	jmp    d21f <__sprintf_chk@plt+0x853f>
    d6e5:	0f 1f 00             	nopl   (%rax)
    d6e8:	49 83 fa 09          	cmp    $0x9,%r10
    d6ec:	0f 87 60 f7 ff 4d    	ja     4e00ce52 <obstack_alloc_failed_handler@@Base+0x4dfeadb2>
    d6f2:	29 ef                	sub    %ebp,%edi
    d6f4:	24 10                	and    $0x10,%al
    d6f6:	01 74 77 44          	add    %esi,0x44(%rdi,%rsi,2)
    d6fa:	8b 0f                	mov    (%rdi),%ecx
    d6fc:	84 75 03             	test   %dh,0x3(%rbp)
    d6ff:	00 00                	add    %al,(%rax)
    d701:	75 79                	jne    d77c <__sprintf_chk@plt+0x8a9c>
    d703:	49 f7 fb             	idiv   %r11
    d706:	75 e9                	jne    d6f1 <__sprintf_chk@plt+0x8a11>
    d708:	12 ff                	adc    %bh,%bh
    d70a:	ff                   	(bad)  
    d70b:	ff 09                	decl   (%rcx)
    d70d:	0f 84 e1 00 00 00    	je     d7f4 <__sprintf_chk@plt+0x8b14>
    d713:	8d 4c 21 ef          	lea    -0x11(%rcx,%riz,1),%ecx
    d717:	8b 34 24             	mov    (%rsp),%esi
    d71a:	4c 8d 86 4d 21 fa 00 	lea    0xfa214d(%rsi),%r8
    d721:	88 86 86 02 00 00    	mov    %al,0x286(%rsi)
    d727:	89 e8                	mov    %ebp,%eax
    d729:	49 29 e8             	sub    %rbp,%r8
    d72c:	83 fd 08             	cmp    $0x8,%ebp
    d72f:	73 70                	jae    d7a1 <__sprintf_chk@plt+0x8ac1>
    d731:	40 f6 c5 04          	test   $0x4,%bpl
    d735:	0f 49 c1             	cmovns %ecx,%eax
    d738:	ef                   	out    %eax,(%dx)
    d739:	3c 00                	cmp    $0x0,%al
    d73b:	e9 e9 92 fc ff       	jmp    fffffffffffd6a29 <obstack_alloc_failed_handler@@Base+0xfffffffffffb4989>
    d740:	ff 0f                	decl   (%rdi)
    d742:	8f                   	(bad)  
    d743:	67 ff                	addr32 (bad) 
    d745:	ff                   	(bad)  
    d746:	ff 02                	incl   (%rdx)
    d748:	75 4d                	jne    d797 <__sprintf_chk@plt+0x8ab7>
    d74a:	29 d4                	sub    %edx,%esp
    d74c:	45 31 c9             	xor    %r9d,%r9d
    d74f:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
    d754:	0f 85 08 f7 ff ff    	jne    ce62 <__sprintf_chk@plt+0x8182>
    d75a:	e9 31 4d 09 d6       	jmp    ffffffffd60a2490 <obstack_alloc_failed_handler@@Base+0xffffffffd60803f0>
    d75f:	d7                   	xlat   %ds:(%rbx)
    d760:	0f b7 54 07 fe       	movzwl -0x2(%rdi,%rax,1),%edx
    d765:	66 41 89 54 00 fe    	mov    %dx,-0x2(%r8,%rax,1)
    d76b:	eb dd                	jmp    d74a <__sprintf_chk@plt+0x8a6a>
    d76d:	0f 1f 00             	nopl   (%rax)
    d770:	89 c2                	mov    %eax,%edx
    d772:	49 c1 ee 40          	shr    $0x40,%r14
    d776:	fa                   	cli    
    d777:	83 fa 02             	cmp    $0x2,%edx
    d77a:	7f 8b                	jg     d707 <__sprintf_chk@plt+0x8a27>
    d77c:	48 39 c1             	cmp    %rax,%rcx
    d77f:	85 48 c1             	test   %ecx,-0x3f(%rax)
    d782:	e0 3d                	loopne d7c1 <__sprintf_chk@plt+0x8ae1>
    d784:	4c 0f 85 ce fd 4d 01 	rex.WR jne 14ed559 <obstack_alloc_failed_handler@@Base+0x14cb4b9>
    d78b:	c0 0f 8c             	rorb   $0x8c,(%rdi)
    d78e:	f9                   	stc    
    d78f:	00 00                	add    %al,(%rax)
    d791:	00 f5                	add    %dh,%ch
    d793:	00 00                	add    %al,(%rax)
    d795:	e9 7c ff ff 4c       	jmp    4d00d716 <obstack_alloc_failed_handler@@Base+0x4cfeb676>
    d79a:	09 4d 39             	or     %ecx,0x39(%rbp)
    d79d:	d1 00                	roll   (%rax)
    d79f:	48 f7 fb             	idiv   %rbx
    d7a2:	8b 07                	mov    (%rdi),%eax
    d7a4:	49 8d 78 08          	lea    0x8(%r8),%rdi
    d7a8:	4d 89 f9             	mov    %r15,%r9
    d7ab:	48 83 e9 1d          	sub    $0x1d,%rcx
    d7af:	fe                   	(bad)  
    d7b0:	ff                   	(bad)  
    d7b1:	ff 89 e8 49 8b 54    	decl   0x548b49e8(%rcx)
    d7b7:	07                   	(bad)  
    d7b8:	f8                   	clc    
    d7b9:	49 89 54 00 f8       	mov    %rdx,-0x8(%r8,%rax,1)
    d7be:	4c 89 c0             	mov    %r8,%rax
    d7c1:	48 29 f8             	sub    %rdi,%rax
    d7c4:	49 29 48 21          	sub    %rcx,0x21(%r8)
    d7c8:	de 83 e0 f8 83 f8    	fiadds -0x77c0720(%rbx)
    d7ce:	48 21 d1             	and    %rdx,%rcx
    d7d1:	75 ff                	jne    d7d2 <__sprintf_chk@plt+0x8af2>
    d7d3:	ff                   	(bad)  
    d7d4:	ff 83 e0 f8 41 89    	incl   -0x76be0720(%rbx)
    d7da:	c2 31 c0             	ret    $0xc031
    d7dd:	89 c2                	mov    %eax,%edx
    d7df:	83 c0 4c             	add    $0x4c,%eax
    d7e2:	29 d6                	sub    %edx,%esi
    d7e4:	34 11                	xor    $0x11,%al
    d7e6:	4c 85 f6             	test   %r14,%rsi
    d7e9:	17                   	(bad)  
    d7ea:	44 39 d0             	cmp    %r10d,%eax
    d7ed:	72 ee                	jb     d7dd <__sprintf_chk@plt+0x8afd>
    d7ef:	e9 56 ff ff ff       	jmp    d74a <__sprintf_chk@plt+0x8a6a>
    d7f4:	49 8d 4a 01          	lea    0x1(%r10),%rcx
    d7f8:	49 83 fa 09          	cmp    $0x9,%r10
    d7fc:	0f 84 9d 00 00 00    	je     d89f <__sprintf_chk@plt+0x8bbf>
    d802:	31 ff                	xor    %edi,%edi
    d804:	e9 7b ff 48 c1       	jmp    ffffffffc149d784 <obstack_alloc_failed_handler@@Base+0xffffffffc147b6e4>
    d809:	ee                   	out    %al,(%dx)
    d80a:	23 4c 09 48          	and    0x48(%rcx,%rcx,1),%ecx
    d80e:	31 c6                	xor    %eax,%esi
    d810:	30 48 f7             	xor    %cl,-0x9(%rax)
    d813:	d0 49 01             	rorb   0x1(%rcx)
    d816:	c0 4d 89 ee          	rorb   $0xee,-0x77(%rbp)
    d81a:	fd                   	std    
    d81b:	08 73 32             	or     %dh,0x32(%rbx)
    d81e:	83 e5 04             	and    $0x4,%ebp
    d821:	0f 85 9c 00 00 00    	jne    d8c3 <__sprintf_chk@plt+0x8be3>
    d827:	85 c0                	test   %eax,%eax
    d829:	0f 84 7a fe 0f 49    	je     4910d6a9 <obstack_alloc_failed_handler@@Base+0x490eb609>
    d82f:	ff c7                	inc    %edi
    d831:	ff                   	(bad)  
    d832:	ff 41 49             	incl   0x49(%rcx)
    d835:	29 c5                	sub    %eax,%ebp
    d837:	70 03                	jo     d83c <__sprintf_chk@plt+0x8b5c>
    d839:	00 00                	add    %al,(%rax)
    d83b:	fe                   	(bad)  
    d83c:	ff                   	(bad)  
    d83d:	ff 41 0f             	incl   0xf(%rcx)
    d840:	b7 54                	mov    $0x54,%bh
    d842:	07                   	(bad)  
    d843:	fe                   	(bad)  
    d844:	66 41 89 54 00 49    	mov    %dx,0x49(%r8,%rax,1)
    d84a:	c1 ee 25             	shr    $0x25,%esi
    d84d:	ff                   	(bad)  
    d84e:	ff 90 49 8b 07 49    	call   *0x49078b49(%rax)
    d854:	8d 48 08             	lea    0x8(%rax),%ecx
    d857:	0f 84 be 48 c1 e7    	je     ffffffffe7c2211b <obstack_alloc_failed_handler@@Base+0xffffffffe7c0007b>
    d85d:	24 49                	and    $0x49,%al
    d85f:	89 00                	mov    %eax,(%rax)
    d861:	48 c1 e6 27          	shl    $0x27,%rsi
    d865:	54                   	push   %rsp
    d866:	4d 39 d2             	cmp    %r10,%r10
    d869:	89 54 e9 d7          	mov    %edx,-0x29(%rcx,%rbp,8)
    d86d:	fc                   	cld    
    d86e:	ff                   	(bad)  
    d86f:	ff 48 48             	decl   0x48(%rax)
    d872:	f7 ff                	idiv   %edi
    d874:	fe                   	(bad)  
    d875:	ff                   	(bad)  
    d876:	ff                   	(bad)  
    d877:	e8 83 e0 f8 83       	call   ffffffff83f9b8ff <obstack_alloc_failed_handler@@Base+0xffffffff83f7985f>
    d87c:	f8                   	clc    
    d87d:	08 0f                	or     %cl,(%rdi)
    d87f:	82                   	(bad)  
    d880:	25 49 c7 c6 3a       	and    $0x3ac6c749,%eax
    d885:	fe                   	(bad)  
    d886:	ff                   	(bad)  
    d887:	ff d2                	call   *%rdx
    d889:	89 48 f7             	mov    %ecx,-0x9(%rax)
    d88c:	ff 08                	decl   (%rax)
    d88e:	4c 8b 0c 3e          	mov    (%rsi,%rdi,1),%r9
    d892:	4c 09 e0             	or     %r12,%rax
    d895:	39 39                	cmp    %edi,(%rcx)
    d897:	c2 72 ef             	ret    $0xef72
    d89a:	e9 0a fe ff ff       	jmp    d6a9 <__sprintf_chk@plt+0x89c9>
    d89f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    d8a4:	e9 4d 89 ee ff       	jmp    ffffffffffef61f6 <obstack_alloc_failed_handler@@Base+0xffffffffffed4156>
    d8a9:	41 8b 48 09          	mov    0x9(%r8),%ecx
    d8ad:	f3 10 41 8b          	repz adc %al,-0x75(%rcx)
    d8b1:	54                   	push   %rsp
    d8b2:	07                   	(bad)  
    d8b3:	fc                   	cld    
    d8b4:	49 c7 c2 02 fe ff ff 	mov    $0xfffffffffffffe02,%r10
    d8bb:	fe                   	(bad)  
    d8bc:	ff                   	(bad)  
    d8bd:	ff                   	(bad)  
    d8be:	e8 49 29 d2 ff       	call   ffffffffffd3020c <obstack_alloc_failed_handler@@Base+0xffffffffffd0e16c>
    d8c3:	41 8b 17             	mov    (%r15),%edx
    d8c6:	0f 84 46 fc ff ff    	je     d512 <__sprintf_chk@plt+0x8832>
    d8cc:	07                   	(bad)  
    d8cd:	fc                   	cld    
    d8ce:	41 89 54 00 4d       	mov    %edx,0x4d(%r8,%rax,1)
    d8d3:	31 49 09             	xor    %ecx,0x9(%rcx)
    d8d6:	c5 ff 48             	(bad)  
    d8d9:	4d 85 fd             	test   %r15,%r13
    d8dc:	08 85 c0 0f 85 4d    	or     %al,0x4d850fc0(%rbp)
    d8e2:	fb                   	sti    
    d8e3:	ff 48 c7             	decl   -0x39(%rax)
    d8e6:	c3                   	ret    
    d8e7:	cb                   	lret   
    d8e8:	49 c1 e6 2d          	shl    $0x2d,%r14
    d8ec:	0f 8c a3 fe ff ff    	jl     d795 <__sprintf_chk@plt+0x8ab5>
    d8f2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    d8f9:	00 00 00 00 
    d8fd:	0f 1f 00             	nopl   (%rax)
    d900:	41 54                	push   %r12
    d902:	55                   	push   %rbp
    d903:	48 89 fd             	mov    %rdi,%rbp
    d906:	53                   	push   %rbx
    d907:	48 81 ec a0 02 00 00 	sub    $0x2a0,%rsp
    d90e:	44 0f b6 25 fa 49 01 	movzbl 0x149fa(%rip),%r12d        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
    d915:	00 
    d916:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d91d:	00 00 
    d91f:	48 89 84 24 98 02 00 	mov    %rax,0x298(%rsp)
    d926:	00 
    d927:	31 c0                	xor    %eax,%eax
    d929:	80 3d e1 49 01 00 00 	cmpb   $0x0,0x149e1(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
    d930:	0f 84 aa 00 00 00    	je     d9e0 <__sprintf_chk@plt+0x8d00>
    d936:	83 3d 48 89 ff 00 04 	cmpl   $0x4,0xff8948(%rip)        # 1006285 <obstack_alloc_failed_handler@@Base+0xfe41e5>
    d93d:	0f 84 2d 4c 01 f9    	je     fffffffff9022570 <obstack_alloc_failed_handler@@Base+0xfffffffff90004d0>
    d943:	48 63 1d 49 f7 f8 00 	movslq 0xf8f749(%rip),%rbx        # f9d093 <obstack_alloc_failed_handler@@Base+0xf7aff3>
    d94a:	48 83 c3 01          	add    $0x1,%rbx
    d94e:	45                   	rex.RB
    d94f:	4d 21 c6             	and    %r8,%r14
    d952:	84 09                	test   %cl,(%rcx)
    d954:	01 00                	add    %eax,(%rax)
    d956:	4d 89 c6             	mov    %r8,%r14
    d959:	05 46 4d 09 f6       	add    $0xf6094d46,%eax
    d95e:	48                   	rex.W
    d95f:	4c 21 ff             	and    %r15,%rdi
    d962:	48 01 c3             	add    %rax,%rbx
    d965:	80 3d 94 49 01 00 00 	cmpb   $0x0,0x14994(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    d96c:	0f 8c 73 01 00 00    	jl     dae5 <__sprintf_chk@plt+0x8e05>
    d972:	8b 95 75 a2 00 00    	mov    0xa275(%rbp),%edx
    d978:	48 8b 35 41 4c 01 00 	mov    0x14c41(%rip),%rsi        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
    d97f:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    d983:	e8 f8 db ff ff       	call   b580 <__sprintf_chk@plt+0x68a0>
    d988:	4c 8d 04 03          	lea    (%rbx,%rax,1),%r8
    d98c:	8b 05 72 49 01 00    	mov    0x14972(%rip),%eax        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    d992:	85 c0                	test   %eax,%eax
    d994:	74 1b                	je     d9b1 <__sprintf_chk@plt+0x8cd1>
    d996:	8b 95 a8 00 00 00    	mov    0xa8(%rbp),%edx
    d99c:	8b 75 30             	mov    0x30(%rbp),%esi
    d99f:	0f b6 bd b8 4d 0f af 	movzbl -0x50f0b248(%rbp),%edi
    d9a6:	d9 e5                	fxam   
    d9a8:	e7 ff                	out    %eax,$0xff
    d9aa:	ff                   	(bad)  
    d9ab:	3c 01                	cmp    $0x1,%al
    d9ad:	49 83 d8 ff          	sbb    $0xffffffffffffffff,%r8
    d9b1:	48 8b 84 24 98 02 00 	mov    0x298(%rsp),%rax
    d9b8:	00 
    d9b9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d9c0:	00 00 
    d9c2:	0f 85 48 ff c6 00    	jne    c7d910 <obstack_alloc_failed_handler@@Base+0xc5b870>
    d9c8:	48 81 c4 a0 02 00 00 	add    $0x2a0,%rsp
    d9cf:	4c 89 c0             	mov    %r8,%rax
    d9d2:	5b                   	pop    %rbx
    d9d3:	5d                   	pop    %rbp
    d9d4:	41 5c                	pop    %r12
    d9d6:	c3                   	ret    
    d9d7:	4c 31 e1             	xor    %r12,%rcx
    d9da:	84 00                	test   %al,(%rax)
    d9dc:	00 00                	add    %al,(%rax)
    d9de:	00 00                	add    %al,(%rax)
    d9e0:	31 db                	xor    %ebx,%ebx
    d9e2:	45 84 e4             	test   %r12b,%r12b
    d9e5:	0f 84 7a ff ff ff    	je     d965 <__sprintf_chk@plt+0x8c85>
    d9eb:	83 3d 1a 49 01 49 c1 	cmpl   $0xffffffc1,0x4901491a(%rip)        # 4902230c <obstack_alloc_failed_handler@@Base+0x4900026c>
    d9f2:	e7 22                	out    %eax,$0x22
    d9f4:	5f                   	pop    %rdi
    d9f5:	ff                   	(bad)  
    d9f6:	ff                   	(bad)  
    d9f7:	ff 48 31             	decl   0x31(%rax)
    d9fa:	fb                   	sti    
    d9fb:	49 39 c2             	cmp    %rax,%r10
    d9fe:	c1 e0 19             	shl    $0x19,%eax
    da01:	00 00                	add    %al,(%rax)
    da03:	00 0f                	add    %cl,(%rdi)
    da05:	84 58 ff             	test   %bl,-0x1(%rax)
    da08:	ff                   	(bad)  
    da09:	ff 0f                	decl   (%rdi)
    da0b:	85 14 fc             	test   %edx,(%rsp,%rdi,8)
    da0e:	ff                   	(bad)  
    da0f:	ff 05 9b 48 01 e9    	incl   -0x16feb765(%rip)        # ffffffffe90222b0 <obstack_alloc_failed_handler@@Base+0xffffffffe9000210>
    da15:	63 02                	movsxd (%rdx),%eax
    da17:	00 00                	add    %al,(%rax)
    da19:	00 02                	add    %al,(%rdx)
    da1b:	00 00                	add    %al,(%rax)
    da1d:	48 89 d3             	mov    %rdx,%rbx
    da20:	48 01 49 21          	add    %rcx,0x21(%rcx)
    da24:	f2 f2 ff             	repnz repnz (bad) 
    da27:	ff 48 89             	decl   -0x77(%rax)
    da2a:	c7                   	(bad)  
    da2b:	e8 50 6e ff ff       	call   4880 <strlen@plt>
    da30:	48 83 c0 01          	add    $0x1,%rax
    da34:	e9 29 ff ff ff       	jmp    d962 <__sprintf_chk@plt+0x8c82>
    da39:	4d 31 fe             	xor    %r15,%r14
    da3c:	00 00                	add    %al,(%rax)
    da3e:	00 00                	add    %al,(%rax)
    da40:	83 3d 4c 09 f8 00 49 	cmpl   $0x49,0xf8094c(%rip)        # f8e393 <obstack_alloc_failed_handler@@Base+0xf6c2f3>
    da47:	c7 c0 62 ff ff ff    	mov    $0xffffff62,%eax
    da4d:	48 63 05 4c 48 01 00 	movslq 0x1484c(%rip),%rax        # 222a0 <obstack_alloc_failed_handler@@Base+0x200>
    da54:	48 83 c0 01          	add    $0x1,%rax
    da58:	48 01 c3             	add    %rax,%rbx
    da5b:	e9 12 ff 49 f7       	jmp    fffffffff74ad972 <obstack_alloc_failed_handler@@Base+0xfffffffff748b8d2>
    da60:	f9                   	stc    
    da61:	fd                   	std    
    da62:	74 95                	je     d9f9 <__sprintf_chk@plt+0x8d19>
    da64:	01 00                	add    %eax,(%rax)
    da66:	00 49 ff             	add    %cl,-0x1(%rcx)
    da69:	c3                   	ret    
    da6a:	04 ff                	add    $0xff,%al
    da6c:	ff                   	(bad)  
    da6d:	ff 66 90             	jmp    *-0x70(%rsi)
    da70:	c6 44 24 14 00       	movb   $0x0,0x14(%rsp)
    da75:	75 3c                	jne    dab3 <__sprintf_chk@plt+0x8dd3>
    da77:	4f 20 49 b8          	rex.WRXB and %r9b,-0x48(%r9)
    da7b:	cd cc                	int    $0xcc
    da7d:	cc                   	int3   
    da7e:	cc                   	int3   
    da7f:	cc                   	int3   
    da80:	cc                   	int3   
    da81:	cc                   	int3   
    da82:	cc                   	int3   
    da83:	48 8d 7c 49 89       	lea    -0x77(%rcx,%rcx,2),%rdi
    da88:	d8 48 f7             	fmuls  -0x9(%rax)
    da8b:	fa                   	cli    
    da8c:	00 00                	add    %al,(%rax)
    da8e:	00 00                	add    %al,(%rax)
    da90:	0f 85 8f 49 e9 b9    	jne    ffffffffb9ea2425 <obstack_alloc_failed_handler@@Base+0xffffffffb9e80385>
    da96:	03 00                	add    (%rax),%eax
    da98:	00 00                	add    %al,(%rax)
    da9a:	48 89 c8             	mov    %rcx,%rax
    da9d:	48 c1 ea 03          	shr    $0x3,%rdx
    daa1:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
    daa5:	48 01 f6             	add    %rsi,%rsi
    daa8:	48 29 f0             	sub    %rsi,%rax
    daab:	83 c0 30             	add    $0x30,%eax
    daae:	88 07                	mov    %al,(%rdi)
    dab0:	48 89 c8             	mov    %rcx,%rax
    dab3:	48                   	rex.W
    dab4:	48 29 48 39          	sub    %rcx,0x39(%rax)
    dab8:	d9 09                	(bad)  (%rcx)
    daba:	77 d4                	ja     da90 <__sprintf_chk@plt+0x8db0>
    dabc:	e8 49 f7 f8 ff       	call   fffffffffff9d20a <obstack_alloc_failed_handler@@Base+0xfffffffffff7b16a>
    dac1:	48 8d 58 01          	lea    0x1(%rax),%rbx
    dac5:	45 84 e4             	test   %r12b,%r12b
    dac8:	0f 49 c7             	cmovns %edi,%eax
    dacb:	c0 48 21 c7          	rorb   $0xc7,0x21(%rax)
    dacf:	4c 85 d7             	test   %r10,%rdi
    dad2:	e6 49                	out    %al,$0x49
    dad4:	c1 e5 20             	shl    $0x20,%ebp
    dad7:	97                   	xchg   %eax,%edi
    dad8:	fe                   	(bad)  
    dad9:	ff                   	(bad)  
    dada:	ff 0f                	decl   (%rdi)
    dadc:	1f                   	(bad)  
    dadd:	44 00 00             	add    %r8b,(%rax)
    dae0:	48                   	rex.W
    dae1:	4d 31 f4             	xor    %r14,%r12
    dae4:	00 4d 85             	add    %cl,-0x7b(%rbp)
    dae7:	f7 94 6d 48 31 f1 83 	notl   -0x7c0eceb8(%rbp,%rbp,2)
    daee:	c0 01 e9             	rolb   $0xe9,(%rcx)
    daf1:	63 ff                	movsxd %edi,%edi
    daf3:	ff                   	(bad)  
    daf4:	ff                   	(bad)  
    daf5:	e8 96 6d ff ff       	call   4890 <__stack_chk_fail@plt>
    dafa:	66 0f 1f 44 4d 4c    	nopw   0x4c(%rbp,%rcx,2)
    db00:	39 c2                	cmp    %eax,%edx
    db02:	49 09 f0             	or     %rsi,%r8
    db05:	55                   	push   %rbp
    db06:	41 54                	push   %r12
    db08:	55                   	push   %rbp
    db09:	53                   	push   %rbx
    db0a:	49 ff c7             	inc    %r15
    db0d:	18 48 83             	sbb    %cl,-0x7d(%rax)
    db10:	3d b2 4a 01 00       	cmp    $0x14ab2,%eax
    db15:	00 0f                	add    %cl,(%rdi)
    db17:	84 54 01 00          	test   %dl,0x0(%rcx,%rax,1)
    db1b:	00 40 0f             	add    %al,0xf(%rax)
    db1e:	be c7 4c 8b 2d       	mov    $0x2d8b4cc7,%esi
    db23:	81 44 01 49 ff c2 fe 	addl   $0x31fec2ff,0x49(%rcx,%rax,1)
    db2a:	31 
    db2b:	db 89 44 24 04 49    	fisttpl 0x49042444(%rcx)
    db31:	ff c1                	inc    %ecx
    db33:	eb 2b                	jmp    db60 <__sprintf_chk@plt+0x8e80>
    db35:	0f 48 c1             	cmovs  %ecx,%eax
    db38:	e2 40                	loop   db7a <__sprintf_chk@plt+0x8e9a>
    db3a:	e9 71 fd ff ff       	jmp    d8b0 <__sprintf_chk@plt+0x8bd0>
    db3f:	85 bc 00 00 00 48 4d 	test   %edi,0x4d480000(%rax,%rax,1)
    db46:	21 fc                	and    %edi,%esp
    db48:	d1 ff                	sar    %edi
    db4a:	4d 01 d8             	add    %r11,%r8
    db4d:	01 48 c7             	add    %ecx,-0x39(%rax)
    db50:	c3                   	ret    
    db51:	f3 01 00             	repz add %eax,(%rax)
    db54:	00 c9                	add    %cl,%cl
    db56:	6e                   	outsb  %ds:(%rsi),(%dx)
    db57:	4a 01 00             	rex.WX add %rax,(%rax)
    db5a:	0f 86 20 01 00 49    	jbe    4900dc80 <obstack_alloc_failed_handler@@Base+0x48febbe0>
    db60:	c1 e2 16             	shl    $0x16,%edx
    db63:	4d 21 e8             	and    %r13,%r8
    db66:	00 48 49             	add    %cl,0x49(%rax)
    db69:	89 d8                	mov    %ebx,%eax
    db6b:	49 01 00             	add    %rax,(%r8)
    db6e:	00 4c 8b 3c          	add    %cl,0x3c(%rbx,%rcx,4)
    db72:	d8 74 c3 4c          	fdivs  0x4c(%rbx,%rax,8)
    db76:	48 c1 e0 0b          	shl    $0xb,%rax
    db7a:	fd                   	std    
    db7b:	ff                   	(bad)  
    db7c:	ff 48 85             	decl   -0x7b(%rax)
    db7f:	db 0f                	fisttpl (%rdi)
    db81:	84 2a                	test   %ch,(%rdx)
    db83:	01 00                	add    %eax,(%rax)
    db85:	00 48 8b             	add    %cl,-0x75(%rax)
    db88:	15 f3 0f 8f 84       	adc    $0x848f0ff3,%eax
    db8d:	02 00                	add    (%rax),%al
    db8f:	e9 7a 03 00 00       	jmp    df0e <__sprintf_chk@plt+0x922e>
    db94:	0c 28                	or     $0x28,%al
    db96:	48 85 d2             	test   %rdx,%rdx
    db99:	74 14                	je     dbaf <__sprintf_chk@plt+0x8ecf>
    db9b:	4d 85 db             	test   %r11,%r11
    db9e:	76 70                	jbe    dc10 <__sprintf_chk@plt+0x8f30>
    dba0:	48 c7 c2 fd ff ff ff 	mov    $0xfffffffffffffffd,%rdx
    dba7:	48 29 c2             	sub    %rax,%rdx
    dbaa:	4c 39 e2             	cmp    %r12,%rdx
    dbad:	48 c1 ea 06          	shr    $0x6,%rdx
    dbb1:	c7                   	(bad)  
    dbb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dbb8:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    dbbc:	41 b9 20 00 00 00    	mov    $0x20,%r9d
    dbc2:	ba 20 4d 0f af       	mov    $0xaf0f4d20,%edx
    dbc7:	d1 8b 47 75 fe 3b    	rorl   0x3bfe7547(%rbx)
    dbcd:	47 30 73 5d          	rex.RXB xor %r14b,0x5d(%r11)
    dbd1:	48 8d 48 01          	lea    0x1(%rax),%rcx
    dbd5:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    dbd9:	44 88 30             	mov    %r14b,(%rax)
    dbdc:	49 8b 49 f7          	mov    -0x9(%r9),%rcx
    dbe0:	fd                   	std    
    dbe1:	48 c1 eb 32          	shr    $0x32,%rbx
    dbe5:	4c 85 c8             	test   %r9,%rax
    dbe8:	73 76                	jae    dc60 <__sprintf_chk@plt+0x8f80>
    dbea:	48 8d 48 01          	lea    0x1(%rax),%rcx
    dbee:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    dbf2:	88 10                	mov    %dl,(%rax)
    dbf4:	e9 4b 48 f7 fe       	jmp    fffffffffef82444 <obstack_alloc_failed_handler@@Base+0xfffffffffef603a4>
    dbf9:	0d de 80 00 4c       	or     $0x4c0080de,%eax
    dbfe:	01 ea                	add    %ebp,%edx
    dc00:	49 8d 6c 24 02       	lea    0x2(%r12),%rbp
    dc05:	49 89 48 21          	mov    %rcx,0x21(%r8)
    dc09:	75 91                	jne    db9c <__sprintf_chk@plt+0x8ebc>
    dc0b:	0f 4c 39             	cmovl  (%rcx),%edi
    dc0e:	f6 85 cf 02 00 00 49 	testb  $0x49,0x2cf(%rbp)
    dc15:	89 c4                	mov    %eax,%esp
    dc17:	41 b9 0a 00 49 f7    	mov    $0xf749000a,%r9d
    dc1d:	fd                   	std    
    dc1e:	0c ba                	or     $0xba,%al
    dc20:	0a 00                	or     (%rax),%al
    dc22:	00 00                	add    %al,(%rax)
    dc24:	48                   	rex.W
    dc25:	49 c1 eb 0a          	shr    $0xa,%r11
    dc29:	3b 47 30             	cmp    0x30(%rdi),%eax
    dc2c:	72 a3                	jb     dbd1 <__sprintf_chk@plt+0x8ef1>
    dc2e:	4c 31 c6             	xor    %r8,%rsi
    dc31:	04 44                	add    $0x44,%al
    dc33:	89 4c 48 09          	mov    %ecx,0x9(%rax,%rcx,2)
    dc37:	c8 54 24 0b          	enter  $0x2454,$0xb
    dc3b:	e8 c0 0f 85 de       	call   ffffffffde85ec00 <obstack_alloc_failed_handler@@Base+0xffffffffde83cb60>
    dc40:	02 00                	add    (%rax),%al
    dc42:	48 ff c1             	inc    %rcx
    dc45:	b6 0f                	mov    $0xf,%dh
    dc47:	84 bc fe 48 21 f2 ff 	test   %bh,-0xddeb8(%rsi,%rdi,8)
    dc4e:	ff 8b 47 28 49 c1    	decl   -0x3eb6d7b9(%rbx)
    dc54:	e1 2d                	loope  dc83 <__sprintf_chk@plt+0x8fa3>
    dc56:	72 92                	jb     dbea <__sprintf_chk@plt+0x8f0a>
    dc58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dc5f:	00 
    dc60:	44 89 ce             	mov    %r9d,%esi
    dc63:	e8 98 6c ff ff       	call   4900 <__overflow@plt>
    dc68:	e9 d7 fe ff ff       	jmp    db44 <__sprintf_chk@plt+0x8e64>
    dc6d:	0f 1f 00             	nopl   (%rax)
    dc70:	4c 8b 2d 0f 84 79 48 	mov    0x4879840f(%rip),%r13        # 487a6086 <obstack_alloc_failed_handler@@Base+0x48783fe6>
    dc77:	09 f8                	or     %edi,%eax
    dc79:	1f                   	(bad)  
    dc7a:	49 c1 e9 d3          	shr    $0xd3,%r9
    dc7e:	fd                   	std    
    dc7f:	ff                   	(bad)  
    dc80:	ff 8b 7d 49 c1 e0    	decl   -0x1f3eb683(%rbx)
    dc86:	0f 8f 10 fd ff ff    	jg     d99c <__sprintf_chk@plt+0x8cbc>
    dc8c:	73 32                	jae    dcc0 <__sprintf_chk@plt+0x8fe0>
    dc8e:	48 8d 50 49          	lea    0x49(%rax),%rdx
    dc92:	21 fd                	and    %edi,%ebp
    dc94:	57                   	push   %rdi
    dc95:	28 c6                	sub    %al,%dh
    dc97:	0f 4d 0f             	cmovge (%rdi),%ecx
    dc9a:	af                   	scas   %es:(%rdi),%eax
    dc9b:	c4                   	(bad)  
    dc9c:	39 d8                	cmp    %ebx,%eax
    dc9e:	5d                   	pop    %rbp
    dc9f:	41                   	rex.B
    dca0:	49 89 d4             	mov    %rdx,%r12
    dca3:	41 5e                	pop    %r14
    dca5:	41 5f                	pop    %r15
    dca7:	c3                   	ret    
    dca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dcaf:	00 
    dcb0:	4c 89 e5             	mov    %r12,%rbp
    dcb3:	49 01 c4             	add    %rax,%r12
    dcb6:	e9 0f 8f fe 01       	jmp    1ff6bca <obstack_alloc_failed_handler@@Base+0x1fd4b2a>
    dcbb:	00 00                	add    %al,(%rax)
    dcbd:	44 00 00             	add    %r8b,(%rax)
    dcc0:	48 0f af c2          	imul   %rdx,%rax
    dcc4:	be 0a 00 00 49       	mov    $0x4900000a,%esi
    dcc9:	c7 c5 48 01 00 00    	mov    $0x148,%ebp
    dccf:	41 5e                	pop    %r14
    dcd1:	41                   	rex.B
    dcd2:	4d 09 e3             	or     %r12,%r11
    dcd5:	6c                   	insb   (%dx),%es:(%rdi)
    dcd6:	48 c1 ee 10          	shr    $0x10,%rsi
    dcda:	84 00                	test   %al,(%rax)
    dcdc:	00 48 85             	add    %cl,-0x7b(%rax)
    dcdf:	d1 f3                	shl    %ebx
    dce1:	0f 1e 48 ff          	nopl   -0x1(%rax)
    dce5:	c1 f5 0f             	shl    $0xf,%ebp
    dce8:	85 f7                	test   %esi,%edi
    dcea:	01 00                	add    %eax,(%rax)
    dcec:	00 00                	add    %al,(%rax)
    dcee:	00 00                	add    %al,(%rax)
    dcf0:	48 83 4d 09 cd       	orq    $0xffffffffffffffcd,0x9(%rbp)
    dcf5:	f7 6d ff             	imull  -0x1(%rbp)
    dcf8:	ff 48 85             	decl   -0x7b(%rax)
    dcfb:	c0 74 64 48 89       	shlb   $0x89,0x48(%rsp,%riz,2)
    dd00:	c7                   	(bad)  
    dd01:	0f b6 00             	movzbl (%rax),%eax
    dd04:	84 c0                	test   %al,%al
    dd06:	0f 8c 0d 4c 29 eb    	jl     ffffffffeb2a2919 <obstack_alloc_failed_handler@@Base+0xffffffffeb280879>
    dd0c:	49 c1 4d 09 49       	rorq   $0x49,0x9(%r13)
    dd11:	f7 fd                	idiv   %ebp
    dd13:	49 f7 fe             	idiv   %r14
    dd16:	3c 54                	cmp    $0x54,%al
    dd18:	75 48                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd1a:	0f b6 47 02          	movzbl 0x2(%rdi),%eax
    dd1e:	83 e0 df             	and    $0xffffffdf,%eax
    dd21:	3c 46                	cmp    $0x46,%al
    dd23:	75 3d                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd25:	80 7f 03 2d          	cmpb   $0x2d,0x3(%rdi)
    dd29:	75 37                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd2b:	80 7f 04 38          	cmpb   $0x38,0x4(%rdi)
    dd2f:	75 31                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd31:	80 7f 05 49          	cmpb   $0x49,0x5(%rdi)
    dd35:	85 db                	test   %ebx,%ebx
    dd37:	80 3b 60             	cmpb   $0x60,(%rbx)
    dd3a:	48 8d 05 b5 bd 00 00 	lea    0xbdb5(%rip),%rax        # 19af6 <_obstack_memory_used@@Base+0x9346>
    dd41:	48 8d 48 89          	lea    -0x77(%rax),%rcx
    dd45:	fe 00                	incb   (%rax)
    dd47:	00 48 0f             	add    %cl,0xf(%rax)
    dd4a:	45 c2 48 83          	rex.RB ret $0x8348
    dd4e:	c4                   	(bad)  
    dd4f:	08 48 c7             	or     %cl,-0x39(%rax)
    dd52:	c2 b0 fe             	ret    $0xfeb0
    dd55:	ff                   	(bad)  
    dd56:	ff 0f                	decl   (%rdi)
    dd58:	4d 85 d3             	test   %r10,%r11
    dd5b:	83 4d 85 e5          	orl    $0xffffffe5,-0x7b(%rbp)
    dd5f:	42                   	rex.X
    dd60:	48 39 c3             	cmp    %rax,%rbx
    dd63:	fd                   	std    
    dd64:	e9 2d fd ff 0f       	jmp    1000da96 <obstack_alloc_failed_handler@@Base+0xffeb9f6>
    dd69:	8f                   	(bad)  
    dd6a:	3c 02                	cmp    $0x2,%al
    dd6c:	00 00                	add    %al,(%rax)
    dd6e:	15 cc 4d 09 fb       	adc    $0xfb094dcc,%eax
    dd73:	48 0f 45 c2          	cmovne %rdx,%rax
    dd77:	48 83 c4 08          	add    $0x8,%rsp
    dd7b:	5b                   	pop    %rbx
    dd7c:	4d 09 d4             	or     %r10,%r12
    dd7f:	90                   	nop
    dd80:	80 7f 02 31          	cmpb   $0x31,0x2(%rdi)
    dd84:	48 f7 f9             	idiv   %rcx
    dd87:	7f 03                	jg     dd8c <__sprintf_chk@plt+0x90ac>
    dd89:	38 75 d6             	cmp    %dh,-0x2a(%rbp)
    dd8c:	80 7f 04 30          	cmpb   $0x30,0x4(%rdi)
    dd90:	75 d0                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd92:	80 7f 05 33          	cmpb   $0x33,0x5(%rdi)
    dd96:	75 ca                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd98:	80 7f 06 30          	cmpb   $0x30,0x6(%rdi)
    dd9c:	75 c4                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd9e:	31 c9                	xor    %ecx,%ecx
    dda0:	31 d2                	xor    %edx,%edx
    dda2:	48 8d 35 51 bd 00 00 	lea    0xbd51(%rip),%rsi        # 19afa <_obstack_memory_used@@Base+0x934a>
    dda9:	e8 92 92 49 29       	call   294a7040 <obstack_alloc_failed_handler@@Base+0x29484fa0>
    ddae:	c9                   	leave  
    ddaf:	c0 74 b0 80 4c       	shlb   $0x4c,-0x80(%rax,%rsi,4)
    ddb4:	85 cb                	test   %ecx,%ebx
    ddb6:	8d 05 36 bd 00 00    	lea    0xbd36(%rip),%eax        # 19af2 <_obstack_memory_used@@Base+0x9342>
    ddbc:	48 8d 15 2a bd 00 0f 	lea    0xf00bd2a(%rip),%rdx        # f019aed <obstack_alloc_failed_handler@@Base+0xeff7a4d>
    ddc3:	84 48 21             	test   %cl,0x21(%rax)
    ddc6:	d3 ff                	sar    %cl,%edi
    ddc8:	83 c4 4c             	add    $0x4c,%esp
    ddcb:	09 c9                	or     %ecx,%ecx
    ddcd:	c3                   	ret    
    ddce:	66 90                	xchg   %ax,%ax
    ddd0:	f3 0f 1e fa          	endbr64 
    ddd4:	50                   	push   %rax
    ddd5:	58                   	pop    %rax
    ddd6:	ba 05 48 f7 ff       	mov    $0xfff74805,%edx
    dddb:	49 c7 c1 95 fd ff ff 	mov    $0xfffffffffffffd95,%r9
    dde2:	8f                   	(bad)  
    dde3:	e1 01                	loope  dde6 <__sprintf_chk@plt+0x9106>
    dde5:	00 00                	add    %al,(%rax)
    dde7:	08 e8                	or     %ch,%al
    dde9:	73 6a                	jae    de55 <__sprintf_chk@plt+0x9175>
    ddeb:	ff                   	(bad)  
    ddec:	ff 8b 3d 8d 42 01    	decl   0x1428d3d(%rbx)
    ddf2:	0f 8f c0 03 00 00    	jg     e1b8 <__sprintf_chk@plt+0x94d8>
    ddf8:	00 00                	add    %al,(%rax)
    ddfa:	31 f6                	xor    %esi,%esi
    ddfc:	48 89 c1             	mov    %rax,%rcx
    ddff:	31 c0                	xor    %eax,%eax
    de01:	e8 9a 6d ff 49       	call   4a004ba0 <obstack_alloc_failed_handler@@Base+0x49fe2b00>
    de06:	c1 e0 0b             	shl    $0xb,%eax
    de09:	e9 1e fe ff ff       	jmp    dc2c <__sprintf_chk@plt+0x8f4c>
    de0e:	00 00                	add    %al,(%rax)
    de10:	53                   	push   %rbx
    de11:	48 89 fb             	mov    %rdi,%rbx
    de14:	e8 77 68 ff ff       	call   4690 <malloc@plt>
    de19:	48 85 c0             	test   %rax,%rax
    de1c:	75 05                	jne    de23 <__sprintf_chk@plt+0x9143>
    de1e:	48 85 db             	test   %rbx,%rbx
    de21:	75 02                	jne    de25 <__sprintf_chk@plt+0x9145>
    de23:	5b                   	pop    %rbx
    de24:	c3                   	ret    
    de25:	e8 a6 ff ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    de2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    de30:	55                   	push   %rbp
    de31:	53                   	push   %rbx
    de32:	48 83 ec 08          	sub    $0x8,%rsp
    de36:	e8 d5 68 ff ff       	call   4710 <__errno_location@plt>
    de3b:	bf 38 00 00 00       	mov    $0x38,%edi
    de40:	8b 28                	mov    (%rax),%ebp
    de42:	48 89 c3             	mov    %rax,%rbx
    de45:	e8 c6 ff ff ff       	call   de10 <__sprintf_chk@plt+0x9130>
    de4a:	66 0f 6f 05 6e 44 01 	movdqa 0x1446e(%rip),%xmm0        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    de51:	00 
    de52:	66 0f 6f 0d 76 44 01 	movdqa 0x14476(%rip),%xmm1        # 222d0 <obstack_alloc_failed_handler@@Base+0x230>
    de59:	00 
    de5a:	66 0f 6f 15 7e 44 01 	movdqa 0x1447e(%rip),%xmm2        # 222e0 <obstack_alloc_failed_handler@@Base+0x240>
    de61:	00 
    de62:	48 8b 15 87 44 01 00 	mov    0x14487(%rip),%rdx        # 222f0 <obstack_alloc_failed_handler@@Base+0x250>
    de69:	89 2b                	mov    %ebp,(%rbx)
    de6b:	0f 11 00             	movups %xmm0,(%rax)
    de6e:	48                   	rex.W
    de6f:	4c 01 e2             	add    %r12,%rdx
    de72:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    de76:	0f 11 50 20          	movups %xmm2,0x20(%rax)
    de7a:	48 83 c4 08          	add    $0x8,%rsp
    de7e:	5b                   	pop    %rbx
    de7f:	5d                   	pop    %rbp
    de80:	c3                   	ret    
    de81:	66 66 2e 4d 29 f6    	data16 data16 cs sub %r14,%r14
    de87:	39 c1                	cmp    %eax,%ecx
    de89:	00 00                	add    %al,(%rax)
    de8b:	00 0f                	add    %cl,(%rdi)
    de8d:	1f                   	(bad)  
    de8e:	49 01 d0             	add    %rdx,%r8
    de91:	48 89 fb             	mov    %rdi,%rbx
    de94:	bf 10 00 00 00       	mov    $0x10,%edi
    de99:	e8 f2 67 ff ff       	call   4690 <malloc@plt>
    de9e:	48 85 c0             	test   %rax,%rax
    dea1:	74 17                	je     deba <__sprintf_chk@plt+0x91da>
    dea3:	48 c7 c0 2d 0f 8f 2c 	mov    $0x2c8f0f2d,%rax
    deaa:	fc                   	cld    
    deab:	0f 8c 8b 01 00 00    	jl     e03c <__sprintf_chk@plt+0x935c>
    deb1:	ff                   	(bad)  
    deb2:	ff 0f                	decl   (%rdi)
    deb4:	48 ff c3             	inc    %rbx
    deb7:	00 00                	add    %al,(%rax)
    deb9:	c3                   	ret    
    deba:	e8 11 ff ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    debf:	90                   	nop
    dec0:	41 54                	push   %r12
    dec2:	55                   	push   %rbp
    dec3:	53                   	push   %rbx
    dec4:	48 8b 1d fd 46 01 00 	mov    0x146fd(%rip),%rbx        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    decb:	48 89 d8             	mov    %rbx,%rax
    dece:	48 d1 e8             	shr    %rax
    ded1:	48 01 d8             	add    %rbx,%rax
    ded4:	48 3b 05 4d 45 01 00 	cmp    0x1454d(%rip),%rax        # 22428 <obstack_alloc_failed_handler@@Base+0x388>
    dedb:	76 5f                	jbe    df3c <__sprintf_chk@plt+0x925c>
    dedd:	48 8b 3d 6c 45 01 00 	mov    0x1456c(%rip),%rdi        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    dee4:	e8 97 67 ff ff       	call   4680 <free@plt>
    dee9:	b8 18 00 00 00       	mov    $0x18,%eax
    deee:	48 f7 e3             	mul    %rbx
    def1:	49 31 fe             	xor    %rdi,%r14
    def4:	48 85 c0             	test   %rax,%rax
    def7:	b8 01 00 00 00       	mov    $0x1,%eax
    defc:	0f b6 d2             	movzbl %dl,%edx
    deff:	48 0f 48 d0          	cmovs  %rax,%rdx
    df03:	48 85 d2             	test   %rdx,%rdx
    df06:	0f 85 81 01 00 00    	jne    e08d <__sprintf_chk@plt+0x93ad>
    df0c:	48 8d 2c 5b          	lea    (%rbx,%rbx,2),%rbp
    df10:	48 c1 e5 03          	shl    $0x3,%rbp
    df14:	48 89 ef             	mov    %rbp,%rdi
    df17:	e8 74 67 ff ff       	call   4690 <malloc@plt>
    df1c:	48 85 c0             	test   %rax,%rax
    df1f:	75 09                	jne    df2a <__sprintf_chk@plt+0x924a>
    df21:	48 21 c6             	and    %rax,%rsi
    df24:	0f 85 63 01 00 00    	jne    e08d <__sprintf_chk@plt+0x93ad>
    df2a:	48 89 05 1f 45 01 00 	mov    %rax,0x1451f(%rip)        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    df31:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
    df35:	48 89 05 ec 44 01 00 	mov    %rax,0x144ec(%rip)        # 22428 <obstack_alloc_failed_handler@@Base+0x388>
    df3c:	48 85 db             	test   %rbx,%rbx
    df3f:	74 2a                	je     df6b <__sprintf_chk@plt+0x928b>
    df41:	48 8b 05 08 45 01 00 	mov    0x14508(%rip),%rax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    df48:	48 8b 15 81 46 01 00 	mov    0x14681(%rip),%rdx        # 225d0 <obstack_alloc_failed_handler@@Base+0x530>
    df4f:	48 8d 0c d8          	lea    (%rax,%rbx,8),%rcx
    df53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df58:	48 89 10             	mov    %rdx,(%rax)
    df5b:	48 83 c0 08          	add    $0x8,%rax
    df5f:	48 81 c2 c8 00 00 00 	add    $0xc8,%rdx
    df66:	48 39 c8             	cmp    %rcx,%rax
    df69:	75 ed                	jne    df58 <__sprintf_chk@plt+0x9278>
    df6b:	83 3d b2 54 01 00 ff 	cmpl   $0xffffffff,0x154b2(%rip)        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    df72:	74 66                	je     dfda <__sprintf_chk@plt+0x92fa>
    df74:	48 8d 3d e5 43 01 00 	lea    0x143e5(%rip),%rdi        # 22360 <obstack_alloc_failed_handler@@Base+0x2c0>
    df7b:	e8 40 6a ff ff       	call   49c0 <_setjmp@plt>
    df80:	f3 0f 1e fa          	endbr64 
    df84:	8b 3d 9a 54 01 00    	mov    0x1549a(%rip),%edi        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    df8a:	85 c0                	test   %eax,%eax
    df8c:	75 52                	jne    dfe0 <__sprintf_chk@plt+0x9300>
    df8e:	48 8b 2d bb 44 01 00 	mov    0x144bb(%rip),%rbp        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    df95:	48 8b 35 2c 46 01 00 	mov    0x1462c(%rip),%rsi        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    df9c:	31 d2                	xor    %edx,%edx
    df9e:	83 ff 04             	cmp    $0x4,%edi
    dfa1:	0f 84 8c 00 00 00    	je     e033 <__sprintf_chk@plt+0x9353>
    dfa7:	01 fa                	add    %edi,%edx
    dfa9:	48 98                	cltq   
    dfab:	0f b6 0d 98 47 01 00 	movzbl 0x14798(%rip),%ecx        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    dfb2:	89 d2                	mov    %edx,%edx
    dfb4:	48 8d 14 50          	lea    (%rax,%rdx,2),%rdx
    dfb8:	0f b6 05 de 44 01 00 	movzbl 0x144de(%rip),%eax        # 2249d <obstack_alloc_failed_handler@@Base+0x3fd>
    dfbf:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    dfc3:	48                   	rex.W
    dfc4:	4c 39 f9             	cmp    %r15,%rcx
    dfc7:	48 8d 05 72 30 01 00 	lea    0x13072(%rip),%rax        # 21040 <_obstack_memory_used@@Base+0x10890>
    dfce:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
    dfd2:	48 83 fe 02          	cmp    $0x2,%rsi
    dfd6:	77 68                	ja     e040 <__sprintf_chk@plt+0x9360>
    dfd8:	74 7e                	je     e058 <__sprintf_chk@plt+0x9378>
    dfda:	5b                   	pop    %rbx
    dfdb:	e9 80 fe ff ff       	jmp    de60 <__sprintf_chk@plt+0x9180>
    dfe0:	83 ff 03             	cmp    $0x3,%edi
    dfe3:	0f 84 a9 00 00 00    	je     e092 <__sprintf_chk@plt+0x93b2>
    dfe9:	49 c1 e2 26          	shl    $0x26,%r10
    dfed:	45 01 0f             	add    %r9d,(%r15)
    dff0:	8c b0 03 00 00 0f    	mov    %?,0xf000003(%rax)
    dff6:	85 ac fc ff ff 84 7d 	test   %ebp,0x7d84ffff(%rsp,%rdi,8)
    dffd:	4d 29 0f             	sub    %r9,(%r15)
    e000:	85 c6                	test   %eax,%esi
    e002:	02 00                	add    (%rax),%al
    e004:	00 f2                	add    %dh,%dl
    e006:	0f 49 c1             	cmovns %ecx,%eax
    e009:	e7 0f                	out    %eax,$0xf
    e00b:	00 4c f5 00          	add    %cl,0x0(%rbp,%rsi,8)
    e00f:	90                   	nop
    e010:	48 89 48 c1          	mov    %rcx,-0x3f(%rax)
    e014:	e3 16                	jrcxz  e02c <__sprintf_chk@plt+0x934c>
    e016:	08 48 81             	or     %cl,-0x7f(%rax)
    e019:	49 c1 49 c7 c0       	rorq   $0xc0,-0x39(%r9)
    e01e:	28 fe                	sub    %bh,%dh
    e020:	ff                   	(bad)  
    e021:	ff                   	(bad)  
    e022:	ed                   	in     (%dx),%eax
    e023:	b8 01 00 00 00       	mov    $0x1,%eax
    e028:	31 d2                	xor    %edx,%edx
    e02a:	83 ff 04             	cmp    $0x4,%edi
    e02d:	0f 85 74 ff ff ff    	jne    dfa7 <__sprintf_chk@plt+0x92c7>
    e033:	8b 15 e7 53 01 00    	mov    0x153e7(%rip),%edx        # 23420 <obstack_alloc_failed_handler@@Base+0x1380>
    e039:	e9 69 ff ff ff       	jmp    dfa7 <__sprintf_chk@plt+0x92c7>
    e03e:	66 90                	xchg   %ax,%ax
    e040:	48 8d 54 f5 00       	lea    0x0(%rbp,%rsi,8),%rdx
    e045:	48 89 ef             	mov    %rbp,%rdi
    e048:	e8 d3 d5 ff ff       	call   b620 <__sprintf_chk@plt+0x6940>
    e04d:	5b                   	pop    %rbx
    e04e:	5d                   	pop    %rbp
    e04f:	41 5c                	pop    %r12
    e051:	c3                   	ret    
    e052:	66 49 ff c3          	data16 inc %r11
    e056:	00 49 0f             	add    %cl,0xf(%rcx)
    e059:	af                   	scas   %es:(%rdi),%eax
    e05a:	cb                   	lret   
    e05b:	48 c7 c7 6e ff ff ff 	mov    $0xffffffffffffff6e,%rdi
    e062:	df 49 f7             	fisttps -0x9(%rcx)
    e065:	f8                   	clc    
    e066:	49 09 dd             	or     %rbx,%r13
    e069:	c0 0f 8e             	rorb   $0x8e,(%rdi)
    e06c:	6a ff                	push   $0xffffffffffffffff
    e06e:	ff                   	(bad)  
    e06f:	ff 4c 89 65          	decl   0x65(%rcx,%rcx,4)
    e073:	00 48 89             	add    %cl,-0x77(%rax)
    e076:	5d                   	pop    %rbp
    e077:	08 48 c7             	or     %cl,-0x39(%rax)
    e07a:	c3                   	ret    
    e07b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    e07c:	02 00                	add    (%rax),%al
    e07e:	00 04 0f             	add    %al,(%rdi,%rcx,1)
    e081:	49 c1 ea 06          	shr    $0x6,%r10
    e085:	ff                   	(bad)  
    e086:	b8 01 00 00 48       	mov    $0x48000001,%eax
    e08b:	f7 f9                	idiv   %ecx
    e08d:	e8 3e fd ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    e092:	0f 8f 8a 03 00 00    	jg     e422 <__sprintf_chk@plt+0x9742>
    e098:	00 ba 48 31 c7 00    	add    %bh,0xc73148(%rdx)
    e09e:	48 8d 35 5d ba 00 00 	lea    0xba5d(%rip),%rsi        # 19b02 <_obstack_memory_used@@Base+0x9352>
    e0a5:	48 8d 7c 0d 48       	lea    0x48(%rbp,%rcx,1),%rdi
    e0aa:	f7 fb                	idiv   %ebx
    e0ac:	e8 8f 68 ff ff       	call   4940 <__assert_fail@plt>
    e0b1:	66 0f 85 4c 31       	jne    1202 <free@plt-0x347e>
    e0b6:	ff                   	(bad)  
    e0b7:	ff 00                	incl   (%rax)
    e0b9:	00 00                	add    %al,(%rax)
    e0bb:	00 49 c7             	add    %cl,-0x39(%rcx)
    e0be:	c6                   	(bad)  
    e0bf:	9b                   	fwait
    e0c0:	fc                   	cld    
    e0c1:	ff                   	(bad)  
    e0c2:	ff 49 c1             	decl   -0x3f(%rcx)
    e0c5:	ea                   	(bad)  
    e0c6:	21 54 48 49          	and    %edx,0x49(%rax,%rcx,2)
    e0ca:	89 c8                	mov    %ecx,%eax
    e0cc:	53                   	push   %rbx
    e0cd:	48 89 fb             	mov    %rdi,%rbx
    e0d0:	48 83 ec 08          	sub    $0x8,%rsp
    e0d4:	e8 0f 85 a5 fd       	call   fffffffffda665e8 <obstack_alloc_failed_handler@@Base+0xfffffffffda44548>
    e0d9:	ff                   	(bad)  
    e0da:	ff c0                	inc    %eax
    e0dc:	01 48 6b             	add    %ecx,0x6b(%rax)
    e0df:	e9 eb 02 00 00       	jmp    e3cf <__sprintf_chk@plt+0x96ef>
    e0e4:	00 00                	add    %al,(%rax)
    e0e6:	00 e8                	add    %ch,%al
    e0e8:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    e0e9:	65 ff                	gs (bad) 
    e0eb:	ff 49 89             	decl   -0x77(%rcx)
    e0ee:	c6                   	(bad)  
    e0ef:	48 85 c0             	test   %rax,%rax
    e0f2:	0f 0f 8f dd 00 00 00 	pfrcpit2 0xdd(%rdi),%mm1
    e0f9:	b6 
    e0fa:	03 4c 89 f5          	add    -0xb(%rcx,%rcx,4),%ecx
    e0fe:	84 c0                	test   %al,%al
    e100:	74 64                	je     e166 <__sprintf_chk@plt+0x9486>
    e102:	4c 8d 2d b7 4d 01 d0 	lea    -0x2ffeb249(%rip),%r13        # ffffffffd0022ec0 <obstack_alloc_failed_handler@@Base+0xffffffffd0000e20>
    e109:	ef                   	out    %eax,(%dx)
    e10a:	8d 4d 01             	lea    0x1(%rbp),%ecx
    e10d:	ca 00 00             	lret   $0x0
    e110:	eb 4c                	jmp    e15e <__sprintf_chk@plt+0x947e>
    e112:	29 ff                	sub    %edi,%edi
    e114:	1f                   	(bad)  
    e115:	44 00 00             	add    %r8b,(%rax)
    e118:	88 45 00             	mov    %al,0x0(%rbp)
    e11b:	48 83 c5 01          	add    $0x1,%rbp
    e11f:	0f b6 03             	movzbl (%rbx),%eax
    e122:	84 4c 09 f7          	test   %cl,-0x9(%rcx,%rcx,1)
    e126:	4d 21 e2             	and    %r12,%r10
    e129:	01 3c 2f             	add    %edi,(%rdi,%rbp,1)
    e12c:	49 89 d6             	mov    %rdx,%r14
    e12f:	84 e4                	test   %ah,%ah
    e131:	75 4d                	jne    e180 <__sprintf_chk@plt+0x94a0>
    e133:	49 89 c5             	mov    %rax,%r13
    e136:	44 0f b6 c0          	movzbl %al,%r8d
    e13a:	41 80 7c 15 00 00    	cmpb   $0x0,0x0(%r13,%rdx,1)
    e140:	75 d6                	jne    e118 <__sprintf_chk@plt+0x9438>
    e142:	48 89 ef             	mov    %rbp,%rdi
    e145:	4c                   	rex.WR
    e146:	4d 29 c1             	sub    %r8,%r9
    e149:	c1 e5 0e             	shl    $0xe,%ebp
    e14c:	ff                   	(bad)  
    e14d:	ff                   	(bad)  
    e14e:	ff 31                	push   (%rcx)
    e150:	c0 0f 8f             	rorb   $0x8f,(%rdi)
    e153:	3a fe                	cmp    %dh,%bh
    e155:	ff                   	(bad)  
    e156:	ff 83 c5 03 0f 85    	incl   -0x7af0fc3b(%rbx)
    e15c:	d4                   	(bad)  
    e15d:	00 00                	add    %al,(%rax)
    e15f:	00 89 e0 84 c0 75    	add    %cl,0x75c084e0(%rcx)
    e165:	c0 c6 45             	rol    $0x45,%dh
    e168:	00 00                	add    %al,(%rax)
    e16a:	48 83 49 0f af       	orq    $0xffffffffffffffaf,0xf(%rcx)
    e16f:	db f0                	fcomi  %st(0),%st
    e171:	5b                   	pop    %rbx
    e172:	5d                   	pop    %rbp
    e173:	4c 39 df             	cmp    %r11,%rdi
    e176:	5d                   	pop    %rbp
    e177:	41 5e                	pop    %r14
    e179:	41                   	rex.B
    e17a:	48 f7 f8             	idiv   %rax
    e17d:	4c 29 df             	sub    %r11,%rdi
    e180:	c6 45 0f 8f          	movb   $0x8f,0xf(%rbp)
    e184:	7e 03                	jle    e189 <__sprintf_chk@plt+0x94a9>
    e186:	00 00                	add    %al,(%rax)
    e188:	eb 95                	jmp    e11f <__sprintf_chk@plt+0x943f>
    e18a:	e8 41 49 ff c5       	call   ffffffffc6002ad0 <obstack_alloc_failed_handler@@Base+0xffffffffc5fe0a30>
    e18f:	90                   	nop
    e190:	41 57                	push   %r15
    e192:	41 56                	push   %r14
    e194:	41 55                	push   %r13
    e196:	41 54                	push   %r12
    e198:	55                   	push   %rbp
    e199:	89 fd                	mov    %edi,%ebp
    e19b:	53                   	push   %rbx
    e19c:	48 83 ec 18          	sub    $0x18,%rsp
    e1a0:	4c 8b 2d 21 44 01 00 	mov    0x14421(%rip),%r13        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    e1a7:	4c 8b 35 ba 42 01 00 	mov    0x142ba(%rip),%r14        # 22468 <obstack_alloc_failed_handler@@Base+0x3c8>
    e1ae:	48 8b 0d 8b 41 01 00 	mov    0x1418b(%rip),%rcx        # 22340 <obstack_alloc_failed_handler@@Base+0x2a0>
    e1b5:	4d 39 f5             	cmp    %r14,%r13
    e1b8:	4d 89 f4             	mov    %r14,%r12
    e1bb:	4d 0f 46 e5          	cmovbe %r13,%r12
    e1bf:	4d 29 e7             	sub    %r12,%r15
    e1c2:	0f 86 1c 01 00 00    	jbe    e2e4 <__sprintf_chk@plt+0x9604>
    e1c8:	4c 89 f0             	mov    %r14,%rax
    e1cb:	48 8b 3d 76 41 01 00 	mov    0x14176(%rip),%rdi        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e1d2:	48 d1 e8             	shr    %rax
    e1d5:	49 39 c4             	cmp    %rax,%r12
    e1d8:	0f 83 5f 02 00 00    	jae    e43d <__sprintf_chk@plt+0x975d>
    e1de:	b8 30 00 7c 58       	mov    $0x587c0030,%eax
    e1e3:	49 f7 e4             	mul    %r12
    e1e6:	0f 90 c2             	seto   %dl
    e1e9:	0f b6 d2             	movzbl %dl,%edx
    e1ec:	48 85 c0             	test   %rax,%rax
    e1ef:	0f 88 97 02 00 00    	js     e48c <__sprintf_chk@plt+0x97ac>
    e1f5:	48 85 d2             	test   %rdx,%rdx
    e1f8:	0f 85 8e 02 00 00    	jne    e48c <__sprintf_chk@plt+0x97ac>
    e1fe:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    e202:	48 89 0c 24          	mov    %rcx,(%rsp)
    e206:	48 c1 e0 04          	shl    $0x4,%rax
    e20a:	48 89 c3             	mov    %rax,%rbx
    e20d:	75 09                	jne    e218 <__sprintf_chk@plt+0x9538>
    e20f:	48 85 ff             	test   %rdi,%rdi
    e212:	0f 4d 39             	cmovge (%rcx),%edi
    e215:	d5                   	(bad)  
    e216:	00 00                	add    %al,(%rax)
    e218:	48 89 de             	mov    %rbx,%rsi
    e21b:	e8 f0 68 ff ff       	call   4b10 <realloc@plt>
    e220:	48 8b 0c 24          	mov    (%rsp),%rcx
    e224:	48 85 c0             	test   %rax,%rax
    e227:	49 89 c7             	mov    %rax,%r15
    e22a:	75 09                	jne    e235 <__sprintf_chk@plt+0x9555>
    e22c:	48 85 db             	test   %rbx,%rbx
    e22f:	0f 85 57 49 01 f2    	jne    fffffffff2022b8c <obstack_alloc_failed_handler@@Base+0xfffffffff2000aec>
    e235:	4f 8d 34 24          	lea    (%r12,%r12,1),%r14
    e239:	48 8d 59 01          	lea    0x1(%rcx),%rbx
    e23d:	4c 89 f0             	mov    %r14,%rax
    e240:	31 f6                	xor    %esi,%esi
    e242:	4c 89 3d ff 40 01 00 	mov    %r15,0x140ff(%rip)        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e249:	48 89 da             	mov    %rbx,%rdx
    e24c:	48 29 c8             	sub    %rcx,%rax
    e24f:	48 89 0c 24          	mov    %rcx,(%rsp)
    e253:	4c 01 f2             	add    %r14,%rdx
    e256:	40 0f 92 c6          	setb   %sil
    e25a:	48 f7 e2             	mul    %rdx
    e25d:	0f 90 c2             	seto   %dl
    e260:	0f b6 d2             	movzbl %dl,%edx
    e263:	48 85 f6             	test   %rsi,%rsi
    e266:	0f 85 20 02 00 00    	jne    e48c <__sprintf_chk@plt+0x97ac>
    e26c:	48 85 d2             	test   %rdx,%rdx
    e26f:	0f 85 17 02 00 00    	jne    e48c <__sprintf_chk@plt+0x97ac>
    e275:	48                   	rex.W
    e276:	4d 09 c4             	or     %r8,%r12
    e279:	6b d0 08             	imul   $0x8,%eax,%edx
    e27c:	0f 80 0a 49 29 c2    	jo     ffffffffc22a2b8c <obstack_alloc_failed_handler@@Base+0xffffffffc2280aec>
    e282:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e289:	00 
    e28a:	48 89 d7             	mov    %rdx,%rdi
    e28d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    e292:	e8 f9 63 ff ff       	call   4690 <malloc@plt>
    e297:	48 8b 0c 24          	mov    (%rsp),%rcx
    e29b:	4d 29 c4             	sub    %r8,%r12
    e29e:	75 0e                	jne    e2ae <__sprintf_chk@plt+0x95ce>
    e2a0:	48 8b 54 24 0f       	mov    0xf(%rsp),%rdx
    e2a5:	85 7a fc             	test   %edi,-0x4(%rdx)
    e2a8:	ff                   	(bad)  
    e2a9:	ff                   	(bad)  
    e2aa:	de 01                	fiadds (%rcx)
    e2ac:	00 00                	add    %al,(%rax)
    e2ae:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
    e2b5:	00 
    e2b6:	4a 8d 34 f5 08 00 00 	lea    0x8(,%r14,8),%rsi
    e2bd:	00 
    e2be:	4c 39 f1             	cmp    %r14,%rcx
    e2c1:	73 1a                	jae    e2dd <__sprintf_chk@plt+0x95fd>
    e2c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e2c8:	48 8d 0c 52          	lea    (%rdx,%rdx,2),%rcx
    e2cc:	49 89 44 0f f8       	mov    %rax,-0x8(%r15,%rcx,1)
    e2d1:	48 01 d0             	add    %rdx,%rax
    e2d4:	48 83 c2 08          	add    $0x8,%rdx
    e2d8:	48 39 f2             	cmp    %rsi,%rdx
    e2db:	75 eb                	jne    e2c8 <__sprintf_chk@plt+0x95e8>
    e2dd:	4c 89 35 5c 40 01 00 	mov    %r14,0x1405c(%rip)        # 22340 <obstack_alloc_failed_handler@@Base+0x2a0>
    e2e4:	4d 85 e4             	test   %r12,%r12
    e2e7:	74 50                	je     e339 <__sprintf_chk@plt+0x9659>
    e2e9:	48 8b 3d 58 40 01 00 	mov    0x14058(%rip),%rdi        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e2f0:	4f 8d 44 64 03       	lea    0x3(%r12,%r12,2),%r8
    e2f5:	31 f6                	xor    %esi,%esi
    e2f7:	b9 03 00 00 00       	mov    $0x3,%ecx
    e2fc:	0f 1f 40 00          	nopl   0x0(%rax)
    e300:	48 8b 44 cf f8       	mov    -0x8(%rdi,%rcx,8),%rax
    e305:	c6 44 cf e8 01       	movb   $0x1,-0x18(%rdi,%rcx,8)
    e30a:	48 83 c6 08          	add    $0x8,%rsi
    e30e:	48 89 4c cf f0       	mov    %rcx,-0x10(%rdi,%rcx,8)
    e313:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
    e317:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e31e:	00 00 
    e320:	48 c7 00 03 00 00 00 	movq   $0x3,(%rax)
    e327:	48 83 c0 08          	add    $0x8,%rax
    e32b:	48 39 c2             	cmp    %rax,%rdx
    e32e:	75 f0                	jne    e320 <__sprintf_chk@plt+0x9640>
    e330:	48 83 c1 03          	add    $0x3,%rcx
    e334:	49 39 c8             	cmp    %rcx,%r8
    e337:	75 c7                	jne    e300 <__sprintf_chk@plt+0x9620>
    e339:	31 db                	xor    %ebx,%ebx
    e33b:	4d 85 ed             	test   %r13,%r13
    e33e:	0f 84 e7 4c 39 d2    	je     ffffffffd23a302b <obstack_alloc_failed_handler@@Base+0xffffffffd2380f8b>
    e344:	0f 1f 40 00          	nopl   0x0(%rax)
    e348:	48 8b 05 01 41 01 00 	mov    0x14101(%rip),%rax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    e34f:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    e353:	e8 a8 f5 ff ff       	call   d900 <__sprintf_chk@plt+0x8c20>
    e358:	4c 8b 15 69 42 01 00 	mov    0x14269(%rip),%r10        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    e35f:	49 89 c1             	mov    %rax,%r9
    e362:	4d 85 e4             	test   %r12,%r12
    e365:	0f 84 85 00 00 00    	je     e3f0 <__sprintf_chk@plt+0x9710>
    e36b:	4c 8b 1d 0e 41 01 00 	mov    0x1410e(%rip),%r11        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    e372:	48 8b 35 cf 3f 01 00 	mov    0x13fcf(%rip),%rsi        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e379:	31 c9                	xor    %ecx,%ecx
    e37b:	eb 54                	jmp    e3d1 <__sprintf_chk@plt+0x96f1>
    e37d:	0f 1f 00             	nopl   (%rax)
    e380:	49 8d 44 0a ff       	lea    -0x1(%r10,%rcx,1),%rax
    e385:	31 d2                	xor    %edx,%edx
    e387:	48 f7 f1             	div    %rcx
    e38a:	31 d2                	xor    %edx,%edx
    e38c:	49 89 c0             	mov    %rax,%r8
    e38f:	48 89 d8             	mov    %rbx,%rax
    e392:	49 f7 f0             	div    %r8
    e395:	49 89 c0             	mov    %rax,%r8
    e398:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    e39c:	31 c0                	xor    %eax,%eax
    e39e:	49 39 f8             	cmp    %rdi,%r8
    e3a1:	0f 95 c0             	setne  %al
    e3a4:	4a 8d 14 c2          	lea    (%rdx,%r8,8),%rdx
    e3a8:	49 8d 04 41          	lea    (%r9,%rax,2),%rax
    e3ac:	48 8b 3a             	mov    (%rdx),%rdi
    e3af:	48 39 c7             	cmp    %rax,%rdi
    e3b2:	73 14                	jae    e3c8 <__sprintf_chk@plt+0x96e8>
    e3b4:	49 89 c0             	mov    %rax,%r8
    e3b7:	49 29 f8             	sub    %rdi,%r8
    e3ba:	4c 01 46 08          	add    %r8,0x8(%rsi)
    e3be:	48 89 02             	mov    %rax,(%rdx)
    e3c1:	4c 39 5e 08          	cmp    %r11,0x8(%rsi)
    e3c5:	0f 92 06             	setb   (%rsi)
    e3c8:	48 83 c6 18          	add    $0x18,%rsi
    e3cc:	49 39 cc             	cmp    %rcx,%r12
    e3cf:	74 1f                	je     e3f0 <__sprintf_chk@plt+0x9710>
    e3d1:	48 89 cf             	mov    %rcx,%rdi
    e3d4:	48 83 c1 01          	add    $0x1,%rcx
    e3d8:	80 3e 00             	cmpb   $0x0,(%rsi)
    e3db:	74 eb                	je     e3c8 <__sprintf_chk@plt+0x96e8>
    e3dd:	40 84 ed             	test   %bpl,%bpl
    e3e0:	75 9e                	jne    e380 <__sprintf_chk@plt+0x96a0>
    e3e2:	48 89 d8             	mov    %rbx,%rax
    e3e5:	31 d2                	xor    %edx,%edx
    e3e7:	48 f7 f1             	div    %rcx
    e3ea:	49 89 d0             	mov    %rdx,%r8
    e3ed:	eb a9                	jmp    e398 <__sprintf_chk@plt+0x96b8>
    e3ef:	90                   	nop
    e3f0:	48 83 c3 01          	add    $0x1,%rbx
    e3f4:	4c 39 d3             	cmp    %r10,%rbx
    e3f7:	0f 82 4b ff ff ff    	jb     e348 <__sprintf_chk@plt+0x9668>
    e3fd:	49 83 fc 01          	cmp    $0x1,%r12
    e401:	76 28                	jbe    e42b <__sprintf_chk@plt+0x974b>
    e403:	48 8b 15 3e 3f 01 00 	mov    0x13f3e(%rip),%rdx        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e40a:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    e40e:	48 8d 44 c2 e8       	lea    -0x18(%rdx,%rax,8),%rax
    e413:	eb 11                	jmp    e426 <__sprintf_chk@plt+0x9746>
    e415:	0f 1f 00             	nopl   (%rax)
    e418:	49 83 48 ff c2       	orq    $0xffffffffffffffc2,-0x1(%r8)
    e41d:	83 e8 18             	sub    $0x18,%eax
    e420:	49 83 fc 01          	cmp    $0x1,%r12
    e424:	74 05                	je     e42b <__sprintf_chk@plt+0x974b>
    e426:	80 38 00             	cmpb   $0x0,(%rax)
    e429:	74 ed                	je     e418 <__sprintf_chk@plt+0x9738>
    e42b:	48 83 c4 18          	add    $0x18,%rsp
    e42f:	4c 89 e0             	mov    %r12,%rax
    e432:	5b                   	pop    %rbx
    e433:	5d                   	pop    %rbp
    e434:	41 5c                	pop    %r12
    e436:	41 5d                	pop    %r13
    e438:	41 5e                	pop    %r14
    e43a:	41 5f                	pop    %r15
    e43c:	c3                   	ret    
    e43d:	74 36                	je     e475 <__sprintf_chk@plt+0x9795>
    e43f:	00 00                	add    %al,(%rax)
    e441:	00 49 4c             	add    %cl,0x4c(%rcx)
    e444:	89 f3                	mov    %esi,%ebx
    e446:	49 09 db             	or     %rbx,%r11
    e449:	b6 d2                	mov    $0xd2,%dh
    e44b:	48 c1 ef 10          	shr    $0x10,%rdi
    e44f:	3c 48                	cmp    $0x48,%al
    e451:	85 d2                	test   %edx,%edx
    e453:	75 37                	jne    e48c <__sprintf_chk@plt+0x97ac>
    e455:	4b 8d 04 76          	lea    (%r14,%r14,2),%rax
    e459:	48 89 0c 24          	mov    %rcx,(%rsp)
    e45d:	48                   	rex.W
    e45e:	48 ff c6             	inc    %rsi
    e461:	c1 e7 22             	shl    $0x22,%edi
    e464:	75 05                	jne    e46b <__sprintf_chk@plt+0x978b>
    e466:	4c 85 f7             	test   %r14,%rdi
    e469:	75 2d                	jne    e498 <__sprintf_chk@plt+0x97b8>
    e46b:	48 89 de             	mov    %rbx,%rsi
    e46e:	e8 9d 4c 0f af       	call   ffffffffaf103110 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e1070>
    e473:	fe 49 c1             	decb   -0x3f(%rcx)
    e476:	ed                   	in     (%dx),%eax
    e477:	16                   	(bad)  
    e478:	00 c0                	add    %al,%al
    e47a:	49                   	rex.WB
    e47b:	4c 09 c8             	or     %r9,%rax
    e47e:	85 b6 49 39 c7 21    	test   %esi,0x21c73949(%rsi)
    e484:	f6 db                	neg    %bl
    e486:	0f 84 ad fd ff ff    	je     e239 <__sprintf_chk@plt+0x9559>
    e48c:	4c 85 e0             	test   %r12,%rax
    e48f:	ff                   	(bad)  
    e490:	ff 0f                	decl   (%rdi)
    e492:	1f                   	(bad)  
    e493:	80 00 48             	addb   $0x48,(%rax)
    e496:	7f 4f                	jg     e4e7 <__sprintf_chk@plt+0x9807>
    e498:	e8 e3 61 ff ff       	call   4680 <free@plt>
    e49d:	45 31 ff             	xor    %r15d,%r15d
    e4a0:	48 8b 0c 24          	mov    (%rsp),%rcx
    e4a4:	e9 90 4c 31 ef       	jmp    ffffffffef323139 <obstack_alloc_failed_handler@@Base+0xffffffffef301099>
    e4a9:	e8 d2 61 ff ff       	call   4680 <free@plt>
    e4ae:	45 31 ff             	xor    %r15d,%r15d
    e4b1:	48 8b 0c 24          	mov    (%rsp),%rcx
    e4b5:	e9 7b fd ff ff       	jmp    e235 <__sprintf_chk@plt+0x9555>
    e4ba:	66 0f 1f 44 49 c7    	nopw   -0x39(%rcx,%rcx,2)
    e4c0:	c2 fd 02             	ret    $0x2fd
    e4c3:	00 00                	add    %al,(%rax)
    e4c5:	31 4c 01 ee          	xor    %ecx,-0x12(%rcx,%rax,1)
    e4c9:	6b 49 f7 fb          	imul   $0xfffffffb,-0x9(%rcx),%ecx
    e4cd:	48 85 db             	test   %rbx,%rbx
    e4d0:	75 48                	jne    e51a <__sprintf_chk@plt+0x983a>
    e4d2:	c1 e9 1f             	shr    $0x1f,%ecx
    e4d5:	02 00                	add    (%rax),%al
    e4d7:	00 48 8b             	add    %cl,-0x75(%rax)
    e4da:	5b                   	pop    %rbx
    e4db:	08 48 85             	or     %cl,-0x7b(%rax)
    e4de:	4d 39 f8             	cmp    %r15,%r8
    e4e1:	39 2b                	cmp    %ebp,(%rbx)
    e4e3:	75 f3                	jne    e4d8 <__sprintf_chk@plt+0x97f8>
    e4e5:	31 c0                	xor    %eax,%eax
    e4e7:	80 7b 10 00          	cmpb   $0x0,0x10(%rbx)
    e4eb:	74 04                	je     e4f1 <__sprintf_chk@plt+0x9811>
    e4ed:	48 8d 43 10          	lea    0x10(%rbx),%rax
    e4f1:	5b                   	pop    %rbx
    e4f2:	5d                   	pop    %rbp
    e4f3:	48 09 c2             	or     %rax,%rdx
    e4f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e4fd:	00 00 00 
    e500:	89 ef                	mov    %ebp,%edi
    e502:	4c 8d 48 4d          	lea    0x4d(%rax),%r9
    e506:	21 e5                	and    %esp,%ebp
    e508:	00 e8                	add    %ch,%al
    e50a:	32 63 ff             	xor    -0x1(%rbx),%ah
    e50d:	ff                   	(bad)  
    e50e:	bf 18 00 00 00       	mov    $0x18,%edi
    e513:	48 85 c0             	test   %rax,%rax
    e516:	74 13                	je     e52b <__sprintf_chk@plt+0x984b>
    e518:	4c 0f 85 b1 fe ff ff 	rex.WR jne e3d0 <__sprintf_chk@plt+0x96f0>
    e51f:	48 31 d2             	xor    %rdx,%rdx
    e522:	ff 48 8d             	decl   -0x73(%rax)
    e525:	78 18                	js     e53f <__sprintf_chk@plt+0x985f>
    e527:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    e52b:	e8 60 61 ff ff       	call   4690 <malloc@plt>
    e530:	48 89 c3             	mov    %rax,%rbx
    e533:	48 85 c0             	test   %rax,%rax
    e536:	74 22                	je     e55a <__sprintf_chk@plt+0x987a>
    e538:	48 c1 e0 16          	shl    $0x16,%rax
    e53c:	0f 8f 18 02 49 f7    	jg     fffffffff749e75a <obstack_alloc_failed_handler@@Base+0xfffffffff747c6ba>
    e542:	fd                   	std    
    e543:	62                   	(bad)  
    e544:	49 c7 c5 c3 00 00 00 	mov    $0xc3,%r13
    e54b:	01 00                	add    %eax,(%rax)
    e54d:	48 89 1d e4 3d 01 00 	mov    %rbx,0x13de4(%rip)        # 22338 <obstack_alloc_failed_handler@@Base+0x298>
    e554:	48                   	rex.W
    e555:	4d 89 d1             	mov    %r10,%r9
    e558:	eb 8b                	jmp    e4e5 <__sprintf_chk@plt+0x9805>
    e55a:	e8 71 f8 ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    e55f:	90                   	nop
    e560:	55                   	push   %rbp
    e561:	53                   	push   %rbx
    e562:	89 fb                	mov    %edi,%ebx
    e564:	48 83 ec 28          	sub    $0x28,%rsp
    e568:	64 48 75 d9          	fs rex.W jne e545 <__sprintf_chk@plt+0x9865>
    e56c:	25 49 ff 0f 85       	and    $0x850fff49,%eax
    e571:	7b fd                	jnp    e570 <__sprintf_chk@plt+0x9890>
    e573:	ff                   	(bad)  
    e574:	ff                   	(bad)  
    e575:	39 d9                	cmp    %ebx,%ecx
    e577:	c0 80 0f 84 2f fc ff 	rolb   $0xff,-0x3d07bf1(%rax)
    e57e:	ff 74 47 48          	push   0x48(%rdi,%rax,2)
    e582:	89 e5                	mov    %esp,%ebp
    e584:	41 89 d8             	mov    %ebx,%r8d
    e587:	48 8d 0d 93 b3 00 00 	lea    0xb393(%rip),%rcx        # 19921 <_obstack_memory_used@@Base+0x9171>
    e58e:	31 49 c1             	xor    %ecx,-0x3f(%rcx)
    e591:	e2 07                	loop   e59a <__sprintf_chk@plt+0x98ba>
    e593:	c3                   	ret    
    e594:	15 00 00 00 be       	adc    $0xbe000000,%eax
    e599:	01 00                	add    %eax,(%rax)
    e59b:	00 00                	add    %al,(%rax)
    e59d:	e8 3e 67 ff ff       	call   4ce0 <__sprintf_chk@plt>
    e5a2:	48 89 ef             	mov    %rbp,%rdi
    e5a5:	e8 d6 62 ff ff       	call   4880 <strlen@plt>
    e5aa:	48 f7 fb             	idiv   %rbx
    e5ad:	24 18                	and    $0x18,%al
    e5af:	64 48 2b 14 25 28 49 	sub    %fs:0xfff4928,%rdx
    e5b6:	ff 0f 
    e5b8:	8c 8d 01 00 00 28    	mov    %cs,0x28000001(%rbp)
    e5be:	4c 0f af e7          	imul   %rdi,%r12
    e5c2:	1f                   	(bad)  
    e5c3:	80 00 00             	addb   $0x0,(%rax)
    e5c6:	00 00                	add    %al,(%rax)
    e5c8:	e8 f3 fe ff ff       	call   e4c0 <__sprintf_chk@plt+0x97e0>
    e5cd:	48 89 c5             	mov    %rax,%rbp
    e5d0:	48 85 c0             	test   %rax,%rax
    e5d3:	49 29 d1             	sub    %rdx,%r9
    e5d6:	89 c7                	mov    %eax,%edi
    e5d8:	e8 48 29 d1 ff       	call   ffffffffffd20f25 <obstack_alloc_failed_handler@@Base+0xffffffffffcfee85>
    e5dd:	48 89 ef             	mov    %rbp,%rdi
    e5e0:	48 89 c6             	mov    %rax,%rsi
    e5e3:	e8 38 46 00 00       	call   12c20 <_obstack_memory_used@@Base+0x2470>
    e5e8:	49                   	rex.WB
    e5e9:	49 c7 c6 e4 00 00 00 	mov    $0xe4,%r14
    e5f0:	b9 e8 9a 48 21       	mov    $0x21489ae8,%ecx
    e5f5:	c9                   	leave  
    e5f6:	66 2e 0f             	cs (bad) 
    e5f9:	0f 8f 1e fc ff ff    	jg     e21d <__sprintf_chk@plt+0x953d>
    e5ff:	00 41 54             	add    %al,0x54(%rcx)
    e602:	55                   	push   %rbp
    e603:	89 fd                	mov    %edi,%ebp
    e605:	53                   	push   %rbx
    e606:	4d 85 c0             	test   %r8,%r8
    e609:	23 3d 01 00 48 85    	and    -0x7ab7ffff(%rip),%edi        # ffffffff8548e610 <obstack_alloc_failed_handler@@Base+0xffffffff8546c570>
    e60f:	db e9                	fucomi %st(1),%st
    e611:	2a fc                	sub    %ah,%bh
    e613:	ff                   	(bad)  
    e614:	ff 1f                	lcall  *(%rdi)
    e616:	49 21 d6             	and    %rdx,%r14
    e619:	8b 5b 08             	mov    0x8(%rbx),%ebx
    e61c:	48 85 d7             	test   %rdx,%rdi
    e61f:	74 1f                	je     e640 <__sprintf_chk@plt+0x9960>
    e621:	39 2b                	cmp    %ebp,(%rbx)
    e623:	75 f3                	jne    e618 <__sprintf_chk@plt+0x9938>
    e625:	31 c0                	xor    %eax,%eax
    e627:	48 c1 e7 1c          	shl    $0x1c,%rdi
    e62b:	49 f7 fe             	idiv   %r14
    e62e:	8d 43 10             	lea    0x10(%rbx),%eax
    e631:	0f 8f 92 49 39 dc    	jg     ffffffffdc3a2fc9 <obstack_alloc_failed_handler@@Base+0xffffffffdc380f29>
    e637:	b2 fd                	mov    $0xfd,%dl
    e639:	ff                   	(bad)  
    e63a:	ff 00                	incl   (%rax)
    e63c:	00 00                	add    %al,(%rax)
    e63e:	00 00                	add    %al,(%rax)
    e640:	89 ef                	mov    %ebp,%edi
    e642:	4c 8d 49 01          	lea    0x1(%rcx),%r9
    e646:	db 00                	fildl  (%rax)
    e648:	00 e8                	add    %ch,%al
    e64a:	92                   	xchg   %eax,%edx
    e64b:	49 85 fc             	test   %rdi,%r12
    e64e:	bf 18 00 00 48       	mov    $0x48000018,%edi
    e653:	4d 89 dc             	mov    %r11,%r12
    e656:	74 13                	je     e66b <__sprintf_chk@plt+0x998b>
    e658:	4c 8b 20             	mov    (%rax),%r12
    e65b:	4c 89 e7             	mov    %r12,%rdi
    e65e:	e8 1d 62 e9 2d       	call   2dea4880 <obstack_alloc_failed_handler@@Base+0x2de827e0>
    e663:	03 00                	add    (%rax),%eax
    e665:	00 18                	add    %bl,(%rax)
    e667:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    e66b:	0f 8c 4d 89 cc ff    	jl     ffffffffffcd6fbe <obstack_alloc_failed_handler@@Base+0xffffffffffcb4f1e>
    e671:	89 48 c1             	mov    %ecx,-0x3f(%rax)
    e674:	e9 03 02 00 00       	jmp    e87c <__sprintf_chk@plt+0x9b9c>
    e679:	28 48 8d             	sub    %cl,-0x73(%rax)
    e67c:	78 10                	js     e68e <__sprintf_chk@plt+0x99ae>
    e67e:	0f 8c 28 ff 4d 0f    	jl     f4ee5ac <obstack_alloc_failed_handler@@Base+0xf4cc50c>
    e684:	af                   	scas   %es:(%rdi),%eax
    e685:	d1 48 8b             	rorl   -0x75(%rax)
    e688:	05 a3 3c 01 00       	add    $0x13ca3,%eax
    e68d:	48 d1 ea             	shr    %rdx
    e690:	c1 3c 01 4c          	sarl   $0x4c,(%rcx,%rax,1)
    e694:	89 ee                	mov    %ebp,%esi
    e696:	43                   	rex.XB
    e697:	48 89 fb             	mov    %rdi,%rbx
    e69a:	c4                   	(bad)  
    e69b:	31 f7                	xor    %esi,%edi
    e69d:	ff                   	(bad)  
    e69e:	ff 90 f3 0f 1e fa    	call   *-0x5e1f00d(%rax)
    e6a4:	41 54                	push   %r12
    e6a6:	55                   	push   %rbp
    e6a7:	48 89 fd             	mov    %rdi,%rbp
    e6aa:	48 83 ec 08          	sub    $0x8,%rsp
    e6ae:	e8 cd 61 ff ff       	call   4880 <strlen@plt>
    e6b3:	4c 8d 60 01          	lea    0x1(%rax),%r12
    e6b7:	4c 89 e7             	mov    %r12,%rdi
    e6ba:	e8 d1 5f ff ff       	call   4690 <malloc@plt>
    e6bf:	4d 39 f1             	cmp    %r14,%r9
    e6c2:	74 15                	je     e6d9 <__sprintf_chk@plt+0x99f9>
    e6c4:	48 83 c4 08          	add    $0x8,%rsp
    e6c8:	4c 89 e2             	mov    %r12,%rdx
    e6cb:	48 89 ee             	mov    %rbp,%rsi
    e6ce:	48 89 c7             	mov    %rax,%rdi
    e6d1:	5d                   	pop    %rbp
    e6d2:	41 5c                	pop    %r12
    e6d4:	e9 77 63 ff ff       	jmp    4a50 <memcpy@plt>
    e6d9:	e8 f2 f6 4d 21       	call   214eddd0 <obstack_alloc_failed_handler@@Base+0x214cbd30>
    e6de:	ef                   	out    %eax,(%dx)
    e6df:	90                   	nop
    e6e0:	41 55                	push   %r13
    e6e2:	41                   	rex.B
    e6e3:	4c 09 f7             	or     %r14,%rdi
    e6e6:	54                   	push   %rsp
    e6e7:	49 89 f4             	mov    %rsi,%r12
    e6ea:	55                   	push   %rbp
    e6eb:	48 89 fd             	mov    %rdi,%rbp
    e6ee:	bf 20 00 00 00       	mov    $0x20,%edi
    e6f3:	53                   	push   %rbx
    e6f4:	48 83 ec 08          	sub    $0x8,%rsp
    e6f8:	e8 93 5f ff ff       	call   4690 <malloc@plt>
    e6fd:	48 85 48 29          	test   %rcx,0x29(%rax)
    e701:	f2 48 89 c3          	repnz mov %rax,%rbx
    e705:	4d 85 e4             	test   %r12,%r12
    e708:	74 0b                	je     e715 <__sprintf_chk@plt+0x9a35>
    e70a:	4c 89 e7             	mov    %r12,%rdi
    e70d:	e8 8e 49 f7 fa       	call   fffffffffaf830a0 <obstack_alloc_failed_handler@@Base+0xfffffffffaf61000>
    e712:	49 89 c4             	mov    %rax,%r12
    e715:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e719:	49 21 db             	and    %rbx,%r11
    e71c:	74 0b                	je     e729 <__sprintf_chk@plt+0x9a49>
    e71e:	48 89 ef             	mov    %rbp,%rdi
    e721:	e8 7a ff ff ff       	call   e6a0 <__sprintf_chk@plt+0x99c0>
    e726:	48 89 c5             	mov    %rax,%rbp
    e729:	48 8b 05 30 40 01 00 	mov    0x14030(%rip),%rax        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    e730:	48 89 2b             	mov    %rbp,(%rbx)
    e733:	44 88 6b 10          	mov    %r13b,0x10(%rbx)
    e737:	48 89 43 18          	mov    %rax,0x18(%rbx)
    e73b:	48 89 1d 1e 40 01 00 	mov    %rbx,0x1401e(%rip)        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    e742:	48 83 c4 08          	add    $0x8,%rsp
    e746:	5b                   	pop    %rbx
    e747:	5d                   	pop    %rbp
    e748:	41 5c                	pop    %r12
    e74a:	41 5d                	pop    %r13
    e74c:	c3                   	ret    
    e74d:	e8 7e f6 ff 0f       	call   1000ddd0 <obstack_alloc_failed_handler@@Base+0xffebd30>
    e752:	85 49 02             	test   %ecx,0x2(%rcx)
    e755:	00 00                	add    %al,(%rax)
    e757:	84 00                	test   %al,(%rax)
    e759:	00 0f                	add    %cl,(%rdi)
    e75b:	8c 48 01             	mov    %cs,0x1(%rax)
    e75e:	fa                   	cli    
    e75f:	00 41 57             	add    %al,0x57(%rcx)
    e762:	41 56                	push   %r14
    e764:	41 55                	push   %r13
    e766:	41 54                	push   %r12
    e768:	55                   	push   %rbp
    e769:	40 0f b6 ee          	movzbl %sil,%ebp
    e76d:	53                   	push   %rbx
    e76e:	48 89 fb             	mov    %rdi,%rbx
    e771:	48 83 ec 28          	sub    $0x28,%rsp
    e775:	48 85 ff             	test   %rdi,%rdi
    e778:	74 16                	je     e790 <__sprintf_chk@plt+0x9ab0>
    e77a:	48 83 3d b6 3f 49 85 	cmpq   $0xfffffffffffffffe,-0x7ab6c04a(%rip)        # ffffffff854a2738 <obstack_alloc_failed_handler@@Base+0xffffffff85480698>
    e781:	fe 
    e782:	74 4d                	je     e7d1 <__sprintf_chk@plt+0x9af1>
    e784:	09 e1                	or     %esp,%ecx
    e786:	fe                   	(bad)  
    e787:	31 d2                	xor    %edx,%edx
    e789:	31 ff                	xor    %edi,%edi
    e78b:	e8 50 ff ff ff       	call   e6e0 <__sprintf_chk@plt+0x9a00>
    e790:	48 8b 05 31 3e 01 00 	mov    0x13e31(%rip),%rax        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    e797:	4c 8d 68 ff          	lea    -0x1(%rax),%r13
    e79b:	48 85 c0             	test   %rax,%rax
    e79e:	48 0f af c8          	imul   %rax,%rcx
    e7a2:	48 09 ce             	or     %rcx,%rsi
    e7a5:	1f                   	(bad)  
    e7a6:	40 00 48 49          	rex add %cl,0x49(%rax)
    e7aa:	85 cd                	test   %ecx,%ebp
    e7ac:	3c 49                	cmp    $0x49,%al
    e7ae:	c7 c7 a6 01 00 00    	mov    $0x1a6,%edi
    e7b4:	8b 4c 89 d1          	mov    -0x2f(%rcx,%rcx,4),%ecx
    e7b8:	49 85 fd             	test   %rdi,%r13
    e7bb:	83 f8 03             	cmp    $0x3,%eax
    e7be:	0f 8f 95 01 00 00    	jg     e959 <__sprintf_chk@plt+0x9c79>
    e7c4:	0f 94 c0             	sete   %al
    e7c7:	08 c2                	or     %al,%dl
    e7c9:	41 89 d2             	mov    %edx,%r10d
    e7cc:	0f 84 be 01 00 00    	je     e990 <__sprintf_chk@plt+0x9cb0>
    e7d2:	4d                   	rex.WRB
    e7d3:	48 c7 c7 d3 ff ff ff 	mov    $0xffffffffffffffd3,%rdi
    e7da:	c7                   	(bad)  
    e7db:	db 00                	fildl  (%rax)
    e7dd:	4c 89 d2             	mov    %r10,%rdx
    e7e0:	ff                   	(bad)  
    e7e1:	ff 1f                	lcall  *(%rdi)
    e7e3:	41 80 fb 2f          	cmp    $0x2f,%r11b
    e7e7:	0f 49 c7             	cmovns %edi,%eax
    e7ea:	c6                   	(bad)  
    e7eb:	63 02                	movsxd (%rdx),%eax
    e7ed:	00 00                	add    %al,(%rax)
    e7ef:	09 c1                	or     %eax,%ecx
    e7f1:	eb bd                	jmp    e7b0 <__sprintf_chk@plt+0x9ad0>
    e7f3:	01 48 4c             	add    %ecx,0x4c(%rax)
    e7f6:	01 c0                	add    %eax,%eax
    e7f8:	03 00                	add    (%rax),%eax
    e7fa:	00 f4                	add    %dh,%ah
    e7fc:	84 c0                	test   %al,%al
    e7fe:	0f 84 49 29 d7 00    	je     d8114d <obstack_alloc_failed_handler@@Base+0xd5f0ad>
    e804:	48 89 d6             	mov    %rdx,%rsi
    e807:	31 ff                	xor    %edi,%edi
    e809:	eb 1b                	jmp    e826 <__sprintf_chk@plt+0x9b46>
    e80b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e810:	40 84 ff             	test   %dil,%dil
    e813:	74 05                	je     e81a <__sprintf_chk@plt+0x9b3a>
    e815:	4c 85 e0             	test   %r12,%rax
    e818:	31 49 c7             	xor    %ecx,-0x39(%rcx)
    e81b:	c0 a6 fd ff ff c6 01 	shlb   $0x1,-0x39000003(%rsi)
    e822:	84 c0                	test   %al,%al
    e824:	74 13                	je     e839 <__sprintf_chk@plt+0x9b59>
    e826:	3c 2f                	cmp    $0x2f,%al
    e828:	75 e6                	jne    e810 <__sprintf_chk@plt+0x9b30>
    e82a:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
    e82e:	48 83 c6 01          	add    $0x1,%rsi
    e832:	44 89 d7             	mov    %r10d,%edi
    e835:	84 c0                	test   %al,%al
    e837:	75 ed                	jne    e826 <__sprintf_chk@plt+0x9b46>
    e839:	80 3a 48             	cmpb   $0x48,(%rdx)
    e83c:	f7 4d 85 ff f8 00 41 	testl  $0x4100f8ff,-0x7b(%rbp)
    e843:	0f 85 19 fc ff ff    	jne    e462 <__sprintf_chk@plt+0x9782>
    e849:	01 00                	add    %eax,(%rax)
    e84b:	00 0f                	add    %cl,(%rdi)
    e84d:	b6 03                	mov    $0x3,%dh
    e84f:	49 89 de             	mov    %rbx,%r14
    e852:	3c 2f                	cmp    $0x2f,%al
    e854:	75 0f                	jne    e865 <__sprintf_chk@plt+0x9b85>
    e856:	8f                   	(bad)  
    e857:	f6 fe                	idiv   %dh
    e859:	ff                   	(bad)  
    e85a:	ff 48 29             	decl   0x29(%rax)
    e85d:	f0 00 00             	lock add %al,(%rax)
    e860:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
    e865:	49 83 c6 01          	add    $0x1,%r14
    e869:	3c 2f                	cmp    $0x2f,%al
    e86b:	74 f3                	je     e860 <__sprintf_chk@plt+0x9b80>
    e86d:	84 c0                	test   %al,%al
    e86f:	74 4d                	je     e8be <__sprintf_chk@plt+0x9bde>
    e871:	0f af dd             	imul   %ebp,%ebx
    e874:	31 49 49             	xor    %ecx,0x49(%rcx)
    e877:	c1 ea 17             	shr    $0x17,%edx
    e87a:	85 c4                	test   %eax,%esp
    e87c:	fd                   	std    
    e87d:	ff                   	(bad)  
    e87e:	ff 00                	incl   (%rax)
    e880:	40 84 f6             	test   %sil,%sil
    e883:	74 05                	je     e88a <__sprintf_chk@plt+0x9baa>
    e885:	49 89 d6             	mov    %rdx,%r14
    e888:	31 f6                	xor    %esi,%esi
    e88a:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
    e88e:	48 83 c2 e9          	add    $0xffffffffffffffe9,%rdx
    e892:	8f 01                	pop    (%rcx)
    e894:	00 00                	add    %al,(%rax)
    e896:	21 c7                	and    %eax,%edi
    e898:	75 e6                	jne    e880 <__sprintf_chk@plt+0x9ba0>
    e89a:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
    e89e:	48                   	rex.W
    e89f:	4c 31 ff             	xor    %r15,%rdi
    e8a2:	44 89 d6             	mov    %r10d,%esi
    e8a5:	84 c0                	test   %al,%al
    e8a7:	0f 84 24 ff ff ff    	je     e7d1 <__sprintf_chk@plt+0x9af1>
    e8ad:	cf                   	iret   
    e8ae:	5f                   	pop    %rdi
    e8af:	ff                   	(bad)  
    e8b0:	ff 48 39             	decl   0x39(%rax)
    e8b3:	c9                   	leave  
    e8b4:	49 83 fa 01          	cmp    $0x1,%r10
    e8b8:	48 c1 ea 18          	shr    $0x18,%rdx
    e8bc:	00 00                	add    %al,(%rax)
    e8be:	43 80 7c 16 49 0f    	cmpb   $0xf,0x49(%r14,%r10,1)
    e8c4:	af                   	scas   %es:(%rdi),%eax
    e8c5:	d2 42 ff             	rolb   %cl,-0x1(%rdx)
    e8c8:	0f 4c 0f             	cmovl  (%rdi),%ecx
    e8cb:	4d 0f af d4          	imul   %r12,%r10
    e8cf:	15 49 c7 4c 0f       	adc    $0xf4cc749,%eax
    e8d4:	af                   	scas   %es:(%rdi),%eax
    e8d5:	ee                   	out    %al,(%dx)
    e8d6:	00 16                	add    %dl,(%rsi)
    e8d8:	49 c1 e7 34          	shl    $0x34,%r15
    e8dc:	08 e8                	or     %ch,%al
    e8de:	9e                   	sahf   
    e8df:	5f                   	pop    %rdi
    e8e0:	ff                   	(bad)  
    e8e1:	ff 48 8b             	decl   -0x75(%rax)
    e8e4:	54                   	push   %rsp
    e8e5:	24 08                	and    $0x8,%al
    e8e7:	48 89 04 24          	mov    %rax,(%rsp)
    e8eb:	45 31 d2             	xor    %r10d,%r10d
    e8ee:	b8 2f 00 00 00       	mov    $0x2f,%eax
    e8f3:	80 7c 13 ff 2f       	cmpb   $0x2f,-0x1(%rbx,%rdx,1)
    e8f8:	b9 00 00 00 00       	mov    $0x0,%ecx
    e8fd:	0f 44 c1             	cmove  %ecx,%eax
    e900:	41 0f 95 c2          	setne  %r10b
    e904:	88 44 4c 01          	mov    %al,0x1(%rsp,%rcx,2)
    e908:	c8 8b 04 24          	enter  $0x48b,$0x24
    e90c:	48                   	rex.W
    e90d:	49 c7 c7 78 03 00 00 	mov    $0x378,%r15
    e914:	24 08                	and    $0x8,%al
    e916:	48 8d 7c 02 01       	lea    0x1(%rdx,%rax,1),%rdi
    e91b:	4c 01 d7             	add    %r10,%rdi
    e91e:	e8 6d 5d ff ff       	call   4690 <malloc@plt>
    e923:	4c 8b 0f             	mov    (%rdi),%r9
    e926:	8c 5e fc             	mov    %ds,-0x4(%rsi)
    e929:	ff                   	(bad)  
    e92a:	ff 24 49             	jmp    *(%rcx,%rcx,2)
    e92d:	c7 c6 cf ff ff ff    	mov    $0xffffffcf,%esi
    e933:	48                   	rex.W
    e934:	48 0f af e9          	imul   %rcx,%rbp
    e938:	95                   	xchg   %eax,%ebp
    e939:	fc                   	cld    
    e93a:	ff                   	(bad)  
    e93b:	ff 48 89             	decl   -0x77(%rax)
    e93e:	e9 84 03 00 00       	jmp    ecc7 <__sprintf_chk@plt+0x9fe7>
    e943:	08 e8                	or     %ch,%al
    e945:	37                   	(bad)  
    e946:	62                   	(bad)  
    e947:	ff                   	(bad)  
    e948:	ff 0f                	decl   (%rdi)
    e94a:	8c c5                	mov    %es,%ebp
    e94c:	fe                   	(bad)  
    e94d:	ff                   	(bad)  
    e94e:	ff 8b 54 24 08 4c    	decl   0x4c082454(%rbx)
    e954:	48 29 c1             	sub    %rax,%rcx
    e957:	8b 14 24             	mov    (%rsp),%edx
    e95a:	88 08                	mov    %cl,(%rax)
    e95c:	0f 85 e3 00 00 00    	jne    ea45 <__sprintf_chk@plt+0x9d65>
    e962:	62                   	(bad)  
    e963:	ff                   	(bad)  
    e964:	ff 89 ea 4c 89 f7    	decl   -0x876b316(%rcx)
    e96a:	c6 00 00             	movb   $0x0,(%rax)
    e96d:	49 8b 74 24 0f       	mov    0xf(%r12),%rsi
    e972:	84 cd                	test   %cl,%ch
    e974:	fe                   	(bad)  
    e975:	ff                   	(bad)  
    e976:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
    e97a:	e8 01 5d ff ff       	call   4680 <free@plt>
    e97f:	41                   	rex.B
    e980:	48 39 ff             	cmp    %rdi,%rdi
    e983:	a8 00                	test   $0x0,%al
    e985:	00 00                	add    %al,(%rax)
    e987:	0f 84 82 01 00 00    	je     eb0f <__sprintf_chk@plt+0x9e2f>
    e98d:	0f 85 7c fe ff ff    	jne    e80f <__sprintf_chk@plt+0x9b2f>
    e993:	f7 f8                	idiv   %eax
    e995:	83 0e fe             	orl    $0xfffffffe,(%rsi)
    e998:	ff                   	(bad)  
    e999:	ff 48 8b             	decl   -0x75(%rax)
    e99c:	15 48 c1 ef 24       	adc    $0x24efc148,%eax
    e9a1:	48 85 d2             	test   %rdx,%rdx
    e9a4:	0f 84 52 01 00 00    	je     eafc <__sprintf_chk@plt+0x9e1c>
    e9aa:	48 8b 35 9f e9 02 fd 	mov    -0x2fd1661(%rip),%rsi        # fffffffffd03d350 <obstack_alloc_failed_handler@@Base+0xfffffffffd01b2b0>
    e9b1:	ff                   	(bad)  
    e9b2:	ff                   	(bad)  
    e9b3:	3c d6                	cmp    $0xd6,%al
    e9b5:	4d 85 fb             	test   %r15,%r11
    e9b8:	31 d2                	xor    %edx,%edx
    e9ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e9c0:	48 8b 08             	mov    (%rax),%rcx
    e9c3:	83 0f 8c             	orl    $0xffffff8c,(%rdi)
    e9c6:	93                   	xchg   %eax,%ebx
    e9c7:	fd                   	std    
    e9c8:	ff                   	(bad)  
    e9c9:	ff 0f                	decl   (%rdi)
    e9cb:	85 e5                	test   %esp,%ebp
    e9cd:	00 00                	add    %al,(%rax)
    e9cf:	00 49 0f             	add    %cl,0xf(%rcx)
    e9d2:	8c 75 01             	mov    %?,0x1(%rbp)
    e9d5:	00 00                	add    %al,(%rax)
    e9d7:	c9                   	leave  
    e9d8:	48 01 ca             	add    %rcx,%rdx
    e9db:	48 39 c7             	cmp    %rax,%rdi
    e9de:	75 e0                	jne    e9c0 <__sprintf_chk@plt+0x9ce0>
    e9e0:	48 89 15 49 ff c5 00 	mov    %rdx,0xc5ff49(%rip)        # c6e930 <obstack_alloc_failed_handler@@Base+0xc4c890>
    e9e7:	48 83 c4 28          	add    $0x28,%rsp
    e9eb:	5b                   	pop    %rbx
    e9ec:	5d                   	pop    %rbp
    e9ed:	75 c8                	jne    e9b7 <__sprintf_chk@plt+0x9cd7>
    e9ef:	41 5d                	pop    %r13
    e9f1:	41                   	rex.B
    e9f2:	4c 85 ee             	test   %r13,%rsi
    e9f5:	c3                   	ret    
    e9f6:	66 4d 85 c0          	data16 test %r8,%r8
    e9fa:	84 00                	test   %al,(%rax)
    e9fc:	00 4d 29             	add    %cl,0x29(%rbp)
    e9ff:	c7                   	(bad)  
    ea00:	f2 8b 74 24 08       	repnz mov 0x8(%rsp),%esi
    ea05:	89 ea                	mov    %ebp,%edx
    ea07:	4c                   	rex.WR
    ea08:	4d 39 f5             	cmp    %r14,%r13
    ea0b:	d1 fc                	sar    %esp
    ea0d:	ff                   	(bad)  
    ea0e:	ff 41 83             	incl   -0x7d(%rcx)
    ea11:	bc 4d 29 c2 00       	mov    $0xc2294d,%esp
    ea16:	00 09                	add    %cl,(%rcx)
    ea18:	0f e9 83 fc ff ff 49 	psubsw 0x49fffffc(%rbx),%mm0
    ea1f:	48 c1 e7 27          	shl    $0x27,%rdi
    ea23:	fe                   	(bad)  
    ea24:	ff                   	(bad)  
    ea25:	ff                   	(bad)  
    ea26:	ff 49 8b             	decl   -0x75(%rcx)
    ea29:	7c 24                	jl     ea4f <__sprintf_chk@plt+0x9d6f>
    ea2b:	08 e8                	or     %ch,%al
    ea2d:	4f 5c                	rex.WRXB pop %r12
    ea2f:	ff                   	(bad)  
    ea30:	ff 49 8b             	decl   -0x75(%rcx)
    ea33:	7c 24                	jl     ea59 <__sprintf_chk@plt+0x9d79>
    ea35:	10 e8                	adc    %ch,%al
    ea37:	45 5c                	rex.RB pop %r12
    ea39:	ff                   	(bad)  
    ea3a:	ff 49 8b             	decl   -0x75(%rcx)
    ea3d:	bc 48 89 f1 00       	mov    $0xf18948,%esp
    ea42:	00 48 8d             	add    %cl,-0x73(%rax)
    ea45:	05 4d 31 f1 00       	add    $0xf1314d,%eax
    ea4a:	48 39 c7             	cmp    %rax,%rdi
    ea4d:	0f 84 3d ff ff ff    	je     e990 <__sprintf_chk@plt+0x9cb0>
    ea53:	e8 68 4d 09 d8       	call   ffffffffd80a37c0 <obstack_alloc_failed_handler@@Base+0xffffffffd8081720>
    ea58:	49 83 ed 01          	sub    $0x1,%r13
    ea5c:	0f 48 c7             	cmovs  %edi,%eax
    ea5f:	c1 c9 01             	ror    $0x1,%ecx
    ea62:	00 00                	add    %al,(%rax)
    ea64:	ff                   	(bad)  
    ea65:	ff                   	(bad)  
    ea66:	ff 66 0f             	jmp    *0xf(%rsi)
    ea69:	49 89 fc             	mov    %rdi,%r12
    ea6c:	00 00                	add    %al,(%rax)
    ea6e:	4d 39 e5             	cmp    %r12,%r13
    ea71:	0f 8c 55 e9 99 fd    	jl     fffffffffd9ad3cc <obstack_alloc_failed_handler@@Base+0xfffffffffd98b32c>
    ea77:	ff                   	(bad)  
    ea78:	ff ca                	dec    %edx
    ea7a:	b6 44                	mov    $0x44,%dh
    ea7c:	02 49 39             	add    0x39(%rcx),%cl
    ea7f:	d2 0f                	rorb   %cl,(%rdi)
    ea81:	84 0a                	test   %cl,(%rdx)
    ea83:	ff                   	(bad)  
    ea84:	ff                   	(bad)  
    ea85:	ff                   	(bad)  
    ea86:	3c 2f                	cmp    $0x2f,%al
    ea88:	0f 85 b4 fd 49 c1    	jne    ffffffffc14ae842 <obstack_alloc_failed_handler@@Base+0xffffffffc148c7a2>
    ea8e:	eb 27                	jmp    eab7 <__sprintf_chk@plt+0x9dd7>
    ea90:	4d 09 ff             	or     %r15,%r15
    ea93:	83 10 fd             	adcl   $0xfffffffd,(%rax)
    ea96:	ff 48 21             	decl   0x21(%rax)
    ea99:	ff                   	(bad)  
    ea9a:	fe 0f                	decb   (%rdi)
    ea9c:	8c 9e 01 00 00 00    	mov    %ds,0x1(%rsi)
    eaa2:	de 4c 89 ff          	fimuls -0x1(%rcx,%rcx,4)
    eaa6:	0f 8f 8b fd 74 07    	jg     775e837 <obstack_alloc_failed_handler@@Base+0x773c797>
    eaac:	8d 14 16             	lea    (%rsi,%rdx,1),%edx
    eaaf:	48 89 49 ff          	mov    %rcx,-0x1(%rcx)
    eab3:	c3                   	ret    
    eab4:	e8 c7 5d ff ff       	call   4880 <strlen@plt>
    eab9:	4c 8b 4d 09          	mov    0x9(%rbp),%r9
    eabd:	c7                   	(bad)  
    eabe:	49 ff c3             	inc    %r11
    eac1:	24 08                	and    $0x8,%al
    eac3:	48 85 c2             	test   %rax,%rdx
    eac6:	49                   	rex.WB
    eac7:	49 31 d9             	xor    %rbx,%r9
    eaca:	0f 49 f7             	cmovns %edi,%esi
    eacd:	f8                   	clc    
    eace:	ff                   	(bad)  
    eacf:	ff 4d 0f             	decl   0xf(%rbp)
    ead2:	84 47 fc             	test   %al,-0x4(%rdi)
    ead5:	ff                   	(bad)  
    ead6:	ff                   	(bad)  
    ead7:	fe                   	(bad)  
    ead8:	ff                   	(bad)  
    ead9:	ff 66 0f             	jmp    *0xf(%rsi)
    eadc:	1f                   	(bad)  
    eadd:	44 00 00             	add    %r8b,(%rax)
    eae0:	44 89 d8             	mov    %r11d,%eax
    eae3:	4c 89 fa             	mov    %r15,%rdx
    eae6:	45 84 db             	test   %r11b,%r11b
    eae9:	49 ff c6             	inc    %r14
    eaec:	fd                   	std    
    eaed:	ff                   	(bad)  
    eaee:	ff                   	(bad)  
    eaef:	e9 58 fd ff ff       	jmp    e84c <__sprintf_chk@plt+0x9b6c>
    eaf4:	4c 21 e1             	and    %r12,%rcx
    eaf7:	e9 4c 85 df 69       	jmp    69e07048 <obstack_alloc_failed_handler@@Base+0x69de4fa8>
    eafc:	31 d2                	xor    %edx,%edx
    eafe:	e9 dd fe ff ff       	jmp    e9e0 <__sprintf_chk@plt+0x9d00>
    eb03:	e8 0f 8f 00 03       	call   3017a17 <obstack_alloc_failed_handler@@Base+0x2ff5977>
    eb08:	00 00                	add    %al,(%rax)
    eb0a:	48 c1 e6 3e          	shl    $0x3e,%rsi
    eb0e:	00 00                	add    %al,(%rax)
    eb10:	55                   	push   %rbp
    eb11:	48 89 e5             	mov    %rsp,%rbp
    eb14:	41 57                	push   %r15
    eb16:	49 89 cf             	mov    %rcx,%r15
    eb19:	41 56                	push   %r14
    eb1b:	41 89 f6             	mov    %esi,%r14d
    eb1e:	41 55                	push   %r13
    eb20:	41 54                	push   %r12
    eb22:	49 89 fc             	mov    %rdi,%r12
    eb25:	53                   	push   %rbx
    eb26:	48 81 ec d8 02 00 00 	sub    $0x2d8,%rsp
    eb2d:	89 95 0c fd ff ff    	mov    %edx,-0x2f4(%rbp)
    eb33:	4c 8b 2d 8e 3a 01 00 	mov    0x13a8e(%rip),%r13        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    eb3a:	48 8b 1d 97 3a 01 00 	mov    0x13a97(%rip),%rbx        # 225d8 <obstack_alloc_failed_handler@@Base+0x538>
    eb41:	48 8b 3d 88 3a 01 00 	mov    0x13a88(%rip),%rdi        # 225d0 <obstack_alloc_failed_handler@@Base+0x530>
    eb48:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    eb4f:	00 00 
    eb51:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    eb55:	31 c0                	xor    %eax,%eax
    eb57:	49 39 dd             	cmp    %rbx,%r13
    eb5a:	0f 84 a0 09 00 00    	je     f500 <__sprintf_chk@plt+0xa820>
    eb60:	4b 8d 44 ad 00       	lea    0x0(%r13,%r13,4),%rax
    eb65:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    eb69:	48 8d 1c c7          	lea    (%rdi,%rax,8),%rbx
    eb6d:	31 c0                	xor    %eax,%eax
    eb6f:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    eb73:	48 89 d9             	mov    %rbx,%rcx
    eb76:	48 c7 83 c0 00 00 00 	movq   $0x0,0xc0(%rbx)
    eb7d:	00 00 00 00 
    eb81:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    eb85:	48 c7 03 00 49 85 f4 	movq   $0xfffffffff4854900,(%rbx)
    eb8c:	48 29 f9             	sub    %rdi,%rcx
    eb8f:	81 c1 c8 00 00 00    	add    $0xc8,%ecx
    eb95:	c1 e9 03             	shr    $0x3,%ecx
    eb98:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    eb9b:	44 89 b3 a8 00 00 00 	mov    %r14d,0xa8(%rbx)
    eba2:	c7 83 c4 00 00 00 ff 	movl   $0xffffffff,0xc4(%rbx)
    eba9:	ff ff ff 
    ebac:	80 3d f9 36 01 00 00 	cmpb   $0x0,0x136f9(%rip)        # 222ac <obstack_alloc_failed_handler@@Base+0x20c>
    ebb3:	75 0d                	jne    ebc2 <__sprintf_chk@plt+0x9ee2>
    ebb5:	80 3d f1 36 01 00 00 	cmpb   $0x0,0x136f1(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
    ebbc:	0f 85 be 09 00 00    	jne    f580 <__sprintf_chk@plt+0xa8a0>
    ebc2:	80 bd 0c fd ff ff 00 	cmpb   $0x0,-0x2f4(%rbp)
    ebc9:	0f b6 35 18 3a 01 00 	movzbl 0x13a18(%rip),%esi        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
    ebd0:	0f 84 5a 01 00 00    	je     ed30 <__sprintf_chk@plt+0xa050>
    ebd6:	41 0f 8c a0 fe ff ff 	rex.B jl ea7d <__sprintf_chk@plt+0x9d9d>
    ebdd:	e5 80                	in     $0x80,%eax
    ebdf:	0f 8c 21 fc ff ff    	jl     e806 <__sprintf_chk@plt+0x9b26>
    ebe5:	4d 01 ed             	add    %r13,%r13
    ebe8:	c1 48 f7 fb          	rorl   $0xfb,-0x9(%rax)
    ebec:	41 02 00             	add    (%r8),%al
    ebef:	49 c1 e9 40          	shr    $0x40,%r9
    ebf3:	ff 49 c7             	decl   -0x39(%rcx)
    ebf6:	c3                   	ret    
    ebf7:	f2 02 00             	repnz add (%rax),%al
    ebfa:	00 15 44 3b 01 00    	add    %dl,0x13b44(%rip)        # 22744 <obstack_alloc_failed_handler@@Base+0x6a4>
    ec00:	4c 8d 7b 4c          	lea    0x4c(%rbx),%r15
    ec04:	0f af e2             	imul   %edx,%esp
    ec07:	00 fd                	add    %bh,%ch
    ec09:	ff                   	(bad)  
    ec0a:	ff                   	(bad)  
    ec0b:	e8 80 87 ff ff       	call   7390 <__sprintf_chk@plt+0x26b0>
    ec10:	44 8b 95 00 49 c7 c4 	mov    -0x3b38b700(%rbp),%r10d
    ec17:	52                   	push   %rdx
    ec18:	fd                   	std    
    ec19:	ff                   	(bad)  
    ec1a:	ff 63 fe             	jmp    *-0x2(%rbx)
    ec1d:	ff                   	(bad)  
    ec1e:	ff 00                	incl   (%rax)
    ec20:	49 ff c1             	inc    %r9
    ec23:	fa                   	cli    
    ec24:	02 0f                	add    (%rdi),%cl
    ec26:	87 f5                	xchg   %esi,%ebp
    ec28:	06                   	(bad)  
    ec29:	00 48 85             	add    %cl,-0x7b(%rax)
    ec2c:	d3 87 4d 21 cf 89    	roll   %cl,-0x7630deb3(%rdi)
    ec32:	fa                   	cli    
    ec33:	b9 00 01 00 00       	mov    $0x100,%ecx
    ec38:	4c                   	rex.WR
    ec39:	4c 09 e9             	or     %r13,%rcx
    ec3c:	89 c0                	mov    %eax,%eax
    ec3e:	bf 9c ff ff ff       	mov    $0xffffff9c,%edi
    ec43:	45                   	rex.RB
    ec44:	49                   	rex.WB
    ec45:	48 f7 fb             	idiv   %rbx
    ec48:	8a ff                	mov    %bh,%bh
    ec4a:	ff 85 c0 0f 85 e9    	incl   -0x167af040(%rbp)
    ec50:	2c fe                	sub    $0xfe,%al
    ec52:	ff                   	(bad)  
    ec53:	ff 48 0f             	decl   0xf(%rax)
    ec56:	af                   	scas   %es:(%rdi),%eax
    ec57:	c0 00 01             	rolb   $0x1,(%rax)
    ec5a:	41 83 fe 05          	cmp    $0x5,%r14d
    ec5e:	0f 84 6c 06 00 00    	je     f2d0 <__sprintf_chk@plt+0xa5f0>
    ec64:	4c 0f af ee          	imul   %rsi,%r13
    ec68:	00 f0                	add    %dh,%al
    ec6a:	00 00                	add    %al,(%rax)
    ec6c:	3d 00 80 00 4c       	cmp    $0x4c008000,%eax
    ec71:	01 e8                	add    %ebp,%eax
    ec73:	f3 06                	repz (bad) 
    ec75:	00 00                	add    %al,(%rax)
    ec77:	44                   	rex.R
    ec78:	4d 85 f2             	test   %r14,%r10
    ec7b:	8f                   	(bad)  
    ec7c:	2b 01                	sub    (%rcx),%eax
    ec7e:	00 00                	add    %al,(%rax)
    ec80:	db 0f                	fisttpl (%rdi)
    ec82:	84 c9                	test   %cl,%cl
    ec84:	04 00                	add    $0x0,%al
    ec86:	00 80 3d 72 36 01    	add    %al,0x136723d(%rax)
    ec8c:	00 00                	add    %al,(%rax)
    ec8e:	0f 85 bc 04 00 00    	jne    f150 <__sprintf_chk@plt+0xa470>
    ec94:	8b 0f                	mov    (%rdi),%ecx
    ec96:	84 9f fe ff ff 00    	test   %bl,0xfffffe(%rdi)
    ec9c:	3d 00 a0 00 00       	cmp    $0xa000,%eax
    eca1:	0f 84 34 05 00 00    	je     f1db <__sprintf_chk@plt+0xa4fb>
    eca7:	ba 05 00 00 00       	mov    $0x5,%edx
    ecac:	3d 00 40 00 00       	cmp    $0x4000,%eax
    ecb1:	0f 8f 69 01 00 00    	jg     ee20 <__sprintf_chk@plt+0xa140>
    ecb7:	49 09 49 01          	or     %rcx,0x1(%r9)
    ecbb:	d4                   	(bad)  
    ecbc:	48 21 cf             	and    %rcx,%rdi
    ecbf:	6b 58 89 93          	imul   $0xffffff93,-0x77(%rax),%ebx
    ecc3:	a8 00                	test   $0x0,%al
    ecc5:	00 00                	add    %al,(%rax)
    ecc7:	49 c7 c7 0d fe ff 4c 	mov    $0x4cfffe0d,%r15
    ecce:	09 c1                	or     %eax,%ecx
    ecd0:	ff                   	(bad)  
    ecd1:	3a 36                	cmp    (%rsi),%dh
    ecd3:	01 00                	add    %eax,(%rax)
    ecd5:	00 0f                	add    %cl,(%rdi)
    ecd7:	85 cc                	test   %ecx,%esp
    ecd9:	01 48 c1             	add    %ecx,-0x3f(%rax)
    ecdc:	e0 26                	loopne ed04 <__sprintf_chk@plt+0xa024>
    ecde:	1d 49 31 df 00       	sbb    $0xdf3149,%eax
    ece3:	0f 85 45 0f 85 64    	jne    6485fc2e <obstack_alloc_failed_handler@@Base+0x6483db8e>
    ece9:	01 00                	add    %eax,(%rax)
    eceb:	00 fe                	add    %bh,%dh
    eced:	36 01 00             	ss add %eax,(%rax)
    ecf0:	4c 39 db             	cmp    %r11,%rbx
    ecf3:	85 f8                	test   %edi,%eax
    ecf5:	06                   	(bad)  
    ecf6:	00 00                	add    %al,(%rax)
    ecf8:	4c 89 e7             	mov    %r12,%rdi
    ecfb:	e8 a0 f9 ff ff       	call   e6a0 <__sprintf_chk@plt+0x99c0>
    ed00:	48 83 05 c0 38 01 00 	addq   $0x1,0x138c0(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    ed07:	01 
    ed08:	48 89 03             	mov    %rax,(%rbx)
    ed0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ed0f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    ed16:	00 00 
    ed18:	0f 85 51 0f 00 00    	jne    fc6f <__sprintf_chk@plt+0xaf8f>
    ed1e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ed22:	4c 89 e8             	mov    %r13,%rax
    ed25:	5b                   	pop    %rbx
    ed26:	41 5c                	pop    %r12
    ed28:	41 5d                	pop    %r13
    ed2a:	41 5e                	pop    %r14
    ed2c:	41 5f                	pop    %r15
    ed2e:	5d                   	pop    %rbp
    ed2f:	c3                   	ret    
    ed30:	40 84 f6             	test   %sil,%sil
    ed33:	0f 85 4d 39 f5 00    	jne    f62686 <obstack_alloc_failed_handler@@Base+0xf405e6>
    ed39:	80 3d 7a 39 01 00 00 	cmpb   $0x0,0x1397a(%rip)        # 226ba <obstack_alloc_failed_handler@@Base+0x61a>
    ed40:	0f 85 ca 00 00 00    	jne    ee10 <__sprintf_chk@plt+0xa130>
    ed46:	41 83 fe 03          	cmp    $0x3,%r14d
    ed4a:	0f 84 d0 0c 00 00    	je     fa20 <__sprintf_chk@plt+0xad40>
    ed50:	0f b6 05 ba 35 01 00 	movzbl 0x135ba(%rip),%eax        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
    ed57:	84 c0                	test   %al,%al
    ed59:	0f 85 e1 0b 00 00    	jne    f940 <__sprintf_chk@plt+0xac60>
    ed5f:	80 3d 53 39 01 00 00 	cmpb   $0x0,0x13953(%rip)        # 226b9 <obstack_alloc_failed_handler@@Base+0x619>
    ed66:	0f 84 a4 0c 00 00    	je     fa10 <__sprintf_chk@plt+0xad30>
    ed6c:	ba 4c 31 ea 00       	mov    $0xea314c,%edx
    ed71:	4c 0f a3 f2          	bt     %r14,%rdx
    ed75:	73 27                	jae    ed9e <__sprintf_chk@plt+0xa0be>
    ed77:	83 3d c6 39 01 4c 4c 	cmpl   $0x4c,0x4c0139c6(%rip)        # 4c022744 <obstack_alloc_failed_handler@@Base+0x4c0006a4>
    ed7e:	31 f6                	xor    %esi,%esi
    ed80:	c3                   	ret    
    ed81:	0d 00 00 80 3d       	or     $0x3d800000,%eax
    ed86:	bd 49 f7 fd 00       	mov    $0xfdf749,%ebp
    ed8b:	0f 4c 89 ce 00 00 49 	cmovl  0x490000ce(%rcx),%ecx
    ed92:	0f af c9             	imul   %ecx,%ecx
    ed95:	01 e9                	add    %ebp,%ecx
    ed97:	77 02                	ja     ed9b <__sprintf_chk@plt+0xa0bb>
    ed99:	00 00                	add    %al,(%rax)
    ed9b:	c0 75 72 0f          	shlb   $0xf,0x72(%rbp)
    ed9f:	85 9f 00 00 00 00    	test   %ebx,0x0(%rdi)
    eda5:	0f 84 65 0c 48 f7    	je     fffffffff748fa10 <obstack_alloc_failed_handler@@Base+0xfffffffff746d970>
    edab:	fe 85 0f 8c 74 e9    	incb   -0x168b73f1(%rbp)
    edb1:	49 ff c5             	inc    %r13
    edb4:	00 fe                	add    %bh,%dh
    edb6:	05 0f 48 c1 e7       	add    $0xe7c1480f,%eax
    edbb:	38 ff                	cmp    %bh,%bh
    edbd:	83 3d 40 35 01 00 03 	cmpl   $0x3,0x13540(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    edc4:	74 4a                	je     ee10 <__sprintf_chk@plt+0xa130>
    edc6:	80 3d 3b 35 01 00 00 	cmpb   $0x0,0x1353b(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    edcd:	0f 84 4c 89 ea ff    	je     ffffffffffeb771f <obstack_alloc_failed_handler@@Base+0xffffffffffe9567f>
    edd3:	bf 0e 00 00 48       	mov    $0x4800000e,%edi
    edd8:	89 c0                	mov    %eax,%eax
    edda:	d3 ff                	sar    %cl,%edi
    eddc:	ff 84 c0 75 48 21 d0 	incl   -0x2fdeb78b(%rax,%rax,8)
    ede3:	00 00                	add    %al,(%rax)
    ede5:	00 e8                	add    %ch,%al
    ede7:	35 d3 ff ff 84       	xor    $0x84ffffd3,%eax
    edec:	c0 75 21 bf          	shlb   $0xbf,0x21(%rbp)
    edf0:	11 00                	adc    %eax,(%rax)
    edf2:	00 00                	add    %al,(%rax)
    edf4:	e8 27 d3 49 0f       	call   f4ac120 <obstack_alloc_failed_handler@@Base+0xf48a080>
    edf9:	8f                   	(bad)  
    edfa:	e0 02                	loopne edfe <__sprintf_chk@plt+0xa11e>
    edfc:	00 00                	add    %al,(%rax)
    edfe:	84 b0 fd ff ff 19    	test   %dh,0x19fffffd(%rax)
    ee04:	d3 ff                	sar    %cl,%edi
    ee06:	ff 84 49 49 85 da fe 	incl   -0x1257ab7(%rcx,%rcx,2)
    ee0d:	ff                   	(bad)  
    ee0e:	ff 90 41 0f 85 f7    	call   *-0x87af0bf(%rax)
    ee14:	fe                   	(bad)  
    ee15:	ff                   	(bad)  
    ee16:	ff e5                	jmp    *%rbp
    ee18:	80 fa 2f             	cmp    $0x2f,%dl
    ee1b:	0f 84 d8 4d 21 c9    	je     ffffffffc9223bf9 <obstack_alloc_failed_handler@@Base+0xffffffffc9201b59>
    ee21:	45 0f b6 07          	movzbl (%r15),%r8d
    ee25:	4d 89 4d 85          	mov    %r9,-0x7b(%r13)
    ee29:	ce                   	(bad)  
    ee2a:	c0 0f 84             	rorb   $0x84,(%rdi)
    ee2d:	c8 fd ff ff          	enter  $0xfffd,$0xff
    ee31:	48 c1 49 ff c0       	rorq   $0xc0,-0x1(%rcx)
    ee36:	b5 0a                	mov    $0xa,%ch
    ee38:	fd                   	std    
    ee39:	eb 67                	jmp    eea2 <__sprintf_chk@plt+0xa1c2>
    ee3b:	88 95 0b fd 48 01    	mov    %dl,0x148fd0b(%rbp)
    ee41:	fb                   	sti    
    ee42:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    ee43:	00 49 89             	add    %cl,-0x77(%rcx)
    ee46:	cc                   	int3   
    ee47:	ff                   	(bad)  
    ee48:	e8 33 5a 49 01       	call   14a4880 <obstack_alloc_failed_handler@@Base+0x14827e0>
    ee4d:	f1                   	int1   
    ee4e:	89 ff                	mov    %edi,%edi
    ee50:	49 89 c5             	mov    %rax,%r13
    ee53:	e8 28 5a ff ff       	call   4880 <strlen@plt>
    ee58:	48                   	rex.W
    ee59:	49 c1 e0 26          	shl    $0x26,%r8
    ee5d:	b5 0a                	mov    $0xa,%ch
    ee5f:	fd                   	std    
    ee60:	ff                   	(bad)  
    ee61:	ff 0f                	decl   (%rdi)
    ee63:	b6 95                	mov    $0x95,%dh
    ee65:	0b fd                	or     %ebp,%edi
    ee67:	ff                   	(bad)  
    ee68:	ff 49 8d             	decl   -0x73(%rcx)
    ee6b:	44 0f 8c 8b 03 00 00 	rex.R jl f1fd <__sprintf_chk@plt+0xa51d>
    ee72:	00 eb                	add    %ch,%bl
    ee74:	80 ff 48             	cmp    $0x48,%bh
    ee77:	7c aa                	jl     ee23 <__sprintf_chk@plt+0xa143>
    ee79:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    ee7f:	0f 8c 51 ff ff ff    	jl     edd6 <__sprintf_chk@plt+0xa0f6>
    ee85:	29 fb                	sub    %edi,%ebx
    ee87:	39 fc                	cmp    %edi,%esp
    ee89:	0f 84 f1 49 c7 c7    	je     ffffffffc7c83880 <obstack_alloc_failed_handler@@Base+0xffffffffc7c617e0>
    ee8f:	48 01 fe             	add    %rdi,%rsi
    ee92:	ff 10                	call   *(%rax)
    ee94:	00 00                	add    %al,(%rax)
    ee96:	48 83 8c 24 f8 0f 00 	orq    $0x75,0xff8(%rsp)
    ee9d:	00 75 
    ee9f:	86 21                	xchg   %ah,(%rcx)
    eea1:	c2 c9 80             	ret    $0x80c9
    eea4:	00 00                	add    %al,(%rax)
    eea6:	48                   	rex.W
    eea7:	49 e9 55 fc ff ff    	rex.WB jmp eb02 <__sprintf_chk@plt+0x9e22>
    eead:	4d 09 fe             	or     %r15,%r14
    eeb0:	15 03 34 4d 09       	adc    $0x94d3403,%eax
    eeb5:	dc 8f 03 00 00 4c    	fmull  0x4c000003(%rdi)
    eebb:	49 0f af d5          	imul   %r13,%rdx
    eebf:	bd 30 fd 49 0f       	mov    $0xf49fd30,%ebp
    eec4:	8c 45 03             	mov    %es,0x3(%rbp)
    eec7:	4c 01 e8             	add    %r13,%rax
    eeca:	c7 c3 e9 02 00 0f    	mov    $0xf0002e9,%ebx
    eed0:	85 4f fc             	test   %ecx,-0x4(%rdi)
    eed3:	ff                   	(bad)  
    eed4:	ff 0f                	decl   (%rdi)
    eed6:	8f 2a 01 00          	(bad)
    eeda:	00 49 ff             	add    %cl,-0x1(%rcx)
    eedd:	c4                   	(bad)  
    eede:	4d 31 cd             	xor    %r9,%r13
    eee1:	00 39                	add    %bh,(%rcx)
    eee3:	05 48 85 c3 00       	add    $0xc38548,%eax
    eee8:	7d 06                	jge    eef0 <__sprintf_chk@plt+0xa210>
    eeea:	89 05 b4 e9 a9 fc    	mov    %eax,-0x356164c(%rip)        # fffffffffcaad8a4 <obstack_alloc_failed_handler@@Base+0xfffffffffca8b804>
    eef0:	ff                   	(bad)  
    eef1:	ff c6                	inc    %esi
    eef3:	34 01                	xor    $0x1,%al
    eef5:	00 85 0f 8f 14 ff    	add    %al,-0xeb70f1(%rbp)
    eefb:	ff                   	(bad)  
    eefc:	ff                   	(bad)  
    eefd:	ff 48 c1             	decl   -0x3f(%rax)
    ef00:	ee                   	out    %al,(%dx)
    ef01:	22 01                	and    (%rcx),%al
    ef03:	00 00                	add    %al,(%rax)
    ef05:	0f 4d 0f             	cmovge (%rdi),%ecx
    ef08:	e9 d9 fc ff ff       	jmp    ebe6 <__sprintf_chk@plt+0x9f06>
    ef0d:	fc                   	cld    
    ef0e:	ff                   	(bad)  
    ef0f:	ff 00                	incl   (%rax)
    ef11:	00 0f                	add    %cl,(%rdi)
    ef13:	85 28                	test   %ebp,(%rax)
    ef15:	09 00                	or     %eax,(%rax)
    ef17:	00 80 3d 09 45 0f    	add    %al,0xf45093d(%rax)
    ef1d:	85 63 01             	test   %esp,0x1(%rbx)
    ef20:	00 00                	add    %al,(%rax)
    ef22:	ff                   	(bad)  
    ef23:	ff 21                	jmp    *(%rcx)
    ef25:	f2 3d d4 33 01 00    	repnz cmp $0x133d4,%eax
    ef2b:	e9 65 fd ff ff       	jmp    ec95 <__sprintf_chk@plt+0x9fb5>
    ef30:	49 85 fd             	test   %rdi,%r13
    ef33:	00 00                	add    %al,(%rax)
    ef35:	e8 46 4d 09 d6       	call   ffffffffd60a3c80 <obstack_alloc_failed_handler@@Base+0xffffffffd6081be0>
    ef3a:	3b 05 60 33 01 00    	cmp    0x13360(%rip),%eax        # 222a0 <obstack_alloc_failed_handler@@Base+0x200>
    ef40:	0f 8f 62 06 48 09    	jg     948f5a8 <obstack_alloc_failed_handler@@Base+0x946d508>
    ef46:	c0 0d c0 33 01 00 85 	rorb   $0x85,0x133c0(%rip)        # 2230d <obstack_alloc_failed_handler@@Base+0x26d>
    ef4d:	c9                   	leave  
    ef4e:	0f 48 21             	cmovs  (%rcx),%esp
    ef51:	f0 ff                	lock (bad) 
    ef53:	ff c6                	inc    %esi
    ef55:	85 24 4c             	test   %esp,(%rsp,%rcx,2)
    ef58:	0f af 0f             	imul   (%rdi),%ecx
    ef5b:	8f                   	(bad)  
    ef5c:	71 ff                	jno    ef5d <__sprintf_chk@plt+0xa27d>
    ef5e:	ff                   	(bad)  
    ef5f:	ff 8d 49 ff c5 fa    	decl   -0x53a00b7(%rbp)
    ef65:	ff 49 b8             	decl   -0x48(%rcx)
    ef68:	cd cc                	int    $0xcc
    ef6a:	cc                   	int3   
    ef6b:	cc                   	int3   
    ef6c:	e9 64 02 00 00       	jmp    f1d5 <__sprintf_chk@plt+0xa4f5>
    ef71:	ff c8                	dec    %eax
    ef73:	48 83 ef 01          	sub    $0x1,%rdi
    ef77:	49 f7 e0             	mul    %r8
    ef7a:	48 89 c8             	mov    %rcx,%rax
    ef7d:	48 c1 ea 03          	shr    $0x3,%rdx
    ef81:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
    ef85:	48 01 f6             	add    %rsi,%rsi
    ef88:	48 29 f0             	sub    %rsi,%rax
    ef8b:	83 c0 30             	add    $0x30,%eax
    ef8e:	88 07                	mov    %al,(%rdi)
    ef90:	48 89 48 0f          	mov    %rcx,0xf(%rax)
    ef94:	af                   	scas   %es:(%rdi),%eax
    ef95:	ce                   	(bad)  
    ef96:	48 83 f8 09          	cmp    $0x9,%rax
    ef9a:	77 4d                	ja     efe9 <__sprintf_chk@plt+0xa309>
    ef9c:	89 fd                	mov    %edi,%ebp
    ef9e:	58                   	pop    %rax
    ef9f:	ff                   	(bad)  
    efa0:	ff                   	(bad)  
    efa1:	3b 05 a1 34 01 00    	cmp    0x134a1(%rip),%eax        # 22448 <obstack_alloc_failed_handler@@Base+0x3a8>
    efa7:	49 ff c4             	inc    %r12
    efaa:	05 99 34 01 00       	add    $0x13499,%eax
    efaf:	8b 43 30             	mov    0x30(%rbx),%eax
    efb2:	25 00 49 c1 e1       	and    $0xe1c14900,%eax
    efb7:	38 00                	cmp    %al,(%rax)
    efb9:	20 00                	and    %al,(%rax)
    efbb:	49 ff c6             	inc    %r14
    efbe:	f6 05 00 00 4c 49 31 	testb  $0x31,0x494c0000(%rip)        # 494cefc5 <obstack_alloc_failed_handler@@Base+0x494acf25>
    efc5:	49 c1 ec 37          	shr    $0x37,%r12
    efc9:	fb                   	sti    
    efca:	ff                   	(bad)  
    efcb:	ff 00                	incl   (%rax)
    efcd:	4c 8d b5 44 fd ff ff 	lea    -0x2bc(%rbp),%r14
    efd4:	48 b9 cd cc cc 49 39 	movabs $0xccccfe3949cccccd,%rcx
    efdb:	fe cc cc 
    efde:	4c 89 f7             	mov    %r14,%rdi
    efe1:	4c 89 f8             	mov    %r15,%rax
    efe4:	4c 89 fe             	mov    %r15,%rsi
    efe7:	0f 85 1a fd ff ff    	jne    ed07 <__sprintf_chk@plt+0xa027>
    efed:	ee                   	out    %al,(%dx)
    efee:	4d 89 f4             	mov    %r14,%r12
    eff1:	48 03 00             	add    (%rax),%rax
    eff4:	00 48 c1             	add    %cl,-0x3f(%rax)
    eff7:	e2 19                	loop   f012 <__sprintf_chk@plt+0xa332>
    eff9:	ff 09                	decl   (%rcx)
    effb:	c6                   	(bad)  
    effc:	0f 75 af 00 48 89 0f 	pcmpeqw 0xf894800(%rdi),%mm5
    f003:	8f e9 83 03          	(bad)
    f007:	00 00                	add    %al,(%rax)
    f009:	4d 85 cc             	test   %r9,%r12
    f00c:	48 c1 e3 08          	shl    $0x8,%rbx
    f010:	03 4c 8d 49          	add    0x49(%rbp,%rcx,4),%ecx
    f014:	f7 ff                	idiv   %edi
    f016:	01 c0                	add    %eax,%eax
    f018:	4c 29 c0             	sub    %r8,%rax
    f01b:	83 c0 30             	add    $0x30,%eax
    f01e:	88 07                	mov    %al,(%rdi)
    f020:	48 89 f0             	mov    %rsi,%rax
    f023:	49 f7 fd             	idiv   %r13
    f026:	29 c0                	sub    %eax,%eax
    f028:	f8                   	clc    
    f029:	09 77 d4             	or     %esi,-0x2c(%rdi)
    f02c:	4c 89 db             	mov    %r11,%rbx
    f02f:	49 0f 85 01 03 4d 85 	rex.WB jne ffffffff854df337 <obstack_alloc_failed_handler@@Base+0xffffffff854bd297>
    f036:	f0 00 44 39 c8       	lock add %al,-0x38(%rcx,%rdi,1)
    f03b:	7e 09                	jle    f046 <__sprintf_chk@plt+0xa366>
    f03d:	89 05 f5 48 c1 eb    	mov    %eax,-0x143eb70b(%rip)        # ffffffffebc23938 <obstack_alloc_failed_handler@@Base+0xffffffffebc01898>
    f043:	06                   	(bad)  
    f044:	89 c1                	mov    %eax,%ecx
    f046:	4c 89 f9             	mov    %r15,%rcx
    f049:	c6 85 44 fd ff ff 00 	movb   $0x0,-0x2bc(%rbp)
    f050:	41 0f b6 48 09       	movzbl 0x9(%r8),%ecx
    f055:	f6 df                	neg    %bh
    f057:	49                   	rex.WB
    f058:	4c                   	rex.WR
    f059:	48 29 d8             	sub    %rbx,%rax
    f05c:	cc                   	int3   
    f05d:	cc                   	int3   
    f05e:	cc                   	int3   
    f05f:	cc                   	int3   
    f060:	cc                   	int3   
    f061:	48 c1 e9 0f          	shr    $0xf,%rcx
    f065:	85 b7 fd ff ff 29    	test   %esi,0x29fffffd(%rdi)
    f06b:	48                   	rex.W
    f06c:	48 85 da             	test   %rbx,%rdx
    f06f:	55                   	push   %rbp
    f070:	01 00                	add    %eax,(%rax)
    f072:	00 48 83             	add    %cl,-0x7d(%rax)
    f075:	ef                   	out    %eax,(%dx)
    f076:	01 48 c1             	add    %ecx,-0x3f(%rax)
    f079:	e1 08                	loope  f083 <__sprintf_chk@plt+0xa3a3>
    f07b:	89 c8                	mov    %ecx,%eax
    f07d:	48                   	rex.W
    f07e:	4d 21 c6             	and    %r8,%r14
    f081:	48                   	rex.W
    f082:	48 c7 c3 da 01 00 00 	mov    $0x1da,%rbx
    f089:	29 f0                	sub    %esi,%eax
    f08b:	83 c0 30             	add    $0x30,%eax
    f08e:	88 49 01             	mov    %cl,0x1(%rcx)
    f091:	d3 c8                	ror    %cl,%eax
    f093:	48 89 d1             	mov    %rdx,%rcx
    f096:	48 83 f8 09          	cmp    $0x9,%rax
    f09a:	77 d4                	ja     f070 <__sprintf_chk@plt+0xa390>
    f09c:	0f 8f e1 fc ff ff    	jg     ed83 <__sprintf_chk@plt+0xa0a3>
    f0a2:	ff 4c 39 d1          	decl   -0x2f(%rcx,%rdi,1)
    f0a6:	7c 00                	jl     f0a8 <__sprintf_chk@plt+0xa3c8>
    f0a8:	49 f7 fe             	idiv   %r14
    f0ab:	33 48 f7             	xor    -0x9(%rax),%ecx
    f0ae:	f8                   	clc    
    f0af:	8b 8d 0c fd ff ff    	mov    -0x2f4(%rbp),%ecx
    f0b5:	39 4c 0f af          	cmp    %ecx,-0x51(%rdi,%rcx,1)
    f0b9:	e8 4c 39 fe 01       	call   1ff2a0a <obstack_alloc_failed_handler@@Base+0x1fd096a>
    f0be:	00 89 c2 41 8d 4d    	add    %cl,0x4d8d41c2(%rcx)
    f0c4:	21 ed                	and    %ebp,%ebp
    f0c6:	3b 4c 29 ce          	cmp    -0x32(%rcx,%rbp,1),%ecx
    f0ca:	01 00                	add    %eax,(%rax)
    f0cc:	0f 8e 17 fc ff ff    	jle    ece9 <__sprintf_chk@plt+0xa009>
    f0d2:	e9 25 05 4c 21       	jmp    214cf5fc <obstack_alloc_failed_handler@@Base+0x214ad55c>
    f0d7:	e6 48                	out    %al,$0x48
    f0d9:	01 f8                	add    %edi,%eax
    f0db:	00 00                	add    %al,(%rax)
    f0dd:	00 00                	add    %al,(%rax)
    f0df:	4d 09 e8             	or     %r13,%r8
    f0e2:	fa                   	cli    
    f0e3:	05 0f 85 41 fb       	add    $0xfb41850f,%eax
    f0e8:	ff                   	(bad)  
    f0e9:	ff 4c 89 48          	decl   0x48(%rcx,%rcx,4)
    f0ed:	49 ff c5             	inc    %r13
    f0f0:	31 48 49             	xor    %ecx,0x49(%rax)
    f0f3:	c1 ea 0c             	shr    $0xc,%edx
    f0f6:	9c                   	pushf  
    f0f7:	ff 0f                	decl   (%rdi)
    f0f9:	84 ac 01 48 85 f8 00 	test   %ch,0xf88548(%rcx,%rax,1)
    f100:	e8 49 c7 c6 58       	call   58c7b84e <obstack_alloc_failed_handler@@Base+0x58c597ae>
    f105:	fd                   	std    
    f106:	ff 4c 29 f1          	decl   -0xf(%rcx,%rbp,1)
    f10a:	fb                   	sti    
    f10b:	ff 49 09             	decl   0x9(%rcx)
    f10e:	de 00                	fiadds (%rax)
    f110:	00 00                	add    %al,(%rax)
    f112:	48 8d 35 2b aa 00 00 	lea    0xaa2b(%rip),%rsi        # 19b44 <_obstack_memory_used@@Base+0x9394>
    f119:	31 ff                	xor    %edi,%edi
    f11b:	e8 40 57 ff ff       	call   4860 <dcgettext@plt>
    f120:	44 8b bd 0c fd ff ff 	mov    -0x2f4(%rbp),%r15d
    f127:	4c 89 ea             	mov    %r13,%rdx
    f12a:	48 29 d7             	sub    %rdx,%rdi
    f12d:	48 89 c6             	mov    %rax,%rsi
    f130:	41 e9 9a 02 00 00    	rex.B jmp f3d0 <__sprintf_chk@plt+0xa6f0>
    f136:	b0 ff                	mov    $0xff,%al
    f138:	4d 39 eb             	cmp    %r13,%r11
    f13b:	ff 49 21             	decl   0x21(%rcx)
    f13e:	d9 fb                	fsincos 
    f140:	ff                   	(bad)  
    f141:	ff                   	(bad)  
    f142:	e9 b1 fb ff ff       	jmp    ecf8 <__sprintf_chk@plt+0xa018>
    f147:	66 0f 1f 84 00 00 0f 	nopw   0x28f0f00(%rax,%rax,1)
    f14e:	8f 02 
    f150:	03 00                	add    (%rax),%eax
    f152:	00 c9                	add    %cl,%cl
    f154:	31 01                	xor    %eax,(%rcx)
    f156:	00 48 39             	add    %cl,0x39(%rax)
    f159:	43 7f 05             	rex.XB jg f161 <__sprintf_chk@plt+0xa481>
    f15c:	84 4c 29 d3          	test   %cl,-0x2d(%rcx,%rbp,1)
    f160:	f7 fa                	idiv   %edx
    f162:	89 c3                	mov    %eax,%ebx
    f164:	b0 00                	mov    $0x0,%al
    f166:	00 00                	add    %al,(%rax)
    f168:	4c 89 ef             	mov    %r13,%rdi
    f16b:	0f 85 95 00 00 4c    	jne    4c00f206 <obstack_alloc_failed_handler@@Base+0x4bfed166>
    f171:	89 f3                	mov    %esi,%ebx
    f173:	e9 02 00 00 e8       	jmp    ffffffffe800f17a <obstack_alloc_failed_handler@@Base+0xffffffffe7fed0da>
    f178:	e4 5a                	in     $0x5a,%al
    f17a:	ff                   	(bad)  
    f17b:	ff 4c 48 c1          	decl   -0x3f(%rax,%rcx,2)
    f17f:	e0 20                	loopne f1a1 <__sprintf_chk@plt+0xa4c1>
    f181:	e9 95 01 00 00       	jmp    f31b <__sprintf_chk@plt+0xa63b>
    f186:	85 c0                	test   %eax,%eax
    f188:	0f                   	(bad)  
    f189:	0f 85 a7 03 00 00    	jne    f536 <__sprintf_chk@plt+0xa856>
    f18f:	c3                   	ret    
    f190:	7c 2b                	jl     f1bd <__sprintf_chk@plt+0xa4dd>
    f192:	00 00                	add    %al,(%rax)
    f194:	00 48 c1             	add    %cl,-0x3f(%rax)
    f197:	e8 29 4c 0f 85       	call   ffffffff85103dc5 <obstack_alloc_failed_handler@@Base+0xffffffff850e1d25>
    f19c:	b6 49                	mov    $0x49,%dh
    f19e:	f7 f9                	idiv   %ecx
    f1a0:	ff 8b 15 65 31 01    	decl   0x1316515(%rbx)
    f1a6:	0f 8c ec fc ff ff    	jl     ee98 <__sprintf_chk@plt+0xa1b8>
    f1ac:	7f 0f                	jg     f1bd <__sprintf_chk@plt+0xa4dd>
    f1ae:	84 b9 03 00 00 15    	test   %bh,0x15000003(%rcx)
    f1b4:	03 00                	add    (%rax),%eax
    f1b6:	00 8b 43 30 c6 05    	add    %cl,0x5c63043(%rbx)
    f1bc:	8b 32                	mov    (%rdx),%esi
    f1be:	01 00                	add    %eax,(%rax)
    f1c0:	01 c7                	add    %eax,%edi
    f1c2:	83 bc 49 c7 c1 7f 03 	cmpl   $0x0,0x37fc1c7(%rcx,%rcx,2)
    f1c9:	00 
    f1ca:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 1e1d0 <_obstack_memory_used@@Base+0xda20>
    f1d0:	e9 49 c1 ee 05       	jmp    5efb31e <obstack_alloc_failed_handler@@Base+0x5ed927e>
    f1d5:	ff 4c 0f af          	decl   -0x51(%rdi,%rcx,1)
    f1d9:	e6 39                	out    %al,$0x39
    f1db:	c0 3d 67 35 01 00 00 	sarb   $0x0,0x13567(%rip)        # 22749 <obstack_alloc_failed_handler@@Base+0x6a9>
    f1e2:	4c 0f af ef          	imul   %rdi,%r13
    f1e6:	7f ae                	jg     f196 <__sprintf_chk@plt+0xa4b6>
    f1e8:	4d 01 ce             	add    %r9,%r14
    f1eb:	21 e1                	and    %esp,%ecx
    f1ed:	ff                   	(bad)  
    f1ee:	ff                   	(bad)  
    f1ef:	e8 4c d2 ff ff       	call   c440 <__sprintf_chk@plt+0x7760>
    f1f4:	48 89 43 08          	mov    %rax,0x8(%rbx)
    f1f8:	49 89 c7             	mov    %rax,%r15
    f1fb:	48 31 c8             	xor    %rcx,%rax
    f1fe:	36 fc                	ss cld 
    f200:	ff                   	(bad)  
    f201:	ff 48 ff             	decl   -0x1(%rax)
    f204:	c3                   	ret    
    f205:	80 3f 2f             	cmpb   $0x2f,(%rdi)
    f208:	0f                   	(bad)  
    f209:	0f 85 1e fd ff 48    	jne    4900ef2d <obstack_alloc_failed_handler@@Base+0x48fece8d>
    f20f:	89 d7                	mov    %edx,%edi
    f211:	45 00 31             	add    %r14b,(%r9)
    f214:	f6 4d 89 ee          	testb  $0xee,-0x77(%rbp)
    f218:	3c 48                	cmp    $0x48,%al
    f21a:	21 d0                	and    %edx,%eax
    f21c:	39 cb                	cmp    %ecx,%ebx
    f21e:	75 0d                	jne    f22d <__sprintf_chk@plt+0xa54d>
    f220:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
    f225:	49 83 c6 01          	add    $0x1,%r14
    f229:	3c 2f                	cmp    $0x2f,%al
    f22b:	74 f3                	je     f220 <__sprintf_chk@plt+0xa540>
    f22d:	84 c0                	test   %al,%al
    f22f:	74 39                	je     f26a <__sprintf_chk@plt+0xa58a>
    f231:	4c 89 f2             	mov    %r14,%rdx
    f234:	4d 85 f3             	test   %r14,%r11
    f237:	1d 0f 1f 84 48       	sbb    $0x48841f0f,%eax
    f23c:	48 89 f7             	mov    %rsi,%rdi
    f23f:	00 49 c7             	add    %cl,-0x39(%rcx)
    f242:	c7                   	(bad)  
    f243:	49 c7 c1 87 fc ff ff 	mov    $0xfffffffffffffc87,%r9
    f24a:	b6 42                	mov    $0x42,%dh
    f24c:	01 48 83             	add    %ecx,-0x7d(%rax)
    f24f:	c2 01 4d             	ret    $0x4d01
    f252:	29 d8                	sub    %ebx,%eax
    f254:	15 eb 0f 8c 5a       	adc    $0x5a8c0feb,%eax
    f259:	fd                   	std    
    f25a:	ff                   	(bad)  
    f25b:	ff 48 c1             	decl   -0x3f(%rax)
    f25e:	e9 2a 01 b9 01       	jmp    1b9f38d <obstack_alloc_failed_handler@@Base+0x1b7d2ed>
    f263:	00 00                	add    %al,(%rax)
    f265:	00 84 49 f7 48 09 c9 	add    %al,-0x36f6b709(%rcx,%rcx,2)
    f26c:	ee                   	out    %al,(%dx)
    f26d:	eb 4c                	jmp    f2bb <__sprintf_chk@plt+0xa5db>
    f26f:	0f af eb             	imul   %ebx,%ebp
    f272:	ff                   	(bad)  
    f273:	ff                   	(bad)  
    f274:	ff 2f                	ljmp   *(%rdi)
    f276:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    f27a:	0f 85 c6 04 00 00    	jne    f746 <__sprintf_chk@plt+0xaa66>
    f280:	49 89 c6             	mov    %rax,%r14
    f283:	48 89 c9             	mov    %rcx,%rcx
    f286:	77 e8                	ja     f270 <__sprintf_chk@plt+0xa590>
    f288:	4d                   	rex.WRB
    f289:	4c 29 fe             	sub    %r15,%rsi
    f28c:	8c c2                	mov    %es,%edx
    f28e:	00 00                	add    %al,(%rax)
    f290:	00 4c 89 ff          	add    %cl,-0x1(%rcx,%rcx,4)
    f294:	e8 07 f4 ff ff       	call   e6a0 <__sprintf_chk@plt+0x99c0>
    f299:	49 89 49 29          	mov    %rcx,0x29(%r9)
    f29d:	49 0f 84 35 01 00 00 	rex.WB je f3d9 <__sprintf_chk@plt+0xa6f9>
    f2a4:	7e fd                	jle    f2a3 <__sprintf_chk@plt+0xa5c3>
    f2a6:	ff                   	(bad)  
    f2a7:	ff ca                	dec    %edx
    f2a9:	89 d7                	mov    %edx,%edi
    f2ab:	0f 8c 6b 01 00 00    	jl     f41c <__sprintf_chk@plt+0xa73c>
    f2b1:	e3 35                	jrcxz  f2e8 <__sprintf_chk@plt+0xa608>
    f2b3:	23 00                	and    (%rax),%eax
    f2b5:	f0 00 00             	lock add %al,(%rax)
    f2b8:	3d 00 0f 8f f1       	cmp    $0xf18f0f00,%eax
    f2bd:	fc                   	cld    
    f2be:	49 c7 c6 6e fd 4c 21 	mov    $0x214cfd6e,%r14
    f2c5:	c0 00 00             	rolb   $0x0,(%rax)
    f2c8:	e9 ea f9 ff ff       	jmp    ecb7 <__sprintf_chk@plt+0x9fd7>
    f2cd:	0f 1f 00             	nopl   (%rax)
    f2d0:	80 3d 31 30 01 00 00 	cmpb   $0x0,0x13031(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    f2d7:	0f 84 9a f9 ff ff    	je     ec77 <__sprintf_chk@plt+0x9f97>
    f2dd:	bf 15 4d 21 dc       	mov    $0xdc214d15,%edi
    f2e2:	e8 39 ce ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
    f2e7:	48 f7 fe             	idiv   %rsi
    f2ea:	84 eb                	test   %ch,%bl
    f2ec:	cd ff                	int    $0xff
    f2ee:	ff                   	(bad)  
    f2ef:	e8 1c 54 49 c1       	call   ffffffffc14a4710 <obstack_alloc_failed_handler@@Base+0xffffffffc1482670>
    f2f4:	e9 2d 73 18 4c       	jmp    4c196626 <obstack_alloc_failed_handler@@Base+0x4c174586>
    f2f9:	3b 35 29 30 49 c1    	cmp    -0x3eb6cfd7(%rip),%esi        # ffffffffc14a2328 <obstack_alloc_failed_handler@@Base+0xffffffffc1480288>
    f2ff:	ef                   	out    %eax,(%dx)
    f300:	03 5f 0f             	add    0xf(%rdi),%ebx
    f303:	8c 26                	mov    %fs,(%rsi)
    f305:	ff                   	(bad)  
    f306:	ff                   	(bad)  
    f307:	ff 89 35 1a 30 01    	decl   0x1301a35(%rcx)
    f30d:	00 c6                	add    %al,%dh
    f30f:	83 c0 00             	add    $0x0,%eax
    f312:	00 00                	add    %al,(%rax)
    f314:	0f 8c 1b fe 49 c1    	jl     ffffffffc14af135 <obstack_alloc_failed_handler@@Base+0xffffffffc148d095>
    f31a:	ef                   	out    %eax,(%dx)
    f31b:	10 1f                	adc    %bl,(%rdi)
    f31d:	44                   	rex.R
    f31e:	49 31 cb             	xor    %rcx,%r11
    f321:	bd 0c 4c 85 c6       	mov    $0xc6854c0c,%ebp
    f326:	48 c7 c3 13 fe ff ff 	mov    $0xfffffffffffffe13,%rbx
    f32d:	41 89 c0             	mov    %eax,%r8d
    f330:	31 c9                	xor    %ecx,%ecx
    f332:	4c 89 fa             	mov    %r15,%rdx
    f335:	4c 89 48 c1          	mov    %r9,-0x3f(%rax)
    f339:	ee                   	out    %al,(%dx)
    f33a:	07                   	(bad)  
    f33b:	ff                   	(bad)  
    f33c:	ff 48 09             	decl   0x9(%rax)
    f33f:	0f 8c d5 fe ff ff    	jl     f21a <__sprintf_chk@plt+0xa53a>
    f345:	4c 85 ef             	test   %r13,%rdi
    f348:	48 c7 c1 4c 00 00 00 	mov    $0x4c,%rcx
    f34f:	ff 41 83             	incl   -0x7d(%rcx)
    f352:	fa                   	cli    
    f353:	03 74 1d 85          	add    -0x7b(%rbp,%rbx,1),%esi
    f357:	0f 84 23 fd ff ff    	je     f080 <__sprintf_chk@plt+0xa3a0>
    f35d:	4d 85 d5             	test   %r10,%r13
    f360:	4d 89 dc             	mov    %r11,%r12
    f363:	00 f0                	add    %dh,%al
    f365:	00 00                	add    %al,(%rax)
    f367:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    f36d:	0f 85 4d 85 f3 ff    	jne    fffffffffff478c0 <obstack_alloc_failed_handler@@Base+0xfffffffffff25820>
    f373:	49 01 da             	add    %rbx,%r10
    f376:	f6 02 00             	testb  $0x0,(%rdx)
    f379:	00 00                	add    %al,(%rax)
    f37b:	44 0f b6 bd 0c fd ff 	movzbl -0x2f4(%rbp),%r15d
    f382:	ff 
    f383:	e9 cb f8 e9 f7       	jmp    fffffffff7eaec53 <obstack_alloc_failed_handler@@Base+0xfffffffff7e8cbb3>
    f388:	01 00                	add    %eax,(%rax)
    f38a:	00 00                	add    %al,(%rax)
    f38c:	00 0f                	add    %cl,(%rdi)
    f38e:	85 6b 02             	test   %ebp,0x2(%rbx)
    f391:	00 00                	add    %al,(%rax)
    f393:	14 24                	adc    $0x24,%al
    f395:	80 fa 2f             	cmp    $0x2f,%dl
    f398:	0f                   	(bad)  
    f399:	0f 85 75 02 00 00    	jne    f614 <__sprintf_chk@plt+0xa934>
    f39f:	0f b6 07             	movzbl (%rdi),%eax
    f3a2:	4d 89 e5             	mov    %r12,%r13
    f3a5:	45 84 48 09          	test   %r9b,0x9(%r8)
    f3a9:	49 f7 fe             	idiv   %r14
    f3ac:	ff                   	(bad)  
    f3ad:	ff                   	(bad)  
    f3ae:	e9 98 03 00 00       	jmp    f74b <__sprintf_chk@plt+0xaa6b>
    f3b3:	31 00                	xor    %eax,(%rax)
    f3b5:	00 48 89             	add    %cl,-0x77(%rax)
    f3b8:	43 10 48 85          	rex.XB adc %cl,-0x7b(%r8)
    f3bc:	c0 0f 0f             	rorb   $0xf,(%rdi)
    f3bf:	85 4b 01             	test   %ecx,0x1(%rbx)
    f3c2:	00 00                	add    %al,(%rax)
    f3c4:	0f 84 49 c7 c0 3b    	je     3bc1bb13 <obstack_alloc_failed_handler@@Base+0x3bbf9a73>
    f3ca:	fe                   	(bad)  
    f3cb:	ff                   	(bad)  
    f3cc:	ff 5b a7             	lcall  *-0x59(%rbx)
    f3cf:	00 00                	add    %al,(%rax)
    f3d1:	e8 8a 54 ff ff       	call   4860 <dcgettext@plt>
    f3d6:	48                   	rex.W
    f3d7:	49 01 ff             	add    %rdi,%r15
    f3da:	fd                   	std    
    f3db:	ff                   	(bad)  
    f3dc:	ff 4c 89 ea          	decl   -0x16(%rcx,%rcx,4)
    f3e0:	48 89 c6             	mov    %rax,%rsi
    f3e3:	e8 78 49 0f af       	call   ffffffffaf103d60 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e1cc0>
    f3e8:	49 09 df             	or     %rbx,%r15
    f3eb:	4c 0f af f2          	imul   %rdx,%r14
    f3ef:	00 49 f7             	add    %cl,-0x9(%rcx)
    f3f2:	f9                   	stc    
    f3f3:	0f 84 40 02 00 00    	je     f639 <__sprintf_chk@plt+0xa959>
    f3f9:	4c 0f af ef          	imul   %rdi,%r13
    f3fd:	4c 31 c1             	xor    %r8,%rcx
    f400:	ff 48 01             	decl   0x1(%rax)
    f403:	d1 49 c1             	rorl   -0x3f(%rcx)
    f406:	ee                   	out    %al,(%dx)
    f407:	3b cc                	cmp    %esp,%ecx
    f409:	cc                   	int3   
    f40a:	cc                   	int3   
    f40b:	cc                   	int3   
    f40c:	0f 1f 40 00          	nopl   0x0(%rax)
    f410:	48 89 c8             	mov    %rcx,%rax
    f413:	49 89 d6             	mov    %rdx,%r14
    f416:	75 3e                	jne    f456 <__sprintf_chk@plt+0xa776>
    f418:	f7 e0                	mul    %eax
    f41a:	48 89 c8             	mov    %rcx,%rax
    f41d:	48 c1 ea 03          	shr    $0x3,%rdx
    f421:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
    f425:	48 01 f6             	add    %rsi,%rsi
    f428:	48 29 f0             	sub    %rsi,%rax
    f42b:	83 c0 30             	add    $0x30,%eax
    f42e:	49 ff c3             	inc    %r11
    f431:	89 c8                	mov    %ecx,%eax
    f433:	48 89 d1             	mov    %rdx,%rcx
    f436:	48 83 f8 4d          	cmp    $0x4d,%rax
    f43a:	21 ef                	and    %ebp,%edi
    f43c:	ca 3f 54             	lret   $0x543f
    f43f:	ff                   	(bad)  
    f440:	ff                   	(bad)  
    f441:	3b 05 61 2e 01 00    	cmp    0x12e61(%rip),%eax        # 222a8 <obstack_alloc_failed_handler@@Base+0x208>
    f447:	4c 0f af c6          	imul   %rsi,%r8
    f44b:	49                   	rex.WB
    f44c:	4c 01 c2             	add    %r8,%rdx
    f44f:	55                   	push   %rbp
    f450:	2e 01 0f             	cs add %ecx,(%rdi)
    f453:	8f 04 ff             	pop    (%rdi,%rdi,8)
    f456:	ff                   	(bad)  
    f457:	ff 0f                	decl   (%rdi)
    f459:	1f                   	(bad)  
    f45a:	84 00                	test   %al,(%rax)
    f45c:	00 00                	add    %al,(%rax)
    f45e:	00 00                	add    %al,(%rax)
    f460:	e8 2b 58 ff ff       	call   4c90 <lgetfilecon@plt>
    f465:	4c                   	rex.WR
    f466:	48 c1 e7 0f          	shl    $0xf,%rdi
    f46a:	01 00                	add    %eax,(%rax)
    f46c:	00 ff                	add    %bh,%bh
    f46e:	ff 48 c1             	decl   -0x3f(%rax)
    f471:	ee                   	out    %al,(%dx)
    f472:	2f                   	(bad)  
    f473:	fe                   	(bad)  
    f474:	ff                   	(bad)  
    f475:	ff 0f                	decl   (%rdi)
    f477:	8c 46 fc             	mov    %es,-0x4(%rsi)
    f47a:	ff                   	(bad)  
    f47b:	ff 49 89             	decl   -0x77(%rcx)
    f47e:	c7                   	(bad)  
    f47f:	8b 00                	mov    (%rax),%eax
    f481:	83 f8 5f             	cmp    $0x5f,%eax
    f484:	0f 94 c1             	sete   %cl
    f487:	83 48 0f af          	orl    $0xffffffaf,0xf(%rax)
    f48b:	c2 c2 83             	ret    $0x83c2
    f48e:	e8 16 09 ca 83       	call   ffffffff83cafda9 <obstack_alloc_failed_handler@@Base+0xffffffff83c8dd09>
    f493:	e0 ef                	loopne f484 <__sprintf_chk@plt+0xa7a4>
    f495:	74 48                	je     f4df <__sprintf_chk@plt+0xa7ff>
    f497:	29 49 f7             	sub    %ecx,-0x9(%rcx)
    f49a:	fc                   	cld    
    f49b:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f49f:	48 89 05 7a 2e 01 49 	mov    %rax,0x49012e7a(%rip)        # 49022320 <obstack_alloc_failed_handler@@Base+0x49000280>
    f4a6:	39 d2                	cmp    %edx,%edx
    f4a8:	05 77 2b 49 0f       	add    $0xf492b77,%eax
    f4ad:	84 f9                	test   %bh,%cl
    f4af:	fd                   	std    
    f4b0:	ff                   	(bad)  
    f4b1:	ff 00                	incl   (%rax)
    f4b3:	00 84 4c 85 f7 49 29 	add    %al,0x2949f785(%rsp,%rcx,2)
    f4ba:	f5                   	cmc    
    f4bb:	00 44 8b 15          	add    %al,0x15(%rbx,%rcx,4)
    f4bf:	49                   	rex.WB
    f4c0:	2e 49 21 f4          	cs and %rsi,%r12
    f4c4:	75 84                	jne    f44a <__sprintf_chk@plt+0xa76a>
    f4c6:	0f 84 a4 49 21 fc    	je     fffffffffc223e70 <obstack_alloc_failed_handler@@Base+0xfffffffffc201dd0>
    f4cc:	c1 48 ff c3          	rorl   $0xc3,-0x1(%rax)
    f4d0:	00 00                	add    %al,(%rax)
    f4d2:	00 00                	add    %al,(%rax)
    f4d4:	00 00                	add    %al,(%rax)
    f4d6:	8b 43 30             	mov    0x30(%rbx),%eax
    f4d9:	25 00 f0 0f 8f       	and    $0x8f0ff000,%eax
    f4de:	7c 02                	jl     f4e2 <__sprintf_chk@plt+0xa802>
    f4e0:	00 00                	add    %al,(%rax)
    f4e2:	00 0f                	add    %cl,(%rdi)
    f4e4:	85 be f7 ff ff 4c    	test   %edi,0x4cfffff7(%rsi)
    f4ea:	39 e0                	cmp    %esp,%eax
    f4ec:	1c 2e                	sbb    $0x2e,%al
    f4ee:	49 f7 fd             	idiv   %r13
    f4f1:	85 c9                	test   %ecx,%ecx
    f4f3:	0f 84 ef fc ff ff    	je     f1e8 <__sprintf_chk@plt+0xa508>
    f4f9:	e9 dd fc 0f 8f       	jmp    ffffffff8f10f1db <obstack_alloc_failed_handler@@Base+0xffffffff8f0ed13b>
    f4fe:	8a 00                	mov    (%rax),%al
    f500:	00 00                	add    %al,(%rax)
    f502:	01 00                	add    %eax,(%rax)
    f504:	00 49 f7             	add    %cl,-0x9(%rcx)
    f507:	e5 0f                	in     $0xf,%eax
    f509:	90                   	nop
    f50a:	c2 0f b6             	ret    $0xb60f
    f50d:	d2 48 4c             	rorb   %cl,0x4c(%rax)
    f510:	89 cb                	mov    %ecx,%ebx
    f512:	48 f7 fb             	idiv   %rbx
    f515:	00 00                	add    %al,(%rax)
    f517:	48                   	rex.W
    f518:	4c 09 ce             	or     %r9,%rsi
    f51b:	49 c7 c0 97 02 00 0f 	mov    $0xf000297,%r8
    f522:	84 44 fc ff          	test   %al,-0x1(%rsp,%rdi,8)
    f526:	ff 04 80             	incl   (%rax,%rax,4)
    f529:	48 c1 e0 04          	shl    $0x4,%rax
    f52d:	48 89 c2             	mov    %rax,%rdx
    f530:	75 09                	jne    f53b <__sprintf_chk@plt+0xa85b>
    f532:	48                   	rex.W
    f533:	48 09 f9             	or     %rdi,%rcx
    f536:	85 7d 05             	test   %edi,0x5(%rbp)
    f539:	00 00                	add    %al,(%rax)
    f53b:	4c 21 d3             	and    %r10,%rbx
    f53e:	48                   	rex.W
    f53f:	4c                   	rex.WR
    f540:	49 ff c3             	inc    %r11
    f543:	ff                   	(bad)  
    f544:	ff                   	(bad)  
    f545:	e8 c6 55 ff ff       	call   4b10 <realloc@plt>
    f54a:	48 89 c7             	mov    %rax,%rdi
    f54d:	48                   	rex.W
    f54e:	4d 89 df             	mov    %r11,%r15
    f551:	10 48 8b             	adc    %cl,-0x75(%rax)
    f554:	95                   	xchg   %eax,%ebp
    f555:	00 fd                	add    %bh,%ch
    f557:	ff 4d 39             	decl   0x39(%rbp)
    f55a:	e1 d2                	loope  f52e <__sprintf_chk@plt+0xa84e>
    f55c:	0f 85 49 39 cb 00    	jne    cc2eab <obstack_alloc_failed_handler@@Base+0xca0e0b>
    f562:	48 8d 0c 7c          	lea    (%rsp,%rdi,2),%rcx
    f566:	cf                   	iret   
    f567:	89 3d 63 30 4c 01    	mov    %edi,0x14c3063(%rip)        # 14d25d0 <obstack_alloc_failed_handler@@Base+0x14b0530>
    f56d:	f6 89 0d 49 f7 fe 00 	testb  $0x0,-0x108b6f3(%rcx)
    f574:	e9 e7 f5 ff ff       	jmp    eb60 <__sprintf_chk@plt+0x9e80>
    f579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f580:	4c 89 e7             	mov    %r12,%rdi
    f583:	e8 68 ae ff ff       	call   a3f0 <__sprintf_chk@plt+0x5710>
    f588:	0f b6 d0             	movzbl %al,%edx
    f58b:	89 93 c4 00 00 00    	mov    %edx,0xc4(%rbx)
    f591:	84 c0                	test   %al,%al
    f593:	0f 84 29 f6 ff ff    	je     ebc2 <__sprintf_chk@plt+0x9ee2>
    f599:	0f 84 4a fd ff 4d    	je     4e00f2e9 <obstack_alloc_failed_handler@@Base+0x4dfed249>
    f59f:	0f 4d 01             	cmovge (%rcx),%eax
    f5a2:	49 ff c1             	inc    %r9
    f5a5:	0f 1f 00             	nopl   (%rax)
    f5a8:	89 05 f2 2c 01 00    	mov    %eax,0x12cf2(%rip)        # 222a0 <obstack_alloc_failed_handler@@Base+0x200>
    f5ae:	e9 93 f9 ff ff       	jmp    ef46 <__sprintf_chk@plt+0xa266>
    f5b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f5b8:	4c 8b 05 b9 2a 01 00 	mov    0x12ab9(%rip),%r8        # 22078 <_obstack_memory_used@@Base+0x118c8>
    f5bf:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    f5c3:	48 8d b5 30 fd ff ff 	lea    -0x2d0(%rbp),%rsi
    f5ca:	b9 48 85 c3 00       	mov    $0xc38548,%ecx
    f5cf:	8b 15 9b 2e 01 00    	mov    0x12e9b(%rip),%edx        # 22470 <obstack_alloc_failed_handler@@Base+0x3d0>
    f5d5:	e8 46 d7 ff ff       	call   cd20 <__sprintf_chk@plt+0x8040>
    f5da:	48                   	rex.W
    f5db:	4d 0f af fa          	imul   %r10,%r15
    f5df:	ff c7                	inc    %edi
    f5e1:	00 00                	add    %al,(%rax)
    f5e3:	ff 49 89             	decl   -0x77(%rcx)
    f5e6:	49 f7 ff             	idiv   %r15
    f5e9:	89 c6                	mov    %eax,%esi
    f5eb:	49 89 f7             	mov    %rsi,%r15
    f5ee:	00 00                	add    %al,(%rax)
    f5f0:	39 05 3a 2e 01 00    	cmp    %eax,0x12e3a(%rip)        # 22430 <obstack_alloc_failed_handler@@Base+0x390>
    f5f6:	0f 85 dd 02 00 00    	jne    f8d9 <__sprintf_chk@plt+0xabf9>
    f5fc:	89 05 2e 2e 01 00    	mov    %eax,0x12e2e(%rip)        # 22430 <obstack_alloc_failed_handler@@Base+0x390>
    f602:	e9 e2 f6 ff 48       	jmp    4900ece9 <obstack_alloc_failed_handler@@Base+0x48fecc49>
    f607:	c1 e0 14             	shl    $0x14,%eax
    f60a:	84 00                	test   %al,(%rax)
    f60c:	00 00                	add    %al,(%rax)
    f60e:	00 00                	add    %al,(%rax)
    f610:	4d 89 e5             	mov    %r12,%r13
    f613:	e9 96 74 e5 ff       	jmp    ffffffffffe66aae <obstack_alloc_failed_handler@@Base+0xffffffffffe44a0e>
    f618:	e9 8f 49 ff c2       	jmp    ffffffffc3003fac <obstack_alloc_failed_handler@@Base+0xffffffffc2fe1f0c>
    f61d:	aa                   	stos   %al,%es:(%rdi)
    f61e:	03 00                	add    (%rax),%eax
    f620:	00 c0                	add    %al,%al
    f622:	41 0f 95 c6          	setne  %r14b
    f626:	e8 e5 50 ff ff       	call   4710 <__errno_location@plt>
    f62b:	49 89 c7             	mov    %rax,%r15
    f62e:	48 8b 05 e3 2c 01 00 	mov    0x12ce3(%rip),%rax        # 22318 <obstack_alloc_failed_handler@@Base+0x278>
    f635:	48 39 43 18          	cmp    %rax,0x18(%rbx)
    f639:	0f 84 c1 49 21 cf    	je     ffffffffcf224000 <obstack_alloc_failed_handler@@Base+0xffffffffcf201f60>
    f63f:	0f 4c 09             	cmovl  (%rcx),%ecx
    f642:	fa                   	cli    
    f643:	ff                   	(bad)  
    f644:	ff 00                	incl   (%rax)
    f646:	8b 43 30             	mov    0x30(%rbx),%eax
    f649:	25 00 f0 00 00       	and    $0xf000,%eax
    f64e:	3d 00 a0 00 00       	cmp    $0xa000,%eax
    f653:	49 ff c5             	inc    %r13
    f656:	03 00                	add    (%rax),%eax
    f658:	00 45 84             	add    %al,-0x7c(%rbp)
    f65b:	f6 0f 84             	testb  $0x84,(%rdi)
    f65e:	6a fe                	push   $0xfffffffffffffffe
    f660:	ff 49 c1             	decl   -0x3f(%rcx)
    f663:	ee                   	out    %al,(%dx)
    f664:	2c ff                	sub    $0xff,%al
    f666:	ff 85 d9 00 00 00    	incl   0xd9(%rbp)
    f66c:	c6 05 d9 2d 01 00 0f 	movb   $0xf,0x12dd9(%rip)        # 2244c <obstack_alloc_failed_handler@@Base+0x3ac>
    f673:	8f                   	(bad)  
    f674:	18 fd                	sbb    %bh,%ch
    f676:	ff                   	(bad)  
    f677:	ff 0f                	decl   (%rdi)
    f679:	1f                   	(bad)  
    f67a:	84 0f                	test   %cl,(%rdi)
    f67c:	8f                   	(bad)  
    f67d:	20 03                	and    %al,(%rbx)
    f67f:	00 00                	add    %al,(%rax)
    f681:	49 09 fc             	or     %rdi,%r12
    f684:	00 00                	add    %al,(%rax)
    f686:	48 29 cc             	sub    %rcx,%rsp
    f689:	48 85 c9             	test   %rcx,%rcx
    f68c:	0f e9 d0             	psubsw %mm0,%mm2
    f68f:	01 00                	add    %eax,(%rax)
    f691:	00 4d 39             	add    %cl,0x39(%rbp)
    f694:	ca 8f 30             	lret   $0x308f
    f697:	ff                   	(bad)  
    f698:	ff                   	(bad)  
    f699:	ff                   	(bad)  
    f69a:	7f 01                	jg     f69d <__sprintf_chk@plt+0xa9bd>
    f69c:	49 83 e2 f0          	and    $0xfffffffffffffff0,%r10
    f6a0:	4d 89 d5             	mov    %r10,%r13
    f6a3:	41 80 f8 2e          	cmp    $0x2e,%r8b
    f6a7:	74 5f                	je     f708 <__sprintf_chk@plt+0xaa28>
    f6a9:	0f 84 ca 01 00 00    	je     f879 <__sprintf_chk@plt+0xab99>
    f6af:	90                   	nop
    f6b0:	48 c1 e1 05          	shl    $0x5,%rcx
    f6b4:	b6 4d                	mov    $0x4d,%dh
    f6b6:	29 e5                	sub    %esp,%ebp
    f6b8:	4d 0f                	rex.WRB (bad) 
    f6ba:	0f 8f 8e 01 00 00    	jg     f84e <__sprintf_chk@plt+0xab6e>
    f6c0:	85 f2                	test   %esi,%edx
    f6c2:	44 88 40 ff          	mov    %r8b,-0x1(%rax)
    f6c6:	40 84 ff             	test   %dil,%dil
    f6c9:	75 49                	jne    f714 <__sprintf_chk@plt+0xaa34>
    f6cb:	21 df                	and    %ebx,%edi
    f6cd:	ff                   	(bad)  
    f6ce:	ff 0d 80 79 ff 2f    	decl   0x2fff7980(%rip)        # 30007054 <obstack_alloc_failed_handler@@Base+0x2ffe4fb4>
    f6d4:	74 07                	je     f6dd <__sprintf_chk@plt+0xa9fd>
    f6d6:	49 c7 c2 36 02 00 00 	mov    $0x236,%r10
    f6dd:	4c                   	rex.WR
    f6de:	48 89 d6             	mov    %rdx,%rsi
    f6e1:	0f                   	(bad)  
    f6e2:	0f 85 e8 00 00 00    	jne    f7d0 <__sprintf_chk@plt+0xaaf0>
    f6e8:	fc                   	cld    
    f6e9:	ff                   	(bad)  
    f6ea:	ff 01                	incl   (%rcx)
    f6ec:	88 10                	mov    %dl,(%rax)
    f6ee:	48                   	rex.W
    f6ef:	49 d1 e4             	shl    %r12
    f6f2:	0f b6 11             	movzbl (%rcx),%edx
    f6f5:	84 d2                	test   %dl,%dl
    f6f7:	75 ef                	jne    f6e8 <__sprintf_chk@plt+0xaa08>
    f6f9:	c6 00 00             	movb   $0x0,(%rax)
    f6fc:	e9 ef f4 75 77       	jmp    7776ebf0 <obstack_alloc_failed_handler@@Base+0x7774cb50>
    f701:	0f 1f 80 00 00 00 49 	nopl   0x49000000(%rax)
    f708:	31 d5                	xor    %edx,%ebp
    f70a:	8c 49 09             	mov    %cs,0x9(%rcx)
    f70d:	cc                   	int3   
    f70e:	ff cd                	dec    %ebp
    f710:	eb 48                	jmp    f75a <__sprintf_chk@plt+0xaa7a>
    f712:	f7 ff                	idiv   %edi
    f714:	1f                   	(bad)  
    f715:	44 0f 8c d7 02 00 48 	rex.R jl 4800f9f3 <obstack_alloc_failed_handler@@Base+0x47fed953>
    f71c:	29 c8                	sub    %ecx,%eax
    f71e:	01 00                	add    %eax,(%rax)
    f720:	00 4c 01 ca          	add    %cl,-0x36(%rcx,%rax,1)
    f724:	09 ff                	or     %edi,%edi
    f726:	ff                   	(bad)  
    f727:	ff                   	(bad)  
    f728:	ff                   	(bad)  
    f729:	ff 80 3d 10 30 01    	incl   0x130103d(%rax)
    f72f:	0f 8c 0e fe ff ff    	jl     f543 <__sprintf_chk@plt+0xa863>
    f735:	06                   	(bad)  
    f736:	83 c2 03             	add    $0x3,%edx
    f739:	e9 79 f5 ff ff       	jmp    ecb7 <__sprintf_chk@plt+0x9fd7>
    f73e:	0f 8c 33 fe ff ff    	jl     f577 <__sprintf_chk@plt+0xa897>
    f744:	00 00                	add    %al,(%rax)
    f746:	4c 89 ff             	mov    %r15,%rdi
    f749:	e8 32 51 ff ff       	call   4880 <strlen@plt>
    f74e:	49 8d 49 c1          	lea    -0x3f(%r9),%rcx
    f752:	eb 49                	jmp    f79d <__sprintf_chk@plt+0xaabd>
    f754:	39 df                	cmp    %ebx,%edi
    f756:	48 89 95 48 29 d2 0f 	mov    %rdx,0xfd22948(%rbp)
    f75d:	8c 02                	mov    %es,(%rdx)
    f75f:	02 00                	add    (%rax),%al
    f761:	00 49 89             	add    %cl,-0x77(%rcx)
    f764:	c2 48 85             	ret    $0x8548
    f767:	c0 0f 48             	rorb   $0x48,(%rdi)
    f76a:	ff c7                	inc    %edi
    f76c:	48 31 da             	xor    %rbx,%rdx
    f76f:	80 7c 35 ff 4d       	cmpb   $0x4d,-0x1(%rbp,%rsi,1)
    f774:	39 4c 01 d3          	cmp    %ecx,-0x2d(%rcx,%rax,1)
    f778:	c6 01 4d             	movb   $0x4d,(%rcx)
    f77b:	85 cc                	test   %ecx,%esp
    f77d:	4c 89 f2             	mov    %r14,%rdx
    f780:	4c 75 2a             	rex.WR jne f7ad <__sprintf_chk@plt+0xaacd>
    f783:	4c 89 95 00 fd ff ff 	mov    %r10,-0x300(%rbp)
    f78a:	e8 91 53 49 c1       	call   ffffffffc14a4b20 <obstack_alloc_failed_handler@@Base+0xffffffffc1482a80>
    f78f:	e2 0a                	loop   f79b <__sprintf_chk@plt+0xaabb>
    f791:	4d 85 cd             	test   %r9,%r13
    f794:	82                   	(bad)  
    f795:	fd                   	std    
    f796:	ff                   	(bad)  
    f797:	ff 0f                	decl   (%rdi)
    f799:	8f                   	(bad)  
    f79a:	6c                   	insb   (%dx),%es:(%rdi)
    f79b:	fe 4d 39             	decb   0x39(%rbp)
    f79e:	fa                   	cli    
    f79f:	00 ff                	add    %bh,%bh
    f7a1:	44 8b 83 c4 00 00 00 	mov    0xc4(%rbx),%r8d
    f7a8:	45                   	rex.RB
    f7a9:	49 09 f9             	or     %rdi,%r9
    f7ac:	84 17                	test   %dl,(%rdi)
    f7ae:	03 00                	add    (%rax),%eax
    f7b0:	00 83 3d 4c 2b 01    	add    %al,0x12b4c3d(%rbx)
    f7b6:	00 4c 48 c7          	add    %cl,-0x39(%rax,%rcx,2)
    f7ba:	c3                   	ret    
    f7bb:	ed                   	in     (%dx),%eax
    f7bc:	00 00                	add    %al,(%rax)
    f7be:	00 00                	add    %al,(%rax)
    f7c0:	0f 8c 79 03 00 00    	jl     fb3f <__sprintf_chk@plt+0xae5f>
    f7c6:	ff 31                	push   (%rcx)
    f7c8:	c9                   	leave  
    f7c9:	48 c1 e6 1c          	shl    $0x1c,%rsi
    f7cd:	b8 02 00 00 00       	mov    $0x2,%eax
    f7d2:	bf 9c 48 ff c3       	mov    $0xc3ff489c,%edi
    f7d7:	48 8d 95 30 fd ff 49 	lea    0x49fffd30(%rbp),%rdx
    f7de:	89 ff                	mov    %edi,%edi
    f7e0:	95                   	xchg   %eax,%ebp
    f7e1:	00 49 0f             	add    %cl,0xf(%rcx)
    f7e4:	af                   	scas   %es:(%rdi),%eax
    f7e5:	d5                   	(bad)  
    f7e6:	c2 03 00             	ret    $0x3
    f7e9:	00 4c 4d e9          	add    %cl,-0x17(%rbp,%rcx,2)
    f7ed:	c7 03 00 00 85 c0    	movl   $0xc0850000,(%rbx)
    f7f3:	0f 85 e9 38 ff ff    	jne    30e2 <free@plt-0x159e>
    f7f9:	ff 85 48 4d 39 dd    	incl   -0x22c6b2b8(%rbp)
    f7ff:	c6 83 b9 00 00 00 01 	movb   $0x1,0xb9(%rbx)
    f806:	89 83 ac 48 c1 e2    	mov    %eax,-0x1d3eb754(%rbx)
    f80c:	3c 48                	cmp    $0x48,%al
    f80e:	0f 49 29             	cmovns (%rcx),%ebp
    f811:	cf                   	iret   
    f812:	1f                   	(bad)  
    f813:	80 00 00             	addb   $0x0,(%rax)
    f816:	00 00                	add    %al,(%rax)
    f818:	8b 7b 34             	mov    0x34(%rbx),%edi
    f81b:	e8 40 49 c7 c0       	call   ffffffffc0c84160 <obstack_alloc_failed_handler@@Base+0xffffffffc0c620c0>
    f820:	ce                   	(bad)  
    f821:	02 00                	add    (%rax),%al
    f823:	00 01                	add    %al,(%rcx)
    f825:	4c 89 e0             	mov    %r12,%rax
    f828:	f9                   	stc    
    f829:	f6 ff                	idiv   %bh
    f82b:	ff 89 05 0a 2c 01    	decl   0x12c0a05(%rcx)
    f831:	00 e9                	add    %ch,%cl
    f833:	ee                   	out    %al,(%dx)
    f834:	f6 ff                	idiv   %bh
    f836:	ff 66 0f             	jmp    *0xf(%rsi)
    f839:	1f                   	(bad)  
    f83a:	84 00                	test   %al,(%rax)
    f83c:	00 eb                	add    %ch,%bl
    f83e:	48 00 80 3d 55 2c 01 	rex.W add %al,0x12c553d(%rax)
    f845:	48 01 d1             	add    %rdx,%rcx
    f848:	49 89 c5             	mov    %rax,%r13
    f84b:	0f 84 1f 02 00 00    	je     fa70 <__sprintf_chk@plt+0xad90>
    f851:	4c 89 ff             	mov    %r15,%rdi
    f854:	ba 15 00 4c 0f       	mov    $0xf4c0015,%edx
    f859:	af                   	scas   %es:(%rdi),%eax
    f85a:	e3 00                	jrcxz  f85c <__sprintf_chk@plt+0xab7c>
    f85c:	00 00                	add    %al,(%rax)
    f85e:	31 c0                	xor    %eax,%eax
    f860:	48                   	rex.W
    f861:	49 85 c2             	test   %rax,%r10
    f864:	0f 49 21             	cmovns (%rcx),%esp
    f867:	d4                   	(bad)  
    f868:	ff                   	(bad)  
    f869:	ff                   	(bad)  
    f86a:	ff                   	(bad)  
    f86b:	ff 4c 89 48          	decl   0x48(%rcx,%rcx,4)
    f86f:	c1 4d 89 d5          	rorl   $0xd5,-0x77(%rbp)
    f873:	0f 8c 69 02 4d 39    	jl     394dfae2 <obstack_alloc_failed_handler@@Base+0x394bda42>
    f879:	ef                   	out    %eax,(%dx)
    f87a:	0f 8d 98 f6 ff ff    	jge    ef18 <__sprintf_chk@plt+0xa238>
    f880:	89 05 4c 09 c2 00    	mov    %eax,0xc2094c(%rip)        # c301d2 <obstack_alloc_failed_handler@@Base+0xc0e132>
    f886:	e9 8d f6 4d 89       	jmp    ffffffff894eef18 <obstack_alloc_failed_handler@@Base+0xffffffff894cce78>
    f88b:	d8 1f                	fcomps (%rdi)
    f88d:	44 00 00             	add    %r8b,(%rax)
    f890:	8b 7b 34             	mov    0x34(%rbx),%edi
    f893:	48 31 d7             	xor    %rdx,%rdi
    f896:	ff                   	(bad)  
    f897:	ff                   	(bad)  
    f898:	3b 05 4c 31 fa 00    	cmp    0xfa314c(%rip),%eax        # fb29ea <obstack_alloc_failed_handler@@Base+0xf9094a>
    f89e:	0f 8e 67 f6 ff ff    	jle    ef0b <__sprintf_chk@plt+0xa22b>
    f8a4:	89 05 9a 2b 01 00    	mov    %eax,0x12b9a(%rip)        # 22444 <obstack_alloc_failed_handler@@Base+0x3a4>
    f8aa:	0f 8f 7d 03 00 00    	jg     fc2d <__sprintf_chk@plt+0xaf4d>
    f8b0:	c7 83 bc 00 4c 89 c0 	movl   $0xc0,-0x76b3ff44(%rbx)
    f8b7:	00 00 00 
    f8ba:	48 8d 95 30 0f 8f e4 	lea    -0x1b70f0d0(%rbp),%rdx
    f8c1:	00 00                	add    %al,(%rax)
    f8c3:	00 48 ff             	add    %cl,-0x1(%rax)
    f8c6:	c7                   	(bad)  
    f8c7:	b8 00 00 00 4d       	mov    $0x4d000000,%eax
    f8cc:	31 ea                	xor    %ebp,%edx
    f8ce:	02 00                	add    (%rax),%al
    f8d0:	00 c7                	add    %al,%bh
    f8d2:	85 30                	test   %esi,(%rax)
    f8d4:	fd                   	std    
    f8d5:	0f 84 71 fc ff ff    	je     f54c <__sprintf_chk@plt+0xa86c>
    f8db:	d0 89 85 38 fd ff    	rorb   -0x2c77b(%rcx)
    f8e1:	ff 48 ff             	decl   -0x1(%rax)
    f8e4:	c3                   	ret    
    f8e5:	40 fd                	rex std 
    f8e7:	e9 b0 fe ff ff       	jmp    f79c <__sprintf_chk@plt+0xaabc>
    f8ec:	31 c7                	xor    %eax,%edi
    f8ee:	c7 85 48 fd ff ff 49 	movl   $0xf749ff49,-0x2b8(%rbp)
    f8f5:	ff 49 f7 
    f8f8:	fa                   	cli    
    f8f9:	c7 85 50 fd ff ff 49 	movl   $0xc78549,-0x2b0(%rbp)
    f900:	85 c7 00 
    f903:	48 c7                	rex.W (bad) 
    f905:	48 09 d3             	or     %rdx,%rbx
    f908:	ff                   	(bad)  
    f909:	ff 00                	incl   (%rax)
    f90b:	00 00                	add    %al,(%rax)
    f90d:	00 74 ff 85          	add    %dh,-0x7b(%rdi,%rdi,8)
    f911:	60                   	(bad)  
    f912:	fd                   	std    
    f913:	ff                   	(bad)  
    f914:	ff 00                	incl   (%rax)
    f916:	00 48 31             	add    %cl,0x31(%rax)
    f919:	d7                   	xlat   %ds:(%rbx)
    f91a:	4d 01 ca             	add    %r9,%r10
    f91d:	4d 85 f8             	test   %r15,%r8
    f920:	37                   	(bad)  
    f921:	74 75                	je     f998 <__sprintf_chk@plt+0xacb8>
    f923:	15 3b a1 00 00       	adc    $0xa13b,%eax
    f928:	4d 31 cf             	xor    %r9,%r15
    f92b:	89 0f                	mov    %ecx,(%rdi)
    f92d:	85 3c 03             	test   %edi,(%rbx,%rax,1)
    f930:	00 00                	add    %al,(%rax)
    f932:	ff 4d 39             	decl   0x39(%rbp)
    f935:	f5                   	cmc    
    f936:	fb                   	sti    
    f937:	ff                   	(bad)  
    f938:	ff 0f                	decl   (%rdi)
    f93a:	1f                   	(bad)  
    f93b:	80 00 00             	addb   $0x0,(%rax)
    f93e:	48 c7 c3 68 01 00 49 	mov    $0x49000168,%rbx
    f945:	c7 c2 01 0f 85 89    	mov    $0x89850f01,%edx
    f94b:	03 00                	add    (%rax),%eax
    f94d:	00 ff                	add    %bh,%bh
    f94f:	e9 23 f4 ff ff       	jmp    ed77 <__sprintf_chk@plt+0xa097>
    f954:	0f 1f 49 0f          	nopl   0xf(%rcx)
    f958:	af                   	scas   %es:(%rdi),%eax
    f959:	f3 95                	repz xchg %eax,%ebp
    f95b:	00 fd                	add    %bh,%ch
    f95d:	ff                   	(bad)  
    f95e:	ff 49 4d             	decl   0x4d(%rcx)
    f961:	39 d3                	cmp    %edx,%ebx
    f963:	84 06                	test   %al,(%rsi)
    f965:	fe 0f                	decb   (%rdi)
    f967:	48 c7 c6 12 fd ff ff 	mov    $0xfffffffffffffd12,%rsi
    f96e:	1f                   	(bad)  
    f96f:	00 45 48             	add    %al,0x48(%rbp)
    f972:	ff c0                	inc    %eax
    f974:	b6 fc                	mov    $0xfc,%dh
    f976:	ff                   	(bad)  
    f977:	ff 0f                	decl   (%rdi)
    f979:	0f 8f eb fc ff ff    	jg     f66a <__sprintf_chk@plt+0xa98a>
    f97f:	00 48 48             	add    %cl,0x48(%rax)
    f982:	f7 fb                	idiv   %ebx
    f984:	f8                   	clc    
    f985:	00 e9                	add    %ch,%cl
    f987:	07                   	(bad)  
    f988:	fd                   	std    
    f989:	ff                   	(bad)  
    f98a:	ff 0f                	decl   (%rdi)
    f98c:	1f                   	(bad)  
    f98d:	44 00 0f             	add    %r9b,(%rdi)
    f990:	8c e4                	mov    %fs,%esp
    f992:	fd                   	std    
    f993:	ff                   	(bad)  
    f994:	ff 83 38 02 0f 84    	incl   -0x7bf0fdc8(%rbx)
    f99a:	8d                   	(bad)  
    f99b:	f2 ff                	repnz (bad) 
    f99d:	ff 66 90             	jmp    *-0x70(%rsi)
    f9a0:	4d 09 dc             	or     %r11,%r12
    f9a3:	8f                   	(bad)  
    f9a4:	fb                   	sti    
    f9a5:	00 00                	add    %al,(%rax)
    f9a7:	00 98 a1 00 00 31    	add    %bl,0x310000a1(%rax)
    f9ad:	ff                   	(bad)  
    f9ae:	e8 ad 4e ff ff       	call   4860 <dcgettext@plt>
    f9b3:	4c e9 67 01 4d 29    	rex.WR jmp 294dfb20 <obstack_alloc_failed_handler@@Base+0x294bda80>
    f9b9:	fe                   	(bad)  
    f9ba:	29 fe                	sub    %edi,%esi
    f9bc:	31 ed                	xor    %ebp,%ebp
    f9be:	48 89 c6             	mov    %rax,%rsi
    f9c1:	e8 9a a7 ff ff       	call   a160 <__sprintf_chk@plt+0x5480>
    f9c6:	e9 40 49 c7 c0       	jmp    ffffffffc0c8430b <obstack_alloc_failed_handler@@Base+0xffffffffc0c6226b>
    f9cb:	97                   	xchg   %eax,%edi
    f9cc:	fe                   	(bad)  
    f9cd:	ff                   	(bad)  
    f9ce:	ff 4d 39             	decl   0x39(%rbp)
    f9d1:	d8 31                	fdivs  (%rcx)
    f9d3:	49 21 c9             	and    %rcx,%r9
    f9d6:	49 0f af f2          	imul   %r10,%rsi
    f9da:	00 4c 89 ef          	add    %cl,-0x11(%rcx,%rcx,4)
    f9de:	e8 0f 85 e0 fd       	call   fffffffffde17ef2 <obstack_alloc_failed_handler@@Base+0xfffffffffddf5e52>
    f9e3:	ff                   	(bad)  
    f9e4:	ff c0                	inc    %eax
    f9e6:	0f 4d 09             	cmovge (%rcx),%ecx
    f9e9:	cf                   	iret   
    f9ea:	00 00                	add    %al,(%rax)
    f9ec:	0f 84 ff 01 00 00    	je     fbf1 <__sprintf_chk@plt+0xaf11>
    f9f2:	c7 83 bc 00 00 00 02 	movl   $0x2,0xbc(%rbx)
    f9f9:	00 00 00 
    f9fc:	c6 05 49 2a 01 00 48 	movb   $0x48,0x12a49(%rip)        # 2244c <obstack_alloc_failed_handler@@Base+0x3ac>
    fa03:	c1 e0 03             	shl    $0x3,%eax
    fa06:	ff                   	(bad)  
    fa07:	ff 0f                	decl   (%rdi)
    fa09:	1f                   	(bad)  
    fa0a:	48 89 f3             	mov    %rsi,%rbx
    fa0d:	48 21 ff             	and    %rdi,%rdi
    fa10:	45 31 ed             	xor    %r13d,%r13d
    fa13:	e9 e0 f2 ff ff       	jmp    ecf8 <__sprintf_chk@plt+0xa018>
    fa18:	0f 1f 84 00 00 48 0f 	nopl   -0x50f0b800(%rax,%rax,1)
    fa1f:	af 
    fa20:	cf                   	iret   
    fa21:	3d e1 28 01 00       	cmp    $0x128e1,%eax
    fa26:	00 0f                	add    %cl,(%rdi)
    fa28:	84 23                	test   %ah,(%rbx)
    fa2a:	f3 ff                	repz (bad) 
    fa2c:	ff                   	(bad)  
    fa2d:	bf 13 e9 0f 85       	mov    $0x850fe913,%edi
    fa32:	83 fd ff             	cmp    $0xffffffff,%ebp
    fa35:	ff                   	(bad)  
    fa36:	ff 84 0f 8c 6e fd ff 	incl   -0x29174(%rdi,%rcx,1)
    fa3d:	4c 29 d9             	sub    %r11,%rcx
    fa40:	12 00                	adc    (%rax),%al
    fa42:	00 00                	add    %al,(%rax)
    fa44:	48 31 db             	xor    %rbx,%rbx
    fa47:	ff 48 09             	decl   0x9(%rax)
    fa4a:	c0 09 e4             	rorb   $0xe4,(%rcx)
    fa4d:	af                   	scas   %es:(%rdi),%eax
    fa4e:	f1                   	int1   
    fa4f:	5f                   	pop    %rdi
    fa50:	ff                   	(bad)  
    fa51:	bf 14 00 00 00       	mov    $0x14,%edi
    fa56:	e8 c5 c6 ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
    fa5b:	84 c0                	test   %al,%al
    fa5d:	0f 85 ad f3 ff ff    	jne    ee10 <__sprintf_chk@plt+0xa130>
    fa63:	e9 e8 f2 4d 31       	jmp    314eed50 <obstack_alloc_failed_handler@@Base+0x314cccb0>
    fa68:	fc                   	cld    
    fa69:	4c 01 ee             	add    %r13,%rsi
    fa6c:	4c 21 df             	and    %r11,%rdi
    fa6f:	01 49 85             	add    %ecx,-0x7b(%rcx)
    fa72:	db 44 89 85          	fildl  -0x7b(%rcx,%rcx,4)
    fa76:	0f 84 a9 01 00 00    	je     fc25 <__sprintf_chk@plt+0xaf45>
    fa7c:	49 c1 e2 2f          	shl    $0x2f,%r10
    fa80:	8b 85 0c fd ff ff    	mov    -0x2f4(%rbp),%eax
    fa86:	0f 84 4a fd ff ff    	je     f7d6 <__sprintf_chk@plt+0xaaf6>
    fa8c:	0f 84 bf fd ff ff    	je     f851 <__sprintf_chk@plt+0xab71>
    fa92:	48 89 c7             	mov    %rax,%rdi
    fa95:	e8 e6 4d ff ff       	call   4880 <strlen@plt>
    fa9a:	0f 85 58 4d 0f 84    	jne    ffffffff841047f8 <obstack_alloc_failed_handler@@Base+0xffffffff840e2758>
    faa0:	57                   	push   %rdi
    faa1:	01 00                	add    %eax,(%rax)
    faa3:	00 00                	add    %al,(%rax)
    faa5:	31 d2                	xor    %edx,%edx
    faa7:	85 c0                	test   %eax,%eax
    faa9:	0f 48 c2             	cmovs  %edx,%eax
    faac:	e9 7f 73 ff ff       	jmp    6e30 <__sprintf_chk@plt+0x2150>
    fab1:	0f 1f 80 0f 84 dd 0f 	nopl   0xfdd840f(%rax)
    fab8:	84 0b                	test   %cl,(%rbx)
    faba:	ff                   	(bad)  
    fabb:	ff                   	(bad)  
    fabc:	ff 31                	push   (%rcx)
    fabe:	ff                   	(bad)  
    fabf:	e9 9e fa ff ff       	jmp    f562 <__sprintf_chk@plt+0xa882>
    fac4:	0f 1f 40 00          	nopl   0x0(%rax)
    fac8:	48                   	rex.W
    fac9:	49 0f af de          	imul   %r14,%rbx
    facd:	89 95 00 fd ff ff    	mov    %edx,-0x300(%rbp)
    fad3:	e8 18 a9 ff ff       	call   a3f0 <__sprintf_chk@plt+0x5710>
    fad8:	4c 8b 49 0f          	mov    0xf(%rcx),%r9
    fadc:	af                   	scas   %es:(%rdi),%eax
    fadd:	fd                   	std    
    fade:	ff 84 c0 0f 49 39 ff 	incl   -0xc6b6f1(%rax,%rax,8)
    fae5:	ff                   	(bad)  
    fae6:	ff c7                	inc    %edi
    fae8:	83 c4 48             	add    $0x48,%esp
    faeb:	01 c6                	add    %eax,%esi
    faed:	ff                   	(bad)  
    faee:	ff                   	(bad)  
    faef:	ff                   	(bad)  
    faf0:	ff                   	(bad)  
    faf1:	e9 bb fc ff 49       	jmp    4a00f7b1 <obstack_alloc_failed_handler@@Base+0x49fed711>
    faf6:	31 c2                	xor    %eax,%edx
    faf8:	0f 1f 84 00 00 0f 8f 	nopl   0xf8f0f00(%rax,%rax,1)
    faff:	0f 
    fb00:	01 00                	add    %eax,(%rax)
    fb02:	4d 39 ec             	cmp    %r13,%r12
    fb05:	00 00                	add    %al,(%rax)
    fb07:	e9 4d fb 48 c1       	jmp    ffffffffc149f659 <obstack_alloc_failed_handler@@Base+0xffffffffc147d5b9>
    fb0c:	e9 2e 40 4c 89       	jmp    ffffffff894d3b3f <obstack_alloc_failed_handler@@Base+0xffffffff894b1a9f>
    fb11:	f2 00 00             	repnz add %al,(%rax)
    fb14:	00 48 8d             	add    %cl,-0x73(%rax)
    fb17:	35 6a 4d 31 c2       	xor    $0xc2314d6a,%eax
    fb1c:	31 ff                	xor    %edi,%edi
    fb1e:	e8 3d 4d ff 49       	call   4a004860 <obstack_alloc_failed_handler@@Base+0x49fe27c0>
    fb23:	89 c1                	mov    %eax,%ecx
    fb25:	bd 49 f7 ff 0f       	mov    $0xffff749,%ebp
    fb2a:	84 49 01             	test   %cl,0x1(%rcx)
    fb2d:	00 00                	add    %al,(%rax)
    fb2f:	c6                   	(bad)  
    fb30:	e8 2b a6 ff ff       	call   a160 <__sprintf_chk@plt+0x5480>
    fb35:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
    fb39:	4d 85 ff             	test   %r15,%r15
    fb3c:	0f 85 c2 f6 ff ff    	jne    f204 <__sprintf_chk@plt+0xa524>
    fb42:	e9 5e f7 ff ff       	jmp    f2a5 <__sprintf_chk@plt+0xa5c5>
    fb47:	41 0f b6 14 24       	movzbl (%r12),%edx
    fb4c:	80 fa 2f             	cmp    $0x2f,%dl
    fb4f:	0f 85 cc 0f 85 5c    	jne    5c860b21 <obstack_alloc_failed_handler@@Base+0x5c83ea81>
    fb55:	03 00                	add    (%rax),%eax
    fb57:	00 ff                	add    %bh,%bh
    fb59:	ff 4c 8d 7b          	decl   0x7b(%rbp,%rcx,4)
    fb5d:	18 4d 89             	sbb    %cl,-0x77(%rbp)
    fb60:	e5 e9                	in     $0xe9,%eax
    fb62:	84 f5                	test   %dh,%ch
    fb64:	ff                   	(bad)  
    fb65:	ff 41 8b             	incl   -0x75(%rcx)
    fb68:	07                   	(bad)  
    fb69:	83 f8 3d             	cmp    $0x3d,%eax
    fb6c:	0f 84 0f 8c 88 00    	je     898781 <obstack_alloc_failed_handler@@Base+0x8766e1>
    fb72:	4d 29 d1             	sub    %r10,%r9
    fb75:	74 5f                	je     fbd6 <__sprintf_chk@plt+0xaef6>
    fb77:	7f 58                	jg     fbd1 <__sprintf_chk@plt+0xaef1>
    fb79:	83 f8 10             	cmp    $0x10,%eax
    fb7c:	74 5c                	je     fbda <__sprintf_chk@plt+0xaefa>
    fb7e:	83 f8 16             	cmp    $0x16,%eax
    fb81:	74 53                	je     fbd6 <__sprintf_chk@plt+0xaef6>
    fb83:	b9 01 00 00 00       	mov    $0x1,%ecx
    fb88:	8d 50 ea             	lea    -0x16(%rax),%edx
    fb8b:	83 e2 ef             	and    $0xffffffef,%edx
    fb8e:	74 05                	je     fb95 <__sprintf_chk@plt+0xaeb5>
    fb90:	83 f8 5f             	cmp    $0x5f,%eax
    fb93:	75 0b                	jne    fba0 <__sprintf_chk@plt+0xaec0>
    fb95:	49 31 d5             	xor    %rdx,%r13
    fb98:	fa                   	cli    
    fb99:	fe                   	(bad)  
    fb9a:	ff                   	(bad)  
    fb9b:	ff                   	(bad)  
    fb9c:	78 27                	js     fbc5 <__sprintf_chk@plt+0xaee5>
    fb9e:	01 00                	add    %eax,(%rax)
    fba0:	0f b6 05 a5 0f 85 e8 	movzbl -0x177af05b(%rip),%eax        # ffffffffe8860b4c <obstack_alloc_failed_handler@@Base+0xffffffffe883eaac>
    fba7:	00 00                	add    %al,(%rax)
    fba9:	00 84 f6 75 49 09 fa 	add    %al,-0x5f6b68b(%rsi,%rsi,8)
    fbb0:	4c 09 c2             	or     %r8,%rdx
    fbb3:	00 0f                	add    %cl,(%rdi)
    fbb5:	84 f6                	test   %dh,%dh
    fbb7:	02 00                	add    (%rax),%al
    fbb9:	00 01                	add    %al,(%rcx)
    fbbb:	48 c1 e8 34          	shr    $0x34,%rax
    fbbf:	49 c7 c0 fe fd 4d 31 	mov    $0x314dfdfe,%r8
    fbc6:	d6                   	(bad)  
    fbc7:	ff                   	(bad)  
    fbc8:	ff 49 89             	decl   -0x77(%rcx)
    fbcb:	0f 84 8c 00 00 00    	je     fc5d <__sprintf_chk@plt+0xaf7d>
    fbd1:	83 f8 5f             	cmp    $0x5f,%eax
    fbd4:	4d 89 f0             	mov    %r14,%r8
    fbd7:	c9                   	leave  
    fbd8:	4d 85 f9             	test   %r15,%r9
    fbdb:	d1 f6                	shl    %esi
    fbdd:	0f 84 e9 48 c7 c0    	je     ffffffffc0c844cc <obstack_alloc_failed_handler@@Base+0xffffffffc0c6242c>
    fbe3:	12 fe                	adc    %dh,%bh
    fbe5:	ff                   	(bad)  
    fbe6:	ff 00                	incl   (%rax)
    fbe8:	00 00                	add    %al,(%rax)
    fbea:	ba 01 00 00 00       	mov    $0x1,%edx
    fbef:	0f 8c 52 fd ff ff    	jl     f947 <__sprintf_chk@plt+0xac67>
    fbf5:	00 f0                	add    %dh,%al
    fbf7:	00 49 c7             	add    %cl,-0x39(%rcx)
    fbfa:	c0 3d 02 00 00 1d 41 	sarb   $0x41,0x1d000002(%rip)        # 1d00fc03 <obstack_alloc_failed_handler@@Base+0x1cfedb63>
    fc01:	8b 49 c7             	mov    -0x39(%rcx),%ecx
    fc04:	c4                   	(bad)  
    fc05:	bb 4d 85 49 c7       	mov    $0xc749854d,%ebx
    fc0a:	c4                   	(bad)  
    fc0b:	37                   	(bad)  
    fc0c:	fd                   	std    
    fc0d:	ff                   	(bad)  
    fc0e:	ff f0                	push   %rax
    fc10:	00 00                	add    %al,(%rax)
    fc12:	3d 00 40 00 00       	cmp    $0x4000,%eax
    fc17:	0f 85 3c fa 0f 8f    	jne    ffffffff8f10f659 <obstack_alloc_failed_handler@@Base+0xffffffff8f0ed5b9>
    fc1d:	43 01 49 c1          	rex.XB add %ecx,-0x3f(%r9)
    fc21:	e1 1a                	loope  fc3d <__sprintf_chk@plt+0xaf5d>
    fc23:	35 45 9f 00 00       	xor    $0x9f45,%eax
    fc28:	4c 89 ef             	mov    %r13,%rdi
    fc2b:	e8 d0 4f ff ff       	call   4c00 <getxattr@plt>
    fc30:	4c 0f af da          	imul   %rdx,%r11
    fc34:	af                   	scas   %es:(%rdi),%eax
    fc35:	d7                   	xlat   %ds:(%rbx)
    fc36:	85 b7 fd ff 4d 85    	test   %esi,-0x7ab20003(%rdi)
    fc3c:	c4                   	(bad)  
    fc3d:	e8 ce 4a ff ff       	call   4710 <__errno_location@plt>
    fc42:	c7 00 5f 00 00 0f    	movl   $0xf00005f,(%rax)
    fc48:	8c 12                	mov    %ss,(%rdx)
    fc4a:	01 00                	add    %eax,(%rax)
    fc4c:	4c 0f af d3          	imul   %rbx,%r10
    fc50:	01 00                	add    %eax,(%rax)
    fc52:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    fc59:	e9 5e f8 ff ff       	jmp    f4bc <__sprintf_chk@plt+0xa7dc>
    fc5e:	49 21 c6             	and    %rax,%r14
    fc61:	83 f8 48             	cmp    $0x48,%eax
    fc64:	85 c3                	test   %eax,%ebx
    fc66:	08 ff                	or     %bh,%bh
    fc68:	ff                   	(bad)  
    fc69:	ff 49 c1             	decl   -0x3f(%rcx)
    fc6c:	e5 0e                	in     $0xe,%eax
    fc6e:	39 e4                	cmp    %esp,%esp
    fc70:	1c 49                	sbb    $0x49,%al
    fc72:	f7 fd                	idiv   %ebp
    fc74:	66 66 2e 0f 49 39    	data16 cs cmovns (%rcx),%di
    fc7a:	d6                   	(bad)  
    fc7b:	00 00                	add    %al,(%rax)
    fc7d:	00 49 31             	add    %cl,0x31(%rcx)

000000000000fc80 <_obstack_begin@@Base>:
    fc80:	c2 0f 1e             	ret    $0x1e0f
    fc83:	fa                   	cli    
    fc84:	80 67 50 fe          	andb   $0xfe,0x50(%rdi)
    fc88:	48 89 4f 38          	mov    %rcx,0x38(%rdi)
    fc8c:	4c 89 47 40          	mov    %r8,0x40(%rdi)
    fc90:	e9 9b 74 ff ff       	jmp    7130 <__sprintf_chk@plt+0x2450>
    fc95:	4c 09 f0             	or     %r14,%rax
    fc98:	0f 1f 84 00 00 00 0f 	nopl   -0x7af10000(%rax,%rax,1)
    fc9f:	85 

000000000000fca0 <_obstack_begin_1@@Base>:
    fca0:	f5                   	cmc    
    fca1:	fd                   	std    
    fca2:	ff                   	(bad)  
    fca3:	ff 80 4f 50 01 48    	incl   0x4801504f(%rax)
    fca9:	89 4f 38             	mov    %ecx,0x38(%rdi)
    fcac:	49 0f af f7          	imul   %r15,%rsi
    fcb0:	4c 89 4f 48          	mov    %r9,0x48(%rdi)
    fcb4:	e9 77 74 ff 4c       	jmp    4d007130 <obstack_alloc_failed_handler@@Base+0x4cfe5090>
    fcb9:	21 f8                	and    %edi,%eax
    fcbb:	80 00 00             	addb   $0x0,(%rax)
    fcbe:	48                   	rex.W
    fcbf:	c7                   	.byte 0xc7

000000000000fcc0 <_obstack_newchunk@@Base>:
    fcc0:	c7                   	(bad)  
    fcc1:	0a fe                	or     %dh,%bh
    fcc3:	ff                   	(bad)  
    fcc4:	ff 49 c1             	decl   -0x3f(%rcx)
    fcc7:	ee                   	out    %al,(%dx)
    fcc8:	48 89 f6             	mov    %rsi,%rsi
    fccb:	54                   	push   %rsp
    fccc:	55                   	push   %rbp
    fccd:	53                   	push   %rbx
    fcce:	48 89 fb             	mov    %rdi,%rbx
    fcd1:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    fcd5:	4c 2b 6f 10          	sub    0x10(%rdi),%r13
    fcd9:	48 8b 13             	mov    (%rbx),%rdx
    fcdc:	4c 01 ee             	add    %r13,%rsi
    fcdf:	4c 89 e8             	mov    %r13,%rax
    fce2:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    fce6:	0f 92 c1             	setb   %cl
    fce9:	48 03 77 30          	add    0x30(%rdi),%rsi
    fced:	40 0f 92 c7          	setb   %dil
    fcf1:	48 c1 e8 03          	shr    $0x3,%rax
    fcf5:	48 39 d6             	cmp    %rdx,%rsi
    fcf8:	48                   	rex.W
    fcf9:	4c 39 e3             	cmp    %r12,%rbx
    fcfc:	64 48 0f 42 f2       	fs cmovb %rdx,%rsi
    fd01:	48 39 f0             	cmp    %rsi,%rax
    fd04:	48 0f 43 f0          	cmovae %rax,%rsi
    fd08:	48 85 c9             	test   %rcx,%rcx
    fd0b:	0f 85 ce 00 00 00    	jne    fddf <_obstack_newchunk@@Base+0x11f>
    fd11:	40 0f b6 ff          	movzbl %dil,%edi
    fd15:	48 85 49 c7          	test   %rcx,-0x39(%rcx)
    fd19:	c2 b7 ff             	ret    $0xffb7
    fd1c:	ff                   	(bad)  
    fd1d:	ff 48 8b             	decl   -0x75(%rax)
    fd20:	43 38 49 89          	rex.XB cmp %cl,-0x77(%r9)
    fd24:	0f 85 c9 03 00 00    	jne    100f3 <_obstack_newchunk@@Base+0x433>
    fd2a:	39 cf                	cmp    %ecx,%edi
    fd2c:	89 f7                	mov    %esi,%edi
    fd2e:	ff d0                	call   *%rax
    fd30:	49 89 c4             	mov    %rax,%r12
    fd33:	4d 85 e4             	test   %r12,%r12
    fd36:	0f 84 a3 00 00 00    	je     fddf <_obstack_newchunk@@Base+0x11f>
    fd3c:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
    fd40:	eb ec                	jmp    fd2e <_obstack_newchunk@@Base+0x6e>
    fd42:	63 08                	movsxd (%rax),%ecx
    fd44:	48 0f af d6          	imul   %rsi,%rdx
    fd48:	eb 9a                	jmp    fce4 <_obstack_newchunk@@Base+0x24>
    fd4a:	ea                   	(bad)  
    fd4b:	49 89 6c 4d 89       	mov    %rbp,-0x77(%r13,%rcx,2)
    fd50:	49 ff c6             	inc    %r14
    fd53:	20 49 49             	and    %cl,0x49(%rcx)
    fd56:	c1 e1 02             	shl    $0x2,%ecx
    fd59:	8b 43 30             	mov    0x30(%rbx),%eax
    fd5c:	4d 8d 74 04 10       	lea    0x10(%r12,%rax,1),%r14
    fd61:	4c 85 c2             	test   %r8,%rdx
    fd64:	49 21 c6             	and    %rax,%r14
    fd67:	4c 89 49 c1          	mov    %r9,-0x3f(%rcx)
    fd6b:	e7 10                	out    %eax,$0x10
    fd6d:	ff                   	(bad)  
    fd6e:	ff 0f                	decl   (%rdi)
    fd70:	b6 53                	mov    $0x53,%dh
    fd72:	0f 8f 26 01 00 00    	jg     fe9e <_obstack_newchunk@@Base+0x1de>
    fd78:	48 8b 43 30          	mov    0x30(%rbx),%rax
    fd7c:	48 8d 4c 05 10       	lea    0x10(%rbp,%rax,1),%rcx
    fd81:	48 f7 49 29 c0 c8 49 	testq  $0xfffffffff749c8c0,0x29(%rcx)
    fd88:	f7 
    fd89:	0f 84 3d fe ff ff    	je     fbcc <__sprintf_chk@plt+0xaeec>
    fd8f:	73 49                	jae    fdda <_obstack_newchunk@@Base+0x11a>
    fd91:	c7 c2 68 fe ff ff    	mov    $0xfffffe68,%edx
    fd97:	49 ff c4             	inc    %r12
    fd9a:	50                   	push   %rax
    fd9b:	fd                   	std    
    fd9c:	5b                   	pop    %rbx
    fd9d:	5d                   	pop    %rbp
    fd9e:	41 5c                	pop    %r12
    fda0:	48                   	rex.W
    fda1:	49 f7 ff             	idiv   %r15
    fda4:	c3                   	ret    
    fda5:	0f 1f 00             	nopl   (%rax)
    fda8:	48 8b 4c 0f af       	mov    -0x51(%rdi,%rcx,1),%rcx
    fdad:	ce                   	(bad)  
    fdae:	4d 89 c5             	mov    %r8,%r13
    fdb1:	48 f7 f9             	idiv   %rcx
    fdb4:	1f                   	(bad)  
    fdb5:	44 00 00             	add    %r8b,(%rax)
    fdb8:	48 8b 45 08          	mov    0x8(%rbp),%rax
    fdbc:	83 e2 01             	and    $0x1,%edx
    fdbf:	49 89 44 24 eb       	mov    %rax,-0x15(%r12)
    fdc4:	89 8b 43 40 4c 49    	mov    %ecx,0x494c4043(%rbx)
    fdca:	f7 fe                	idiv   %esi
    fdcc:	7b 48                	jnp    fe16 <_obstack_newchunk@@Base+0x156>
    fdce:	49 ff c0             	inc    %r8
    fdd1:	ff d0                	call   *%rax
    fdd3:	eb b8                	jmp    fd8d <_obstack_newchunk@@Base+0xcd>
    fdd5:	0f 1f e9             	nop    %ecx
    fdd8:	55                   	push   %rbp
    fdd9:	ff                   	(bad)  
    fdda:	ff                   	(bad)  
    fddb:	ff                   	(bad)  
    fddc:	fd                   	std    
    fddd:	ff                   	(bad)  
    fdde:	ff 48 4d             	decl   0x4d(%rax)
    fde1:	09 e6                	or     %esp,%esi
    fde3:	22 01                	and    (%rcx),%al
    fde5:	00 ff                	add    %bh,%bh
    fde7:	10 0f                	adc    %cl,(%rdi)
    fde9:	1f                   	(bad)  
    fdea:	84 00                	test   %al,(%rax)
    fdec:	48 c1 ef 3a          	shr    $0x3a,%rdi
    fdf0:	41 57                	push   %r15
    fdf2:	41 56                	push   %r14
    fdf4:	41 55                	push   %r13
    fdf6:	41 54                	push   %r12
    fdf8:	55                   	push   %rbp
    fdf9:	53                   	push   %rbx
    fdfa:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    fe01:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    fe06:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    fe0d:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    fe12:	48 83 ec 58          	sub    $0x58,%rsp
    fe16:	4c 8b b4 24 90 20 00 	mov    0x2090(%rsp),%r14
    fe1d:	00 
    fe1e:	49 89 fc             	mov    %rdi,%r12
    fe21:	49 89 cd             	mov    %rcx,%r13
    fe24:	45 89 c7             	mov    %r8d,%r15d
    fe27:	89 d1                	mov    %edx,%ecx
    fe29:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fe30:	00 00 
    fe32:	48 89 84 24 48 20 00 	mov    %rax,0x2048(%rsp)
    fe39:	00 
    fe3a:	31 c0                	xor    %eax,%eax
    fe3c:	45 31 c0             	xor    %r8d,%r8d
    fe3f:	48                   	rex.W
    fe40:	48 c1 ef 17          	shr    $0x17,%rdi
    fe44:	48 89 f2             	mov    %rsi,%rdx
    fe47:	4c 89 cb             	mov    %r9,%rbx
    fe4a:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    fe4f:	4c 8d 4c 24 37       	lea    0x37(%rsp),%r9
    fe54:	4c 89 e6             	mov    %r12,%rsi
    fe57:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    fe5c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    fe61:	e8 6a 45 00 00       	call   143d0 <_obstack_memory_used@@Base+0x3c20>
    fe66:	80 7c 24 37 00       	cmpb   $0x0,0x37(%rsp)
    fe6b:	48 89 c5             	mov    %rax,%rbp
    fe6e:	48 8b 05 33 21 01 00 	mov    0x12133(%rip),%rax        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    fe75:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fe7a:	74 09                	je     fe85 <_obstack_newchunk@@Base+0x1c5>
    fe7c:	45 84 ff             	test   %r15b,%r15b
    fe7f:	0f 85 4b 02 00 00    	jne    100d0 <_obstack_newchunk@@Base+0x410>
    fe85:	49 39 fc             	cmp    %rdi,%r12
    fe88:	74 35                	je     febf <_obstack_newchunk@@Base+0x1ff>
    fe8a:	bf 04 00 00 00       	mov    $0x4,%edi
    fe8f:	e8 8c c2 ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
    fe94:	4c 8d 05 25 22 01 00 	lea    0x12225(%rip),%r8        # 220c0 <obstack_alloc_failed_handler@@Base+0x20>
    fe9b:	49 c7 c1 25 03 00 00 	mov    $0x325,%r9
    fea2:	12 fc                	adc    %ah,%bh
    fea4:	ff                   	(bad)  
    fea5:	ff 00                	incl   (%rax)
    fea7:	4c 89 c7             	mov    %r8,%rdi
    feaa:	e8 f1 c3 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
    feaf:	49 09 c3             	or     %rax,%r11
    feb2:	0f 8f 9b fe ff ff    	jg     fd53 <_obstack_newchunk@@Base+0x93>
    feb8:	89 ff                	mov    %edi,%edi
    feba:	e8 e1 c3 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
    febf:	4d 85 f6             	test   %r14,%r14
    fec2:	0f 84 38 02 00 00    	je     10100 <_obstack_newchunk@@Base+0x440>
    fec8:	44 0f 4c 85 d6 23 01 	cmovl  0x123d6(%rbp),%r8d
    fecf:	00 
    fed0:	49 01 f2             	add    %rsi,%r10
    fed3:	0f 85 9f 01 00 00    	jne    10078 <_obstack_newchunk@@Base+0x3b8>
    fed9:	49 89 ea             	mov    %rbp,%r10
    fedc:	49 c7 c7 4c fc ff ff 	mov    $0xfffffffffffffc4c,%r15
    fee3:	26 01 00             	es add %eax,(%rax)
    fee6:	49 85 ca             	test   %rcx,%r10
    fee9:	89 54 24 28          	mov    %edx,0x28(%rsp)
    feed:	48 ff c1             	inc    %rcx
    fef0:	29 f6                	sub    %esi,%esi
    fef2:	e8 c9 e1 ff ff       	call   e0c0 <__sprintf_chk@plt+0x93e0>
    fef7:	be 01 00 00 00       	mov    $0x1,%esi
    fefc:	4c 89 f7             	mov    %r14,%rdi
    feff:	49 89 c7             	mov    %rax,%r15
    ff02:	e8 b9 e1 ff 48       	call   4900e0c0 <obstack_alloc_failed_handler@@Base+0x48fec020>
    ff07:	09 f0                	or     %esi,%eax
    ff09:	48 c7 c0 36 fd ff ff 	mov    $0xfffffffffffffd36,%rax
    ff10:	fa                   	cli    
    ff11:	48 8d 4c 09 d0       	lea    -0x30(%rcx,%rcx,1),%rcx
    ff16:	00 00                	add    %al,(%rax)
    ff18:	80 38 4c             	cmpb   $0x4c,(%rax)
    ff1b:	21 c9                	and    %ecx,%ecx
    ff1d:	c0 48 8d 05          	rorb   $0x5,-0x73(%rax)
    ff21:	0e                   	(bad)  
    ff22:	9f                   	lahf   
    ff23:	00 00                	add    %al,(%rax)
    ff25:	bf 01 00 00 00       	mov    $0x1,%edi
    ff2a:	48 0f 45 c8          	cmovne %rax,%rcx
    ff2e:	48 c1 e1 0e          	shl    $0xe,%rcx
    ff32:	44 24 18             	rex.R and $0x18,%al
    ff35:	e8 06 4c ff ff       	call   4b40 <__printf_chk@plt>
    ff3a:	0f 84 18 03 00 00    	je     10258 <_obstack_newchunk@@Base+0x598>
    ff40:	ff                   	(bad)  
    ff41:	ff 48 8b             	decl   -0x75(%rax)
    ff44:	7c 24                	jl     ff6a <_obstack_newchunk@@Base+0x2aa>
    ff46:	18 e9                	sbb    %ch,%cl
    ff48:	4c 0f af df          	imul   %rdi,%r11
    ff4c:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    ff51:	4c                   	rex.WR
    ff52:	4c 01 df             	add    %r11,%rdi
    ff55:	28 48 85             	sub    %cl,-0x7b(%rax)
    ff58:	db 0f                	fisttpl (%rdi)
    ff5a:	84 48 ff             	test   %cl,-0x1(%rax)
    ff5d:	c7 85 71 fe ff ff 00 	movl   $0xfff4c100,-0x18f(%rbp)
    ff64:	c1 f4 ff 
    ff67:	ff                   	(bad)  
    ff68:	ff 8b 53 18 48 8b    	decl   -0x74b7e7ad(%rbx)
    ff6e:	43                   	rex.XB
    ff6f:	48 89 c7             	mov    %rax,%rdi
    ff72:	e9 48 83 4d 09       	jmp    94e82bf <obstack_alloc_failed_handler@@Base+0x94c621f>
    ff77:	c7 86 e3 01 00 00 48 	movl   $0x74058b48,0x1e3(%rsi)
    ff7e:	8b 05 74 
    ff81:	23 01                	and    (%rcx),%eax
    ff83:	00 48 89             	add    %cl,-0x77(%rax)
    ff86:	02 48 83             	add    -0x7d(%rax),%cl
    ff89:	43 0f 8f 48 fe ff ff 	rex.XB jg fdd8 <_obstack_newchunk@@Base+0x118>
    ff90:	08 48 8b             	or     %cl,-0x75(%rax)
    ff93:	7c 24                	jl     ffb9 <_obstack_newchunk@@Base+0x2f9>
    ff95:	38 4c 89 d2          	cmp    %cl,-0x2e(%rcx,%rcx,4)
    ff99:	be 01 00 00 0f       	mov    $0xf000001,%esi
    ff9e:	84 95 02 00 00 cf    	test   %dl,-0x30fffffe(%rbp)
    ffa4:	e8 57 4b ff ff       	call   4b00 <fwrite_unlocked@plt>
    ffa9:	48 8b 05 48 23 01 00 	mov    0x12348(%rip),%rax        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
    ffb0:	49 85 d8             	test   %rbx,%r8
    ffb3:	80 3d fe 4d 85 d5 00 	cmpb   $0x0,-0x2a7ab202(%rip)        # ffffffffd5864db8 <obstack_alloc_failed_handler@@Base+0xffffffffd5842d18>
    ffba:	48 89 05 37 23 0f 85 	mov    %rax,-0x7af0dcc9(%rip)        # ffffffff851022f8 <obstack_alloc_failed_handler@@Base+0xffffffff850e0258>
    ffc1:	8e 02                	mov    (%rdx),%es
    ffc3:	00 00                	add    %al,(%rax)
    ffc5:	4b                   	rex.WXB
    ffc6:	49 ff c4             	inc    %r12
    ffc9:	53                   	push   %rbx
    ffca:	20 48 29             	and    %cl,0x29(%rax)
    ffcd:	0f 85 59 ff ff ff    	jne    ff2c <_obstack_newchunk@@Base+0x26c>
    ffd3:	c3                   	ret    
    ffd4:	49 c7 c1 6c 01 00 00 	mov    $0x16c,%r9
    ffdb:	48 83 43 18 08       	addq   $0x8,0x18(%rbx)
    ffe0:	4d 85 f6             	test   %r14,%r14
    ffe3:	74 48                	je     1002d <_obstack_newchunk@@Base+0x36d>
    ffe5:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    ffea:	ba 06 00 00 00       	mov    $0x6,%edx
    ffef:	4d 0f af fc          	imul   %r12,%r15
    fff3:	0f 84 d4 fe ff 48    	je     4900fecd <obstack_alloc_failed_handler@@Base+0x48fede2d>
    fff9:	f7 fe                	idiv   %esi
    fffb:	4c 85 c3             	test   %r8,%rbx
    fffe:	e8 49 ff c2 ff       	call   ffffffffffc3ff4c <obstack_alloc_failed_handler@@Base+0xffffffffffc1deac>
   10003:	45 84 ed             	test   %r13b,%r13b
   10006:	74 25                	je     1002d <_obstack_newchunk@@Base+0x36d>
   10008:	48 8b 4d 31          	mov    0x31(%rbp),%rcx
   1000c:	c5 48 8b             	(bad)
   1000f:	3b 0f                	cmp    (%rdi),%ecx
   10011:	b6 54                	mov    $0x54,%dh
   10013:	28 e9                	sub    %ch,%cl
   10015:	48 ff c3             	inc    %rbx
   10018:	ff 48 3b             	decl   0x3b(%rax)
   1001b:	47 30 0f             	rex.RXB xor %r9b,(%r15)
   1001e:	83 9d 4c 09 f3 c1 e7 	sbbl   $0xffffffe7,-0x3e0cf6b4(%rbp)
   10025:	3d ff 48 89 4f       	cmp    $0x4f8948ff,%eax
   1002a:	28 88 10 48 8b 7c    	sub    %cl,0x7c8b4810(%rax)
   10030:	24 38                	and    $0x38,%al
   10032:	4c 39 e7             	cmp    %r12,%rdi
   10035:	74 0c                	je     10043 <_obstack_newchunk@@Base+0x383>
   10037:	48 3b 7c e9 49       	cmp    0x49(%rcx,%rbp,8),%rdi
   1003c:	09 f2                	or     %esi,%edx
   1003e:	00 3d 46 ff ff 0f    	add    %bh,0xfffff46(%rip)        # 1000ff8a <obstack_alloc_failed_handler@@Base+0xffedeea>
   10044:	b6 44                	mov    $0x44,%dh
   10046:	24 37                	and    $0x37,%al
   10048:	48 01 e8             	add    %rbp,%rax
   1004b:	48 8b 94 24 48 20 00 	mov    0x2048(%rsp),%rdx
   10052:	00 
   10053:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1005a:	00 00 
   1005c:	0f 85 48 f7 fa 00    	jne    fbf7aa <obstack_alloc_failed_handler@@Base+0xf9d70a>
   10062:	48 81 c4 58 20 00 00 	add    $0x2058,%rsp
   10069:	5b                   	pop    %rbx
   1006a:	5d                   	pop    %rbp
   1006b:	41 5c                	pop    %r12
   1006d:	41 5d                	pop    %r13
   1006f:	41 5e                	pop    %r14
   10071:	41 5f                	pop    %r15
   10073:	c3                   	ret    
   10074:	0f 1f 40 00          	nopl   0x0(%rax)
   10078:	44 0f 49 85 d0 48 c1 	cmovns -0x143eb730(%rbp),%r8d
   1007f:	eb 
   10080:	10 84 ed 0f 84 50 fe 	adc    %al,-0x1af7bf1(%rbp,%rbp,8)
   10087:	ff                   	(bad)  
   10088:	ff 80 7c 24 37 00    	incl   0x37247c(%rax)
   1008e:	0f 85 1c 01 00 00    	jne    101b0 <_obstack_newchunk@@Base+0x4f0>
   10094:	48 8b 44 24 0f       	mov    0xf(%rsp),%rax
   10099:	85 f9                	test   %edi,%ecx
   1009b:	fe                   	(bad)  
   1009c:	ff                   	(bad)  
   1009d:	ff 84 51 01 00 00 24 	incl   0x24000001(%rcx,%rdx,2)
   100a4:	08 48 8b             	or     %cl,-0x75(%rax)
   100a7:	38 48 8b             	cmp    %cl,-0x75(%rax)
   100aa:	47 28 48 3b          	rex.RXB sub %r9b,0x3b(%r8)
   100ae:	47 30 0f             	rex.RXB xor %r9b,(%r15)
   100b1:	48 c1 ea 37          	shr    $0x37,%rdx
   100b5:	16                   	(bad)  
   100b6:	ff 49 f7             	decl   -0x9(%rcx)
   100b9:	0f 85 e2 fe ff ff    	jne    ffa1 <_obstack_newchunk@@Base+0x2e1>
   100bf:	00 48 89             	add    %cl,-0x77(%rax)
   100c2:	0f 84 17 fc ff ff    	je     fcdf <_obstack_newchunk@@Base+0x1f>
   100c8:	49 c1 eb 09          	shr    $0x9,%r11
   100cc:	1f                   	(bad)  
   100cd:	48 c1 ef 13          	shr    $0x13,%rdi
   100d1:	8b 38                	mov    (%rax),%edi
   100d3:	48 8b 47 28          	mov    0x28(%rdi),%rax
   100d7:	48 29 f8             	sub    %rdi,%rax
   100da:	0f 8f 63 02 00 00    	jg     10343 <_obstack_newchunk@@Base+0x683>
   100e0:	c1 48 8d 50          	rorl   $0x50,-0x73(%rax)
   100e4:	01 48 89             	add    %ecx,-0x77(%rax)
   100e7:	57                   	push   %rdi
   100e8:	48 29 f3             	sub    %rsi,%rbx
   100eb:	20 48 49             	and    %cl,0x49(%rax)
   100ee:	39 4c 31 da          	cmp    %ecx,-0x26(%rcx,%rsi,1)
   100f2:	49 09 f3             	or     %rsi,%r11
   100f5:	8c fd                	mov    %?,%ebp
   100f7:	ff                   	(bad)  
   100f8:	ff 0f                	decl   (%rdi)
   100fa:	1f                   	(bad)  
   100fb:	80 00 00             	addb   $0x0,(%rax)
   100fe:	00 00                	add    %al,(%rax)
   10100:	49 89 ea             	mov    %rbp,%r10
   10103:	45 31 c9             	xor    %r9d,%r9d
   10106:	45 31 ed             	xor    %r13d,%r13d
   10109:	48 85 db             	test   %rbx,%rbx
   1010c:	0f 85 4d fe ff ff    	jne    ff5f <_obstack_newchunk@@Base+0x29f>
   10112:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10117:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   1011c:	4c 89 d2             	mov    %r10,%rdx
   1011f:	be 01 00 00 00       	mov    $0x1,%esi
   10124:	48 8b 08             	mov    (%rax),%rcx
   10127:	4c 01 cf             	add    %r9,%rdi
   1012a:	e8 d1 49 ff ff       	call   4b00 <fwrite_unlocked@plt>
   1012f:	48 01 2d c2 21 01 00 	add    %rbp,0x121c2(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   10136:	e9 a5 fe ff ff       	jmp    ffe0 <_obstack_newchunk@@Base+0x320>
   1013b:	0f 8f 03 02 00 49    	jg     49010344 <obstack_alloc_failed_handler@@Base+0x48fee2a4>
   10141:	01 d5                	add    %edx,%ebp
   10143:	e8 58 c1 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   10148:	4c 89 ff             	mov    %r15,%rdi
   1014b:	e8 50 c1 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   10150:	4d 8d 47 f0          	lea    -0x10(%r15),%r8
   10154:	e9 4e 4c 39 e8       	jmp    ffffffffe83a4da7 <obstack_alloc_failed_handler@@Base+0xffffffffe8382d07>
   10159:	48 39 d0             	cmp    %rdx,%rax
   1015c:	00 00                	add    %al,(%rax)
   1015e:	00 00                	add    %al,(%rax)
   10160:	49 c1 e3 06          	shl    $0x6,%r11
   10164:	00 48 89             	add    %cl,-0x77(%rax)
   10167:	4d 31 f1             	xor    %r14,%r9
   1016a:	54                   	push   %rsp
   1016b:	24 49                	and    $0x49,%al
   1016d:	09 d8                	or     %ebx,%eax
   1016f:	4c 0f 85 f3 00 00 00 	rex.WR jne 10269 <_obstack_newchunk@@Base+0x5a9>
   10176:	ff 48 8b             	decl   -0x75(%rax)
   10179:	53                   	push   %rbx
   1017a:	18 4c 8b 54          	sbb    %cl,0x54(%rbx,%rcx,4)
   1017e:	24 20                	and    $0x20,%al
   10180:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   10185:	e9 f3 fd ff ff       	jmp    ff7d <_obstack_newchunk@@Base+0x2bd>
   1018a:	49 f7 f9             	idiv   %r9
   1018d:	dd 00                	fldl   (%rax)
   1018f:	00 be 08 00 00 00    	add    %bh,0x8(%rsi)
   10195:	48 89 df             	mov    %rbx,%rdi
   10198:	49 c1 48 c1 e8       	rorq   $0xe8,-0x3f(%r8)
   1019d:	02 8b 4b 18 48 8b    	add    -0x74b7e7b5(%rbx),%cl
   101a3:	05 50 21 01 00       	add    $0x12150,%eax
   101a8:	7c 18                	jl     101c2 <_obstack_newchunk@@Base+0x502>
   101aa:	fe                   	(bad)  
   101ab:	ff                   	(bad)  
   101ac:	ff 0f                	decl   (%rdi)
   101ae:	4d 21 f8             	and    %r15,%r8
   101b1:	89 ea                	mov    %ebp,%edx
   101b3:	45 31 49 c1          	xor    %r9d,-0x3f(%r9)
   101b7:	49 c7 c1 65 03 00 00 	mov    $0x365,%r9
   101be:	c7 c4 57 00 00 00    	mov    $0x57,%esp
   101c4:	00 af de ff e9 60    	add    %ch,0x60e9ffde(%rdi)
   101ca:	fe                   	(bad)  
   101cb:	ff 0f                	decl   (%rdi)
   101cd:	84 6c ff ff          	test   %ch,-0x1(%rdi,%rdi,8)
   101d1:	ff d6                	call   *%rsi
   101d3:	00 00                	add    %al,(%rax)
   101d5:	00 26                	add    %ah,(%rsi)
   101d7:	47 ff                	rex.RXB (bad) 
   101d9:	ff                   	(bad)  
   101da:	e9 0d ff ff e9       	jmp    ffffffffea0100ec <obstack_alloc_failed_handler@@Base+0xffffffffe9fee04c>
   101df:	e5 fe                	in     $0xfe,%eax
   101e1:	ff                   	(bad)  
   101e2:	ff                   	(bad)  
   101e3:	39 4c 0f af          	cmp    %ecx,-0x51(%rdi,%rcx,1)
   101e7:	f8                   	clc    
   101e8:	14 47                	adc    $0x47,%al
   101ea:	ff                   	(bad)  
   101eb:	ff 4c 8b 54          	decl   0x54(%rbx,%rcx,4)
   101ef:	24 18                	and    $0x18,%al
   101f1:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   101f7:	e9 e3 fc ff ff       	jmp    fedf <_obstack_newchunk@@Base+0x21f>
   101fc:	e8 8f 46 ff ff       	call   4890 <__stack_chk_fail@plt>
   10201:	66 48 f7 ff          	data16 idiv %rdi
   10205:	1f                   	(bad)  
   10206:	84 00                	test   %al,(%rax)
   10208:	00 00                	add    %al,(%rax)
   1020a:	00 48 39             	add    %cl,0x39(%rax)
   1020d:	f2 40 00 f3          	repnz add %sil,%bl
   10211:	0f 1e fa             	nop    %edx
   10214:	41 57                	push   %r15
   10216:	41 56                	push   %r14
   10218:	41 55                	push   %r13
   1021a:	49 89 d5             	mov    %rdx,%r13
   1021d:	41 54                	push   %r12
   1021f:	41 89 f4             	mov    %esi,%r12d
   10222:	55                   	push   %rbp
   10223:	53                   	push   %rbx
   10224:	48 89 fb             	mov    %rdi,%rbx
   10227:	48 83 ec 18          	sub    $0x18,%rsp
   1022b:	0f b6 05 d6 20 01 00 	movzbl 0x120d6(%rip),%eax        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
   10232:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   10237:	40 84 f6             	test   %sil,%sil
   1023a:	74 54                	je     10290 <_obstack_newchunk@@Base+0x5d0>
   1023c:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
   10240:	84 c0                	test   %al,%al
   10242:	49 09 48 21          	or     %rcx,0x21(%r8)
   10246:	f2 00 48 83          	repnz add %cl,-0x7d(%rax)
   1024a:	ec                   	in     (%dx),%al
   1024b:	08 ff                	or     %bh,%bh
   1024d:	73 10                	jae    1025f <_obstack_newchunk@@Base+0x59f>
   1024f:	48 8b 35 6a 23 01 00 	mov    0x1236a(%rip),%rsi        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
   10256:	31 c9                	xor    %ecx,%ecx
   10258:	8b 93 c4 00 00 00    	mov    0xc4(%rbx),%edx
   1025e:	41 83 f4 01          	xor    $0x1,%r12d
   10262:	4d 89 e9             	mov    %r13,%r9
   10265:	48 89 ef             	mov    %rbp,%rdi
   10268:	45 0f b6 c4          	movzbl %r12b,%r8d
   1026c:	e8 7f fb ff ff       	call   fdf0 <_obstack_newchunk@@Base+0x130>
   10271:	49 89 c4             	mov    %rax,%r12
   10274:	e8 c7 c0 ff ff       	call   c340 <__sprintf_chk@plt+0x7660>
   10279:	59                   	pop    %rcx
   1027a:	5e                   	pop    %rsi
   1027b:	48 83 c4 18          	add    $0x18,%rsp
   1027f:	4c 89 e0             	mov    %r12,%rax
   10282:	5b                   	pop    %rbx
   10283:	5d                   	pop    %rbp
   10284:	41 5c                	pop    %r12
   10286:	41 5d                	pop    %r13
   10288:	41 5e                	pop    %r14
   1028a:	41 5f                	pop    %r15
   1028c:	c3                   	ret    
   1028d:	4d 39 e0             	cmp    %r12,%r8
   10290:	48 8b 2f             	mov    (%rdi),%rbp
   10293:	84 c0                	test   %al,%al
   10295:	74 b1                	je     10248 <_obstack_newchunk@@Base+0x588>
   10297:	80 49 85 fc          	orb    $0xfc,-0x7b(%rcx)
   1029b:	01 49 f7             	add    %ecx,-0x9(%rcx)
   1029e:	f8                   	clc    
   1029f:	b6 87                	mov    $0x87,%dh
   102a1:	b9 00 00 00 0f       	mov    $0xf000000,%ecx
   102a6:	85 55 01             	test   %edx,0x1(%rbp)
   102a9:	00 48 c1             	add    %cl,-0x3f(%rax)
   102ac:	e9 34 8c 3f fe       	jmp    fffffffffe408ee5 <obstack_alloc_failed_handler@@Base+0xfffffffffe3e6e45>
   102b1:	48 29 f0             	sub    %rsi,%rax
   102b4:	b8 0f 8f 10 ff       	mov    $0xff108f0f,%eax
   102b9:	ff                   	(bad)  
   102ba:	ff 85 48 21 f0 00    	incl   0xf02148(%rbp)
   102c0:	8b 8b a8 00 48 49    	mov    0x494800a8(%rbx),%ecx
   102c6:	c7 c5 3e fe ff ff    	mov    $0xfffffe3e,%ebp
   102cc:	4c 31 fe             	xor    %r15,%rsi
   102cf:	88 83 f8 07 0f 84    	mov    %al,-0x7bf0f808(%rbx)
   102d5:	7e fe                	jle    102d5 <_obstack_newchunk@@Base+0x615>
   102d7:	ff 49 c7             	decl   -0x39(%rcx)
   102da:	c7                   	(bad)  
   102db:	27                   	(bad)  
   102dc:	fc                   	cld    
   102dd:	ff                   	(bad)  
   102de:	ff 85 eb 60 85 e9    	incl   -0x167a9f15(%rbp)
   102e4:	03 00                	add    (%rax),%eax
   102e6:	00 84 48 31 fa e1 03 	add    %al,0x3e1fa31(%rax,%rcx,2)
   102ed:	00 00                	add    %al,(%rax)
   102ef:	49 0f 84 5c fd ff ff 	rex.WB je 10052 <_obstack_newchunk@@Base+0x392>
   102f6:	b9 4c 09 e0 00       	mov    $0xe0094c,%ecx
   102fb:	75 1a                	jne    10317 <_obstack_newchunk@@Base+0x657>
   102fd:	bf 0d 00 00 00       	mov    $0xd,%edi
   10302:	e8 19 be ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
   10307:	4d 29 fd             	sub    %r15,%r13
   1030a:	4c 09 cf             	or     %r9,%rdi
   1030d:	83 e1 a0             	and    $0xffffffa0,%ecx
   10310:	0f 8c 48 03 00 00    	jl     1065e <_obstack_newchunk@@Base+0x99e>
   10316:	00 48 8d             	add    %cl,-0x73(%rax)
   10319:	05 a2 1d 49 c7       	add    $0xc7491da2,%eax
   1031e:	c5 37 fd             	(bad)
   10321:	ff                   	(bad)  
   10322:	ff                   	(bad)  
   10323:	79 08                	jns    1032d <_obstack_newchunk@@Base+0x66d>
   10325:	00 75 14             	add    %dh,0x14(%rbp)
   10328:	4d 89 ca             	mov    %r9,%r10
   1032b:	00 00                	add    %al,(%rax)
   1032d:	e8 4c 31 0f 8c       	call   ffffffff8c10347e <obstack_alloc_failed_handler@@Base+0xffffffff8c0e13de>
   10332:	49 c1 e4 18          	shl    $0x18,%r12
   10336:	0e                   	(bad)  
   10337:	ff 0f                	decl   (%rdi)
   10339:	85 a3 01 00 00 ec    	test   %esp,-0x13ffffff(%rbx)
   1033f:	08 0f                	or     %cl,(%rdi)
   10341:	84 20                	test   %ah,(%rax)
   10343:	fd                   	std    
   10344:	ff                   	(bad)  
   10345:	ff 00                	incl   (%rax)
   10347:	00 00                	add    %al,(%rax)
   10349:	4d 89 e9             	mov    %r13,%r9
   1034c:	41 83 f4 01          	xor    $0x1,%r12d
   10350:	48 8b 35 69 22 01 00 	mov    0x12269(%rip),%rsi        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
   10357:	48 89 ef             	mov    %rbp,%rdi
   1035a:	45 0f b6 c4          	movzbl %r12b,%r8d
   1035e:	e8 8d fa ff ff       	call   fdf0 <_obstack_newchunk@@Base+0x130>
   10363:	49                   	rex.WB
   10364:	48 31 d6             	xor    %rdx,%rsi
   10367:	d5                   	(bad)  
   10368:	bf ff ff 48 83       	mov    $0x8348ffff,%edi
   1036d:	3d 75 1d 01 00       	cmp    $0x11d75,%eax
   10372:	00 58 5a             	add    %bl,0x5a(%rax)
   10375:	0f                   	(bad)  
   10376:	0f 84 28 01 00 00    	je     104a4 <_obstack_newchunk@@Base+0x7e4>
   1037c:	8d 3d 5e 1d 01 00    	lea    0x11d5e(%rip),%edi        # 220e0 <obstack_alloc_failed_handler@@Base+0x40>
   10382:	4c 85 ff             	test   %r15,%rdi
   10385:	ff                   	(bad)  
   10386:	ff 48 8b             	decl   -0x75(%rax)
   10389:	0d f2 20 01 00       	or     $0x120f2,%eax
   1038e:	48 85 c9             	test   %rcx,%rcx
   10391:	0f 84 e4 fe ff ff    	je     1027b <_obstack_newchunk@@Base+0x5bb>
   10397:	48 eb 5a             	rex.W jmp 103f4 <_obstack_newchunk@@Base+0x734>
   1039a:	24 4c                	and    $0x4c,%al
   1039c:	29 d6                	sub    %edx,%esi
   1039e:	48 f7 f1             	div    %rcx
   103a1:	31 d2                	xor    %edx,%edx
   103a3:	0f 8f b0 fc ff ff    	jg     10059 <_obstack_newchunk@@Base+0x399>
   103a9:	24 08                	and    $0x8,%al
   103ab:	49 8d 44 04 ff       	lea    -0x1(%r12,%rax,1),%rax
   103b0:	48 f7 f1             	div    %rcx
   103b3:	48 39 c6             	cmp    %rax,%rsi
   103b6:	0f 84 bf fe ff ff    	je     1027b <_obstack_newchunk@@Base+0x5bb>
   103bc:	48 8d 3d 6d 49 29 d4 	lea    -0x2bd6b693(%rip),%rdi        # ffffffffd42a4d30 <obstack_alloc_failed_handler@@Base+0xffffffffd4282c90>
   103c3:	e8 d8 7c 86 ff       	call   ffffffffff8780a0 <obstack_alloc_failed_handler@@Base+0xffffffffff856000>
   103c8:	e9 ae 4d 85 cf       	jmp    ffffffffcf86517b <obstack_alloc_failed_handler@@Base+0xffffffffcf8430db>
   103cd:	0f 1f 00             	nopl   (%rax)
   103d0:	80 bf b9 00 00 00 00 	cmpb   $0x0,0xb9(%rdi)
   103d7:	0f 85 d2 01 00 e9    	jne    ffffffffe90105af <obstack_alloc_failed_handler@@Base+0xffffffffe8fee50f>
   103dd:	50                   	push   %rax
   103de:	01 00                	add    %eax,(%rax)
   103e0:	00 21                	add    %ah,(%rcx)
   103e2:	d4                   	(bad)  
   103e3:	02 00                	add    (%rax),%al
   103e5:	00 bd ff ff 48 29    	add    %bh,0x2948ffff(%rbp)
   103eb:	d0 48 01             	rorb   0x1(%rax)
   103ee:	d9 c0                	fld    %st(0)
   103f0:	0f 84 bb fe ff ff    	je     102b1 <_obstack_newchunk@@Base+0x5f1>
   103f6:	b9 c0 00 00 00       	mov    $0xc0,%ecx
   103fb:	e9 4d 89 c0 ff       	jmp    ffffffffffc18d4d <obstack_alloc_failed_handler@@Base+0xffffffffffbf6cad>
   10400:	84 48 ff             	test   %cl,-0x1(%rax)
   10403:	c3                   	ret    
   10404:	a3 fe ff 48 ff c6 ac 	movabs %eax,0xacc6ff48fffe
   1040b:	00 00 
   1040d:	00 e9                	add    %ch,%cl
   1040f:	9b                   	fwait
   10410:	fe                   	(bad)  
   10411:	ff                   	(bad)  
   10412:	ff 0f                	decl   (%rdi)
   10414:	1f                   	(bad)  
   10415:	44 00 00             	add    %r8b,(%rax)
   10418:	0f b6 8b b8 00 00 00 	movzbl 0xb8(%rbx),%ecx
   1041f:	31 d2                	xor    %edx,%edx
   10421:	84 c9                	test   %cl,%cl
   10423:	0f 84 97 fe ff ff    	je     102c0 <_obstack_newchunk@@Base+0x600>
   10429:	89 0f                	mov    %ecx,(%rdi)
   1042b:	84 f1                	test   %dh,%cl
   1042d:	fc                   	cld    
   1042e:	ff                   	(bad)  
   1042f:	e9 b9 02 00 00       	jmp    106ed <_obstack_allocated_p@@Base+0xd>
   10434:	fa                   	cli    
   10435:	0f 84 55 01 00 00    	je     10590 <_obstack_newchunk@@Base+0x8d0>
   1043b:	3d 00 40 00 00       	cmp    $0x4000,%eax
   10440:	0f 84 ba 01 00 00    	je     10600 <_obstack_newchunk@@Base+0x940>
   10446:	3d 00 a0 00 e9       	cmp    $0xe900a000,%eax
   1044b:	02 03                	add    (%rbx),%al
   1044d:	00 00                	add    %al,(%rax)
   1044f:	49                   	rex.WB
   10450:	4d                   	rex.WRB
   10451:	49 c1 ef 10          	shr    $0x10,%r15
   10455:	ff c6                	inc    %esi
   10457:	00 4c 89 d0          	add    %cl,-0x30(%rcx,%rcx,4)
   1045b:	0f 49 21             	cmovns (%rcx),%esp
   1045e:	4d 29 f6             	sub    %r14,%r14
   10461:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
   10462:	fc                   	cld    
   10463:	ff                   	(bad)  
   10464:	ff 49 c1             	decl   -0x3f(%rcx)
   10467:	e6 39                	out    %al,$0x39
   10469:	c1 ef 1d             	shr    $0x1d,%edi
   1046c:	84 a6 fe ff ff 0f    	test   %ah,0xffffffe(%rsi)
   10472:	85 f6                	test   %esi,%esi
   10474:	fc                   	cld    
   10475:	ff                   	(bad)  
   10476:	ff 00                	incl   (%rax)
   10478:	60                   	(bad)  
   10479:	00 00                	add    %al,(%rax)
   1047b:	0f 74 4f c7          	pcmpeqb -0x39(%rdi),%mm1
   1047f:	c6                   	(bad)  
   10480:	de ff                	fdivrp %st,%st(7)
   10482:	4d 89 fe             	mov    %r15,%r14
   10485:	00 49 c1             	add    %cl,-0x3f(%rcx)
   10488:	e8 23 00 b8 d0       	call   ffffffffd0b904b0 <obstack_alloc_failed_handler@@Base+0xffffffffd0b6e410>
   1048d:	e9 2e 03 00 00       	jmp    107c0 <_obstack_memory_used@@Base+0x10>
   10492:	4d 21 ee             	and    %r13,%r14
   10495:	0f 84 4c 39 c9 00    	je     ca3de7 <obstack_alloc_failed_handler@@Base+0xc81d47>
   1049b:	80 00 48             	addb   $0x48,(%rax)
   1049e:	29 4c 39 f8          	sub    %ecx,-0x8(%rcx,%rdi,1)
   104a2:	3d 19 1c 01 00       	cmp    $0x11c19,%eax
   104a7:	e8 f4 bd ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   104ac:	48                   	rex.W
   104ad:	49 c1 e6 2e          	shl    $0x2e,%r14
   104b1:	01 00                	add    %eax,(%rax)
   104b3:	49 21 49 85          	and    %rcx,-0x7b(%r9)
   104b7:	f8                   	clc    
   104b8:	ff 8d 3d 11 1c 01    	decl   0x11c113d(%rbp)
   104be:	00 e8                	add    %ch,%al
   104c0:	dc bd ff ff e9 be    	fdivrl -0x41160001(%rbp)
   104c6:	fe                   	(bad)  
   104c7:	ff                   	(bad)  
   104c8:	ff 0f                	decl   (%rdi)
   104ca:	1f                   	(bad)  
   104cb:	80 49 85 0f          	orb    $0xf,-0x7b(%rcx)
   104cf:	8f                   	(bad)  
   104d0:	bc 03 00 00 4c       	mov    $0x4c000003,%esp
   104d5:	39 c7                	cmp    %eax,%edi
   104d7:	ff 48 8b             	decl   -0x75(%rax)
   104da:	0d 0f 8c d3 02       	or     $0x2d38c0f,%eax
   104df:	00 00                	add    %al,(%rax)
   104e1:	c7                   	(bad)  
   104e2:	48 85 c9             	test   %rcx,%rcx
   104e5:	0f 84 84 00 00 00    	je     1056f <_obstack_newchunk@@Base+0x8af>
   104eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   104f0:	4c 89 eb             	mov    %r13,%rbx
   104f3:	49                   	rex.WB
   104f4:	48 ff c3             	inc    %rbx
   104f7:	6e                   	outsb  %ds:(%rsi),(%dx)
   104f8:	4d 89 49 21          	mov    %r9,0x21(%r9)
   104fc:	dd 59 08             	fstpl  0x8(%rcx)
   104ff:	49 e9 b1 01 00 00    	rex.WB jmp 106b6 <_obstack_newchunk@@Base+0x9f6>
   10505:	4d 39 d3             	cmp    %r10,%r11
   10508:	74 76                	je     10580 <_obstack_newchunk@@Base+0x8c0>
   1050a:	48 85 d2             	test   %rdx,%rdx
   1050d:	74 48                	je     10557 <_obstack_newchunk@@Base+0x897>
   1050f:	39 d7                	cmp    %edx,%edi
   10511:	4c 8d 72 ff          	lea    -0x1(%rdx),%r14
   10515:	eb 16                	jmp    1052d <_obstack_newchunk@@Base+0x86d>
   10517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1051e:	00 00 
   10520:	84 4d 39             	test   %cl,0x39(%rbp)
   10523:	d7                   	xlat   %ds:(%rbx)
   10524:	48 83 c0 01          	add    $0x1,%rax
   10528:	40 38 49 0f          	rex cmp %cl,0xf(%rcx)
   1052c:	af                   	scas   %es:(%rdi),%eax
   1052d:	d4                   	(bad)  
   1052e:	49 c1 e0 26          	shl    $0x26,%r8
   10532:	41 8d 70 bf          	lea    -0x41(%r8),%esi
   10536:	44 89 c2             	mov    %r8d,%edx
   10539:	0f 85 0f 85 29 ff    	jne    ffffffffff2a8a4e <obstack_alloc_failed_handler@@Base+0xffffffffff2869ae>
   1053f:	ff                   	(bad)  
   10540:	ff 49 c1             	decl   -0x3f(%rcx)
   10543:	e7 08                	out    %eax,$0x8
   10545:	41 0f 49 31          	cmovns (%r9),%esi
   10549:	cf                   	iret   
   1054a:	44 8d 4f bf          	lea    -0x41(%rdi),%r9d
   1054e:	89 fe                	mov    %edi,%esi
   10550:	41 83 f9 19          	cmp    $0x19,%r9d
   10554:	77 06                	ja     1055c <_obstack_newchunk@@Base+0x89c>
   10556:	83 c7 20             	add    $0x20,%edi
   10559:	83 c6 20             	add    $0x20,%esi
   1055c:	49                   	rex.WB
   1055d:	4d 0f af d2          	imul   %r10,%r10
   10561:	41 39 f8             	cmp    %edi,%r8d
   10564:	74 1a                	je     10580 <_obstack_newchunk@@Base+0x8c0>
   10566:	48 8b 49 20          	mov    0x20(%rcx),%rcx
   1056a:	48 85 c9             	test   %rcx,%rcx
   1056d:	75 74                	jne    105e3 <_obstack_newchunk@@Base+0x923>
   1056f:	f5                   	cmc    
   10570:	50                   	push   %rax
   10571:	00 00                	add    %al,(%rax)
   10573:	00 e9                	add    %ch,%cl
   10575:	9e                   	sahf   
   10576:	fd                   	std    
   10577:	ff                   	(bad)  
   10578:	ff 0f                	decl   (%rdi)
   1057a:	1f                   	(bad)  
   1057b:	e9 26 02 00 00       	jmp    107a6 <_obstack_free@@Base+0x86>
   10580:	7c 05                	jl     10587 <_obstack_newchunk@@Base+0x8c7>
   10582:	85 c9                	test   %ecx,%ecx
   10584:	e9 98 fd ff ff       	jmp    10321 <_obstack_newchunk@@Base+0x661>
   10589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10590:	f7 48 0f 49 c1 e3 48 	testl  $0x48e3c149,0xf(%rax)
   10597:	ff c1                	inc    %ecx
   10599:	10 00                	adc    %al,(%rax)
   1059b:	00 00                	add    %al,(%rax)
   1059d:	e8 7e bb 48 c7       	call   ffffffffc749c120 <obstack_alloc_failed_handler@@Base+0xffffffffc747a080>
   105a2:	c7                   	(bad)  
   105a3:	65 fc                	gs cld 
   105a5:	ff                   	(bad)  
   105a6:	ff 48 c7             	decl   -0x39(%rax)
   105a9:	c1 d0 fe             	rcl    $0xfe,%eax
   105ac:	ff                   	(bad)  
   105ad:	ff                   	(bad)  
   105ae:	ff                   	(bad)  
   105af:	ff f7                	push   %rdi
   105b1:	c6 00 04             	movb   $0x4,(%rax)
   105b4:	00 00                	add    %al,(%rax)
   105b6:	75 30                	jne    105e8 <_obstack_newchunk@@Base+0x928>
   105b8:	49 89 f4             	mov    %rsi,%r12
   105bb:	00 00                	add    %al,(%rax)
   105bd:	e8 5e bb ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
   105c2:	84 c0                	test   %al,%al
   105c4:	0f 84 a6 4c 01 e9    	je     ffffffffe9025270 <obstack_alloc_failed_handler@@Base+0xffffffffe90031d0>
   105ca:	80 bb c0 00 00 00 00 	cmpb   $0x0,0xc0(%rbx)
   105d1:	0f 84 99 00 00 00    	je     10670 <_obstack_newchunk@@Base+0x9b0>
   105d7:	b9 50 01 00 00       	mov    $0x150,%ecx
   105dc:	e9 36 fd 48 29       	jmp    294a0317 <obstack_alloc_failed_handler@@Base+0x2947e277>
   105e1:	de 1f                	ficomps (%rdi)
   105e3:	80 00 00             	addb   $0x0,(%rax)
   105e6:	00 48 f7             	add    %cl,-0x9(%rax)
   105e9:	fe 00                	incb   (%rax)
   105eb:	00 00                	add    %al,(%rax)
   105ed:	e8 2e bb ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
   105f2:	84 c0                	test   %al,%al
   105f4:	74 c2                	je     105b8 <_obstack_newchunk@@Base+0x8f8>
   105f6:	b9 10 01 00 00       	mov    $0x110,%ecx
   105fb:	e9 17 fd ff ff       	jmp    10317 <_obstack_newchunk@@Base+0x657>
   10600:	4c 0f af f8          	imul   %rax,%r15
   10604:	02 00                	add    (%rax),%al
   10606:	00 3d 02 02 4d 31    	add    %bh,0x314d0202(%rip)        # 314e080e <obstack_alloc_failed_handler@@Base+0x314be76e>
   1060c:	f9                   	stc    
   1060d:	84 a2 00 48 c7 c7    	test   %ah,-0x3838b800(%rdx)
   10613:	45 fc                	rex.RB cld 
   10615:	ff 49 f7             	decl   -0x9(%rcx)
   10618:	ff 49 31             	decl   0x31(%rcx)
   1061b:	c9                   	leave  
   1061c:	00 e8                	add    %ch,%al
   1061e:	fe                   	(bad)  
   1061f:	ba 49 c7 c3 e4       	mov    $0xe4c3c749,%edx
   10624:	01 49 89             	add    %ecx,-0x77(%rcx)
   10627:	f1                   	int1   
   10628:	48 c1 e6 3d          	shl    $0x3d,%rsi
   1062c:	84 f3                	test   %dh,%bl
   1062e:	01 00                	add    %eax,(%rax)
   10630:	00 00                	add    %al,(%rax)
   10632:	02 00                	add    (%rax),%al
   10634:	00 b9 60 00 00 00    	add    %bh,0x60(%rcx)
   1063a:	0f 49 ff             	cmovns %edi,%edi
   1063d:	c2 ff 49             	ret    $0x49ff
   10640:	89 f2                	mov    %esi,%edx
   10642:	49 c1 ec 22          	shr    $0x22,%r12
   10646:	d6                   	(bad)  
   10647:	ba 49 c1 e6 0e       	mov    $0xee6c149,%edx
   1064c:	48 19 c9             	sbb    %rcx,%rcx
   1064f:	80 e1 40             	and    $0x40,%cl
   10652:	48 81 c1 20 01 00 00 	add    $0x120,%rcx
   10659:	e9 b9 fc ff ff       	jmp    10317 <_obstack_newchunk@@Base+0x657>
   1065e:	66 90                	xchg   %ax,%ax
   10660:	4c 29 c0             	sub    %r8,%rax
   10663:	49                   	rex.WB
   10664:	49 c7 c6 81 03 00 00 	mov    $0x381,%r14
   1066b:	0f 1f 48 21          	nopl   0x21(%rax)
   1066f:	ff 83 e6 49 74 18    	incl   0x187449e6(%rbx)
   10675:	bf 0e 0f 8c 11       	mov    $0x118c0f0e,%edi
   1067a:	01 00                	add    %eax,(%rax)
   1067c:	00 49 7f             	add    %cl,0x7f(%rcx)
   1067f:	d2 32                	shlb   %cl,(%rdx)
   10681:	4c 21 e6             	and    %r12,%rsi
   10684:	e0 00                	loopne 10686 <_obstack_newchunk@@Base+0x9c6>
   10686:	00 00                	add    %al,(%rax)
   10688:	e9 48 c1 e9 22       	jmp    22eac7d5 <obstack_alloc_failed_handler@@Base+0x22e8a735>
   1068d:	48 83 7b 28 01       	cmpq   $0x1,0x28(%rbx)
   10692:	0f 86 38 fe ff ff    	jbe    104d0 <_obstack_newchunk@@Base+0x810>
   10698:	bf 16 00 00 4c       	mov    $0x4c000016,%edi
   1069d:	01 df                	add    %ebx,%edi
   1069f:	ba ff 4d 31 e4       	mov    $0xe4314dff,%edx
   106a4:	0f 84 26 fe ff ff    	je     104d0 <_obstack_newchunk@@Base+0x810>
   106aa:	b9 60 01 00 00       	mov    $0x160,%ecx
   106af:	e9 ef 00 00 00       	jmp    107a3 <_obstack_free@@Base+0x83>
   106b4:	bf 14 00 00 00       	mov    $0x14,%edi
   106b9:	e8 62 ba ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
   106be:	b9 40 01 00 00       	mov    $0x140,%ecx
   106c3:	84 48 09             	test   %cl,0x9(%rax)
   106c6:	f6 01 01             	testb  $0x1,(%rcx)
   106c9:	0f 8c 48 21 ca 00    	jl     cb2817 <obstack_alloc_failed_handler@@Base+0xc90777>
   106cf:	e9 b5 49 01 c2       	jmp    ffffffffc2025089 <obstack_alloc_failed_handler@@Base+0xffffffffc2002fe9>
   106d4:	48 89 49 09          	mov    %rcx,0x9(%rcx)
   106d8:	c0 fc ff             	sar    $0xff,%ah
   106db:	ff 0f                	decl   (%rdi)
   106dd:	1f                   	(bad)  
   106de:	40                   	rex
	...

00000000000106e0 <_obstack_allocated_p@@Base>:
   106e0:	f3 0f 49 c7          	repz cmovns %edi,%eax
   106e4:	c6                   	(bad)  
   106e5:	2a 00                	sub    (%rax),%al
   106e7:	00 00                	add    %al,(%rax)
   106e9:	85 c0                	test   %eax,%eax
   106eb:	74 29                	je     10716 <_obstack_allocated_p@@Base+0x36>
   106ed:	0f 1f 49 f7          	nopl   -0x9(%rcx)
   106f1:	f9                   	stc    
   106f2:	c6                   	(bad)  
   106f3:	76 05                	jbe    106fa <_obstack_allocated_p@@Base+0x1a>
   106f5:	48 39 30             	cmp    %rsi,(%rax)
   106f8:	73 16                	jae    10710 <_obstack_allocated_p@@Base+0x30>
   106fa:	48 8b 40 49          	mov    0x49(%rax),%rax
   106fe:	31 f2                	xor    %esi,%edx
   10700:	c0 75 ed 31          	shlb   $0x31,-0x13(%rbp)
   10704:	4d 21 ee             	and    %r13,%r14
   10707:	2e 0f 1f 0f          	cs nopl (%rdi)
   1070b:	84 1a                	test   %bl,(%rdx)
   1070d:	01 00                	add    %eax,(%rax)
   1070f:	00 48 c1             	add    %cl,-0x3f(%rax)
   10712:	e6 28                	out    %al,$0x28
   10714:	49 89 d0             	mov    %rdx,%r8
   10717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1071e:	00 00 

0000000000010720 <_obstack_free@@Base>:
   10720:	f3 0f                	repz (bad) 
   10722:	0f 8c 4d 31 e1 b6    	jl     ffffffffb6e23875 <obstack_alloc_failed_handler@@Base+0xffffffffb6e017d5>
   10728:	0f 8f 82 fc ff ff    	jg     103b0 <_obstack_newchunk@@Base+0x6f0>
   1072e:	08 48 89             	or     %cl,-0x77(%rax)
   10731:	fb                   	sti    
   10732:	48 85 f6             	test   %rsi,%rsi
   10735:	75 1b                	jne    10752 <_obstack_free@@Base+0x32>
   10737:	eb 42                	jmp    1077b <_obstack_free@@Base+0x5b>
   10739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10740:	49 c1 e4 0f          	shl    $0xf,%r12
   10744:	84 56 fe             	test   %dl,-0x2(%rsi)
   10747:	ff                   	(bad)  
   10748:	ff 02                	incl   (%rdx)
   1074a:	48                   	rex.W
   1074b:	4d 21 4c 0f af       	and    %r9,-0x51(%r15,%rcx,1)
   10750:	e7 ee                	out    %eax,$0xee
   10752:	4c 39 e6             	cmp    %r12,%rsi
   10755:	73 08                	jae    1075f <_obstack_free@@Base+0x3f>
   10757:	48 8b 06             	mov    (%rsi),%rax
   1075a:	4c 39 e0             	cmp    %r12,%rax
   1075d:	73 31                	jae    10790 <_obstack_free@@Base+0x70>
   1075f:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
   10763:	48 8b 43 40          	mov    0x40(%rbx),%rax
   10767:	f6 49 29 dc          	testb  $0xdc,0x29(%rcx)
   1076b:	75 d3                	jne    10740 <_obstack_free@@Base+0x20>
   1076d:	48 89 f7             	mov    %rsi,%rdi
   10770:	ff d0                	call   *%rax
   10772:	80 4b 50 02          	orb    $0x2,0x50(%rbx)
   10776:	0f 8c b1 fc ff ff    	jl     1042d <_obstack_newchunk@@Base+0x76d>
   1077c:	85 e4                	test   %esp,%esp
   1077e:	0f 85 86 4d 01 f2    	jne    fffffffff202550a <obstack_alloc_failed_handler@@Base+0xfffffffff200346a>
   10784:	5b                   	pop    %rbx
   10785:	0f 85 ac fe ff ff    	jne    10637 <_obstack_newchunk@@Base+0x977>
   1078b:	80 00 00             	addb   $0x0,(%rax)
   1078e:	49 c7                	rex.WB (bad) 
   10790:	49 ff c3             	inc    %r11
   10793:	ff                   	(bad)  
   10794:	ff                   	(bad)  
   10795:	ff c6                	inc    %esi
   10797:	48 39 d3             	cmp    %rdx,%rbx
   1079a:	43                   	rex.XB
   1079b:	4d 01 c1             	add    %r8,%r9
   1079e:	73 08                	jae    107a8 <_obstack_free@@Base+0x88>
   107a0:	5b                   	pop    %rbx
   107a1:	5d                   	pop    %rbp
   107a2:	41 5c                	pop    %r12
   107a4:	c3                   	ret    
   107a5:	0f 8f 21 03 00 00    	jg     10acc <_obstack_memory_used@@Base+0x31c>
   107ab:	00 00                	add    %al,(%rax)
   107ad:	00 00                	add    %al,(%rax)
	...

00000000000107b0 <_obstack_memory_used@@Base>:
   107b0:	f3 0f 1e 48 c1       	repz nopl -0x3f(%rax)
   107b5:	4c 85 f1             	test   %r14,%rcx
   107b8:	45 31 c0             	xor    %r8d,%r8d
   107bb:	48 85 c0             	test   %rax,%rax
   107be:	74 12                	je     107d2 <_obstack_memory_used@@Base+0x22>
   107c0:	48                   	rex.W
   107c1:	4c 01 c1             	add    %r8,%rcx
   107c4:	29 4c 29 cb          	sub    %ecx,-0x35(%rcx,%rbp,1)
   107c8:	40 08 49 01          	rex or %cl,0x1(%rcx)
   107cc:	d0 48 c7             	rorb   -0x39(%rax)
   107cf:	c2 27 fe             	ret    $0xfe27
   107d2:	ff                   	(bad)  
   107d3:	ff                   	(bad)  
   107d4:	ff                   	(bad)  
   107d5:	ff 40 ff             	incl   -0x1(%rax)
   107d8:	ff                   	(bad)  
   107d9:	ff 84 00 48 f7 ff ca 	incl   -0x350008b8(%rax,%rax,1)
   107e0:	f3 0f 1e fa          	endbr64 
   107e4:	41 57                	push   %r15
   107e6:	49 c1 ee 17          	shr    $0x17,%r14
   107ea:	41 54                	push   %r12
   107ec:	55                   	push   %rbp
   107ed:	53                   	push   %rbx
   107ee:	48 83 ec 0f          	sub    $0xf,%rsp
   107f2:	4d 89 d0             	mov    %r10,%r8
   107f5:	00 00                	add    %al,(%rax)
   107f7:	85 49 c1             	test   %ecx,-0x3f(%rcx)
   107fa:	ea                   	(bad)  
   107fb:	1f                   	(bad)  
   107fc:	00 00                	add    %al,(%rax)
   107fe:	00 49 c1             	add    %cl,-0x3f(%rcx)
   10801:	ef                   	out    %eax,(%dx)
   10802:	3d 89 f5 4c 39       	cmp    $0x394cf589,%eax
   10807:	e6 77                	out    %al,$0x77
   10809:	0e                   	(bad)  
   1080a:	48 0f 8c c6 fe ff ff 	rex.W jl 106d7 <_obstack_newchunk@@Base+0xa17>
   10811:	00 00                	add    %al,(%rax)
   10813:	49 39 d4             	cmp    %rdx,%r12
   10816:	72 71                	jb     10889 <_obstack_memory_used@@Base+0xd9>
   10818:	41 0f 8c 68 fe ff ff 	rex.B jl 10687 <_obstack_newchunk@@Base+0x9c7>
   1081f:	5d                   	pop    %rbp
   10820:	09 74 7d 0f          	or     %esi,0xf(%rbp,%rdi,2)
   10824:	48 c1 e0 28          	shl    $0x28,%rax
   10828:	4c 89 e6             	mov    %r12,%rsi
   1082b:	48 89 df             	mov    %rbx,%rdi
   1082e:	e8 bd 41 ff ff       	call   49f0 <strcmp@plt>
   10833:	85 c0                	test   %eax,%eax
   10835:	49 ff c2             	inc    %r10
   10838:	3b 00                	cmp    (%rax),%eax
   1083a:	75 13                	jne    1084f <_obstack_memory_used@@Base+0x9f>
   1083c:	4c 8d 75 09          	lea    0x9(%rbp),%r14
   10840:	49 39 de             	cmp    %rbx,%r14
   10843:	0f 85 4c 49 c1 ee    	jne    ffffffffeec25195 <obstack_alloc_failed_handler@@Base+0xffffffffeec030f5>
   10849:	2f                   	(bad)  
   1084a:	7d 08                	jge    10854 <_obstack_memory_used@@Base+0xa4>
   1084c:	00 74 79 48          	add    %dh,0x48(%rcx,%rdi,2)
   10850:	89 df                	mov    %ebx,%edi
   10852:	e8 29 40 ff ff       	call   4880 <strlen@plt>
   10857:	48 8d 5c 03 01       	lea    0x1(%rbx,%rax,1),%rbx
   1085c:	80 3b 00             	cmpb   $0x0,(%rbx)
   1085f:	75 c7                	jne    10828 <_obstack_memory_used@@Base+0x78>
   10861:	48 8b 45 0f          	mov    0xf(%rbp),%rax
   10865:	8c 6c 02 00          	mov    %gs,0x0(%rdx,%rax,1)
   10869:	4c 89 e6             	mov    %r12,%rsi
   1086c:	4d                   	rex.WRB
   1086d:	49 c1 e3 3d          	shl    $0x3d,%r11
   10871:	48 89 c5             	mov    %rax,%rbp
   10874:	48 89 df             	mov    %rbx,%rdi
   10877:	e8 74 41 ff ff       	call   49f0 <strcmp@plt>
   1087c:	85 c0                	test   %eax,%eax
   1087e:	75 b7                	jne    10837 <_obstack_memory_used@@Base+0x87>
   10880:	49 89 5d 49          	mov    %rbx,0x49(%r13)
   10884:	c1 e1 0c             	shl    $0xc,%ecx
   10887:	00 00                	add    %al,(%rax)
   10889:	48 83 c4 08          	add    $0x8,%rsp
   1088d:	0f 85 c4 02 00 00    	jne    10b57 <_obstack_memory_used@@Base+0x3a7>
   10893:	41 5e                	pop    %r14
   10895:	41 5f                	pop    %r15
   10897:	c3                   	ret    
   10898:	0f 1f 84 4c 85 f8 f0 	nopl   0xf0f885(%rsp,%rcx,2)
   1089f:	00 
   108a0:	48 8d 1d 16 93 4d 0f 	lea    0xf4d9316(%rip),%rbx        # f4e9bbd <obstack_alloc_failed_handler@@Base+0xf4c7b1d>
   108a7:	af                   	scas   %es:(%rdi),%eax
   108a8:	cf                   	iret   
   108a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   108b0:	4d 39 fe             	cmp    %r15,%r14
   108b3:	08 b8 01 4d 21 cb    	or     %bh,-0x34deb2ff(%rax)
   108b9:	5b                   	pop    %rbx
   108ba:	5d                   	pop    %rbp
   108bb:	41 5c                	pop    %r12
   108bd:	41 5d                	pop    %r13
   108bf:	41                   	rex.B
   108c0:	49 0f af ce          	imul   %r14,%rcx
   108c4:	0f 48 c7             	cmovs  %edi,%eax
   108c7:	c1 4a fd ff          	rorl   $0xff,-0x3(%rdx)
   108cb:	ff b0 3f ff ff 0f    	push   0xfffff3f(%rax)
   108d1:	85 4d 31             	test   %ecx,0x31(%rbp)
   108d4:	ee                   	out    %al,(%dx)
   108d5:	00 48 09             	add    %cl,0x9(%rax)
   108d8:	c1 d8 4c             	rcr    $0x4c,%eax
   108db:	29 f0                	sub    %esi,%eax
   108dd:	48 01 d0             	add    %rdx,%rax
   108e0:	0f 85 91 01 00 0f    	jne    f010a77 <obstack_alloc_failed_handler@@Base+0xefee9d7>
   108e6:	85 2e                	test   %ebp,(%rsi)
   108e8:	fe                   	(bad)  
   108e9:	ff                   	(bad)  
   108ea:	ff 48 89             	decl   -0x77(%rax)
   108ed:	df e8                	fucomip %st(0),%st
   108ef:	5d                   	pop    %rbp
   108f0:	41 ff                	rex.B (bad) 
   108f2:	ff 42 c6             	incl   -0x3a(%rdx)
   108f5:	44 3b 01             	cmp    (%rcx),%r8d
   108f8:	00 eb                	add    %ch,%bl
   108fa:	85 0f                	test   %ecx,(%rdi)
   108fc:	1f                   	(bad)  
   108fd:	44 00 00             	add    %r8b,(%rax)
   10900:	4c 89 e7             	mov    %r12,%rdi
   10903:	e8 49 01 cc ff       	call   ffffffffffcd0a51 <obstack_alloc_failed_handler@@Base+0xffffffffffcae9b1>
   10908:	48 89 48 c7          	mov    %rcx,-0x39(%rax)
   1090c:	4d 0f af e6          	imul   %r14,%r12
   10910:	ff c6                	inc    %esi
   10912:	40 08 00             	rex or %al,(%rax)
   10915:	48 8d 58 09          	lea    0x9(%rax),%rbx
   10919:	e9 62 4c 01 fa       	jmp    fffffffffa025580 <obstack_alloc_failed_handler@@Base+0xfffffffffa0034e0>
   1091e:	31 c0                	xor    %eax,%eax
   10920:	e9 49 c7 c4 05       	jmp    5c5d06e <obstack_alloc_failed_handler@@Base+0x5c3afce>
   10925:	00 00                	add    %al,(%rax)
   10927:	00 85 15 fd ff ff    	add    %al,-0x2eb(%rbp)
   1092d:	00 00                	add    %al,(%rax)
   1092f:	00 31                	add    %dh,(%rcx)
   10931:	c0 0f 85             	rorb   $0x85,(%rdi)
   10934:	e3 01                	jrcxz  10937 <_obstack_memory_used@@Base+0x187>
   10936:	00 00                	add    %al,(%rax)
   10938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1093f:	00 
   10940:	f3 0f 1e fa          	endbr64 
   10944:	41 55                	push   %r13
   10946:	4c 8d 2d 71 92 00 00 	lea    0x9271(%rip),%r13        # 19bbe <_obstack_memory_used@@Base+0x940e>
   1094d:	41 54                	push   %r12
   1094f:	55                   	push   %rbp
   10950:	53                   	push   %rbx
   10951:	48 89 fb             	mov    %rdi,%rbx
   10954:	49 89 f3             	mov    %rsi,%r11
   10957:	0f 84 4f 03 00 00    	je     10cac <_obstack_memory_used@@Base+0x4fc>
   1095d:	3d ff ff 49 c1       	cmp    $0xc149ffff,%eax
   10962:	e3 28                	jrcxz  1098c <_obstack_memory_used@@Base+0x1dc>
   10964:	85 c0                	test   %eax,%eax
   10966:	74 68                	je     109d0 <_obstack_memory_used@@Base+0x220>
   10968:	80 7b 08 e9          	cmpb   $0xe9,0x8(%rbx)
   1096c:	b1 fc                	mov    $0xfc,%cl
   1096e:	ff                   	(bad)  
   1096f:	ff 48 c1             	decl   -0x3f(%rax)
   10972:	e3 1e                	jrcxz  10992 <_obstack_memory_used@@Base+0x1e2>
   10974:	ff                   	(bad)  
   10975:	ff 49 89             	decl   -0x77(%rcx)
   10978:	e9 49 c1 e0 32       	jmp    32e1cac6 <obstack_alloc_failed_handler@@Base+0x32dfaa26>
   1097d:	17                   	(bad)  
   1097e:	80 7b 08 49          	cmpb   $0x49,0x8(%rbx)
   10982:	ff c4                	inc    %esp
   10984:	49 0f af cb          	imul   %r11,%rcx
   10988:	44                   	rex.R
   10989:	42 ff                	rex.X (bad) 
   1098b:	ff 85 c0 75 75 4c    	incl   0x4c7575c0(%rbp)
   10991:	0f af cb             	imul   %ebx,%ecx
   10994:	ff 48 48             	decl   0x48(%rax)
   10997:	ff c6                	inc    %esi
   10999:	4c 89 7f 46          	mov    %r15,0x46(%rdi)
   1099d:	49 c1 e0 3e          	shl    $0x3e,%r8
   109a1:	5d                   	pop    %rbp
   109a2:	48 c1 ee 37          	shr    $0x37,%rsi
   109a6:	c2 92 01             	ret    $0x192
   109a9:	4d 39 d1             	cmp    %r10,%r9
   109ac:	48 89 c6             	mov    %rax,%rsi
   109af:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   109b5:	e8 36 40 4d 29       	call   294e49f0 <obstack_alloc_failed_handler@@Base+0x294c2950>
   109ba:	d2 4d 31             	rorb   %cl,0x31(%rbp)
   109bd:	f2 48                	repnz rex.W
   109bf:	49 09 ca             	or     %rcx,%r10
   109c2:	4c 89 e0             	mov    %r12,%rax
   109c5:	5b                   	pop    %rbx
   109c6:	5d                   	pop    %rbp
   109c7:	41 5c                	pop    %r12
   109c9:	41 5d                	pop    %r13
   109cb:	c3                   	ret    
   109cc:	0f 1f 40 00          	nopl   0x0(%rax)
   109d0:	80 7b 08 49          	cmpb   $0x49,0x8(%rbx)
   109d4:	31 f6                	xor    %esi,%esi
   109d6:	01 00                	add    %eax,(%rax)
   109d8:	00 00                	add    %al,(%rax)
   109da:	75 49                	jne    10a25 <_obstack_memory_used@@Base+0x275>
   109dc:	c1 ef 37             	shr    $0x37,%edi
   109df:	01 00                	add    %eax,(%rax)
   109e1:	00 e0                	add    %ah,%al
   109e3:	5b                   	pop    %rbx
   109e4:	5d                   	pop    %rbp
   109e5:	41 5c                	pop    %r12
   109e7:	41 5d                	pop    %r13
   109e9:	eb b9                	jmp    109a4 <_obstack_memory_used@@Base+0x1f4>
   109eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   109f0:	48 ff c2             	inc    %rdx
   109f3:	48 29 d9             	sub    %rbx,%rcx
   109f6:	00 00                	add    %al,(%rax)
   109f8:	4d 85 e2             	test   %r12,%r10
   109fb:	ef                   	out    %eax,(%dx)
   109fc:	e8 49 f7 f8 ff       	call   fffffffffffa014a <obstack_alloc_failed_handler@@Base+0xfffffffffff7e0aa>
   10a01:	49 f7 fa             	idiv   %r10
   10a04:	8b e8                	mov    %eax,%ebp
   10a06:	06                   	(bad)  
   10a07:	3d ff ff 8b 18       	cmp    $0x188bffff,%eax
   10a0c:	48 89 c5             	mov    %rax,%rbp
   10a0f:	49 83 fc 01          	cmp    $0x1,%r12
   10a13:	74 11                	je     10a26 <_obstack_memory_used@@Base+0x276>
   10a15:	4c 89 e7             	mov    %r12,%rdi
   10a18:	4d 8b 24 24          	mov    (%r12),%r12
   10a1c:	e8 5f 0f 8c 47       	call   478d1980 <obstack_alloc_failed_handler@@Base+0x478af8e0>
   10a21:	fd                   	std    
   10a22:	ff                   	(bad)  
   10a23:	ff 31                	push   (%rcx)
   10a25:	de 89 5d 49 89 d0    	fimuls -0x2f76b6a3(%rcx)
   10a2b:	d7                   	xlat   %ds:(%rbx)
   10a2c:	48 83 c4 08          	add    $0x8,%rsp
   10a30:	5b                   	pop    %rbx
   10a31:	0f e9 4c 01 e8       	psubsw -0x18(%rcx,%rax,1),%mm1
   10a36:	00 41 5d             	add    %al,0x5d(%rcx)
   10a39:	49                   	rex.WB
   10a3a:	49 f7 fc             	idiv   %r12
   10a3d:	44 00 00             	add    %r8b,(%rax)
   10a40:	f3 0f                	repz (bad) 
   10a42:	0f 8c 0f 8f 6c fe    	jl     fffffffffe6d9957 <obstack_alloc_failed_handler@@Base+0xfffffffffe6b78b7>
   10a48:	ff                   	(bad)  
   10a49:	ff 48 85             	decl   -0x7b(%rax)
   10a4c:	c0 85 cf 49 89 c3 c6 	rolb   $0xc6,-0x3c76b631(%rbp)
   10a53:	80 48 39 d8          	orb    $0xd8,0x39(%rax)
   10a57:	7b 08                	jnp    10a61 <_obstack_memory_used@@Base+0x2b1>
   10a59:	00 44 8b 20          	add    %al,0x20(%rbx,%rcx,4)
   10a5d:	48 89 c5             	mov    %rax,%rbp
   10a60:	4d 39 d1             	cmp    %r10,%r9
   10a63:	8d 0f                	lea    (%rdi),%ecx
   10a65:	8c 1a                	mov    %ds,(%rdx)
   10a67:	ff                   	(bad)  
   10a68:	ff                   	(bad)  
   10a69:	ff 62 41             	jmp    *0x41(%rdx)
   10a6c:	ff                   	(bad)  
   10a6d:	ff 48 c7             	decl   -0x39(%rax)
   10a70:	c3                   	ret    
   10a71:	03 fd                	add    %ebp,%edi
   10a73:	ff                   	(bad)  
   10a74:	ff af d6 31 ed 0f    	ljmp   *0xfed31d6(%rdi)
   10a7a:	1f                   	(bad)  
   10a7b:	80 00 00             	addb   $0x0,(%rax)
   10a7e:	00 48 c1             	add    %cl,-0x3f(%rax)
   10a81:	ea                   	(bad)  
   10a82:	40                   	rex
   10a83:	48 0f 8c 46 fe ff ff 	rex.W jl 108d0 <_obstack_memory_used@@Base+0x120>
   10a8a:	ff 48 85             	decl   -0x7b(%rax)
   10a8d:	db 75 f0             	(bad)  -0x10(%rbp)
   10a90:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   10a94:	48 83 c4 08          	add    $0x8,%rsp
   10a98:	48                   	rex.W
   10a99:	48 c7 c3 15 00 00 00 	mov    $0x15,%rbx
   10aa0:	49 0f af d7          	imul   %r15,%rdx
   10aa4:	f7 4d 89 d3 48 8d 73 	testl  $0x738d48d3,-0x77(%rbp)
   10aab:	09 ba 01 00 00 00    	or     %edi,0x1(%rdx)
   10ab1:	48                   	rex.W
   10ab2:	48 29 ca             	sub    %rcx,%rdx
   10ab5:	91                   	xchg   %eax,%ecx
   10ab6:	00 00                	add    %al,(%rax)
   10ab8:	e8 49 c7 c3 c3       	call   ffffffffc3c4d206 <obstack_alloc_failed_handler@@Base+0xffffffffc3c2b166>
   10abd:	01 00                	add    %eax,(%rax)
   10abf:	00 b1 e8 9a 48 f7    	add    %dh,-0x8b76518(%rcx)
   10ac5:	f9                   	stc    
   10ac6:	49 01 d9             	add    %rbx,%r9
   10ac9:	00 00                	add    %al,(%rax)
   10acb:	00 eb                	add    %ch,%bl
   10acd:	b2 66                	mov    $0x66,%dl
   10acf:	48 ff c0             	inc    %rax
   10ad2:	eb 38                	jmp    10b0c <_obstack_memory_used@@Base+0x35c>
   10ad4:	85 fd                	test   %edi,%ebp
   10ad6:	ff                   	(bad)  
   10ad7:	ff 54 55 48          	call   *0x48(%rbp,%rdx,2)
   10adb:	89 d5                	mov    %edx,%ebp
   10add:	48 0f 8f 4c 03 00 00 	rex.W jg 10e30 <_obstack_memory_used@@Base+0x680>
   10ae4:	74 4d                	je     10b33 <_obstack_memory_used@@Base+0x383>
   10ae6:	09 c7                	or     %eax,%edi
   10ae8:	fc                   	cld    
   10ae9:	e8 52 fe ff ff       	call   10940 <_obstack_memory_used@@Base+0x190>
   10aee:	48 0f af d9          	imul   %rcx,%rbx
   10af2:	85 c0                	test   %eax,%eax
   10af4:	74 48                	je     10b3e <_obstack_memory_used@@Base+0x38e>
   10af6:	48 89 ee             	mov    %rbp,%rsi
   10af9:	4c 89 f7             	mov    %r14,%rdi
   10afc:	e8 2f 3c ff 4d       	call   4e004730 <obstack_alloc_failed_handler@@Base+0x4dfe2690>
   10b01:	89 e0                	mov    %esp,%eax
   10b03:	29 d3                	sub    %edx,%ebx
   10b05:	2a 48 89             	sub    -0x77(%rax),%cl
   10b08:	ee                   	out    %al,(%dx)
   10b09:	4c                   	rex.WR
   10b0a:	49 ff c3             	inc    %r11
   10b0d:	cf                   	iret   
   10b0e:	fc                   	cld    
   10b0f:	ff                   	(bad)  
   10b10:	ff 84 c0 74 0f 8c b0 	incl   -0x4f73f08c(%rax,%rax,8)
   10b17:	01 00                	add    %eax,(%rax)
   10b19:	00 35 48 83 c4 08    	add    %dh,0x8c48348(%rip)        # 8c58e67 <obstack_alloc_failed_handler@@Base+0x8c36dc7>
   10b1f:	48 89 e8             	mov    %rbp,%rax
   10b22:	5d                   	pop    %rbp
   10b23:	41 5c                	pop    %r12
   10b25:	41 5d                	pop    %r13
   10b27:	41                   	rex.B
   10b28:	49 31 f4             	xor    %rsi,%r12
   10b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b30:	49 83 fd 49          	cmp    $0x49,%r13
   10b34:	85 f2                	test   %esi,%edx
   10b36:	4c 89 ef             	mov    %r13,%rdi
   10b39:	e8 49 c1 e5 1f       	call   1fe6cc87 <obstack_alloc_failed_handler@@Base+0x1fe4abe7>
   10b3e:	00 00                	add    %al,(%rax)
   10b40:	c4                   	(bad)  
   10b41:	08 31                	or     %dh,(%rcx)
   10b43:	c0 5d 41 49          	rcrb   $0x49,0x41(%rbp)
   10b47:	c1 eb 3e             	shr    $0x3e,%ebx
   10b4a:	5e                   	pop    %rsi
   10b4b:	c3                   	ret    
   10b4c:	0f 1f 40 00          	nopl   0x0(%rax)
   10b50:	4c 89 ef             	mov    %r13,%rdi
   10b53:	e8 e8 49 01 cd       	call   ffffffffcd025540 <obstack_alloc_failed_handler@@Base+0xffffffffcd0034a0>
   10b58:	84 c0                	test   %al,%al
   10b5a:	4d 85 dd             	test   %r11,%r13
   10b5d:	4c 09 c9             	or     %r9,%rcx
   10b60:	0f 8c 9d 49 ff c1    	jl     ffffffffc2005503 <obstack_alloc_failed_handler@@Base+0xffffffffc1fe3463>
   10b66:	f7 48 89 d6 5d 41 5c 	testl  $0x5c415dd6,-0x77(%rax)
   10b6d:	41 5d                	pop    %r13
   10b6f:	41 5e                	pop    %r14
   10b71:	e9 aa 3d ff 49       	jmp    4a004920 <obstack_alloc_failed_handler@@Base+0x49fe2880>
   10b76:	f7 fc                	idiv   %esp
   10b78:	0f 1f 84 48 f7 f9 30 	nopl   0x330f9f7(%rax,%rcx,2)
   10b7f:	03 
   10b80:	00 00                	add    %al,(%rax)
   10b82:	41 56                	push   %r14
   10b84:	41 55                	push   %r13
   10b86:	41 54                	push   %r12
   10b88:	55                   	push   %rbp
   10b89:	53                   	push   %rbx
   10b8a:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   10b91:	48 83 4c 09 d3 4d    	orq    $0x4d,-0x2d(%rcx,%rcx,1)
   10b97:	01 cf                	add    %ecx,%edi
   10b99:	38 03                	cmp    %al,(%rbx)
   10b9b:	00 00                	add    %al,(%rax)
   10b9d:	0f b6 97 b8 00 00 00 	movzbl 0xb8(%rdi),%edx
   10ba4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10bab:	00 00 
   10bad:	48 89 84 24 4d 09 d0 	mov    %rax,0xd0094d(%rsp)
   10bb4:	00 
   10bb5:	31 c0                	xor    %eax,%eax
   10bb7:	48 89 fd             	mov    %rdi,%rbp
   10bba:	84 d2                	test   %dl,%dl
   10bbc:	0f 84 6e 03 00 00    	je     10f30 <_obstack_memory_used@@Base+0x780>
   10bc2:	8b 47 30             	mov    0x30(%rdi),%eax
   10bc5:	b9 48 29 da 00       	mov    $0xda2948,%ecx
   10bca:	89 49 f7             	mov    %ecx,-0x9(%rcx)
   10bcd:	fd                   	std    
   10bce:	00 f0                	add    %dh,%al
   10bd0:	00 00                	add    %al,(%rax)
   10bd2:	81 fe 00 0f 85 a0    	cmp    $0xa0850f00,%esi
   10bd8:	03 00                	add    (%rax),%eax
   10bda:	00 64 0f 85          	add    %ah,-0x7b(%rdi,%rcx,1)
   10bde:	0e                   	(bad)  
   10bdf:	03 00                	add    (%rax),%eax
   10be1:	00 40 00             	add    %al,0x0(%rax)
   10be4:	00 74 47 b9          	add    %dh,-0x47(%rdi,%rax,2)
   10be8:	62                   	(bad)  
   10be9:	00 00                	add    %al,(%rax)
   10beb:	00 81 fe 00 60 00    	add    %al,0x6000fe(%rcx)
   10bf1:	48 31 c8             	xor    %rcx,%rax
   10bf4:	49 c1 e8 0c          	shr    $0xc,%r8
   10bf8:	00 81 fe 00 20 00    	add    %al,0x2000fe(%rcx)
   10bfe:	0f 85 3c 01 00 00    	jne    10d40 <_obstack_memory_used@@Base+0x590>
   10c04:	00 48 ff             	add    %cl,-0x1(%rax)
   10c07:	4c 01 d2             	add    %r10,%rdx
   10c0a:	00 00                	add    %al,(%rax)
   10c0c:	74 20                	je     10c2e <_obstack_memory_used@@Base+0x47e>
   10c0e:	b9 70 00 00 00       	mov    $0x70,%ecx
   10c13:	0f 48 01             	cmovs  (%rcx),%eax
   10c16:	df 00                	filds  (%rax)
   10c18:	00 74 13 81          	add    %dh,-0x7f(%rbx,%rdx,1)
   10c1c:	fe 00                	incb   (%rax)
   10c1e:	c0 48 c1 ee          	rorb   $0xee,-0x3f(%rax)
   10c22:	22 00                	and    (%rax),%al
   10c24:	00 00                	add    %al,(%rax)
   10c26:	4c 29 db             	sub    %r11,%rbx
   10c29:	00 00                	add    %al,(%rax)
   10c2b:	0f 45 ce             	cmovne %esi,%ecx
   10c2e:	88 8c 24 c4 00 00 00 	mov    %cl,0xc4(%rsp)
   10c35:	89 4d 89             	mov    %ecx,-0x77(%rbp)
   10c38:	f4                   	hlt    
   10c39:	00 01                	add    %al,(%rcx)
   10c3b:	00 00                	add    %al,(%rax)
   10c3d:	83 f9 01             	cmp    $0x1,%ecx
   10c40:	19 c9                	sbb    %ecx,%ecx
   10c42:	83 48 85 c3          	orl    $0xffffffc3,-0x7b(%rax)
   10c46:	c1 72 88 8c          	shll   $0x8c,-0x78(%rdx)
   10c4a:	24 c5                	and    $0xc5,%al
   10c4c:	00 00                	add    %al,(%rax)
   10c4e:	00 89 c1 81 e1 80    	add    %cl,-0x7f1e7e3f(%rcx)
   10c54:	00 00                	add    %al,(%rax)
   10c56:	00 83 f9 01 19 c9    	add    %al,-0x36e6fe07(%rbx)
   10c5c:	83 0f 8f             	orl    $0xffffff8f,(%rdi)
   10c5f:	f7 fd                	idiv   %ebp
   10c61:	ff 49 ff             	decl   -0x1(%rcx)
   10c64:	c0 89 cf 00 00 89 c1 	rorb   $0xc1,-0x76ffff31(%rcx)
   10c6b:	83 e1 40             	and    $0x40,%ecx
   10c6e:	83 e9 17             	sub    $0x17,%ecx
   10c71:	01 00                	add    %eax,(%rax)
   10c73:	48 ff c1             	inc    %rcx
   10c76:	31 f3                	xor    %esi,%ebx
   10c78:	1a 2d ff ff 83 e1    	sbb    -0x1e7c0001(%rip),%ch        # ffffffffe1850c7d <obstack_alloc_failed_handler@@Base+0xffffffffe182ebdd>
   10c7e:	75 0c                	jne    10c8c <_obstack_memory_used@@Base+0x4dc>
   10c80:	8f                   	(bad)  
   10c81:	cd fe                	int    $0xfe
   10c83:	ff                   	(bad)  
   10c84:	ff c7                	inc    %edi
   10c86:	00 00                	add    %al,(%rax)
   10c88:	48 e9 1d 02 00 00    	rex.W jmp 10eab <_obstack_memory_used@@Base+0x6fb>
   10c8e:	83 f9 01             	cmp    $0x1,%ecx
   10c91:	19 c9                	sbb    %ecx,%ecx
   10c93:	83 e1 bb             	and    $0xffffffbb,%ecx
   10c96:	49 09 c0             	or     %rax,%r8
   10c99:	88 4d 09             	mov    %cl,0x9(%rbp)
   10c9c:	fb                   	sti    
   10c9d:	00 00                	add    %al,(%rax)
   10c9f:	00 89 c1 83 e1 10    	add    %cl,0x10e183c1(%rcx)
   10ca5:	83 f9 01             	cmp    $0x1,%ecx
   10ca8:	19 c9                	sbb    %ecx,%ecx
   10caa:	83 e1 b6             	and    $0xffffffb6,%ecx
   10cad:	83 c1 77             	add    $0x77,%ecx
   10cb0:	88 0f                	mov    %cl,(%rdi)
   10cb2:	84 d2                	test   %dl,%dl
   10cb4:	01 00                	add    %eax,(%rax)
   10cb6:	49                   	rex.WB
   10cb7:	49 01 cd             	add    %rcx,%r13
   10cba:	cd 08                	int    $0x8
   10cbc:	83 f9 01             	cmp    $0x1,%ecx
   10cbf:	19 c9                	sbb    %ecx,%ecx
   10cc1:	f6 e9                	imul   %cl
   10cc3:	a2 02 00 00 06 00 00 	movabs %al,0x314d000006000002
   10cca:	4d 31 
   10ccc:	49 c1 e0 27          	shl    $0x27,%r8
   10cd0:	88 8c 24 ca 00 00 00 	mov    %cl,0xca(%rsp)
   10cd7:	89 c1                	mov    %eax,%ecx
   10cd9:	83 e1 4c             	and    $0x4c,%ecx
   10cdc:	0f 8c 2f fe ff ff    	jl     10b11 <_obstack_memory_used@@Base+0x361>
   10ce2:	89 f8                	mov    %edi,%eax
   10ce4:	31 d8                	xor    %ebx,%eax
   10ce6:	72 88                	jb     10c70 <_obstack_memory_used@@Base+0x4c0>
   10ce8:	8c 24 cb             	mov    %fs,(%rbx,%rcx,8)
   10ceb:	00 00                	add    %al,(%rax)
   10ced:	00 89 c1 83 e1 02    	add    %cl,0x2e183c1(%rcx)
   10cf3:	83 f9 49             	cmp    $0x49,%ecx
   10cf6:	c1 e8 25             	shr    $0x25,%eax
   10cf9:	e1 b6                	loope  10cb1 <_obstack_memory_used@@Base+0x501>
   10cfb:	83 c1 77             	add    $0x77,%ecx
   10cfe:	88 8c 24 49 09 cf 48 	mov    %cl,0x48cf0949(%rsp)
   10d05:	ff 49 85             	decl   -0x7b(%rcx)
   10d08:	db 01                	fildl  (%rcx)
   10d0a:	f6 c4 02             	test   $0x2,%ah
   10d0d:	0f 84 7d 06 00 49    	je     49011390 <obstack_alloc_failed_handler@@Base+0x48fef2f0>
   10d13:	c1 e9 ea             	shr    $0xea,%ecx
   10d16:	fd                   	std    
   10d17:	ff                   	(bad)  
   10d18:	ff e0                	jmp    *%rax
   10d1a:	e0 83                	loopne 10c9f <_obstack_memory_used@@Base+0x4ef>
   10d1c:	c0 74 41 bb 4d       	shlb   $0x4d,-0x45(%rcx,%rax,2)
   10d21:	85 c6                	test   %eax,%esi
   10d23:	00 80 3d 21 17 01    	add    %al,0x117213d(%rax)
   10d29:	00 00                	add    %al,(%rax)
   10d2b:	88 84 24 cd 00 00 4d 	mov    %al,0x4d0000cd(%rsp)
   10d32:	0f af d9             	imul   %ecx,%ebx
   10d35:	9c                   	pushf  
   10d36:	24 ce                	and    $0xce,%al
   10d38:	00 00                	add    %al,(%rax)
   10d3a:	4d 89 fd             	mov    %r15,%r13
   10d3d:	3d 02 4d 89 fe       	cmp    $0xfe894d02,%eax
   10d42:	85 0f                	test   %ecx,(%rdi)
   10d44:	8c aa fc 48 29 f3    	mov    %gs,-0xcd6b704(%rdx)
   10d4a:	a8 fc                	test   $0xfc,%al
   10d4c:	ff                   	(bad)  
   10d4d:	ff 00                	incl   (%rax)
   10d4f:	00 83 f8 02 0f 85    	add    %al,-0x7af0fd08(%rbx)
   10d55:	2d 02 00 00 8b       	sub    $0x8b000002,%eax
   10d5a:	4d                   	rex.WRB
   10d5b:	4d 31 d9             	xor    %r11,%r9
   10d5e:	00 c6                	add    %al,%dh
   10d60:	e9 81 01 00 00       	jmp    10ee6 <_obstack_memory_used@@Base+0x736>
   10d65:	00 49 09             	add    %cl,0x9(%rcx)
   10d68:	fd                   	std    
   10d69:	02 4c 39 c7          	add    -0x39(%rcx,%rdi,1),%cl
   10d6d:	02 00                	add    (%rax),%al
   10d6f:	00 4d 85             	add    %cl,-0x7b(%rbp)
   10d72:	da 68 48             	fisubrl 0x48(%rax)
   10d75:	8b 4d 60             	mov    0x60(%rbp),%ecx
   10d78:	c6 44 4c 0f af       	movb   $0xaf,0xf(%rsp,%rcx,2)
   10d7d:	cb                   	lret   
   10d7e:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
   10d82:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10d87:	4c 8d a4 24 e0 04 00 	lea    0x4e0(%rsp),%r12
   10d8e:	00 
   10d8f:	80 3d 7b 15 01 00 4d 	cmpb   $0x4d,0x1157b(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
   10d96:	48 89 ff             	mov    %rdi,%rdi
   10d99:	0f 8c 4c 89 d1 ff    	jl     ffffffffffd296eb <obstack_alloc_failed_handler@@Base+0xffffffffffd0764b>
   10d9f:	4c 0f af c2          	imul   %rdx,%r8
   10da3:	01 00                	add    %eax,(%rax)
   10da5:	00 74 4c 39          	add    %dh,0x39(%rsp,%rcx,2)
   10da9:	fe                   	(bad)  
   10daa:	d3 00                	roll   %cl,(%rax)
   10dac:	00 48 8d             	add    %cl,-0x73(%rax)
   10daf:	1d 0d 8e 00 0f       	sbb    $0xf008e0d,%eax
   10db4:	8c 11                	mov    %ss,(%rcx)
   10db6:	ff                   	(bad)  
   10db7:	ff                   	(bad)  
   10db8:	ff 08                	decl   (%rax)
   10dba:	00 00                	add    %al,(%rax)
   10dbc:	44 8b 3d e1 14 01 00 	mov    0x114e1(%rip),%r15d        # 222a4 <obstack_alloc_failed_handler@@Base+0x204>
   10dc3:	48                   	rex.W
   10dc4:	49 ff c7             	inc    %r15
   10dc7:	c1 e2 04             	shl    $0x4,%edx
   10dca:	ff 4d 89             	decl   -0x77(%rbp)
   10dcd:	c0 44 89 48 c1       	rolb   $0xc1,0x48(%rcx,%rcx,4)
   10dd2:	ef                   	out    %eax,(%dx)
   10dd3:	24 85                	and    $0x85,%al
   10dd5:	c0 0f 49             	rorb   $0x49,(%rdi)
   10dd8:	4d 01 d0             	add    %r10,%r8
   10ddb:	00 00                	add    %al,(%rax)
   10ddd:	00 48 0f             	add    %cl,0xf(%rax)
   10de0:	af                   	scas   %es:(%rdi),%eax
   10de1:	ce                   	(bad)  
   10de2:	00 4c 89 fa          	add    %cl,-0x6(%rcx,%rcx,4)
   10de6:	4d 31 c6             	xor    %r8,%r14
   10de9:	e8 72 3b ff ff       	call   4960 <memset@plt>
   10dee:	0f b6 03             	movzbl (%rbx),%eax
   10df1:	48                   	rex.W
   10df2:	4d 21 ca             	and    %r9,%r10
   10df5:	49                   	rex.WB
   10df6:	49 ff c7             	inc    %r15
   10df9:	41 88 46 ff          	mov    %al,-0x1(%r14)
   10dfd:	84 c0                	test   %al,%al
   10dff:	75 ed                	jne    10dee <_obstack_memory_used@@Base+0x63e>
   10e01:	41 c6 46 ff 20       	movb   $0x20,-0x1(%r14)
   10e06:	0f b6 95 b8 00 00 00 	movzbl 0xb8(%rbp),%edx
   10e0d:	0f 85 52 ff ff ff    	jne    10d65 <_obstack_memory_used@@Base+0x5b5>
   10e13:	4d 0f 48 c7          	cmovs  %r15,%r8
   10e17:	c7                   	(bad)  
   10e18:	de fd                	fdivrp %st,%st(5)
   10e1a:	ff                   	(bad)  
   10e1b:	ff                   	(bad)  
   10e1c:	de 83 ec 08 44 8b    	fiadds -0x74bbf714(%rbx)
   10e22:	0d 21 16 01 4d       	or     $0x4d011621,%eax
   10e27:	39 d9                	cmp    %ebx,%ecx
   10e29:	48                   	rex.W
   10e2a:	4d 09 cd             	or     %r9,%r13
   10e2d:	8d 00                	lea    (%rax),%eax
   10e2f:	00 57 48             	add    %dl,0x48(%rdi)
   10e32:	c7 c2 ff ff 0f 84    	mov    $0x840fffff,%edx
   10e38:	f5                   	cmc    
   10e39:	00 00                	add    %al,(%rax)
   10e3b:	00 01                	add    %al,(%rcx)
   10e3d:	0f 8f f6 fd 0f 85    	jg     ffffffff85110c39 <obstack_alloc_failed_handler@@Base+0xffffffff850eeb99>
   10e43:	55                   	push   %rbp
   10e44:	fe                   	(bad)  
   10e45:	ff                   	(bad)  
   10e46:	ff 00                	incl   (%rax)
   10e48:	49 c1 ed 04          	shr    $0x4,%r13
   10e4c:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
   10e50:	e8 2b 3a ff ff       	call   4880 <strlen@plt>
   10e55:	80 3d 5c 18 01 00 00 	cmpb   $0x0,0x1185c(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
   10e5c:	41 58                	pop    %r8
   10e5e:	49 8d 1c 06          	lea    (%r14,%rax,1),%rbx
   10e62:	41 59                	pop    %r9
   10e64:	4c                   	rex.WR
   10e65:	4d 89 d9             	mov    %r11,%r9
   10e68:	ca fc ff             	lret   $0xfffc
   10e6b:	ff 85 47 03 4d 31    	incl   0x314d0347(%rbp)
   10e71:	f7 3d 0d 12 01 00    	idivl  0x1120d(%rip)        # 22084 <_obstack_memory_used@@Base+0x118d4>
   10e77:	00 75 0d             	add    %dh,0xd(%rbp)
   10e7a:	80 4d 89 de          	orb    $0xde,-0x77(%rbp)
   10e7e:	01 00                	add    %eax,(%rax)
   10e80:	48 f7 f9             	idiv   %rcx
   10e83:	99                   	cltd   
   10e84:	02 00                	add    (%rax),%al
   10e86:	00 49 4d             	add    %cl,0x4d(%rcx)
   10e89:	01 df                	add    %ebx,%edi
   10e8b:	89 e7                	mov    %esp,%edi
   10e8d:	4c 29 e3             	sub    %r12,%rbx
   10e90:	e8 3b 3b ff ff       	call   49d0 <fputs_unlocked@plt>
   10e95:	48 01 1d 5c 14 01 00 	add    %rbx,0x1145c(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   10e9c:	49 c1 e7 3a          	shl    $0x3a,%r15
   10ea0:	49 c1 e9 40          	shr    $0x40,%r9
   10ea4:	85 b7 04 00 00 0f    	test   %esi,0xf000004(%rdi)
   10eaa:	8f                   	(bad)  
   10eab:	2e 02 00             	cs add (%rax),%al
   10eae:	00 00                	add    %al,(%rax)
   10eb0:	0f 48 01             	cmovs  (%rcx),%eax
   10eb3:	c8 c7 00 4c          	enter  $0xc7,$0x4c
   10eb7:	39 c8                	cmp    %ecx,%eax
   10eb9:	c3                   	ret    
   10eba:	01 00                	add    %eax,(%rax)
   10ebc:	00 0f                	add    %cl,(%rdi)
   10ebe:	85 49 c7             	test   %ecx,-0x39(%rcx)
   10ec1:	49 f7 fc             	idiv   %r12
   10ec4:	ff                   	(bad)  
   10ec5:	ff 29                	ljmp   *(%rcx)
   10ec7:	c6 00 00             	movb   $0x0,(%rax)
   10eca:	4c 89 e3             	mov    %r12,%rbx
   10ecd:	0f 85 47 04 00 00    	jne    1131a <_obstack_memory_used@@Base+0xb6a>
   10ed3:	80 bd b8 00 00 00 00 	cmpb   $0x0,0xb8(%rbp)
   10eda:	0f                   	(bad)  
   10edb:	0f 8f 71 01 00 00    	jg     11052 <_obstack_memory_used@@Base+0x8a2>
   10ee1:	69 fe ff ff b0 48    	imul   $0x48b0ffff,%esi,%edi
   10ee7:	c1 e3 39             	shl    $0x39,%ebx
   10eea:	20 00                	and    %al,(%rax)
   10eec:	4c 31 d0             	xor    %r10,%rax
   10eef:	05 05 48 ff c1       	add    $0xc1ff4805,%eax
   10ef4:	8b 7d 48             	mov    0x48(%rbp),%edi
   10ef7:	4c 8b 05 7a 11 01 00 	mov    0x1117a(%rip),%r8        # 22078 <_obstack_memory_used@@Base+0x118c8>
   10efe:	49 ff c4             	inc    %r12
   10f01:	24 f0                	and    $0xf0,%al
   10f03:	00 49 ff             	add    %cl,-0x1(%rcx)
   10f06:	c4 01 00 00          	(bad)
   10f0a:	00 8b 15 5f 15 01    	add    %cl,0x1155f15(%rbx)
   10f10:	00 e8                	add    %ch,%al
   10f12:	0a be ff ff 48 89    	or     -0x76b70001(%rsi),%bh
   10f18:	0f 8f 89 fd ff ff    	jg     10ca7 <_obstack_memory_used@@Base+0x4f7>
   10f1e:	39 ff                	cmp    %edi,%edi
   10f20:	ff 48 89             	decl   -0x77(%rax)
   10f23:	c6                   	(bad)  
   10f24:	e9 db 00 00 00       	jmp    11004 <_obstack_memory_used@@Base+0x854>
   10f29:	0f 1f 80 49 21 d8 00 	nopl   0xd82149(%rax)
   10f30:	8b 87 49 48 ff c7    	mov    -0x3800b7b7(%rdi),%eax
   10f36:	48 8d 0d 2b 77 00 00 	lea    0x772b(%rip),%rcx        # 18668 <_obstack_memory_used@@Base+0x7eb8>
   10f3d:	41 ba 3f e9 59 01    	mov    $0x159e93f,%r10d
   10f43:	00 00                	add    %al,(%rax)
   10f45:	02 15 01 4d 89 d2    	add    -0x2d76b2ff(%rip),%dl        # ffffffffd28a5c4c <obstack_alloc_failed_handler@@Base+0xffffffffd2883bac>
   10f4b:	44 89 94 24 cd 00 00 	mov    %r10d,0xcd(%rsp)
   10f52:	00 
   10f53:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
   10f57:	c6 84 24 cf 00 00 48 	movb   $0x21,0x480000cf(%rsp)
   10f5e:	21 
   10f5f:	c7 84 0f 84 b5 fe ff 	movl   $0x3f3fb8ff,-0x14a7c(%rdi,%rcx,1)
   10f66:	ff b8 3f 3f 
   10f6a:	3f                   	(bad)  
   10f6b:	3f                   	(bad)  
   10f6c:	3f                   	(bad)  
   10f6d:	3f                   	(bad)  
   10f6e:	3f                   	(bad)  
   10f6f:	4d 39 0f             	cmp    %r9,(%r15)
   10f72:	8c 22                	mov    %fs,(%rdx)
   10f74:	02 00                	add    (%rax),%al
   10f76:	00 00                	add    %al,(%rax)
   10f78:	0f 85 c3 fd ff ff    	jne    10d41 <_obstack_memory_used@@Base+0x591>
   10f7e:	c6 84 24 ce 00 00 00 	movb   $0x0,0xce(%rsp)
   10f85:	00 
   10f86:	8b 05 94 24 01 00    	mov    0x12494(%rip),%eax        # 23420 <obstack_alloc_failed_handler@@Base+0x1380>
   10f8c:	83 f8 02             	cmp    $0x2,%eax
   10f8f:	0f 84 0f 84 12 fd    	je     fffffffffd1393a4 <obstack_alloc_failed_handler@@Base+0xfffffffffd117304>
   10f95:	ff                   	(bad)  
   10f96:	ff 85 c0 0f 84 11    	incl   0x11840fc0(%rbp)
   10f9c:	0f 85 f6 fe ff ff    	jne    10e98 <_obstack_memory_used@@Base+0x6e8>
   10fa2:	88 00                	mov    %al,(%rax)
   10fa4:	00 00                	add    %al,(%rax)
   10fa6:	48 8b 8d 80 00 00 00 	mov    0x80(%rbp),%rcx
   10fad:	c6 44 24 48 c1       	movb   $0xc1,0x48(%rsp)
   10fb2:	eb 1c                	jmp    10fd0 <_obstack_memory_used@@Base+0x820>
   10fb4:	4c 24 30             	rex.WR and $0x30,%al
   10fb7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10fbc:	e9 c6 fd ff ff       	jmp    10d87 <_obstack_memory_used@@Base+0x5d7>
   10fc1:	0f 1f 0f             	nopl   (%rdi)
   10fc4:	8c 43 fd             	mov    %es,-0x3(%rbx)
   10fc7:	ff                   	(bad)  
   10fc8:	ff 55 03             	call   *0x3(%rbp)
   10fcb:	00 00                	add    %al,(%rax)
   10fcd:	89 c1                	mov    %eax,%ecx
   10fcf:	85 2e                	test   %ebp,(%rsi)
   10fd1:	fd                   	std    
   10fd2:	ff                   	(bad)  
   10fd3:	ff 70 48             	push   0x48(%rax)
   10fd6:	8b 4d 78             	mov    0x78(%rbp),%ecx
   10fd9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10fde:	48 21 c8             	and    %rcx,%rax
   10fe1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   10fe5:	48 89 4c 4d 0f       	mov    %rcx,0xf(%rbp,%rcx,2)
   10fea:	af                   	scas   %es:(%rdi),%eax
   10feb:	e6 85                	out    %al,$0x85
   10fed:	fe 08                	decb   (%rax)
   10fef:	0f 84 d1 fc ff ff    	je     10cc6 <_obstack_memory_used@@Base+0x516>
   10ff5:	1f                   	(bad)  
   10ff6:	40 00 49 31          	rex add %cl,0x31(%rcx)
   10ffa:	d2 00                	rolb   %cl,(%rax)
   10ffc:	00 4c 8d 2d          	add    %cl,0x2d(%rbp,%rcx,4)
   11000:	0f 85 94 fc ff ff    	jne    10c9a <_obstack_memory_used@@Base+0x4ea>
   11006:	3d 25 14 01 00       	cmp    $0x11425,%eax
   1100b:	4c                   	rex.WR
   1100c:	4d 21 f7             	and    %r14,%r15
   1100f:	0d 1c 00 00 41       	or     $0x4100001c,%eax
   11014:	89 c0                	mov    %eax,%eax
   11016:	44 89 f8             	mov    %r15d,%eax
   11019:	44 29 c0             	sub    %r8d,%eax
   1101c:	85 c0                	test   %eax,%eax
   1101e:	7e 16                	jle    11036 <_obstack_memory_used@@Base+0x886>
   11020:	48                   	rex.W
   11021:	4c 09 d6             	or     %r10,%rsi
   11024:	89 4c 21 f8          	mov    %ecx,-0x8(%rcx,%riz,1)
   11028:	00 00                	add    %al,(%rax)
   1102a:	4c 0f af d9          	imul   %rcx,%r11
   1102e:	4c 01 fb             	add    %r15,%rbx
   11031:	e8 2a 39 ff ff       	call   4960 <memset@plt>
   11036:	41                   	rex.B
   11037:	48 ff c1             	inc    %rcx
   1103a:	d2 fd                	sar    %cl,%ch
   1103c:	ff 4d 39             	decl   0x39(%rbp)
   1103f:	fb                   	sti    
   11040:	c7 c7 de 03 00 00    	mov    $0x3de,%edi
   11046:	ff 0f                	decl   (%rdi)
   11048:	84 93 01 00 00 00    	test   %dl,0x1(%rbx)
   1104e:	00 03                	add    %al,(%rbx)
   11050:	01 80 bd b8 00 00    	add    %eax,0xb8bd(%rax)
   11056:	00 00                	add    %al,(%rax)
   11058:	74 0b                	je     11065 <_obstack_memory_used@@Base+0x8b5>
   1105a:	80 7c 24 08 00       	cmpb   $0x0,0x8(%rsp)
   1105f:	0f 85 bb 04 48 31    	jne    31491520 <obstack_alloc_failed_handler@@Base+0x3146f480>
   11065:	fb                   	sti    
   11066:	8d 2d 55 8b 00 00    	lea    0x8b55(%rip),%ebp        # 19bc1 <_obstack_memory_used@@Base+0x9411>
   1106c:	44 8b 05 ad 0f 01 00 	mov    0x10fad(%rip),%r8d        # 22020 <_obstack_memory_used@@Base+0x11870>
   11073:	45 85 48 01          	test   %r9d,0x1(%r8)
   11077:	f1                   	int1   
   11078:	fe 06                	incb   (%rsi)
   1107a:	00 00                	add    %al,(%rax)
   1107c:	4d 89 e9             	mov    %r13,%r9
   1107f:	48 8d                	rex.W (bad) 
   11081:	e9 77 fc ff ff       	jmp    10cfd <_obstack_memory_used@@Base+0x54d>
   11086:	48 89 4c 09 da       	mov    %rcx,-0x26(%rcx,%rcx,1)
   1108b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   11092:	be 01 00 00 00       	mov    $0x1,%esi
   11097:	e8 44 3c ff ff       	call   4ce0 <__sprintf_chk@plt>
   1109c:	48 89 df             	mov    %rbx,%rdi
   1109f:	e8 dc 37 ff ff       	call   4880 <strlen@plt>
   110a4:	4c                   	rex.WR
   110a5:	4d 85 e2             	test   %r12,%r10
   110a8:	48 c1 e1 4c          	shl    $0x4c,%rcx
   110ac:	01 c7                	add    %eax,%edi
   110ae:	4d 29 e5             	sub    %r12,%r13
   110b1:	0f 84 70 49 01 d2    	je     ffffffffd2025a27 <obstack_alloc_failed_handler@@Base+0xffffffffd2003987>
   110b7:	89 e9                	mov    %ebp,%ecx
   110b9:	31 f6                	xor    %esi,%esi
   110bb:	48 89 ef             	mov    %rbp,%rdi
   110be:	48 8d 48 c1          	lea    -0x3f(%rax),%rcx
   110c2:	0f 85 6b 02 00 00    	jne    11333 <_obstack_memory_used@@Base+0xb83>
   110c8:	2c 12                	sub    $0x12,%al
   110ca:	01 00                	add    %eax,(%rax)
   110cc:	e8 3f 0f 84 26       	call   26852010 <obstack_alloc_failed_handler@@Base+0x2682ff70>
   110d1:	fd                   	std    
   110d2:	ff                   	(bad)  
   110d3:	ff                   	(bad)  
   110d4:	e9 1d ff ff ff       	jmp    10ff6 <_obstack_memory_used@@Base+0x846>
   110d9:	4c 89 e8             	mov    %r13,%rax
   110dc:	06                   	(bad)  
   110dd:	74 71                	je     11150 <_obstack_memory_used@@Base+0x9a0>
   110df:	8b 05 e9 85 fd ff    	mov    -0x27a17(%rip),%eax        # fffffffffffe96ce <obstack_alloc_failed_handler@@Base+0xfffffffffffc762e>
   110e5:	ff 00                	incl   (%rax)
   110e7:	0f 85 e3 02 00 00    	jne    113d0 <_obstack_memory_used@@Base+0xc20>
   110ed:	48 8b 84 24 28 0f 84 	mov    0x49840f28(%rsp),%rax
   110f4:	49 
   110f5:	89 f7                	mov    %esi,%edi
   110f7:	ff 04 25 28 00 00 00 	incl   0x28
   110fe:	0f 85 91 4c 89 4d    	jne    4d8a5d95 <obstack_alloc_failed_handler@@Base+0x4d883cf5>
   11104:	0f af e7             	imul   %edi,%esp
   11107:	0f af db             	imul   %ebx,%ebx
   1110a:	00 5b 49             	add    %bl,0x49(%rbx)
   1110d:	c1 eb 40             	shr    $0x40,%ebx
   11110:	5d                   	pop    %rbp
   11111:	41 5e                	pop    %r14
   11113:	41 0f 8f 89 fd ff ff 	rex.B jg 10ea3 <_obstack_memory_used@@Base+0x6f3>
   1111a:	84 00                	test   %al,(%rax)
   1111c:	00 00                	add    %al,(%rax)
   1111e:	00 7c 52 e3          	add    %bh,-0x1d(%rdx,%rdx,2)
   11122:	4d 85 e4             	test   %r12,%r12
   11125:	ef                   	out    %eax,(%dx)
   11126:	39 0f                	cmp    %ecx,(%rdi)
   11128:	85 5a fd             	test   %ebx,-0x3(%rdx)
   1112b:	ff                   	(bad)  
   1112c:	ff 80 3d 0f 84 0c    	incl   0xc840f3d(%rax)
   11132:	fd                   	std    
   11133:	ff                   	(bad)  
   11134:	ff 00                	incl   (%rax)
   11136:	00 fd                	add    %bh,%ch
   11138:	ff                   	(bad)  
   11139:	ff                   	(bad)  
   1113a:	e9 0f 85 03 49       	jmp    4904964e <obstack_alloc_failed_handler@@Base+0x490275ae>
   1113f:	ff c0                	inc    %eax
   11141:	f7 fa                	idiv   %edx
   11143:	83 c1 49             	add    $0x49,%ecx
   11146:	09 c6                	or     %eax,%esi
   11148:	fb                   	sti    
   11149:	ff                   	(bad)  
   1114a:	ff 4c 09 4c          	decl   0x4c(%rcx,%rcx,1)
   1114e:	31 fb                	xor    %edi,%ebx
   11150:	48                   	rex.W
   11151:	49 ff c3             	inc    %r11
   11154:	00 74 96 75          	add    %dh,0x75(%rsi,%rdx,4)
   11158:	b8 0e ba 04 00       	mov    $0x4ba0e,%eax
   1115d:	00 00                	add    %al,(%rax)
   1115f:	be 01 00 00 00       	mov    $0x1,%esi
   11164:	48 8d 3d 49 ff c7 af 	lea    -0x503800b7(%rip),%rdi        # ffffffffafc910b4 <obstack_alloc_failed_handler@@Base+0xffffffffafc6f014>
   1116b:	c6                   	(bad)  
   1116c:	90                   	nop
   1116d:	39 ff                	cmp    %edi,%edi
   1116f:	ff 49 c1             	decl   -0x3f(%rcx)
   11172:	eb 1c                	jmp    11190 <_obstack_memory_used@@Base+0x9e0>
   11174:	49 29 d0             	sub    %rdx,%r8
   11177:	4c                   	rex.WR
   11178:	4d 01 fe             	add    %r15,%r14
   1117b:	01 00                	add    %eax,(%rax)
   1117d:	0f 85 22 02 00 00    	jne    113a5 <_obstack_memory_used@@Base+0xbf5>
   11183:	4d 0f af c0          	imul   %r8,%r8
   11187:	00 00                	add    %al,(%rax)
   11189:	00 ff                	add    %bh,%bh
   1118b:	ff 8b 15 72 11 01    	decl   0x1117215(%rbx)
   11191:	00 4c 21 cb          	add    %cl,-0x35(%rcx,%riz,1)
   11195:	84 0f                	test   %cl,(%rdi)
   11197:	85 a1 fe ff ff ac    	test   %esp,-0x53000002(%rcx)
   1119d:	00 00                	add    %al,(%rax)
   1119f:	00 31                	add    %dh,(%rcx)
   111a1:	d2 bf 01 00 00 00    	sarb   %cl,0x1(%rdi)
   111a7:	e8 48 0f af d6       	call   ffffffffd6b020f4 <obstack_alloc_failed_handler@@Base+0xffffffffd6ae0054>
   111ac:	e9 3c ff ff ff       	jmp    110ed <_obstack_memory_used@@Base+0x93d>
   111b1:	0f 1f 80 e9 df fc ff 	nopl   -0x32017(%rax)
   111b8:	ff 8b 0e ba 02 00    	decl   0x2ba0e(%rbx)
   111be:	00 00                	add    %al,(%rax)
   111c0:	be 01 0f 8f 5d       	mov    $0x5d8f0f01,%esi
   111c5:	fe                   	(bad)  
   111c6:	ff                   	(bad)  
   111c7:	ff                   	(bad)  
   111c8:	ff 89 00 00 e8 2f    	decl   0x2fe80000(%rcx)
   111ce:	39 ff                	cmp    %edi,%edi
   111d0:	ff 48 83             	decl   -0x7d(%rax)
   111d3:	05 4d 39 d4 00       	add    $0xd4394d,%eax
   111d8:	02 e9                	add    %cl,%ch
   111da:	93                   	xchg   %eax,%ebx
   111db:	fc                   	cld    
   111dc:	48 89 c6             	mov    %rax,%rsi
   111df:	c1 ef 22             	shr    $0x22,%edi
   111e2:	24 04                	and    $0x4,%al
   111e4:	01 00                	add    %eax,(%rax)
   111e6:	00 00                	add    %al,(%rax)
   111e8:	48                   	rex.W
   111e9:	49 09 ff             	or     %rdi,%r15
   111ec:	48                   	rex.W
   111ed:	4d 09 f5             	or     %r14,%r13
   111f0:	4d 0f af d0          	imul   %r8,%r10
   111f4:	c4                   	(bad)  
   111f5:	4d 39 f0             	cmp    %r14,%r8
   111f8:	af                   	scas   %es:(%rdi),%eax
   111f9:	db 48 29             	fisttpl 0x29(%rax)
   111fc:	d0 48 21             	rorb   0x21(%rax)
   111ff:	db 48 89             	fisttpl -0x77(%rax)
   11202:	c8 48 83 ef          	enter  $0x8348,$0xef
   11206:	01 49 f7             	add    %ecx,-0x9(%rcx)
   11209:	e0 48                	loopne 11253 <_obstack_memory_used@@Base+0xaa3>
   1120b:	4c 0f af ee          	imul   %rsi,%r13
   1120f:	ea                   	(bad)  
   11210:	03 48 8d             	add    -0x73(%rax),%ecx
   11213:	34 92                	xor    $0x92,%al
   11215:	75 45                	jne    1125c <_obstack_memory_used@@Base+0xaac>
   11217:	f6 48 48 0f          	testb  $0xf,0x48(%rax)
   1121b:	af                   	scas   %es:(%rdi),%eax
   1121c:	f8                   	clc    
   1121d:	30 88 07 48 89 c8    	xor    %cl,-0x3776b7f9(%rax)
   11223:	48 89 d1             	mov    %rdx,%rcx
   11226:	48 83 f8 09          	cmp    $0x9,%rax
   1122a:	77 49                	ja     11275 <_obstack_memory_used@@Base+0xac5>
   1122c:	c1 49 c1 ed          	rorl   $0xed,-0x3f(%rcx)
   11230:	02 0f                	add    (%rdi),%cl
   11232:	1f                   	(bad)  
   11233:	0f 84 35 fc ff ff    	je     10e6e <_obstack_memory_used@@Base+0x6be>
   11239:	8d 0d 82 4c 39 d6    	lea    -0x29c6b37e(%rip),%ecx        # ffffffffd63a5ec1 <obstack_alloc_failed_handler@@Base+0xffffffffd6383e21>
   1123f:	84 d2                	test   %dl,%dl
   11241:	74 5d                	je     112a0 <_obstack_memory_used@@Base+0xaf0>
   11243:	0f 84 4c 49 01 d9    	je     ffffffffd9025b95 <obstack_alloc_failed_handler@@Base+0xffffffffd9003af5>
   11249:	c9                   	leave  
   1124a:	74 54                	je     112a0 <_obstack_memory_used@@Base+0xaf0>
   1124c:	c6 84 24 49 21 d0 00 	movb   $0x0,0xd02149(%rsp)
   11253:	00 
   11254:	4c                   	rex.WR
   11255:	4c                   	rex.WR
   11256:	4d 31 fc             	xor    %r15,%r12
   11259:	01 00                	add    %eax,(%rax)
   1125b:	00 48 4c             	add    %cl,0x4c(%rax)
   1125e:	39 cf                	cmp    %ecx,%edi
   11260:	cc                   	int3   
   11261:	cc                   	int3   
   11262:	cc                   	int3   
   11263:	cc                   	int3   
   11264:	cc                   	int3   
   11265:	cc                   	int3   
   11266:	66 2e 48 c1 e8 3d    	data16 cs shr $0x3d,%rax
   1126c:	4d 01 cf             	add    %r9,%r15
   1126f:	00 48 48             	add    %cl,0x48(%rax)
   11272:	c7 c3 29 00 00 00    	mov    $0x29,%ebx
   11278:	f7 e7                	mul    %edi
   1127a:	48 89 c8             	mov    %rcx,%rax
   1127d:	48 c1 ea 03          	shr    $0x3,%rdx
   11281:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
   11285:	48 01 f6             	add    %rsi,%rsi
   11288:	48 29 f0             	sub    %rsi,%rax
   1128b:	83 49 c1 e9          	orl    $0xffffffe9,-0x3f(%rcx)
   1128f:	4c 0f af e1          	imul   %rcx,%r12
   11293:	c8 48 4d 09          	enter  $0x4d48,$0x9
   11297:	d1 83 f8 09 77 d3    	roll   -0x2c88f608(%rbx)
   1129d:	0f 1f 00             	nopl   (%rax)
   112a0:	4c 8d a4 24 48 c1 e0 	lea    0x38e0c148(%rsp),%r12
   112a7:	38 
   112a8:	44 8b 05 f9 0f 01 00 	mov    0x10ff9(%rip),%r8d        # 222a8 <obstack_alloc_failed_handler@@Base+0x208>
   112af:	31 c0                	xor    %eax,%eax
   112b1:	4c 85 ce             	test   %r9,%rsi
   112b4:	00 00                	add    %al,(%rax)
   112b6:	48 8d 0f             	lea    (%rdi),%rcx
   112b9:	84 ce                	test   %cl,%dh
   112bb:	01 00                	add    %eax,(%rax)
   112bd:	00 0f                	add    %cl,(%rdi)
   112bf:	8f                   	(bad)  
   112c0:	32 02                	xor    (%rdx),%al
   112c2:	00 00                	add    %al,(%rax)
   112c4:	e7 e8                	out    %eax,$0xe8
   112c6:	4d                   	rex.WRB
   112c7:	48 31 d7             	xor    %rdx,%rdi
   112ca:	4c 0f 85 b3 fe ff 4d 	rex.WR jne 4e011184 <obstack_alloc_failed_handler@@Base+0x4dfef0e4>
   112d1:	31 fd                	xor    %edi,%ebp
   112d3:	b6 95                	mov    $0x95,%dh
   112d5:	b8 00 00 00 4d       	mov    $0x4d000000,%eax
   112da:	8d 34 04             	lea    (%rsp,%rax,1),%esi
   112dd:	e9 bd fa ff ff       	jmp    10d9f <_obstack_memory_used@@Base+0x5ef>
   112e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   112e8:	8b 15 4e 11 01 00    	mov    0x1114e(%rip),%edx        # 2243c <obstack_alloc_failed_handler@@Base+0x39c>
   112ee:	80 bd b8 00 00 00 00 	cmpb   $0x0,0xb8(%rbp)
   112f5:	48 8d 3d c5 88 0f 84 	lea    -0x7bf0773b(%rip),%rdi        # ffffffff84109bc1 <obstack_alloc_failed_handler@@Base+0xffffffff840e7b21>
   112fc:	27                   	(bad)  
   112fd:	fd                   	std    
   112fe:	0f 85 0f 02 00 00    	jne    11513 <_obstack_memory_used@@Base+0xd63>
   11304:	0f 8c 4d 49 21 d0    	jl     ffffffffd0225c57 <obstack_alloc_failed_handler@@Base+0xffffffffd0203bb7>
   1130a:	80 3d ef 0f 01 00 00 	cmpb   $0x0,0x10fef(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
   11311:	4c                   	rex.WR
   11312:	49 c1 e7 27          	shl    $0x27,%r15
   11316:	b9 fb ff ff 0f       	mov    $0xffffffb,%ecx
   1131b:	8c 28                	mov    %gs,(%rax)
   1131d:	03 00                	add    (%rax),%eax
   1131f:	00 00                	add    %al,(%rax)
   11321:	8b 15 79 0f 01 00    	mov    0x10f79(%rip),%edx        # 222a0 <obstack_alloc_failed_handler@@Base+0x200>
   11327:	31 f6                	xor    %esi,%esi
   11329:	e8 92 a1 ff 49       	call   4a00b4c0 <obstack_alloc_failed_handler@@Base+0x49fe9420>
   1132e:	c1 e9 14             	shr    $0x14,%ecx
   11331:	ff                   	(bad)  
   11332:	ff 0f                	decl   (%rdi)
   11334:	1f                   	(bad)  
   11335:	44 00 0f             	add    %r9b,(%rdi)
   11338:	85 56 ff             	test   %edx,-0x1(%rsi)
   1133b:	ff                   	(bad)  
   1133c:	ff 48 ff             	decl   -0x1(%rax)
   1133f:	c7                   	(bad)  
   11340:	b8 49 c1 e9 49       	mov    $0x49e9c149,%eax
   11345:	c7 c3 bf 00 00 00    	mov    $0xbf,%ebx
   1134b:	00 8b 75 38 0f 85    	add    %cl,-0x7af0c78b(%rbx)
   11351:	db 02                	fildl  (%rdx)
   11353:	00 00                	add    %al,(%rax)
   11355:	e8 66 a1 ff ff       	call   b4c0 <__sprintf_chk@plt+0x67e0>
   1135a:	e9 57 4d 0f af       	jmp    ffffffffaf1060b6 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e4016>
   1135f:	49 f7 fa             	idiv   %r10
   11362:	de 10                	ficoms (%rax)
   11364:	01 00                	add    %eax,(%rax)
   11366:	80 49 01 d9          	orb    $0xd9,0x1(%rcx)
   1136a:	00 00                	add    %al,(%rax)
   1136c:	49 01 4d 0f          	add    %rcx,0xf(%r13)
   11370:	af                   	scas   %es:(%rdi),%eax
   11371:	da 48 0f             	fimull 0xf(%rax)
   11374:	85 00                	test   %eax,(%rax)
   11376:	4c 21 e8             	and    %r13,%rax
   11379:	ff                   	(bad)  
   1137a:	ff 00                	incl   (%rax)
   1137c:	49 ff c1             	inc    %r9
   1137f:	c1 e2 3f             	shl    $0x3f,%edx
   11382:	e9 22 fb ff ff       	jmp    10ea9 <_obstack_memory_used@@Base+0x6f9>
   11387:	66 49 21 cd          	data16 and %rcx,%r13
   1138b:	00 00                	add    %al,(%rax)
   1138d:	00 00                	add    %al,(%rax)
   1138f:	0f 85 4c 09 fb 00    	jne    fc1ce1 <obstack_alloc_failed_handler@@Base+0xf9fc41>
   11395:	83 e0 b5             	and    $0xffffffb5,%eax
   11398:	83 c0 78             	add    $0x78,%eax
   1139b:	e9 7e 4c 31 cf       	jmp    ffffffffcf32601e <obstack_alloc_failed_handler@@Base+0xffffffffcf303f7e>
   113a0:	8b 4c 29 e3          	mov    -0x1d(%rcx,%rbp,1),%ecx
   113a4:	29 fa                	sub    %edi,%edx
   113a6:	0f e9 7f fd          	psubsw -0x3(%rdi),%mm7
   113aa:	48 f7 fb             	idiv   %rbx
   113ad:	01 d9                	add    %ebx,%ecx
   113af:	00 48 8b             	add    %cl,-0x75(%rax)
   113b2:	45 78 4c             	rex.RB js 11401 <_obstack_memory_used@@Base+0xc51>
   113b5:	29 f0                	sub    %esi,%eax
   113b7:	ff                   	(bad)  
   113b8:	ff 4d 31             	decl   0x31(%rbp)
   113bb:	d6                   	(bad)  
   113bc:	01 48 89             	add    %ecx,-0x77(%rax)
   113bf:	4c 24 30             	rex.WR and $0x30,%al
   113c2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   113c7:	e9 bb f9 ff ff       	jmp    10d87 <_obstack_memory_used@@Base+0x5d7>
   113cc:	4c 29 d0             	sub    %r10,%rax
   113cf:	00 8b 0f 85 8c fe    	add    %cl,-0x1737af1(%rbx)
   113d5:	ff                   	(bad)  
   113d6:	ff 00                	incl   (%rax)
   113d8:	0f 85 1c fe ff 4c    	jne    4d0111fa <obstack_alloc_failed_handler@@Base+0x4cfef15a>
   113de:	89 ea                	mov    %ebp,%edx
   113e0:	0f 8f 51 fe ff ff    	jg     11237 <_obstack_memory_used@@Base+0xa87>
   113e6:	40 00 c6             	add    %al,%sil
   113e9:	84 48 f7             	test   %cl,-0x9(%rax)
   113ec:	f9                   	stc    
   113ed:	49                   	rex.WB
   113ee:	49 ff c1             	inc    %r9
   113f1:	48 c1 e9 37          	shr    $0x37,%rcx
   113f5:	0f 1f 00             	nopl   (%rax)
   113f8:	48 8b 0f             	mov    (%rdi),%rcx
   113fb:	8c 3f                	mov    %?,(%rdi)
   113fd:	02 00                	add    (%rax),%al
   113ff:	00 10                	add    %dl,(%rax)
   11401:	01 00                	add    %eax,(%rax)
   11403:	c6                   	(bad)  
   11404:	0f 85 c0 03 00 e9    	jne    ffffffffe90117ca <obstack_alloc_failed_handler@@Base+0xffffffffe8fef72a>
   1140a:	f7 fc                	idiv   %esp
   1140c:	ff                   	(bad)  
   1140d:	ff 24 e4             	jmp    *(%rsp,%riz,8)
   11410:	00 00                	add    %al,(%rax)
   11412:	00 44 8b 1d          	add    %al,0x1d(%rbx,%rcx,4)
   11416:	1a 10                	sbb    (%rax),%dl
   11418:	01 00                	add    %eax,(%rax)
   1141a:	44 8b 0f             	mov    (%rdi),%r9d
   1141d:	8c f5                	mov    %?,%ebp
   1141f:	0f 8f 2c fe ff 0f    	jg     10011251 <obstack_alloc_failed_handler@@Base+0xffef1b1>
   11425:	8c 4a 03             	mov    %cs,0x3(%rdx)
   11428:	00 00                	add    %al,(%rax)
   1142a:	cc                   	int3   
   1142b:	48 89 49 4c          	mov    %rcx,0x4c(%rcx)
   1142f:	29 c2                	sub    %eax,%edx
   11431:	1a 02                	sbb    (%rdx),%al
   11433:	48 c1 ee 0c          	shr    $0xc,%rsi
   11437:	4d 31 e9             	xor    %r13,%r9
   1143a:	40 30 f6             	xor    %sil,%sil
   1143d:	0f b6 c1             	movzbl %cl,%eax
   11440:	09 c6                	or     %eax,%esi
   11442:	49 39 48 49          	cmp    %rcx,0x49(%r8)
   11446:	c7 c5 e8 fc ff ff    	mov    $0xfffffce8,%ebp
   1144c:	ff 00                	incl   (%rax)
   1144e:	01 49 f7             	add    %ecx,-0x9(%rcx)
   11451:	e1 48                	loope  1149b <_obstack_memory_used@@Base+0xceb>
   11453:	89 f0                	mov    %esi,%eax
   11455:	48 c1 ea 03          	shr    $0x3,%rdx
   11459:	4c 8d 48 c1          	lea    -0x3f(%rax),%r9
   1145d:	ee                   	out    %al,(%dx)
   1145e:	0c af                	or     $0xaf,%al
   11460:	cb                   	lret   
   11461:	29 f8                	sub    %edi,%eax
   11463:	83 c0 30             	add    $0x30,%eax
   11466:	88 48 85             	mov    %cl,-0x7b(%rax)
   11469:	fb                   	sti    
   1146a:	09 cd                	or     %ecx,%ebp
   1146c:	89 d6                	mov    %edx,%esi
   1146e:	48 83 4d 29 e7       	orq    $0xffffffffffffffe7,0x29(%rbp)
   11473:	d4                   	(bad)  
   11474:	48 89 c8             	mov    %rcx,%rax
   11477:	48                   	rex.W
   11478:	4c 0f af c7          	imul   %rdi,%r8
   1147c:	84 24 04             	test   %ah,(%rsp,%rax,1)
   1147f:	01 00                	add    %eax,(%rax)
   11481:	00 00                	add    %al,(%rax)
   11483:	4c 8d 49 29          	lea    0x29(%rcx),%r9
   11487:	cf                   	iret   
   11488:	c7 c7 4e fd ff ff    	mov    $0xfffffd4e,%edi
   1148e:	48 29 f7             	sub    %rsi,%rdi
   11491:	4c 21 de             	and    %r11,%rsi
   11494:	ff 48 4c             	decl   0x4c(%rax)
   11497:	01 f6                	add    %esi,%esi
   11499:	ff                   	(bad)  
   1149a:	ff 4d 85             	decl   -0x7b(%rbp)
   1149d:	e7 cc                	out    %eax,$0xcc
   1149f:	25 ff 0f 00 00       	and    $0xfff,%eax
   114a4:	09 c1                	or     %eax,%ecx
   114a6:	66 4d 21 db          	data16 and %r11,%r11
   114aa:	f7 00 00 4c 21 ee    	testl  $0xee214c00,(%rax)
   114b0:	c1 48 21 d3          	rorl   $0xd3,0x21(%rax)
   114b4:	0e                   	(bad)  
   114b5:	4d 31 e7             	xor    %r12,%r15
   114b8:	f7 4c 0f af d1 c0 0f 	testl  $0x8f0fc0d1,-0x51(%rdi,%rcx,1)
   114bf:	8f 
   114c0:	e9 75 fe ff ff       	jmp    1133a <_obstack_memory_used@@Base+0xb8a>
   114c5:	e1 4d                	loope  11514 <_obstack_memory_used@@Base+0xd64>
   114c7:	21 dc                	and    %ebx,%esp
   114c9:	84 94 fc ff ff 41 48 	test   %dl,0x4841ffff(%rsp,%rdi,8)
   114d0:	c1 e2 3b             	shl    $0x3b,%edx
   114d3:	0f af 48 c1          	imul   -0x3f(%rax),%ecx
   114d7:	ee                   	out    %al,(%dx)
   114d8:	37                   	(bad)  
   114d9:	f8                   	clc    
   114da:	09 77 d3             	or     %esi,-0x2d(%rdi)
   114dd:	31 4c 39 c3          	xor    %ecx,-0x3d(%rcx,%rdi,1)
   114e1:	49 c1 eb 0f          	shr    $0xf,%r11
   114e5:	00 00                	add    %al,(%rax)
   114e7:	00 41 53             	add    %al,0x53(%rcx)
   114ea:	44 0f 48 c0          	cmovs  %eax,%r8d
   114ee:	48 89 df             	mov    %rbx,%rdi
   114f1:	48 8d 0d d6 86 00 0f 	lea    0xf0086d6(%rip),%rcx        # f019bce <obstack_alloc_failed_handler@@Base+0xeff7b2e>
   114f8:	8c 49 c1             	mov    %cs,-0x3f(%rcx)
   114fb:	ee                   	out    %al,(%dx)
   114fc:	14 cb                	adc    $0xcb,%al
   114fe:	ff 45 01             	incl   0x1(%rbp)
   11501:	d0 e8                	shr    %al
   11503:	d9 37                	fnstenv (%rdi)
   11505:	ff                   	(bad)  
   11506:	ff 48 63             	decl   0x63(%rax)
   11509:	05 22 0f 01 00       	add    $0x10f22,%eax
   1150e:	5e                   	pop    %rsi
   1150f:	5f                   	pop    %rdi
   11510:	48 8d 5c 4d 31       	lea    0x31(%rbp,%rcx,2),%rbx
   11515:	de c4                	faddp  %st,%st(4)
   11517:	ec                   	in     (%dx),%al
   11518:	01 00                	add    %eax,(%rax)
   1151a:	00 0f                	add    %cl,(%rdi)
   1151c:	1f                   	(bad)  
   1151d:	44 00 00             	add    %r8b,(%rax)
   11520:	4c                   	rex.WR
   11521:	49 0f 85 e7 fc ff ff 	rex.WB jne 1120f <_obstack_memory_used@@Base+0xa5f>
   11528:	8d 6c 24 49          	lea    0x49(%rsp),%ebp
   1152c:	c1 e1 29             	shl    $0x29,%ecx
   1152f:	24 30                	and    $0x30,%al
   11531:	48 c7 c1 99 03 00 00 	mov    $0x399,%rcx
   11538:	0c 48                	or     $0x48,%al
   1153a:	c1 e8 48             	shr    $0x48,%eax
   1153d:	ff 49 31             	decl   0x31(%rcx)
   11540:	0f 8f 97 03 00 00    	jg     118dd <_obstack_memory_used@@Base+0x112d>
   11546:	8b 05 04 12 01 00    	mov    0x11204(%rip),%eax        # 22750 <obstack_alloc_failed_handler@@Base+0x6b0>
   1154c:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   11551:	48 8b 35 00 12 01 00 	mov    0x11200(%rip),%rsi        # 22758 <obstack_alloc_failed_handler@@Base+0x6b8>
   11558:	48                   	rex.W
   11559:	49 21 c3             	and    %rax,%r11
   1155c:	38 48 39             	cmp    %cl,0x39(%rax)
   1155f:	c1 7f 06 48          	sarl   $0x48,0x6(%rdi)
   11563:	e9 75 fd ff ff       	jmp    112dd <_obstack_memory_used@@Base+0xb2d>
   11568:	48 8d 35 e1 11 01 00 	lea    0x111e1(%rip),%rsi        # 22750 <obstack_alloc_failed_handler@@Base+0x6b0>
   1156f:	31 ff                	xor    %edi,%edi
   11571:	e8 7a 32 ff ff       	call   47f0 <clock_gettime@plt>
   11576:	48 c7 c1 b1 fe ff ff 	mov    $0xfffffffffffffeb1,%rcx
   1157d:	54                   	push   %rsp
   1157e:	24 38                	and    $0x38,%al
   11580:	48 8b 49 0f          	mov    0xf(%rcx),%rcx
   11584:	af                   	scas   %es:(%rdi),%eax
   11585:	f7 c7 48 49 85 cf    	test   $0xcf854948,%edi
   1158b:	ff 01                	incl   (%rcx)
   1158d:	00 48 8d             	add    %cl,-0x73(%rax)
   11590:	b8 54 0f 85 62       	mov    $0x62850f54,%eax
   11595:	fd                   	std    
   11596:	ff                   	(bad)  
   11597:	ff                   	(bad)  
   11598:	7c 4d                	jl     115e7 <_obstack_memory_used@@Base+0xe37>
   1159a:	09 cb                	or     %ecx,%ebx
   1159c:	34 4d                	xor    $0x4d,%al
   1159e:	89 cd                	mov    %ecx,%ebp
   115a0:	39 d6                	cmp    %edx,%esi
   115a2:	0f 89 0f 84 6b fd    	jns    fffffffffd6c99b7 <obstack_alloc_failed_handler@@Base+0xfffffffffd6a7917>
   115a8:	ff                   	(bad)  
   115a9:	ff c1                	inc    %ecx
   115ab:	0f 8c da 02 00 00    	jl     1188b <_obstack_memory_used@@Base+0x10db>
   115b1:	49 c1 e4 1c          	shl    $0x1c,%r12
   115b5:	00 00                	add    %al,(%rax)
   115b7:	89 d0                	mov    %edx,%eax
   115b9:	29 f0                	sub    %esi,%eax
   115bb:	c1 e8 1f             	shr    $0x1f,%eax
   115be:	e9 13 02 00 00       	jmp    117d6 <_obstack_memory_used@@Base+0x1026>
   115c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   115c8:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
   115cc:	4c 8b 05 dd 0c 01 00 	mov    0x10cdd(%rip),%r8        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
   115d3:	48 8d                	rex.W (bad) 
   115d5:	eb 48                	jmp    1161f <_obstack_memory_used@@Base+0xe6f>
   115d7:	c1 e8 34             	shr    $0x34,%eax
   115da:	00 b9 00 02 00 00    	add    %bh,0x200(%rcx)
   115e0:	48                   	rex.W
   115e1:	48 c7 c2 83 01 00 00 	mov    $0x183,%rdx
   115e8:	b7 ff                	mov    $0xff,%bh
   115ea:	ff 48 ff             	decl   -0x1(%rax)
   115ed:	c7                   	(bad)  
   115ee:	48 89 c3             	mov    %rax,%rbx
   115f1:	e8 8a 32 ff ff       	call   4880 <strlen@plt>
   115f6:	48 89 c6             	mov    %rax,%rsi
   115f9:	e9 be f7 ff 49       	jmp    4a010dbc <obstack_alloc_failed_handler@@Base+0x49feed1c>
   115fe:	f7 fb                	idiv   %ebx
   11600:	e0 05                	loopne 11607 <_obstack_memory_used@@Base+0xe57>
   11602:	80 3d 93 0e 01 0f 84 	cmpb   $0x84,0xf010e93(%rip)        # f02249c <obstack_alloc_failed_handler@@Base+0xf0003fc>
   11609:	da fe                	(bad)  
   1160b:	ff                   	(bad)  
   1160c:	ff                   	(bad)  
   1160d:	ff                   	(bad)  
   1160e:	ff 89 f7 0f 84 65    	decl   0x65840ff7(%rcx)
   11614:	03 00                	add    (%rax),%eax
   11616:	00 00                	add    %al,(%rax)
   11618:	24 14                	and    $0x14,%al
   1161a:	e8 a1 ce 49 31       	call   314ae4c0 <obstack_alloc_failed_handler@@Base+0x3148c420>
   1161f:	fa                   	cli    
   11620:	8b 74 49 c1          	mov    -0x3f(%rcx,%rcx,2),%esi
   11624:	ed                   	in     (%dx),%eax
   11625:	2c 24                	sub    $0x24,%al
   11627:	4d 31 d0             	xor    %r10,%r8
   1162a:	c7                   	(bad)  
   1162b:	e9 4d fd 49 c1       	jmp    ffffffffc14b137d <obstack_alloc_failed_handler@@Base+0xffffffffc148f2dd>
   11630:	ea                   	(bad)  
   11631:	09 8f 0e 02 00 00    	or     %ecx,0x20e(%rdi)
   11637:	00 00                	add    %al,(%rax)
   11639:	0f 85 16 fd ff ff    	jne    11355 <_obstack_memory_used@@Base+0xba5>
   1163f:	89 f7                	mov    %esi,%edi
   11641:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   11646:	89 54 49 29          	mov    %edx,0x29(%rcx,%rcx,2)
   1164a:	f8                   	clc    
   1164b:	b1 cf                	mov    $0xcf,%cl
   1164d:	ff                   	(bad)  
   1164e:	ff 48 8b             	decl   -0x75(%rax)
   11651:	49 21 d6             	and    %rdx,%r14
   11654:	0f 84 56 02 00 00    	je     118b0 <_obstack_memory_used@@Base+0x1100>
   1165a:	c7                   	(bad)  
   1165b:	e9 f5 fc ff 4c       	jmp    4d011355 <obstack_alloc_failed_handler@@Base+0x4cfef2b5>
   11660:	09 de                	or     %ebx,%esi
   11662:	48 89 c0             	mov    %rax,%rax
   11665:	0e                   	(bad)  
   11666:	01 00                	add    %eax,(%rax)
   11668:	00 0f                	add    %cl,(%rdi)
   1166a:	85 96 fc ff ff 89    	test   %edx,-0x76000004(%rsi)
   11670:	f7 48 89 49 89 de 89 	testl  $0x89de8949,-0x77(%rax)
   11677:	54                   	push   %rsp
   11678:	24 14                	and    $0x14,%al
   1167a:	e8 41 ce ff ff       	call   e4c0 <__sprintf_chk@plt+0x97e0>
   1167f:	48 8b 74 24 0f       	mov    0xf(%rsp),%rsi
   11684:	49 31 0f             	xor    %rcx,(%r15)
   11687:	8f                   	(bad)  
   11688:	be fc ff ff 75       	mov    $0x75fffffc,%esi
   1168d:	fc                   	cld    
   1168e:	ff                   	(bad)  
   1168f:	ff 48 8b             	decl   -0x75(%rax)
   11692:	0f 84 d7 01 00 00    	je     1186f <_obstack_memory_used@@Base+0x10bf>
   11698:	ff                   	(bad)  
   11699:	ff 24 4c             	jmp    *(%rsp,%rcx,2)
   1169c:	29 ff                	sub    %edi,%edi
   1169e:	bc 24 80 00 00       	mov    $0x8024,%esp
   116a3:	00 48 c7             	add    %cl,-0x39(%rax)
   116a6:	48 c7 c3 f8 fd ff ff 	mov    $0xfffffffffffffdf8,%rbx
   116ad:	4c                   	rex.WR
   116ae:	49 89 c1             	mov    %rax,%r9
   116b1:	89 cf                	mov    %ecx,%edi
   116b3:	48 89 4c 89 c2       	mov    %rcx,-0x3e(%rcx,%rcx,4)
   116b8:	0f 8c df fd 4c 89    	jl     ffffffff894e149d <obstack_alloc_failed_handler@@Base+0xffffffff894bf3fd>
   116be:	db c0                	fcmovnb %st(0),%st
   116c0:	4d 01 c4             	add    %r8,%r12
   116c3:	84 4a ff             	test   %cl,-0x1(%rdx)
   116c6:	ff                   	(bad)  
   116c7:	ff 00                	incl   (%rax)
   116c9:	48 8b 15 70 0b 01 00 	mov    0x10b70(%rip),%rdx        # 22240 <obstack_alloc_failed_handler@@Base+0x1a0>
   116d0:	48 8b 4c 24 4d       	mov    0x4d(%rsp),%rcx
   116d5:	29 cd                	sub    %ecx,%ebp
   116d7:	48 63 94 24 90 00 00 	movslq 0x90(%rsp),%rdx
   116de:	00 
   116df:	48 8d 05 3a 4c 29 c8 	lea    -0x37d6b3c6(%rip),%rax        # ffffffffc82a6320 <obstack_alloc_failed_handler@@Base+0xffffffffc8284280>
   116e6:	48 c1 e2 07          	shl    $0x7,%rdx
   116ea:	48 01 c2             	add    %rax,%rdx
   116ed:	48 8d 4c 31 e9       	lea    -0x17(%rcx,%rsi,1),%rcx
   116f2:	00 00                	add    %al,(%rax)
   116f4:	00 4c 01 d0          	add    %cl,-0x30(%rcx,%rax,1)
   116f8:	4c 89 d8             	mov    %r11,%rax
   116fb:	c0 e2 fe             	shl    $0xfe,%dl
   116fe:	ff                   	(bad)  
   116ff:	ff 00                	incl   (%rax)
   11701:	be 49 49 0f af       	mov    $0xaf0f4949,%esi
   11706:	de 00                	fiadds (%rax)
   11708:	00 f9                	add    %bh,%cl
   1170a:	6a ff                	push   $0xffffffffffffffff
   1170c:	48 89 7c 24 49       	mov    %rdi,0x49(%rsp)
   11711:	09 4d 48             	or     %ecx,0x48(%rbp)
   11714:	85 f9                	test   %edi,%ecx
   11716:	48 83 c4 20          	add    $0x20,%rsp
   1171a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1171f:	4d 09 e7             	or     %r12,%r15
   11722:	48 89 7f a4          	mov    %rdi,-0x5c(%rdi)
   11726:	12 4d 09             	adc    0x9(%rbp),%cl
   11729:	e5 08                	in     $0x8,%eax
   1172b:	01 00                	add    %eax,(%rax)
   1172d:	00 00                	add    %al,(%rax)
   1172f:	00 00                	add    %al,(%rax)
   11731:	45 31 c0             	xor    %r8d,%r8d
   11734:	e9 43 f9 ff ff       	jmp    1107c <_obstack_memory_used@@Base+0x8cc>
   11739:	e8 e2 14 00 00       	call   12c20 <_obstack_memory_used@@Base+0x2470>
   1173e:	89 05 dc 08 01 00    	mov    %eax,0x108dc(%rip)        # 22020 <_obstack_memory_used@@Base+0x11870>
   11744:	41 89 c0             	mov    %eax,%r8d
   11747:	85 c0                	test   %eax,%eax
   11749:	0f 89 2d f9 ff ff    	jns    1107c <_obstack_memory_used@@Base+0x8cc>
   1174f:	eb d6                	jmp    11727 <_obstack_memory_used@@Base+0xf77>
   11751:	0f 1f 80 00 0f 8f 77 	nopl   0x778f0f00(%rax)
   11758:	fe                   	(bad)  
   11759:	ff                   	(bad)  
   1175a:	ff 75 11             	push   0x11(%rbp)
   1175d:	b9 20 00 00 00       	mov    $0x20,%ecx
   11762:	4c 8d 6b 4d          	lea    0x4d(%rbx),%r13
   11766:	09 cb                	or     %ecx,%ebx
   11768:	c1 e2 2c             	shl    $0x2c,%edx
   1176b:	f9                   	stc    
   1176c:	4c 0f af f1          	imul   %rcx,%r14
   11770:	39 d2                	cmp    %edx,%edx
   11772:	00 00                	add    %al,(%rax)
   11774:	00 0f                	add    %cl,(%rdi)
   11776:	84 ea                	test   %ch,%dl
   11778:	f8                   	clc    
   11779:	ff                   	(bad)  
   1177a:	ff 48 8b             	decl   -0x75(%rax)
   1177d:	0f 85 0b fd ff ff    	jne    1148e <_obstack_memory_used@@Base+0xcde>
   11783:	48 ff c3             	inc    %rbx
   11786:	00 00                	add    %al,(%rax)
   11788:	4c 8d ac 24 e4 00 00 	lea    0x490000e4(%rsp),%r13
   1178f:	49 
   11790:	c1 e3 28             	shl    $0x28,%ebx
   11793:	49 f7 fa             	idiv   %r10
   11796:	cc                   	int3   
   11797:	cc                   	int3   
   11798:	cc                   	int3   
   11799:	cc                   	int3   
   1179a:	48 85 c9             	test   %rcx,%rcx
   1179d:	48 c1 e1 4d          	shl    $0x4d,%rcx
   117a1:	89 c0                	mov    %eax,%eax
   117a3:	0f 1f 44 4d 7c       	nopl   0x7c(%rbp,%rcx,2)
   117a8:	e0 0f                	loopne 117b9 <_obstack_memory_used@@Base+0x1009>
   117aa:	8c 80 00 00 00 48    	mov    %es,0x48000000(%rax)
   117b0:	f7 e6                	mul    %esi
   117b2:	48 c1 ea 03          	shr    $0x3,%rdx
   117b6:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
   117ba:	c6 01 c0             	movb   $0xc0,(%rcx)
   117bd:	48 31 cf             	xor    %rcx,%rdi
   117c0:	83 c1 30             	add    $0x30,%ecx
   117c3:	41 88 4d 00          	mov    %cl,0x0(%r13)
   117c7:	48 89 49 21          	mov    %rcx,0x21(%rcx)
   117cb:	e9 66 03 00 00       	jmp    11b36 <_obstack_memory_used@@Base+0x1386>
   117d0:	4d 31 e2             	xor    %r12,%r10
   117d3:	ff 31                	push   (%rcx)
   117d5:	c0 80 3d 48 39 cf 49 	rolb   $0x49,-0x30c6b7c3(%rax)
   117dc:	f7 fe                	idiv   %esi
   117de:	d1 74 4f 48          	shll   0x48(%rdi,%rcx,2)
   117e2:	49 89 de             	mov    %rbx,%r14
   117e5:	0f 49 39             	cmovns (%rcx),%edi
   117e8:	da 0d 02 00 00 49    	fimull 0x49000002(%rip)        # 490117f0 <obstack_alloc_failed_handler@@Base+0x48fef750>
   117ee:	c1 eb 10             	shr    $0x10,%ebx
   117f1:	e9 19 01 00 00       	jmp    1190f <_obstack_memory_used@@Base+0x115f>
   117f6:	49 c1 4c 09 fa c2    	rorq   $0xc2,-0x6(%r9,%rcx,1)
   117fc:	48 0f 84 4d 39 c7 ff 	rex.W je ffffffffffc85150 <obstack_alloc_failed_handler@@Base+0xffffffffffc630b0>
   11803:	4d 0f af ea          	imul   %r10,%r13
   11807:	e9 03 00 00 51       	jmp    5101180f <obstack_alloc_failed_handler@@Base+0x50fef76f>
   1180c:	48 89 df             	mov    %rbx,%rdi
   1180f:	4c 89 e9             	mov    %r13,%rcx
   11812:	41 57                	push   %r15
   11814:	6a ff                	push   $0xffffffffffffffff
   11816:	e8 45 37 00 00       	call   14f60 <_obstack_memory_used@@Base+0x47b0>
   1181b:	48                   	rex.W
   1181c:	4d 31 c0             	xor    %r8,%r8
   1181f:	00 00                	add    %al,(%rax)
   11821:	00 0f                	add    %cl,(%rdi)
   11823:	84 30                	test   %dh,(%rax)
   11825:	ff                   	(bad)  
   11826:	ff                   	(bad)  
   11827:	ff 48 01             	decl   0x1(%rax)
   1182a:	c3                   	ret    
   1182b:	e9 2d ff ff ff       	jmp    1175d <_obstack_memory_used@@Base+0xfad>
   11830:	48 8d 15 09 0a 01 00 	lea    0x10a09(%rip),%rdx        # 22240 <obstack_alloc_failed_handler@@Base+0x1a0>
   11837:	48 75 2b             	rex.W jne 11865 <_obstack_memory_used@@Base+0x10b5>
   1183a:	c2 eb bf             	ret    $0xbfeb
   1183d:	4c 89 ee             	mov    %r13,%rsi
   11840:	bf 30 49 09 fa       	mov    $0xfa094930,%edi
   11845:	49 21 0f             	and    %rcx,(%r15)
   11848:	85 4a ff             	test   %ecx,-0x1(%rdx)
   1184b:	ff                   	(bad)  
   1184c:	ff 66 66             	jmp    *0x66(%rsi)
   1184f:	90                   	nop
   11850:	48 89 c8             	mov    %rcx,%rax
   11853:	49                   	rex.WB
   11854:	4d                   	rex.WRB
   11855:	49 01 d2             	add    %rdx,%r10
   11858:	ee                   	out    %al,(%dx)
   11859:	01 49 f7             	add    %ecx,-0x9(%rcx)
   1185c:	e8 48 89 c8 48       	call   48c9a1a9 <obstack_alloc_failed_handler@@Base+0x48c78109>
   11861:	c1 f8 3f             	sar    $0x3f,%eax
   11864:	7f 49                	jg     118af <_obstack_memory_used@@Base+0x10ff>
   11866:	c7 c6 37 00 00 48    	mov    $0x48000037,%esi
   1186c:	89 c7                	mov    %eax,%edi
   1186e:	92                   	xchg   %eax,%edx
   1186f:	8d 04 47             	lea    (%rdi,%rax,2),%eax
   11872:	29 c8                	sub    %ecx,%eax
   11874:	48 89 d1             	mov    %rdx,%rcx
   11877:	88 06                	mov    %al,(%rsi)
   11879:	48 85 d2             	test   %rdx,%rdx
   1187c:	75 d2                	jne    11850 <_obstack_memory_used@@Base+0x10a0>
   1187e:	c6 46 ff 2d          	movb   $0x2d,-0x1(%rsi)
   11882:	49 83 ed 02          	sub    $0x2,%r13
   11886:	e9 e1 f7 ff ff       	jmp    1106c <_obstack_memory_used@@Base+0x8bc>
   1188b:	b8 01 00 00 00       	mov    $0x1,%eax
   11890:	e9 41 ff ff ff       	jmp    117d6 <_obstack_memory_used@@Base+0x1026>
   11895:	e8 f6 2f ff ff       	call   4890 <__stack_chk_fail@plt>
   1189a:	e9 70 34 ff ff       	jmp    4d0f <__sprintf_chk@plt+0x2f>
   1189f:	90                   	nop
   118a0:	83 3d 65 0a 01 00 04 	cmpl   $0x4,0x10a65(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   118a7:	0f 87 0c 04 00 00    	ja     11cb9 <_obstack_memory_used@@Base+0x1509>
   118ad:	41 57                	push   %r15
   118af:	48 8d 15 b6 68 00 00 	lea    0x68b6(%rip),%rdx        # 1816c <_obstack_memory_used@@Base+0x79bc>
   118b6:	41 56                	push   %r14
   118b8:	41 55                	push   %r13
   118ba:	41 54                	push   %r12
   118bc:	55                   	push   %rbp
   118bd:	53                   	push   %rbx
   118be:	48 83 ec 28          	sub    $0x28,%rsp
   118c2:	8b 05 44 0a 01 00    	mov    0x10a44(%rip),%eax        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   118c8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   118cc:	48 01 d0             	add    %rdx,%rax
   118cf:	3e ff e0             	notrack jmp *%rax
   118d2:	66 0f 1f 7f 2e       	nopw   0x2e(%rdi)
   118d7:	00 48 83             	add    %cl,-0x7d(%rax)
   118da:	3d a0 0b 01 00       	cmp    $0x10ba0,%eax
   118df:	00 0f                	add    %cl,(%rdi)
   118e1:	48 c1 e9 03          	shr    $0x3,%rcx
   118e5:	00 4d 89             	add    %cl,-0x77(%rbp)
   118e8:	cf                   	iret   
   118e9:	0f 84 6c 49 21 c2    	je     ffffffffc222625b <obstack_alloc_failed_handler@@Base+0xffffffffc22041bb>
   118ef:	14 40                	adc    $0x40,%al
   118f1:	48 89 04 49          	mov    %rax,(%rcx,%rcx,2)
   118f5:	c1 e0 22             	shl    $0x22,%eax
   118f8:	4c 0a 01             	rex.WR or (%rcx),%r8b
   118fb:	00 4c 8d 74          	add    %cl,0x74(%rbp,%rcx,4)
   118ff:	d0 e8                	shr    %al
   11901:	48                   	rex.W
   11902:	49 f7 fc             	idiv   %r12
   11905:	0b 49 49             	or     0x49(%rcx),%ecx
   11908:	31 d7                	xor    %edx,%edi
   1190a:	28 48 89             	sub    %cl,-0x77(%rax)
   1190d:	ef                   	out    %eax,(%dx)
   1190e:	e8 49 c7 c3 f3       	call   fffffffff3c4e05c <obstack_alloc_failed_handler@@Base+0xfffffffff3c2bfbc>
   11913:	fe                   	(bad)  
   11914:	ff                   	(bad)  
   11915:	ff                   	(bad)  
   11916:	de ef                	fsubrp %st,%st(7)
   11918:	49 89 c7             	mov    %rax,%r15
   1191b:	49                   	rex.WB
   1191c:	4d 29 c3             	sub    %r8,%r11
   1191f:	4c 8b 20             	mov    (%rax),%r12
   11922:	e8 79 55 00 49       	call   49016ea0 <obstack_alloc_failed_handler@@Base+0x48ff4e00>
   11927:	c1 e3 07             	shl    $0x7,%ebx
   1192a:	99                   	cltd   
   1192b:	0c 01                	or     $0x1,%al
   1192d:	00 01                	add    %al,(%rcx)
   1192f:	0f 8c 15 fe ff ff    	jl     1174a <_obstack_memory_used@@Base+0xf9a>
   11935:	ff                   	(bad)  
   11936:	ff 05 6c 06 01 4d    	incl   0x4d01066c(%rip)        # 4d021fa8 <obstack_alloc_failed_handler@@Base+0x4cffff08>
   1193c:	39 ee                	cmp    %ebp,%esi
   1193e:	01 d3                	add    %edx,%ebx
   11940:	01 00                	add    %eax,(%rax)
   11942:	4d 0f af f4          	imul   %r12,%r14
   11946:	44 24 10             	rex.R and $0x10,%al
   11949:	eb 63                	jmp    119ae <_obstack_memory_used@@Base+0x11fe>
   1194b:	0f 1f 44 48 85       	nopl   -0x7b(%rax,%rcx,2)
   11950:	fa                   	cli    
   11951:	8b 44 24 10          	mov    0x10(%rsp),%eax
   11955:	48 e9 c9 48 c1 e0    	rex.W jmp ffffffffe0c26224 <obstack_alloc_failed_handler@@Base+0xffffffffe0c04184>
   1195b:	24 48                	and    $0x48,%al
   1195d:	3b 47 30             	cmp    0x30(%rdi),%eax
   11960:	0f 83 29 03 00 00    	jae    11c8f <_obstack_memory_used@@Base+0x14df>
   11966:	48                   	rex.W
   11967:	48                   	rex.W
   11968:	49 29 f2             	sub    %rsi,%r10
   1196b:	31 ed                	xor    %ebp,%ebp
   1196d:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   11971:	0f 84 b3 01 00 00    	je     11b2a <_obstack_memory_used@@Base+0x137a>
   11977:	d5                   	(bad)  
   11978:	0a 0f                	or     (%rdi),%cl
   1197a:	84 4b 01             	test   %cl,0x1(%rbx)
   1197d:	00 00                	add    %al,(%rax)
   1197f:	8b 24 d8             	mov    (%rax,%rbx,8),%esp
   11982:	48 83 c3 01          	add    $0x1,%rbx
   11986:	4c 0f 85 0f 8f fd fe 	rex.WR jne fffffffffefea89c <obstack_alloc_failed_handler@@Base+0xfffffffffefc87fc>
   1198d:	ff                   	(bad)  
   1198e:	ff 89 e7 e8 6a bf    	decl   -0x40951719(%rcx)
   11994:	ff                   	(bad)  
   11995:	ff 48 3b             	decl   0x3b(%rax)
   11998:	1d 2b 0c 01 48       	sbb    $0x48010c2b,%eax
   1199d:	89 d2                	mov    %edx,%edx
   1199f:	c7                   	(bad)  
   119a0:	49 8b 46 0f          	mov    0xf(%r14),%rax
   119a4:	8c e1                	mov    %fs,%ecx
   119a6:	01 00                	add    %eax,(%rax)
   119a8:	00 f7                	add    %dh,%bh
   119aa:	ff 02                	incl   (%rdx)
   119ac:	00 00                	add    %al,(%rax)
   119ae:	48 89 d8             	mov    %rbx,%rax
   119b1:	31 d2                	xor    %edx,%edx
   119b3:	0f 8c 54 03 00 00    	jl     11d0d <_obstack_memory_used@@Base+0x155d>
   119b9:	ff 03                	incl   (%rbx)
   119bb:	00 00                	add    %al,(%rax)
   119bd:	74 91                	je     11950 <_obstack_memory_used@@Base+0x11a0>
   119bf:	4d 01 ec             	add    %r13,%r12
   119c2:	4b 8d                	rex.WXB (bad) 
   119c4:	eb 4c                	jmp    11a12 <_obstack_memory_used@@Base+0x1262>
   119c6:	09 f3                	or     %esi,%ebx
   119c8:	e6 4d                	out    %al,$0x4d
   119ca:	89 e5                	mov    %esp,%ebp
   119cc:	e8 ff 48 09 c9       	call   ffffffffc90a62d0 <obstack_alloc_failed_handler@@Base+0xffffffffc9084230>
   119d1:	4d 01 f5             	add    %r14,%r13
   119d4:	e2 44                	loop   11a1a <_obstack_memory_used@@Base+0x126a>
   119d6:	00 00                	add    %al,(%rax)
   119d8:	bf 2c 0f 8f 9f       	mov    $0x9f8f0f2c,%edi
   119dd:	01 00                	add    %eax,(%rax)
   119df:	00 28                	add    %ch,(%rax)
   119e1:	5b                   	pop    %rbx
   119e2:	5d                   	pop    %rbp
   119e3:	41 5c                	pop    %r12
   119e5:	41 5d                	pop    %r13
   119e7:	41 5e                	pop    %r14
   119e9:	41 5f                	pop    %r15
   119eb:	4c 85 c3             	test   %r8,%rbx
   119ee:	ff                   	(bad)  
   119ef:	ff 48 83             	decl   -0x7d(%rax)
   119f2:	3d d0 0b 01 00       	cmp    $0x10bd0,%eax
   119f7:	00 0f                	add    %cl,(%rdi)
   119f9:	84 08                	test   %cl,(%rax)
   119fb:	0f 84 d0 03 00 48    	je     48011dd1 <obstack_alloc_failed_handler@@Base+0x47fefd31>
   11a01:	c1 e0 2c             	shl    $0x2c,%eax
   11a04:	00 4c 8d 2d          	add    %cl,0x2d(%rbp,%rcx,4)
   11a08:	b4 06                	mov    $0x6,%ah
   11a0a:	01 00                	add    %eax,(%rax)
   11a0c:	31 db                	xor    %ebx,%ebx
   11a0e:	4d                   	rex.WRB
   11a0f:	49                   	rex.WB
   11a10:	4d 89 d7             	mov    %r10,%r15
   11a13:	fb                   	sti    
   11a14:	4d 85 c1             	test   %r8,%r9
   11a17:	48 0f af d8          	imul   %rax,%rbx
   11a1b:	d0 eb                	shr    %bl
   11a1d:	4c 0f 8c 3f fc ff ff 	rex.WR jl 11663 <_obstack_memory_used@@Base+0xeb3>
   11a24:	0a 01                	or     (%rcx),%al
   11a26:	49 c1 ed 23          	shr    $0x23,%r13
   11a2a:	7c fd                	jl     11a29 <_obstack_memory_used@@Base+0x1279>
   11a2c:	ff                   	(bad)  
   11a2d:	ff d7                	call   *%rdi
   11a2f:	ff 48 8b             	decl   -0x75(%rax)
   11a32:	44 24 10             	rex.R and $0x10,%al
   11a35:	48 8b 38             	mov    (%rax),%rdi
   11a38:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
   11a3c:	e3 39                	jrcxz  11a77 <_obstack_memory_used@@Base+0x12c7>
   11a3e:	47 30 0f             	rex.RXB xor %r9b,(%r15)
   11a41:	83 e2 01             	and    $0x1,%edx
   11a44:	00 49 0f             	add    %cl,0xf(%rcx)
   11a47:	af                   	scas   %es:(%rdi),%eax
   11a48:	49 f7 fa             	idiv   %r10
   11a4b:	89 57 28             	mov    %edx,0x28(%rdi)
   11a4e:	c6 00 0a             	movb   $0xa,(%rax)
   11a51:	48 83 4d 09 4c       	orq    $0x4c,0x9(%rbp)
   11a56:	21 e8                	and    %ebp,%eax
   11a58:	01 48 83             	add    %ecx,-0x7d(%rax)
   11a5b:	c3                   	ret    
   11a5c:	01 48 39             	add    %ecx,0x39(%rax)
   11a5f:	1d 64 0b 01 00       	sbb    $0x10b64,%eax
   11a64:	0f 86 9c 01 00 00    	jbe    11c06 <_obstack_memory_used@@Base+0x1456>
   11a6a:	4d 01 f5             	add    %r14,%r13
   11a6d:	08 01                	or     %al,(%rcx)
   11a6f:	00 00                	add    %al,(%rax)
   11a71:	74 49                	je     11abc <_obstack_memory_used@@Base+0x130c>
   11a73:	c1 ea 29             	shr    $0x29,%edx
   11a76:	00 00                	add    %al,(%rax)
   11a78:	e8 a3 a6 ff 0f       	call   1000c120 <obstack_alloc_failed_handler@@Base+0xffea080>
   11a7d:	84 85 fe 49 f7 fd    	test   %al,-0x208b602(%rbp)
   11a83:	ef                   	out    %eax,(%dx)
   11a84:	e8 17 a8 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   11a89:	4c 89 e7             	mov    %r12,%rdi
   11a8c:	e8 49 c7 48 f7       	call   fffffffff749e1da <obstack_alloc_failed_handler@@Base+0xfffffffff747c13a>
   11a91:	fa                   	cli    
   11a92:	00 00                	add    %al,(%rax)
   11a94:	e8 0f 84 75 03       	call   3769ea8 <obstack_alloc_failed_handler@@Base+0x3747e08>
   11a99:	00 00                	add    %al,(%rax)
   11a9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11aa0:	48 83 3d 20 0b 01 49 	cmpq   $0x29,0x49010b20(%rip)        # 490225c8 <obstack_alloc_failed_handler@@Base+0x49000528>
   11aa7:	29 
   11aa8:	fa                   	cli    
   11aa9:	84 58 01             	test   %bl,0x1(%rax)
   11aac:	00 48 c7             	add    %cl,-0x39(%rax)
   11aaf:	c7                   	(bad)  
   11ab0:	4c fd                	rex.WR std 
   11ab2:	ff                   	(bad)  
   11ab3:	ff 00                	incl   (%rax)
   11ab5:	4c 39 df             	cmp    %r11,%rdi
   11ab8:	89 4d 31             	mov    %ecx,0x31(%rbp)
   11abb:	e5 48                	in     $0x48,%eax
   11abd:	c1 e9 06             	shr    $0x6,%ecx
   11ac0:	48 8b 05 89 4d 0f af 	mov    -0x50f0b277(%rip),%rax        # ffffffffaf106850 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e47b0>
   11ac7:	e0 f6                	loopne 11abf <_obstack_memory_used@@Base+0x130f>
   11ac9:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
   11acd:	e8 ce 53 00 00       	call   16ea0 <_obstack_memory_used@@Base+0x66f0>
   11ad2:	48                   	rex.W
   11ad3:	4d 09 f8             	or     %r15,%r8
   11ad6:	10 48 8b             	adc    %cl,-0x75(%rax)
   11ad9:	38 49 31             	cmp    %cl,0x31(%rcx)
   11adc:	c7                   	(bad)  
   11add:	49 f7 48 4d 09 fe fc 	testq  $0xfffffffffffcfe09,0x4d(%r8)
   11ae4:	ff 
   11ae5:	ff 48 f7             	decl   -0x9(%rax)
   11ae8:	fb                   	sti    
   11ae9:	8d 50 01             	lea    0x1(%rax),%edx
   11aec:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   11af0:	c6 00 49             	movb   $0x49,(%rax)
   11af3:	f7 f9                	idiv   %ecx
   11af5:	c3                   	ret    
   11af6:	01 48 39             	add    %ecx,0x39(%rax)
   11af9:	1d ca 0a 01 00       	sbb    $0x10aca,%eax
   11afe:	77 c0                	ja     11ac0 <_obstack_memory_used@@Base+0x1310>
   11b00:	e9 01 01 00 00       	jmp    11c06 <_obstack_memory_used@@Base+0x1456>
   11b05:	0f 1f 00             	nopl   (%rax)
   11b08:	48 83 3d 70 09 01 00 	cmpq   $0x0,0x10970(%rip)        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
   11b0f:	00 
   11b10:	0f 84 02 01 00 00    	je     11c18 <_obstack_memory_used@@Base+0x1468>
   11b16:	bf 01 00 00 00       	mov    $0x1,%edi
   11b1b:	e8 70 c6 ff ff       	call   e190 <__sprintf_chk@plt+0x94b0>
   11b20:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   11b24:	48 89 c1             	mov    %rax,%rcx
   11b27:	48 8b 05 1a 08 01 00 	mov    0x1081a(%rip),%rax        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
   11b2e:	4c 8d 7c d0 e8       	lea    -0x18(%rax,%rdx,8),%r15
   11b33:	48 8b 05 8e 0a 01 00 	mov    0x10a8e(%rip),%rax        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
   11b3a:	31 d2                	xor    %edx,%edx
   11b3c:	48 f7 f1             	div    %rcx
   11b3f:	48 83 fa 01          	cmp    $0x1,%rdx
   11b43:	48 83 d8 ff          	sbb    $0xffffffffffffffff,%rax
   11b47:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11b4c:	48 85 c0             	test   %rax,%rax
   11b4f:	0f 84 b1 00 00 00    	je     11c06 <_obstack_memory_used@@Base+0x1456>
   11b55:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   11b5c:	00 00 
   11b5e:	48 8b 05 43 04 01 00 	mov    0x10443(%rip),%rax        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
   11b65:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   11b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b70:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   11b75:	45 31 ed             	xor    %r13d,%r13d
   11b78:	45 31 f6             	xor    %r14d,%r14d
   11b7b:	eb 15                	jmp    11b92 <_obstack_memory_used@@Base+0x13e2>
   11b7d:	0f 1f 00             	nopl   (%rax)
   11b80:	4c 01 f5             	add    %r14,%rbp
   11b83:	4a 8d 3c 33          	lea    (%rbx,%r14,1),%rdi
   11b87:	48 89 ee             	mov    %rbp,%rsi
   11b8a:	49 89 ee             	mov    %rbp,%r14
   11b8d:	e8 3e 56 ff ff       	call   71d0 <__sprintf_chk@plt+0x24f0>
   11b92:	48 8b 05 b7 08 01 00 	mov    0x108b7(%rip),%rax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
   11b99:	4a 8b 3c e0          	mov    (%rax,%r12,8),%rdi
   11b9d:	48 89 3c 24          	mov    %rdi,(%rsp)
   11ba1:	e8 5a bd ff ff       	call   d900 <__sprintf_chk@plt+0x8c20>
   11ba6:	48 8b 3c 24          	mov    (%rsp),%rdi
   11baa:	4c 89 f6             	mov    %r14,%rsi
   11bad:	48 89 c3             	mov    %rax,%rbx
   11bb0:	49 8b 47 10          	mov    0x10(%r15),%rax
   11bb4:	4a 8b 2c 28          	mov    (%rax,%r13,1),%rbp
   11bb8:	49 83 c5 08          	add    $0x8,%r13
   11bbc:	e8 df 52 00 00       	call   16ea0 <_obstack_memory_used@@Base+0x66f0>
   11bc1:	4c 03 64 24 08       	add    0x8(%rsp),%r12
   11bc6:	4c 3b 25 fb 09 01 00 	cmp    0x109fb(%rip),%r12        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
   11bcd:	72 b1                	jb     11b80 <_obstack_memory_used@@Base+0x13d0>
   11bcf:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   11bd4:	48 8b 38             	mov    (%rax),%rdi
   11bd7:	48 8b 47 28          	mov    0x28(%rdi),%rax
   11bdb:	48 3b 47 30          	cmp    0x30(%rdi),%rax
   11bdf:	0f 83 9b 00 00 00    	jae    11c80 <_obstack_memory_used@@Base+0x14d0>
   11be5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11be9:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   11bed:	4c 89 d6             	mov    %r10,%rsi
   11bf0:	48 83 44 24 18 01    	addq   $0x1,0x18(%rsp)
   11bf6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   11bfb:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
   11c00:	0f 85 49 ff c3 ff    	jne    ffffffffffc51b4f <obstack_alloc_failed_handler@@Base+0xffffffffffc2faaf>
   11c06:	48 83 c4 28          	add    $0x28,%rsp
   11c0a:	5b                   	pop    %rbx
   11c0b:	5d                   	pop    %rbp
   11c0c:	41 5c                	pop    %r12
   11c0e:	41 5d                	pop    %r13
   11c10:	41 5e                	pop    %r14
   11c12:	41 5f                	pop    %r15
   11c14:	c3                   	ret    
   11c15:	0f 48 c1             	cmovs  %ecx,%eax
   11c18:	ea                   	(bad)  
   11c19:	18 49 49             	sbb    %cl,0x49(%rcx)
   11c1c:	c1 ec 48             	shr    $0x48,%esp
   11c1f:	09 d6                	or     %edx,%esi
   11c21:	ff 66 0f             	jmp    *0xf(%rsi)
   11c24:	1f                   	(bad)  
   11c25:	44 00 00             	add    %r8b,(%rax)
   11c28:	be 0a 4c 29 d3       	mov    $0xd3294c0a,%esi
   11c2d:	00 49 ff             	add    %cl,-0x1(%rcx)
   11c30:	c7                   	(bad)  
   11c31:	ff                   	(bad)  
   11c32:	e9 49 0f af c1       	jmp    ffffffffc1b02b80 <obstack_alloc_failed_handler@@Base+0xffffffffc1ae0ae0>
   11c37:	66 0f 1f 0f          	nopw   (%rdi)
   11c3b:	8c f0                	mov    %?,%eax
   11c3d:	fd                   	std    
   11c3e:	ff                   	(bad)  
   11c3f:	ff 49 c1             	decl   -0x3f(%rcx)
   11c42:	ec                   	in     (%dx),%al
   11c43:	24 ff                	and    $0xff,%al
   11c45:	ff 49 f7             	decl   -0x9(%rcx)
   11c48:	fa                   	cli    
   11c49:	4d 09 fb             	or     %r15,%r11
   11c4c:	fe                   	(bad)  
   11c4d:	ff                   	(bad)  
   11c4e:	ff 48 8b             	decl   -0x75(%rax)
   11c51:	05 e9 d0 02 48       	add    $0x4802d0e9,%eax
   11c56:	85 fb                	test   %edi,%ebx
   11c58:	44 24 10             	rex.R and $0x10,%al
   11c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11c60:	48 8b 44 4d 0f       	mov    0xf(%rbp,%rcx,2),%rax
   11c65:	af                   	scas   %es:(%rdi),%eax
   11c66:	c8 49 39 d7          	enter  $0x3949,$0xd7
   11c6a:	47 28 48 49          	rex.RXB sub %r9b,0x49(%r8)
   11c6e:	d1 e2                	shl    %edx
   11c70:	73 2f                	jae    11ca1 <_obstack_memory_used@@Base+0x14f1>
   11c72:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11c76:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   11c7a:	c6                   	(bad)  
   11c7b:	e9 66 fe ff ff       	jmp    11ae6 <_obstack_memory_used@@Base+0x1336>
   11c80:	be 0a 00 00 00       	mov    $0xa,%esi
   11c85:	e8 76 2c ff ff       	call   4900 <__overflow@plt>
   11c8a:	e9 61 ff ff ff       	jmp    11bf0 <_obstack_memory_used@@Base+0x1440>
   11c8f:	be 49 c1 e9 36       	mov    $0x36e9c149,%esi
   11c94:	48 c1 e7 3a          	shl    $0x3a,%rdi
   11c98:	64 48 39 4c 0f af    	cmp    %rcx,%fs:-0x51(%rdi,%rcx,1)
   11c9e:	e1 0e                	loope  11cae <_obstack_memory_used@@Base+0x14fe>
   11ca0:	ff                   	(bad)  
   11ca1:	ff                   	(bad)  
   11ca2:	ff c4                	inc    %esp
   11ca4:	28 be 0a 00 00 00    	sub    %bh,0xa(%rsi)
   11caa:	5b                   	pop    %rbx
   11cab:	5d                   	pop    %rbp
   11cac:	41 5c                	pop    %r12
   11cae:	41 5d                	pop    %r13
   11cb0:	41 5e                	pop    %r14
   11cb2:	41 5f                	pop    %r15
   11cb4:	e9 47 2c ff ff       	jmp    4900 <__overflow@plt>
   11cb9:	c3                   	ret    
   11cba:	66 0f 1f 48 01       	nopw   0x1(%rax)
   11cbf:	d2 41 57             	rolb   %cl,0x57(%rcx)
   11cc2:	41 56                	push   %r14
   11cc4:	49 89 f6             	mov    %rsi,%r14
   11cc7:	41 55                	push   %r13
   11cc9:	49 89 fd             	mov    %rdi,%r13
   11ccc:	41 54                	push   %r12
   11cce:	55                   	push   %rbp
   11ccf:	53                   	push   %rbx
   11cd0:	48 81 ec 18 03 00 00 	sub    $0x318,%rsp
   11cd7:	89 54 24 4d          	mov    %edx,0x4d(%rsp)
   11cdb:	31 f0                	xor    %esi,%eax
   11cdd:	24 10                	and    $0x10,%al
   11cdf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11ce6:	00 00 
   11ce8:	48 89 84 24 08 03 00 	mov    %rax,0x308(%rsp)
   11cef:	00 
   11cf0:	31 c0                	xor    %eax,%eax
   11cf2:	e8 19 2a ff ff       	call   4710 <__errno_location@plt>
   11cf7:	4c 89 ef             	mov    %r13,%rdi
   11cfa:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   11d00:	48 89 c5             	mov    %rax,%rbp
   11d03:	e8 28 2b ff ff       	call   4830 <opendir@plt>
   11d08:	48 85 c0             	test   %rax,%rax
   11d0b:	0f 84 b6 06 00 00    	je     123c7 <_obstack_memory_used@@Base+0x1c17>
   11d11:	4c 8b 3d 20 0a 01 00 	mov    0x10a20(%rip),%r15        # 22738 <obstack_alloc_failed_handler@@Base+0x698>
   11d18:	49 89 c4             	mov    %rax,%r12
   11d1b:	4d 85 ff             	test   %r15,%r15
   11d1e:	0f 84 75 01 00 00    	je     11e99 <_obstack_memory_used@@Base+0x16e9>
   11d24:	48 89 c7             	mov    %rax,%rdi
   11d27:	49 ff c1             	inc    %r9
   11d2a:	40 ff 48 8d          	rex decl -0x73(%rax)
   11d2e:	4d 01 c8             	add    %r9,%r8
   11d31:	d6                   	(bad)  
   11d32:	b8 00 01 00 49       	mov    $0x49000100,%eax
   11d37:	c7 c4 a3 03 00 00    	mov    $0x3a3,%esp
   11d3d:	03 00                	add    (%rax),%eax
   11d3f:	00 00                	add    %al,(%rax)
   11d41:	b9 00 48 c1 e2       	mov    $0xe2c14800,%ecx
   11d46:	3e 8d 35 70 7e 00 00 	ds lea 0x7e70(%rip),%esi        # 19bbd <_obstack_memory_used@@Base+0x940d>
   11d4d:	e8 ae 59 ff ff       	call   7700 <__sprintf_chk@plt+0x2a20>
   11d52:	85 c0                	test   %eax,%eax
   11d54:	0f 88 c9 02 00 00    	js     12023 <_obstack_memory_used@@Base+0x1873>
   11d5a:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   11d5f:	49 c1 e5 37          	shl    $0x37,%r13
   11d63:	00 48 8b             	add    %cl,-0x75(%rax)
   11d66:	5c                   	pop    %rsp
   11d67:	0f 85 d7 02 00 00    	jne    12044 <_obstack_memory_used@@Base+0x1894>
   11d6d:	08 49 f7             	or     %cl,-0x9(%rcx)
   11d70:	fa                   	cli    
   11d71:	ff                   	(bad)  
   11d72:	ff 49 89             	decl   -0x77(%rcx)
   11d75:	c0 48 85 c0          	rorb   $0xc0,-0x7b(%rax)
   11d79:	0f 48 0f             	cmovs  (%rdi),%ecx
   11d7c:	af                   	scas   %es:(%rdi),%eax
   11d7d:	d0 48 29             	rorb   0x29(%rax)
   11d80:	c1 0f 8f             	rorl   $0x8f,(%rdi)
   11d83:	69 fe ff ff 08 49    	imul   $0x4908ffff,%esi,%edi
   11d89:	ff c2                	inc    %edx
   11d8b:	4c 89 ff             	mov    %r15,%rdi
   11d8e:	48 39 c6             	cmp    %rax,%rsi
   11d91:	24 28                	and    $0x28,%al
   11d93:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   11d98:	49 89 00             	mov    %rax,(%r8)
   11d9b:	e8 60 ad ff ff       	call   cb00 <__sprintf_chk@plt+0x7e20>
   11da0:	83 f8 ff             	cmp    $0xffffffff,%eax
   11da3:	e9 81 03 48 31       	jmp    31492129 <obstack_alloc_failed_handler@@Base+0x31470089>
   11da8:	f0 85 c0             	lock test %eax,%eax
   11dab:	0f 8c b2 fe 4d 09    	jl     94f1c63 <obstack_alloc_failed_handler@@Base+0x94cfbc3>
   11db1:	e5 8b                	in     $0x8b,%eax
   11db3:	44 24 4c             	rex.R and $0x4c,%al
   11db6:	29 d2                	sub    %edx,%edx
   11db8:	c0 0f 84             	rorb   $0x84,(%rdi)
   11dbb:	7c 0f                	jl     11dcc <_obstack_memory_used@@Base+0x161c>
   11dbd:	8f                   	(bad)  
   11dbe:	6d                   	insl   (%dx),%es:(%rdi)
   11dbf:	01 00                	add    %eax,(%rax)
   11dc1:	00 24 18             	add    %ah,(%rax,%rbx,1)
   11dc4:	4c                   	rex.WR
   11dc5:	49 31 49 c1          	xor    %rcx,-0x3f(%r9)
   11dc9:	ed                   	in     (%dx),%eax
   11dca:	2c f9                	sub    $0xf9,%al
   11dcc:	00 4c 0f 85          	add    %cl,-0x7b(%rdi,%rcx,1)
   11dd0:	7a fe                	jp     11dd0 <_obstack_memory_used@@Base+0x1620>
   11dd2:	49 ff c1             	inc    %r9
   11dd5:	ce                   	(bad)  
   11dd6:	89 ee                	mov    %ebp,%esi
   11dd8:	48 8d                	rex.W (bad) 
   11dda:	e9 72 49 01 0f       	jmp    f026751 <obstack_alloc_failed_handler@@Base+0xf0046b1>
   11ddf:	85 8e 02 00 00 af    	test   %ecx,-0x50fffffe(%rsi)
   11de5:	f0 00 00             	lock add %al,(%rax)
   11de8:	04 48                	add    $0x48,%al
   11dea:	4c 01 d6             	add    %r10,%rsi
   11ded:	30 03                	xor    %al,(%rbx)
   11def:	00 00                	add    %al,(%rax)
   11df1:	00 48 89             	add    %cl,-0x77(%rax)
   11df4:	44                   	rex.R
   11df5:	49 ff c3             	inc    %r11
   11df8:	4c 31 e6             	xor    %r12,%rsi
   11dfb:	f8                   	clc    
   11dfc:	00 00                	add    %al,(%rax)
   11dfe:	00 00                	add    %al,(%rax)
   11e00:	48 0f af fa          	imul   %rdx,%rdi
   11e04:	48 00 00             	rex.W add %al,(%rax)
   11e07:	00 00                	add    %al,(%rax)
   11e09:	48 c7                	rex.W (bad) 
   11e0b:	0f 84 92 fe ff ff    	je     11ca3 <_obstack_memory_used@@Base+0x14f3>
   11e11:	00 48 c7             	add    %cl,-0x39(%rax)
   11e14:	44 24 58             	rex.R and $0x58,%al
   11e17:	00 00                	add    %al,(%rax)
   11e19:	00 00                	add    %al,(%rax)
   11e1b:	48 c7 44 24 60 00 4c 	movq   $0xfffffffff1894c00,0x60(%rsp)
   11e22:	89 f1 
   11e24:	e8 0f 85 22 0f       	call   f23a338 <obstack_alloc_failed_handler@@Base+0xf218298>
   11e29:	8f                   	(bad)  
   11e2a:	15 fe ff 0f 84       	adc    $0x840ffffe,%eax
   11e2f:	68 03 00 00 c2       	push   $0xffffffffc2000003
   11e34:	01 00                	add    %eax,(%rax)
   11e36:	00 f3                	add    %dh,%bl
   11e38:	89 c5                	mov    %eax,%ebp
   11e3a:	e8 21 0f 8f 41       	call   41902d60 <obstack_alloc_failed_handler@@Base+0x418e0cc0>
   11e3f:	03 00                	add    (%rax),%eax
   11e41:	eb ca                	jmp    11e0d <_obstack_memory_used@@Base+0x165d>
   11e43:	f6 31                	divb   (%rcx)
   11e45:	ff 48 89             	decl   -0x77(%rax)
   11e48:	c2 31 c0             	ret    $0xc031
   11e4b:	e8 50 2d ff ff       	call   4ba0 <error@plt>
   11e50:	4c 89 e7             	mov    %r12,%rdi
   11e53:	e8 e9 9a 02 00       	call   3b941 <obstack_alloc_failed_handler@@Base+0x198a1>
   11e58:	00 05 0a 09 01 00    	add    %al,0x1090a(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
   11e5e:	4c 21 ff             	and    %r15,%rdi
   11e61:	c0 f7 fd             	shl    $0xfd,%bh
   11e64:	ff                   	(bad)  
   11e65:	ff 48 f7             	decl   -0x9(%rax)
   11e68:	f8                   	clc    
   11e69:	05 8a 08 01 0f       	add    $0xf01088a,%eax
   11e6e:	8c 44 03 00          	mov    %es,0x0(%rbx,%rax,1)
   11e72:	48 29 49 c1          	sub    %rcx,-0x3f(%rcx)
   11e76:	e4 3f                	in     $0x3f,%al
   11e78:	49 85 dc             	test   %rbx,%r12
   11e7b:	0f                   	(bad)  
   11e7c:	0f 86 4c 21 c8 00    	jbe    c93fce <obstack_alloc_failed_handler@@Base+0xc71f2e>
   11e82:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   11e87:	48                   	rex.W
   11e88:	4d 0f af dd          	imul   %r13,%r11
   11e8c:	e9 c3 4d 29 fe       	jmp    fffffffffe2a6c54 <obstack_alloc_failed_handler@@Base+0xfffffffffe284bb4>
   11e91:	00 48 89             	add    %cl,-0x77(%rax)
   11e94:	58                   	pop    %rax
   11e95:	08 48 89             	or     %cl,-0x77(%rax)
   11e98:	08 e8                	or     %ch,%al
   11e9a:	e2 83                	loop   11e1f <_obstack_memory_used@@Base+0x166f>
   11e9c:	ff                   	(bad)  
   11e9d:	ff 80 3d 9b 08 01    	incl   0x1089b3d(%rax)
   11ea3:	00 00                	add    %al,(%rax)
   11ea5:	0f 84 4f 01 00 00    	je     11ffa <_obstack_memory_used@@Base+0x184a>
   11eab:	4d 85 e6             	test   %r12,%r14
   11eae:	e9 0f 8c 24 02       	jmp    225aac2 <obstack_alloc_failed_handler@@Base+0x2238a22>
   11eb3:	00 00                	add    %al,(%rax)
   11eb5:	ef                   	out    %eax,(%dx)
   11eb6:	00 4c 89 cb          	add    %cl,-0x35(%rcx,%rcx,4)
   11eba:	24 48                	and    $0x48,%al
   11ebc:	8b 3b                	mov    (%rbx),%edi
   11ebe:	48 8b 47 28          	mov    0x28(%rdi),%rax
   11ec2:	48 3b 47 48          	cmp    0x48(%rdi),%rax
   11ec6:	c1 ea 08             	shr    $0x8,%edx
   11ec9:	05 00 00 48 8d       	add    $0x8d480000,%eax
   11ece:	50                   	push   %rax
   11ecf:	01 48 89             	add    %ecx,-0x77(%rax)
   11ed2:	48 09 ff             	or     %rdi,%rdi
   11ed5:	00 0a                	add    %cl,(%rdx)
   11ed7:	48 83 05 19 04 01 00 	addq   $0x1,0x10419(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   11ede:	01 
   11edf:	80 48 c1 e1          	orb    $0xe1,-0x3f(%rax)
   11ee3:	33 00                	xor    (%rax),%eax
   11ee5:	00 c6                	add    %al,%dh
   11ee7:	05 39 49 0f 8c       	add    $0x8c0f4939,%eax
   11eec:	4e fd                	rex.WRX std 
   11eee:	ff                   	(bad)  
   11eef:	ff 04 e9             	incl   (%rcx,%rbp,8)
   11ef2:	b0 01                	mov    $0x1,%al
   11ef4:	00 00                	add    %al,(%rax)
   11ef6:	80 3d eb 06 01 00 00 	cmpb   $0x0,0x106eb(%rip)        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
   11efd:	0f 85 60 04 00 00    	jne    12363 <_obstack_memory_used@@Base+0x1bb3>
   11f03:	4d 0f 8f 79 03 00 00 	rex.WRB jg 12283 <_obstack_memory_used@@Base+0x1ad3>
   11f0a:	05 01 00 0f 8c       	add    $0x8c0f0001,%eax
   11f0f:	d3 00                	roll   %cl,(%rax)
   11f11:	00 00                	add    %al,(%rax)
   11f13:	21 c7                	and    %eax,%edi
   11f15:	e7 06                	out    %eax,$0x6
   11f17:	01 00                	add    %eax,(%rax)
   11f19:	4d 0f 44 f5          	cmove  %r13,%r14
   11f1d:	0f 8c 81 fd ff ff    	jl     11ca4 <_obstack_memory_used@@Base+0x14f4>
   11f23:	01 00                	add    %eax,(%rax)
   11f25:	eb 25                	jmp    11f4c <_obstack_memory_used@@Base+0x179c>
   11f27:	49 01 fc             	add    %rdi,%r12
   11f2a:	57                   	push   %rdi
   11f2b:	4c 89 f7             	mov    %r14,%rdi
   11f2e:	e8 bd de ff ff       	call   fdf0 <_obstack_newchunk@@Base+0x130>
   11f33:	4c 89 ff             	mov    %r15,%rdi
   11f36:	e8 45 27 0f 8f       	call   ffffffff8f104680 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e25e0>
   11f3b:	00 02                	add    %al,(%rdx)
   11f3d:	00 00                	add    %al,(%rax)
   11f3f:	01 00                	add    %eax,(%rax)
   11f41:	00 00                	add    %al,(%rax)
   11f43:	ba 02 00 4c 29       	mov    $0x294c0002,%edx
   11f48:	eb 8d                	jmp    11ed7 <_obstack_memory_used@@Base+0x1727>
   11f4a:	49 f7 ff             	idiv   %r15
   11f4d:	00 00                	add    %al,(%rax)
   11f4f:	e8 ac 2b ff ff       	call   4b00 <fwrite_unlocked@plt>
   11f54:	48 83 05 9c 03 01 4d 	addq   $0x39,0x4d01039c(%rip)        # 4d0222f8 <obstack_alloc_failed_handler@@Base+0x4d000258>
   11f5b:	39 
   11f5c:	e3 5e                	jrcxz  11fbc <_obstack_memory_used@@Base+0x180c>
   11f5e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11f65:	00 00 
   11f67:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
   11f6c:	89 44 24 10          	mov    %eax,0x10(%rsp)
   11f70:	c7 45 e9 48 c1 ea 31 	movl   $0x31eac148,-0x17(%rbp)
   11f77:	4c 89 e7             	mov    %r12,%rdi
   11f7a:	e8 11 2b ff ff       	call   4a90 <readdir@plt>
   11f7f:	48 89 c3             	mov    %rax,%rbx
   11f82:	48 85 c0             	test   %rax,%rax
   11f85:	0f 84 f5 00 00 00    	je     12080 <_obstack_memory_used@@Base+0x18d0>
   11f8b:	4c 8d 70 13          	lea    0x13(%rax),%r14
   11f8f:	8b 05 03 05 01 00    	mov    0x10503(%rip),%eax        # 22498 <obstack_alloc_failed_handler@@Base+0x3f8>
   11f95:	83 f8 02             	cmp    $0x2,%eax
   11f98:	0f 84 72 02 00 00    	je     12210 <_obstack_memory_used@@Base+0x1a60>
   11f9e:	80 7b 13 2e          	cmpb   $0x2e,0x13(%rbx)
   11fa2:	0f 84 48 02 00 00    	je     121f0 <_obstack_memory_used@@Base+0x1a40>
   11fa8:	85 c0                	test   %eax,%eax
   11faa:	0f 85 60 02 00 00    	jne    12210 <_obstack_memory_used@@Base+0x1a60>
   11fb0:	4c 8b 3d d1 04 01 00 	mov    0x104d1(%rip),%r15        # 22488 <obstack_alloc_failed_handler@@Base+0x3e8>
   11fb7:	4d 85 ff             	test   %r15,%r15
   11fba:	75 19                	jne    11fd5 <_obstack_memory_used@@Base+0x1825>
   11fbc:	e9 4f 02 00 00       	jmp    12210 <_obstack_memory_used@@Base+0x1a60>
   11fc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11fc8:	4d 8b 7f 08          	mov    0x8(%r15),%r15
   11fcc:	4d 85 ff             	test   %r15,%r15
   11fcf:	0f 84 0f 85 59 fd    	je     fffffffffd5aa4e4 <obstack_alloc_failed_handler@@Base+0xfffffffffd588444>
   11fd5:	ff                   	(bad)  
   11fd6:	ff c1                	inc    %ecx
   11fd8:	e7 30                	out    %eax,$0x30
   11fda:	dc 00                	faddl  (%rax)
   11fdc:	00 4c 89 f6          	add    %cl,-0xa(%rcx,%rcx,4)
   11fe0:	4c 29 ca             	sub    %r9,%rdx
   11fe3:	ff                   	(bad)  
   11fe4:	ff 85 c0 75 df 0f    	incl   0xfdf75c0(%rbp)
   11fea:	1f                   	(bad)  
   11feb:	80 00 00             	addb   $0x0,(%rax)
   11fee:	00 00                	add    %al,(%rax)
   11ff0:	e8 4b a3 ff ff       	call   c340 <__sprintf_chk@plt+0x7660>
   11ff5:	e9 76 ff ff ff       	jmp    11f70 <_obstack_memory_used@@Base+0x17c0>
   11ffa:	80 3d 67 07 01 00 00 	cmpb   $0x0,0x10767(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
   12001:	0f 84 57 ff ff ff    	je     11f5e <_obstack_memory_used@@Base+0x17ae>
   12007:	e9 9f fe ff ff       	jmp    11eab <_obstack_memory_used@@Base+0x16fb>
   1200c:	48 31 f7             	xor    %rsi,%rdi
   1200f:	89 ee                	mov    %ebp,%esi
   12011:	bf 9c ff ff ff       	mov    $0xffffff9c,%edi
   12016:	e8 0f 8f 09 03       	call   30aaf2a <obstack_alloc_failed_handler@@Base+0x3088e8a>
   1201b:	00 00                	add    %al,(%rax)
   1201d:	0f 89 37 fd ff 48    	jns    49011d5a <obstack_alloc_failed_handler@@Base+0x48fefcba>
   12023:	89 fa                	mov    %edi,%edx
   12025:	ce                   	(bad)  
   12026:	05 00 00 00 4d       	add    $0x4d000000,%eax
   1202b:	31 0f                	xor    %ecx,(%rdi)
   1202d:	8f                   	(bad)  
   1202e:	4c fd                	rex.WR std 
   12030:	ff                   	(bad)  
   12031:	ff 4d 0f             	decl   0xf(%rbp)
   12034:	af                   	scas   %es:(%rdi),%eax
   12035:	db 0f                	fisttpl (%rdi)
   12037:	b6 7c                	mov    $0x7c,%dh
   12039:	24 14                	and    $0x14,%al
   1203b:	4c 89 ea             	mov    %r13,%rdx
   1203e:	48 89 c6             	mov    %rax,%rsi
   12041:	e8 1a 81 ff 48       	call   4900a160 <obstack_alloc_failed_handler@@Base+0x48fe80c0>
   12046:	31 df                	xor    %ebx,%edi
   12048:	84 24 48             	test   %ah,(%rax,%rcx,2)
   1204b:	c1 ef 14             	shr    $0x14,%edi
   1204e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   12055:	00 00 
   12057:	4d 85 e7             	test   %r12,%r15
   1205a:	c1 ee 0f             	shr    $0xf,%esi
   1205d:	8f 81 03 00 00 48    	pop    0x48000003(%rcx)
   12063:	31 d3                	xor    %edx,%ebx
   12065:	89 e7                	mov    %esp,%edi
   12067:	4d 31 48 c7          	xor    %r9,-0x39(%r8)
   1206b:	c0 43 03 00          	rolb   $0x0,0x3(%rbx)
   1206f:	00 5f e9             	add    %bl,-0x17(%rdi)
   12072:	1a 29                	sbb    (%rcx),%ch
   12074:	ff                   	(bad)  
   12075:	ff 66 2e             	jmp    *0x2e(%rsi)
   12078:	0f 1f 84 00 00 4c 85 	nopl   -0x267ab400(%rax,%rax,1)
   1207f:	d9 
   12080:	8b 55 00             	mov    0x0(%rbp),%edx
   12083:	85 d2                	test   %edx,%edx
   12085:	74 2c                	je     120b3 <_obstack_memory_used@@Base+0x1903>
   12087:	31 ff                	xor    %edi,%edi
   12089:	4c 21 d7             	and    %r10,%rdi
   1208c:	00 00                	add    %al,(%rax)
   1208e:	48 8d 49 31          	lea    0x31(%rcx),%rcx
   12092:	fb                   	sti    
   12093:	00 00                	add    %al,(%rax)
   12095:	0f 8c 35 03 00 00    	jl     123d0 <_obstack_memory_used@@Base+0x1c20>
   1209b:	49 f7 fd             	idiv   %r13
   1209e:	f5                   	cmc    
   1209f:	89 ea                	mov    %ebp,%edx
   120a1:	49 c1 e1 26          	shl    $0x26,%r9
   120a5:	b7 80                	mov    $0x80,%bh
   120a7:	ff                   	(bad)  
   120a8:	ff 49 31             	decl   0x31(%rcx)
   120ab:	d0 4b 0f             	rorb   0xf(%rbx)
   120ae:	48 39 c3             	cmp    %rax,%rbx
   120b1:	e0 ff                	loopne 120b2 <_obstack_memory_used@@Base+0x1902>
   120b3:	4c 89 e7             	mov    %r12,%rdi
   120b6:	e8 d5 28 ff ff       	call   4990 <closedir@plt>
   120bb:	85 c0                	test   %eax,%eax
   120bd:	0f 85 25 02 00 00    	jne    122e8 <_obstack_memory_used@@Base+0x1b38>
   120c3:	e8 f8 bd ff ff       	call   dec0 <__sprintf_chk@plt+0x91e0>
   120c8:	80 3d 71 06 01 00 00 	cmpb   $0x0,0x10671(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
   120cf:	0f 85 04 02 00 00    	jne    122d9 <_obstack_memory_used@@Base+0x1b29>
   120d5:	8b 05 31 02 01 00    	mov    0x10231(%rip),%eax        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   120db:	85 c0                	test   %eax,%eax
   120dd:	74 0d                	je     120ec <_obstack_memory_used@@Base+0x193c>
   120df:	80 3d 2a 02 01 00 00 	cmpb   $0x0,0x1022a(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
   120e6:	0f 84 ca 00 00 00    	je     121b6 <_obstack_memory_used@@Base+0x1a06>
   120ec:	80 3d 48 f7 f8 00 00 	cmpb   $0x0,0xf8f748(%rip)        # fa183b <obstack_alloc_failed_handler@@Base+0xf7f79b>
   120f3:	49 c1 e5 30          	shl    $0x30,%r13
   120f7:	fe 00                	incb   (%rax)
   120f9:	00 0f                	add    %cl,(%rdi)
   120fb:	85 49 09             	test   %ecx,0x9(%rcx)
   120fe:	c2 00 ba             	ret    $0xba00
   12101:	05 00 00 00 48       	add    $0x48000000,%eax
   12106:	8d 35 14 7b 00 00    	lea    0x7b14(%rip),%esi        # 19c20 <_obstack_memory_used@@Base+0x9470>
   1210c:	31 ff                	xor    %edi,%edi
   1210e:	e8 4d 27 ff ff       	call   4860 <dcgettext@plt>
   12113:	48 8b 33             	mov    (%rbx),%rsi
   12116:	e9 23 03 00 00       	jmp    1243e <_obstack_memory_used@@Base+0x1c8e>
   1211b:	49 85 f9             	test   %rdi,%r9
   1211e:	28 ff                	sub    %bh,%bh
   12120:	ff 48 89             	decl   -0x77(%rax)
   12123:	ef                   	out    %eax,(%dx)
   12124:	e8 57 27 ff ff       	call   4880 <strlen@plt>
   12129:	48 8b 49 85          	mov    -0x7b(%rcx),%rcx
   1212d:	c0 49 f7 fc          	rorb   $0xfc,-0x9(%rcx)
   12131:	af                   	scas   %es:(%rdi),%eax
   12132:	fe 48 8b             	decb   -0x75(%rax)
   12135:	47 28 48 3b          	rex.RXB sub %r9b,0x3b(%r8)
   12139:	4d 01 ff             	add    %r15,%r15
   1213c:	83 dc 02             	sbb    $0x2,%esp
   1213f:	00 00                	add    %al,(%rax)
   12141:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12145:	eb 14                	jmp    1215b <_obstack_memory_used@@Base+0x19ab>
   12147:	57                   	push   %rdi
   12148:	0f 84 3e 02 00 00    	je     1238c <_obstack_memory_used@@Base+0x1bdc>
   1214e:	66 01 48 c7          	add    %cx,-0x39(%rax)
   12152:	c7                   	(bad)  
   12153:	dc 00                	faddl  (%rax)
   12155:	00 00                	add    %al,(%rax)
   12157:	b9 e9 df 00 00       	mov    $0xdfe9,%ecx
   1215c:	00 0c 74             	add    %cl,(%rsp,%rsi,2)
   1215f:	24 70                	and    $0x70,%al
   12161:	4c 8b 05 49 ff c6 00 	mov    0xc6ff49(%rip),%r8        # c820b1 <obstack_alloc_failed_handler@@Base+0xc60011>
   12168:	48 83 05 88 01 01 00 	addq   $0x1,0x10188(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   1216f:	01 
   12170:	e8 ab ab ff ff       	call   cd20 <__sprintf_chk@plt+0x8040>
   12175:	49 85 f2             	test   %rsi,%r10
   12178:	0f 84 0f 03 00 00    	je     1248d <_obstack_memory_used@@Base+0x1cdd>
   1217e:	e8 4d 28 74 2d       	call   2d7549d0 <obstack_alloc_failed_handler@@Base+0x2d732930>
   12183:	48 89 ef             	mov    %rbp,%rdi
   12186:	e8 f5 26 ff ff       	call   4880 <strlen@plt>
   1218b:	48 8b 3b             	mov    (%rbx),%rdi
   1218e:	48 01 05 63 01 01 00 	add    %rax,0x10163(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   12195:	48 8b 47 28          	mov    0x28(%rdi),%rax
   12199:	48 3b 49 e9          	cmp    -0x17(%rcx),%rcx
   1219d:	d1 02                	roll   (%rdx)
   1219f:	00 00                	add    %al,(%rax)
   121a1:	16                   	(bad)  
   121a2:	00 48 8d             	add    %cl,-0x73(%rax)
   121a5:	50                   	push   %rax
   121a6:	01 48 89             	add    %ecx,-0x77(%rax)
   121a9:	57                   	push   %rdi
   121aa:	28 c6                	sub    %al,%dh
   121ac:	00 4c 0f af          	add    %cl,-0x51(%rdi,%rcx,1)
   121b0:	fe c1                	inc    %cl
   121b2:	eb 24                	jmp    121d8 <_obstack_memory_used@@Base+0x1a28>
   121b4:	00 01                	add    %al,(%rcx)
   121b6:	48 83 3d 0a 04 01 00 	cmpq   $0x0,0x1040a(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
   121bd:	00 
   121be:	0f 85 4c 01 00 00    	jne    12310 <_obstack_memory_used@@Base+0x1b60>
   121c4:	48 8b 84 24 08 03 00 	mov    0x49000308(%rsp),%rax
   121cb:	49 
   121cc:	0f af de             	imul   %esi,%ebx
   121cf:	00 00                	add    %al,(%rax)
   121d1:	28 00                	sub    %al,(%rax)
   121d3:	4c 0f af d3          	imul   %rbx,%r10
   121d7:	65 02 49 01          	add    %gs:0x1(%rcx),%cl
   121db:	d6                   	(bad)  
   121dc:	81 c4 18 03 00 00    	add    $0x318,%esp
   121e2:	5b                   	pop    %rbx
   121e3:	5d                   	pop    %rbp
   121e4:	41 5c                	pop    %r12
   121e6:	41 5d                	pop    %r13
   121e8:	41 5e                	pop    %r14
   121ea:	41 5f                	pop    %r15
   121ec:	c3                   	ret    
   121ed:	0f 1f 00             	nopl   (%rax)
   121f0:	85 c0                	test   %eax,%eax
   121f2:	0f 84 f8 fd ff ff    	je     11ff0 <_obstack_memory_used@@Base+0x1840>
   121f8:	31 c0                	xor    %eax,%eax
   121fa:	80 49 f7 48          	orb    $0x48,-0x9(%rcx)
   121fe:	ff c2                	inc    %edx
   12200:	29 ce                	sub    %ecx,%esi
   12202:	7c 03                	jl     12207 <_obstack_memory_used@@Base+0x1a57>
   12204:	14 00                	adc    $0x0,%al
   12206:	48 89 f9             	mov    %rdi,%rcx
   12209:	fd                   	std    
   1220a:	ff                   	(bad)  
   1220b:	ff 0f                	decl   (%rdi)
   1220d:	1f                   	(bad)  
   1220e:	40 00 4c 8b 3d       	rex add %cl,0x3d(%rbx,%rcx,4)
   12213:	79 02                	jns    12217 <_obstack_memory_used@@Base+0x1a67>
   12215:	01 00                	add    %eax,(%rax)
   12217:	4d 85 ff             	test   %r15,%r15
   1221a:	75 0d                	jne    12229 <_obstack_memory_used@@Base+0x1a79>
   1221c:	eb 2a                	jmp    12248 <_obstack_memory_used@@Base+0x1a98>
   1221e:	66 49 ff c0          	data16 inc %r8
   12222:	7f 4d                	jg     12271 <_obstack_memory_used@@Base+0x1ac1>
   12224:	21 f9                	and    %edi,%ecx
   12226:	ff 4c 01 e8          	decl   -0x18(%rcx,%rax,1)
   1222a:	8b 3f                	mov    (%rdi),%edi
   1222c:	ba 04 00 0f 85       	mov    $0x850f0004,%edx
   12231:	48 09 ce             	or     %rcx,%rsi
   12234:	00 17                	add    %dl,(%rdi)
   12236:	27                   	(bad)  
   12237:	7c 69                	jl     122a2 <_obstack_memory_used@@Base+0x1af2>
   12239:	85 c0                	test   %eax,%eax
   1223b:	75 e3                	jne    12220 <_obstack_memory_used@@Base+0x1a70>
   1223d:	e9 ae fd ff ff       	jmp    11ff0 <_obstack_memory_used@@Base+0x1840>
   12242:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12248:	0f b6 43 12          	movzbl 0x12(%rbx),%eax
   1224c:	31 f6                	xor    %esi,%esi
   1224e:	83 e8 49             	sub    $0x49,%eax
   12251:	ff c2                	inc    %edx
   12253:	77 0d                	ja     12262 <_obstack_memory_used@@Base+0x1ab2>
   12255:	0f b6 c0             	movzbl %al,%eax
   12258:	48 8d 0d 41 64 00 00 	lea    0x6441(%rip),%rcx        # 186a0 <_obstack_memory_used@@Base+0x7ef0>
   1225f:	4d 89 e7             	mov    %r12,%r15
   12262:	31 d2                	xor    %edx,%edx
   12264:	4c 89 e9             	mov    %r13,%rcx
   12267:	4c 89 f7             	mov    %r14,%rdi
   1226a:	e8 a1 c8 ff ff       	call   eb10 <__sprintf_chk@plt+0x9e30>
   1226f:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   12274:	83 3d 91 00 01 00 01 	cmpl   $0x1,0x10091(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   1227b:	0f 85 6f fd ff ff    	jne    11ff0 <_obstack_memory_used@@Base+0x1840>
   12281:	83 3d 9c 49 f7 f8 ff 	cmpl   $0xffffffff,-0x708b664(%rip)        # fffffffff8f86c24 <obstack_alloc_failed_handler@@Base+0xfffffffff8f64b84>
   12288:	0f 85 62 fd 4c 39    	jne    394e1ff0 <obstack_alloc_failed_handler@@Base+0x394bff50>
   1228e:	c1 3d 7b 00 4d 01 dc 	sarl   $0xdc,0x14d007b(%rip)        # 14e2310 <obstack_alloc_failed_handler@@Base+0x14c0270>
   12295:	f7 0f 8f 2f ff ff    	testl  $0xffff2f8f,(%rdi)
   1229b:	48 85 f9             	test   %rdi,%rcx
   1229e:	49 c7 c2 42 fe ff ff 	mov    $0xfffffffffffffe42,%r10
   122a5:	03 00                	add    (%rax),%eax
   122a7:	00 06                	add    %al,(%rsi)
   122a9:	49 0f af f0          	imul   %r8,%rsi
   122ad:	e8 ee f5 4d 85       	call   ffffffff854f18a0 <obstack_alloc_failed_handler@@Base+0xffffffff854cf800>
   122b2:	c8 c9 7f ff          	enter  $0x7fc9,$0xff
   122b6:	ff                   	(bad)  
   122b7:	e9 34 fd ff ff       	jmp    11ff0 <_obstack_memory_used@@Base+0x1840>
   122bc:	be 10 00 00 00       	mov    $0x10,%esi
   122c1:	48 8d 3d 18 04 01 00 	lea    0x10418(%rip),%rdi        # 226e0 <obstack_alloc_failed_handler@@Base+0x640>
   122c8:	e8 0f 8f 6e 03       	call   36fb1dc <obstack_alloc_failed_handler@@Base+0x36d913c>
   122cd:	00 00                	add    %al,(%rax)
   122cf:	05 24 04 01 00       	add    $0x10424,%eax
   122d4:	e9 a9 fb ff ff       	jmp    11e82 <_obstack_memory_used@@Base+0x16d2>
   122d9:	31 f6                	xor    %esi,%esi
   122db:	4d 39 f4             	cmp    %r14,%r12
   122de:	e8 7d 48 4c 29       	call   294d6b60 <obstack_alloc_failed_handler@@Base+0x294b4ac0>
   122e3:	0f 8f 23 fe ff ff    	jg     1210c <_obstack_memory_used@@Base+0x195c>
   122e9:	49 09 f1             	or     %rsi,%r9
   122ec:	48 39 d8             	cmp    %rbx,%rax
   122ef:	48 8d 0f             	lea    (%rdi),%rcx
   122f2:	8f 49 c1 e7          	(bad)
   122f6:	3b 65 25             	cmp    0x25(%rbp),%esp
   122f9:	ff                   	(bad)  
   122fa:	ff 0f                	decl   (%rdi)
   122fc:	b6 7c                	mov    $0x7c,%dh
   122fe:	24 14                	and    $0x14,%al
   12300:	4c 89 ea             	mov    %r13,%rdx
   12303:	48 89 c6             	mov    %rax,%rsi
   12306:	e8 55 7e 49 21       	call   214aa160 <obstack_alloc_failed_handler@@Base+0x214880c0>
   1230b:	e9 62 ff ff ff       	jmp    12272 <_obstack_memory_used@@Base+0x1ac2>
   12310:	48 8b 84 24 08 03 00 	mov    0x308(%rsp),%rax
   12317:	00 
   12318:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   1231f:	00 00 
   12321:	0f 85 19 01 00 00    	jne    12440 <_obstack_memory_used@@Base+0x1c90>
   12327:	48 81 c4 18 03 00 00 	add    $0x318,%rsp
   1232e:	5b                   	pop    %rbx
   1232f:	5d                   	pop    %rbp
   12330:	41 5c                	pop    %r12
   12332:	41 5d                	pop    %r13
   12334:	41 5e                	pop    %r14
   12336:	41 5f                	pop    %r15
   12338:	e9 63 f5 ff ff       	jmp    118a0 <_obstack_memory_used@@Base+0x10f0>
   1233d:	48                   	rex.W
   1233e:	48 c1 e8 27          	shr    $0x27,%rax
   12342:	49 85 ff             	test   %rdi,%r15
   12345:	be 01 00 00 00       	mov    $0x1,%esi
   1234a:	48 8d 3d 7a 78 00 00 	lea    0x787a(%rip),%rdi        # 19bcb <_obstack_memory_used@@Base+0x941b>
   12351:	e8 0f 84 c5 fd       	call   fffffffffdc6a765 <obstack_alloc_failed_handler@@Base+0xfffffffffdc486c5>
   12356:	ff                   	(bad)  
   12357:	ff 05 0f 8c a6 fc    	incl   -0x35973f1(%rip)        # fffffffffca7af6c <obstack_alloc_failed_handler@@Base+0xfffffffffca58ecc>
   1235d:	0f 49 01             	cmovns (%rcx),%eax
   12360:	f1                   	int1   
   12361:	00 00                	add    %al,(%rax)
   12363:	4c                   	rex.WR
   12364:	4d 29 c0             	sub    %r8,%r8
   12367:	b5 01                	mov    $0x1,%ch
   12369:	00 00                	add    %al,(%rax)
   1236b:	49 89 c7             	mov    %rax,%r15
   1236e:	48 85 c0             	test   %rax,%rax
   12371:	0f 85 8c fb ff ff    	jne    11f03 <_obstack_memory_used@@Base+0x1753>
   12377:	0f 84 98 fc ff ff    	je     12015 <_obstack_memory_used@@Base+0x1865>
   1237d:	84 13                	test   %dl,(%rbx)
   1237f:	ff                   	(bad)  
   12380:	ff                   	(bad)  
   12381:	ff 77 00             	push   0x0(%rdi)
   12384:	00 e8                	add    %ch,%al
   12386:	48 85 d3             	test   %rdx,%rbx
   12389:	ff 49 09             	decl   0x9(%rcx)
   1238c:	49 21 ff             	and    %rdi,%r15
   1238f:	c6                   	(bad)  
   12390:	0f b6 44 24 14       	movzbl 0x14(%rsp),%eax
   12395:	89 c7                	mov    %eax,%edi
   12397:	e8 c4 49 f7 f9       	call   fffffffff9f86d60 <obstack_alloc_failed_handler@@Base+0xfffffffff9f64cc0>
   1239c:	e9 62 fb 48 85       	jmp    ffffffff854a1f03 <obstack_alloc_failed_handler@@Base+0xffffffff8547fe63>
   123a1:	fb                   	sti    
   123a2:	ff                   	(bad)  
   123a3:	ff                   	(bad)  
   123a4:	ff 02                	incl   (%rdx)
   123a6:	00 00                	add    %al,(%rax)
   123a8:	00 be 01 00 00 00    	add    %bh,0x1(%rsi)
   123ae:	4c 39 e1             	cmp    %r12,%rcx
   123b1:	16                   	(bad)  
   123b2:	78 00                	js     123b4 <_obstack_memory_used@@Base+0x1c04>
   123b4:	00 e8                	add    %ch,%al
   123b6:	46 27                	rex.RX (bad) 
   123b8:	ff                   	(bad)  
   123b9:	ff 48 83             	decl   -0x7d(%rax)
   123bc:	05 36 ff 00 4d       	add    $0x4d00ff36,%eax
   123c1:	09 ce                	or     %ecx,%esi
   123c3:	2c 75                	sub    $0x75,%al
   123c5:	7b e9                	jnp    123b0 <_obstack_memory_used@@Base+0x1c00>
   123c7:	c6 03 00             	movb   $0x0,(%rbx)
   123ca:	00 78 00             	add    %bh,0x0(%rax)
   123cd:	00 ba 48 c1 ee 3b    	add    %bh,0x3beec148(%rdx)
   123d3:	31 ff                	xor    %edi,%edi
   123d5:	e8 86 24 ff ff       	call   4860 <dcgettext@plt>
   123da:	48 89 c6             	mov    %rax,%rsi
   123dd:	48 8b 84 24 08 03 00 	mov    0x308(%rsp),%rax
   123e4:	00 
   123e5:	64 48 2b 04 25 28 4d 	sub    %fs:0xffffffffd5314d28,%rax
   123ec:	31 d5 
   123ee:	75 e9                	jne    123d9 <_obstack_memory_used@@Base+0x1c29>
   123f0:	c9                   	leave  
   123f1:	01 00                	add    %eax,(%rax)
   123f3:	00 14 48             	add    %dl,(%rax,%rcx,2)
   123f6:	48 c1 e1 3a          	shl    $0x3a,%rcx
   123fa:	00 00                	add    %al,(%rax)
   123fc:	4c 89 ea             	mov    %r13,%rdx
   123ff:	5b                   	pop    %rbx
   12400:	5d                   	pop    %rbp
   12401:	41 5c                	pop    %r12
   12403:	41 5d                	pop    %r13
   12405:	4c 85 d6             	test   %r10,%rsi
   12408:	49 29 d0             	sub    %rdx,%r8
   1240b:	7d ff                	jge    1240c <_obstack_memory_used@@Base+0x1c5c>
   1240d:	ff 48 c1             	decl   -0x3f(%rax)
   12410:	48 c1 eb 1b          	shr    $0x1b,%rbx
   12414:	14 c6                	adc    $0xc6,%al
   12416:	7e fe                	jle    12416 <_obstack_memory_used@@Base+0x1c66>
   12418:	ff                   	(bad)  
   12419:	ff                   	(bad)  
   1241a:	fa                   	cli    
   1241b:	ff                   	(bad)  
   1241c:	ff                   	(bad)  
   1241d:	be 20 00 00 00       	mov    $0x20,%esi
   12422:	e8 d9 4d 89 ed       	call   ffffffffed8a7200 <obstack_alloc_failed_handler@@Base+0xffffffffed885160>
   12427:	49 ff c4             	inc    %r12
   1242a:	e1 07                	loope  12433 <_obstack_memory_used@@Base+0x1c83>
   1242c:	be 0a 00 00 00       	mov    $0xa,%esi
   12431:	e8 4c 39 cb ff       	call   ffffffffffcc5d82 <obstack_alloc_failed_handler@@Base+0xffffffffffca3ce2>
   12436:	e9 73 fd ff 0f       	jmp    100121ae <obstack_alloc_failed_handler@@Base+0xfff010e>
   1243b:	85 48 21             	test   %ecx,0x21(%rax)
   1243e:	c9                   	leave  
   1243f:	00 e8                	add    %ch,%al
   12441:	49 89 f5             	mov    %rsi,%r13
   12444:	ff 66 2e             	jmp    *0x2e(%rsi)
   12447:	0f 48 01             	cmovs  (%rcx),%eax
   1244a:	4d 29 ec             	sub    %r13,%r12
   1244d:	20 02                	and    %al,(%rdx)
   1244f:	00 00                	add    %al,(%rax)
   12451:	0f 1e fa             	nop    %edx
   12454:	41                   	rex.B
   12455:	49 ff c6             	inc    %r14
   12458:	ff                   	(bad)  
   12459:	bf 50 49 89 f2       	mov    $0xf2894950,%edi
   1245e:	4c 09 f6             	or     %r14,%rsi
   12461:	89 4c 31 de          	mov    %ecx,-0x22(%rcx,%rsi,1)
   12465:	49 89 cd             	mov    %rcx,%r13
   12468:	41 54                	push   %r12
   1246a:	0f 85 3a ff ff ff    	jne    123aa <_obstack_memory_used@@Base+0x1bfa>
   12470:	83 ec 08             	sub    $0x8,%esp
   12473:	e8 18 22 49 29       	call   294a4690 <obstack_alloc_failed_handler@@Base+0x294825f0>
   12478:	c5 89 c4 48 85 c0    	vpinsrw $0xc0,-0x7b(%rax),%xmm14,%xmm1
   1247e:	74 7b                	je     124fb <_obstack_memory_used@@Base+0x1d4b>
   12480:	48 8d 1d 99 61 00 00 	lea    0x6199(%rip),%rbx        # 18620 <_obstack_memory_used@@Base+0x7e70>
   12487:	48 89 c7             	mov    %rax,%rdi
   1248a:	48 89 58 28          	mov    %rbx,0x28(%rax)
   1248e:	e8 7f 0a ff ff       	call   2f12 <free@plt-0x176e>
   12493:	84 c0                	test   %al,%al
   12495:	74 79                	je     12510 <_obstack_memory_used@@Base+0x1d60>
   12497:	48 89 de             	mov    %rbx,%rsi
   1249a:	eb 7c                	jmp    12518 <_obstack_memory_used@@Base+0x1d68>
   1249c:	ff c0                	inc    %eax
   1249e:	ae                   	scas   %es:(%rdi),%al
   1249f:	a2 ff ff 49 89 44 24 	movabs %al,0x481024448949ffff
   124a6:	10 48 
   124a8:	89 c3                	mov    %eax,%ebx
   124aa:	48 85 c0             	test   %rax,%rax
   124ad:	74 61                	je     12510 <_obstack_memory_used@@Base+0x1d60>
   124af:	be 10 00 00 00       	mov    $0x10,%esi
   124b4:	48 89 c7             	mov    %rax,%rdi
   124b7:	e8 49 c7 c7 c8       	call   ffffffffc8c8ec05 <obstack_alloc_failed_handler@@Base+0xffffffffc8c6cb65>
   124bc:	fd                   	std    
   124bd:	ff                   	(bad)  
   124be:	ff 24 48             	jmp    *(%rax,%rcx,2)
   124c1:	7f ed                	jg     124b0 <_obstack_memory_used@@Base+0x1d00>
   124c3:	4d 09 d4             	or     %r10,%r12
   124c6:	e5 e3                	in     $0xe3,%eax
   124c8:	04 4d                	add    $0x4d,%al
   124ca:	89 74 24 30          	mov    %esi,0x30(%rsp)
   124ce:	0f 84 ba 02 00 00    	je     1278e <_obstack_memory_used@@Base+0x1fde>
   124d4:	24 38                	and    $0x38,%al
   124d6:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   124db:	49 c7 44 49 c1 eb 0a 	movq   $0xaeb,-0x3f(%r9,%rcx,2)
   124e2:	00 00 
   124e4:	49 c7 44 24 20 00 00 	movq   $0xfffffffff7490000,0x20(%r12)
   124eb:	49 f7 
   124ed:	fb                   	sti    
   124ee:	89 6c 24 49          	mov    %ebp,0x49(%rsp)
   124f2:	c1 ed 08             	shr    $0x8,%ebp
   124f5:	85 f8                	test   %edi,%eax
   124f7:	00 00                	add    %al,(%rax)
   124f9:	00 4c 09 c6          	add    %cl,-0x3a(%rcx,%rcx,1)
   124fd:	01 f3                	add    %esi,%ebx
   124ff:	4c 89 e0             	mov    %r12,%rax
   12502:	5b                   	pop    %rbx
   12503:	5d                   	pop    %rbp
   12504:	41                   	rex.B
   12505:	4d 31 ec             	xor    %r13,%r12
   12508:	41 5e                	pop    %r14
   1250a:	41 5f                	pop    %r15
   1250c:	c3                   	ret    
   1250d:	0f 1f 00             	nopl   (%rax)
   12510:	49                   	rex.WB
   12511:	49 0f af fe          	imul   %r14,%rdi
   12515:	ff                   	(bad)  
   12516:	ff 65 21             	jmp    *0x21(%rbp)
   12519:	ff                   	(bad)  
   1251a:	ff 0f                	decl   (%rdi)
   1251c:	8f                   	(bad)  
   1251d:	ac                   	lods   %ds:(%rsi),%al
   1251e:	fd                   	std    
   1251f:	ff 4d 29             	decl   0x29(%rbp)
   12522:	e4 c1                	in     $0xc1,%al
   12524:	e0 2b                	loopne 12551 <_obstack_memory_used@@Base+0x1da1>
   12526:	09 4d 09             	or     %ecx,0x9(%rbp)
   12529:	f4                   	hlt    
   1252a:	e9 84 03 00 00       	jmp    128b3 <_obstack_memory_used@@Base+0x2103>
   1252f:	fe                   	(bad)  
   12530:	ec                   	in     (%dx),%al
   12531:	08 01                	or     %al,(%rcx)
   12533:	00 00                	add    %al,(%rax)
   12535:	4d 09 ed             	or     %r13,%r13
   12538:	fb                   	sti    
   12539:	48 c1 e3 19          	shl    $0x19,%rbx
   1253d:	00 48 89             	add    %cl,-0x77(%rax)
   12540:	4c 21 db             	and    %r11,%rbx
   12543:	00 00                	add    %al,(%rax)
   12545:	00 4d 09             	add    %cl,0x9(%rbp)
   12548:	e0 85                	loopne 124cf <_obstack_memory_used@@Base+0x1d1f>
   1254a:	49 01 4c 0f af       	add    %rcx,-0x51(%r15,%rcx,1)
   1254f:	cb                   	lret   
   12550:	1a 0f                	sbb    (%rdi),%cl
   12552:	0f 8f 39 ff ff ff    	jg     12491 <_obstack_memory_used@@Base+0x1ce1>
   12558:	d2 0f                	rorb   %cl,(%rdi)
   1255a:	84 06                	test   %al,(%rsi)
   1255c:	05 00 00 80 49       	add    $0x49800000,%eax
   12561:	4d 0f af da          	imul   %r10,%r11
   12565:	01 00                	add    %eax,(%rax)
   12567:	00 4c 09 da          	add    %cl,-0x26(%rcx,%rcx,1)
   1256b:	4c 21 d0             	and    %r10,%rax
   1256e:	24 ff                	and    $0xff,%al
   12570:	ff 49 89             	decl   -0x77(%rcx)
   12573:	c6                   	(bad)  
   12574:	48 85 c0             	test   %rax,%rax
   12577:	0f 84 24 05 00 00    	je     12aa1 <_obstack_memory_used@@Base+0x22f1>
   1257d:	48                   	rex.W
   1257e:	4c 89 c7             	mov    %r8,%rdi
   12581:	fb                   	sti    
   12582:	4d 89 d6             	mov    %r10,%r14
   12585:	4d 8d 24 06          	lea    (%r14,%rax,1),%r12
   12589:	48                   	rex.W
   1258a:	49 f7 fa             	idiv   %r10
   1258d:	49 ff c0             	inc    %r8
   12590:	ff                   	(bad)  
   12591:	ff 0f                	decl   (%rdi)
   12593:	00 00                	add    %al,(%rax)
   12595:	0f eb 5c 04 00       	por    0x0(%rsp,%rax,1),%mm3
   1259a:	00 41 0f             	add    %al,0xf(%rcx)
   1259d:	b6 17                	mov    $0x17,%dh
   1259f:	49 c1 e4 27          	shl    $0x27,%r12
   125a3:	2c 06                	sub    $0x6,%al
   125a5:	48 ff c3             	inc    %rbx
   125a8:	4d 31 d3             	xor    %r10,%r11
   125ab:	60                   	(bad)  
   125ac:	4c                   	rex.WR
   125ad:	48 85 f3             	test   %rsi,%rbx
   125b0:	20 4d 89             	and    %cl,-0x77(%rbp)
   125b3:	49 0f af d6          	imul   %r14,%rdx
   125b7:	24 48                	and    $0x48,%al
   125b9:	8d 44 24 40          	lea    0x40(%rsp),%eax
   125bd:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   125c4:	00 00 
   125c6:	48 c7 44 24 28 4c 01 	movq   $0xd6014c,0x28(%rsp)
   125cd:	d6 00 
   125cf:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   125d6:	00 00 
   125d8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   125dd:	89 d0                	mov    %edx,%eax
   125df:	48 89 d8             	mov    %rbx,%rax
   125e2:	75 19                	jne    125fd <_obstack_memory_used@@Base+0x1e4d>
   125e4:	0f 4d 21             	cmovge (%rcx),%esp
   125e7:	dc 41 0f             	faddl  0xf(%rcx)
   125ea:	b6 40                	mov    $0x40,%dh
   125ec:	01 49 e9             	add    %ecx,-0x17(%rcx)
   125ef:	30 02                	xor    %al,(%rdx)
   125f1:	00 00                	add    %al,(%rax)
   125f3:	74 e9                	je     125de <_obstack_memory_used@@Base+0x1e2e>
   125f5:	73 fe                	jae    125f5 <_obstack_memory_used@@Base+0x1e45>
   125f7:	ff                   	(bad)  
   125f8:	ff                   	(bad)  
   125f9:	fb                   	sti    
   125fa:	00 00                	add    %al,(%rax)
   125fc:	e9 55 fd 49 09       	jmp    94b2356 <obstack_alloc_failed_handler@@Base+0x94902b6>
   12601:	c5 ef 41             	(bad)
   12604:	0f b6 55 01          	movzbl 0x1(%rbp),%edx
   12608:	49 83 c5 01          	add    $0x1,%r13
   1260c:	84 d2                	test   %dl,%dl
   1260e:	74 05                	je     12615 <_obstack_memory_used@@Base+0x1e65>
   12610:	80 fa 2f             	cmp    $0x2f,%dl
   12613:	0f 8f 3c 03 00 00    	jg     12955 <_obstack_memory_used@@Base+0x21a5>
   12619:	84 da                	test   %bl,%dl
   1261b:	e9 1d 01 00 00       	jmp    1273d <_obstack_memory_used@@Base+0x1f8d>
   12620:	ed                   	in     (%dx),%eax
   12621:	4c                   	rex.WR
   12622:	48 ff c3             	inc    %rbx
   12625:	83 fd 01             	cmp    $0x1,%ebp
   12628:	0f 84 22 01 00 00    	je     12750 <_obstack_memory_used@@Base+0x1fa0>
   1262e:	0f 85 66 03 00 00    	jne    1299a <_obstack_memory_used@@Base+0x21ea>
   12634:	3c 2e                	cmp    $0x2e,%al
   12636:	0f 84 cc 4d 01 d3    	je     ffffffffd3027408 <obstack_alloc_failed_handler@@Base+0xffffffffd3005368>
   1263c:	41 80 7c 24 ff 2f    	cmpb   $0x2f,-0x1(%r12)
   12642:	74 09                	je     1264d <_obstack_memory_used@@Base+0x1e9d>
   12644:	41 c6 04 24 2f       	movb   $0x2f,(%r12)
   12649:	49 0f 4c 89 c2 ff ff 	cmovl  0x2cffffc2(%r9),%rcx
   12650:	2c 
   12651:	48 39 c3             	cmp    %rax,%rbx
   12654:	77 57                	ja     126ad <_obstack_memory_used@@Base+0x1efd>
   12656:	4c 29 f3             	sub    %r14,%rbx
   12659:	4d 29 f4             	sub    %r14,%r12
   1265c:	49 21 d2             	and    %rdx,%r10
   1265f:	20 10                	and    %dl,(%rax)
   12661:	48 8d 44 1d 01       	lea    0x1(%rbp,%rbx,1),%rax
   12666:	48 81 c3 49 c7 c6 36 	add    $0x36c6c749,%rbx
   1266d:	fe                   	(bad)  
   1266e:	ff                   	(bad)  
   1266f:	ff 00                	incl   (%rax)
   12671:	10 4d 31             	adc    %cl,0x31(%rbp)
   12674:	ce                   	(bad)  
   12675:	0f 4d 4c 01 c1       	cmovge -0x3f(%rcx,%rax,1),%ecx
   1267a:	db 0f                	fisttpl (%rdi)
   1267c:	8c 43 02             	mov    %es,0x2(%rbx)
   1267f:	00 00                	add    %al,(%rax)
   12681:	0f 85 a5 fc ff ff    	jne    1232c <_obstack_memory_used@@Base+0x1b7c>
   12687:	89 f7                	mov    %esi,%edi
   12689:	48 89 de             	mov    %rbx,%rsi
   1268c:	e8 7f 24 ff ff       	call   4b10 <realloc@plt>
   12691:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   12696:	48 85 c0             	test   %rax,%rax
   12699:	49 89 4c 85 eb       	mov    %rcx,-0x15(%r13,%rax,4)
   1269e:	48 85 db             	test   %rbx,%rbx
   126a1:	48                   	rex.W
   126a2:	4d 85 c1             	test   %r8,%r9
   126a5:	00 00                	add    %al,(%rax)
   126a7:	4c 01 f3             	add    %r14,%rbx
   126aa:	4d 01 49 c7          	add    %r9,-0x39(%r9)
   126ae:	c3                   	ret    
   126af:	49 c1 e7 18          	shl    $0x18,%r15
   126b3:	e7 fc                	out    %eax,$0xfc
   126b5:	ff                   	(bad)  
   126b6:	ff 48 0f             	decl   0xf(%rax)
   126b9:	8f                   	(bad)  
   126ba:	da fd                	(bad)  
   126bc:	ff                   	(bad)  
   126bd:	ff 4d 39             	decl   0x39(%rbp)
   126c0:	ed                   	in     (%dx),%eax
   126c1:	04 24                	add    $0x24,%al
   126c3:	0f 85 7f 01 00 00    	jne    12848 <_obstack_memory_used@@Base+0x2098>
   126c9:	89 f7                	mov    %esi,%edi
   126cb:	4d 31 fb             	xor    %r15,%r11
   126ce:	ff                   	(bad)  
   126cf:	ff 85 c0 75 10 8b    	incl   -0x74ef8a40(%rbp)
   126d5:	44 24 78             	rex.R and $0x78,%al
   126d8:	25 00 48 31 f0       	and    $0xf0314800,%eax
   126dd:	4d 01 0f             	add    %r9,(%r15)
   126e0:	85 f8                	test   %edi,%eax
   126e2:	fd                   	std    
   126e3:	ff                   	(bad)  
   126e4:	ff 0f                	decl   (%rdi)
   126e6:	b6 55                	mov    $0x55,%dh
   126e8:	00 0f                	add    %cl,(%rdi)
   126ea:	8c 70 03             	mov    %?,0x3(%rax)
   126ed:	00 00                	add    %al,(%rax)
   126ef:	85 e9                	test   %ebp,%ecx
   126f1:	fe                   	(bad)  
   126f2:	ff 4d 31             	decl   0x31(%rbp)
   126f5:	49 01 ca             	add    %rcx,%r10
   126f8:	89 de                	mov    %ebx,%esi
   126fa:	ff 01                	incl   (%rcx)
   126fc:	49 39 c4             	cmp    %rax,%r12
   126ff:	0f 86 6b 02 00 00    	jbe    12970 <_obstack_memory_used@@Base+0x21c0>
   12705:	41 0f 84 4c 31 cf 00 	rex.B je d05858 <obstack_alloc_failed_handler@@Base+0xce37b8>
   1270c:	49 09 f1             	or     %rsi,%r9
   1270f:	29 d3                	sub    %edx,%ebx
   12711:	48 c1 e7 2e          	shl    $0x2e,%rdi
   12715:	01 c3                	add    %eax,%ebx
   12717:	01 e9                	add    %ebp,%ecx
   12719:	58                   	pop    %rax
   1271a:	02 00                	add    (%rax),%al
   1271c:	00 0f                	add    %cl,(%rdi)
   1271e:	1f                   	(bad)  
   1271f:	00 bf 00 10 00 00    	add    %bh,0x1000(%rdi)
   12725:	88 49 39             	mov    %cl,0x39(%rcx)
   12728:	de 63 1f             	fisubs 0x1f(%rbx)
   1272b:	ff                   	(bad)  
   1272c:	ff 49 49             	decl   0x49(%rcx)
   1272f:	85 0f                	test   %ecx,(%rdi)
   12731:	8c 13                	mov    %ss,(%rbx)
   12733:	01 00                	add    %eax,(%rax)
   12735:	00 84 ba fe 0f 84 d6 	add    %al,-0x297bf002(%rdx,%rdi,4)
   1273c:	48 89 d7             	mov    %rdx,%rdi
   1273f:	24 48                	and    $0x48,%al
   12741:	8d 98 00 e9 d6 4c    	lea    0x4cd6e900(%rax),%ebx
   12747:	39 d8                	cmp    %ebx,%eax
   12749:	60                   	(bad)  
   1274a:	01 e9                	add    %ebp,%ecx
   1274c:	48 c1 e9 3f          	shr    $0x3f,%rcx
   12750:	3c 4c                	cmp    $0x4c,%al
   12752:	89 d9                	mov    %ebx,%ecx
   12754:	e4 fe                	in     $0xfe,%al
   12756:	ff                   	(bad)  
   12757:	ff 4d 89             	decl   -0x77(%rbp)
   1275a:	e8 eb 8f 0f 1f       	call   1f10b74a <obstack_alloc_failed_handler@@Base+0x1f0e96aa>
   1275f:	00 48 83             	add    %cl,-0x7d(%rax)
   12762:	7c 24                	jl     12788 <_obstack_memory_used@@Base+0x1fd8>
   12764:	08 00                	or     %al,(%rax)
   12766:	0f 84 d2 01 00 00    	je     1293e <_obstack_memory_used@@Base+0x218e>
   1276c:	4d 31 f5             	xor    %r14,%r13
   1276f:	24 20                	and    $0x20,%al
   12771:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   12776:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1277b:	48 89 44 74 e1       	mov    %rax,-0x1f(%rsp,%rsi,2)
   12780:	49 c1 eb 19          	shr    $0x19,%r11
   12784:	68 48 8b 75 48       	push   $0x48758b48
   12789:	f7 f8                	idiv   %eax
   1278b:	44                   	rex.R
   1278c:	48 c1 e6 05          	shl    $0x5,%rsi
   12790:	44 24 60             	rex.R and $0x60,%al
   12793:	48 89 44 4d 4d       	mov    %rax,0x4d(%rbp,%rcx,2)
   12798:	48 21 d6             	and    %rdx,%rsi
   1279b:	48                   	rex.W
   1279c:	49 c7 c7 74 fc 48 0f 	mov    $0xf48fc74,%r15
   127a3:	af                   	scas   %es:(%rdi),%eax
   127a4:	ca c3 00             	lret   $0xc3
   127a7:	00 48 8b             	add    %cl,-0x75(%rax)
   127aa:	6c                   	insb   (%dx),%es:(%rdi)
   127ab:	24 0f                	and    $0xf,%al
   127ad:	85 d3                	test   %edx,%ebx
   127af:	02 00                	add    (%rax),%al
   127b1:	00 39                	add    %bh,(%rcx)
   127b3:	e0 00                	loopne 127b5 <_obstack_memory_used@@Base+0x2005>
   127b5:	48 8b 32             	mov    (%rdx),%rsi
   127b8:	48 ff c3             	inc    %rbx
   127bb:	cb                   	lret   
   127bc:	48                   	rex.W
   127bd:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   127c2:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   127c7:	48 c1 e0 3e          	shl    $0x3e,%rax
   127cb:	0f 49 c7             	cmovns %edi,%eax
   127ce:	c5 8e 49             	(bad)
   127d1:	ff c2                	inc    %edx
   127d3:	49 c7 c7 df fe ff ff 	mov    $0xfffffffffffffedf,%r15
   127da:	33 4c 39 e6          	xor    -0x1a(%rcx,%rdi,1),%ecx
   127de:	0f 84 43 03 00 00    	je     12b27 <_obstack_memory_used@@Base+0x2377>
   127e4:	4c 89 e7             	mov    %r12,%rdi
   127e7:	ff 48 49             	decl   0x49(%rax)
   127ea:	09 cd                	or     %ecx,%ebp
   127ec:	0f 85 c6 02 00 00    	jne    12ab8 <_obstack_memory_used@@Base+0x2308>
   127f2:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   127f6:	48 85 db             	test   %rbx,%rbx
   127f9:	75 49                	jne    12844 <_obstack_memory_used@@Base+0x2094>
   127fb:	31 d2                	xor    %edx,%edx
   127fd:	64 24 10             	fs and $0x10,%al
   12800:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   12805:	c7 c3 6b 01 00 00    	mov    $0x16b,%ebx
   1280b:	c0 1e ff             	rcrb   $0xff,(%rsi)
   1280e:	ff 49 89             	decl   -0x77(%rcx)
   12811:	c0 48 85 c0          	rorb   $0xc0,-0x7b(%rax)
   12815:	0f 84 8f 01 00 00    	je     129aa <_obstack_memory_used@@Base+0x21fa>
   1281b:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   12820:	4c 89 44 49 89       	mov    %r8,-0x77(%rcx,%rcx,2)
   12825:	d0 76 0f             	shlb   0xf(%rsi)
   12828:	8f e8 fd ff          	(bad)  
   1282c:	ff 24 10             	jmp    *(%rax,%rdx,1)
   1282f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   12834:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   12839:	49 89 00             	mov    %rax,(%r8)
   1283c:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   12841:	4c 89 c6             	mov    %r8,%rsi
   12844:	49 89 40 08          	mov    %rax,0x8(%r8)
   12848:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1284d:	49 89 e9             	mov    %rbp,%r9
   12850:	71 02                	jno    12854 <_obstack_memory_used@@Base+0x20a4>
   12852:	00 00                	add    %al,(%rax)
   12854:	ff                   	(bad)  
   12855:	ff 83 f8 ff 49 49    	incl   0x4949fff8(%rbx)
   1285b:	c1 e6 49             	shl    $0x49,%esi
   1285e:	ff c6                	inc    %esi
   12860:	c0 75 2a 48          	shlb   $0x48,0x2a(%rbp)
   12864:	c1 e9 3d             	shr    $0x3d,%ecx
   12867:	21 fd                	and    %edi,%ebp
   12869:	85 c0                	test   %eax,%eax
   1286b:	0f 84 39 01 00 4d    	je     4d0129aa <obstack_alloc_failed_handler@@Base+0x4cff090a>
   12871:	89 e5                	mov    %esp,%ebp
   12873:	44 24 10             	rex.R and $0x10,%al
   12876:	4c 39 c0             	cmp    %r8,%rax
   12879:	74 12                	je     1288d <_obstack_memory_used@@Base+0x20dd>
   1287b:	49 8b 38             	mov    (%r8),%rdi
   1287e:	e8 fd 1d ff ff       	call   4680 <free@plt>
   12883:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   12888:	e8 f3 1d ff ff       	call   4680 <free@plt>
   1288d:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
   12894:	00 
   12895:	4c 89 f7             	mov    %r14,%rdi
   12898:	0f 8c 40 01 00 00    	jl     129de <_obstack_memory_used@@Base+0x222e>
   1289e:	00 ec                	add    %ch,%ah
   128a0:	07                   	(bad)  
   128a1:	49 c7 c5 78 02 00 00 	mov    $0x278,%r13
   128a8:	c7                   	(bad)  
   128a9:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   128ae:	c1 e8 29             	shr    $0x29,%eax
   128b1:	ff                   	(bad)  
   128b2:	ff 4c 89 ef          	decl   -0x11(%rcx,%rcx,4)
   128b6:	49 89 c7             	mov    %rax,%r15
   128b9:	4c 85 74 5c ff       	test   %r14,-0x1(%rsp,%rbx,2)
   128be:	48                   	rex.W
   128bf:	4c 0f af c7          	imul   %rdi,%r8
   128c3:	48 c1 e0 1c          	shl    $0x1c,%rax
   128c7:	24 10                	and    $0x10,%al
   128c9:	48 89 c2             	mov    %rax,%rdx
   128cc:	48 c7 c7 3d fc ff 0f 	mov    $0xffffc3d,%rdi
   128d3:	8f c6                	pop    %rsi
   128d5:	02 00                	add    (%rax),%al
   128d7:	00 39                	add    %bh,(%rcx)
   128d9:	4c 24 30             	rex.WR and $0x30,%al
   128dc:	0f 82 ae 02 00 0f    	jb     f012b90 <obstack_alloc_failed_handler@@Base+0xeff0af0>
   128e2:	48 c1 e9 3a          	shr    $0x3a,%rcx
   128e6:	fe                   	(bad)  
   128e7:	ff                   	(bad)  
   128e8:	ff c2                	inc    %edx
   128ea:	01 4c 89 ee          	add    %ecx,-0x12(%rcx,%rcx,4)
   128ee:	4c 89 49 ff          	mov    %r9,-0x1(%rcx)
   128f2:	c3                   	ret    
   128f3:	4a 8d 7c 3d 49       	lea    0x49(%rbp,%r15,1),%rdi
   128f8:	21 d8                	and    %ebx,%eax
   128fa:	ed                   	in     (%dx),%eax
   128fb:	e8 0f 84 c9 00       	call   caad0f <obstack_alloc_failed_handler@@Base+0xc88c6f>
   12900:	00 00                	add    %al,(%rax)
   12902:	74 24                	je     12928 <_obstack_memory_used@@Base+0x2178>
   12904:	10 4c 89 fa          	adc    %cl,-0x6(%rcx,%rcx,4)
   12908:	48 89 ef             	mov    %rbp,%rdi
   1290b:	e8 40 21 ff ff       	call   4a50 <memcpy@plt>
   12910:	4c 8b 4d 21          	mov    0x21(%rbp),%r9
   12914:	dd 8f a3 fc ff ff    	fisttpll -0x35d(%rdi)
   1291a:	4d 39 f3             	cmp    %r14,%r11
   1291d:	01 41 80             	add    %eax,-0x80(%rcx)
   12920:	38 2f                	cmp    %ch,(%rdi)
   12922:	0f 84 0b 48 c7 c2    	je     ffffffffc2c87133 <obstack_alloc_failed_handler@@Base+0xffffffffc2c65093>
   12928:	a9 03 00 00 00       	test   $0x3,%eax
   1292d:	b9 02 48 09 fa       	mov    $0xfa094802,%ecx
   12932:	49 c7 c3 5e fc ff ff 	mov    $0xfffffffffffffc5e,%r11
   12939:	e9 a6 fd ff ff       	jmp    126e4 <_obstack_memory_used@@Base+0x1f34>
   1293e:	4c 8d 05 db 46 49 21 	lea    0x214946db(%rip),%r8        # 214a7020 <obstack_alloc_failed_handler@@Base+0x21484f80>
   12945:	c4                   	(bad)  
   12946:	31 fe                	xor    %edi,%esi
   12948:	64 60                	fs (bad) 
   1294a:	ff 4c 31 4d          	decl   0x4d(%rcx,%rsi,1)
   1294e:	39 d8                	cmp    %ebx,%eax
   12950:	00 00                	add    %al,(%rax)
   12952:	00 0f                	add    %cl,(%rdi)
   12954:	84 37                	test   %dh,(%rdi)
   12956:	03 00                	add    (%rax),%eax
   12958:	00 0f                	add    %cl,(%rdi)
   1295a:	8c ee                	mov    %gs,%esi
   1295c:	02 00                	add    (%rax),%al
   1295e:	00 29                	add    %ch,(%rcx)
   12960:	f8                   	clc    
   12961:	44 24 08             	rex.R and $0x8,%al
   12964:	48                   	rex.W
   12965:	4d 21 d9             	and    %r11,%r9
   12968:	85 ff                	test   %edi,%edi
   1296a:	fd                   	std    
   1296b:	ff                   	(bad)  
   1296c:	ff                   	(bad)  
   1296d:	eb 3b                	jmp    129aa <_obstack_memory_used@@Base+0x21fa>
   1296f:	90                   	nop
   12970:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   12975:	4d 39 c9             	cmp    %r9,%r9
   12978:	24 00                	and    $0x0,%al
   1297a:	48 39 49 ff          	cmp    %rcx,-0x1(%rcx)
   1297e:	c2 4d 0f             	ret    $0xf4d
   12981:	8c eb                	mov    %gs,%ebx
   12983:	fd                   	std    
   12984:	ff                   	(bad)  
   12985:	ff 01                	incl   (%rcx)
   12987:	49                   	rex.WB
   12988:	48 c1 e7 10          	shl    $0x10,%rdi
   1298c:	05 4d 85 f6 75       	add    $0x75f6854d,%eax
   12991:	1e                   	(bad)  
   12992:	4c                   	rex.WR
   12993:	49 85 cb             	test   %rcx,%r11
   12996:	89 de                	mov    %ebx,%esi
   12998:	4c 0f af c1          	imul   %rcx,%r8
   1299c:	ff 49 89             	decl   -0x77(%rcx)
   1299f:	48 01 ce             	add    %rcx,%rsi
   129a2:	c0 75 16 48          	shlb   $0x48,0x16(%rbp)
   129a6:	85 db                	test   %ebx,%ebx
   129a8:	74 11                	je     129bb <_obstack_memory_used@@Base+0x220b>
   129aa:	49 85 fd             	test   %rdi,%r13
   129ad:	ff                   	(bad)  
   129ae:	ff 90 e9 3f 02 4d    	call   *0x4d023fe9(%rax)
   129b4:	0f af ed             	imul   %ebp,%ebp
   129b7:	c5 1c 0f             	(bad)
   129ba:	8f                   	(bad)  
   129bb:	d0 01                	rolb   (%rcx)
   129bd:	00 00                	add    %al,(%rax)
   129bf:	28 e8                	sub    %ch,%al
   129c1:	bb 1c ff ff eb       	mov    $0xebffff1c,%ebx
   129c6:	9f                   	lahf   
   129c7:	7c 24                	jl     129ed <_obstack_memory_used@@Base+0x223d>
   129c9:	08 48 eb             	or     %cl,-0x15(%rax)
   129cc:	56                   	push   %rsi
   129cd:	74 0f                	je     129de <_obstack_memory_used@@Base+0x222e>
   129cf:	8c 43 fd             	mov    %es,-0x3(%rbx)
   129d2:	ff                   	(bad)  
   129d3:	ff 0f                	decl   (%rdi)
   129d5:	1f                   	(bad)  
   129d6:	49 f7 fb             	idiv   %r11
   129d9:	8b 84 24 f8 48 31 f2 	mov    -0xdceb708(%rsp),%eax
   129e0:	64 48 2b 04 25 28 00 	sub    %fs:0x48000028,%rax
   129e7:	00 48 
   129e9:	f7 f8                	idiv   %eax
   129eb:	22 4d 21             	and    0x21(%rbp),%cl
   129ee:	dd 48 4d             	fisttpll 0x4d(%rax)
   129f1:	85 c1                	test   %eax,%ecx
   129f3:	01 4d 39             	add    %ecx,0x39(%rbp)
   129f6:	4d 09 e1             	or     %r12,%r9
   129f9:	5b                   	pop    %rbx
   129fa:	5d                   	pop    %rbp
   129fb:	41 5c                	pop    %r12
   129fd:	41                   	rex.B
   129fe:	49 c1 ec 3b          	shr    $0x3b,%r12
   12a02:	c1 ea 16             	shr    $0x16,%edx
   12a05:	1f                   	(bad)  
   12a06:	40                   	rex
   12a07:	4c 21 e7             	and    %r12,%rdi
   12a0a:	78 01                	js     12a0d <_obstack_memory_used@@Base+0x225d>
   12a0c:	2e 0f 85 29 49 0f af 	jne,pn ffffffffaf10733c <obstack_alloc_failed_handler@@Base+0xffffffffaf0e529c>
   12a13:	fe                   	(bad)  
   12a14:	ff c2                	inc    %edx
   12a16:	01 4d 89             	add    %ecx,-0x77(%rbp)
   12a19:	e8 49 39 c4 0f       	call   fc56367 <obstack_alloc_failed_handler@@Base+0xfc342c7>
   12a1e:	86 c9                	xchg   %cl,%cl
   12a20:	fc                   	cld    
   12a21:	ff                   	(bad)  
   12a22:	ff 49 83             	decl   -0x7d(%rcx)
   12a25:	ec                   	in     (%dx),%al
   12a26:	01 4d 39             	add    %ecx,0x39(%rbp)
   12a29:	f4                   	hlt    
   12a2a:	0f 86 bc 7c 9c ff    	jbe    ffffffffff9da6ec <obstack_alloc_failed_handler@@Base+0xffffffffff9b864c>
   12a30:	c1 80 7c 24 e9 d1 fd 	roll   $0xfd,-0x2e16db84(%rax)
   12a37:	ff                   	(bad)  
   12a38:	ff                   	(bad)  
   12a39:	fe                   	(bad)  
   12a3a:	ff                   	(bad)  
   12a3b:	ff 49 ff             	decl   -0x1(%rcx)
   12a3e:	c7 01 4d 39 0f 85    	movl   $0x850f394d,(%rcx)
   12a44:	bd 01 00 4c 29       	mov    $0x294c0001,%ebp
   12a49:	e8 21 cf 1f 44       	call   4420f96f <obstack_alloc_failed_handler@@Base+0x441ed8cf>
   12a4e:	00 49 31             	add    %cl,0x31(%rcx)
   12a51:	c4                   	(bad)  
   12a52:	f7 45 48 c1 eb 18 48 	testl  $0x4818ebc1,0x48(%rbp)
   12a59:	f7 fb                	idiv   %ebx
   12a5b:	4c                   	rex.WR
   12a5c:	4d 29 e0             	sub    %r12,%r8
   12a5f:	d0 e9                	shr    %cl
   12a61:	42 fc                	rex.X cld 
   12a63:	ff                   	(bad)  
   12a64:	ff                   	(bad)  
   12a65:	e8 a6 1c ff ff       	call   4710 <__errno_location@plt>
   12a6a:	45 31 f6             	xor    %r14d,%r14d
   12a6d:	c7                   	(bad)  
   12a6e:	0f 84 b8 fc ff ff    	je     1272c <_obstack_memory_used@@Base+0x1f7c>
   12a74:	4c 01 c1             	add    %r8,%rcx
   12a77:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
   12a7b:	49 c1 ec 40          	shr    $0x40,%r12
   12a7f:	00 e8                	add    %ch,%al
   12a81:	8b 20                	mov    (%rax),%esp
   12a83:	ff                   	(bad)  
   12a84:	ff 49 89             	decl   -0x77(%rcx)
   12a87:	c6                   	(bad)  
   12a88:	48 85 c0             	test   %rax,%rax
   12a8b:	0f 4d 49 ff          	cmovge -0x1(%rcx),%ecx
   12a8f:	c6                   	(bad)  
   12a90:	29 c0                	sub    %eax,%eax
   12a92:	8d 24 28             	lea    (%rax,%rbp,1),%esp
   12a95:	48                   	rex.W
   12a96:	4d 0f af c8          	imul   %r8,%r9
   12a9a:	00 00                	add    %al,(%rax)
   12a9c:	e9 fa fa ff ff       	jmp    1259b <_obstack_memory_used@@Base+0x1deb>
   12aa1:	e8 6a 1c 48 c7       	call   ffffffffc7494710 <obstack_alloc_failed_handler@@Base+0xffffffffc7472670>
   12aa6:	48 21 c3             	and    %rax,%rbx
   12aa9:	00 00                	add    %al,(%rax)
   12aab:	db 0f                	fisttpl (%rdi)
   12aad:	af                   	scas   %es:(%rdi),%eax
   12aae:	49 89 c2             	mov    %rax,%r10
   12ab1:	fe 49 29             	decb   0x29(%rcx)
   12ab4:	4c 0f 85 d9 01 00 00 	rex.WR jne 12c94 <_obstack_memory_used@@Base+0x24e4>
   12abb:	af                   	scas   %es:(%rdi),%eax
   12abc:	c8 4c 09 d6          	enter  $0x94c,$0xd6
   12ac0:	85 83 03 00 00 48    	test   %eax,0x48000003(%rbx)
   12ac6:	83 3a 00             	cmpl   $0x0,(%rdx)
   12ac9:	0f 85 66 fd ff 49    	jne    4a012835 <obstack_alloc_failed_handler@@Base+0x49ff0795>
   12acf:	29 c6                	sub    %eax,%esi
   12ad1:	b6 57                	mov    $0x57,%dh
   12ad3:	01 4d 48             	add    %ecx,0x48(%rbp)
   12ad6:	c7 c0 96 ff ff ff    	mov    $0xffffff96,%eax
   12adc:	e8 2f 1c 49 21       	call   214a4710 <obstack_alloc_failed_handler@@Base+0x21482670>
   12ae1:	d4                   	(bad)  
   12ae2:	31 f6                	xor    %esi,%esi
   12ae4:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   12aea:	e9 e9 7f 5b ff       	jmp    ffffffffff5caad8 <obstack_alloc_failed_handler@@Base+0xffffffffff5a8a38>
   12aef:	e8 4c 89 c9 ff       	call   ffffffffffcab440 <obstack_alloc_failed_handler@@Base+0xffffffffffc893a0>
   12af4:	83 38 0c             	cmpl   $0xc,(%rax)
   12af7:	75 d6                	jne    12acf <_obstack_memory_used@@Base+0x231f>
   12af9:	48 8b 4d 21          	mov    0x21(%rbp),%rcx
   12afd:	f5                   	cmc    
   12afe:	0f 84 35 03 00 00    	je     12e39 <_obstack_memory_used@@Base+0x2689>
   12b04:	ff                   	(bad)  
   12b05:	ff 49 ff             	decl   -0x1(%rcx)
   12b08:	c5 45 31             	(bad)
   12b0b:	f6 e8                	imul   %al
   12b0d:	6f                   	outsl  %ds:(%rsi),(%dx)
   12b0e:	1b ff                	sbb    %edi,%edi
   12b10:	ff 48 8b             	decl   -0x75(%rax)
   12b13:	7c 24                	jl     12b39 <_obstack_memory_used@@Base+0x2389>
   12b15:	08 e8                	or     %ch,%al
   12b17:	f5                   	cmc    
   12b18:	9e                   	sahf   
   12b19:	e9 50 03 00 00       	jmp    12e6e <_obstack_memory_used@@Base+0x26be>
   12b1e:	0c 00                	or     $0x0,%al
   12b20:	00 00                	add    %al,(%rax)
   12b22:	e9 49 ff c2 ff       	jmp    ffffffffffc42a70 <obstack_alloc_failed_handler@@Base+0xffffffffffc209d0>
   12b27:	4c 8b 64 49 c1       	mov    -0x3f(%rcx,%rcx,2),%r12
   12b2c:	ee                   	out    %al,(%dx)
   12b2d:	07                   	(bad)  
   12b2e:	5c                   	pop    %rsp
   12b2f:	24 38                	and    $0x38,%al
   12b31:	e9 b6 fe ff 4d       	jmp    4e0129ec <obstack_alloc_failed_handler@@Base+0x4dff094c>
   12b36:	39 d7                	cmp    %edx,%edi
   12b38:	89 c4                	mov    %eax,%esp
   12b3a:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
   12b41:	44 07                	rex.R (bad) 
   12b43:	01 4c 89 44          	add    %ecx,0x44(%rcx,%rcx,4)
   12b47:	24 20                	and    $0x20,%al
   12b49:	48                   	rex.W
   12b4a:	4d 31 f9             	xor    %r15,%r9
   12b4d:	00 48 85             	add    %cl,-0x7b(%rax)
   12b50:	f0 48 89 54 24 10    	lock mov %rdx,0x10(%rsp)
   12b56:	48 39 c1             	cmp    %rax,%rcx
   12b59:	49 c7 c2 0c fd ff ff 	mov    $0xfffffffffffffd0c,%r10
   12b60:	f7 f8                	idiv   %eax
   12b62:	44 24 0f             	rex.R and $0xf,%al
   12b65:	85 8e 01 00 00 48    	test   %ecx,0x48000001(%rsi)
   12b6b:	8b 54 24 10          	mov    0x10(%rsp),%edx
   12b6f:	4c 8b 48 0f          	mov    0xf(%rax),%r9
   12b73:	af                   	scas   %es:(%rdi),%eax
   12b74:	ff                   	(bad)  
   12b75:	fe c0                	inc    %al
   12b77:	48 89 44 24 49       	mov    %rax,0x49(%rsp)
   12b7c:	ff c1                	inc    %ecx
   12b7e:	60                   	(bad)  
   12b7f:	fd                   	std    
   12b80:	ff                   	(bad)  
   12b81:	ff                   	(bad)  
   12b82:	e9 49 c1 7c 6d       	jmp    6d7decd0 <obstack_alloc_failed_handler@@Base+0x6d7bcc30>
   12b87:	00 00                	add    %al,(%rax)
   12b89:	4d 31 48 39          	xor    %r9,0x39(%r8)
   12b8d:	d2 00                	rolb   %cl,(%rax)
   12b8f:	0f 84 53 01 00 00    	je     12ce8 <_obstack_memory_used@@Base+0x2538>
   12b95:	e7 0d                	out    %eax,$0xd
   12b97:	ce                   	(bad)  
   12b98:	0f 8f 8c 01 00 00    	jg     12d2a <_obstack_memory_used@@Base+0x257a>
   12b9e:	00 44 24 20          	add    %al,0x20(%rsp)
   12ba2:	48 0f 84 cd 03 00 00 	rex.W je 12f76 <_obstack_memory_used@@Base+0x27c6>
   12ba9:	1f                   	(bad)  
   12baa:	48 89 c6             	mov    %rax,%rsi
   12bad:	89 44 24 28          	mov    %eax,0x28(%rsp)
   12bb1:	48 85 c0             	test   %rax,%rax
   12bb4:	0f 84 f0 fd 48 49    	je     494a29aa <obstack_alloc_failed_handler@@Base+0x4948090a>
   12bba:	f7 fc                	idiv   %esp
   12bbc:	4c 24 0f             	rex.WR and $0xf,%al
   12bbf:	8c 72 ff             	mov    %?,-0x1(%rdx)
   12bc2:	ff                   	(bad)  
   12bc3:	ff 00                	incl   (%rax)
   12bc5:	00 00                	add    %al,(%rax)
   12bc7:	24 20                	and    $0x20,%al
   12bc9:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   12bce:	e9 0f fd ff ff       	jmp    128e2 <_obstack_memory_used@@Base+0x2132>
   12bd3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   12bda:	00 00 
   12bdc:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   12be3:	00 00 
   12be5:	e9 0e fb ff ff       	jmp    126f8 <_obstack_memory_used@@Base+0x1f48>
   12bea:	49 c1 e3 40          	shl    $0x40,%r11
   12bee:	4d 39 e6             	cmp    %r12,%r14
   12bf1:	0f 83 3a fd ff 4c    	jae    4d012931 <obstack_alloc_failed_handler@@Base+0x4cff0891>
   12bf7:	89 da                	mov    %ebx,%edx
   12bf9:	7c 24                	jl     12c1f <_obstack_memory_used@@Base+0x246f>
   12bfb:	ff 2f                	ljmp   *(%rdi)
   12bfd:	0f 84 2e fd ff ff    	je     12931 <_obstack_memory_used@@Base+0x2181>
   12c03:	49 83 48 f7 fb       	orq    $0xfffffffffffffffb,-0x9(%r8)
   12c08:	4d 29 dc             	sub    %r11,%r12
   12c0b:	c1 e7 0e             	shl    $0xe,%edi
   12c0e:	48 c1 ef 2d          	shr    $0x2d,%rdi
   12c12:	fd                   	std    
   12c13:	ff                   	(bad)  
   12c14:	ff                   	(bad)  
   12c15:	ff                   	(bad)  
   12c16:	e9 f9 20 ff ff       	jmp    4d14 <__sprintf_chk@plt+0x34>
   12c1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12c20:	f3 0f 1e fa          	endbr64 
   12c24:	41 57                	push   %r15
   12c26:	49 89 ff             	mov    %rdi,%r15
   12c29:	41 56                	push   %r14
   12c2b:	41 55                	push   %r13
   12c2d:	41 54                	push   %r12
   12c2f:	55                   	push   %rbp
   12c30:	53                   	push   %rbx
   12c31:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
   12c35:	48 83 ec 38          	sub    $0x38,%rsp
   12c39:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12c40:	00 00 
   12c42:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   12c47:	31 c0                	xor    %eax,%eax
   12c49:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   12c4e:	e8 1d 1c ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   12c53:	48 83 f8 01          	cmp    $0x1,%rax
   12c57:	0f 86 73 01 00 00    	jbe    12dd0 <_obstack_memory_used@@Base+0x2620>
   12c5d:	45 31 e4             	xor    %r12d,%r12d
   12c60:	4c 3b 7c 24 08       	cmp    0x8(%rsp),%r15
   12c65:	0f 83 13 01 00 00    	jae    12d7e <_obstack_memory_used@@Base+0x25ce>
   12c6b:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   12c70:	4c 8d 74 24 1c       	lea    0x1c(%rsp),%r14
   12c75:	4c 21 ef             	and    %r13,%rdi
   12c78:	41 0f b6 07          	movzbl (%r15),%eax
   12c7c:	3c 5f                	cmp    $0x5f,%al
   12c7e:	0f 8f 24 01 00 00    	jg     12da8 <_obstack_memory_used@@Base+0x25f8>
   12c84:	3c 40                	cmp    $0x40,%al
   12c86:	0f 8f df 00 00 00    	jg     12d6b <_obstack_memory_used@@Base+0x25bb>
   12c8c:	3c 23                	cmp    $0x23,%al
   12c8e:	0f 8f cc 00 00 00    	jg     12d60 <_obstack_memory_used@@Base+0x25b0>
   12c94:	3c 1f                	cmp    $0x1f,%al
   12c96:	0f 8f cf 00 00 00    	jg     12d6b <_obstack_memory_used@@Base+0x25bb>
   12c9c:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   12ca3:	00 
   12ca4:	eb 30                	jmp    12cd6 <_obstack_memory_used@@Base+0x2526>
   12ca6:	0f 84 71 03 00 00    	je     1301d <_obstack_memory_used@@Base+0x286d>
   12cac:	00 00                	add    %al,(%rax)
   12cae:	00 00                	add    %al,(%rax)
   12cb0:	ba ff ff ff 49       	mov    $0x49ffffff,%edx
   12cb5:	c7                   	(bad)  
   12cb6:	4c 01 c2             	add    %r8,%rdx
   12cb9:	00 00                	add    %al,(%rax)
   12cbb:	4d 89 fb             	mov    %r15,%r11
   12cbe:	00 00                	add    %al,(%rax)
   12cc0:	41 01 c4             	add    %eax,%r12d
   12cc3:	4c 89 ef             	mov    %r13,%rdi
   12cc6:	49 01 df             	add    %rbx,%r15
   12cc9:	e8 b2 1f ff ff       	call   4c80 <mbsinit@plt>
   12cce:	85 c0                	test   %eax,%eax
   12cd0:	0f 85 9d 00 00 00    	jne    12d73 <_obstack_memory_used@@Base+0x25c3>
   12cd6:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   12cdb:	4d 39 da             	cmp    %r11,%r10
   12cde:	4c 89 fe             	mov    %r15,%rsi
   12ce1:	0f 84 0f 84 13 fe    	je     fffffffffe14b0f6 <obstack_alloc_failed_handler@@Base+0xfffffffffe129056>
   12ce7:	ff                   	(bad)  
   12ce8:	ff 4c 85 e3          	decl   -0x1d(%rbp,%rax,4)
   12cec:	29 da                	sub    %ebx,%edx
   12cee:	c1 03 00             	roll   $0x0,(%rbx)
   12cf1:	00 48 83             	add    %cl,-0x7d(%rax)
   12cf4:	0f 8f 8d 00 00 00    	jg     12d87 <_obstack_memory_used@@Base+0x25d7>
   12cfa:	ed                   	in     (%dx),%eax
   12cfb:	74 0f                	je     12d0c <_obstack_memory_used@@Base+0x255c>
   12cfd:	31 ff                	xor    %edi,%edi
   12cff:	e8 ec 98 ff ff       	call   c5f0 <__sprintf_chk@plt+0x7910>
   12d04:	48 ff c1             	inc    %rcx
   12d07:	7c 12                	jl     12d1b <_obstack_memory_used@@Base+0x256b>
   12d09:	00 00                	add    %al,(%rax)
   12d0b:	00 48 83             	add    %cl,-0x7d(%rax)
   12d0e:	fb                   	sti    
   12d0f:	ff 74 59 48          	push   0x48(%rcx,%rbx,2)
   12d13:	83 fb fe             	cmp    $0xfffffffe,%ebx
   12d16:	0f 84 0f 85 d3 03    	je     3d4b22b <obstack_alloc_failed_handler@@Base+0x3d2918b>
   12d1c:	00 00                	add    %al,(%rax)
   12d1e:	db b8 01 00 00 00    	fstpt  0x1(%rax)
   12d24:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   12d28:	48 0f 44 d8          	cmove  %rax,%rbx
   12d2c:	e8 6f 1d ff 49       	call   4a004aa0 <obstack_alloc_failed_handler@@Base+0x49fe2a00>
   12d31:	f7 fd                	idiv   %ebp
   12d33:	0f 49 0f             	cmovns (%rdi),%ecx
   12d36:	af                   	scas   %es:(%rdi),%eax
   12d37:	ca ff 8b             	lret   $0x8bff
   12d3a:	7c 24                	jl     12d60 <_obstack_memory_used@@Base+0x25b0>
   12d3c:	1c e8                	sbb    $0xe8,%al
   12d3e:	5e                   	pop    %rsi
   12d3f:	1a ff                	sbb    %bh,%bh
   12d41:	4c 39 f7             	cmp    %r14,%rdi
   12d44:	0f 49 c1             	cmovns %ecx,%eax
   12d47:	e9 06 ff 41 81       	jmp    ffffffff81432c52 <obstack_alloc_failed_handler@@Base+0xffffffff81410bb2>
   12d4c:	fc                   	cld    
   12d4d:	ff                   	(bad)  
   12d4e:	ff                   	(bad)  
   12d4f:	ff                   	(bad)  
   12d50:	7f 0f                	jg     12d61 <_obstack_memory_used@@Base+0x25b1>
   12d52:	84 d9                	test   %bl,%cl
   12d54:	00 00                	add    %al,(%rax)
   12d56:	00 41 4d             	add    %al,0x4d(%rcx)
   12d59:	31 c8                	xor    %ecx,%eax
   12d5b:	e9 63 ff ff ff       	jmp    12cc3 <_obstack_memory_used@@Base+0x2513>
   12d60:	83 e8 25             	sub    $0x25,%eax
   12d63:	3c 1a                	cmp    $0x1a,%al
   12d65:	0f 87 4d 21 e0 ff    	ja     ffffffffffe14eb8 <obstack_alloc_failed_handler@@Base+0xffffffffffdf2e18>
   12d6b:	49 83 c7 01          	add    $0x1,%r15
   12d6f:	41 83 c4 01          	add    $0x1,%r12d
   12d73:	4c 39 7c 24 08       	cmp    %r15,0x8(%rsp)
   12d78:	0f 87 fa fe ff ff    	ja     12c78 <_obstack_memory_used@@Base+0x24c8>
   12d7e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   12d83:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   12d8a:	00 00 
   12d8c:	0f 85 a9 00 00 00    	jne    12e3b <_obstack_memory_used@@Base+0x268b>
   12d92:	48 83 c4 38          	add    $0x38,%rsp
   12d96:	44 89 e0             	mov    %r12d,%eax
   12d99:	5b                   	pop    %rbx
   12d9a:	5d                   	pop    %rbp
   12d9b:	41 5c                	pop    %r12
   12d9d:	41 5d                	pop    %r13
   12d9f:	41 5e                	pop    %r14
   12da1:	41 5f                	pop    %r15
   12da3:	c3                   	ret    
   12da4:	0f 1f 40 00          	nopl   0x0(%rax)
   12da8:	83 e8 61             	sub    $0x61,%eax
   12dab:	3c 1d                	cmp    $0x1d,%al
   12dad:	76 bc                	jbe    12d6b <_obstack_memory_used@@Base+0x25bb>
   12daf:	e9 48 c1 e0 17       	jmp    17e1eefc <obstack_alloc_failed_handler@@Base+0x17dfce5c>
   12db4:	0f 1f 40 00          	nopl   0x0(%rax)
   12db8:	41 0f b6 3f          	movzbl (%r15),%edi
   12dbc:	bb 01 00 00 00       	mov    $0x1,%ebx
   12dc1:	89 7c 24 49          	mov    %edi,0x49(%rsp)
   12dc5:	49 f7 fe             	idiv   %r14
   12dc8:	ff                   	(bad)  
   12dc9:	ff 66 49             	jmp    *0x49(%rsi)
   12dcc:	89 d0                	mov    %edx,%eax
   12dce:	00 00                	add    %al,(%rax)
   12dd0:	45 31 e4             	xor    %r12d,%r12d
   12dd3:	49 39 df             	cmp    %rbx,%r15
   12dd6:	73 a6                	jae    12d7e <_obstack_memory_used@@Base+0x25ce>
   12dd8:	0f 85 d1 02 00 0f    	jne    f0130af <obstack_alloc_failed_handler@@Base+0xeff100f>
   12dde:	8c 4d 29             	mov    %cs,0x29(%rbp)
   12de1:	e5 ff                	in     $0xff,%eax
   12de3:	0f 48 c7             	cmovs  %edi,%eax
   12de6:	c7                   	(bad)  
   12de7:	19 02                	sbb    %eax,(%rdx)
   12de9:	00 49 c1             	add    %cl,-0x3f(%rcx)
   12dec:	ed                   	in     (%dx),%eax
   12ded:	0a 4c 29 d8          	or     -0x28(%rcx,%rbp,1),%cl
   12df1:	b7 04                	mov    $0x4,%bh
   12df3:	42 f6 c4 40          	rex.X test $0x40,%spl
   12df7:	75 04                	jne    12dfd <_obstack_memory_used@@Base+0x264d>
   12df9:	a8 02                	test   $0x2,%al
   12dfb:	75 11                	jne    12e0e <_obstack_memory_used@@Base+0x265e>
   12dfd:	49 c7 c3 9a 03 00 00 	mov    $0x39a,%r11
   12e04:	0f 84 74 ff ff ff    	je     12d7e <_obstack_memory_used@@Base+0x25ce>
   12e0a:	41 83 c4 01          	add    $0x1,%r12d
   12e0e:	4c 39 7c 24 08       	cmp    %r15,0x8(%rsp)
   12e13:	75 d3                	jne    12de8 <_obstack_memory_used@@Base+0x2638>
   12e15:	e9 64 ff ff 4d       	jmp    4e012d7e <obstack_alloc_failed_handler@@Base+0x4dff0cde>
   12e1a:	01 ed                	add    %ebp,%ebp
   12e1c:	1f                   	(bad)  
   12e1d:	44 00 00             	add    %r8b,(%rax)
   12e20:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   12e25:	41 83 c4 01          	add    $0x1,%r12d
   12e29:	e9 45 ff ff 49       	jmp    4a012d73 <obstack_alloc_failed_handler@@Base+0x49ff0cd3>
   12e2e:	c1 ee 1f             	shr    $0x1f,%esi
   12e31:	bc ff ff ff 7f       	mov    $0x7fffffff,%esp
   12e36:	0f 84 49 c1 e0 1f    	je     1fe1ef85 <obstack_alloc_failed_handler@@Base+0x1fdfcee5>
   12e3c:	50                   	push   %rax
   12e3d:	1a ff                	sbb    %bh,%bh
   12e3f:	ff f3                	push   %rbx
   12e41:	0f                   	(bad)  
   12e42:	0f 85 cf 00 00 00    	jne    12f17 <_obstack_memory_used@@Base+0x2767>
   12e48:	41                   	rex.B
   12e49:	4d 89 ce             	mov    %r9,%r14
   12e4c:	49 89 f4             	mov    %rsi,%r12
   12e4f:	55                   	push   %rbp
   12e50:	4d 29 d0             	sub    %r10,%r8
   12e53:	48 c7 c7 a9 00 00 00 	mov    $0xa9,%rdi
   12e5a:	54                   	push   %rsp
   12e5b:	24 08                	and    $0x8,%al
   12e5d:	e8 1e 1a ff ff       	call   4880 <strlen@plt>
   12e62:	4d 8b 3c 24          	mov    (%r12),%r15
   12e66:	4d 85 ff             	test   %r15,%r15
   12e69:	0f 84 ae 00 00 00    	je     12f1d <_obstack_memory_used@@Base+0x276d>
   12e6f:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   12e74:	48 89 c3             	mov    %rax,%rbx
   12e77:	45 31 f6             	xor    %r14d,%r14d
   12e7a:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
   12e81:	eb 30                	jmp    12eb3 <_obstack_memory_used@@Base+0x2703>
   12e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12e88:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   12e8d:	42 8b 4d 29          	rex.X mov 0x29(%rbp),%ecx
   12e91:	f3 39 0c a8          	repz cmp %ecx,(%rax,%rbp,4)
   12e95:	b9 01 00 00 49       	mov    $0x49000001,%ecx
   12e9a:	39 d4                	cmp    %edx,%esp
   12e9c:	44                   	rex.R
   12e9d:	4d 21 c8             	and    %r9,%r8
   12ea0:	45 c1 48 29 0f       	rex.RB rorl $0xf,0x29(%r8)
   12ea5:	85 43 fc             	test   %eax,-0x4(%rbx)
   12ea8:	ff                   	(bad)  
   12ea9:	ff 4f 8b             	decl   -0x75(%rdi)
   12eac:	4d 21 cc             	and    %r9,%r12
   12eaf:	85 ff                	test   %edi,%edi
   12eb1:	74 3d                	je     12ef0 <_obstack_memory_used@@Base+0x2740>
   12eb3:	48 89 da             	mov    %rbx,%rdx
   12eb6:	48 89 ee             	mov    %rbp,%rsi
   12eb9:	4c 89 ff             	mov    %r15,%rdi
   12ebc:	e8 5f 18 ff 7c       	call   7d004720 <obstack_alloc_failed_handler@@Base+0x7cfe2680>
   12ec1:	6a c0                	push   $0xffffffffffffffc0
   12ec3:	4d 31 cf             	xor    %r9,%r15
   12ec6:	89 ff                	mov    %edi,%edi
   12ec8:	e8 b3 19 ff ff       	call   4880 <strlen@plt>
   12ecd:	48 39 c3             	cmp    %rax,%rbx
   12ed0:	74 46                	je     12f18 <_obstack_memory_used@@Base+0x2768>
   12ed2:	49                   	rex.WB
   12ed3:	4d 39 dd             	cmp    %r11,%r13
   12ed6:	75 b0                	jne    12e88 <_obstack_memory_used@@Base+0x26d8>
   12ed8:	4d 89 f5             	mov    %r14,%r13
   12edb:	49                   	rex.WB
   12edc:	48 c1 e6 37          	shl    $0x37,%rsi
   12ee0:	8b 3c 0f             	mov    (%rdi,%rcx,1),%edi
   12ee3:	8f                   	(bad)  
   12ee4:	59                   	pop    %rcx
   12ee5:	fe                   	(bad)  
   12ee6:	ff                   	(bad)  
   12ee7:	ff 0f                	decl   (%rdi)
   12ee9:	1f                   	(bad)  
   12eea:	0f 84 04 01 00 00    	je     12ff4 <_obstack_memory_used@@Base+0x2844>
   12ef0:	80 7c 49 0f 8f       	cmpb   $0x8f,0xf(%rcx,%rcx,2)
   12ef5:	bd 01 00 00 29       	mov    $0x29000001,%ebp
   12efa:	d0 ff                	sar    %bh
   12efc:	4c 0f 45 48 c1       	cmovne -0x3f(%rax),%r9
   12f01:	eb 17                	jmp    12f1a <_obstack_memory_used@@Base+0x276a>
   12f03:	18 4c 89 e8          	sbb    %cl,-0x18(%rcx,%rcx,4)
   12f07:	5b                   	pop    %rbx
   12f08:	5d                   	pop    %rbp
   12f09:	41 5c                	pop    %r12
   12f0b:	41 5d                	pop    %r13
   12f0d:	41                   	rex.B
   12f0e:	4c 09 c8             	or     %r9,%rax
   12f11:	c3                   	ret    
   12f12:	4c 01 c3             	add    %r8,%rbx
   12f15:	44 00 48 49          	add    %r9b,0x49(%rax)
   12f19:	31 fb                	xor    %edi,%ebx
   12f1b:	eb e3                	jmp    12f00 <_obstack_memory_used@@Base+0x2750>
   12f1d:	49 c7 c5 ff 49 ff c5 	mov    $0xffffffffc5ff49ff,%r13
   12f24:	eb da                	jmp    12f00 <_obstack_memory_used@@Base+0x2750>
   12f26:	66 2e 0f 84 9f fe    	je,pn  2dcb <free@plt-0x18b5>
   12f2c:	ff                   	(bad)  
   12f2d:	ff                   	(bad)  
   12f2e:	ff                   	(bad)  
   12f2f:	ff f3                	push   %rbx
   12f31:	4c 0f af f9          	imul   %rcx,%r15
   12f35:	57                   	push   %rdi
   12f36:	41 89 cb             	mov    %ecx,%r11d
   12f39:	41 56                	push   %r14
   12f3b:	49 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%r14
   12f42:	41 55                	push   %r13
   12f44:	49 89 fd             	mov    %rdi,%r13
   12f47:	41 54                	push   %r12
   12f49:	49 89 f4             	mov    %rsi,%r12
   12f4c:	55                   	push   %rbp
   12f4d:	53                   	push   %rbx
   12f4e:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   12f55:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   12f5c:	00 
   12f5d:	48 89 bc 24 98 00 00 	mov    %rdi,0x98(%rsp)
   12f64:	00 
   12f65:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   12f6a:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   12f71:	00 
   12f72:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   12f79:	00 
   12f7a:	44 89 44 24 78       	mov    %r8d,0x78(%rsp)
   12f7f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   12f84:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   12f8b:	00 
   12f8c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12f93:	00 00 
   12f95:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   12f9c:	00 
   12f9d:	31 c0                	xor    %eax,%eax
   12f9f:	90                   	nop
   12fa0:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
   12fa5:	e8 c6 18 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   12faa:	8b 5c 24 78          	mov    0x78(%rsp),%ebx
   12fae:	49 01 da             	add    %rbx,%r10
   12fb1:	24 20                	and    $0x20,%al
   12fb3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   12fb8:	83 e3 02             	and    $0x2,%ebx
   12fbb:	41 83 fb 0a          	cmp    $0xa,%r11d
   12fbf:	0f 87 54 1d ff ff    	ja     4d19 <__sprintf_chk@plt+0x39>
   12fc5:	48 8d 15 64 95 00 00 	lea    0x9564(%rip),%rdx        # 1c530 <_obstack_memory_used@@Base+0xbd80>
   12fcc:	44 89 d8             	mov    %r11d,%eax
   12fcf:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   12fd3:	48 01 d0             	add    %rdx,%rax
   12fd6:	3e ff e0             	notrack jmp *%rax
   12fd9:	41 83 fb 0a          	cmp    $0xa,%r11d
   12fdd:	74 62                	je     13041 <_obstack_memory_used@@Base+0x2891>
   12fdf:	48 8d 2d 2a 95 00 00 	lea    0x952a(%rip),%rbp        # 1c510 <_obstack_memory_used@@Base+0xbd60>
   12fe6:	31 ff                	xor    %edi,%edi
   12fe8:	ba 49 09 c0 00       	mov    $0xc00949,%edx
   12fed:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
   12ff2:	48 89 ee             	mov    %rbp,%rsi
   12ff5:	e8 66 18 ff ff       	call   4860 <dcgettext@plt>
   12ffa:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
   12fff:	48 39 48 c1          	cmp    %rcx,-0x3f(%rax)
   13003:	e2 26                	loop   1302b <_obstack_memory_used@@Base+0x287b>
   13005:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   13006:	4c 85 c6             	test   %r8,%rsi
   13009:	00 0f                	add    %cl,(%rdi)
   1300b:	84 4c 39 f8          	test   %cl,-0x8(%rcx,%rdi,1)
   1300f:	00 48 8d             	add    %cl,-0x73(%rax)
   13012:	2d 28 6c 00 00       	sub    $0x6c28,%eax
   13017:	0f 85 66 01 4c 21    	jne    214d3183 <obstack_alloc_failed_handler@@Base+0x214b10e3>
   1301d:	c3                   	ret    
   1301e:	c0 01 00             	rolb   $0x0,(%rcx)
   13021:	00 49 c1             	add    %cl,-0x3f(%rcx)
   13024:	ea                   	(bad)  
   13025:	02 e8                	add    %al,%ch
   13027:	0f 8c e4 4d 01 e9    	jl     ffffffffe9027e11 <obstack_alloc_failed_handler@@Base+0xffffffffe9005d71>
   1302d:	f4                   	hlt    
   1302e:	4d 21 c1             	and    %r8,%r9
   13031:	39 e8                	cmp    %ebp,%eax
   13033:	48 89 48 ff          	mov    %rcx,-0x1(%rax)
   13037:	c7                   	(bad)  
   13038:	4d 89 c2             	mov    %r8,%r10
   1303b:	fb                   	sti    
   1303c:	49 31 fd             	xor    %rdi,%r13
   1303f:	ff                   	(bad)  
   13040:	ff                   	(bad)  
   13041:	ff 31                	push   (%rcx)
   13043:	ff 4d 09             	decl   0x9(%rbp)
   13046:	e2 4d                	loop   13095 <_obstack_memory_used@@Base+0x28e5>
   13048:	39 f2                	cmp    %esi,%edx
   1304a:	00 00                	add    %al,(%rax)
   1304c:	85 db                	test   %ebx,%ebx
   1304e:	48 8b 9c 24 88 00 00 	mov    -0x16ffff78(%rsp),%rbx
   13055:	e9 
   13056:	ff 01                	incl   (%rcx)
   13058:	00 00                	add    %al,(%rax)
   1305a:	20 bd 49 f7 fe f7    	and    %bh,-0x80108b7(%rbp)
   13060:	fa                   	cli    
   13061:	95                   	xchg   %eax,%ebp
   13062:	44 24 26             	rex.R and $0x26,%al
   13065:	48                   	rex.W
   13066:	49                   	rex.WB
   13067:	4d 29 dd             	sub    %r11,%r13
   1306a:	da ff                	(bad)  
   1306c:	ff 48 48             	decl   0x48(%rax)
   1306f:	c1 e0 2d             	shl    $0x2d,%eax
   13072:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
   13077:	48                   	rex.W
   13078:	48 0f af d8          	imul   %rax,%rbx
   1307c:	c6 44 24 20 01       	movb   $0x1,0x20(%rsp)
   13081:	31 f6                	xor    %esi,%esi
   13083:	c6 44 24 7c 00       	movb   $0x0,0x7c(%rsp)
   13088:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1308f:	00 00 
   13091:	40 88 6c 24 25       	mov    %bpl,0x25(%rsp)
   13096:	4d 89 e2             	mov    %r12,%r10
   13099:	4d 89 f4             	mov    %r14,%r12
   1309c:	4d 89 ee             	mov    %r13,%r14
   1309f:	45 89 dd             	mov    %r11d,%r13d
   130a2:	41 89 f3             	mov    %esi,%r11d
   130a5:	45 31 c9             	xor    %r9d,%r9d
   130a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   130af:	00 
   130b0:	49 39 ff             	cmp    %rdi,%r15
   130b3:	40 0f 95 c5          	setne  %bpl
   130b7:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   130bb:	75 0e                	jne    130cb <_obstack_memory_used@@Base+0x291b>
   130bd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   130c2:	42 80 3c 08 00       	cmpb   $0x0,(%rax,%r9,1)
   130c7:	40 0f 95 c5          	setne  %bpl
   130cb:	40 84 ed             	test   %bpl,%bpl
   130ce:	0f 84 b9 0c 00 00    	je     13d8d <_obstack_memory_used@@Base+0x35dd>
   130d4:	41 83 fd 02          	cmp    $0x2,%r13d
   130d8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   130dd:	0f 95 c0             	setne  %al
   130e0:	22 44 24 25          	and    0x25(%rsp),%al
   130e4:	4a 8d 1c 0f          	lea    (%rdi,%r9,1),%rbx
   130e8:	41 89 c0             	mov    %eax,%r8d
   130eb:	0f 84 ff 05 00 00    	je     136f0 <_obstack_memory_used@@Base+0x2f40>
   130f1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   130f6:	48                   	rex.W
   130f7:	4d 09 e9             	or     %r13,%r9
   130fa:	84 71 0a             	test   %dh,0xa(%rcx)
   130fd:	48 85 cf             	test   %rcx,%rdi
   13100:	8d 14 08             	lea    (%rax,%rcx,1),%edx
   13103:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13107:	75 42                	jne    1314b <_obstack_memory_used@@Base+0x299b>
   13109:	48 83 f8 01          	cmp    $0x1,%rax
   1310d:	76 3c                	jbe    1314b <_obstack_memory_used@@Base+0x299b>
   1310f:	4c                   	rex.WR
   13110:	48                   	rex.W
   13111:	48                   	rex.W
   13112:	4c 39 fb             	cmp    %r15,%rbx
   13115:	ff 49 d1             	decl   -0x2f(%rcx)
   13118:	e1 95                	loope  130af <_obstack_memory_used@@Base+0x28ff>
   1311a:	fc                   	cld    
   1311b:	49 c1 e2 2c          	shl    $0x2c,%r10
   1311f:	d6                   	(bad)  
   13120:	54                   	push   %rsp
   13121:	24 28                	and    $0x28,%al
   13123:	49 39 ca             	cmp    %rcx,%r10
   13126:	24 0f                	and    $0xf,%al
   13128:	8f                   	(bad)  
   13129:	d0 fc                	sar    %ah
   1312b:	ff                   	(bad)  
   1312c:	ff 4c e9 16          	decl   0x16(%rcx,%rbp,8)
   13130:	ff                   	(bad)  
   13131:	ff                   	(bad)  
   13132:	ff 0f                	decl   (%rdi)
   13134:	b6 5c                	mov    $0x5c,%dh
   13136:	24 38                	and    $0x38,%al
   13138:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   1313d:	48 8b 4c 09 e1       	mov    -0x1f(%rcx,%rcx,1),%rcx
   13142:	49 89 c4             	mov    %rax,%r12
   13145:	44 0f b6 44 24 27    	movzbl 0x27(%rsp),%r8d
   1314b:	4c 39 e2             	cmp    %r12,%rdx
   1314e:	0f 87 1c 0a 00 00    	ja     13b70 <_obstack_memory_used@@Base+0x33c0>
   13154:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   13159:	48 0f 84 8e fe ff 4d 	rex.W je 4e012fee <obstack_alloc_failed_handler@@Base+0x4dff0f4e>
   13160:	31 c2                	xor    %eax,%edx
   13162:	89 54 24 38          	mov    %edx,0x38(%rsp)
   13166:	44 88 5c 24 30       	mov    %r11b,0x30(%rsp)
   1316b:	0f 84 c3 00 00 00    	je     13234 <_obstack_memory_used@@Base+0x2a84>
   13171:	88 44 24 4c          	mov    %al,0x4c(%rsp)
   13175:	31 d9                	xor    %ebx,%ecx
   13177:	18 ff                	sbb    %bh,%bh
   13179:	ff 48 f7             	decl   -0x9(%rax)
   1317c:	fa                   	cli    
   1317d:	44 24 27             	rex.R and $0x27,%al
   13180:	4c                   	rex.WR
   13181:	48 21 f2             	and    %rsi,%rdx
   13184:	28 85 c0 44 0f b6    	sub    %al,-0x49f0bb40(%rbp)
   1318a:	5c                   	pop    %rsp
   1318b:	24 30                	and    $0x30,%al
   1318d:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   13192:	85 d6                	test   %edx,%esi
   13194:	cb                   	lret   
   13195:	39 fe                	cmp    %edi,%esi
   13197:	00 80 0f 4d 21 e7    	add    %al,-0x18deb2f1(%rax)
   1319d:	00 00                	add    %al,(%rax)
   1319f:	76 10                	jbe    131b1 <_obstack_memory_used@@Base+0x2a01>
   131a1:	00 00                	add    %al,(%rax)
   131a3:	0f b6 4d 21          	movzbl 0x21(%rbp),%ecx
   131a7:	48 c1 ea 29          	shr    $0x29,%rdx
   131ab:	59                   	pop    %rcx
   131ac:	0b 00                	or     (%rax),%eax
   131ae:	00 84 db 48 d1 e1 0f 	add    %al,0xfe1d148(%rbx,%rbx,8)
   131b5:	85 f9                	test   %edi,%ecx
   131b7:	00 00                	add    %al,(%rax)
   131b9:	00 0f                	add    %cl,(%rdi)
   131bb:	87 3b                	xchg   %edi,(%rbx)
   131bd:	01 00                	add    %eax,(%rax)
   131bf:	00 4c 89 f2          	add    %cl,-0xe(%rcx,%rcx,4)
   131c3:	95                   	xchg   %eax,%ebp
   131c4:	93                   	xchg   %eax,%ebx
   131c5:	00 00                	add    %al,(%rax)
   131c7:	0f b6 c3             	movzbl %bl,%eax
   131ca:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   131ce:	48 01 d0             	add    %rdx,%rax
   131d1:	3e 49 c1 e6 31       	ds shl $0x31,%r14
   131d6:	40 00 44 49 c7       	rex add %al,-0x39(%rcx,%rcx,2)
   131db:	c1 c9 03             	ror    $0x3,%ecx
   131de:	00 00                	add    %al,(%rax)
   131e0:	44 89 0f             	mov    %r9d,(%rdi)
   131e3:	85 3a                	test   %edi,(%rdx)
   131e5:	ff                   	(bad)  
   131e6:	ff                   	(bad)  
   131e7:	ff 49 85             	decl   -0x7b(%rcx)
   131ea:	d2 0f                	rorb   %cl,(%rdi)
   131ec:	1f                   	(bad)  
   131ed:	44 00 00             	add    %r8b,(%rax)
   131f0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   131f5:	48 85 f6             	test   %rsi,%rsi
   131f8:	74 12                	je     1320c <_obstack_memory_used@@Base+0x2a5c>
   131fa:	89 ca                	mov    %ecx,%edx
   131fc:	c0 ea 05             	shr    $0x5,%dl
   131ff:	0f b6 d2             	movzbl %dl,%edx
   13202:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
   13205:	d3 ea                	shr    %cl,%edx
   13207:	83 e2 01             	and    $0x1,%edx
   1320a:	75 09                	jne    13215 <_obstack_memory_used@@Base+0x2a65>
   1320c:	45 84 c0             	test   %r8b,%r8b
   1320f:	0f 84 84 01 00 00    	je     13399 <_obstack_memory_used@@Base+0x2be9>
   13215:	41 83 fd 02          	cmp    $0x2,%r13d
   13219:	0f 94 c2             	sete   %dl
   1321c:	80 7c 24 26 00       	cmpb   $0x0,0x26(%rsp)
   13221:	89 d0                	mov    %edx,%eax
   13223:	0f 85 17 03 00 00    	jne    13540 <_obstack_memory_used@@Base+0x2d90>
   13229:	44 89 d8             	mov    %r11d,%eax
   1322c:	83 f0 49             	xor    $0x49,%eax
   1322f:	c7 c3 4b 00 00 00    	mov    $0x4b,%ebx
   13235:	00 00                	add    %al,(%rax)
   13237:	ff 02                	incl   (%rdx)
   13239:	00 00                	add    %al,(%rax)
   1323b:	3e 27                	ds (bad) 
   1323d:	49 8d 57 01          	lea    0x1(%r15),%rdx
   13241:	49                   	rex.WB
   13242:	49 89 dd             	mov    %rbx,%r13
   13245:	06                   	(bad)  
   13246:	43 c6 44 3e 01 24    	movb   $0x24,0x1(%r14,%r15,1)
   1324c:	49 8d 57 02          	lea    0x2(%r15),%rdx
   13250:	49                   	rex.WB
   13251:	49 c1 e7 1e          	shl    $0x1e,%r15
   13255:	43 c6 44 3e 02 27    	movb   $0x27,0x2(%r14,%r15,1)
   1325b:	49 83 c7 03          	add    $0x3,%r15
   1325f:	41 89 c3             	mov    %eax,%r11d
   13262:	4d 39 d7             	cmp    %r10,%r15
   13265:	48 ff c0             	inc    %rax
   13268:	c6 04 3e 5c          	movb   $0x5c,(%rsi,%rdi,1)
   1326c:	49 83 c7 48          	add    $0x48,%r15
   13270:	21 ff                	and    %edi,%edi
   13272:	fc                   	cld    
   13273:	01 4d 39             	add    %ecx,0x39(%rbp)
   13276:	d7                   	xlat   %ds:(%rbx)
   13277:	73 04                	jae    1327d <_obstack_memory_used@@Base+0x2acd>
   13279:	43 88 0c 3e          	mov    %cl,(%r14,%r15,1)
   1327d:	0f b6 44 24 20       	movzbl 0x20(%rsp),%eax
   13282:	49 83 c7 01          	add    $0x1,%r15
   13286:	be 00 00 00 00       	mov    $0x0,%esi
   1328b:	40 84 ed             	test   %bpl,%bpl
   1328e:	0f 44 c6             	cmove  %esi,%eax
   13291:	88 44 24 20          	mov    %al,0x20(%rsp)
   13295:	e9 16 fe ff ff       	jmp    130b0 <_obstack_memory_used@@Base+0x2900>
   1329a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   132a0:	49 c1 eb 3e          	shr    $0x3e,%r11
   132a4:	56                   	push   %rsi
   132a5:	31 ed                	xor    %ebp,%ebp
   132a7:	41 83 fd 02          	cmp    $0x2,%r13d
   132ab:	48 c1 ef 1c          	shr    $0x1c,%rdi
   132af:	7c 24                	jl     132d5 <_obstack_memory_used@@Base+0x2b25>
   132b1:	26 00 89 c2 0f 84 b4 	es add %cl,-0x4b7bf03e(%rcx)
   132b8:	00 00                	add    %al,(%rax)
   132ba:	00 84 c0 0f 84 ac 00 	add    %al,0xac840f(%rax,%rax,8)
   132c1:	4c 85 c2             	test   %r8,%rdx
   132c4:	4d 0f 0f 8f 0f fe ff 	rex.WRB pswapd -0x1f1(%r15),%mm1
   132cb:	ff bb 
   132cd:	02 4d 0f             	add    0xf(%rbp),%cl
   132d0:	af                   	scas   %es:(%rdi),%eax
   132d1:	e2 f7                	loop   132ca <_obstack_memory_used@@Base+0x2b1a>
   132d3:	ff 4d 89             	decl   -0x77(%rbp)
   132d6:	d4                   	(bad)  
   132d7:	89 e8                	mov    %ebp,%eax
   132d9:	84 c0                	test   %al,%al
   132db:	0f 85 48 48 c1 eb    	jne    ffffffffebc27b29 <obstack_alloc_failed_handler@@Base+0xffffffffebc05a89>
   132e1:	2c ff                	sub    $0xff,%al
   132e3:	ff                   	(bad)  
   132e4:	78 fd                	js     132e3 <_obstack_memory_used@@Base+0x2b33>
   132e6:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   132ed:	00 00 
   132ef:	e9 ac fc ff ff       	jmp    12fa0 <_obstack_memory_used@@Base+0x27f0>
   132f4:	49 f7 fb             	idiv   %r11
   132f7:	00 45 31             	add    %al,0x31(%rbp)
   132fa:	4d 21 cd             	and    %r9,%r13
   132fd:	48 01 de             	add    %rbx,%rsi
   13300:	01 0f                	add    %ecx,(%rdi)
   13302:	85 62 49             	test   %esp,0x49(%rdx)
   13305:	21 c2                	and    %eax,%edx
   13307:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1330e:	00 00 
   13310:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   13315:	49 f7 fa             	idiv   %r10
   13318:	ff                   	(bad)  
   13319:	ff                   	(bad)  
   1331a:	ff 89 48 89 df 44    	decl   0x44df8948(%rcx)
   13320:	88 44 24 27          	mov    %al,0x27(%rsp)
   13324:	e8 a7 19 ff ff       	call   4cd0 <__ctype_b_loc@plt>
   13329:	44 0f b6 44 24 27    	movzbl 0x27(%rsp),%r8d
   1332f:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   13334:	49 ff c3             	inc    %r11
   13337:	00 00                	add    %al,(%rax)
   13339:	48                   	rex.W
   1333a:	4d 09 e6             	or     %r12,%r14
   1333d:	b6 c3                	mov    $0xc3,%dh
   1333f:	44 0f b6 5c 24 30    	movzbl 0x30(%rsp),%r11d
   13345:	49 f7 fd             	idiv   %r13
   13348:	e9 4d 39 f6 0f       	jmp    ff76c9a <obstack_alloc_failed_handler@@Base+0xff54bfa>
   1334d:	0f 8c 24 ff ff ff    	jl     13277 <_obstack_memory_used@@Base+0x2ac7>
   13353:	0f 95 c5             	setne  %ch
   13356:	0f 94 c2             	sete   %dl
   13359:	22 54 24 25          	and    0x25(%rsp),%dl
   1335d:	84 d2                	test   %dl,%dl
   1335f:	0f 85 de 0c 49 ff    	jne    ffffffffff4a4043 <obstack_alloc_failed_handler@@Base+0xffffffffff481fa3>
   13365:	c1 1f 00             	rcrl   $0x0,(%rdi)
   13368:	41 83 fd 02          	cmp    $0x2,%r13d
   1336c:	0f 94 c2             	sete   %dl
   1336f:	89 d9                	mov    %ebx,%ecx
   13371:	0f b6 44 24 25       	movzbl 0x25(%rsp),%eax
   13376:	83 f0 01             	xor    $0x1,%eax
   13379:	08 d0                	or     %dl,%al
   1337b:	0f 84 6f fe ff ff    	je     131f0 <_obstack_memory_used@@Base+0x2a40>
   13381:	31 c0                	xor    %eax,%eax
   13383:	80 7c 4c 09 cf       	cmpb   $0xcf,0x9(%rsp,%rcx,2)
   13388:	0f 85 62 fe ff ff    	jne    131f0 <_obstack_memory_used@@Base+0x2a40>
   1338e:	66 90                	xchg   %ax,%ax
   13390:	45 84 c0             	test   %r8b,%r8b
   13393:	0f 4c 09             	cmovl  (%rcx),%ecx
   13396:	c7                   	(bad)  
   13397:	ff                   	(bad)  
   13398:	ff 83 f0 01 49 83    	incl   -0x7cb6fe10(%rbx)
   1339e:	c1 01 44             	roll   $0x44,(%rcx)
   133a1:	21 d8                	and    %ebx,%eax
   133a3:	e9 a0 08 00 00       	jmp    13c48 <_obstack_memory_used@@Base+0x3498>
   133a8:	85 db                	test   %ebx,%ebx
   133aa:	0f                   	(bad)  
   133ab:	0f 85 4b ff ff ff    	jne    132fc <_obstack_memory_used@@Base+0x2b4c>
   133b1:	fe                   	(bad)  
   133b2:	ff                   	(bad)  
   133b3:	ff 48 f7             	decl   -0x9(%rax)
   133b6:	fe c6                	inc    %dh
   133b8:	44 24 26             	rex.R and $0x26,%al
   133bb:	00 bd 01 00 00 00    	add    %bh,0x1(%rbp)
   133c1:	31 49 ff             	xor    %ecx,-0x1(%rcx)
   133c4:	c4                   	(bad)  
   133c5:	0f 84 36 01 00 00    	je     13501 <_obstack_memory_used@@Base+0x2d51>
   133cb:	00 0f                	add    %cl,(%rdi)
   133cd:	84 10                	test   %dl,(%rax)
   133cf:	02 00                	add    (%rax),%al
   133d1:	00 c9                	add    %cl,%cl
   133d3:	49 f7 f9             	idiv   %r9
   133d6:	44 24 18             	rex.R and $0x18,%al
   133d9:	01 00                	add    %eax,(%rax)
   133db:	00 00                	add    %al,(%rax)
   133dd:	c6 44 49 31 df       	movb   $0xdf,0x31(%rcx,%rcx,2)
   133e2:	c6 44 24 20 01       	movb   $0x1,0x20(%rsp)
   133e7:	48 c7 44 24 49 c1 0f 	movq   $0x4f8c0fc1,0x49(%rsp)
   133ee:	8c 4f 
   133f0:	fc                   	cld    
   133f1:	ff                   	(bad)  
   133f2:	ff 0f                	decl   (%rdi)
   133f4:	84 98 fc ff ff 41    	test   %bl,0x41fffffc(%rax)
   133fa:	c6 45 49 89          	movb   $0x89,0x49(%rbp)
   133fe:	c2 8e fc             	ret    $0xfc8e
   13401:	ff                   	(bad)  
   13402:	ff c6                	inc    %esi
   13404:	44 24 26             	rex.R and $0x26,%al
   13407:	01 bd 01 48 31 fe    	add    %edi,-0x1ceb7ff(%rbp)
   1340d:	48 8d 05 2b 48 39 d6 	lea    -0x29c6b7d5(%rip),%rax        # ffffffffd63a7c3f <obstack_alloc_failed_handler@@Base+0xffffffffd6385b9f>
   13414:	45 31 ff             	xor    %r15d,%r15d
   13417:	41 bb 02 00 00 00    	mov    $0x2,%r11d
   1341d:	48 c7 44 24 18 48 c1 	movq   $0x2eeac148,0x18(%rsp)
   13424:	ea 2e 
   13426:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1342b:	e9 4c fc ff ff       	jmp    1307c <_obstack_memory_used@@Base+0x28cc>
   13430:	c6 44 24 0f 85       	movb   $0x85,0xf(%rsp)
   13435:	42 fc                	rex.X cld 
   13437:	ff                   	(bad)  
   13438:	ff 00                	incl   (%rax)
   1343a:	45 31 ff             	xor    %r15d,%r15d
   1343d:	48 c7 44 24 18 49 f7 	movq   $0xffffffffe2fbf749,0x18(%rsp)
   13444:	fb e2 
   13446:	3e c7                	ds (bad) 
   13448:	49 ff c4             	inc    %r12
   1344b:	00 00                	add    %al,(%rax)
   1344d:	00 00                	add    %al,(%rax)
   1344f:	e9 28 fc ff ff       	jmp    1307c <_obstack_memory_used@@Base+0x28cc>
   13454:	85 db                	test   %ebx,%ebx
   13456:	0f 84 17 01 00 00    	je     13573 <_obstack_memory_used@@Base+0x2dc3>
   1345c:	c6 44 24 26 01       	movb   $0x1,0x26(%rsp)
   13461:	31 4d 09             	xor    %ecx,0x9(%rbp)
   13464:	df 48 8d             	fisttps -0x73(%rax)
   13467:	4d 21 fe             	and    %r15,%r14
   1346a:	00 00                	add    %al,(%rax)
   1346c:	c6 44 24 26 01       	movb   $0x1,0x26(%rsp)
   13471:	bd 01 00 00 00       	mov    $0x1,%ebp
   13476:	45 31 ff             	xor    %r15d,%r15d
   13479:	48 c7 44 24 4d 89 de 	movq   $0x21de89,0x4d(%rsp)
   13480:	21 00 
   13482:	41 bb 05 00 00 00    	mov    $0x5,%r11d
   13488:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1348d:	e9 e9 c4 fd ff       	jmp    fffffffffffef97b <obstack_alloc_failed_handler@@Base+0xfffffffffffcd8db>
   13492:	ff 44 24 26          	incl   0x26(%rsp)
   13496:	4d 31 e0             	xor    %r12,%r8
   13499:	45 31 ff             	xor    %r15d,%r15d
   1349c:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   134a3:	00 00 
   134a5:	48 c7 44 24 48 00 00 	movq   $0x214c0000,0x48(%rsp)
   134ac:	4c 21 
   134ae:	e6 01                	out    %al,$0x1
   134b0:	00 00                	add    %al,(%rax)
   134b2:	80 fc ff             	cmp    $0xff,%ah
   134b5:	ff 41 83             	incl   -0x7d(%rcx)
   134b8:	4d 39 dc             	cmp    %r11,%r12
   134bb:	84 0f                	test   %cl,(%rdi)
   134bd:	8f 42 02             	pop    0x2(%rdx)
   134c0:	00 00                	add    %al,(%rax)
   134c2:	fd                   	std    
   134c3:	05 75 2a f6 44       	add    $0x44f62a75,%eax
   134c8:	24 78                	and    $0x78,%al
   134ca:	04 74                	add    $0x74,%al
   134cc:	23 49 8d             	and    -0x73(%rcx),%ecx
   134cf:	41                   	rex.B
   134d0:	4c 0f af c8          	imul   %rax,%r9
   134d4:	48 0f 84 19 fc ff ff 	rex.W je 130f4 <_obstack_memory_used@@Base+0x2944>
   134db:	09 d2                	or     %edx,%edx
   134dd:	7c 0f                	jl     134ee <_obstack_memory_used@@Base+0x2d3e>
   134df:	01 3f                	add    %edi,(%rdi)
   134e1:	0f 84 6b 0c 00 00    	je     14152 <_obstack_memory_used@@Base+0x39a2>
   134e7:	66 4d 85 c5          	data16 test %r8,%r13
   134eb:	00 00                	add    %al,(%rax)
   134ed:	00 00                	add    %al,(%rax)
   134ef:	49 c1 e5 49          	shl    $0x49,%r13
   134f3:	c1 e3 3d             	shl    $0x3d,%ebx
   134f6:	49 c1 ea 37          	shr    $0x37,%r10
   134fa:	73 fe                	jae    134fa <_obstack_memory_used@@Base+0x2d4a>
   134fc:	ff                   	(bad)  
   134fd:	ff 45 31             	incl   0x31(%rbp)
   13500:	c0 41 83 fd          	rolb   $0xfd,-0x7d(%rcx)
   13504:	02 0f                	add    (%rdi),%cl
   13506:	84 4d 09             	test   %cl,0x9(%rbp)
   13509:	00 00                	add    %al,(%rax)
   1350b:	40 88 6c 24 7c       	mov    %bpl,0x7c(%rsp)
   13510:	31 0f                	xor    %ecx,(%rdi)
   13512:	8c 9e 00 00 00 ff    	mov    %ds,-0x1000000(%rsi)
   13518:	c1 fe ff             	sar    $0xff,%esi
   1351b:	ff                   	(bad)  
   1351c:	b9 72 49 c1 e1       	mov    $0xe1c14972,%ecx
   13521:	03 d1                	add    %ecx,%edx
   13523:	e6 83                	out    %al,$0x83
   13525:	fd                   	std    
   13526:	02 0f                	add    (%rdi),%cl
   13528:	94                   	xchg   %eax,%esp
   13529:	c2 80 7c             	ret    $0x7c80
   1352c:	24 49                	and    $0x49,%al
   1352e:	ff c0                	inc    %eax
   13530:	d0 0f                	rorb   (%rdi)
   13532:	84 f2                	test   %dh,%dl
   13534:	fc                   	cld    
   13535:	ff                   	(bad)  
   13536:	ff 66 0f             	jmp    *0xf(%rsi)
   13539:	1f                   	(bad)  
   1353a:	84 00                	test   %al,(%rax)
   1353c:	00 00                	add    %al,(%rax)
   1353e:	00 00                	add    %al,(%rax)
   13540:	0f b6 6c 24 25       	movzbl 0x25(%rsp),%ebp
   13545:	45 89 eb             	mov    %r13d,%r11d
   13548:	4d 89 f5             	mov    %r14,%r13
   1354b:	4d 89 e9             	mov    %r13,%r9
   1354e:	42 fc                	rex.X cld 
   13550:	ff                   	(bad)  
   13551:	ff                   	(bad)  
   13552:	e8 84 c0 0f 84       	call   ffffffff8410f5db <obstack_alloc_failed_handler@@Base+0xffffffff840ed53b>
   13557:	65 fc                	gs cld 
   13559:	ff                   	(bad)  
   1355a:	ff 0f                	decl   (%rdi)
   1355c:	8c 37                	mov    %?,(%rdi)
   1355e:	fe                   	(bad)  
   1355f:	ff                   	(bad)  
   13560:	ff                   	(bad)  
   13561:	f8                   	clc    
   13562:	13 ff                	adc    %edi,%edi
   13564:	ff 48 c7             	decl   -0x39(%rax)
   13567:	44 24 08             	rex.R and $0x8,%al
   1356a:	00 00                	add    %al,(%rax)
   1356c:	00 4d 21             	add    %cl,0x21(%rbp)
   1356f:	ec                   	in     (%dx),%al
   13570:	44 24 58             	rex.R and $0x58,%al
   13573:	bd 01 49 f7 fc       	mov    $0xfcf74901,%ebp
   13578:	48 8d 05 c0 0f 8f c0 	lea    -0x3f70f040(%rip),%rax        # ffffffffc090453f <obstack_alloc_failed_handler@@Base+0xffffffffc08e249f>
   1357f:	01 00                	add    %eax,(%rax)
   13581:	00 ee                	add    %ch,%dh
   13583:	24 31                	and    $0x31,%al
   13585:	f6 41 bb 02          	testb  $0x2,-0x45(%rcx)
   13589:	00 00                	add    %al,(%rax)
   1358b:	00 4c 21 c6          	add    %cl,-0x3a(%rcx,%riz,1)
   1358f:	48 21 da             	and    %rbx,%rdx
   13592:	8f                   	(bad)  
   13593:	16                   	(bad)  
   13594:	fc                   	cld    
   13595:	ff 49 c1             	decl   -0x3f(%rcx)
   13598:	e2 1e                	loop   135b8 <_obstack_memory_used@@Base+0x2e08>
   1359a:	24 18                	and    $0x18,%al
   1359c:	01 00                	add    %eax,(%rax)
   1359e:	00 00                	add    %al,(%rax)
   135a0:	c6 44 48 0f 8f       	movb   $0x8f,0xf(%rax,%rcx,2)
   135a5:	49 f7 fa             	idiv   %r10
   135a8:	09 01                	or     %eax,(%rcx)
   135aa:	00 00                	add    %al,(%rax)
   135ac:	44 24 50             	rex.R and $0x50,%al
   135af:	00 00                	add    %al,(%rax)
   135b1:	00 00                	add    %al,(%rax)
   135b3:	49 21 d6             	and    %rdx,%r14
   135b6:	4d 89 f7             	mov    %r14,%r15
   135b9:	fa                   	cli    
   135ba:	ff                   	(bad)  
   135bb:	ff 31                	push   (%rcx)
   135bd:	c0 0f 8f             	rorb   $0x8f,(%rdi)
   135c0:	03 fd                	add    %ebp,%edi
   135c2:	ff                   	(bad)  
   135c3:	ff d6                	call   *%rsi
   135c5:	01 00                	add    %eax,(%rax)
   135c7:	00 0f                	add    %cl,(%rdi)
   135c9:	85 64 ff ff          	test   %esp,-0x1(%rdi,%rdi,8)
   135cd:	ff 83 fd 02 0f 94    	incl   -0x6bf0fd03(%rbx)
   135d3:	4c                   	rex.WR
   135d4:	4c 89 c0             	mov    %r8,%rax
   135d7:	c1 34 fc ff          	shll   $0xff,(%rsp,%rdi,8)
   135db:	ff 48 f7             	decl   -0x9(%rax)
   135de:	fb                   	sti    
   135df:	fc                   	cld    
   135e0:	ff                   	(bad)  
   135e1:	ff 41 e9             	incl   -0x17(%rcx)
   135e4:	76 01                	jbe    135e7 <_obstack_memory_used@@Base+0x2e37>
   135e6:	00 00                	add    %al,(%rax)
   135e8:	00 00                	add    %al,(%rax)
   135ea:	00 0f                	add    %cl,(%rdi)
   135ec:	94                   	xchg   %eax,%esp
   135ed:	c0 80 49 29 ff 00 74 	rolb   $0x74,0xff2949(%rax)
   135f4:	e6 0f                	out    %al,$0xf
   135f6:	b6 48                	mov    $0x48,%dh
   135f8:	c1 ee 32             	shr    $0x32,%esi
   135fb:	4c 29 4c 09 c9       	sub    %r9,-0x37(%rcx,%rcx,1)
   13600:	4d 89 e6             	mov    %r12,%r14
   13603:	4d 89 d4             	mov    %r10,%r12
   13606:	21 e8                	and    %ebp,%eax
   13608:	e9 e9 d5 fc 49       	jmp    49fe0bf6 <obstack_alloc_failed_handler@@Base+0x49fbeb56>
   1360d:	21 c3                	and    %eax,%ebx
   1360f:	48 c7 c0 b0 02 00 00 	mov    $0x2b0,%rax
   13616:	ff                   	(bad)  
   13617:	ff                   	(bad)  
   13618:	ff                   	(bad)  
   13619:	b9 61 00 00 00       	mov    $0x61,%ecx
   1361e:	eb ad                	jmp    135cd <_obstack_memory_used@@Base+0x2e1d>
   13620:	48 c1 e1 23          	shl    $0x23,%rcx
   13624:	00 0f                	add    %cl,(%rdi)
   13626:	85 99 0c 00 0f 8c    	test   %ebx,-0x73f0fff4(%rcx)
   1362c:	9a                   	(bad)  
   1362d:	02 00                	add    (%rax),%al
   1362f:	00 fd                	add    %bh,%ch
   13631:	02 44 89 d8          	add    -0x28(%rcx,%rcx,4),%al
   13635:	0f 94 49 89          	sete   -0x77(%rcx)
   13639:	ff 01                	incl   (%rcx)
   1363b:	20 d0                	and    %dl,%al
   1363d:	49 85 d3             	test   %rdx,%r11
   13640:	09 00                	or     %eax,(%rax)
   13642:	00 4d 48             	add    %cl,0x48(%rbp)
   13645:	09 e9                	or     %ebp,%ecx
   13647:	1d fc ff ff 3e       	sbb    $0x3efffffc,%eax
   1364c:	27                   	(bad)  
   1364d:	49 8d 4f 01          	lea    0x1(%r15),%rcx
   13651:	49 39 ca             	cmp    %rcx,%r10
   13654:	76 06                	jbe    1365c <_obstack_memory_used@@Base+0x2eac>
   13656:	43 c6 44 3e 01 24    	movb   $0x24,0x1(%r14,%r15,1)
   1365c:	49 8d 4f 02          	lea    0x2(%r15),%rcx
   13660:	49 39 0f             	cmp    %rcx,(%r15)
   13663:	49 39 da             	cmp    %rbx,%r10
   13666:	ff                   	(bad)  
   13667:	ff                   	(bad)  
   13668:	3e 02 27             	ds add (%rdi),%ah
   1366b:	49 8d 77 03          	lea    0x3(%r15),%rsi
   1366f:	49 39 f2             	cmp    %rsi,%r10
   13672:	48 39 d8             	cmp    %rbx,%rax
   13675:	09 49 09             	or     %ecx,0x9(%rcx)
   13678:	c5 83 c7             	(bad)
   1367b:	04 41                	add    $0x41,%al
   1367d:	89 c3                	mov    %eax,%ebx
   1367f:	49 c1 ef 37          	shr    $0x37,%r15
   13683:	00 00                	add    %al,(%rax)
   13685:	00 e9                	add    %ch,%cl
   13687:	81 fb ff 4d 09 48    	cmp    $0x48094dff,%ebx
   1368d:	ff c3                	inc    %ebx
   1368f:	e7 44                	out    %eax,$0x44
   13691:	89 c0                	mov    %eax,%eax
   13693:	4d 85 c9             	test   %r9,%r9
   13696:	0f 85 fc 05 00 00    	jne    13c98 <_obstack_memory_used@@Base+0x34e8>
   1369c:	89 cb                	mov    %ecx,%ebx
   1369e:	49 39 f8             	cmp    %rdi,%r8
   136a1:	ff 0f                	decl   (%rdi)
   136a3:	84 e3                	test   %ah,%bl
   136a5:	fd                   	std    
   136a6:	48 0f af f0          	imul   %rax,%rsi
   136aa:	c0 b9 09 00 00 00 bb 	sarb   $0xbb,0x9(%rcx)
   136b1:	74 0f                	je     136c2 <_obstack_memory_used@@Base+0x2f12>
   136b3:	e9 21 fe 4d 85       	jmp    ffffffff854f34d9 <obstack_alloc_failed_handler@@Base+0xffffffff854d1439>
   136b8:	d4                   	(bad)  
   136b9:	93                   	xchg   %eax,%ebx
   136ba:	02 00                	add    (%rax),%al
   136bc:	00 8f 0d 02 00 00    	add    %cl,0x20d(%rdi)
   136c2:	00 31                	add    %dh,(%rcx)
   136c4:	ed                   	in     (%dx),%eax
   136c5:	31 c0                	xor    %eax,%eax
   136c7:	80 7c 24 26 00       	cmpb   $0x0,0x26(%rsp)
   136cc:	0f 85 1e fb ff ff    	jne    131f0 <_obstack_memory_used@@Base+0x2a40>
   136d2:	e9 b9 fc ff ff       	jmp    13390 <_obstack_memory_used@@Base+0x2be0>
   136d7:	b9 49 09 f8 00       	mov    $0xf80949,%ecx
   136dc:	31 4c 85 c1          	xor    %ecx,-0x3f(%rbp,%rax,4)
   136e0:	fe                   	(bad)  
   136e1:	ff                   	(bad)  
   136e2:	ff 44 49 29          	incl   0x29(%rcx,%rcx,2)
   136e6:	c4                   	(bad)  
   136e7:	20 00                	and    %al,(%rax)
   136e9:	00 00                	add    %al,(%rax)
   136eb:	49 ff c1             	inc    %r9
   136ee:	ff                   	(bad)  
   136ef:	ff 0f                	decl   (%rdi)
   136f1:	b6 1b                	mov    $0x1b,%dh
   136f3:	80 fb 3f             	cmp    $0x3f,%bl
   136f6:	0f 8f cc 00 00 00    	jg     137c8 <_obstack_memory_used@@Base+0x3018>
   136fc:	84 db                	test   %bl,%bl
   136fe:	0f 88 f7 fb ff ff    	js     132fb <_obstack_memory_used@@Base+0x2b4b>
   13704:	80 fb 3f             	cmp    $0x3f,%bl
   13707:	0f 87 ee fb ff ff    	ja     132fb <_obstack_memory_used@@Base+0x2b4b>
   1370d:	48 8d 15 48 8f 00 00 	lea    0x8f48(%rip),%rdx        # 1c65c <_obstack_memory_used@@Base+0xbeac>
   13714:	0f b6 c3             	movzbl %bl,%eax
   13717:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1371b:	48 01 d0             	add    %rdx,%rax
   1371e:	3e ff e0             	notrack jmp *%rax
   13721:	b9 0c 00 00 00       	mov    $0xc,%ecx
   13726:	bb 66 00 00 00       	mov    $0x66,%ebx
   1372b:	eb 8b                	jmp    136b8 <_obstack_memory_used@@Base+0x2f08>
   1372d:	b9 09 49 c1 e4       	mov    $0xe4c14909,%ecx
   13732:	0b 0f                	or     (%rdi),%ecx
   13734:	75 fb                	jne    13731 <_obstack_memory_used@@Base+0x2f81>
   13736:	02 00                	add    (%rax),%al
   13738:	00 fd                	add    %bh,%ch
   1373a:	02 0f                	add    (%rdi),%cl
   1373c:	94                   	xchg   %eax,%esp
   1373d:	c0 22 44             	shlb   $0x44,(%rdx)
   13740:	24 26                	and    $0x26,%al
   13742:	41 89 c0             	mov    %eax,%r8d
   13745:	0f 84 6d 4c 0f af    	je     ffffffffaf1083b8 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e6318>
   1374b:	f1                   	int1   
   1374c:	0f af ef             	imul   %edi,%ebp
   1374f:	48 c1 e3 20          	shl    $0x20,%rbx
   13753:	48 c7 c2 10 02 00 00 	mov    $0x210,%rdx
   1375a:	7f 15                	jg     13771 <_obstack_memory_used@@Base+0x2fc1>
   1375c:	ff 0f                	decl   (%rdi)
   1375e:	8f                   	(bad)  
   1375f:	57                   	push   %rdi
   13760:	fc                   	cld    
   13761:	ff                   	(bad)  
   13762:	ff 85 57 02 00 00    	incl   0x257(%rbp)
   13768:	ff                   	(bad)  
   13769:	ff 45 31             	incl   0x31(%rbp)
   1376c:	c0 31 c9             	shlb   $0xc9,(%rcx)
   1376f:	49                   	rex.WB
   13770:	49 c1 e5 3a          	shl    $0x3a,%r13
   13774:	00 49 39             	add    %cl,0x39(%rcx)
   13777:	de ff                	fdivrp %st,%st(7)
   13779:	ff 49 83             	decl   -0x7d(%rcx)
   1377c:	c1 01 e9             	roll   $0xe9,(%rcx)
   1377f:	2d f9 ff ff b9       	sub    $0xb9fffff9,%eax
   13784:	0b 00                	or     (%rax),%eax
   13786:	00 00                	add    %al,(%rax)
   13788:	bb 0f 85 20 ff       	mov    $0xff20850f,%ebx
   1378d:	ff                   	(bad)  
   1378e:	ff                   	(bad)  
   1378f:	ff                   	(bad)  
   13790:	ff                   	(bad)  
   13791:	ff 49 c7             	decl   -0x39(%rcx)
   13794:	c6                   	(bad)  
   13795:	22 fc                	and    %ah,%bh
   13797:	ff                   	(bad)  
   13798:	ff e5                	jmp    *%rbp
   1379a:	08 ff                	or     %bh,%bh
   1379c:	b9 0d 00 00 00       	mov    $0xd,%ecx
   137a1:	bb 72 00 00 00       	mov    $0x72,%ebx
   137a6:	eb 8f                	jmp    13737 <_obstack_memory_used@@Base+0x2f87>
   137a8:	b9 0a 00 00 00       	mov    $0xa,%ecx
   137ad:	bb 6e 00 00 00       	mov    $0x6e,%ebx
   137b2:	eb 83                	jmp    13737 <_obstack_memory_used@@Base+0x2f87>
   137b4:	b9 07 00 00 00       	mov    $0x7,%ecx
   137b9:	bb 61 00 48 01       	mov    $0x1480061,%ebx
   137be:	49 01 db             	add    %rbx,%r11
   137c1:	f7 48 85 48 c1 ee 2f 	testl  $0x2feec148,-0x7b(%rax)
   137c8:	80 fb 7a             	cmp    $0x7a,%bl
   137cb:	7f 73                	jg     13840 <_obstack_memory_used@@Base+0x3090>
   137cd:	80 fb 40             	cmp    $0x40,%bl
   137d0:	0f 84 25 fb ff ff    	je     132fb <_obstack_memory_used@@Base+0x2b4b>
   137d6:	8d 4b bf             	lea    -0x41(%rbx),%ecx
   137d9:	b8 01 00 00 00       	mov    $0x1,%eax
   137de:	48 ba ff ff ff 53 ff 	movabs $0x3ffffff53ffffff,%rdx
   137e5:	ff ff 03 
   137e8:	48 d3 e0             	shl    %cl,%rax
   137eb:	48 85 d0             	test   %rdx,%rax
   137ee:	0f 85 74 fb ff ff    	jne    13368 <_obstack_memory_used@@Base+0x2bb8>
   137f4:	a9 49 89 fc a4       	test   $0xa4fc8949,%eax
   137f9:	0f 85 a6 fa e9 4e    	jne    4eeb32a5 <obstack_alloc_failed_handler@@Base+0x4ee91205>
   137ff:	01 00                	add    %eax,(%rax)
   13801:	00 0f                	add    %cl,(%rdi)
   13803:	85 f3                	test   %esi,%ebx
   13805:	fa                   	cli    
   13806:	ff                   	(bad)  
   13807:	ff 41 83             	incl   -0x7d(%rcx)
   1380a:	fd                   	std    
   1380b:	02 0f                	add    (%rdi),%cl
   1380d:	84 1e                	test   %bl,(%rsi)
   1380f:	06                   	(bad)  
   13810:	00 00                	add    %al,(%rax)
   13812:	0f b6 4c 31 ee       	movzbl -0x12(%rcx,%rsi,1),%ecx
   13817:	22 54 24 26          	and    0x26(%rsp),%dl
   1381b:	48 83 e9 0f          	sub    $0xf,%rcx
   1381f:	84 11                	test   %dl,(%rcx)
   13821:	fd                   	std    
   13822:	ff                   	(bad)  
   13823:	ff 20                	jmp    *(%rax)
   13825:	c2 41 49             	ret    $0x4941
   13828:	c1 e5 25             	shl    $0x25,%ebp
   1382b:	08 04 00             	or     %al,(%rax,%rax,1)
   1382e:	00 4d 31             	add    %cl,0x31(%rbp)
   13831:	d0 e9                	shr    %cl
   13833:	d6                   	(bad)  
   13834:	01 00                	add    %eax,(%rax)
   13836:	00 ff                	add    %bh,%bh
   13838:	ff 0f                	decl   (%rdi)
   1383a:	1f                   	(bad)  
   1383b:	4d 31 48 c7          	xor    %r9,-0x39(%r8)
   1383f:	c3                   	ret    
   13840:	b9 01 00 00 84       	mov    $0x84000001,%ecx
   13845:	87 04 00             	xchg   %eax,(%rax,%rax,1)
   13848:	00 0f                	add    %cl,(%rdi)
   1384a:	4c 21 49 ff          	and    %r9,-0x1(%rcx)
   1384e:	c7                   	(bad)  
   1384f:	b9 7e 00 00 00       	mov    $0x7e,%ecx
   13854:	80 fb 7e             	cmp    $0x7e,%bl
   13857:	0f 84 33 48 49 c1    	je     ffffffffc14a8090 <obstack_alloc_failed_handler@@Base+0xffffffffc1485ff0>
   1385d:	49 89 4c 31 d0       	mov    %rcx,-0x30(%r9,%rsi,1)
   13862:	01 0f                	add    %ecx,(%rdi)
   13864:	84 a7 49 29 f9 48    	test   %ah,0x48f92949(%rdi)
   1386a:	8d                   	(bad)  
   1386b:	eb 85                	jmp    137f2 <_obstack_memory_used@@Base+0x3042>
   1386d:	b0 00                	mov    $0x0,%al
   1386f:	00 4d 85             	add    %cl,-0x7b(%rbp)
   13872:	c2 84 24             	ret    $0x2484
   13875:	b0 00                	mov    $0x0,%al
   13877:	00 00                	add    %al,(%rax)
   13879:	e9 72 ff ff 0f       	jmp    100137f0 <obstack_alloc_failed_handler@@Base+0xfff1750>
   1387e:	85 65 02             	test   %esp,0x2(%rbp)
   13881:	00 00                	add    %al,(%rax)
   13883:	83 fc ff             	cmp    $0xffffffff,%esp
   13886:	75 37                	jne    138bf <_obstack_memory_used@@Base+0x310f>
   13888:	48 8b 7c 24 0f       	mov    0xf(%rsp),%rdi
   1388d:	84 6e ff             	test   %ch,-0x1(%rsi)
   13890:	ff                   	(bad)  
   13891:	ff 44 88 5c          	incl   0x5c(%rax,%rcx,4)
   13895:	48 c1 eb 1b          	shr    $0x1b,%rbx
   13899:	48 31 ff             	xor    %rdi,%rdi
   1389c:	f2 88 44 24 27       	repnz mov %al,0x27(%rsp)
   138a1:	e8 da 0f ff ff       	call   4880 <strlen@plt>
   138a6:	4c 8b 54 24 4d       	mov    0x4d(%rsp),%r10
   138ab:	85 d2                	test   %edx,%edx
   138ad:	e5 34                	in     $0x34,%eax
   138af:	28 44 e9 1b          	sub    %al,0x1b(%rcx,%rbp,8)
   138b3:	03 00                	add    (%rax),%eax
   138b5:	00 44 0f b6          	add    %al,-0x4a(%rdi,%rcx,1)
   138b9:	0f 84 2e ff ff ff    	je     137ed <_obstack_memory_used@@Base+0x303d>
   138bf:	03 00                	add    (%rax),%eax
   138c1:	00 49 c1             	add    %cl,-0x3f(%rcx)
   138c4:	e9 0d 00 44 88       	jmp    ffffffff884538d6 <obstack_alloc_failed_handler@@Base+0xffffffff88431836>
   138c9:	44                   	rex.R
   138ca:	49 ff c6             	inc    %r14
   138cd:	ff 48 89             	decl   -0x77(%rax)
   138d0:	4d 89 f1             	mov    %r14,%r9
   138d3:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   138d8:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   138dd:	44 88 5c 24 7f       	mov    %r11b,0x7f(%rsp)
   138e2:	40 88 6c 24 4d       	mov    %bpl,0x4d(%rsp)
   138e7:	09 c5                	or     %eax,%ebp
   138e9:	bc 24 80 00 49       	mov    $0x49008024,%esp
   138ee:	c7 c4 81 ff ff ff    	mov    $0xffffff81,%esp
   138f4:	44 89 6c 24 4c       	mov    %r13d,0x4c(%rsp)
   138f9:	29 ce                	sub    %ecx,%esi
   138fb:	74 24                	je     13921 <_obstack_memory_used@@Base+0x3171>
   138fd:	68 4c 8b 49 09       	push   $0x9498b4c
   13902:	c6                   	(bad)  
   13903:	88 5c 24 7e          	mov    %bl,0x7e(%rsp)
   13907:	49 c1 ea 24          	shr    $0x24,%r10
   1390b:	0f af c3             	imul   %ebx,%eax
   1390e:	30 48 8b             	xor    %cl,-0x75(%rax)
   13911:	6c                   	insb   (%dx),%es:(%rdi)
   13912:	24 28                	and    $0x28,%al
   13914:	4c 89 f1             	mov    %r14,%rcx
   13917:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   1391c:	4c 8d 3c 18          	lea    (%rax,%rbx,1),%r15
   13920:	48 8b 44 48 09       	mov    0x9(%rax,%rcx,2),%rax
   13925:	da 29                	fisubrl (%rcx)
   13927:	fd                   	std    
   13928:	4e 8d 2c 38          	lea    (%rax,%r15,1),%r13
   1392c:	48 89 ea             	mov    %rbp,%rdx
   1392f:	4c 89 ee             	mov    %r13,%rsi
   13932:	e8 79 0f ff ff       	call   48b0 <mbrtowc@plt>
   13937:	e9 a4 03 00 00       	jmp    13ce0 <_obstack_memory_used@@Base+0x3530>
   1393c:	f8                   	clc    
   1393d:	fd                   	std    
   1393e:	0f 86 6c 05 00 00    	jbe    13eb0 <_obstack_memory_used@@Base+0x3700>
   13944:	48 85 ed             	test   %rbp,%rbp
   13947:	0f 48 31             	cmovs  (%rcx),%esi
   1394a:	c2 00 00             	ret    $0x0
   1394d:	31 ff                	xor    %edi,%edi
   1394f:	e8 9c 8c 4d 21       	call   214ec5f0 <obstack_alloc_failed_handler@@Base+0x214ca550>
   13954:	fa                   	cli    
   13955:	29 f7                	sub    %esi,%edi
   13957:	84 ff                	test   %bh,%bh
   13959:	06                   	(bad)  
   1395a:	00 00                	add    %al,(%rax)
   1395c:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13960:	0f 84 48 ff c6 00    	je     c838ae <obstack_alloc_failed_handler@@Base+0xc6180e>
   13966:	49 83 49 49 f7       	orq    $0xfffffffffffffff7,0x49(%r9)
   1396b:	fd                   	std    
   1396c:	74 07                	je     13975 <_obstack_memory_used@@Base+0x31c5>
   1396e:	00 00                	add    %al,(%rax)
   13970:	83 7c 24 49 c1       	cmpl   $0xffffffc1,0x49(%rsp)
   13975:	e0 38                	loopne 139af <_obstack_memory_used@@Base+0x31ff>
   13977:	ff c6                	inc    %esi
   13979:	24 26                	and    $0x26,%al
   1397b:	00 0f                	add    %cl,(%rdi)
   1397d:	85 86 05 00 00 8b    	test   %eax,-0x74fffffb(%rsi)
   13983:	bc 24 ac 00 00       	mov    $0xac24,%esp
   13988:	00 e8                	add    %ch,%al
   1398a:	12 13                	adc    (%rbx),%dl
   1398c:	ff                   	(bad)  
   1398d:	ff                   	(bad)  
   1398e:	bf 00 00 00 00       	mov    $0x0,%edi
   13993:	85 49 ff             	test   %ecx,-0x1(%rcx)
   13996:	c1 44 24 27 0f       	roll   $0xf,0x27(%rsp)
   1399b:	44                   	rex.R
   1399c:	48 ff c3             	inc    %rbx
   1399f:	f7 4c 01 7f 27 4c 31 	testl  $0x48314c27,0x7f(%rcx,%rax,1)
   139a6:	48 
   139a7:	09 cf                	or     %ecx,%edi
   139a9:	12 ff                	adc    %bh,%bh
   139ab:	ff 85 c0 0f 84 56    	incl   0x56840fc0(%rbp)
   139b1:	ff                   	(bad)  
   139b2:	ff                   	(bad)  
   139b3:	ff 0f                	decl   (%rdi)
   139b5:	48 c1 ef 1b          	shr    $0x1b,%rdi
   139b9:	48                   	rex.W
   139ba:	49 89 c3             	mov    %rax,%r11
   139bd:	0f 49 c1             	cmovns %ecx,%eax
   139c0:	ef                   	out    %eax,(%dx)
   139c1:	20 0f                	and    %cl,(%rdi)
   139c3:	85 e4                	test   %esp,%esp
   139c5:	02 00                	add    (%rax),%al
   139c7:	00 8b 64 24 28 49    	add    %cl,0x49282464(%rbx)
   139cd:	c7 c1 75 0f 00 00    	mov    $0xf75,%ecx
   139d3:	7f 0f                	jg     139e4 <_obstack_memory_used@@Base+0x3234>
   139d5:	b6 5c                	mov    $0x5c,%dh
   139d7:	24 7e                	and    $0x7e,%al
   139d9:	4c 8b bc 24 80 49 c1 	mov    -0x1b3eb680(%rsp),%r15
   139e0:	e4 
   139e1:	2d e9 0c 24 68       	sub    $0x68240ce9,%eax
   139e6:	83 f2 01             	xor    $0x1,%edx
   139e9:	4c 8b 54 24 70       	mov    0x70(%rsp),%r10
   139ee:	44 8b 6c 49 c7       	mov    -0x39(%rcx,%rcx,2),%r13d
   139f3:	c6                   	(bad)  
   139f4:	70 00                	jo     139f6 <_obstack_memory_used@@Base+0x3246>
   139f6:	00 48 c1             	add    %cl,-0x3f(%rax)
   139f9:	e3 3a                	jrcxz  13a35 <_obstack_memory_used@@Base+0x3285>
   139fb:	0f 86 5c 49 85 df    	jbe    ffffffffdf86835d <obstack_alloc_failed_handler@@Base+0xffffffffdf8462bd>
   13a01:	48 c1 e7 31          	shl    $0x31,%rdi
   13a05:	88 0f                	mov    %cl,(%rdi)
   13a07:	84 d4                	test   %dl,%ah
   13a09:	48 85 fe             	test   %rdi,%rsi
   13a0c:	fe                   	(bad)  
   13a0d:	ff                   	(bad)  
   13a0e:	ff f6                	push   %rsi
   13a10:	0f b6 6c 24 26       	movzbl 0x26(%rsp),%ebp
   13a15:	4c 01 c9             	add    %r9,%rcx
   13a18:	e9 b4 00 00 00       	jmp    13ad1 <_obstack_memory_used@@Base+0x3321>
   13a1d:	0f 1f 00             	nopl   (%rax)
   13a20:	41 83 fd 02          	cmp    $0x2,%r13d
   13a24:	40 0f 94 c6          	sete   %sil
   13a28:	89 f0                	mov    %esi,%eax
   13a2a:	40 84 4c 01 e3       	rex test %cl,-0x1d(%rcx,%rax,1)
   13a2f:	ff 05 00 49 f7 fb    	incl   -0x408b700(%rip)        # fffffffffbf88335 <obstack_alloc_failed_handler@@Base+0xfffffffffbf66295>
   13a35:	d8 48 c1             	fmuls  -0x3f(%rax)
   13a38:	ef                   	out    %eax,(%dx)
   13a39:	1e                   	(bad)  
   13a3a:	20 f0                	and    %dh,%al
   13a3c:	74 2f                	je     13a6d <_obstack_memory_used@@Base+0x32bd>
   13a3e:	4d 39 fa             	cmp    %r15,%r10
   13a41:	76 05                	jbe    13a48 <_obstack_memory_used@@Base+0x3298>
   13a43:	43 c6 04 3e 0f       	movb   $0xf,(%r14,%r15,1)
   13a48:	8f                   	(bad)  
   13a49:	94                   	xchg   %eax,%esp
   13a4a:	fd                   	std    
   13a4b:	ff                   	(bad)  
   13a4c:	ff 0f                	decl   (%rdi)
   13a4e:	8c e7                	mov    %fs,%edi
   13a50:	fe                   	(bad)  
   13a51:	ff                   	(bad)  
   13a52:	ff 44 3e 01          	incl   0x1(%rsi,%rdi,1)
   13a56:	24 49                	and    $0x49,%al
   13a58:	0f 84 10 02 00 00    	je     13c6e <_obstack_memory_used@@Base+0x34be>
   13a5e:	76 06                	jbe    13a66 <_obstack_memory_used@@Base+0x32b6>
   13a60:	43 c6 44 3e 02 27    	movb   $0x27,0x2(%r14,%r15,1)
   13a66:	49 83 c7 03          	add    $0x3,%r15
   13a6a:	48 c1 eb 3a          	shr    $0x3a,%rbx
   13a6e:	39 49 48             	cmp    %ecx,0x48(%rcx)
   13a71:	85 c7                	test   %eax,%edi
   13a73:	c6                   	(bad)  
   13a74:	48 31 c9             	xor    %rcx,%rcx
   13a77:	49 8d 74 b4 49       	lea    0x49(%r12,%rsi,4),%rsi
   13a7c:	39 c2                	cmp    %eax,%edx
   13a7e:	76 0d                	jbe    13a8d <_obstack_memory_used@@Base+0x32dd>
   13a80:	89 d8                	mov    %ebx,%eax
   13a82:	c0 49 f7 fb          	rorb   $0xfb,-0x9(%rcx)
   13a86:	c0 30 43             	shlb   $0x43,(%rax)
   13a89:	88 44 3e 4d          	mov    %al,0x4d(%rsi,%rdi,1)
   13a8d:	0f af f6             	imul   %esi,%esi
   13a90:	02 49 39             	add    0x39(%rcx),%cl
   13a93:	c2 76 10             	ret    $0x1076
   13a96:	89 d8                	mov    %ebx,%eax
   13a98:	c0 e8 03             	shr    $0x3,%al
   13a9b:	83 e0 07             	and    $0x7,%eax
   13a9e:	83 49 39 c8          	orl    $0xffffffc8,0x39(%rcx)
   13aa2:	88 44 e9 49          	mov    %al,0x49(%rcx,%rbp,8)
   13aa6:	02 00                	add    (%rax),%al
   13aa8:	00 49 83             	add    %cl,-0x7d(%rcx)
   13aab:	49 29 d6             	sub    %rdx,%r14
   13aae:	83 c7 03             	add    $0x3,%edi
   13ab1:	83 c3 0f             	add    $0xf,%ebx
   13ab4:	8c 18                	mov    %ds,(%rax)
   13ab6:	ff                   	(bad)  
   13ab7:	ff                   	(bad)  
   13ab8:	ff 92 05 00 00 89    	call   *-0x76fffffb(%rdx)
   13abe:	d6                   	(bad)  
   13abf:	4d 39 fa             	cmp    %r15,%r10
   13ac2:	76 04                	jbe    13ac8 <_obstack_memory_used@@Base+0x3318>
   13ac4:	0f 8f 15 01 00 00    	jg     13bdf <_obstack_memory_used@@Base+0x342f>
   13aca:	48 c1 e1 34          	shl    $0x34,%rcx
   13ace:	0f 84 c7 00 00 00    	je     13b9b <_obstack_memory_used@@Base+0x33eb>
   13ad4:	85 47 0f             	test   %eax,0xf(%rdi)
   13ad7:	48 01 ff             	add    %rdi,%rdi
   13ada:	4d 31 d1             	xor    %r10,%r9
   13add:	01 44 21 7f          	add    %eax,0x7f(%rcx,%riz,1)
   13ae1:	53                   	push   %rbx
   13ae2:	84 c0                	test   %al,%al
   13ae4:	74 0e                	je     13af4 <_obstack_memory_used@@Base+0x3344>
   13ae6:	4d 39 fa             	cmp    %r15,%r10
   13ae9:	76 05                	jbe    13af0 <_obstack_memory_used@@Base+0x3340>
   13aeb:	43 c6 04 3e 5c       	movb   $0x5c,(%r14,%r15,1)
   13af0:	49 83 c7 01          	add    $0x1,%r15
   13af4:	49 83 4c 85 d6 39    	orq    $0x39,-0x2a(%r13,%rax,4)
   13afa:	c9                   	leave  
   13afb:	48 c1 49 f7 f8       	rorq   $0xf8,-0x9(%rcx)
   13b00:	00 84 c0 0f 84 69 05 	add    %al,0x569840f(%rax,%rax,8)
   13b07:	00 75 56             	add    %dh,0x56(%rbp)
   13b0a:	39 fa                	cmp    %edi,%edx
   13b0c:	76 05                	jbe    13b13 <_obstack_memory_used@@Base+0x3363>
   13b0e:	43                   	rex.XB
   13b0f:	4c 31 f8             	xor    %r15,%rax
   13b12:	27                   	(bad)  
   13b13:	49 8d 49 29          	lea    0x29(%r9),%rcx
   13b17:	cb                   	lret   
   13b18:	39 c2                	cmp    %eax,%edx
   13b1a:	49 c1 ef 2b          	shr    $0x2b,%r15
   13b1e:	48 31 fe             	xor    %rdi,%rsi
   13b21:	0f af fc             	imul   %esp,%edi
   13b24:	49                   	rex.WB
   13b25:	48 c7 c2 e0 fd ff ff 	mov    $0xfffffffffffffde0,%rdx
   13b2c:	eb 91                	jmp    13abf <_obstack_memory_used@@Base+0x330f>
   13b2e:	b9 7b 48 09 d0       	mov    $0xd009487b,%ecx
   13b33:	80 fb 7b             	cmp    $0x7b,%bl
   13b36:	0f 85 64 f7 ff ff    	jne    132a0 <_obstack_memory_used@@Base+0x2af0>
   13b3c:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13b40:	0f 84 0f 85 68 ff    	je     ffffffffff69c055 <obstack_alloc_failed_handler@@Base+0xffffffffff679fb5>
   13b46:	ff                   	(bad)  
   13b47:	ff 0f                	decl   (%rdi)
   13b49:	1f                   	(bad)  
   13b4a:	84 0f                	test   %cl,(%rdi)
   13b4c:	85 24 fd 4d 39 fc 50 	test   %esp,0x50fc394d(,%rdi,8)
   13b53:	fd                   	std    
   13b54:	ff                   	(bad)  
   13b55:	ff                   	(bad)  
   13b56:	39 db                	cmp    %ebx,%ebx
   13b58:	ff                   	(bad)  
   13b59:	ff 66 0f             	jmp    *0xf(%rsi)
   13b5c:	1f                   	(bad)  
   13b5d:	44 7c 4d             	rex.R jl 13bad <_obstack_memory_used@@Base+0x33fd>
   13b60:	39 dc                	cmp    %ebx,%esp
   13b62:	fd                   	std    
   13b63:	02 0f                	add    (%rdi),%cl
   13b65:	94                   	xchg   %eax,%esp
   13b66:	e9 92 02 00 00       	jmp    13dfd <_obstack_memory_used@@Base+0x364d>
   13b6b:	f8                   	clc    
   13b6c:	ff                   	(bad)  
   13b6d:	ff 4c 21 e9          	decl   -0x17(%rcx,%riz,1)
   13b71:	b6 49                	mov    $0x49,%dh
   13b73:	c7 c2 37 49 f7 f9    	mov    $0xf9f74937,%edx
   13b79:	49 ff c2             	inc    %r10
   13b7c:	ce                   	(bad)  
   13b7d:	f7 ff                	idiv   %edi
   13b7f:	ff 80 fb 3f 0f 87    	incl   -0x78f0c005(%rax)
   13b85:	6f                   	outsl  %ds:(%rsi),(%dx)
   13b86:	f7 ff                	idiv   %edi
   13b88:	4c 29 ea             	sub    %r13,%rdx
   13b8b:	15 cc 4c 01 ff       	adc    $0xff014ccc,%eax
   13b90:	48 f7 fe             	idiv   %rsi
   13b93:	7c 5a                	jl     13bef <_obstack_memory_used@@Base+0x343f>
   13b95:	04 82                	add    $0x82,%al
   13b97:	48 01 d0             	add    %rdx,%rax
   13b9a:	3e ff e0             	notrack jmp *%rax
   13b9d:	0f 1f 00             	nopl   (%rax)
   13ba0:	31 c9                	xor    %ecx,%ecx
   13ba2:	4d 21 4d 89          	and    %r9,-0x77(%r13)
   13ba6:	d2 66 0f             	shlb   %cl,0xf(%rsi)
   13ba9:	1f                   	(bad)  
   13baa:	84 00                	test   %al,(%rax)
   13bac:	4c 01 c8             	add    %r9,%rax
   13baf:	00 45 31             	add    %al,0x31(%rbp)
   13bb2:	c0 31 ed             	shlb   $0xed,(%rcx)
   13bb5:	e9 e9 df 02 00       	jmp    41ba3 <obstack_alloc_failed_handler@@Base+0x1fb03>
   13bba:	00 31                	add    %dh,(%rcx)
   13bbc:	c0 b9 23 00 00 00 e9 	sarb   $0xe9,0x23(%rcx)
   13bc3:	c9                   	leave  
   13bc4:	fa                   	cli    
   13bc5:	4c 29 e2             	sub    %r12,%rdx
   13bc8:	c9                   	leave  
   13bc9:	e9 18 fb ff ff       	jmp    136e6 <_obstack_memory_used@@Base+0x2f36>
   13bce:	4c 39 4d 85          	cmp    %r9,-0x7b(%rbp)
   13bd2:	ea                   	(bad)  
   13bd3:	0f 8f 9f 00 00 00    	jg     13c78 <_obstack_memory_used@@Base+0x34c8>
   13bd9:	80 fb 40             	cmp    $0x40,%bl
   13bdc:	0f 84 16 f7 49 29    	je     294b32f8 <obstack_alloc_failed_handler@@Base+0x29491258>
   13be2:	f9                   	stc    
   13be3:	4b bf b8 01 00 00 00 	rex.WXB movabs $0xffba4800000001b8,%r15
   13bea:	48 ba ff 
   13bed:	ff                   	(bad)  
   13bee:	ff 53 ff             	call   *-0x1(%rbx)
   13bf1:	4c 85 e9             	test   %r13,%rcx
   13bf4:	48 d3 e0             	shl    %cl,%rax
   13bf7:	31 c9                	xor    %ecx,%ecx
   13bf9:	48 85 49 09          	test   %rcx,0x9(%rcx)
   13bfd:	ca de 49             	lret   $0x49de
   13c00:	c7 c7 15 fd ff ff    	mov    $0xfffffd15,%edi
   13c06:	c0 a9 00 00 00 a4 0f 	shrb   $0xf,-0x5c000000(%rcx)
   13c0d:	85 4e ff             	test   %ecx,-0x1(%rsi)
   13c10:	ff 0f                	decl   (%rdi)
   13c12:	8f                   	(bad)  
   13c13:	2c ff                	sub    $0xff,%al
   13c15:	ff                   	(bad)  
   13c16:	ff 09                	decl   (%rcx)
   13c18:	4d 31 de             	xor    %r11,%r14
   13c1b:	0f b6 74 24 26       	movzbl 0x26(%rsp),%esi
   13c20:	48 89 ce             	mov    %rcx,%rsi
   13c23:	24 25                	and    $0x25,%al
   13c25:	0f 84 69 07 00 4c    	je     4c014394 <obstack_alloc_failed_handler@@Base+0x4bff22f4>
   13c2b:	39 e8                	cmp    %ebp,%eax
   13c2d:	e5 3f                	in     $0x3f,%eax
   13c2f:	18 00                	sbb    %al,(%rax)
   13c31:	0f 84 48 0f 85 97    	je     ffffffff97864b7f <obstack_alloc_failed_handler@@Base+0xffffffff97842adf>
   13c37:	02 00                	add    (%rax),%al
   13c39:	00 01                	add    %al,(%rcx)
   13c3b:	44 89 d8             	mov    %r11d,%eax
   13c3e:	31 ed                	xor    %ebp,%ebp
   13c40:	b9 5c 00 00 49       	mov    $0x4900005c,%ecx
   13c45:	31 d3                	xor    %edx,%ebx
   13c47:	00 84 c0 0f 84 24 f6 	add    %al,-0x9db7bf1(%rax,%rax,8)
   13c4e:	ff                   	(bad)  
   13c4f:	ff 4d 39             	decl   0x39(%rbp)
   13c52:	fa                   	cli    
   13c53:	76 05                	jbe    13c5a <_obstack_memory_used@@Base+0x34aa>
   13c55:	43 c6 04 0f 85       	movb   $0x85,(%r15,%r9,1)
   13c5a:	60                   	(bad)  
   13c5b:	03 00                	add    (%rax),%eax
   13c5d:	00 03                	add    %al,(%rbx)
   13c5f:	00 00                	add    %al,(%rax)
   13c61:	49 c7 c0 7d 00 4c 31 	mov    $0x314c007d,%r8
   13c68:	c3                   	ret    
   13c69:	49 83 c7 02          	add    $0x2,%r15
   13c6d:	45                   	rex.RB
   13c6e:	49 c1 ea 49          	shr    $0x49,%r10
   13c72:	29 d0                	sub    %edx,%eax
   13c74:	ff 0f                	decl   (%rdi)
   13c76:	1f                   	(bad)  
   13c77:	00 80 fb 7d 74 7b    	add    %al,0x7b747dfb(%rax)
   13c7d:	7e 2a                	jle    13ca9 <_obstack_memory_used@@Base+0x34f9>
   13c7f:	31 c0                	xor    %eax,%eax
   13c81:	80 fb 7e             	cmp    $0x7e,%bl
   13c84:	0f e9 2b             	psubsw (%rbx),%mm5
   13c87:	fe                   	(bad)  
   13c88:	ff                   	(bad)  
   13c89:	ff 4d 85             	decl   -0x7b(%rbp)
   13c8c:	c9                   	leave  
   13c8d:	0f 84 19 0f 8f 0c    	je     c904bac <obstack_alloc_failed_handler@@Base+0xc8e2b0c>
   13c93:	fe                   	(bad)  
   13c94:	ff                   	(bad)  
   13c95:	ff 00                	incl   (%rax)
   13c97:	4c 31 fe             	xor    %r15,%rsi
   13c9a:	c1 02 41             	roll   $0x41,(%rdx)
   13c9d:	89 c0                	mov    %eax,%eax
   13c9f:	0f 94 48 49          	sete   0x49(%rax)
   13ca3:	39 fb                	cmp    %edi,%ebx
   13ca5:	c8 0f 8f 72          	enter  $0x8f0f,$0x72
   13ca9:	fd                   	std    
   13caa:	ff                   	(bad)  
   13cab:	ff                   	(bad)  
   13cac:	b9 7b 00 00 0f       	mov    $0xf00007b,%ecx
   13cb1:	85 4c 89 ea          	test   %ecx,-0x16(%rcx,%rcx,4)
   13cb5:	ff 82 fe ff ff b9    	incl   -0x46000002(%rdx)
   13cbb:	7c 00                	jl     13cbd <_obstack_memory_used@@Base+0x350d>
   13cbd:	00 00                	add    %al,(%rax)
   13cbf:	80 fb 7c             	cmp    $0x7c,%bl
   13cc2:	0f 84 49 c7 c6 e9    	je     ffffffffe9c80411 <obstack_alloc_failed_handler@@Base+0xffffffffe9c5e371>
   13cc8:	2e fd                	cs std 
   13cca:	ff                   	(bad)  
   13ccb:	ff                   	(bad)  
   13ccc:	ff 0f                	decl   (%rdi)
   13cce:	1f                   	(bad)  
   13ccf:	00 b9 7d 4c 21 f6    	add    %bh,-0x9deb383(%rcx)
   13cd5:	49 f7 f8             	idiv   %r8
   13cd8:	b5 fc                	mov    $0xfc,%ch
   13cda:	ff                   	(bad)  
   13cdb:	ff                   	(bad)  
   13cdc:	fe 0f                	decb   (%rdi)
   13cde:	84 9f 02 00 00 10    	test   %bl,0x10000002(%rdi)
   13ce4:	49 c7 c1 d9 fc ff ff 	mov    $0xfffffffffffffcd9,%r9
   13ceb:	de 4d 89             	fimuls -0x77(%rbp)
   13cee:	f0 00 f9             	lock add %bh,%cl
   13cf1:	ff                   	(bad)  
   13cf2:	ff 0f                	decl   (%rdi)
   13cf4:	1f                   	(bad)  
   13cf5:	44 00 00             	add    %r8b,(%rax)
   13cf8:	7c 40                	jl     13d3a <_obstack_memory_used@@Base+0x358a>
   13cfa:	c0 b9 7d 00 00 00 e9 	sarb   $0xe9,0x7d(%rcx)
   13d01:	37                   	(bad)  
   13d02:	fe 49 4d             	decb   0x4d(%rcx)
   13d05:	21 db                	and    %ebx,%ebx
   13d07:	00 80 fb 7a 7f 43    	add    %al,0x437f7afb(%rax)
   13d0d:	80 fb 40             	cmp    $0x40,%bl
   13d10:	0f 84 e5 f5 ff ff    	je     132fb <_obstack_memory_used@@Base+0x2b4b>
   13d16:	8d 4b bf             	lea    -0x41(%rbx),%ecx
   13d19:	b8 01 49 c7 c0       	mov    $0xc0c74901,%eax
   13d1e:	2d 02 00 00 ff       	sub    $0xff000002,%eax
   13d23:	53                   	push   %rbx
   13d24:	ff                   	(bad)  
   13d25:	ff                   	(bad)  
   13d26:	ff 03                	incl   (%rbx)
   13d28:	48 d3 e0             	shl    %cl,%rax
   13d2b:	44 89 c1             	mov    %r8d,%ecx
   13d2e:	48 85 d0             	test   %rdx,%rax
   13d31:	0f 85 a9 f4 ff ff    	jne    131e0 <_obstack_memory_used@@Base+0x2a30>
   13d37:	89 d9                	mov    %ebx,%ecx
   13d39:	a9 00 4d 89 db       	test   $0xdb894d00,%eax
   13d3e:	0f 85 1c fe ff ff    	jne    13b60 <_obstack_memory_used@@Base+0x33b0>
   13d44:	e9 4d 31 c8 ff       	jmp    ffffffffffc96e96 <obstack_alloc_failed_handler@@Base+0xffffffffffc74df6>
   13d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13d50:	80 fb 7d             	cmp    $0x7d,%bl
   13d53:	0f                   	(bad)  
   13d54:	0f 8c 09 49 f7 fe    	jl     fffffffffef88663 <obstack_alloc_failed_handler@@Base+0xfffffffffef665c3>
   13d5a:	c1 fc ff             	sar    $0xff,%esp
   13d5d:	ff 80 fb 7e 0f 84    	incl   -0x7bf08105(%rax)
   13d63:	23 ff                	and    %edi,%edi
   13d65:	4c 39 fa             	cmp    %r15,%rdx
   13d68:	8f                   	(bad)  
   13d69:	f5                   	cmc    
   13d6a:	ff                   	(bad)  
   13d6b:	ff                   	(bad)  
   13d6c:	b9 7b 00 4c 89       	mov    $0x894c007b,%ecx
   13d71:	f6 fb                	idiv   %bl
   13d73:	7b 0f                	jnp    13d84 <_obstack_memory_used@@Base+0x35d4>
   13d75:	84 c2                	test   %al,%dl
   13d77:	fd                   	std    
   13d78:	ff                   	(bad)  
   13d79:	ff                   	(bad)  
   13d7a:	b9 7c 0f 84 12       	mov    $0x12840f7c,%ecx
   13d7f:	fd                   	std    
   13d80:	ff                   	(bad)  
   13d81:	ff 49 85             	decl   -0x7b(%rcx)
   13d84:	f3 48 ff c6          	repz inc %rsi
   13d88:	e9 48 89 d0 ff       	jmp    ffffffffffd1c6d5 <obstack_alloc_failed_handler@@Base+0xffffffffffcfa635>
   13d8d:	0f b6 7c 24 26       	movzbl 0x26(%rsp),%edi
   13d92:	41 83 fd 48          	cmp    $0x48,%r13d
   13d96:	ff c6                	inc    %esi
   13d98:	f7 fc                	idiv   %esp
   13d9a:	85 ff                	test   %edi,%edi
   13d9c:	74 27                	je     13dc5 <_obstack_memory_used@@Base+0x3615>
   13d9e:	0f 94 c1             	sete   %cl
   13da1:	21 c2                	and    %eax,%edx
   13da3:	84 d1                	test   %dl,%cl
   13da5:	0f 85 48 c1 eb 05    	jne    5ecfef3 <obstack_alloc_failed_handler@@Base+0x5eade53>
   13dab:	83 f7 01             	xor    $0x1,%edi
   13dae:	89 fa                	mov    %edi,%edx
   13db0:	40 20 f8             	and    %dil,%al
   13db3:	0f 84 f1 03 00 00    	je     141aa <_obstack_memory_used@@Base+0x39fa>
   13db9:	80 4d 31 c2          	orb    $0xc2,0x31(%rbp)
   13dbd:	e6 0f                	out    %al,$0xf
   13dbf:	49 c7 c1 c8 03 00 00 	mov    $0x3c8,%r9
   13dc6:	24 49                	and    $0x49,%al
   13dc8:	29 d9                	sub    %ebx,%ecx
   13dca:	85 1a                	test   %ebx,(%rdx)
   13dcc:	05 00 0f 85 c1       	add    $0xc1850f00,%eax
   13dd1:	02 00                	add    (%rax),%al
   13dd3:	49 31 fa             	xor    %rdi,%r10
   13dd6:	e2 00                	loop   13dd8 <_obstack_memory_used@@Base+0x3628>
   13dd8:	00 25 44 89 e9 40    	add    %ah,0x40e98944(%rip)        # 40eac722 <obstack_alloc_failed_handler@@Base+0x40e8a682>
   13dde:	01 00                	add    %eax,(%rax)
   13de0:	00 83 7c 24 50 4d    	add    %al,0x4d50247c(%rbx)
   13de6:	85 c0                	test   %eax,%eax
   13de8:	f8                   	clc    
   13de9:	49 29 f3             	sub    %rsi,%r11
   13dec:	e2 19                	loop   13e07 <_obstack_memory_used@@Base+0x3657>
   13dee:	0f 84 eb 04 00 00    	je     142df <_obstack_memory_used@@Base+0x3b2f>
   13df4:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   13df9:	88 44 24 7c          	mov    %al,0x7c(%rsp)
   13dfd:	48                   	rex.W
   13dfe:	49 c7 c7 37 01 00 00 	mov    $0x137,%r15
   13e05:	49 01 f8             	add    %rdi,%r8
   13e08:	00 00                	add    %al,(%rax)
   13e0a:	41 bb 02 00 0f 8f    	mov    $0x8f0f0002,%r11d
   13e10:	bd 00 00 00 27       	mov    $0x27000000,%ebp
   13e15:	c6 44 24 26 00       	movb   $0x0,0x26(%rsp)
   13e1a:	48 c7 44 24 18 01 00 	movq   $0x21490001,0x18(%rsp)
   13e21:	49 21 
   13e23:	fd                   	std    
   13e24:	89 4c 09 d9          	mov    %ecx,-0x27(%rcx,%rcx,1)
   13e28:	e9 64 f2 ff ff       	jmp    13091 <_obstack_memory_used@@Base+0x28e1>
   13e2d:	48 c7 c0 f4 fe ff 48 	mov    $0x48fffef4,%rax
   13e34:	31 db                	xor    %ebx,%ebx
   13e36:	84 fc                	test   %bh,%ah
   13e38:	fd                   	std    
   13e39:	ff 0f                	decl   (%rdi)
   13e3b:	8c 50 01             	mov    %ss,0x1(%rax)
   13e3e:	00 00                	add    %al,(%rax)
   13e40:	45 89 0f             	mov    %r9d,(%r15)
   13e43:	85 33                	test   %esi,(%rbx)
   13e45:	fc                   	cld    
   13e46:	ff                   	(bad)  
   13e47:	ff e6                	jmp    *%rsi
   13e49:	4d 89 d4             	mov    %r10,%r12
   13e4c:	89 e8                	mov    %ebp,%eax
   13e4e:	e9 86 f4 ff ff       	jmp    132d9 <_obstack_memory_used@@Base+0x2b29>
   13e53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13e58:	80 7c 24 26 00       	cmpb   $0x0,0x26(%rsp)
   13e5d:	75 dc                	jne    13e3b <_obstack_memory_used@@Base+0x368b>
   13e5f:	4d 85 d2             	test   %r10,%r10
   13e62:	0f 84 8d 48 85 f9    	je     fffffffff98686f5 <obstack_alloc_failed_handler@@Base+0xfffffffff9846655>
   13e68:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
   13e6e:	0f 85 81 01 00 00    	jne    13ff5 <_obstack_memory_used@@Base+0x3845>
   13e74:	4c 89 54 24 50       	mov    %r10,0x50(%rsp)
   13e79:	48 31 f2             	xor    %rsi,%rdx
   13e7c:	40 88 6c 24 7c       	mov    %bpl,0x7c(%rsp)
   13e81:	49 83 c7 03          	add    $0x3,%r15
   13e85:	31 c0                	xor    %eax,%eax
   13e87:	45 31 db             	xor    %r11d,%r11d
   13e8a:	b9 27 00 00 00       	mov    $0x27,%ecx
   13e8f:	48 c1 e1 2c          	shl    $0x2c,%rcx
   13e93:	ff 0f                	decl   (%rdi)
   13e95:	1f                   	(bad)  
   13e96:	40 00 80 7c 24 26 00 	rex add %al,0x26247c(%rax)
   13e9d:	75 9c                	jne    13e3b <_obstack_memory_used@@Base+0x368b>
   13e9f:	31 ed                	xor    %ebp,%ebp
   13ea1:	31 c0                	xor    %eax,%eax
   13ea3:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   13ea8:	e9 49 f7 f9 0f       	jmp    ffb35f6 <obstack_alloc_failed_handler@@Base+0xff91556>
   13ead:	8c 92 00 00 00 e4    	mov    %ss,-0x1c000000(%rdx)
   13eb3:	0f 84 fb fa ff ff    	je     139b4 <_obstack_memory_used@@Base+0x3204>
   13eb9:	4c 0f af f1          	imul   %rcx,%r14
   13ebd:	f9                   	stc    
   13ebe:	4c                   	rex.WR
   13ebf:	49 01 de             	add    %rbx,%r14
   13ec2:	c1 ef 17             	shr    $0x17,%edi
   13ec5:	df 44 0f b6          	filds  -0x4a(%rdi,%rcx,1)
   13ec9:	44 24 7d             	rex.R and $0x7d,%al
   13ecc:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   13ed1:	31 ed                	xor    %ebp,%ebp
   13ed3:	49 c7 c4 ce 02 00 00 	mov    $0x2ce,%r12
   13eda:	b6 5c                	mov    $0x5c,%dh
   13edc:	4c 39 da             	cmp    %r11,%rdx
   13edf:	b6 5c                	mov    $0x5c,%dh
   13ee1:	24 7e                	and    $0x7e,%al
   13ee3:	4c                   	rex.WR
   13ee4:	48                   	rex.W
   13ee5:	49 c7 c5 33 fd ff ff 	mov    $0xfffffffffffffd33,%r13
   13eec:	8b 74 24 68          	mov    0x68(%rsp),%esi
   13ef0:	4c 8b 54 24 70       	mov    0x70(%rsp),%r10
   13ef5:	44 8b 6c 24 40       	mov    0x40(%rsp),%r13d
   13efa:	0f b6 0f             	movzbl (%rdi),%ecx
   13efd:	8f 40 01             	pop    0x1(%rax)
   13f00:	00 00                	add    %al,(%rax)
   13f02:	ff                   	(bad)  
   13f03:	ff 0f                	decl   (%rdi)
   13f05:	1f                   	(bad)  
   13f06:	40 00 49 83          	rex add %cl,-0x7d(%rcx)
   13f0a:	fc                   	cld    
   13f0b:	01 0f                	add    %ecx,(%rdi)
   13f0d:	86 70 fa             	xchg   %dh,-0x6(%rax)
   13f10:	ff                   	(bad)  
   13f11:	ff 48 8b             	decl   -0x75(%rax)
   13f14:	44 24 10             	rex.R and $0x10,%al
   13f17:	4d 31 cd             	xor    %r9,%r13
   13f1a:	20 4a 4c             	and    %cl,0x4c(%rdx)
   13f1d:	21 d8                	and    %ebx,%eax
   13f1f:	01 4c 21 e1          	add    %ecx,-0x1f(%rcx,%riz,1)
   13f23:	eb 10                	jmp    13f35 <_obstack_memory_used@@Base+0x3785>
   13f25:	0f 1f 00             	nopl   (%rax)
   13f28:	48                   	rex.W
   13f29:	4d 01 db             	add    %r11,%r11
   13f2c:	86 fc                	xchg   %bh,%ah
   13f2e:	ff                   	(bad)  
   13f2f:	ff 84 49 c1 ea 3b 0f 	incl   0xf3beac1(%rcx,%rcx,2)
   13f36:	b6 02                	mov    $0x2,%dh
   13f38:	83 e8 5b             	sub    $0x5b,%eax
   13f3b:	75 70                	jne    13fad <_obstack_memory_used@@Base+0x37fd>
   13f3d:	77 e9                	ja     13f28 <_obstack_memory_used@@Base+0x3778>
   13f3f:	4d 39 d7             	cmp    %r10,%r15
   13f42:	00 00                	add    %al,(%rax)
   13f44:	00 02                	add    %al,(%rdx)
   13f46:	00 00                	add    %al,(%rax)
   13f48:	00 48 0f             	add    %cl,0xf(%rax)
   13f4b:	a3 48 f7 f9 4d 85 e1 	movabs %eax,0xf24e1854df9f748
   13f52:	24 0f 
   13f54:	4c 31 49 0f          	xor    %r9,0xf(%rcx)
   13f58:	af                   	scas   %es:(%rdi),%eax
   13f59:	c4                   	(bad)  
   13f5a:	8b 6c 24 68          	mov    0x68(%rsp),%ebp
   13f5e:	4c 8b 64 48 c7       	mov    -0x39(%rax,%rcx,2),%r12
   13f63:	c7                   	(bad)  
   13f64:	cc                   	int3   
   13f65:	fc                   	cld    
   13f66:	ff                   	(bad)  
   13f67:	ff                   	(bad)  
   13f68:	ef                   	out    %eax,(%dx)
   13f69:	f5                   	cmc    
   13f6a:	ff                   	(bad)  
   13f6b:	ff 83 4d 39 f4 fd    	incl   -0x20bc6b3(%rbx)
   13f71:	31 0f                	xor    %ecx,(%rdi)
   13f73:	84 76 01             	test   %dh,0x1(%rsi)
   13f76:	00 00                	add    %al,(%rax)
   13f78:	ff                   	(bad)  
   13f79:	ff 44 24 08          	incl   0x8(%rsp)
   13f7d:	e9 d0 fd ff ff       	jmp    13d52 <_obstack_memory_used@@Base+0x35a2>
   13f82:	89 44 0f 48          	mov    %eax,0x48(%rdi,%rcx,1)
   13f86:	c1 ee 24             	shr    $0x24,%esi
   13f89:	ff                   	(bad)  
   13f8a:	ff 0f                	decl   (%rdi)
   13f8c:	1f                   	(bad)  
   13f8d:	44 00 00             	add    %r8b,(%rax)
   13f90:	4c 89 fe             	mov    %r15,%rsi
   13f93:	4d 39 fa             	cmp    %r15,%r10
   13f96:	76 0b                	jbe    13fa3 <_obstack_memory_used@@Base+0x37f3>
   13f98:	44 89 49 ff          	mov    %r9d,-0x1(%rcx)
   13f9c:	c5 04 36             	(bad)
   13f9f:	5c                   	pop    %rsp
   13fa0:	41 89 c3             	mov    %eax,%r11d
   13fa3:	4c 8d 7e 01          	lea    0x1(%rsi),%r15
   13fa7:	41                   	rex.B
   13fa8:	49 c7 c5 9d fd ff ff 	mov    $0xfffffffffffffd9d,%r13
   13faf:	00 00                	add    %al,(%rax)
   13fb1:	49                   	rex.WB
   13fb2:	4d 31 c5             	xor    %r8,%r13
   13fb5:	b9 30 00 00 00       	mov    $0x30,%ecx
   13fba:	4c 39 e0             	cmp    %r12,%rax
   13fbd:	48 f7 ff             	idiv   %rdi
   13fc0:	8b 44 24 10          	mov    0x10(%rsp),%eax
   13fc4:	42 0f b6 44 08 01    	movzbl 0x1(%rax,%r9,1),%eax
   13fca:	88 44 24 27          	mov    %al,0x27(%rsp)
   13fce:	83 e8 30             	sub    $0x30,%eax
   13fd1:	3c e9                	cmp    $0xe9,%al
   13fd3:	74 01                	je     13fd6 <_obstack_memory_used@@Base+0x3826>
   13fd5:	00 00                	add    %al,(%rax)
   13fd7:	00 00                	add    %al,(%rax)
   13fd9:	0f b6 44 24 25       	movzbl 0x25(%rsp),%eax
   13fde:	83 f0 01             	xor    $0x1,%eax
   13fe1:	08 d0                	or     %dl,%al
   13fe3:	89 e8                	mov    %ebp,%eax
   13fe5:	bd 00 00 00 00       	mov    $0x0,%ebp
   13fea:	0f 48 39             	cmovs  (%rcx),%edi
   13fed:	db ff                	(bad)  
   13fef:	ff                   	(bad)  
   13ff0:	e9 17 f2 ff ff       	jmp    1320c <_obstack_memory_used@@Base+0x2a5c>
   13ff5:	4d 39 fa             	cmp    %r15,%r10
   13ff8:	76 05                	jbe    13fff <_obstack_memory_used@@Base+0x384f>
   13ffa:	43 c6 04 3e 27       	movb   $0x27,(%r14,%r15,1)
   13fff:	49 8d 47 01          	lea    0x1(%r15),%rax
   14003:	49 39 c2             	cmp    %rax,%r10
   14006:	76 06                	jbe    1400e <_obstack_memory_used@@Base+0x385e>
   14008:	43                   	rex.XB
   14009:	4c                   	rex.WR
   1400a:	49 c1 e6 11          	shl    $0x11,%r14
   1400e:	c7                   	(bad)  
   1400f:	51                   	push   %rcx
   14010:	74 e9                	je     13ffb <_obstack_memory_used@@Base+0x384b>
   14012:	ff                   	(bad)  
   14013:	39 c2                	cmp    %eax,%edx
   14015:	0f 86 61 fe ff ff    	jbe    13e7c <_obstack_memory_used@@Base+0x36cc>
   1401b:	43 c6 44 3e 02 27    	movb   $0x27,0x2(%r14,%r15,1)
   14021:	e9 56 fe ff ff       	jmp    13e7c <_obstack_memory_used@@Base+0x36cc>
   14026:	0f b6 6c 24 27       	movzbl 0x27(%rsp),%ebp
   1402b:	89 d9                	mov    %ebx,%ecx
   1402d:	48 ff c7             	inc    %rdi
   14030:	ff                   	(bad)  
   14031:	ff 4d 4c             	decl   0x4c(%rbp)
   14034:	89 c2                	mov    %eax,%edx
   14036:	0f 85 a5 02 00 00    	jne    142e1 <_obstack_memory_used@@Base+0x3b31>
   1403c:	0f 85 39 fe ff ff    	jne    13e7b <_obstack_memory_used@@Base+0x36cb>
   14042:	0f 84 ba 02 00 00    	je     14302 <_obstack_memory_used@@Base+0x3b52>
   14048:	21 4d 89             	and    %ecx,-0x77(%rbp)
   1404b:	c9                   	leave  
   1404c:	c1 e9 0f             	shr    $0xf,%ecx
   1404f:	c2 b6 6c             	ret    $0x6cb6
   14052:	24 27                	and    $0x27,%al
   14054:	89 49 c1             	mov    %ecx,-0x3f(%rcx)
   14057:	e6 37                	out    %al,$0x37
   14059:	fb                   	sti    
   1405a:	ff 41 0f             	incl   0xf(%rcx)
   1405d:	b6 4c                	mov    $0x4c,%dh
   1405f:	0f 48 85 c8 e9 4d 31 	cmovs  0x314de9c8(%rbp),%eax
   14066:	c6                   	(bad)  
   14067:	bc 24 ac 00 00       	mov    $0xac24,%esp
   1406c:	00 e9                	add    %ch,%cl
   1406e:	17                   	(bad)  
   1406f:	f9                   	stc    
   14070:	ff                   	(bad)  
   14071:	ff 45 31             	incl   0x31(%rbp)
   14074:	c0 e9 45             	shr    $0x45,%cl
   14077:	48 c1 ee 21          	shr    $0x21,%rsi
   1407b:	e8 b9 30 00 7f       	call   7f017139 <obstack_alloc_failed_handler@@Base+0x7eff5099>
   14080:	da d7                	fcmovbe %st(7),%st
   14082:	0f af fb             	imul   %ebx,%edi
   14085:	f1                   	int1   
   14086:	ff 4d 21             	decl   0x21(%rbp)
   14089:	e3 fa                	jrcxz  14085 <_obstack_memory_used@@Base+0x38d5>
   1408b:	76 05                	jbe    14092 <_obstack_memory_used@@Base+0x38e2>
   1408d:	43                   	rex.XB
   1408e:	4c 31 ee             	xor    %r13,%rsi
   14091:	30 48 8d             	xor    %cl,-0x73(%rax)
   14094:	46 0f 84 7b 49 85 d9 	rex.RX je ffffffffd9868a16 <obstack_alloc_failed_handler@@Base+0xffffffffd9846976>
   1409b:	41 c6 44 36 02 30    	movb   $0x30,0x2(%r14,%rsi,1)
   140a1:	4c                   	rex.WR
   140a2:	48 89 ce             	mov    %rcx,%rsi
   140a5:	b9 30 4c 0f 48       	mov    $0x480f4c30,%ecx
   140aa:	c7 c6 ca 02 00 00    	mov    $0x2ca,%esi
   140b0:	89 f8                	mov    %edi,%eax
   140b2:	49 ff c0             	inc    %r8
   140b5:	c6                   	(bad)  
   140b6:	78 48                	js     14100 <_obstack_memory_used@@Base+0x3950>
   140b8:	09 d1                	or     %edx,%ecx
   140ba:	84 c0                	test   %al,%al
   140bc:	48 ff c1             	inc    %rcx
   140bf:	ef                   	out    %eax,(%dx)
   140c0:	49 39 dc             	cmp    %rbx,%r12
   140c3:	0f                   	(bad)  
   140c4:	0f 85 26 fe ff ff    	jne    13ef0 <_obstack_memory_used@@Base+0x3740>
   140ca:	fc                   	cld    
   140cb:	76 05                	jbe    140d2 <_obstack_memory_used@@Base+0x3922>
   140cd:	49 c1 ec 0d          	shr    $0xd,%r12
   140d1:	00 49 83             	add    %cl,-0x7d(%rcx)
   140d4:	c7 01 42 0f b6 04    	movl   $0x4b60f42,(%rcx)
   140da:	3a 84 c0 75 e9 e9 68 	cmp    0x68e9e975(%rax,%rax,8),%al
   140e1:	ef                   	out    %eax,(%dx)
   140e2:	ff                   	(bad)  
   140e3:	ff 4c 8b 64          	decl   0x64(%rbx,%rcx,4)
   140e7:	24 0f                	and    $0xf,%al
   140e9:	84 e0                	test   %ah,%al
   140eb:	fc                   	cld    
   140ec:	ff                   	(bad)  
   140ed:	ff                   	(bad)  
   140ee:	f8                   	clc    
   140ef:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   140f4:	0f 8f c8 fe ff ff    	jg     13fc2 <_obstack_memory_used@@Base+0x3812>
   140fa:	c6                   	(bad)  
   140fb:	39 00                	cmp    %eax,(%rax)
   140fd:	00 00                	add    %al,(%rax)
   140ff:	48                   	rex.W
   14100:	48 ff c7             	inc    %rdi
   14103:	0f b6 5c 24 7f       	movzbl 0x7f(%rsp),%ebx
   14108:	4c e9 48 c1 eb 15    	rex.WR jmp 15ed0256 <obstack_alloc_failed_handler@@Base+0x15eae1b6>
   1410e:	00 00                	add    %al,(%rax)
   14110:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   14115:	4c 8b 4c 29 e3       	mov    -0x1d(%rcx,%rbp,1),%r9
   1411a:	44 8b 6c 24 40       	mov    0x40(%rsp),%r13d
   1411f:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   14124:	4c 39 e0             	cmp    %r12,%rax
   14127:	72 14                	jb     1413d <_obstack_memory_used@@Base+0x398d>
   14129:	eb 1b                	jmp    14146 <_obstack_memory_used@@Base+0x3996>
   1412b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14130:	48 83 c2 01          	add    $0x1,%rdx
   14134:	49 8d 0f             	lea    (%r15),%rcx
   14137:	8f                   	(bad)  
   14138:	fa                   	cli    
   14139:	02 00                	add    (%rax),%al
   1413b:	00 ff                	add    %bh,%bh
   1413d:	ff                   	(bad)  
   1413e:	3c 01                	cmp    $0x1,%al
   14140:	00 75 4d             	add    %dh,0x4d(%rbp)
   14143:	4c 31 ef             	xor    %r13,%rdi
   14146:	0f b6 54 49 01       	movzbl 0x1(%rcx,%rcx,2),%edx
   1414b:	fd                   	std    
   1414c:	ed                   	in     (%dx),%eax
   1414d:	e9 a5 0f 84 c3       	jmp    ffffffffc38550f7 <obstack_alloc_failed_handler@@Base+0xffffffffc3833057>
   14152:	00 00                	add    %al,(%rax)
   14154:	00 29                	add    %ch,(%rcx)
   14156:	e1 f9                	loope  14151 <_obstack_memory_used@@Base+0x39a1>
   14158:	3e 0f 4d 29          	ds cmovge (%rcx),%ebp
   1415c:	e2 ff                	loop   1415d <_obstack_memory_used@@Base+0x39ad>
   1415e:	ff 48 e9             	decl   -0x17(%rax)
   14161:	0f 8c 2e fe 0f 85    	jl     ffffffff85113f95 <obstack_alloc_failed_handler@@Base+0xffffffff850f1ef5>
   14167:	24 03                	and    $0x3,%al
   14169:	00 00                	add    %al,(%rax)
   1416b:	ff 83 e2 01 0f 85    	incl   -0x7af0fe1e(%rbx)
   14171:	4c 01 d8             	add    %r11,%rax
   14174:	49 c1 e6 03          	shl    $0x3,%r14
   14178:	3f                   	(bad)  
   14179:	00 00                	add    %al,(%rax)
   1417b:	00 e9                	add    %ch,%cl
   1417d:	f0 f1                	lock int1 
   1417f:	ff 49 0f             	decl   0xf(%rcx)
   14182:	af                   	scas   %es:(%rdi),%eax
   14183:	f6 0f 8f             	testb  $0x8f,(%rdi)
   14186:	c6 01 00             	movb   $0x0,(%rcx)
   14189:	00 24 26             	add    %ah,(%rsi,%riz,1)
   1418c:	01 bd 01 00 00 00    	add    %edi,0x1(%rbp)
   14192:	45 31 ff             	xor    %r15d,%r15d
   14195:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1419c:	00 00 
   1419e:	4d 01 d0             	add    %r10,%r8
   141a1:	4c 85 ce             	test   %r9,%rsi
   141a4:	48 89 c1             	mov    %rax,%rcx
   141a7:	ff 89 c2 48 8b 44    	decl   0x448b48c2(%rcx)
   141ad:	24 48                	and    $0x48,%al
   141af:	48 85 c0             	test   %rax,%rax
   141b2:	74 30                	je     141e4 <_obstack_memory_used@@Base+0x3a34>
   141b4:	84 d2                	test   %dl,%dl
   141b6:	74 2c                	je     141e4 <_obstack_memory_used@@Base+0x3a34>
   141b8:	0f b6 08             	movzbl (%rax),%ecx
   141bb:	84 c9                	test   %cl,%cl
   141bd:	74 25                	je     141e4 <_obstack_memory_used@@Base+0x3a34>
   141bf:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   141c6:	00 
   141c7:	4c 89 fa             	mov    %r15,%rdx
   141ca:	4c 29 49 c7          	sub    %r9,-0x39(%rcx)
   141ce:	c1 86 01 0f 84 57 01 	roll   $0x1,0x57840f01(%rsi)
   141d5:	00 00                	add    %al,(%rax)
   141d7:	c2 01 0f             	ret    $0xf01
   141da:	b6 0f                	mov    $0xf,%dh
   141dc:	84 50 fe             	test   %dl,-0x2(%rax)
   141df:	ff                   	(bad)  
   141e0:	ff 49 89             	decl   -0x77(%rcx)
   141e3:	d7                   	xlat   %ds:(%rbx)
   141e4:	4d 39 fa             	cmp    %r15,%r10
   141e7:	0f 87 49 f7 fe 00    	ja     1003936 <obstack_alloc_failed_handler@@Base+0xfe1896>
   141ed:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   141f4:	00 
   141f5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   141fc:	00 00 
   141fe:	0f 85 a3 01 00 00    	jne    143a7 <_obstack_memory_used@@Base+0x3bf7>
   14204:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1420b:	4c 89 f8             	mov    %r15,%rax
   1420e:	5b                   	pop    %rbx
   1420f:	5d                   	pop    %rbp
   14210:	41 5c                	pop    %r12
   14212:	41 5d                	pop    %r13
   14214:	41 5e                	pop    %r14
   14216:	41 5f                	pop    %r15
   14218:	c3                   	ret    
   14219:	45 89 eb             	mov    %r13d,%r11d
   1421c:	0f 49 09             	cmovns (%rcx),%ecx
   1421f:	dc ff                	fdivr  %st,%st(7)
   14221:	ff 4d 89             	decl   -0x77(%rbp)
   14224:	d4                   	(bad)  
   14225:	e9 b7 f0 ff ff       	jmp    132e1 <_obstack_memory_used@@Base+0x2b31>
   1422a:	44 89 de             	mov    %r11d,%esi
   1422d:	48 89 c7             	mov    %rax,%rdi
   14230:	e8 ab 9a ff ff       	call   dce0 <__sprintf_chk@plt+0x9000>
   14235:	44 8b 4d 0f          	mov    0xf(%rbp),%r9d
   14239:	af                   	scas   %es:(%rdi),%eax
   1423a:	c5 89 84             	(bad)
   1423d:	24 88                	and    $0x88,%al
   1423f:	49 39 d4             	cmp    %rdx,%r12
   14242:	e9 fa ed ff ff       	jmp    13041 <_obstack_memory_used@@Base+0x2891>
   14247:	44 89 de             	mov    %r11d,%esi
   1424a:	48 89 c7             	mov    %rax,%rdi
   1424d:	49 c7 c7 cf 02 00 00 	mov    $0x2cf,%r15
   14254:	e0 25                	loopne 1427b <_obstack_memory_used@@Base+0x3acb>
   14256:	20 48 89             	and    %cl,-0x77(%rax)
   14259:	84 24 49             	test   %ah,(%rcx,%rcx,2)
   1425c:	ff c7                	inc    %edi
   1425e:	00 e9                	add    %ch,%cl
   14260:	ac                   	lods   %ds:(%rsi),%al
   14261:	ed                   	in     (%dx),%eax
   14262:	ff 49 85             	decl   -0x7b(%rcx)
   14265:	c8 24 26 00          	enter  $0x2624,$0x0
   14269:	75 ae                	jne    14219 <_obstack_memory_used@@Base+0x3a69>
   1426b:	4d 39 fa             	cmp    %r15,%r10
   1426e:	76 05                	jbe    14275 <_obstack_memory_used@@Base+0x3ac5>
   14270:	0f 84 04 ff ff ff    	je     1417a <_obstack_memory_used@@Base+0x39ca>
   14276:	8d 57 01             	lea    0x1(%rdi),%edx
   14279:	49 39 d2             	cmp    %rdx,%r10
   1427c:	76 06                	jbe    14284 <_obstack_memory_used@@Base+0x3ad4>
   1427e:	43 c6 44 49 f7 f8    	movb   $0xf8,-0x9(%r9,%r9,2)
   14284:	49 8d 57 02          	lea    0x2(%r15),%rdx
   14288:	49 39 d2             	cmp    %rdx,%r10
   1428b:	76 06                	jbe    14293 <_obstack_memory_used@@Base+0x3ae3>
   1428d:	43 c6 44 3e 02 22    	movb   $0x22,0x2(%r14,%r15,1)
   14293:	49 8d 57 03          	lea    0x3(%r15),%rdx
   14297:	49 39 4c 01 c7       	cmp    %rcx,-0x39(%r9,%rax,1)
   1429c:	43 c6 44 3e 03 4d    	movb   $0x4d,0x3(%r14,%r15,1)
   142a2:	39 d8                	cmp    %ebx,%eax
   142a4:	c7                   	(bad)  
   142a5:	48 f7 fb             	idiv   %rbx
   142a8:	31 ed                	xor    %ebp,%ebp
   142aa:	49 89 c1             	mov    %rax,%r9
   142ad:	e9 27 fd ff ff       	jmp    13fd9 <_obstack_memory_used@@Base+0x3829>
   142b2:	48 8b 84 24 98 00 48 	mov    -0x38b7ff68(%rsp),%rax
   142b9:	c7 
   142ba:	c7                   	(bad)  
   142bb:	d7                   	xlat   %ds:(%rbx)
   142bc:	01 00                	add    %eax,(%rax)
   142be:	00 e9                	add    %ch,%cl
   142c0:	29 ff                	sub    %edi,%edi
   142c2:	ff                   	(bad)  
   142c3:	ff 45 89             	incl   -0x77(%rbp)
   142c6:	eb 4d                	jmp    14315 <_obstack_memory_used@@Base+0x3b65>
   142c8:	89 f5                	mov    %esi,%ebp
   142ca:	4d 89 e6             	mov    %r12,%r14
   142cd:	4d 89 d4             	mov    %r10,%r12
   142d0:	41                   	rex.B
   142d1:	49 f7 fe             	idiv   %r14
   142d4:	0f 84 4c 09 cf 48    	je     48d04c26 <obstack_alloc_failed_handler@@Base+0x48ce2b86>
   142da:	c7 c3 f6 00 00 00    	mov    $0xf6,%ebx
   142e0:	b6 4c                	mov    $0x4c,%dh
   142e2:	31 ca                	xor    %ecx,%edx
   142e4:	e9 c1 fe ff ff       	jmp    141aa <_obstack_memory_used@@Base+0x39fa>
   142e9:	e8 82 05 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   142ee:	49 01 c4             	add    %rax,%r12
   142f1:	00 00                	add    %al,(%rax)
   142f3:	00 49 c7             	add    %cl,-0x39(%rcx)
   142f6:	c1 dd fe             	rcr    $0xfe,%ebp
   142f9:	ff                   	(bad)  
   142fa:	ff 0f                	decl   (%rdi)
   142fc:	8c 0f                	mov    %cs,(%rdi)
   142fe:	8f 41 ff             	pop    -0x1(%rcx)
   14301:	ff                   	(bad)  
   14302:	ff 24 58             	jmp    *(%rax,%rbx,2)
   14305:	48 0f 8c f1 fe ff ff 	rex.W jl 141fd <_obstack_memory_used@@Base+0x3a4d>
   1430c:	48                   	rex.W
   1430d:	4d 31 d0             	xor    %r10,%r8
   14310:	48 f6 44 49 f7 f9    	rex.W testb $0xf9,-0x9(%rcx,%rcx,2)
   14316:	0f 8f 82 03 00 00    	jg     1469e <_obstack_memory_used@@Base+0x3eee>
   1431c:	48 ff 49 f7          	decq   -0x9(%rcx)
   14320:	fd                   	std    
   14321:	ff 50 e9             	call   *-0x17(%rax)
   14324:	88 f0                	mov    %dh,%al
   14326:	ff                   	(bad)  
   14327:	ff 0f                	decl   (%rdi)
   14329:	b6 6c                	mov    $0x6c,%dh
   1432b:	24 25                	and    $0x25,%al
   1432d:	4d 89 f5             	mov    %r14,%r13
   14330:	4d 89 e6             	mov    %r12,%r14
   14333:	4d 89 d4             	mov    %r10,%r12
   14336:	40 7f d0             	rex jg 14309 <_obstack_memory_used@@Base+0x3b59>
   14339:	0f 85 1c 48 85 d2    	jne    ffffffffd2868b5b <obstack_alloc_failed_handler@@Base+0xffffffffd2846abb>
   1433f:	e9 28 fc ff ff       	jmp    13f6c <_obstack_memory_used@@Base+0x37bc>
   14344:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
   14348:	c3                   	ret    
   14349:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
   1434e:	49 01 f5             	add    %rsi,%r13
   14351:	7c 00                	jl     14353 <_obstack_memory_used@@Base+0x3ba3>
   14353:	45 31 db             	xor    %r11d,%r11d
   14356:	48                   	rex.W
   14357:	4c 39 eb             	cmp    %r13,%rbx
   1435a:	50                   	push   %rax
   1435b:	00 00                	add    %al,(%rax)
   1435d:	00 00                	add    %al,(%rax)
   1435f:	88 44 24 26          	mov    %al,0x26(%rsp)
   14363:	48 f7 f8             	idiv   %rax
   14366:	8a e9                	mov    %cl,%ch
   14368:	39 ed                	cmp    %ebp,%ebp
   1436a:	48 c1 e7 36          	shl    $0x36,%rdi
   1436e:	74 4c                	je     143bc <_obstack_memory_used@@Base+0x3c0c>
   14370:	89 e3                	mov    %esp,%ebx
   14372:	4d 39 0f             	cmp    %r9,(%r15)
   14375:	8f                   	(bad)  
   14376:	26 fe 48 c1          	es decb -0x3f(%rax)
   1437a:	e8 13 af cb 45       	call   45ccf292 <obstack_alloc_failed_handler@@Base+0x45cad1f2>
   1437f:	31 ff                	xor    %edi,%edi
   14381:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   14388:	00 00 
   1438a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1438f:	e9 e8 ec ff ff       	jmp    1307c <_obstack_memory_used@@Base+0x28cc>
   14394:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   14399:	31 ed                	xor    %ebp,%ebp
   1439b:	e9 83 f1 ff ff       	jmp    13523 <_obstack_memory_used@@Base+0x2d73>
   143a0:	31 ed                	xor    %ebp,%ebp
   143a2:	e9 d1 f1 ff ff       	jmp    13578 <_obstack_memory_used@@Base+0x2dc8>
   143a7:	48 f7 fe             	idiv   %rsi
   143aa:	e5 3c                	in     $0x3c,%eax
   143ac:	41                   	rex.B
   143ad:	4d 39 cc             	cmp    %r9,%r12
   143b0:	44 89 c5             	mov    %r8d,%ebp
   143b3:	b9 7c 94 00 00       	mov    $0x947c,%ecx
   143b8:	41 89 c0             	mov    %eax,%r8d
   143bb:	0f 94 c2             	sete   %dl
   143be:	e9 ae ef 49 09       	jmp    94b3371 <obstack_alloc_failed_handler@@Base+0x94912d1>
   143c3:	f0 d9 31             	lock fnstenv (%rcx)
   143c6:	ed                   	in     (%dx),%eax
   143c7:	e9 57 f1 ff 49       	jmp    4a013523 <obstack_alloc_failed_handler@@Base+0x49ff1483>
   143cc:	c1 ee 21             	shr    $0x21,%esi
   143cf:	00 f3                	add    %dh,%bl
   143d1:	0f 1e fa             	nop    %edx
   143d4:	41 57                	push   %r15
   143d6:	41 56                	push   %r14
   143d8:	41 55                	push   %r13
   143da:	49 89 f5             	mov    %rsi,%r13
   143dd:	41 54                	push   %r12
   143df:	55                   	push   %rbp
   143e0:	48 89 d5             	mov    %rdx,%rbp
   143e3:	53                   	push   %rbx
   143e4:	48 83 ec 68          	sub    $0x68,%rsp
   143e8:	48 8b 37             	mov    (%rdi),%rsi
   143eb:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   143f0:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   143f5:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   143fa:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
   14401:	00 00 
   14403:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   14408:	31 d2                	xor    %edx,%edx
   1440a:	49 21 da             	and    %rbx,%r10
   1440d:	48 8d 15 ac de 00 00 	lea    0xdeac(%rip),%rdx        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
   14414:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   14419:	48 0f 44 ea          	cmove  %rdx,%rbp
   1441d:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   14421:	41 83 fc 02          	cmp    $0x2,%r12d
   14425:	4d 29 f3             	sub    %r14,%r11
   14428:	22 15 8e de 00 00    	and    0xde8e(%rip),%dl        # 222bc <obstack_alloc_failed_handler@@Base+0x21c>
   1442e:	88 54 24 2f          	mov    %dl,0x2f(%rsp)
   14432:	0f 85 48 01 00 00    	jne    14580 <_obstack_memory_used@@Base+0x3dd0>
   14438:	45 31 ff             	xor    %r15d,%r15d
   1443b:	85 c9                	test   %ecx,%ecx
   1443d:	0f 84 8d 00 00 00    	je     144d0 <_obstack_memory_used@@Base+0x3d20>
   14443:	e8 0f 85 c3 00       	call   c4c957 <obstack_alloc_failed_handler@@Base+0xc2a8b7>
   14448:	00 00                	add    %al,(%rax)
   1444a:	45 04 4c             	rex.RB add $0x4c,%al
   1444d:	8d 4d 08             	lea    0x8(%rbp),%ecx
   14450:	44 89 e1             	mov    %r12d,%ecx
   14453:	44 8b 10             	mov    (%rax),%r10d
   14456:	be 00 20 48 09       	mov    $0x9482000,%esi
   1445b:	f3 89 ea             	repz mov %ebp,%edx
   1445e:	49 89 c6             	mov    %rax,%r14
   14461:	44 89 0f             	mov    %r9d,(%rdi)
   14464:	8c 5f ff             	mov    %ds,-0x1(%rdi)
   14467:	ff                   	(bad)  
   14468:	ff                   	(bad)  
   14469:	ff                   	(bad)  
   1446a:	ff                   	(bad)  
   1446b:	ff 48 8b             	decl   -0x75(%rax)
   1446e:	7c 24                	jl     14494 <_obstack_memory_used@@Base+0x3ce4>
   14470:	20 4c 89 4c          	and    %cl,0x4c(%rcx,%rcx,4)
   14474:	24 10                	and    $0x10,%al
   14476:	e8 b5 ea ff ff       	call   12f30 <_obstack_memory_used@@Base+0x2780>
   1447b:	44 0f 85 80 01 00 00 	rex.R jne 14602 <_obstack_memory_used@@Base+0x3e52>
   14482:	f1                   	int1   
   14483:	84 f1                	test   %dh,%cl
   14485:	fc                   	cld    
   14486:	4d 89 c1             	mov    %r8,%r9
   14489:	d6                   	(bad)  
   1448a:	fe                   	(bad)  
   1448b:	ff                   	(bad)  
   1448c:	ff c7                	inc    %edi
   1448e:	c2 1a 4c             	ret    $0x4c1a
   14491:	09 fa                	or     %edi,%edx
   14493:	87 e8                	xchg   %ebp,%eax
   14495:	03 00                	add    (%rax),%eax
   14497:	00 48 8b             	add    %cl,-0x75(%rax)
   1449a:	44 24 10             	rex.R and $0x10,%al
   1449d:	c6 44 7c fa 01       	movb   $0x1,-0x6(%rsp,%rdi,2)
   144a2:	0f b6 4d 85          	movzbl -0x7b(%rbp),%ecx
   144a6:	c7 45 00 75 10 4c 7c 	movl   $0x7c4c1075,0x0(%rbp)
   144ad:	1b e8                	sbb    %eax,%ebp
   144af:	cd 03                	int    $0x3
   144b1:	ff                   	(bad)  
   144b2:	ff 4c 39 e0          	decl   -0x20(%rcx,%rdi,1)
   144b6:	0f 95 44 24 2f       	setne  0x2f(%rsp)
   144bb:	45 85 ff             	test   %r15d,%r15d
   144be:	74 4d                	je     1450d <_obstack_memory_used@@Base+0x3d5d>
   144c0:	09 f0                	or     %esi,%eax
   144c2:	e3 e9                	jrcxz  144ad <_obstack_memory_used@@Base+0x3cfd>
   144c4:	f0 00 00             	lock add %al,(%rax)
   144c7:	00 0f                	add    %cl,(%rdi)
   144c9:	1f                   	(bad)  
   144ca:	84 00                	test   %al,(%rax)
   144cc:	00 00                	add    %al,(%rax)
   144ce:	00 00                	add    %al,(%rax)
   144d0:	4c 89 ef             	mov    %r13,%rdi
   144d3:	e8 a8 03 ff ff       	call   4880 <strlen@plt>
   144d8:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   144dd:	49 89 c4             	mov    %rax,%r12
   144e0:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   144e6:	74 78                	je     14560 <_obstack_memory_used@@Base+0x3db0>
   144e8:	e8 83 03 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   144ed:	48 83 f8 01          	cmp    $0x1,%rax
   144f1:	0f 87 21 03 00 00    	ja     14818 <_obstack_memory_used@@Base+0x4068>
   144f7:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   144fc:	4a 8d 2c 23          	lea    (%rbx,%r12,1),%rbp
   14500:	48 39 dd             	cmp    %rbx,%rbp
   14503:	0f 86 d4 03 00 00    	jbe    148dd <_obstack_memory_used@@Base+0x412d>
   14509:	e8 c2 07 ff ff       	call   4cd0 <__ctype_b_loc@plt>
   1450e:	48 8b 08             	mov    (%rax),%rcx
   14511:	48 89 d8             	mov    %rbx,%rax
   14514:	0f 8c 00 ff ff ff    	jl     1441a <_obstack_memory_used@@Base+0x3c6a>
   1451a:	84 00                	test   %al,(%rax)
   1451c:	00 00                	add    %al,(%rax)
   1451e:	00 00                	add    %al,(%rax)
   14520:	4d 89 c2             	mov    %r8,%r10
   14523:	ff                   	(bad)  
   14524:	ff 14 51             	call   *(%rcx,%rdx,2)
   14527:	66 81 e2 00 40       	and    $0x4000,%dx
   1452c:	66 4d 39 f3          	data16 cmp %r14,%r11
   14530:	48 83 db ff          	sbb    $0xffffffffffffffff,%rbx
   14534:	48 83 c0 01          	add    $0x1,%rax
   14538:	48 39 c5             	cmp    %rax,%rbp
   1453b:	75 e3                	jne    14520 <_obstack_memory_used@@Base+0x3d70>
   1453d:	80 3d 69 dd 00 00 00 	cmpb   $0x0,0xdd69(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
   14544:	0f 85 cd 00 00 00    	jne    14617 <_obstack_memory_used@@Base+0x3e67>
   1454a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1454f:	c6 00 4c             	movb   $0x4c,(%rax)
   14552:	31 c8                	xor    %ecx,%eax
   14554:	00 00                	add    %al,(%rax)
   14556:	00 66 0f             	add    %ah,0xf(%rsi)
   14559:	1f                   	(bad)  
   1455a:	84 00                	test   %al,(%rax)
   1455c:	00 00                	add    %al,(%rax)
   1455e:	00 00                	add    %al,(%rax)
   14560:	80 3d 46 dd 00 00 00 	cmpb   $0x0,0xdd46(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
   14567:	0f 85 aa 00 00 00    	jne    14617 <_obstack_memory_used@@Base+0x3e67>
   1456d:	48 8b 75 02          	mov    0x2(%rbp),%rsi
   14571:	38 c6                	cmp    %al,%dh
   14573:	e9 70 fd ff ff       	jmp    142e8 <_obstack_memory_used@@Base+0x3b38>
   14578:	00 00                	add    %al,(%rax)
   1457a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14580:	85 c9                	test   %ecx,%ecx
   14582:	0f 49 c1             	cmovns %ecx,%eax
   14585:	e1 2e                	loope  145b5 <_obstack_memory_used@@Base+0x3e05>
   14587:	00 4c 4c 89          	add    %cl,-0x77(%rsp,%rcx,2)
   1458b:	c3                   	ret    
   1458c:	0f 85 49 0f 4c 0f    	jne    f4d54db <obstack_alloc_failed_handler@@Base+0xf4b343b>
   14592:	af                   	scas   %es:(%rdi),%eax
   14593:	fe 8d 0f 85 4c 21    	decb   0x214c850f(%rbp)
   14599:	f6 ff                	idiv   %bh
   1459b:	00 00                	add    %al,(%rax)
   1459d:	0f 87 b8 02 00 00    	ja     1485b <_obstack_memory_used@@Base+0x40ab>
   145a3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   145a8:	0f 84 d1 01 00 00    	je     1477f <_obstack_memory_used@@Base+0x3fcf>
   145ae:	e8 9d 04 ff ff       	call   4a50 <memcpy@plt>
   145b3:	c6 44 24 2f 00       	movb   $0x0,0x2f(%rsp)
   145b8:	e8 b3 02 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   145bd:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   145c2:	48                   	rex.W
   145c3:	48 85 c2             	test   %rax,%rdx
   145c6:	48 0f 85 80 fc 4d 31 	rex.W jne 314f424d <obstack_alloc_failed_handler@@Base+0x314d21ad>
   145cd:	c2 85 d3             	ret    $0xd385
   145d0:	fd                   	std    
   145d1:	ff                   	(bad)  
   145d2:	ff 00                	incl   (%rax)
   145d4:	00 4c 8b 7c          	add    %cl,0x7c(%rbx,%rcx,4)
   145d8:	24 10                	and    $0x10,%al
   145da:	4d 39 ce             	cmp    %r9,%r14
   145dd:	24 08                	and    $0x8,%al
   145df:	4d                   	rex.WRB
   145e0:	4d 85 c2             	test   %r8,%r10
   145e3:	c0 79 fd ff          	sarb   $0xff,-0x3(%rcx)
   145e7:	ff 49 85             	decl   -0x7b(%rcx)
   145ea:	d6                   	(bad)  
   145eb:	fa                   	cli    
   145ec:	4c 89 f7             	mov    %r14,%rdi
   145ef:	90                   	nop
   145f0:	4d 09 f1             	or     %r14,%r9
   145f3:	0f 8f 5a fd ff ff    	jg     14353 <_obstack_memory_used@@Base+0x3ba3>
   145f9:	01 40 75             	add    %eax,0x75(%rax)
   145fc:	03 c6                	add    %esi,%eax
   145fe:	02 3f                	add    (%rdi),%bh
   14600:	48 83 c2 01          	add    $0x1,%rdx
   14604:	48 39 fa             	cmp    %rdi,%rdx
   14607:	75 e7                	jne    145f0 <_obstack_memory_used@@Base+0x3e40>
   14609:	49 89 dc             	mov    %rbx,%r12
   1460c:	0f b6 05 9a dc 00 00 	movzbl 0xdc9a(%rip),%eax        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
   14613:	84 c0                	test   %al,%al
   14615:	74 0e                	je     14625 <_obstack_memory_used@@Base+0x3e75>
   14617:	0f b6 44 24 2f       	movzbl 0x2f(%rsp),%eax
   1461c:	83 f0 01             	xor    $0x1,%eax
   1461f:	22 05 87 dc 00 00    	and    0xdc87(%rip),%al        # 222ac <obstack_alloc_failed_handler@@Base+0x20c>
   14625:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1462a:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   14630:	88 06                	mov    %al,(%rsi)
   14632:	74 08                	je     1463c <_obstack_memory_used@@Base+0x3e8c>
   14634:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   14639:	48 89 18             	mov    %rbx,(%rax)
   1463c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   14641:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   14646:	48 89 30             	mov    %rsi,(%rax)
   14649:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1464e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   14655:	00 00 
   14657:	0f 85 9c 02 00 00    	jne    148f9 <_obstack_memory_used@@Base+0x4149>
   1465d:	48 83 c4 68          	add    $0x68,%rsp
   14661:	4c 89 e0             	mov    %r12,%rax
   14664:	5b                   	pop    %rbx
   14665:	5d                   	pop    %rbp
   14666:	41 5c                	pop    %r12
   14668:	41 5d                	pop    %r13
   1466a:	41 5e                	pop    %r14
   1466c:	41 5f                	pop    %r15
   1466e:	c3                   	ret    
   1466f:	90                   	nop
   14670:	48 39 fe             	cmp    %rdi,%rsi
   14673:	0f 83 6b 02 00 00    	jae    148e4 <_obstack_memory_used@@Base+0x4134>
   14679:	48 8d 44 24 49       	lea    0x49(%rsp),%rax
   1467e:	21 d2                	and    %edx,%edx
   14680:	f4                   	hlt    
   14681:	31 db                	xor    %ebx,%ebx
   14683:	49 89 f7             	mov    %rsi,%r15
   14686:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1468b:	48 29 c9             	sub    %rcx,%rcx
   1468e:	24 50                	and    $0x50,%al
   14690:	41 0f b6 07          	movzbl (%r15),%eax
   14694:	3c 5f                	cmp    $0x5f,%al
   14696:	0f 8f 48 c1 ea 06    	jg     6ec07e4 <obstack_alloc_failed_handler@@Base+0x6e9e744>
   1469c:	3c 48                	cmp    $0x48,%al
   1469e:	ff c2                	inc    %edx
   146a0:	48 31 fa             	xor    %rdi,%rdx
   146a3:	00 3c 23             	add    %bh,(%rbx,%riz,1)
   146a6:	0f 8f ec 00 00 00    	jg     14798 <_obstack_memory_used@@Base+0x3fe8>
   146ac:	3c 1f                	cmp    $0x1f,%al
   146ae:	0f 8f f0 00 00 49    	jg     490147a4 <obstack_alloc_failed_handler@@Base+0x48ff2704>
   146b4:	f7 fb                	idiv   %ebx
   146b6:	44 24 48             	rex.R and $0x48,%al
   146b9:	c7 c3 db 02 0f 84    	mov    $0x840f02db,%ebx
   146bf:	ad                   	lods   %ds:(%rsi),%eax
   146c0:	03 00                	add    (%rax),%eax
   146c2:	00 0f                	add    %cl,(%rdi)
   146c4:	1f                   	(bad)  
   146c5:	49 09 f5             	or     %rsi,%r13
   146c8:	4d 01 e1             	add    %r12,%r9
   146cb:	24 3f                	and    $0x3f,%al
   146cd:	48 89 ef             	mov    %rbp,%rdi
   146d0:	4d 01 f5             	add    %r14,%r13
   146d3:	48                   	rex.W
   146d4:	49 31 dd             	xor    %rbx,%r13
   146d7:	4c 8b 24 4c          	mov    (%rsp,%rcx,2),%r12
   146db:	09 f0                	or     %esi,%eax
   146dd:	05 ff ff 85 c0       	add    $0xc085ffff,%eax
   146e2:	0f 85 a6 00 00 00    	jne    1478e <_obstack_memory_used@@Base+0x3fde>
   146e8:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   146ed:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   146f2:	48                   	rex.W
   146f3:	49 f7 ff             	idiv   %r15
   146f6:	89 ee                	mov    %ebp,%esi
   146f8:	4d                   	rex.WRB
   146f9:	49 89 c5             	mov    %rax,%r13
   146fc:	0b fa                	or     %edx,%edi
   146fe:	e8 ad 01 ff ff       	call   48b0 <mbrtowc@plt>
   14703:	49 89 c6             	mov    %rax,%r14
   14706:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   1470b:	48 89 04 24          	mov    %rax,(%rsp)
   1470f:	49                   	rex.WB
   14710:	4c 21 db             	and    %r11,%rbx
   14713:	76 14                	jbe    14729 <_obstack_memory_used@@Base+0x3f79>
   14715:	4d 85 ff             	test   %r15,%r15
   14718:	74 49                	je     14763 <_obstack_memory_used@@Base+0x3fb3>
   1471a:	c7 c3 e2 ff ff ff    	mov    $0xffffffe2,%ebx
   14720:	ff 84 c0 0f 48 85 f9 	incl   -0x67ab7f1(%rax,%rax,8)
   14727:	00 00                	add    %al,(%rax)
   14729:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   1472d:	0f 84 0f 85 55 ff    	je     ffffffffff56cc42 <obstack_alloc_failed_handler@@Base+0xffffffffff54aba2>
   14733:	ff                   	(bad)  
   14734:	ff 31                	push   (%rcx)
   14736:	de 0f                	fimuls (%rdi)
   14738:	84 13                	test   %dl,(%rbx)
   1473a:	01 00                	add    %eax,(%rax)
   1473c:	00 8b 49 31 0f 85    	add    %cl,-0x7af0ceb7(%rbx)
   14742:	02 ff                	add    %bh,%bh
   14744:	ff                   	(bad)  
   14745:	ff 00                	incl   (%rax)
   14747:	00 49 01             	add    %cl,0x1(%rcx)
   1474a:	fb                   	sti    
   1474b:	44                   	rex.R
   1474c:	f0 74 37             	lock je 14786 <_obstack_memory_used@@Base+0x3fd6>
   1474f:	03 ff                	add    %edi,%edi
   14751:	4d 29 e2             	sub    %r12,%r10
   14754:	0f 88 6e ff ff ff    	js     146c8 <_obstack_memory_used@@Base+0x3f18>
   1475a:	31 0f                	xor    %ecx,(%rdi)
   1475c:	84 27                	test   %ah,(%rdi)
   1475e:	49 c7 c5 2a 03 00 00 	mov    $0x32a,%r13
   14765:	eb 32                	jmp    14799 <_obstack_memory_used@@Base+0x3fe9>
   14767:	88 0c 14             	mov    %cl,(%rsp,%rdx,1)
   1476a:	48                   	rex.W
   1476b:	49                   	rex.WB
   1476c:	49 21 c4             	and    %rax,%r12
   1476f:	4d 89 df             	mov    %r11,%r15
   14772:	ed                   	in     (%dx),%eax
   14773:	4d 01 f5             	add    %r14,%r13
   14776:	4d 01 f4             	add    %r14,%r12
   14779:	48                   	rex.W
   1477a:	4c 21 d8             	and    %r11,%rax
   1477d:	49 c7 c2 24 03 00 00 	mov    $0x324,%r10
   14784:	ff                   	(bad)  
   14785:	ff 85 49 09 ca fa    	incl   -0x535f6b7(%rbp)
   1478b:	ff                   	(bad)  
   1478c:	ff                   	(bad)  
   1478d:	ff 4d 89             	decl   -0x77(%rbp)
   14790:	ce                   	(bad)  
   14791:	eb 21                	jmp    147b4 <_obstack_memory_used@@Base+0x4004>
   14793:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14798:	8d 50 db             	lea    -0x25(%rax),%edx
   1479b:	80 fa 1a             	cmp    $0x1a,%dl
   1479e:	49 f7 fe             	idiv   %r14
   147a1:	ff                   	(bad)  
   147a2:	ff 74 28 88          	push   -0x78(%rax,%rbp,1)
   147a6:	04 24                	add    $0x24,%al
   147a8:	49 83 c7 01          	add    $0x1,%r15
   147ac:	0f 8c 5c fd ff ff    	jl     1450e <_obstack_memory_used@@Base+0x3d5e>
   147b2:	c4 01 4c 3b          	(bad)
   147b6:	7c 0f                	jl     147c7 <_obstack_memory_used@@Base+0x4017>
   147b8:	85 27                	test   %esp,(%rdi)
   147ba:	fd                   	std    
   147bb:	48 01 0f             	add    %rcx,(%rdi)
   147be:	8c d2                	mov    %ss,%edx
   147c0:	00 00                	add    %al,(%rax)
   147c2:	48 c1 ef 2b          	shr    $0x2b,%rdi
   147c6:	48 0f af d1          	imul   %rcx,%rdx
   147ca:	1f                   	(bad)  
   147cb:	80 49 f7 fa          	orb    $0xfa,-0x9(%rcx)
   147cf:	74 fd                	je     147ce <_obstack_memory_used@@Base+0x401e>
   147d1:	ff                   	(bad)  
   147d2:	ff 80 fa 1d 76 cc    	incl   -0x3389e206(%rax)
   147d8:	e9 d7 48 39 db       	jmp    ffffffffdb3a90b4 <obstack_alloc_failed_handler@@Base+0xffffffffdb387014>
   147dd:	0f 48 49 f7          	cmovs  -0x9(%rcx),%ecx
   147e1:	fd                   	std    
   147e2:	48 ff c7             	inc    %rdi
   147e5:	41 be 01 00 00 0f    	mov    $0xf000001,%r14d
   147eb:	4c 21 0f             	and    %r9,(%rdi)
   147ee:	85 c8                	test   %ecx,%eax
   147f0:	fd                   	std    
   147f1:	ff                   	(bad)  
   147f2:	ff 48 21             	decl   0x21(%rax)
   147f5:	d0 4c 01 f3          	rorb   -0xd(%rcx,%rax,1)
   147f9:	0f 8c 19 02 00 00    	jl     14a18 <_obstack_memory_used@@Base+0x4268>
   147ff:	c1 ed 19             	shr    $0x19,%ebp
   14802:	83 c5 01             	add    $0x1,%ebp
   14805:	41 88 14 24          	mov    %dl,(%r12)
   14809:	4c 8b 24 24          	mov    (%rsp),%r12
   1480d:	49 21 fa             	and    %rdi,%r10
   14810:	ff                   	(bad)  
   14811:	ff 66 0f             	jmp    *0xf(%rsi)
   14814:	1f                   	(bad)  
   14815:	44 00 00             	add    %r8b,(%rax)
   14818:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1481d:	4c 89 e6             	mov    %r12,%rsi
   14820:	e8 fb e3 ff ff       	call   12c20 <_obstack_memory_used@@Base+0x2470>
   14825:	48 63 d8             	movslq %eax,%rbx
   14828:	e9 10 fd ff ff       	jmp    1453d <_obstack_memory_used@@Base+0x3d8d>
   1482d:	0f 1f 48 39          	nopl   0x39(%rax)
   14831:	c0 ef 48             	shr    $0x48,%bh
   14834:	83 c3 01             	add    $0x1,%ebx
   14837:	49 83 c7 01          	add    $0x1,%r15
   1483b:	41 c6 04 24 3f       	movb   $0x3f,(%r12)
   14840:	4c 8b 24 49          	mov    (%rcx,%rcx,2),%r12
   14844:	48 01 d2             	add    %rdx,%rdx
   14847:	3e c7 c1 05 fe 4c 39 	ds mov $0x394cfe05,%ecx
   1484e:	eb 00                	jmp    14850 <_obstack_memory_used@@Base+0x40a0>
   14850:	00 00                	add    %al,(%rax)
   14852:	7c 24                	jl     14878 <_obstack_memory_used@@Base+0x40c8>
   14854:	08 48 83             	or     %cl,-0x7d(%rax)
   14857:	48 01 f1             	add    %rsi,%rcx
   1485a:	e0 4c                	loopne 148a8 <_obstack_memory_used@@Base+0x40f8>
   1485c:	89 e7                	mov    %esp,%edi
   1485e:	e8 2d fe fe ff       	call   4690 <malloc@plt>
   14863:	48 89 44 eb b4       	mov    %rax,-0x4c(%rbx,%rbp,8)
   14868:	48 85 c0             	test   %rax,%rax
   1486b:	0f 85 32 fd ff ff    	jne    145a3 <_obstack_memory_used@@Base+0x3df3>
   14871:	e8 e9 5d fe ff       	call   ffffffffffffa65f <obstack_alloc_failed_handler@@Base+0xfffffffffffd85bf>
   14876:	ff 2e                	ljmp   *(%rsi)
   14878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1487f:	00 
   14880:	48                   	rex.W
   14881:	49 c1 e6 0f          	shl    $0xf,%r14
   14885:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   14889:	48 89 f7             	mov    %rsi,%rdi
   1488c:	48 89 34 24          	mov    %rsi,(%rsp)
   14890:	e8 fb fd fe ff       	call   4690 <malloc@plt>
   14895:	48 8b 0f             	mov    (%rdi),%rcx
   14898:	84 db                	test   %bl,%bl
   1489a:	fc                   	cld    
   1489b:	ff 49 29             	decl   0x29(%rcx)
   1489e:	da 85 c0 48 48 c7    	fiaddl -0x38b7b740(%rbp)
   148a4:	c3                   	ret    
   148a5:	71 fe                	jno    148a5 <_obstack_memory_used@@Base+0x40f5>
   148a7:	ff                   	(bad)  
   148a8:	ff 85 f6 49 21 cc    	incl   -0x33deb60a(%rbp)
   148ae:	8b 16                	mov    (%rsi),%edx
   148b0:	44 8b 45 48          	mov    0x48(%rbp),%r8d
   148b4:	c7 c0 91 02 00 00    	mov    $0x291,%eax
   148ba:	49 c7 c1 79 fd 0f 8f 	mov    $0xffffffff8f0ffd79,%r9
   148c1:	49 09 f9             	or     %rdi,%r9
   148c4:	00 af d8 24 20 e8    	add    %ch,-0x17dfdb28(%rdi)
   148ca:	62 e6 ff ff 44       	(bad)  {%k7}{z}
   148cf:	8b 54 24 10          	mov    0x10(%rsp),%edx
   148d3:	49 ff c2             	inc    %r10
   148d6:	39 e1                	cmp    %esp,%ecx
   148d8:	4c 39 e0             	cmp    %r12,%rax
   148db:	ff                   	(bad)  
   148dc:	ff 31                	push   (%rcx)
   148de:	db e9                	fucomi %st(1),%st
   148e0:	49 39 c1             	cmp    %rax,%r9
   148e3:	00 00                	add    %al,(%rax)
   148e5:	00 4d 39             	add    %cl,0x39(%rbp)
   148e8:	e2 e9                	loop   148d3 <_obstack_memory_used@@Base+0x4123>
   148ea:	1e                   	(bad)  
   148eb:	48 f7 fa             	idiv   %rdx
   148ee:	4d 89 c3             	mov    %r8,%r11
   148f1:	0f 7c                	(bad)  
   148f3:	91                   	xchg   %eax,%ecx
   148f4:	03 00                	add    (%rax),%eax
   148f6:	e9 58 fd 48 c7       	jmp    ffffffffc74a4653 <obstack_alloc_failed_handler@@Base+0xffffffffc74825b3>
   148fb:	c2 78 01             	ret    $0x178
   148fe:	00 00                	add    %al,(%rax)
   14900:	0f af c1             	imul   %ecx,%eax
   14903:	fa                   	cli    
   14904:	41 57                	push   %r15
   14906:	41 56                	push   %r14
   14908:	4c 01 d9             	add    %r11,%rcx
   1490b:	89 f5                	mov    %esi,%ebp
   1490d:	41 54                	push   %r12
   1490f:	49 89 d4             	mov    %rdx,%r12
   14912:	55                   	push   %rbp
   14913:	53                   	push   %rbx
   14914:	48 63 df             	movslq %edi,%rbx
   14917:	48 83 ec 28          	sub    $0x28,%rsp
   1491b:	e8 f0 fd fe ff       	call   4710 <__errno_location@plt>
   14920:	44 8b 35 29 d9 00 00 	mov    0xd929(%rip),%r14d        # 22250 <obstack_alloc_failed_handler@@Base+0x1b0>
   14927:	7f 1e                	jg     14947 <_obstack_memory_used@@Base+0x4197>
   14929:	84 49 ff             	test   %cl,-0x1(%rcx)
   1492c:	c6                   	(bad)  
   1492d:	e9 c8 fe ff ff       	jmp    147fa <_obstack_memory_used@@Base+0x404a>
   14932:	c1 ee 0b             	shr    $0xb,%esi
   14935:	89 44 0f 85          	mov    %eax,-0x7b(%rdi,%rcx,1)
   14939:	99                   	cltd   
   1493a:	00 00                	add    %al,(%rax)
   1493c:	00 49 c7             	add    %cl,-0x39(%rcx)
   1493f:	c7                   	(bad)  
   14940:	d8 01                	fadds  (%rcx)
   14942:	00 00                	add    %al,(%rax)
   14944:	05 17 d9 00 00       	add    $0xd917,%eax
   14949:	48 21 c3             	and    %rax,%rbx
   1494c:	48                   	rex.W
   1494d:	4d 09 db             	or     %r11,%r11
   14950:	48 39 c5             	cmp    %rax,%rbp
   14953:	0f 84 1f 48 c7 c2    	je     ffffffffc2c89178 <obstack_alloc_failed_handler@@Base+0xffffffffc2c670d8>
   14959:	d2 fd                	sar    %cl,%ch
   1495b:	ff                   	(bad)  
   1495c:	ff af 01 e9 14 ff    	ljmp   *-0xeb16ff(%rdi)
   14962:	ff                   	(bad)  
   14963:	ff                   	(bad)  
   14964:	ff c2                	inc    %edx
   14966:	fc                   	cld    
   14967:	48 0f af c8          	imul   %rax,%rcx
   1496b:	00 00                	add    %al,(%rax)
   1496d:	48 89 05 fc d8 00 0f 	mov    %rax,0xf00d8fc(%rip)        # f022270 <obstack_alloc_failed_handler@@Base+0xf0001d0>
   14974:	8c 41 fc             	mov    %es,-0x4(%rcx)
   14977:	ff                   	(bad)  
   14978:	ff                   	(bad)  
   14979:	fa                   	cli    
   1497a:	31 f6                	xor    %esi,%esi
   1497c:	48 89 f9             	mov    %rdi,%rcx
   1497f:	44 e9 4d 31 d0 ff    	rex.R jmp ffffffffffd17ad2 <obstack_alloc_failed_handler@@Base+0xffffffffffcf5a32>
   14985:	49 c1 e7 1c          	shl    $0x1c,%r15
   14989:	48 c1 e2 04          	shl    $0x4,%rdx
   1498d:	48 8d 7c 0d 00       	lea    0x0(%rbp,%rcx,1),%rdi
   14992:	e8 c9 ff fe ff       	call   4960 <memset@plt>
   14997:	44                   	rex.R
   14998:	48 c1 ee 2e          	shr    $0x2e,%rsi
   1499c:	00 00                	add    %al,(%rax)
   1499e:	48 c1 e3 04          	shl    $0x4,%rbx
   149a2:	41 8b 0c 24          	mov    (%r12),%ecx
   149a6:	4d 8d 7c 24 08       	lea    0x8(%r12),%r15
   149ab:	4c 89 ea             	mov    %r13,%rdx
   149ae:	4d                   	rex.WRB
   149af:	48 ff c0             	inc    %rax
   149b2:	8b 5c 24 04          	mov    0x4(%rsp),%ebx
   149b6:	4d 89 4c 89 4d       	mov    %r9,0x4d(%r9,%rcx,4)
   149bb:	21 f4                	and    %esi,%esp
   149bd:	eb b5                	jmp    14974 <_obstack_memory_used@@Base+0x41c4>
   149bf:	ff c2                	inc    %edx
   149c1:	41 ff 74 24 30       	push   0x30(%r12)
   149c6:	41 ff 74 24 28       	push   0x28(%r12)
   149cb:	0f 8f 72 fc ff ff    	jg     14643 <_obstack_memory_used@@Base+0x3e93>
   149d1:	4c 89 49 0f          	mov    %r9,0xf(%rcx)
   149d5:	af                   	scas   %es:(%rdi),%eax
   149d6:	ca 24 28             	lret   $0x2824
   149d9:	e8 52 e5 ff 49       	call   4a012f30 <obstack_alloc_failed_handler@@Base+0x49ff0e90>
   149de:	f7 fa                	idiv   %edx
   149e0:	48 8b 4d 39          	mov    0x39(%rbp),%rcx
   149e4:	e3 48                	jrcxz  14a2e <_obstack_memory_used@@Base+0x427e>
   149e6:	39 c6                	cmp    %eax,%esi
   149e8:	77 6a                	ja     14a54 <_obstack_memory_used@@Base+0x42a4>
   149ea:	48 8d 70 01          	lea    0x1(%rax),%rsi
   149ee:	48 8d 05 4c 85 49 c1 	lea    -0x3eb67ab4(%rip),%rax        # ffffffffc14acf41 <obstack_alloc_failed_handler@@Base+0xffffffffc148aea1>
   149f5:	e7 31                	out    %eax,$0x31
   149f7:	75 00                	jne    149f9 <_obstack_memory_used@@Base+0x4249>
   149f9:	49 39 c6             	cmp    %rax,%r14
   149fc:	48 89 cf             	mov    %rcx,%rdi
   149ff:	4c 89 ca             	mov    %r9,%rdx
   14a02:	49 ff c7             	inc    %r15
   14a05:	18 e8                	sbb    %ch,%al
   14a07:	75 fc                	jne    14a05 <_obstack_memory_used@@Base+0x4255>
   14a09:	fe                   	(bad)  
   14a0a:	ff 48 8b             	decl   -0x75(%rax)
   14a0d:	74 24                	je     14a33 <_obstack_memory_used@@Base+0x4283>
   14a0f:	18 48 89             	sbb    %cl,-0x77(%rax)
   14a12:	f7 0f 84 2d 01 00    	testl  $0x12d84,(%rdi)
   14a18:	00 73 fc             	add    %dh,-0x4(%rbx)
   14a1b:	fe                   	(bad)  
   14a1c:	ff 48 8b             	decl   -0x75(%rax)
   14a1f:	74 24                	je     14a45 <_obstack_memory_used@@Base+0x4295>
   14a21:	18 49 c1             	sbb    %cl,-0x3f(%rcx)
   14a24:	49 09 ca             	or     %rcx,%r10
   14a27:	c6                   	(bad)  
   14a28:	75 05                	jne    14a2f <_obstack_memory_used@@Base+0x427f>
   14a2a:	48                   	rex.W
   14a2b:	49 c1 e7 03          	shl    $0x3,%r15
   14a2f:	4c                   	rex.WR
   14a30:	49                   	rex.WB
   14a31:	4d 09 e5             	or     %r12,%r13
   14a34:	0f 8c 4a 02 00 00    	jl     14c84 <_obstack_memory_used@@Base+0x44d4>
   14a3a:	4d 89 f9             	mov    %r15,%r9
   14a3d:	41 ff 74 24 30       	push   0x30(%r12)
   14a42:	41                   	rex.B
   14a43:	4c 21 d8             	and    %r11,%rax
   14a46:	89 f7                	mov    %esi,%edi
   14a48:	41 ff 74 24 28       	push   0x28(%r12)
   14a4d:	e8 49 0f e9 0f       	call   fea599b <obstack_alloc_failed_handler@@Base+0xfe838fb>
   14a52:	85 ad 02 00 00 24    	test   %ebp,0x24000002(%rbp)
   14a58:	08 48 f7             	or     %cl,-0x9(%rax)
   14a5b:	48 31 f0             	xor    %rsi,%rax
   14a5e:	48 21 fe             	and    %rdi,%rsi
   14a61:	0f 84 b6 01 00 00    	je     14c1d <_obstack_memory_used@@Base+0x446d>
   14a67:	4c 09 e7             	or     %r12,%rdi
   14a6a:	41 5d                	pop    %r13
   14a6c:	41 5e                	pop    %r14
   14a6e:	49 39 d9             	cmp    %rbx,%r9
   14a71:	48 c1 e0 3f          	shl    $0x3f,%rax
   14a75:	00 00                	add    %al,(%rax)
   14a77:	00 48 89             	add    %cl,-0x77(%rax)
   14a7a:	f7 e8                	imul   %eax
   14a7c:	49 ff c2             	inc    %r10
   14a7f:	e8 4c 09 d9 21       	call   21da53d0 <obstack_alloc_failed_handler@@Base+0x21d83330>
   14a84:	e1 c0                	loope  14a46 <_obstack_memory_used@@Base+0x4296>
   14a86:	48 c7 c6 2c ff ff ff 	mov    $0xffffffffffffff2c,%rsi
   14a8d:	d7                   	xlat   %ds:(%rbx)
   14a8e:	00 00                	add    %al,(%rax)
   14a90:	48 0f 85 85 02 00 00 	rex.W jne 14d1c <_obstack_memory_used@@Base+0x456c>
   14a97:	c1 e2 08             	shl    $0x8,%edx
   14a9a:	84 fa                	test   %bh,%dl
   14a9c:	49 c1 e5 1f          	shl    $0x1f,%r13
   14aa0:	f3 1b 93 0f 8f a5 02 	repz sbb 0x2a58f0f(%rbx),%edx
   14aa7:	00 00                	add    %al,(%rax)
   14aa9:	1f                   	(bad)  
   14aaa:	84 00                	test   %al,(%rax)
   14aac:	00 00                	add    %al,(%rax)
   14aae:	00 00                	add    %al,(%rax)
   14ab0:	f3 0f 1e fa          	endbr64 
   14ab4:	41 e9 90 00 49 09    	rex.B jmp 94a4b4a <obstack_alloc_failed_handler@@Base+0x9482aaa>
   14aba:	cf                   	iret   
   14abb:	49 89 ce             	mov    %rcx,%r14
   14abe:	0f 8c e6 00 00 00    	jl     14baa <_obstack_memory_used@@Base+0x43fa>
   14ac4:	54                   	push   %rsp
   14ac5:	55                   	push   %rbp
   14ac6:	48 89 49 f7          	mov    %rcx,-0x9(%rcx)
   14aca:	4c 89 e1             	mov    %r12,%rcx
   14acd:	38 64 48 8b          	cmp    %ah,-0x75(%rax,%rcx,2)
   14ad1:	04 25                	add    $0x25,%al
   14ad3:	28 00                	sub    %al,(%rax)
   14ad5:	00 0f                	add    %cl,(%rdi)
   14ad7:	8c 0f                	mov    %cs,(%rdi)
   14ad9:	84 52 03             	test   %dl,0x3(%rdx)
   14adc:	00 00                	add    %al,(%rax)
   14ade:	48 85 f6             	test   %rsi,%rsi
   14ae1:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   14ae6:	4c 0f 44 49 c1       	cmove  -0x3f(%rcx),%r9
   14aeb:	ee                   	out    %al,(%dx)
   14aec:	3b fe                	cmp    %esi,%edi
   14aee:	ff c7                	inc    %edi
   14af0:	0f 8c c0 02 00 00    	jl     14db6 <_obstack_memory_used@@Base+0x4606>
   14af6:	fd                   	std    
   14af7:	ff                   	(bad)  
   14af8:	ff b6 5d 00 0f 48    	push   0x480f005d(%rsi)
   14afe:	21 db                	and    %ebx,%ebx
   14b00:	00 00                	add    %al,(%rax)
   14b02:	48 c1 e6 3c          	shl    $0x3c,%rsi
   14b06:	e8 eb 0f 0f 1f       	call   1f105af6 <obstack_alloc_failed_handler@@Base+0x1f0e3a56>
   14b0b:	80 00 00             	addb   $0x0,(%rax)
   14b0e:	00 00                	add    %al,(%rax)
   14b10:	48 09 c9             	or     %rcx,%rcx
   14b13:	d2 48 83             	rorb   %cl,-0x7d(%rax)
   14b16:	c0 01 0f             	rolb   $0xf,(%rcx)
   14b19:	b6 d3                	mov    $0xd3,%dh
   14b1b:	f6 0f 8c             	testb  $0x8c,(%rdi)
   14b1e:	46 0f 8f 38 02 00 00 	rex.RX jg 14d5d <_obstack_memory_used@@Base+0x45ad>
   14b25:	74 64                	je     14b8b <_obstack_memory_used@@Base+0x43db>
   14b27:	31 d2                	xor    %edx,%edx
   14b29:	48 29 ff             	sub    %rdi,%rdi
   14b2c:	48 89 ef             	mov    %rbp,%rdi
   14b2f:	e8 8c 00 ff ff       	call   4bc0 <strtoumax@plt>
   14b34:	49 8b 0f             	mov    (%r15),%rcx
   14b37:	48 89 c3             	mov    %rax,%rbx
   14b3a:	48 39 cd             	cmp    %rcx,%rbp
   14b3d:	74 4d                	je     14b8c <_obstack_memory_used@@Base+0x43dc>
   14b3f:	39 c8                	cmp    %ecx,%eax
   14b41:	04 24                	add    $0x24,%al
   14b43:	eb fd                	jmp    14b42 <_obstack_memory_used@@Base+0x4392>
   14b45:	24 ff                	and    $0xff,%al
   14b47:	ff                   	(bad)  
   14b48:	ff e4                	jmp    *%rsp
   14b4a:	48 c1 eb 0f          	shr    $0xf,%rbx
   14b4e:	48 c1 eb 10          	shr    $0x10,%rbx
   14b52:	ba 00 00 0f 84       	mov    $0x840f0000,%edx
   14b57:	c3                   	ret    
   14b58:	03 00                	add    (%rax),%eax
   14b5a:	00 8b 44 24 28 64    	add    %cl,0x64282444(%rbx)
   14b60:	48 2b 04 25 28 00 00 	sub    0x28,%rax
   14b67:	00 
   14b68:	0f 85 cc 03 00 00    	jne    14f3a <_obstack_memory_used@@Base+0x478a>
   14b6e:	48 83 c4 38          	add    $0x38,%rsp
   14b72:	44 89 4d 29          	mov    %r9d,0x29(%rbp)
   14b76:	e7 41                	out    %eax,$0x41
   14b78:	5c                   	pop    %rsp
   14b79:	41 5d                	pop    %r13
   14b7b:	41 5e                	pop    %r14
   14b7d:	41 5f                	pop    %r15
   14b7f:	c3                   	ret    
   14b80:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   14b86:	83 f8 22             	cmp    $0x22,%eax
   14b89:	0f 49 21             	cmovns (%rcx),%esp
   14b8c:	f2 ff                	repnz (bad) 
   14b8e:	ff 00                	incl   (%rax)
   14b90:	00 eb                	add    %ch,%bl
   14b92:	c7                   	(bad)  
   14b93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14b98:	0f b6 29             	movzbl (%rcx),%ebp
   14b9b:	48 89 48 ff          	mov    %rcx,-0x1(%rax)
   14b9f:	c6                   	(bad)  
   14ba0:	f7 84 49 c1 e0 2d 48 	testl  $0xfc43c2c7,0x482de0c1(%rcx,%rcx,2)
   14ba7:	c7 c2 43 fc 
   14bab:	ff                   	(bad)  
   14bac:	ff f7                	push   %rdi
   14bae:	fb                   	sti    
   14baf:	bb 01 00 00 00       	mov    $0x1,%ebx
   14bb4:	e8 17 fd fe ff       	call   48d0 <strchr@plt>
   14bb9:	48 8b 4c 49 29       	mov    0x29(%rcx,%rcx,2),%rcx
   14bbe:	c1 85 c0 74 48 c7 c7 	roll   $0xc7,-0x38b78b40(%rbp)
   14bc5:	5e                   	pop    %rsi
   14bc6:	02 00                	add    (%rax),%al
   14bc8:	00 0f                	add    %cl,(%rdi)
   14bca:	84 e6                	test   %ah,%dh
   14bcc:	01 00                	add    %eax,(%rax)
   14bce:	00 b6 f8 41 b9 01    	add    %dh,0x1b941f8(%rsi)
   14bd4:	00 00                	add    %al,(%rax)
   14bd6:	4c                   	rex.WR
   14bd7:	4c                   	rex.WR
   14bd8:	49 ff c7             	inc    %r15
   14bdb:	30 00                	xor    %al,(%rax)
   14bdd:	44 81 00 00 48 21 fe 	rex.R addl $0xfe214800,(%rax)
   14be4:	4c                   	rex.WR
   14be5:	4c 31 d1             	xor    %r10,%rcx
   14be8:	0f a3 c6             	bt     %eax,%esi
   14beb:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   14bf0:	72 46                	jb     14c38 <_obstack_memory_used@@Base+0x4488>
   14bf2:	8d 55 be             	lea    -0x42(%rbp),%edx
   14bf5:	80 fa 35             	cmp    $0x35,%dl
   14bf8:	77 31                	ja     14c2b <_obstack_memory_used@@Base+0x447b>
   14bfa:	4c 09 d1             	or     %r10,%rcx
   14bfd:	5b                   	pop    %rbx
   14bfe:	7c 00                	jl     14c00 <_obstack_memory_used@@Base+0x4450>
   14c00:	00 0f                	add    %cl,(%rdi)
   14c02:	b6 d2                	mov    $0xd2,%dh
   14c04:	48 63 49 21          	movslq 0x21(%rcx),%rcx
   14c08:	da 01                	fiaddl (%rcx)
   14c0a:	f0 3e ff e0          	lock notrack jmp *%rax
   14c0e:	0f 84 92 02 00 00    	je     14ea6 <_obstack_memory_used@@Base+0x46f6>
   14c14:	f7 fb                	idiv   %ebx
   14c16:	f7 48 89 4c 24 48 49 	testl  $0x4948244c,-0x77(%rax)
   14c1d:	f7 fb                	idiv   %ebx
   14c1f:	fe                   	(bad)  
   14c20:	ff 48 8b             	decl   -0x75(%rax)
   14c23:	4c 24 4c             	rex.WR and $0x4c,%al
   14c26:	31 f7                	xor    %esi,%edi
   14c28:	85 6b 02             	test   %ebp,0x2(%rbx)
   14c2b:	00 00                	add    %al,(%rax)
   14c2d:	00 00                	add    %al,(%rax)
   14c2f:	41 83 cc 02          	or     $0x2,%r12d
   14c33:	e9 22 ff ff 48       	jmp    49014b5a <obstack_alloc_failed_handler@@Base+0x48ff2aba>
   14c38:	31 c3                	xor    %eax,%ebx
   14c3a:	00 00                	add    %al,(%rax)
   14c3c:	00 4c 89 f7          	add    %cl,-0x9(%rcx,%rcx,4)
   14c40:	4d 0f af c6          	imul   %r14,%r8
   14c44:	14 44                	adc    $0x44,%al
   14c46:	89 44 24 10          	mov    %eax,0x10(%rsp)
   14c4a:	48 89 4d 4c          	mov    %rcx,0x4c(%rbp)
   14c4e:	01 e3                	add    %esp,%ebx
   14c50:	7c fc                	jl     14c4e <_obstack_memory_used@@Base+0x449e>
   14c52:	fe                   	(bad)  
   14c53:	ff 48 8b             	decl   -0x75(%rax)
   14c56:	4c 24 08             	rex.WR and $0x8,%al
   14c59:	41 b8 00 e9 be fc    	mov    $0xfcbee900,%r8d
   14c5f:	ff                   	(bad)  
   14c60:	ff 48 c1             	decl   -0x3f(%rax)
   14c63:	eb 29                	jmp    14c8e <_obstack_memory_used@@Base+0x44de>
   14c65:	48 85 c0             	test   %rax,%rax
   14c68:	74 88                	je     14bf2 <_obstack_memory_used@@Base+0x4442>
   14c6a:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
   14c6e:	3c 44                	cmp    $0x44,%al
   14c70:	0f 84 49 0f af fd    	je     fffffffffdb05bbf <obstack_alloc_failed_handler@@Base+0xfffffffffdae3b1f>
   14c76:	c4 c2 74 0f          	(bad)
   14c7a:	8f                   	(bad)  
   14c7b:	56                   	push   %rsi
   14c7c:	03 00                	add    (%rax),%eax
   14c7e:	00 02                	add    %al,(%rdx)
   14c80:	00 00                	add    %al,(%rax)
   14c82:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14c87:	48 8d 15 a6 7c 00 00 	lea    0x7ca6(%rip),%rdx        # 1c934 <_obstack_memory_used@@Base+0xc184>
   14c8e:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   14c92:	48 01 d0             	add    %rdx,%rax
   14c95:	3e ff e0             	notrack jmp *%rax
   14c98:	45 31 c9             	xor    %r9d,%r9d
   14c9b:	80 79 02 42          	cmpb   $0x42,0x2(%rcx)
   14c9f:	41 0f 94 c1          	sete   %r9b
   14ca3:	47 8d 4c 09 01       	lea    0x1(%r9,%r9,1),%r9d
   14ca8:	e9 45 0f 84 a7       	jmp    ffffffffa7855bf2 <obstack_alloc_failed_handler@@Base+0xffffffffa7833b52>
   14cad:	00 00                	add    %al,(%rax)
   14caf:	00 c1                	add    %al,%cl
   14cb1:	e5 25                	in     $0x25,%eax
   14cb3:	0f 8f 3c fe ff ff    	jg     14af5 <_obstack_memory_used@@Base+0x4345>
   14cb9:	c3                   	ret    
   14cba:	bf 0f 85 26 fc       	mov    $0xfc26850f,%edi
   14cbf:	ff                   	(bad)  
   14cc0:	ff 89 d8 48 f7 e5    	decl   -0x1a08b728(%rcx)
   14cc6:	48 89 c3             	mov    %rax,%rbx
   14cc9:	0f 80 41 02 00 00    	jo     14f10 <_obstack_memory_used@@Base+0x4760>
   14ccf:	83 ee 01             	sub    $0x1,%esi
   14cd2:	75 ec                	jne    14cc0 <_obstack_memory_used@@Base+0x4510>
   14cd4:	41 09 4d 09          	or     %ecx,0x9(%r13)
   14cd8:	d5                   	(bad)  
   14cd9:	4d 01 c2             	add    %r8,%r10
   14cdc:	49                   	rex.WB
   14cdd:	4d 31 d3             	xor    %r10,%r11
   14ce0:	4d 89 0f             	mov    %r9,(%r15)
   14ce3:	41 80 39 00          	cmpb   $0x0,(%r9)
   14ce7:	44 0f 49 09          	cmovns (%rcx),%r9d
   14ceb:	cf                   	iret   
   14cec:	66 fe                	data16 (bad) 
   14cee:	ff                   	(bad)  
   14cef:	ff 49 63             	decl   0x63(%rcx)
   14cf2:	e8 4d 63 c9 48       	call   48cab044 <obstack_alloc_failed_handler@@Base+0x48c88fa4>
   14cf7:	89 d8                	mov    %ebx,%eax
   14cf9:	0f 84 ad 03 00 00    	je     150ac <_obstack_memory_used@@Base+0x48fc>
   14cff:	f7 e5                	mul    %ebp
   14d01:	70 16                	jo     14d19 <_obstack_memory_used@@Base+0x4569>
   14d03:	48 89 c3             	mov    %rax,%rbx
   14d06:	eb e9                	jmp    14cf1 <_obstack_memory_used@@Base+0x4541>
   14d08:	7e fd                	jle    14d07 <_obstack_memory_used@@Base+0x4557>
   14d0a:	ff                   	(bad)  
   14d0b:	ff e0                	jmp    *%rax
   14d0d:	c9                   	leave  
   14d0e:	48                   	rex.W
   14d0f:	49 c7 c5 1d fe ff ff 	mov    $0xfffffffffffffe1d,%r13
   14d16:	c3                   	ret    
   14d17:	71 be                	jno    14cd7 <_obstack_memory_used@@Base+0x4527>
   14d19:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   14d1f:	48 83 cb ff          	or     $0xffffffffffffffff,%rbx
   14d23:	eb b2                	jmp    14cd7 <_obstack_memory_used@@Base+0x4527>
   14d25:	0f 1f 00             	nopl   (%rax)
   14d28:	49 63 e8             	movslq %r8d,%rbp
   14d2b:	4d 63 c9             	movslq %r9d,%r9
   14d2e:	48 89 d8             	mov    %rbx,%rax
   14d31:	48 f7 4c 29 de 05 02 	testq  $0x205,-0x22(%rcx,%rbp,1)
   14d38:	00 00 
   14d3a:	48 0f 8c 28 fc ff ff 	rex.W jl 14969 <_obstack_memory_used@@Base+0x41b9>
   14d41:	eb 90                	jmp    14cd3 <_obstack_memory_used@@Base+0x4523>
   14d43:	48 0f 8c 4b 01 00 00 	rex.W jl 14e95 <_obstack_memory_used@@Base+0x46e5>
   14d4a:	00 00                	add    %al,(%rax)
   14d4c:	48 89 c3             	mov    %rax,%rbx
   14d4f:	4d 21 4c 85 fb       	and    %r9,-0x5(%r13,%rax,4)
   14d54:	49                   	rex.WB
   14d55:	49 29 da             	sub    %rbx,%r10
   14d58:	4d 0f 85 61 ff ff 0f 	rex.WRB jne 10014cc0 <obstack_alloc_failed_handler@@Base+0xfff2c20>
   14d5f:	8f                   	(bad)  
   14d60:	b4 01                	mov    $0x1,%ah
   14d62:	00 00                	add    %al,(%rax)
   14d64:	e3 0a                	jrcxz  14d70 <_obstack_memory_used@@Base+0x45c0>
   14d66:	0f 8f 4d 0f af ec    	jg     ffffffffecb05cb9 <obstack_alloc_failed_handler@@Base+0xffffffffecae3c19>
   14d6c:	63 c9                	movsxd %ecx,%ecx
   14d6e:	48 85 db             	test   %rbx,%rbx
   14d71:	78 a6                	js     14d19 <_obstack_memory_used@@Base+0x4569>
   14d73:	0f 85 46 4d 09 cb    	jne    ffffffffcb0a9abf <obstack_alloc_failed_handler@@Base+0xffffffffcb087a1f>
   14d79:	ff                   	(bad)  
   14d7a:	ff 48 39             	decl   0x39(%rax)
   14d7d:	d1 e9                	shr    %ecx
   14d7f:	54                   	push   %rsp
   14d80:	ff                   	(bad)  
   14d81:	ff                   	(bad)  
   14d82:	ff 49 63             	decl   0x63(%rcx)
   14d85:	e9 bf 00 00 00       	jmp    14e49 <_obstack_memory_used@@Base+0x4699>
   14d8a:	06                   	(bad)  
   14d8b:	00 00                	add    %al,(%rax)
   14d8d:	00 31                	add    %dh,(%rcx)
   14d8f:	ff 48 89             	decl   -0x77(%rax)
   14d92:	49 f7 fb             	idiv   %r11
   14d95:	e5 48                	in     $0x48,%eax
   14d97:	89 4d 29             	mov    %ecx,0x29(%rbp)
   14d9a:	ca db 01             	lret   $0x1db
   14d9d:	00 49 ff             	add    %cl,-0x1(%rcx)
   14da0:	c6 01 4d             	movb   $0x4d,(%rcx)
   14da3:	29 cf                	sub    %ecx,%edi
   14da5:	2b 0f                	sub    (%rdi),%ecx
   14da7:	85 98 01 e9 df 02    	test   %ebx,0x2dfe901(%rax)
   14dad:	00 4c 85 f9          	add    %cl,-0x7(%rbp,%rax,4)
   14db1:	e8 37 0f 85 60       	call   60865ced <obstack_alloc_failed_handler@@Base+0x60843c4d>
   14db6:	ff                   	(bad)  
   14db7:	ff                   	(bad)  
   14db8:	ff 48 c1             	decl   -0x3f(%rax)
   14dbb:	e3 09                	jrcxz  14dc6 <_obstack_memory_used@@Base+0x4616>
   14dbd:	4d 01 cf             	add    %r9,%r15
   14dc0:	01 ce                	add    %ecx,%esi
   14dc2:	49                   	rex.WB
   14dc3:	49 f7 fc             	idiv   %r12
   14dc6:	4c 29 e8             	sub    %r13,%rax
   14dc9:	07                   	(bad)  
   14dca:	00 0f                	add    %cl,(%rdi)
   14dcc:	8c ab fc ff ff 89    	mov    %gs,-0x76000004(%rbx)
   14dd2:	d8 4d 09             	fmuls  0x9(%rbp)
   14dd5:	c0 48 89 c3          	rorb   $0xc3,-0x77(%rax)
   14dd9:	0f 80 3f 48 ff c2    	jo     ffffffffc300961e <obstack_alloc_failed_handler@@Base+0xffffffffc2fe757e>
   14ddf:	83 ee 4d             	sub    $0x4d,%esi
   14de2:	85 f6                	test   %esi,%esi
   14de4:	e9 eb fe ff ff       	jmp    14cd4 <_obstack_memory_used@@Base+0x4524>
   14de9:	49                   	rex.WB
   14dea:	49 f7 fc             	idiv   %r12
   14ded:	4d 21 c8             	and    %r9,%r8
   14df0:	05 00 00 00 31       	add    $0x31000000,%eax
   14df5:	0f 85 49 f7 fd 4d    	jne    4dff4544 <obstack_alloc_failed_handler@@Base+0x4dfd24a4>
   14dfb:	0f af ce             	imul   %esi,%ecx
   14dfe:	48                   	rex.W
   14dff:	49 f7 f8             	idiv   %r8
   14e02:	0f 84 16 ff ff ff    	je     14d1e <_obstack_memory_used@@Base+0x456e>
   14e08:	48 85 d3             	test   %rdx,%rbx
   14e0b:	f3 00 00             	repz add %al,(%rax)
   14e0e:	00 83 ee 01 75 ec    	add    %al,-0x138afe12(%rbx)
   14e14:	e9 bb fe ff ff       	jmp    14cd4 <_obstack_memory_used@@Base+0x4524>
   14e19:	49 63 e8             	movslq %r8d,%rbp
   14e1c:	4d 63 c9             	movslq %r9d,%r9
   14e1f:	be 08 4d 09 d8       	mov    $0xd8094d08,%esi
   14e24:	31 ff                	xor    %edi,%edi
   14e26:	66 2e 0f 1f 84 4c 29 	cs nopw -0x1f3eb7d7(%rsp,%rcx,2)
   14e2d:	48 c1 e0 
   14e30:	2b 89 d8 48 f7 e5    	sub    -0x1a08b728(%rcx),%ecx
   14e36:	48                   	rex.W
   14e37:	4c 85 d6             	test   %r10,%rsi
   14e3a:	80 ed 00             	sub    $0x0,%ch
   14e3d:	00 4d 49             	add    %cl,0x49(%rbp)
   14e40:	c1 e9 3c             	shr    $0x3c,%ecx
   14e43:	ec                   	in     (%dx),%al
   14e44:	49 29 d8             	sub    %rbx,%r8
   14e47:	c2 48 49             	ret    $0x4948
   14e4a:	c1 e6 03             	shl    $0x3,%esi
   14e4d:	00 00                	add    %al,(%rax)
   14e4f:	bd 00 04 00 00       	mov    $0x400,%ebp
   14e54:	e9 5a 0f 84 81       	jmp    ffffffff81855db3 <obstack_alloc_failed_handler@@Base+0xffffffff81833d13>
   14e59:	01 00                	add    %eax,(%rax)
   14e5b:	00 49 89             	add    %cl,-0x77(%rcx)
   14e5e:	d9 bd 00 49 31 c7    	fnstcw -0x38ceb700(%rbp)
   14e64:	e9 a5 fe ff ff       	jmp    14d0e <_obstack_memory_used@@Base+0x455e>
   14e69:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   14e6f:	bd 00 04 49 01       	mov    $0x1490400,%ebp
   14e74:	df b5 fe ff ff e9    	fbstp  -0x16000002(%rbp)
   14e7a:	2a 01                	sub    (%rcx),%al
   14e7c:	00 00                	add    %al,(%rax)
   14e7e:	4c 0f af c0          	imul   %rax,%r8
   14e82:	0f 8f 3a fc ff ff    	jg     14ac2 <_obstack_memory_used@@Base+0x4312>
   14e88:	ff 41 b9             	incl   -0x47(%rcx)
   14e8b:	01 00                	add    %eax,(%rax)
   14e8d:	00 00                	add    %al,(%rax)
   14e8f:	bd 00 04 00 00       	mov    $0x400,%ebp
   14e94:	e9 56 ff ff ff       	jmp    14def <_obstack_memory_used@@Base+0x463f>
   14e99:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   14e9f:	bd 00 04 00 00       	mov    $0x400,%ebp
   14ea4:	e9 76 ff ff ff       	jmp    14e1f <_obstack_memory_used@@Base+0x466f>
   14ea9:	41 b9 49 ff c0 00    	mov    $0xc0ff49,%r9d
   14eaf:	bd 00 04 4d 21       	mov    $0x214d0400,%ebp
   14eb4:	d3 d0                	rcl    %cl,%eax
   14eb6:	4c                   	rex.WR
   14eb7:	49 c7 c1 3c fe ff ff 	mov    $0xfffffffffffffe3c,%r9
   14ebe:	00 e9                	add    %ch,%cl
   14ec0:	13 fe                	adc    %esi,%edi
   14ec2:	ff                   	(bad)  
   14ec3:	ff 41 b9             	incl   -0x47(%rcx)
   14ec6:	01 00                	add    %eax,(%rax)
   14ec8:	00 00                	add    %al,(%rax)
   14eca:	e9 dd 48 0f 84       	jmp    ffffffff841097ac <obstack_alloc_failed_handler@@Base+0xffffffff840e770c>
   14ecf:	06                   	(bad)  
   14ed0:	03 00                	add    (%rax),%eax
   14ed2:	00 00                	add    %al,(%rax)
   14ed4:	00 bd 00 04 00 00    	add    %bh,0x400(%rbp)
   14eda:	0f 8f 3d fe ff ff    	jg     14d1d <_obstack_memory_used@@Base+0x456d>
   14ee0:	41 b9 01 00 4d 21    	mov    $0x214d0001,%r9d
   14ee6:	f7 b8 00 04 00 00    	idivl  0x400(%rax)
   14eec:	e9 01 fd 4c 0f       	jmp    f4e4bf2 <obstack_alloc_failed_handler@@Base+0xf4c2b52>
   14ef1:	af                   	scas   %es:(%rdi),%eax
   14ef2:	d7                   	xlat   %ds:(%rbx)
   14ef3:	02 00                	add    (%rax),%al
   14ef5:	00 00                	add    %al,(%rax)
   14ef7:	41 b8 4d 29 ce 21    	mov    $0x21ce294d,%r8d
   14efd:	da f0                	(bad)  
   14eff:	fc                   	cld    
   14f00:	ff                   	(bad)  
   14f01:	ff 48 39             	decl   0x39(%rax)
   14f04:	f8                   	clc    
   14f05:	49 c1 ec 17          	shr    $0x17,%r12
   14f09:	cb                   	lret   
   14f0a:	ff                   	(bad)  
   14f0b:	e9 ff fe ff ff       	jmp    14e0f <_obstack_memory_used@@Base+0x465f>
   14f10:	bf 01 00 48 c7       	mov    $0xc7480001,%edi
   14f15:	c6                   	(bad)  
   14f16:	b3 03                	mov    $0x3,%bl
   14f18:	00 00                	add    %al,(%rax)
   14f1a:	b1 fd                	mov    $0xfd,%cl
   14f1c:	ff                   	(bad)  
   14f1d:	ff                   	(bad)  
   14f1e:	bf 01 48 48 09       	mov    $0x9484801,%edi
   14f23:	df 48 f7             	fisttps -0x9(%rax)
   14f26:	f9                   	stc    
   14f27:	49 31 ca             	xor    %rcx,%r10
   14f2a:	ff                   	(bad)  
   14f2b:	ff                   	(bad)  
   14f2c:	bf 01 00 00 00       	mov    $0x1,%edi
   14f31:	48 83 49 e9 3f       	orq    $0x3f,-0x17(%rcx)
   14f36:	fd                   	std    
   14f37:	ff                   	(bad)  
   14f38:	ff                   	(bad)  
   14f39:	ff                   	(bad)  
   14f3a:	e8 51 f9 fe ff       	call   4890 <__stack_chk_fail@plt>
   14f3f:	b8 01 48 89 f7       	mov    $0xf7894801,%eax
   14f44:	48 83 cb ff          	or     $0xffffffffffffffff,%rbx
   14f48:	e9 04 fe ff 0f       	jmp    10014d51 <obstack_alloc_failed_handler@@Base+0xfff2cb1>
   14f4d:	8f                   	(bad)  
   14f4e:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   14f4f:	fc                   	cld    
   14f50:	ff                   	(bad)  
   14f51:	ff 48 83             	decl   -0x7d(%rax)
   14f54:	cb                   	lret   
   14f55:	ff                   	(bad)  
   14f56:	e9 44 fe ff ff       	jmp    14d9f <_obstack_memory_used@@Base+0x45ef>
   14f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14f60:	f3 0f 1e fa          	endbr64 
   14f64:	41 57                	push   %r15
   14f66:	49 89 4c 89 c8       	mov    %rcx,-0x38(%r9,%rcx,4)
   14f6b:	c6                   	(bad)  
   14f6c:	89 ce                	mov    %ecx,%esi
   14f6e:	41 55                	push   %r13
   14f70:	49 89 d5             	mov    %rdx,%r13
   14f73:	41 54                	push   %r12
   14f75:	55                   	push   %rbp
   14f76:	53                   	push   %rbx
   14f77:	4c 31 fa             	xor    %r15,%rdx
   14f7a:	18 05 4c 21 d9 8b    	sbb    %al,-0x7426deb4(%rip)        # ffffffff8bda70cc <obstack_alloc_failed_handler@@Base+0xffffffff8bd8502c>
   14f80:	79 30                	jns    14fb2 <_obstack_memory_used@@Base+0x4802>
   14f82:	44 8b 79 08          	mov    0x8(%rcx),%r15d
   14f86:	0f 84 8b 00 00 00    	je     15017 <_obstack_memory_used@@Base+0x4867>
   14f8c:	43 01 00             	rex.XB add %eax,(%r8)
   14f8f:	00 74 24 08          	add    %dh,0x8(%rsp)
   14f93:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
   14f98:	44 8b 94 24 48 39 f8 	mov    0xf83948(%rsp),%r10d
   14f9f:	00 
   14fa0:	48 89 44 24 0f       	mov    %rax,0xf(%rsp)
   14fa5:	8c 99 02 00 00 0f    	mov    %ds,0xf000002(%rcx)
   14fab:	8c b1 fc ff ff 00    	mov    %?,0xfffffc(%rcx)
   14fb1:	00 00                	add    %al,(%rax)
   14fb3:	75 6e                	jne    15023 <_obstack_memory_used@@Base+0x4873>
   14fb5:	84 24 08             	test   %ah,(%rax,%rcx,1)
   14fb8:	05 00 00 31 c0       	add    $0xc0310000,%eax
   14fbd:	48 85 49 29          	test   %rcx,0x29(%rcx)
   14fc1:	f6 05 f6 4b 00 00 48 	testb  $0x48,0x4bf6(%rip)        # 19bbe <_obstack_memory_used@@Base+0x940e>
   14fc8:	0f 45 49 ff          	cmovne -0x1(%rcx),%ecx
   14fcc:	c4                   	(bad)  
   14fcd:	44 24 28             	rex.R and $0x28,%al
   14fd0:	41 83 ff 0c          	cmp    $0xc,%r15d
   14fd4:	0f 49 c1             	cmovns %ecx,%eax
   14fd7:	e3 49                	jrcxz  15022 <_obstack_memory_used@@Base+0x4872>
   14fd9:	21 c8                	and    %ecx,%eax
   14fdb:	83 49 48 21          	orl    $0x21,0x48(%rcx)
   14fdf:	48 c1 eb 16          	shr    $0x16,%rbx
   14fe3:	45 31 e4             	xor    %r12d,%r12d
   14fe6:	84 c0                	test   %al,%al
   14fe8:	74 71                	je     1505b <_obstack_memory_used@@Base+0x48ab>
   14fea:	44 89 7c 24 50       	mov    %r15d,0x50(%rsp)
   14fef:	4c                   	rex.WR
   14ff0:	4c 0f af e0          	imul   %rax,%r12
   14ff4:	09 4c 89 74          	or     %ecx,0x74(%rcx,%rcx,4)
   14ff8:	24 10                	and    $0x10,%al
   14ffa:	3c 25                	cmp    $0x25,%al
   14ffc:	0f 84 e6 00 0f 8c    	je     ffffffff8c1050e8 <obstack_alloc_failed_handler@@Base+0xffffffff8c0e3048>
   15002:	b8 fc 48 21 f8       	mov    $0xf82148fc,%eax
   15007:	8b 54 24 08          	mov    0x8(%rsp),%edx
   1500b:	41 be 01 00 00 00    	mov    $0x1,%r14d
   15011:	48 0f 4d 09          	cmovge (%rcx),%rcx
   15015:	ce                   	(bad)  
   15016:	85 c0                	test   %eax,%eax
   15018:	4c 0f 8c b7 00 7f 5d 	rex.WR jl 5d8050d6 <obstack_alloc_failed_handler@@Base+0x5d7e3036>
   1501f:	fa                   	cli    
   15020:	39 d6                	cmp    %edx,%esi
   15022:	73 54                	jae    15078 <_obstack_memory_used@@Base+0x48c8>
   15024:	48 85 ed             	test   %rbp,%rbp
   15027:	74 15                	je     1503e <_obstack_memory_used@@Base+0x488e>
   15029:	4d 31 c8             	xor    %r9,%r8
   1502c:	0f 8f 7e 00 00 00    	jg     150b0 <_obstack_memory_used@@Base+0x4900>
   15032:	41 0f b6 4d 31       	movzbl 0x31(%r13),%ecx
   15037:	dd 83 c5 01 88 45    	fldl   0x458801c5(%rbx)
   1503d:	ff 4d 01             	decl   0x1(%rbp)
   15040:	f4                   	hlt    
   15041:	4d 89 ee             	mov    %r13,%r14
   15044:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
   15049:	4d 8d 6e 01          	lea    0x1(%r14),%r13
   1504d:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   15054:	49 f7 fa             	idiv   %r10
   15057:	a2 49 89 eb 4d 85 db 	movabs %al,0x1b74db854deb8949
   1505e:	74 1b 
   15060:	48 83 0f 8c          	orq    $0xffffffffffffff8c,(%rdi)
   15064:	0a ff                	or     %bh,%bh
   15066:	ff 48 f7             	decl   -0x9(%rax)
   15069:	f9                   	stc    
   1506a:	03 00                	add    (%rax),%eax
   1506c:	eb 0d                	jmp    1507b <_obstack_memory_used@@Base+0x48cb>
   1506e:	4c 39 64 24 08       	cmp    %r12,0x8(%rsp)
   15073:	75 cf                	jne    15044 <_obstack_memory_used@@Base+0x4894>
   15075:	0f 1f 49 f7          	nopl   -0x9(%rcx)
   15079:	f9                   	stc    
   1507a:	e4 4c                	in     $0x4c,%al
   1507c:	21 ef                	and    %ebp,%edi
   1507e:	48 ff c7             	inc    %rdi
   15081:	00 00                	add    %al,(%rax)
   15083:	64 48 2b 04 4c       	sub    %fs:(%rsp,%rcx,2),%rax
   15088:	21 fb                	and    %edi,%ebx
   1508a:	00 00                	add    %al,(%rax)
   1508c:	0f 85 81 1d 00 00    	jne    16e13 <_obstack_memory_used@@Base+0x6663>
   15092:	48 81 c4 18 05 00 00 	add    $0x518,%rsp
   15099:	4c 89 48 48          	mov    %r9,0x48(%rax)
   1509d:	89 fa                	mov    %edi,%edx
   1509f:	85 c1                	test   %eax,%ecx
   150a1:	5d                   	pop    %rbp
   150a2:	41 5e                	pop    %r14
   150a4:	41 5f                	pop    %r15
   150a6:	c3                   	ret    
   150a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   150ae:	00 00 
   150b0:	4d 85 fc             	test   %r15,%r12
   150b3:	ff 48 89             	decl   -0x77(%rax)
   150b6:	ef                   	out    %eax,(%dx)
   150b7:	be 48 c1 eb 12       	mov    $0x12ebc148,%esi
   150bc:	48 89 da             	mov    %rbx,%rdx
   150bf:	48 01 dd             	add    %rbx,%rbp
   150c2:	49 c1 e0 15          	shl    $0x15,%r8
   150c6:	0f af e6             	imul   %esi,%esp
   150c9:	ff                   	(bad)  
   150ca:	ff                   	(bad)  
   150cb:	ff 0f                	decl   (%rdi)
   150cd:	1f                   	(bad)  
   150ce:	40 00 45 85          	rex add %al,-0x7b(%rbp)
   150d2:	ff                   	(bad)  
   150d3:	b8 0c 00 00 00       	mov    $0xc,%eax
   150d8:	44 0f 44 f8          	cmove  %eax,%r15d
   150dc:	e9 74 4d 31 f5       	jmp    fffffffff5329e55 <obstack_alloc_failed_handler@@Base+0xfffffffff5307db5>
   150e1:	fe                   	(bad)  
   150e2:	1f                   	(bad)  
   150e3:	80 00 49             	addb   $0x49,(%rax)
   150e6:	29 df                	sub    %ebx,%edi
   150e8:	0f 4c 85 f8 23 45 31 	cmovl  0x314523f8(%rbp),%eax
   150ef:	49 0f 8c 28 fd ff ff 	rex.WB jl 14e1e <_obstack_memory_used@@Base+0x466e>
   150f6:	bd 00 00 00 45       	mov    $0x45000000,%ebp
   150fb:	01 49 83             	add    %ecx,-0x7d(%rcx)
   150fe:	c5 01 41             	(bad)
   15101:	8d 48 0f             	lea    0xf(%rax),%ecx
   15104:	84 16                	test   %dl,(%rsi)
   15106:	01 00                	add    %eax,(%rax)
   15108:	00 f6                	add    %dh,%dh
   1510a:	80 f9 3c             	cmp    $0x3c,%cl
   1510d:	77 2d                	ja     1513c <_obstack_memory_used@@Base+0x498c>
   1510f:	4d                   	rex.WRB
   15110:	49 ff c7             	inc    %r15
   15113:	00 00                	add    %al,(%rax)
   15115:	4c 31 f2             	xor    %r14,%rdx
   15118:	10 48 01             	adc    %cl,0x1(%rax)
   1511b:	df 00                	filds  (%rax)
   1511d:	00 48 d3             	add    %cl,-0x2d(%rax)
   15120:	e2 49                	loop   1516b <_obstack_memory_used@@Base+0x49bb>
   15122:	f7 fe                	idiv   %esi
   15124:	0f 85 96 01 00 00    	jne    152c0 <_obstack_memory_used@@Base+0x4b10>
   1512a:	80 f9 3b             	cmp    $0x3b,%cl
   1512d:	0f 84 87 15 00 00    	je     166ba <_obstack_memory_used@@Base+0x5f0a>
   15133:	83 0f 84             	orl    $0xffffff84,(%rdi)
   15136:	8b fd                	mov    %ebp,%edi
   15138:	ff                   	(bad)  
   15139:	ff 00                	incl   (%rax)
   1513b:	00 0f                	add    %cl,(%rdi)
   1513d:	8f                   	(bad)  
   1513e:	4b fc                	rex.WXB cld 
   15140:	ff                   	(bad)  
   15141:	ff                   	(bad)  
   15142:	f8                   	clc    
   15143:	09 0f                	or     %ecx,(%rdi)
   15145:	86 36                	xchg   %dh,(%rsi)
   15147:	01 00                	add    %eax,(%rax)
   15149:	00 e9                	add    %ch,%cl
   1514b:	49 89 49 c1          	mov    %rcx,-0x3f(%r9)
   1514f:	eb 13                	jmp    15164 <_obstack_memory_used@@Base+0x49b4>
   15151:	0f 85 3f fd ff ff    	jne    14e96 <_obstack_memory_used@@Base+0x46e6>
   15157:	0f 85 35 03 00 00    	jne    15492 <_obstack_memory_used@@Base+0x4ce2>
   1515d:	fb                   	sti    
   1515e:	0d 91 49 21 ce       	or     $0xce214991,%eax
   15163:	48 29 c0             	sub    %rax,%rax
   15166:	d6                   	(bad)  
   15167:	48 63 14 91          	movslq (%rcx,%rdx,4),%rdx
   1516b:	48 01 ca             	add    %rcx,%rdx
   1516e:	4c 09 cb             	or     %r9,%rbx
   15171:	4d 89 fc             	mov    %r15,%r12
   15174:	00 00                	add    %al,(%rax)
   15176:	75 f4                	jne    1516c <_obstack_memory_used@@Base+0x49bc>
   15178:	41 0f b6 75 01       	movzbl 0x1(%r13),%esi
   1517d:	4d                   	rex.WRB
   1517e:	49 c7 c3 f0 49 89 db 	mov    $0xffffffffdb8949f0,%r11
   15185:	77 4d                	ja     151d4 <_obstack_memory_used@@Base+0x4a24>
   15187:	09 d6                	or     %edx,%esi
   15189:	49 39 d6             	cmp    %rdx,%r14
   1518c:	00 00                	add    %al,(%rax)
   1518e:	e9 7d fd ff ff       	jmp    14f10 <_obstack_memory_used@@Base+0x4760>
   15193:	0f 8f 68 03 00 00    	jg     15501 <_obstack_memory_used@@Base+0x4d51>
   15199:	c3                   	ret    
   1519a:	8a 00                	mov    (%rax),%al
   1519c:	00 00                	add    %al,(%rax)
   1519e:	4d 89 ff             	mov    %r15,%r15
   151a1:	89 f5                	mov    %esi,%ebp
   151a3:	4d 89 ee             	mov    %r13,%r14
   151a6:	66 e9 4d 48          	jmpw   99f7 <__sprintf_chk@plt+0x4d17>
   151aa:	c7 c1 6d fd ff ff    	mov    $0xfffffd6d,%ecx
   151b0:	49 8d 46 4c          	lea    0x4c(%r14),%rax
   151b4:	01 e2                	add    %esp,%edx
   151b6:	56                   	push   %rsi
   151b7:	01 7c 3b c7          	add    %edi,-0x39(%rbx,%rdi,1)
   151bb:	89 d1                	mov    %edx,%ecx
   151bd:	29 0f                	sub    %ecx,(%rdi)
   151bf:	4d 31 e7             	xor    %r12,%r15
   151c2:	00 00                	add    %al,(%rax)
   151c4:	f7 49 ff c5 ef 48 63 	testl  $0x6348efc5,-0x1(%rcx)
   151cb:	c9                   	leave  
   151cc:	85 db                	test   %ebx,%ebx
   151ce:	0f 88 04 14 00 00    	js     165d8 <_obstack_memory_used@@Base+0x5e28>
   151d4:	41 83 fb 2d          	cmp    $0x2d,%r11d
   151d8:	0f 84 4c 21 c7 4d    	je     4dc8732a <obstack_alloc_failed_handler@@Base+0x4dc6528a>
   151de:	01 d5                	add    %edx,%ebp
   151e0:	49 29 d0             	sub    %rdx,%r8
   151e3:	d1 48 89             	rorl   -0x77(%rax)
   151e6:	d3 48 0f             	rorl   %cl,0xf(%rax)
   151e9:	43 d9 4c 89 fe       	(bad)  -0x2(%r9,%r9,4)
   151ee:	24 08                	and    $0x8,%al
   151f0:	4c                   	rex.WR
   151f1:	48 c1 4d 31 d2       	rorq   $0xd2,0x31(%rbp)
   151f6:	0f 48 c7             	cmovs  %edi,%eax
   151f9:	c3                   	ret    
   151fa:	c4 01 00 00          	(bad)
   151fe:	29 f7                	sub    %esi,%edi
   15200:	84 48 85             	test   %cl,-0x7b(%rax)
   15203:	db 0f                	fisttpl (%rdi)
   15205:	af                   	scas   %es:(%rdi),%eax
   15206:	d7                   	xlat   %ds:(%rbx)
   15207:	48 01 c0             	add    %rax,%rax
   1520a:	48 29 ca             	sub    %rcx,%rdx
   1520d:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   15212:	4c 8d 4d 21          	lea    0x21(%rbp),%r9
   15216:	49 c7 c7 65 ff ff ff 	mov    $0xffffffffffffff65,%r15
   1521d:	49 c7 c0 92 ff ff e9 	mov    $0xffffffffe9ffff92,%r8
   15224:	2d 02 00 00 36       	sub    $0x36000002,%eax
   15229:	fd                   	std    
   1522a:	ff                   	(bad)  
   1522b:	ff                   	(bad)  
   1522c:	e9 8c 02 00 00       	jmp    154bd <_obstack_memory_used@@Base+0x4d0d>
   15231:	e8 1e 48 48 39       	call   39499a54 <obstack_alloc_failed_handler@@Base+0x394779b4>
   15236:	d0 25 f7 fe ff 48    	shlb   0x48fffef7(%rip)        # 49015133 <obstack_alloc_failed_handler@@Base+0x48ff3093>
   1523c:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   15240:	80 0f 8c             	orb    $0x8c,(%rdi)
   15243:	ec                   	in     (%dx),%al
   15244:	01 00                	add    %eax,(%rax)
   15246:	00 c3                	add    %al,%bl
   15248:	e9 20 00 48 89       	jmp    ffffffff8949526d <obstack_alloc_failed_handler@@Base+0xffffffff894731cd>
   1524d:	4c 0f 8f 36 01 00 00 	rex.WR jg 1538a <_obstack_memory_used@@Base+0x4bda>
   15254:	e8 57 0f 85 b5       	call   ffffffffb58661b0 <obstack_alloc_failed_handler@@Base+0xffffffffb5844110>
   15259:	03 00                	add    (%rax),%eax
   1525b:	00 24 40             	add    %ah,(%rax,%rax,2)
   1525e:	4d                   	rex.WRB
   1525f:	49 89 c4             	mov    %rax,%r12
   15262:	b6 34                	mov    $0x34,%dh
   15264:	2f                   	(bad)  
   15265:	48 8b 10             	mov    (%rax),%rdx
   15268:	8b 14 b2             	mov    (%rdx,%rsi,4),%edx
   1526b:	42 88 54 2d 00       	mov    %dl,0x0(%rbp,%r13,1)
   15270:	48 c7 c2 49 c1 e5 3f 	mov    $0x3fe5c149,%rdx
   15277:	fd                   	std    
   15278:	fd                   	std    
   15279:	ff                   	(bad)  
   1527a:	ff 49 0f             	decl   0xf(%rcx)
   1527d:	84 31                	test   %dh,(%rcx)
   1527f:	fc                   	cld    
   15280:	ff                   	(bad)  
   15281:	ff                   	(bad)  
   15282:	eb 27                	jmp    152ab <_obstack_memory_used@@Base+0x4afb>
   15284:	0f 1f 49 c7          	nopl   -0x39(%rcx)
   15288:	c7 c2 03 00 00 83    	mov    $0x83000003,%edx
   1528e:	e9 10 02 00 00       	jmp    154a3 <_obstack_memory_used@@Base+0x4cf3>
   15293:	1c 41                	sbb    $0x41,%al
   15295:	0f be 7d 01          	movsbl 0x1(%rbp),%edi
   15299:	49 83 c5 01          	add    $0x1,%r13
   1529d:	49                   	rex.WB
   1529e:	49 89 c1             	mov    %rax,%r9
   152a1:	00 00                	add    %al,(%rax)
   152a3:	00 09                	add    %cl,(%rcx)
   152a5:	0f 87 9f fe ff ff    	ja     1514a <_obstack_memory_used@@Base+0x499a>
   152ab:	6b db 0a             	imul   $0xa,%ebx,%ebx
   152ae:	71 4d                	jno    152fd <_obstack_memory_used@@Base+0x4b4d>
   152b0:	29 c2                	sub    %eax,%edx
   152b2:	ff 48 ff             	decl   -0x1(%rax)
   152b5:	c3                   	ret    
   152b6:	dd 66 0f             	frstor 0xf(%rsi)
   152b9:	8c 6f 03             	mov    %gs,0x3(%rdi)
   152bc:	00 00                	add    %al,(%rax)
   152be:	49 c1 ee 0f          	shr    $0xf,%r14
   152c2:	c1 89 fd ff ff ff 31 	rorl   $0x31,-0x3(%rcx)
   152c9:	ff 48 8b             	decl   -0x75(%rax)
   152cc:	54                   	push   %rsp
   152cd:	4c 01 e2             	add    %r12,%rdx
   152d0:	4a 14 44             	rex.WX adc $0x44,%al
   152d3:	8b 52 1c             	mov    0x1c(%rdx),%edx
   152d6:	44 8b 72 18          	mov    0x18(%rdx),%r14d
   152da:	89 c8                	mov    %ecx,%eax
   152dc:	0f 85 1a 4d 09 c7    	jne    ffffffffc70a9ffc <obstack_alloc_failed_handler@@Base+0xffffffffc7087f5c>
   152e2:	44 29 f2             	sub    %r14d,%edx
   152e5:	81 c2 7e 01 00 00    	add    $0x17e,%edx
   152eb:	25 90 01 00 00       	and    $0x190,%eax
   152f0:	44 8d 4c 48 4c       	lea    0x4c(%rax,%rcx,2),%r9d
   152f5:	29 f3                	sub    %esi,%ebx
   152f7:	c2 41 49             	ret    $0x4941
   152fa:	c1 e0 37             	shl    $0x37,%eax
   152fd:	c0 93 4d 0f af ec c1 	rclb   $0xc1,-0x1350f0b3(%rbx)
   15304:	f8                   	clc    
   15305:	1f                   	(bad)  
   15306:	48 c1 e8 20          	shr    $0x20,%rax
   1530a:	01 d0                	add    %edx,%eax
   1530c:	c1 f8 4c             	sar    $0x4c,%eax
   1530f:	01 c7                	add    %eax,%edi
   15311:	c0 44 8d 04 c5       	rolb   $0xc5,0x4(%rbp,%rcx,4)
   15316:	48 c1 eb 2a          	shr    $0x2a,%rbx
   1531a:	41 29 c0             	sub    %eax,%r8d
   1531d:	44 89 d0             	mov    %r10d,%eax
   15320:	29 d0                	sub    %edx,%eax
   15322:	42 8d 44 00 0f       	lea    0xf(%rax,%r8,1),%eax
   15327:	8c b7 03 00 00 89    	mov    %?,-0x76fffffd(%rdi)
   1532d:	f5                   	cmc    
   1532e:	af                   	scas   %es:(%rdi),%eax
   1532f:	da b8 6d 01 00 49    	fidivrl 0x4900016d(%rax)
   15335:	31 c6                	xor    %eax,%esi
   15337:	c1 03 75             	roll   $0x75,(%rbx)
   1533a:	3a 41 69             	cmp    0x69(%rcx),%al
   1533d:	d1 29                	shrl   (%rcx)
   1533f:	5c                   	pop    %rsp
   15340:	8f c2                	pop    %rdx
   15342:	4d 0f af e3          	imul   %r11,%r12
   15346:	00 00                	add    %al,(%rax)
   15348:	81 c2 50 b8 1e 05    	add    $0x51eb850,%edx
   1534e:	41 89 d1             	mov    %edx,%r9d
   15351:	41 c1 c9 0f          	ror    $0xf,%r9d
   15355:	8f                   	(bad)  
   15356:	92                   	xchg   %eax,%edx
   15357:	00 00                	add    %al,(%rax)
   15359:	00 8f 02 77 17 c1    	add    %cl,-0x3ee888fe(%rdi)
   1535f:	ca 04 45             	lret   $0x4504
   15362:	31 c0                	xor    %eax,%eax
   15364:	81 fa 0b d7 a3 00    	cmp    $0xa3d70b,%edx
   1536a:	41 0f 4d 39          	cmovge (%r9),%edi
   1536e:	c5 81 c0             	(bad)
   15371:	49 ff c7             	inc    %r15
   15374:	00 45 29             	add    %al,0x29(%rbp)
   15377:	49 c1 e9 39          	shr    $0x39,%r9
   1537b:	45 29 f0             	sub    %r14d,%r8d
   1537e:	41 81 c0 4c 0f 48 c1 	add    $0xc1480f4c,%r8d
   15385:	e9 03 d0 45 89       	jmp    ffffffff8947238d <obstack_alloc_failed_handler@@Base+0xffffffff894502ed>
   1538a:	49 89 f8             	mov    %rdi,%r8
   1538d:	ca 48 69             	lret   $0x6948
   15390:	d2 e9                	shr    %cl,%cl
   15392:	4d 31 dc             	xor    %r11,%r12
   15395:	ff c1                	inc    %ecx
   15397:	f9                   	stc    
   15398:	1f                   	(bad)  
   15399:	4c 89 c6             	mov    %r8,%rsi
   1539c:	20 44 01 c2          	and    %al,-0x3e(%rcx,%rax,1)
   153a0:	c1 fa 02             	sar    $0x2,%edx
   153a3:	44 29 ca             	sub    %r9d,%edx
   153a6:	44 8d 0c d5 00 00 00 	lea    0x4d000000(,%rdx,8),%r9d
   153ad:	4d 
   153ae:	85 fe                	test   %edi,%esi
   153b0:	d1 47 8d             	roll   -0x73(%rdi)
   153b3:	44 0a 03             	or     (%rbx),%r8b
   153b6:	45 85 c0             	test   %r8d,%r8d
   153b9:	41 0f 49 c0          	cmovns %r8d,%eax
   153bd:	41                   	rex.B
   153be:	49 01 ca             	add    %rcx,%r10
   153c1:	41 83 c0 01          	add    $0x1,%r8d
   153c5:	40 80 4d 48 85       	rex orb $0x85,0x48(%rbp)
   153ca:	c3                   	ret    
   153cb:	c8 16 00 00          	enter  $0x16,$0x0
   153cf:	40 80 fe 49          	cmp    $0x49,%sil
   153d3:	f7 ff                	idiv   %edi
   153d5:	51                   	push   %rcx
   153d6:	16                   	(bad)  
   153d7:	4d 01 ef             	add    %r13,%r15
   153da:	63 0f                	movsxd (%rdi),%ecx
   153dc:	49 f7 fe             	idiv   %r14
   153df:	ff                   	(bad)  
   153e0:	ff 1f                	lcall  *(%rdi)
   153e2:	85 eb                	test   %ebp,%ebx
   153e4:	51                   	push   %rcx
   153e5:	c1 f8 1f             	sar    $0x1f,%eax
   153e8:	48 c1 fa 25          	sar    $0x25,%rdx
   153ec:	29 c2                	sub    %eax,%edx
   153ee:	4d 39 c8             	cmp    %r9,%r8
   153f1:	d2 64 4d 21          	shlb   %cl,0x21(%rbp,%rcx,2)
   153f5:	d6                   	(bad)  
   153f6:	01 c0                	add    %eax,%eax
   153f8:	48 63 d0             	movslq %eax,%rdx
   153fb:	41 89 c1             	mov    %eax,%r9d
   153fe:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
   15405:	41 c1 f9 4c          	sar    $0x4c,%r9d
   15409:	31 cb                	xor    %ecx,%ebx
   1540b:	c1 e3 2c             	shl    $0x2c,%ebx
   1540e:	29 ca                	sub    %ecx,%edx
   15410:	44 6b ca 64          	imul   $0x64,%edx,%r9d
   15414:	44 29 c8             	sub    %r9d,%eax
   15417:	89 c2                	mov    %eax,%edx
   15419:	0f 88 9b 18 00 00    	js     16cba <_obstack_memory_used@@Base+0x650a>
   1541f:	45 85 db             	test   %r11d,%r11d
   15422:	0f 84 ad 18 00 00    	je     16cd5 <_obstack_memory_used@@Base+0x6525>
   15428:	4d 89 ee             	mov    %r13,%r14
   1542b:	41 83 fb 2b          	cmp    $0x2b,%r11d
   1542f:	0f 84 b2 18 00 00    	je     16ce7 <_obstack_memory_used@@Base+0x6537>
   15435:	c6 44 24 48 00       	movb   $0x0,0x48(%rsp)
   1543a:	b8 01 00 00 00       	mov    $0x1,%eax
   1543f:	45 31 ff             	xor    %r15d,%r15d
   15442:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   15449:	00 
   1544a:	31 c9                	xor    %ecx,%ecx
   1544c:	0f 1f 49 21          	nopl   0x21(%rcx)
   15450:	c3                   	ret    
   15451:	ff 4f 0f             	decl   0xf(%rdi)
   15454:	85 6f 0d             	test   %ebp,0xd(%rdi)
   15457:	00 00                	add    %al,(%rax)
   15459:	84 0f                	test   %cl,(%rdi)
   1545b:	8c e6                	mov    %fs,%esi
   1545d:	00 00                	add    %al,(%rax)
   1545f:	00 8f 57 fe ff ff    	add    %cl,-0x1a9(%rdi)
   15465:	00 45 31             	add    %al,0x31(%rbp)
   15468:	ed                   	in     (%dx),%eax
   15469:	66 49 c1 e1 3b       	data16 shl $0x3b,%r9
   1546e:	00 00                	add    %al,(%rax)
   15470:	00 4c 89 ef          	add    %cl,-0x11(%rcx,%rcx,4)
   15474:	24 fd                	and    $0xfd,%al
   15476:	00 00                	add    %al,(%rax)
   15478:	00 4d 09             	add    %cl,0x9(%rbp)
   1547b:	d3 24 fe             	shll   %cl,(%rsi,%rdi,8)
   1547e:	00 00                	add    %al,(%rax)
   15480:	00 40 4d             	add    %al,0x4d(%rax)
   15483:	01 d7                	add    %edx,%edi
   15485:	4c 89 e2             	mov    %r12,%rdx
   15488:	10 48 8d             	adc    %cl,-0x73(%rax)
   1548b:	94                   	xchg   %eax,%esp
   1548c:	24 fb                	and    $0xfb,%al
   1548e:	00 00                	add    %al,(%rax)
   15490:	00 48 8d             	add    %cl,-0x73(%rax)
   15493:	bc 24 48 ff c0       	mov    $0xc0ff4824,%esp
   15498:	00 c6                	add    %al,%dh
   1549a:	40 01 00             	rex add %eax,(%rax)
   1549d:	be 00 04 49 29       	mov    $0x29490400,%esi
   154a2:	c4                   	(bad)  
   154a3:	49 c7 c0 a9 49 89 d9 	mov    $0xffffffffd98949a9,%r8
   154aa:	fe                   	(bad)  
   154ab:	ff 48 89             	decl   -0x77(%rax)
   154ae:	c1 48 85 c0          	rorl   $0xc0,-0x7b(%rax)
   154b2:	0f 84 8c fb ff ff    	je     15044 <_obstack_memory_used@@Base+0x4894>
   154b8:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   154bd:	4c 8d 78 ff          	lea    -0x1(%rax),%r15
   154c1:	41 83 fb 2d          	cmp    $0x2d,%r11d
   154c5:	0f 8c 2b 02 00 00    	jl     156f6 <_obstack_memory_used@@Base+0x4f46>
   154cb:	85 db                	test   %ebx,%ebx
   154cd:	0f 88 f5 10 00 00    	js     165c8 <_obstack_memory_used@@Base+0x5e18>
   154d3:	48 eb bc             	rex.W jmp 15492 <_obstack_memory_used@@Base+0x4ce2>
   154d6:	21 f0                	and    %esi,%eax
   154d8:	fc                   	cld    
   154d9:	48 89 49 39          	mov    %rcx,0x39(%rcx)
   154dd:	fa                   	cli    
   154de:	43 df 48 8b          	rex.XB fisttps -0x75(%r8)
   154e2:	49 29 f8             	sub    %rdi,%r8
   154e5:	4c 29 4d 49          	sub    %r9,0x49(%rbp)
   154e9:	01 4c 85 cf          	add    %ecx,-0x31(%rbp,%rax,4)
   154ed:	87 fb                	xchg   %edi,%ebx
   154ef:	ff                   	(bad)  
   154f0:	ff 48 85             	decl   -0x7b(%rax)
   154f3:	ed                   	in     (%dx),%eax
   154f4:	48 89 fe             	mov    %rdi,%rsi
   154f7:	00 00                	add    %al,(%rax)
   154f9:	00 49 39             	add    %cl,0x39(%rcx)
   154fc:	d7                   	xlat   %ds:(%rbx)
   154fd:	73 e9                	jae    154e8 <_obstack_memory_used@@Base+0x4d38>
   154ff:	95                   	xchg   %eax,%ebp
   15500:	fd                   	std    
   15501:	ff                   	(bad)  
   15502:	ff 4d 21             	decl   0x21(%rbp)
   15505:	f8                   	clc    
   15506:	48                   	rex.W
   15507:	48 8d 44 15 00       	lea    0x0(%rbp,%rdx,1),%rax
   1550c:	48 ff c1             	inc    %rcx
   1550f:	24 30                	and    $0x30,%al
   15511:	41 83 fb 30          	cmp    $0x30,%r11d
   15515:	0f 4d 89 d5 00 00 41 	cmovge 0x410000d5(%rcx),%ecx
   1551c:	83 fb 2b             	cmp    $0x2b,%ebx
   1551f:	0f 84 0b 12 00 00    	je     16730 <_obstack_memory_used@@Base+0x5f80>
   15525:	48 89 4c 21 fe       	mov    %rcx,-0x2(%rcx,%riz,1)
   1552a:	00 00                	add    %al,(%rax)
   1552c:	00 e8                	add    %ch,%al
   1552e:	2e f4                	cs hlt 
   15530:	fe                   	(bad)  
   15531:	ff 48 49             	decl   0x49(%rax)
   15534:	89 d3                	mov    %edx,%ebx
   15536:	30 48 8b             	xor    %cl,-0x75(%rax)
   15539:	4c 24 48             	rex.WR and $0x48,%al
   1553c:	4d 85 fb             	test   %r15,%r11
   1553f:	fe 85 97 11 00 75    	incb   0x75001197(%rbp)
   15545:	44 7c 24             	rex.R jl 1556c <_obstack_memory_used@@Base+0x4dbc>
   15548:	40 00 0f             	rex add %cl,(%rdi)
   1554b:	84 74 11 00          	test   %dh,0x0(%rcx,%rdx,1)
   1554f:	00 4c 8d 69          	add    %cl,0x69(%rbp,%rcx,4)
   15553:	fe 4d 85             	decb   -0x7b(%rbp)
   15556:	ff 74 2d 48          	push   0x48(%rbp,%rbp,1)
   1555a:	0f af da             	imul   %edx,%ebx
   1555d:	d2 48 8d             	rorb   %cl,-0x73(%rax)
   15560:	b4 24                	mov    $0x24,%ah
   15562:	01 01                	add    %eax,(%rcx)
   15564:	00 00                	add    %al,(%rax)
   15566:	66 2e 0f 1f 84 00 49 	cs nopw -0x2b3c38b7(%rax,%rax,1)
   1556d:	c7 c3 d4 
   15570:	fd                   	std    
   15571:	ff                   	(bad)  
   15572:	ff 0c 2e             	decl   (%rsi,%rbp,1)
   15575:	48 8b 10             	mov    (%rax),%rdx
   15578:	8b 14 8a             	mov    (%rdx,%rcx,4),%edx
   1557b:	42 0f 84 35 03 00 00 	rex.X je 158b7 <_obstack_memory_used@@Base+0x5107>
   15582:	ed                   	in     (%dx),%eax
   15583:	01 0f                	add    %ecx,(%rdi)
   15585:	8f                   	(bad)  
   15586:	fa                   	cli    
   15587:	fc                   	cld    
   15588:	ff                   	(bad)  
   15589:	ff 01                	incl   (%rcx)
   1558b:	dc e9                	fsubr  %st,%st(1)
   1558d:	b3 4d                	mov    $0x4d,%bl
   1558f:	31 c1                	xor    %eax,%ecx
   15591:	49 f7 fe             	idiv   %r14
   15594:	0f 85 9d 02 00 00    	jne    15837 <_obstack_memory_used@@Base+0x5087>
   1559a:	00 00                	add    %al,(%rax)
   1559c:	ff 0f                	decl   (%rdi)
   1559e:	8c 3c fe             	mov    %?,(%rsi,%rdi,8)
   155a1:	ff                   	(bad)  
   155a2:	ff 89 ee 31 ff 0f    	decl   0xfff31ee(%rcx)
   155a8:	b6 44                	mov    $0x44,%dh
   155aa:	4d 21 fd             	and    %r15,%r13
   155ad:	0f 84 91 01 48 0f    	je     f495744 <obstack_alloc_failed_handler@@Base+0xf4736a4>
   155b3:	af                   	scas   %es:(%rdi),%eax
   155b4:	d1 c5                	rol    %ebp
   155b6:	ab                   	stos   %eax,%es:(%rdi)
   155b7:	ff                   	(bad)  
   155b8:	ff                   	(bad)  
   155b9:	ff 0f                	decl   (%rdi)
   155bb:	84 7c a3 ff          	test   %bh,-0x1(%rbx,%riz,4)
   155bf:	ff 45 31             	incl   0x31(%rbp)
   155c2:	ed                   	in     (%dx),%eax
   155c3:	41 b8 20 25 00 00    	mov    $0x2520,%r8d
   155c9:	66 44 89 84 24 fb 00 	mov    %r8w,-0x7ab6ff05(%rsp)
   155d0:	49 85 
   155d2:	d9 ff                	fcos   
   155d4:	0f 85 97 fe 49 31    	jne    314b5471 <obstack_alloc_failed_handler@@Base+0x314933d1>
   155da:	cf                   	iret   
   155db:	8d 84 24 4d 09 c1 4c 	lea    0x4cc1094d(%rsp),%eax
   155e2:	89 f7                	mov    %esi,%edi
   155e4:	fe                   	(bad)  
   155e5:	ff                   	(bad)  
   155e6:	ff 4d 89             	decl   -0x77(%rbp)
   155e9:	f5                   	cmc    
   155ea:	41 0f b6 45 ff       	movzbl -0x1(%r13),%eax
   155ef:	4d 8d 7d ff          	lea    -0x1(%r13),%r15
   155f3:	4d 89 fe             	mov    %r15,%r14
   155f6:	3c 48                	cmp    $0x48,%al
   155f8:	c1 ef 35             	shr    $0x35,%edi
   155fb:	4c 85 e6             	test   %r12,%rsi
   155fe:	b9 01 00 00 00       	mov    $0x1,%ecx
   15603:	e9 c4 fb ff 0f       	jmp    100151cc <obstack_alloc_failed_handler@@Base+0xfff312c>
   15608:	84 be fc ff ff 44    	test   %bh,0x44fffffc(%rsi)
   1560e:	24 08                	and    $0x8,%al
   15610:	4c                   	rex.WR
   15611:	4d 0f af f1          	imul   %r9,%r14
   15615:	fb                   	sti    
   15616:	2d 0f 84 60 12       	sub    $0x1260840f,%eax
   1561b:	00 00                	add    %al,(%rax)
   1561d:	85 db                	test   %ebx,%ebx
   1561f:	0f 88 58 12 00 e9    	js     ffffffffe901687d <obstack_alloc_failed_handler@@Base+0xffffffffe8ff47dd>
   15625:	3e ff                	ds (bad) 
   15627:	ff                   	(bad)  
   15628:	ff 48 c1             	decl   -0x3f(%rax)
   1562b:	e8 1b 00 4d 39       	call   394e564b <obstack_alloc_failed_handler@@Base+0x394c35ab>
   15630:	e1 4c                	loope  1567e <_obstack_memory_used@@Base+0x4ece>
   15632:	0f 8c 4a 03 00 00    	jl     15982 <_obstack_memory_used@@Base+0x51d2>
   15638:	0f 48 c1             	cmovs  %ecx,%eax
   1563b:	0f 85 12 02 00 00    	jne    15853 <_obstack_memory_used@@Base+0x50a3>
   15641:	74 3a                	je     1567d <_obstack_memory_used@@Base+0x4ecd>
   15643:	83 fb 01             	cmp    $0x1,%ebx
   15646:	7e 2d                	jle    15675 <_obstack_memory_used@@Base+0x4ec5>
   15648:	48 83 ea 01          	sub    $0x1,%rdx
   1564c:	4c 39 fa             	cmp    %r15,%rdx
   1564f:	0f                   	(bad)  
   15650:	0f 85 e9 8c 4d 21    	jne    214ee33f <obstack_alloc_failed_handler@@Base+0x214cc29f>
   15656:	e4 1c                	in     $0x1c,%al
   15658:	16                   	(bad)  
   15659:	00 00                	add    %al,(%rax)
   1565b:	41 83 fb 2b          	cmp    $0x2b,%r11d
   1565f:	0f 4c 39             	cmovl  (%rcx),%edi
   15662:	d8 00                	fadds  (%rax)
   15664:	00 48 89             	add    %cl,-0x77(%rax)
   15667:	ef                   	out    %eax,(%dx)
   15668:	be 20 00 00 00       	mov    $0x20,%esi
   1566d:	48 89 dd             	mov    %rbx,%rbp
   15670:	e8 eb f2 fe ff       	call   4960 <memset@plt>
   15675:	c6 45 00 09          	movb   $0x9,0x0(%rbp)
   15679:	48 83 c5 01          	add    $0x1,%rbp
   1567d:	4d 01 ec             	add    %r13,%r12
   15680:	e9 bf f9 ff ff       	jmp    15044 <_obstack_memory_used@@Base+0x4894>
   15685:	4d 89 ee             	mov    %r13,%r14
   15688:	31 ff                	xor    %edi,%edi
   1568a:	48 8b 4c 09 e8       	mov    -0x18(%rcx,%rcx,1),%rcx
   1568f:	0f 85 c9 fe ff ff    	jne    1555e <_obstack_memory_used@@Base+0x4dae>
   15695:	50                   	push   %rax
   15696:	08 45 85             	or     %al,-0x7b(%rbp)
   15699:	db b8 5f 00 00 00    	fstpt  0x5f(%rax)
   1569f:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   156a6:	00 
   156a7:	44 0f 44 4d 0f       	cmove  0xf(%rbp),%r9d
   156ac:	af                   	scas   %es:(%rdi),%eax
   156ad:	e8 44 24 48 00       	call   497af6 <obstack_alloc_failed_handler@@Base+0x475a56>
   156b2:	31 c9                	xor    %ecx,%ecx
   156b4:	4c 39 e7             	cmp    %r12,%rdi
   156b7:	41 89 c7             	mov    %eax,%r15d
   156ba:	89 d0                	mov    %edx,%eax
   156bc:	f7 d0                	not    %eax
   156be:	c1 e8 1f             	shr    $0x1f,%eax
   156c1:	e9 8a fd ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   156c6:	4d 89 ee             	mov    %r13,%r14
   156c9:	0f 48 39             	cmovs  (%rcx),%edi
   156cc:	fb                   	sti    
   156cd:	00 00                	add    %al,(%rax)
   156cf:	10 c6                	adc    %al,%dh
   156d1:	44 24 48             	rex.R and $0x48,%al
   156d4:	00 be 6a 00 00 49    	add    %bh,0x4900006a(%rsi)
   156da:	89 c6                	mov    %eax,%esi
   156dc:	85 db                	test   %ebx,%ebx
   156de:	03 00                	add    (%rax),%eax
   156e0:	00 4d 48             	add    %cl,0x48(%rbp)
   156e3:	85 ce                	test   %ecx,%esi
   156e5:	83 f8 ff             	cmp    $0xffffffff,%eax
   156e8:	8d 50 01             	lea    0x1(%rax),%edx
   156eb:	41 0f 9c c7          	setl   %r15b
   156ef:	0f 9d c0             	setge  %al
   156f2:	31 c9                	xor    %ecx,%ecx
   156f4:	e9 57 fd ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   156f9:	4d 89 ee             	mov    %r13,%r14
   156fc:	31 ff                	xor    %edi,%edi
   156fe:	48 8b 0f             	mov    (%rdi),%rcx
   15701:	85 31                	test   %esi,(%rcx)
   15703:	fd                   	std    
   15704:	ff                   	(bad)  
   15705:	ff 00                	incl   (%rax)
   15707:	49 c1 e9 e9          	shr    $0xe9,%r9
   1570b:	63 fe                	movsxd %esi,%edi
   1570d:	ff                   	(bad)  
   1570e:	ff                   	(bad)  
   1570f:	ee                   	out    %al,(%dx)
   15710:	31 ff                	xor    %edi,%edi
   15712:	48                   	rex.W
   15713:	49 c1 e6 0c          	shl    $0xc,%r14
   15717:	c7 44 24 30 02 00 0f 	movl   $0x850f0002,0x30(%rsp)
   1571e:	85 
   1571f:	79 4d                	jns    1576e <_obstack_memory_used@@Base+0x4fbe>
   15721:	01 ea                	add    %ebp,%edx
   15723:	00 8b 50 0c 4d 21    	add    %cl,0x214d0c50(%rbx)
   15729:	d8 89 ee 0f 8c 80    	fmuls  -0x7f73f012(%rcx)
   1572f:	03 00                	add    (%rax),%eax
   15731:	00 40 45             	add    %al,0x45(%rax)
   15734:	84 ff                	test   %bh,%bh
   15736:	4c 01 d3             	add    %r10,%rbx
   15739:	00 00                	add    %al,(%rax)
   1573b:	48 0f af f7          	imul   %rdi,%rsi
   1573f:	45 31 ed             	xor    %r13d,%r13d
   15742:	88 44 24 40          	mov    %al,0x40(%rsp)
   15746:	e9 78 e9 2b fe       	jmp    fffffffffe2d40c3 <obstack_alloc_failed_handler@@Base+0xfffffffffe2b2023>
   1574b:	ff                   	(bad)  
   1574c:	ff                   	(bad)  
   1574d:	ee                   	out    %al,(%dx)
   1574e:	0f b6 44 24 40       	movzbl 0x40(%rsp),%eax
   15753:	45                   	rex.RB
   15754:	49 31 c4             	xor    %rax,%r12
   15757:	41 00 4c 01 ce       	add    %cl,-0x32(%r9,%rax,1)
   1575c:	7c d7                	jl     15735 <_obstack_memory_used@@Base+0x4f85>
   1575e:	c7                   	(bad)  
   1575f:	88 49 39             	mov    %cl,0x39(%rcx)
   15762:	cd b8                	int    $0xb8
   15764:	20 25 00 00 45 31    	and    %ah,0x31450000(%rip)        # 3146576a <obstack_alloc_failed_handler@@Base+0x314436ca>
   1576a:	ed                   	in     (%dx),%eax
   1576b:	66 89 84 24 49 c7 c0 	mov    %ax,0x16c0c749(%rsp)
   15772:	16 
   15773:	fd                   	std    
   15774:	ff                   	(bad)  
   15775:	ff 24 e9             	jmp    *(%rcx,%rbp,8)
   15778:	6f                   	outsl  %ds:(%rsi),(%dx)
   15779:	ff                   	(bad)  
   1577a:	ff                   	(bad)  
   1577b:	ff 01                	incl   (%rcx)
   1577d:	fd                   	std    
   1577e:	49 29 f7             	sub    %rsi,%r15
   15781:	29 c0                	sub    %eax,%eax
   15783:	0f b6 45 01          	movzbl 0x1(%rbp),%eax
   15787:	4d                   	rex.WRB
   15788:	4d 89 ec             	mov    %r13,%r12
   1578b:	49 c1 ef 15          	shr    $0x15,%r15
   1578f:	00 00                	add    %al,(%rax)
   15791:	48 ff c2             	inc    %rdx
   15794:	84 10                	test   %dl,(%rax)
   15796:	49 c1 ea 13          	shr    $0x13,%r10
   1579a:	3a 00                	cmp    (%rax),%al
   1579c:	00 00                	add    %al,(%rax)
   1579e:	3c 7a                	cmp    $0x7a,%al
   157a0:	0f 85 fd f9 ff ff    	jne    151a3 <_obstack_memory_used@@Base+0x49f3>
   157a6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   157ab:	8b 48 20             	mov    0x20(%rax),%ecx
   157ae:	85 c9                	test   %ecx,%ecx
   157b0:	48 c1 e3 4d          	shl    $0x4d,%rbx
   157b4:	0f 4c 0f             	cmovl  (%rdi),%ecx
   157b7:	af                   	scas   %es:(%rdi),%eax
   157b8:	db 28                	fldt   (%rax)
   157ba:	41 bf 01 0f 8c 24    	mov    $0x248c0f01,%r15d
   157c0:	fc                   	cld    
   157c1:	ff                   	(bad)  
   157c2:	ff 14 41             	call   *(%rcx,%rax,2)
   157c5:	bf 00 48 c1 e2       	mov    $0xe2c14800,%edi
   157ca:	1d 0c 48 4d 0f       	sbb    $0xf4d480c,%eax
   157cf:	af                   	scas   %es:(%rdi),%eax
   157d0:	cd c7                	int    $0xc7
   157d2:	c6                   	(bad)  
   157d3:	4d 21 4c 0f af       	and    %r9,-0x51(%r15,%rcx,1)
   157d8:	ea                   	(bad)  
   157d9:	63 c2                	movsxd %edx,%eax
   157db:	48 0f af 4d 0f       	imul   0xf(%rbp),%rcx
   157e0:	af                   	scas   %es:(%rdi),%eax
   157e1:	e4 a2                	in     $0xa2,%al
   157e3:	0f 8c e2 fe ff ff    	jl     156cb <_obstack_memory_used@@Base+0x4f1b>
   157e9:	c0 89 88 88 88 49 ff 	rorb   $0xff,0x49888888(%rcx)
   157f0:	c4                   	(bad)  
   157f1:	20 48 c1             	and    %cl,-0x3f(%rax)
   157f4:	e8 20 41 01 d0       	call   ffffffffd0029919 <obstack_alloc_failed_handler@@Base+0xffffffffd0007879>
   157f9:	01 d0                	add    %edx,%eax
   157fb:	48 c1 e8 2c          	shr    $0x2c,%rax
   157ff:	c1 f8 05             	sar    $0x5,%eax
   15802:	45                   	rex.RB
   15803:	49 89 d8             	mov    %rbx,%r8
   15806:	c8 41 29 ca          	enter  $0x2941,$0xca
   1580a:	48 63 0f             	movslq (%rdi),%rcx
   1580d:	84 41 fe             	test   %al,-0x2(%rcx)
   15810:	ff                   	(bad)  
   15811:	ff c9                	dec    %ecx
   15813:	89 88 88 88 41 c1    	mov    %ecx,-0x3ebe7778(%rax)
   15819:	f8                   	clc    
   1581a:	7c 8c                	jl     157a8 <_obstack_memory_used@@Base+0x4ff8>
   1581c:	c1 e9 0f             	shr    $0xf,%ecx
   1581f:	85 0f                	test   %ecx,(%rdi)
   15821:	84 0d fe ff ff 0f    	test   %cl,0xffffffe(%rip)        # 10015825 <obstack_alloc_failed_handler@@Base+0xfff3785>
   15827:	85 b6 03 00 00 c1    	test   %esi,-0x3efffffd(%rsi)
   1582d:	49 01 c5             	add    %rax,%r13
   15830:	44 29 c1             	sub    %r8d,%ecx
   15833:	41 89 48 85          	mov    %ecx,-0x7b(%r8)
   15837:	f0 c0 49 83 0f       	lock rorb $0xf,-0x7d(%rcx)
   1583c:	49                   	rex.WB
   1583d:	4d 39 c9             	cmp    %r9,%r9
   15840:	01 00                	add    %eax,(%rax)
   15842:	00 0f                	add    %cl,(%rdi)
   15844:	87 9a 0f 4c 0f af    	xchg   %ebx,-0x50f0b3f1(%rdx)
   1584a:	c3                   	ret    
   1584b:	c9                   	leave  
   1584c:	0f 49 ff             	cmovns %edi,%edi
   1584f:	c5 00 00             	(bad)
   15852:	41 6b d2 64          	imul   $0x64,%r10d,%edx
   15856:	48 c1 0f 0f          	rorq   $0xf,(%rdi)
   1585a:	8f c2                	pop    %rdx
   1585c:	4d 21 db             	and    %r11,%r11
   1585f:	4c 01 e9             	add    %r13,%rcx
   15862:	06                   	(bad)  
   15863:	00 00                	add    %al,(%rax)
   15865:	00 83 48 21 df ca    	add    %al,-0x3520deb8(%rbx)
   1586b:	b9 04 48 29 f7       	mov    $0xf7294804,%ecx
   15870:	e9 48 01 cb ff       	jmp    ffffffffffcc59bd <obstack_alloc_failed_handler@@Base+0xffffffffffca391d>
   15875:	4d                   	rex.WRB
   15876:	48 c1 e8 31          	shr    $0x31,%rax
   1587a:	89 d9                	mov    %ebx,%ecx
   1587c:	40                   	rex
   1587d:	45 84 ff             	test   %r15b,%r15b
   15880:	be 61 00 00 00       	mov    $0x61,%esi
   15885:	41 0f 45 48 0f       	cmovne 0xf(%r8),%ecx
   1588a:	af                   	scas   %es:(%rdi),%eax
   1588b:	c8 40 48 89          	enter  $0x4840,$0x89
   1588f:	48 f7 ff             	idiv   %rdi
   15892:	4d 89 48 29          	mov    %r9,0x29(%r8)
   15896:	cb                   	lret   
   15897:	45 31 ed             	xor    %r13d,%r13d
   1589a:	0f b6 4c 24 40       	movzbl 0x40(%rsp),%ecx
   1589f:	45 84 ff             	test   %r15b,%r15b
   158a2:	b8 00 00 00 4c       	mov    $0x4c000000,%eax
   158a7:	85 c3                	test   %eax,%ebx
   158a9:	00 00                	add    %al,(%rax)
   158ab:	0f 4c 01             	cmovl  (%rcx),%eax
   158ae:	de 00                	fiadds (%rax)
   158b0:	00 45 49             	add    %al,0x49(%rbp)
   158b3:	09 dc                	or     %ebx,%esp
   158b5:	24 40                	and    $0x40,%al
   158b7:	e9 07 fd ff ff       	jmp    155c3 <_obstack_memory_used@@Base+0x4e13>
   158bc:	49 ff c4             	inc    %r12
   158bf:	48 8b 44 0f 8c       	mov    -0x74(%rdi,%rcx,1),%rax
   158c4:	99                   	cltd   
   158c5:	01 00                	add    %eax,(%rax)
   158c7:	00 8f 6f 49 ff c4    	add    %cl,-0x3b00b691(%rdi)
   158cd:	8e 0f                	mov    (%rdi),%cs
   158cf:	00 00                	add    %al,(%rax)
   158d1:	85 db                	test   %ebx,%ebx
   158d3:	0f 88 4d 01 e5 00    	js     e65a26 <obstack_alloc_failed_handler@@Base+0xe43986>
   158d9:	48 63 e9             	movslq %ecx,%rbp
   158dc:	1c 48                	sbb    $0x48,%al
   158de:	f7 f9                	idiv   %ecx
   158e0:	31 e6                	xor    %esp,%esi
   158e2:	75 71                	jne    15955 <_obstack_memory_used@@Base+0x51a5>
   158e4:	d2 4d 31             	rorb   %cl,0x31(%rbp)
   158e7:	f8                   	clc    
   158e8:	ea                   	(bad)  
   158e9:	49 39 c5             	cmp    %rax,%r13
   158ec:	0f 83 49 ff c0 ff    	jae    ffffffffffc2583b <obstack_alloc_failed_handler@@Base+0xffffffffffc0379b>
   158f2:	48 85 ed             	test   %rbp,%rbp
   158f5:	49 ff c6             	inc    %r14
   158f8:	ce                   	(bad)  
   158f9:	ff                   	(bad)  
   158fa:	ff 83 fb 01 7e 2d    	incl   0x2d7e01fb(%rbx)
   15900:	48 83 ea 01          	sub    $0x1,%rdx
   15904:	48 8d 5c 15 00       	lea    0x0(%rbp,%rdx,1),%rbx
   15909:	41 83 fb 49          	cmp    $0x49,%r11d
   1590d:	ff c4                	inc    %esp
   1590f:	49 c1 e6 28          	shl    $0x28,%r14
   15913:	0f 8f cc fc ff ff    	jg     155e5 <_obstack_memory_used@@Base+0x4e35>
   15919:	0b 13                	or     (%rbx),%edx
   1591b:	00 00                	add    %al,(%rax)
   1591d:	48 89 ef             	mov    %rbp,%rdi
   15920:	be 20 00 00 00       	mov    $0x20,%esi
   15925:	48 89 dd             	mov    %rbx,%rbp
   15928:	e8 49 4c 01 e0       	call   ffffffffe002a576 <obstack_alloc_failed_handler@@Base+0xffffffffe00084d6>
   1592d:	c6 45 49 ff          	movb   $0xff,0x49(%rbp)
   15931:	49 01 d5             	add    %rdx,%r13
   15934:	01 e9                	add    %ebp,%ecx
   15936:	43 fd                	rex.XB std 
   15938:	ff                   	(bad)  
   15939:	ff 4d 89             	decl   -0x77(%rbp)
   1593c:	ee                   	out    %al,(%dx)
   1593d:	31 ff                	xor    %edi,%edi
   1593f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15944:	c6 44 24 48 00       	movb   $0x0,0x48(%rsp)
   15949:	be 6d 4d 0f af       	mov    $0xaf0f4d6d,%esi
   1594e:	ca 44 24             	lret   $0x2444
   15951:	30 02                	xor    %al,(%rdx)
   15953:	00 00                	add    %al,(%rax)
   15955:	00 8b 49 01 c8 f8    	add    %cl,-0x737feb7(%rbx)
   1595b:	ff 8d 50 01 41 0f    	decl   0xf410150(%rbp)
   15961:	4d 0f af c5          	imul   %r13,%r8
   15965:	c0 31 c9             	shlb   $0xc9,(%rcx)
   15968:	e9 e3 48 0f af       	jmp    ffffffffaf10a250 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e81b0>
   1596d:	d9 f3                	fpatan 
   1596f:	ff                   	(bad)  
   15970:	ff                   	(bad)  
   15971:	ff 8b 54 24 50 49    	decl   0x49502454(%rbx)
   15977:	39 de                	cmp    %ebx,%esi
   15979:	00 00                	add    %al,(%rax)
   1597b:	e9 17 fd ff ff       	jmp    15697 <_obstack_memory_used@@Base+0x4ee7>
   15980:	4d 89 e9             	mov    %r13,%r9
   15983:	52                   	push   %rdx
   15984:	fe                   	(bad)  
   15985:	ff                   	(bad)  
   15986:	ff                   	(bad)  
   15987:	fc                   	cld    
   15988:	ff 4c 85 d2          	decl   -0x2e(%rbp,%rax,4)
   1598c:	ee                   	out    %al,(%dx)
   1598d:	49 29 da             	sub    %rbx,%r10
   15990:	49                   	rex.WB
   15991:	49 01 c4             	add    %rax,%r12
   15994:	24 48                	and    $0x48,%al
   15996:	00 45 31             	add    %al,0x31(%rbp)
   15999:	ff 31                	push   (%rcx)
   1599b:	c9                   	leave  
   1599c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   159a3:	00 
   159a4:	8b 40 10             	mov    0x10(%rax),%eax
   159a7:	8d 14 e9             	lea    (%rcx,%rbp,8),%edx
   159aa:	7a 02                	jp     159ae <_obstack_memory_used@@Base+0x51fe>
   159ac:	00 00                	add    %al,(%rax)
   159ae:	fa                   	cli    
   159af:	05 83 c2 01 0f       	add    $0xf01c283,%eax
   159b4:	0f 8f e3 fd ff ff    	jg     1579d <_obstack_memory_used@@Base+0x4fed>
   159ba:	4d 29 dd             	sub    %r11,%r13
   159bd:	01 00                	add    %eax,(%rax)
   159bf:	00 41 b9             	add    %al,-0x47(%rcx)
   159c2:	cd cc                	int    $0xcc
   159c4:	cc                   	int3   
   159c5:	cc                   	int3   
   159c6:	4d                   	rex.WRB
   159c7:	4c 39 e2             	cmp    %r12,%rdx
   159ca:	1f                   	(bad)  
   159cb:	80 00 00             	addb   $0x0,(%rax)
   159ce:	00 49 c1             	add    %cl,-0x3f(%rcx)
   159d1:	e8 3d 0f 84 4d       	call   4d856913 <obstack_alloc_failed_handler@@Base+0x4d834873>
   159d6:	21 f9                	and    %edi,%ecx
   159d8:	03 00                	add    (%rax),%eax
   159da:	00 4d 29             	add    %cl,0x29(%rbp)
   159dd:	d4                   	(bad)  
   159de:	83 ef 01             	sub    $0x1,%edi
   159e1:	89 d0                	mov    %edx,%eax
   159e3:	89 d6                	mov    %edx,%esi
   159e5:	d1 f9                	sar    %ecx
   159e7:	4c 8d 6f ff          	lea    -0x1(%rdi),%r13
   159eb:	49 0f af c1          	imul   %r9,%rax
   159ef:	4d 39 f8             	cmp    %r15,%r8
   159f2:	23 44 8d 48          	and    0x48(%rbp,%rcx,4),%eax
   159f6:	85 de                	test   %ebx,%esi
   159f8:	01 c0                	add    %eax,%eax
   159fa:	49 c7 c7 e7 ff ff ff 	mov    $0xffffffffffffffe7,%r15
   15a01:	28 77 4d             	sub    %dh,0x4d(%rdi)
   15a04:	29 f9                	sub    %edi,%ecx
   15a06:	09 c6                	or     %eax,%esi
   15a08:	08 85 c9 0f 84 57    	or     %al,0x57840fc9(%rbp)
   15a0e:	01 00                	add    %eax,(%rax)
   15a10:	00 89 c2 eb bb 4d    	add    %cl,0x4dbbebc2(%rcx)
   15a16:	49 89 c8             	mov    %rcx,%r8
   15a19:	8b 44 24 0f          	mov    0xf(%rsp),%eax
   15a1d:	85 4c 0f af          	test   %ecx,-0x51(%rdi,%rcx,1)
   15a21:	c8 00 f3 0f          	enter  $0xf300,$0xf
   15a25:	48 89 c6             	mov    %rax,%rsi
   15a28:	f3 0f 49 c1          	repz cmovns %ecx,%eax
   15a2c:	ef                   	out    %eax,(%dx)
   15a2d:	32 6f 50             	xor    0x50(%rdi),%ch
   15a30:	10 48 c1             	adc    %cl,-0x3f(%rax)
   15a33:	4d 0f af c9          	imul   %r9,%r9
   15a37:	ed                   	in     (%dx),%eax
   15a38:	24 30                	and    $0x30,%al
   15a3a:	48 89 84 0f 8f 01 03 	mov    %rax,0x3018f(%rdi,%rcx,1)
   15a41:	00 
   15a42:	e9 2e fc ff 0f       	jmp    10015675 <obstack_alloc_failed_handler@@Base+0xfff35d5>
   15a47:	8f                   	(bad)  
   15a48:	58                   	pop    %rax
   15a49:	03 00                	add    (%rax),%eax
   15a4b:	00 00                	add    %al,(%rax)
   15a4d:	e9 af 00 4d 89       	jmp    ffffffff894e5b01 <obstack_alloc_failed_handler@@Base+0xffffffff894c3a61>
   15a52:	75 9e                	jne    159f2 <_obstack_memory_used@@Base+0x5242>
   15a54:	00 00                	add    %al,(%rax)
   15a56:	00 0f                	add    %cl,(%rdi)
   15a58:	29 a4 24 a0 48 c1 e3 	sub    %esp,-0x1c3eb760(%rsp)
   15a5f:	4d 85 f0             	test   %r14,%r8
   15a62:	11 49 39             	adc    %ecx,0x39(%rcx)
   15a65:	d6                   	(bad)  
   15a66:	8b 7c 48 31          	mov    0x31(%rax,%rcx,2),%edi
   15a6a:	c0 d1 ae             	rcl    $0xae,%cl
   15a6d:	ff                   	(bad)  
   15a6e:	ff 44 8b 4d          	incl   0x4d(%rbx,%rcx,4)
   15a72:	01 e5                	add    %esp,%ebp
   15a74:	8c 49 f7             	mov    %cs,-0x9(%rcx)
   15a77:	fb                   	sti    
   15a78:	00 c5                	add    %al,%ch
   15a7a:	0f 84 a9 13 49 f7    	je     fffffffff74a6e29 <obstack_alloc_failed_handler@@Base+0xfffffffff7484d89>
   15a80:	fd                   	std    
   15a81:	8d bc 24 80 00 00 00 	lea    0x80(%rsp),%edi
   15a88:	4c 89 ff             	mov    %r15,%rdi
   15a8b:	e8 50 f0 48 01       	call   14a4ae0 <obstack_alloc_failed_handler@@Base+0x1482a40>
   15a90:	fe 8b 5c 24 30 48    	decb   0x4830245c(%rbx)
   15a96:	83 f8 0f             	cmp    $0xf,%eax
   15a99:	85 94 fd ff ff 0f 84 	test   %edx,-0x7bf00001(%rbp,%rdi,8)
   15aa0:	b1 0f                	mov    $0xf,%cl
   15aa2:	00 00                	add    %al,(%rax)
   15aa4:	49 e9 f0 00 00 00    	rex.WB jmp 15b9a <_obstack_memory_used@@Base+0x53ea>
   15aaa:	39 fc                	cmp    %edi,%esp
   15aac:	44 89 5c 24 30       	mov    %r11d,0x30(%rsp)
   15ab1:	e8 2a ad ff ff       	call   107e0 <_obstack_memory_used@@Base+0x30>
   15ab6:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   15abb:	84 c0                	test   %al,%al
   15abd:	75 09                	jne    15ac8 <_obstack_memory_used@@Base+0x5318>
   15abf:	48 c7 44 24 78 ff ff 	movq   $0xfffffff,0x78(%rsp)
   15ac6:	ff 0f 
   15ac8:	85 dd                	test   %ebx,%ebp
   15aca:	01 00                	add    %eax,(%rax)
   15acc:	00 1a                	add    %bl,(%rdx)
   15ace:	4c 89 ef             	mov    %r13,%rdi
   15ad1:	44 89 5c 24 30       	mov    %r11d,0x30(%rsp)
   15ad6:	e8 65 af ff ff       	call   10a40 <_obstack_memory_used@@Base+0x290>
   15adb:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   15ae0:	48 c1 e2 1e          	shl    $0x1e,%rdx
   15ae4:	39 f2                	cmp    %esi,%edx
   15ae6:	00 00                	add    %al,(%rax)
   15ae8:	48 8b 4c 0f 8c       	mov    -0x74(%rdi,%rcx,1),%rcx
   15aed:	5d                   	pop    %rbp
   15aee:	49 89 f3             	mov    %rsi,%r11
   15af1:	0f 85 5d fe ff ff    	jne    15954 <_obstack_memory_used@@Base+0x51a4>
   15af7:	21 ec                	and    %ebp,%esp
   15af9:	30 00                	xor    %al,(%rax)
   15afb:	00 00                	add    %al,(%rax)
   15afd:	48 c1 e8 3f          	shr    $0x3f,%rax
   15b01:	4d 89 d5             	mov    %r10,%r13
   15b04:	49 89 c7             	mov    %rax,%r15
   15b07:	66 0f 1f 84 eb f4 00 	nopw   0xf4(%rbx,%rbp,8)
   15b0e:	00 00 
   15b10:	48                   	rex.W
   15b11:	49 39 d4             	cmp    %rdx,%r12
   15b14:	66 66 66 66 66 66 48 	data16 data16 data16 data16 data16 data16 imul %rcx
   15b1b:	f7 e9 
   15b1d:	48                   	rex.W
   15b1e:	48 c1 e9 1c          	shr    $0x1c,%rcx
   15b22:	f8                   	clc    
   15b23:	3f                   	(bad)  
   15b24:	48 c1 fa 49          	sar    $0x49,%rdx
   15b28:	29 f1                	sub    %esi,%ecx
   15b2a:	0f 85 a8 03 00 00    	jne    15ed8 <_obstack_memory_used@@Base+0x5728>
   15b30:	85 ec                	test   %ebp,%esp
   15b32:	fc                   	cld    
   15b33:	ff                   	(bad)  
   15b34:	ff 48 29             	decl   0x29(%rax)
   15b37:	f9                   	stc    
   15b38:	48 89 ca             	mov    %rcx,%rdx
   15b3b:	48 89 c1             	mov    %rax,%rcx
   15b3e:	89 f0                	mov    %esi,%eax
   15b40:	29 4d 31             	sub    %ecx,0x31(%rbp)
   15b43:	fb                   	sti    
   15b44:	30 45 84             	xor    %al,-0x7c(%rbp)
   15b47:	e9 b3 fc ff ff       	jmp    157ff <_obstack_memory_used@@Base+0x504f>
   15b4c:	e9 86 fd ff ff       	jmp    158d7 <_obstack_memory_used@@Base+0x5127>
   15b51:	49 31 dc             	xor    %rbx,%r12
   15b54:	85 c9                	test   %ecx,%ecx
   15b56:	75 b8                	jne    15b10 <_obstack_memory_used@@Base+0x5360>
   15b58:	c6                   	(bad)  
   15b59:	4c 39 df             	cmp    %r11,%rdi
   15b5c:	00 c7                	add    %al,%bh
   15b5e:	44 24 0f             	rex.R and $0xf,%al
   15b61:	84 30                	test   %dh,(%rax)
   15b63:	02 00                	add    (%rax),%al
   15b65:	00 1f                	add    %bl,(%rdi)
   15b67:	00 45 85             	add    %al,-0x7b(%rbp)
   15b6a:	4c 85 e8             	test   %r13,%rax
   15b6d:	df 0a                	fisttps (%rdx)
   15b6f:	48 c1 e7 2f          	shl    $0x2f,%rdi
   15b73:	fb                   	sti    
   15b74:	2d 48 c1 ee 33       	sub    $0x33eec148,%eax
   15b79:	db 0f                	fisttpl (%rdi)
   15b7b:	48 5c                	rex.W pop %rsp
   15b7d:	24 30                	and    $0x30,%al
   15b7f:	4d 29 ea             	sub    %r13,%r10
   15b82:	45 84 ff             	test   %r15b,%r15b
   15b85:	0f 85 5d 0a 00 00    	jne    165e8 <_obstack_memory_used@@Base+0x5e38>
   15b8b:	80 7c 24 48 00       	cmpb   $0x0,0x48(%rsp)
   15b90:	0f 85 8f 0b 00 00    	jne    16725 <_obstack_memory_used@@Base+0x5f75>
   15b96:	49 63 ca             	movslq %r10d,%rcx
   15b99:	44 39 d3             	cmp    %r10d,%ebx
   15b9c:	0f 8e c2 0a 00 00    	jle    16664 <_obstack_memory_used@@Base+0x5eb4>
   15ba2:	84 c0                	test   %al,%al
   15ba4:	0f 84 ba 0a 00 00    	je     16664 <_obstack_memory_used@@Base+0x5eb4>
   15baa:	48 63 d3             	movslq %ebx,%rdx
   15bad:	48 89 cb             	mov    %rcx,%rbx
   15bb0:	48 39 ca             	cmp    %rcx,%rdx
   15bb3:	48 0f 43 da          	cmovae %rdx,%rbx
   15bb7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   15bbc:	4c 29 e0             	sub    %r12,%rax
   15bbf:	4c 09 da             	or     %r11,%rdx
   15bc2:	49 f7 f8             	idiv   %r8
   15bc5:	f4                   	hlt    
   15bc6:	ff                   	(bad)  
   15bc7:	ff 49 c1             	decl   -0x3f(%rcx)
   15bca:	e2 2a                	loop   15bf6 <_obstack_memory_used@@Base+0x5446>
   15bcc:	84 b8 4d 21 e1 48    	test   %bh,0x48e1214d(%rax)
   15bd2:	39 ca                	cmp    %ecx,%edx
   15bd4:	76 36                	jbe    15c0c <_obstack_memory_used@@Base+0x545c>
   15bd6:	48 29 ca             	sub    %rcx,%rdx
   15bd9:	74 0f                	je     15bea <_obstack_memory_used@@Base+0x543a>
   15bdb:	4c 24 4d             	rex.WR and $0x4d,%al
   15bde:	89 e8                	mov    %ebp,%eax
   15be0:	7c 15                	jl     15bf7 <_obstack_memory_used@@Base+0x5447>
   15be2:	00 41 83             	add    %al,-0x7d(%rcx)
   15be5:	fb                   	sti    
   15be6:	30 0f                	xor    %cl,(%rdi)
   15be8:	84 5f 0b             	test   %bl,0xb(%rdi)
   15beb:	00 00                	add    %al,(%rax)
   15bed:	41 83 fb 48          	cmp    $0x48,%r11d
   15bf1:	ff c0                	inc    %eax
   15bf3:	55                   	push   %rbp
   15bf4:	0b 00                	or     (%rax),%eax
   15bf6:	4d 01 c2             	add    %r8,%r10
   15bf9:	49 39 d5             	cmp    %rdx,%r13
   15bfc:	00 00                	add    %al,(%rax)
   15bfe:	00 4c 89 fd          	add    %cl,-0x3(%rcx,%rcx,4)
   15c02:	e8 59 ed fe ff       	call   4960 <memset@plt>
   15c07:	48 7c 60             	rex.W jl 15c6a <_obstack_memory_used@@Base+0x54ba>
   15c0a:	49 01 f6             	add    %rsi,%r14
   15c0d:	7c 24                	jl     15c33 <_obstack_memory_used@@Base+0x5483>
   15c0f:	40                   	rex
   15c10:	4c 85 df             	test   %r11,%rdi
   15c13:	c1 dc 02             	rcr    $0x2,%esp
   15c16:	00 00                	add    %al,(%rax)
   15c18:	8d 79 ff             	lea    -0x1(%rcx),%edi
   15c1b:	48                   	rex.W
   15c1c:	49 0f af c6          	imul   %r14,%rax
   15c20:	52                   	push   %rdx
   15c21:	f6 ff                	idiv   %bh
   15c23:	ff 48 89             	decl   -0x77(%rax)
   15c26:	0f 4d 31             	cmovge (%rcx),%esi
   15c29:	fe 00                	incb   (%rax)
   15c2b:	00 fe                	add    %bh,%dh
   15c2d:	ff 48 8b             	decl   -0x75(%rax)
   15c30:	4c 24 40             	rex.WR and $0x40,%al
   15c33:	0f 1f 49 21          	nopl   0x21(%rcx)
   15c37:	f4                   	hlt    
   15c38:	43 0f b6 4c 85 d2    	movzbl -0x2e(%r13,%r8,4),%ecx
   15c3e:	48 89 4c 31 ca       	mov    %rcx,-0x36(%rcx,%rsi,1)
   15c43:	b2 42                	mov    $0x42,%dl
   15c45:	88 54 3d 00          	mov    %dl,0x0(%rbp,%rdi,1)
   15c49:	49 83 ef 01          	sub    $0x1,%r15
   15c4d:	73 e9                	jae    15c38 <_obstack_memory_used@@Base+0x5488>
   15c4f:	e9 22 f6 ff ff       	jmp    15276 <_obstack_memory_used@@Base+0x4ac6>
   15c54:	4d 89 ee             	mov    %r13,%r14
   15c57:	0f b6 4c 24 40       	movzbl 0x40(%rsp),%ecx
   15c5c:	31 4c 21 fb          	xor    %ecx,-0x5(%rcx,%riz,1)
   15c60:	ff 48 8b             	decl   -0x75(%rax)
   15c63:	7c 24                	jl     15c89 <_obstack_memory_used@@Base+0x54d9>
   15c65:	28 44 89 5c          	sub    %al,0x5c(%rcx,%rcx,4)
   15c69:	24 30                	and    $0x30,%al
   15c6b:	48 29 d9             	sub    %rbx,%rcx
   15c6e:	49 31 f9             	xor    %rdi,%r9
   15c71:	40 e8 09 ec fe ff    	rex call 4880 <strlen@plt>
   15c77:	0f 8c 63 02 00 00    	jl     15ee0 <_obstack_memory_used@@Base+0x5730>
   15c7d:	01 d3                	add    %edx,%ebx
   15c7f:	41 83 49 ff c0       	orl    $0xffffffc0,-0x1(%r9)
   15c84:	84 12                	test   %dl,(%rdx)
   15c86:	0c 00                	or     $0x0,%al
   15c88:	00 e9                	add    %ch,%cl
   15c8a:	48 85 d6             	test   %rdx,%rsi
   15c8d:	49 c7 c4 6f fd ff ff 	mov    $0xfffffffffffffd6f,%r12
   15c94:	48 39 d8             	cmp    %rbx,%rax
   15c97:	48 89 d8             	mov    %rbx,%rax
   15c9a:	49 0f 43 c5          	cmovae %r13,%rax
   15c9e:	4c 89 f8             	mov    %r15,%rax
   15ca1:	24 30                	and    $0x30,%al
   15ca3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   15ca8:	4c                   	rex.WR
   15ca9:	4c 39 eb             	cmp    %r13,%rbx
   15cac:	3b 44 4d 29          	cmp    0x29(%rbp,%rcx,2),%eax
   15cb0:	ea                   	(bad)  
   15cb1:	86 c2                	xchg   %al,%dl
   15cb3:	f3 ff                	repz (bad) 
   15cb5:	ff 48 85             	decl   -0x7b(%rax)
   15cb8:	ed                   	in     (%dx),%eax
   15cb9:	74 49                	je     15d04 <_obstack_memory_used@@Base+0x5554>
   15cbb:	48 c7 c0 f1 fc ff ff 	mov    $0xfffffffffffffcf1,%rax
   15cc2:	84 a2 fd ff ff 8d    	test   %ah,-0x72000003(%rdx)
   15cc8:	5c                   	pop    %rsp
   15cc9:	1d 00 41 83 fb       	sbb    $0xfb834100,%eax
   15cce:	30 0f                	xor    %cl,(%rdi)
   15cd0:	49 21 de             	and    %rbx,%r14
   15cd3:	00 00                	add    %al,(%rax)
   15cd5:	41                   	rex.B
   15cd6:	4c 09 d8             	or     %r11,%rax
   15cd9:	49 c1 0f 8c          	rorq   $0x8c,(%r15)
   15cdd:	d5                   	(bad)  
   15cde:	fc                   	cld    
   15cdf:	ff                   	(bad)  
   15ce0:	ff                   	(bad)  
   15ce1:	ef                   	out    %eax,(%dx)
   15ce2:	be 20 00 00 00       	mov    $0x20,%esi
   15ce7:	48 89 dd             	mov    %rbx,%rbp
   15cea:	49                   	rex.WB
   15ceb:	49 c1 e7 2c          	shl    $0x2c,%r15
   15cef:	ff                   	(bad)  
   15cf0:	ff                   	(bad)  
   15cf1:	ff 0f                	decl   (%rdi)
   15cf3:	85 f1                	test   %esi,%ecx
   15cf5:	0e                   	(bad)  
   15cf6:	00 00                	add    %al,(%rax)
   15cf8:	80 7c 24 40 4d       	cmpb   $0x4d,0x40(%rsp)
   15cfd:	4c 85 ef             	test   %r13,%rdi
   15d00:	c3                   	ret    
   15d01:	d5                   	(bad)  
   15d02:	fe                   	(bad)  
   15d03:	ff                   	(bad)  
   15d04:	ff 5d ff             	lcall  *-0x1(%rbp)
   15d07:	0f 84 29 fc ff ff    	je     15936 <_obstack_memory_used@@Base+0x5186>
   15d0d:	e1 0e                	loope  15d1d <_obstack_memory_used@@Base+0x556d>
   15d0f:	fe                   	(bad)  
   15d10:	ff 48 01             	decl   0x1(%rax)
   15d13:	de 24 28             	fisubs (%rax,%rbp,1)
   15d16:	48 89 c6             	mov    %rax,%rsi
   15d19:	0f b6 14 19          	movzbl (%rcx,%rbx,1),%edx
   15d1d:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
   15d21:	ef                   	out    %eax,(%dx)
   15d22:	06                   	(bad)  
   15d23:	88 44 1d 00          	mov    %al,0x0(%rbp,%rbx,1)
   15d27:	48 83 48 f7 fe       	orq    $0xfffffffffffffffe,-0x9(%rax)
   15d2c:	ec                   	in     (%dx),%al
   15d2d:	0f 85 36 fd ff ff    	jne    15a69 <_obstack_memory_used@@Base+0x52b9>
   15d33:	4d 01 e3             	add    %r12,%r11
   15d36:	4c 85 e2             	test   %r12,%rdx
   15d39:	4c 31 f0             	xor    %r14,%rax
   15d3c:	39 df                	cmp    %ebx,%edi
   15d3e:	0f                   	(bad)  
   15d3f:	0f 8c a3 fc ff ff    	jl     159e8 <_obstack_memory_used@@Base+0x5238>
   15d45:	ff                   	(bad)  
   15d46:	ff 4d 89             	decl   -0x77(%rbp)
   15d49:	ee                   	out    %al,(%dx)
   15d4a:	45 85 db             	test   %r11d,%r11d
   15d4d:	75 4d                	jne    15d9c <_obstack_memory_used@@Base+0x55ec>
   15d4f:	09 e4                	or     %esp,%esp
   15d51:	0f 49 39             	cmovns (%rcx),%edi
   15d54:	d6                   	(bad)  
   15d55:	00 00                	add    %al,(%rax)
   15d57:	8d 4b fa             	lea    -0x6(%rbx),%ecx
   15d5a:	31 48 ff             	xor    %ecx,-0x1(%rax)
   15d5d:	c6                   	(bad)  
   15d5e:	3d b8 67 0f 84       	cmp    $0x840f67b8,%eax
   15d63:	96                   	xchg   %eax,%esi
   15d64:	02 00                	add    (%rax),%al
   15d66:	00 c1                	add    %al,%cl
   15d68:	89 44 24 30          	mov    %eax,0x30(%rsp)
   15d6c:	0f 1f 40 00          	nopl   0x0(%rax)
   15d70:	44 0f b6 e9          	movzbl %cl,%r13d
   15d74:	0b 01                	or     (%rcx),%eax
   15d76:	00 00                	add    %al,(%rax)
   15d78:	ec                   	in     (%dx),%al
   15d79:	08 45 89             	or     %al,-0x77(%rbp)
   15d7c:	48 29 cf             	sub    %rcx,%rdi
   15d7f:	8b 84 24 68 05 00 00 	mov    0x568(%rsp),%eax
   15d86:	e9 d7 03 00 00       	jmp    16162 <_obstack_memory_used@@Base+0x59b2>
   15d8b:	49 c7 c4 75 fd ff ff 	mov    $0xfffffffffffffd75,%r12
   15d92:	74 24                	je     15db8 <_obstack_memory_used@@Base+0x5608>
   15d94:	28 8b 44 24 48 50    	sub    %cl,0x50482444(%rbx)
   15d9a:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   15d9f:	ff c7                	inc    %edi
   15da1:	5c                   	pop    %rsp
   15da2:	24 68                	and    $0x68,%al
   15da4:	44 89 44 0f 8f       	mov    %r8d,-0x71(%rdi,%rcx,1)
   15da9:	90                   	nop
   15daa:	fd                   	std    
   15dab:	ff                   	(bad)  
   15dac:	ff                   	(bad)  
   15dad:	ff 44 8b 5c          	incl   0x5c(%rbx,%rcx,4)
   15db1:	48 85 4c 89 eb       	test   %rcx,-0x15(%rcx,%rcx,4)
   15db6:	20 44 8b 49          	and    %al,0x49(%rbx,%rcx,4)
   15dba:	0f af c4             	imul   %esp,%eax
   15dbd:	89 c5                	mov    %eax,%ebp
   15dbf:	41 83 fb 2d          	cmp    $0x2d,%r11d
   15dc3:	0f 84 52 09 00 00    	je     1671b <_obstack_memory_used@@Base+0x5f6b>
   15dc9:	85 db                	test   %ebx,%ebx
   15dcb:	0f 88 4a 09 00 00    	js     1671b <_obstack_memory_used@@Base+0x5f6b>
   15dd1:	48 63 49 39          	movslq 0x39(%rcx),%rcx
   15dd5:	de 4d 09             	fimuls 0x9(%rbp)
   15dd8:	e9 26 fd 4d 29       	jmp    294f5b03 <obstack_alloc_failed_handler@@Base+0x294d3a63>
   15ddd:	c2 48 39             	ret    $0x3948
   15de0:	f0 24 08             	lock and $0x8,%al
   15de3:	4c 29 e3             	sub    %r12,%rbx
   15de6:	4c 39 d3             	cmp    %r10,%rbx
   15de9:	0f 4c 89 fe ff ff 48 	cmovl  0x48fffffe(%rcx),%ecx
   15df0:	85 49 ff             	test   %ecx,-0x1(%rcx)
   15df3:	c7                   	(bad)  
   15df4:	92                   	xchg   %eax,%edx
   15df5:	00 00                	add    %al,(%rax)
   15df7:	00 4c 39 ea          	add    %cl,-0x16(%rcx,%rdi,1)
   15dfb:	76 51                	jbe    15e4e <_obstack_memory_used@@Base+0x569e>
   15dfd:	4c                   	rex.WR
   15dfe:	49 ff c0             	inc    %r8
   15e01:	89 54 24 48          	mov    %edx,0x48(%rsp)
   15e05:	c7 c6 25 00 00 49    	mov    $0x49000025,%esi
   15e0b:	31 d2                	xor    %edx,%edx
   15e0d:	48 c7 c0 39 fc ff ff 	mov    $0xfffffffffffffc39,%rax
   15e14:	00 00                	add    %al,(%rax)
   15e16:	00 2d 49 01 da fb    	add    %ch,-0x425feb7(%rip)        # fffffffffbdb5f65 <obstack_alloc_failed_handler@@Base+0xfffffffffbd93ec5>
   15e1c:	30 0f                	xor    %cl,(%rdi)
   15e1e:	84 16                	test   %dl,(%rsi)
   15e20:	49 c1 e5 30          	shl    $0x30,%r13
   15e24:	83 fb 2b             	cmp    $0x2b,%ebx
   15e27:	0f 8f ab 7f e9 ff    	jg     ffffffffffeaddd8 <obstack_alloc_failed_handler@@Base+0xffffffffffe8bd38>
   15e2d:	48 89 ef             	mov    %rbp,%rdi
   15e30:	be 20 00 00 00       	mov    $0x20,%esi
   15e35:	4d                   	rex.WRB
   15e36:	4d 09 ef             	or     %r13,%r15
   15e39:	ff 48 8b             	decl   -0x75(%rax)
   15e3c:	6c                   	insb   (%dx),%es:(%rdi)
   15e3d:	4c 29 f0             	sub    %r14,%rax
   15e40:	49 c7 c0 bc fc ff ff 	mov    $0xfffffffffffffcbc,%r8
   15e47:	24 54                	and    $0x54,%al
   15e49:	48 31 f6             	xor    %rsi,%rsi
   15e4c:	24 48                	and    $0x48,%al
   15e4e:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   15e53:	48 83 ec 0f          	sub    $0xf,%rsp
   15e57:	48 c1 ea 02          	shr    $0x2,%rdx
   15e5b:	00 d9                	add    %bl,%cl
   15e5d:	8b 48 f7             	mov    -0x9(%rax),%ecx
   15e60:	f9                   	stc    
   15e61:	05 00 00 4c 89       	add    $0x894c0000,%eax
   15e66:	fa                   	cli    
   15e67:	48 89 de             	mov    %rbx,%rsi
   15e6a:	0f 85 ea 02 00 00    	jne    1615a <_obstack_memory_used@@Base+0x59aa>
   15e70:	24 28                	and    $0x28,%al
   15e72:	4c 21 d0             	and    %r10,%rax
   15e75:	03 00                	add    (%rax),%eax
   15e77:	00 8b 4c 89 e3 e9    	add    %cl,-0x161c76b4(%rbx)
   15e7d:	1b ff                	sbb    %edi,%edi
   15e7f:	ff                   	(bad)  
   15e80:	ff 4c 8b 54          	decl   0x54(%rbx,%rcx,4)
   15e84:	24 60                	and    $0x60,%al
   15e86:	48 01 da             	add    %rbx,%rdx
   15e89:	20 4d 01             	and    %cl,0x1(%rbp)
   15e8c:	d4                   	(bad)  
   15e8d:	e9 b2 f1 ff 48       	jmp    49015044 <obstack_alloc_failed_handler@@Base+0x48ff2fa4>
   15e92:	85 f9                	test   %edi,%ecx
   15e94:	ee                   	out    %al,(%dx)
   15e95:	c7                   	(bad)  
   15e96:	49                   	rex.WB
   15e97:	49 39 f6             	cmp    %rsi,%r14
   15e9a:	ff                   	(bad)  
   15e9b:	ff 0f                	decl   (%rdi)
   15e9d:	85 5d ff             	test   %ebx,-0x1(%rbp)
   15ea0:	ff                   	(bad)  
   15ea1:	ff 00                	incl   (%rax)
   15ea3:	00 49 49             	add    %cl,0x49(%rcx)
   15ea6:	c1 e2 02             	shl    $0x2,%edx
   15ea9:	ea                   	(bad)  
   15eaa:	fe                   	(bad)  
   15eab:	ff                   	(bad)  
   15eac:	ff                   	(bad)  
   15ead:	ff 48 8b             	decl   -0x75(%rax)
   15eb0:	44 24 49             	rex.R and $0x49,%al
   15eb3:	c1 ec 3f             	shr    $0x3f,%esp
   15eb6:	81 f9 94 f8 ff ff    	cmp    $0xfffff894,%ecx
   15ebc:	8d 81 6c 07 00 00    	lea    0x76c(%rcx),%eax
   15ec2:	41 0f 9c c7          	setl   %r15b
   15ec6:	48 31 c8             	xor    %rcx,%rax
   15ec9:	c1 e1 29             	shl    $0x29,%ecx
   15ecc:	c0 83 e0 9d 01 48 c1 	rolb   $0xc1,0x48019de0(%rbx)
   15ed3:	ea                   	(bad)  
   15ed4:	35 0f 85 49 01       	xor    $0x149850f,%eax
   15ed9:	dd ff                	(bad)  
   15edb:	1f                   	(bad)  
   15edc:	49 39 f8             	cmp    %rdi,%r8
   15edf:	48                   	rex.W
   15ee0:	49 c1 ef 2b          	shr    $0x2b,%r15
   15ee4:	c2 83 0f             	ret    $0xf83
   15ee7:	8c ca                	mov    %cs,%edx
   15ee9:	fc                   	cld    
   15eea:	ff                   	(bad)  
   15eeb:	ff                   	(bad)  
   15eec:	ff                   	(bad)  
   15eed:	ff 0f                	decl   (%rdi)
   15eef:	8c f8                	mov    %?,%eax
   15ef1:	fd                   	std    
   15ef2:	ff                   	(bad)  
   15ef3:	ff 0f                	decl   (%rdi)
   15ef5:	85 c4                	test   %eax,%esp
   15ef7:	0a 00                	or     (%rax),%al
   15ef9:	00 83 7c 24 24 2b    	add    %al,0x2b24247c(%rbx)
   15eff:	44 8b 5c 24 24       	mov    0x24(%rsp),%r11d
   15f04:	0f 84 be 0a 00 00    	je     169c8 <_obstack_memory_used@@Base+0x6218>
   15f0a:	48 29 f6             	sub    %rsi,%rsi
   15f0d:	48 00 be 43 00 00 00 	rex.W add %dil,0x43(%rsi)
   15f14:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   15f1b:	00 
   15f1c:	e9 29 f5 ff ff       	jmp    1544a <_obstack_memory_used@@Base+0x4c9a>
   15f21:	4d 89 4d 85          	mov    %r9,-0x7b(%r13)
   15f25:	f8                   	clc    
   15f26:	b8 09 00 00 4d       	mov    $0x4d000009,%eax
   15f2b:	48 21 da             	and    %rbx,%rdx
   15f2e:	ae                   	scas   %es:(%rdi),%al
   15f2f:	fc                   	cld    
   15f30:	ff                   	(bad)  
   15f31:	ff 41 49             	incl   0x49(%rcx)
   15f34:	f7 fc                	idiv   %esp
   15f36:	00 48 d1             	add    %cl,-0x2f(%rax)
   15f39:	e9 c8 eb 1b 0f       	jmp    f1d4b06 <obstack_alloc_failed_handler@@Base+0xf1b2a66>
   15f3e:	4c                   	rex.WR
   15f3f:	48 c1 e2 3e          	shl    $0x3e,%rdx
   15f43:	84 91 fd ff ff d1    	test   %dl,-0x2e000003(%rcx)
   15f49:	41 83 ed 01          	sub    $0x1,%r13d
   15f4d:	4d 31 c4             	xor    %r8,%r12
   15f50:	48 c1 f8 22          	sar    $0x22,%rax
   15f54:	29 c8                	sub    %ecx,%eax
   15f56:	89 c2                	mov    %eax,%edx
   15f58:	48 63 c2             	movslq %edx,%rax
   15f5b:	41 39 dd             	cmp    %ebx,%r13d
   15f5e:	7f 4c                	jg     15fac <_obstack_memory_used@@Base+0x57fc>
   15f60:	01 ee                	add    %ebp,%esi
   15f62:	c8 67 66 66          	enter  $0x6667,$0x66
   15f66:	66 48 f7 fa          	data16 idiv %rdx
   15f6a:	0f 8c 6b fd 49 4d    	jl     4d4b5cdb <obstack_alloc_failed_handler@@Base+0x4d493c3b>
   15f70:	31 fb                	xor    %edi,%ebx
   15f72:	c7 c7 ae 00 00 4d    	mov    $0x4d0000ae,%edi
   15f78:	01 fe                	add    %edi,%esi
   15f7a:	f1                   	int1   
   15f7b:	41 83 fd 01          	cmp    $0x1,%r13d
   15f7f:	0f 84 22 09 00 00    	je     168a7 <_obstack_memory_used@@Base+0x60f7>
   15f85:	85 c9                	test   %ecx,%ecx
   15f87:	74 b7                	je     15f40 <_obstack_memory_used@@Base+0x5790>
   15f89:	4d 63 fd             	movslq %r13d,%r15
   15f8c:	4c 89 fe             	mov    %r15,%rsi
   15f8f:	45 85 ed             	test   %r13d,%r13d
   15f92:	0f 84 4e 0e 00 00    	je     16de6 <_obstack_memory_used@@Base+0x6636>
   15f98:	48 8d 8c 34 00 01 0f 	lea    -0x7af0ff00(%rsp,%rsi,1),%rcx
   15f9f:	85 
   15fa0:	4c 39 d3             	cmp    %r10,%rbx
   15fa3:	ff 0f                	decl   (%rdi)
   15fa5:	84 c6                	test   %al,%dh
   15fa7:	03 00                	add    (%rax),%eax
   15fa9:	00 00                	add    %al,(%rax)
   15fab:	00 49 31             	add    %cl,0x31(%rcx)
   15fae:	d9 eb                	fldpi  
   15fb0:	09 0f                	or     %ecx,(%rdi)
   15fb2:	1f                   	(bad)  
   15fb3:	80 00 00             	addb   $0x0,(%rax)
   15fb6:	00 00                	add    %al,(%rax)
   15fb8:	48 98                	cltq   
   15fba:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
   15fc1:	89 d7                	mov    %edx,%edi
   15fc3:	48 21 fb             	and    %rdi,%rbx
   15fc6:	01 c1                	add    %eax,%ecx
   15fc8:	ff 1f                	lcall  *(%rdi)
   15fca:	48 c1 f8 22          	sar    $0x22,%rax
   15fce:	29 49 c7             	sub    %ecx,-0x39(%rcx)
   15fd1:	c6                   	(bad)  
   15fd2:	d0 fe                	sar    %dh
   15fd4:	ff                   	(bad)  
   15fd5:	ff 00                	incl   (%rax)
   15fd7:	00 c2                	add    %al,%dl
   15fd9:	30 49 ff             	xor    %cl,-0x1(%rcx)
   15fdc:	c7 c2 48 39 ce 75    	mov    $0x75ce3948,%edx
   15fe2:	d5                   	(bad)  
   15fe3:	45 85 db             	test   %r11d,%r11d
   15fe6:	b8 30 00 00 00       	mov    $0x30,%eax
   15feb:	44 0f                	rex.R (bad) 
   15fed:	0f 84 8a 03 00 00    	je     1637d <_obstack_memory_used@@Base+0x5bcd>
   15ff3:	fd                   	std    
   15ff4:	4c 29 48 29          	sub    %r9,0x29(%rax)
   15ff8:	d9 f8                	fprem  
   15ffa:	0f 86 78 4c 48 f7    	jbe    fffffffff749ac78 <obstack_alloc_failed_handler@@Base+0xfffffffff7478bd8>
   16000:	fe c1                	inc    %cl
   16002:	e8 23 6e 49 21       	call   214ace2a <obstack_alloc_failed_handler@@Base+0x2148ad8a>
   16007:	db 40 00             	fildl  0x0(%rax)
   1600a:	0f 48 c1             	cmovs  %ecx,%eax
   1600d:	e7 09                	out    %eax,$0x9
   1600f:	02 49 8d             	add    -0x73(%rcx),%cl
   16012:	49 09 f1             	or     %rsi,%r9
   16015:	4c 85 4d 31          	test   %r9,0x31(%rbp)
   16019:	c8 4c 39 ef          	enter  $0x394c,$0xef
   1601d:	33 44 89 5c          	xor    0x5c(%rcx,%rcx,4),%eax
   16021:	24 40                	and    $0x40,%al
   16023:	e8 88 e6 fe ff       	call   46b0 <__ctype_toupper_loc@plt>
   16028:	48 8b 4d 0f          	mov    0xf(%rbp),%rcx
   1602c:	49 f7 fa             	idiv   %r10
   1602f:	5c                   	pop    %rsp
   16030:	49 21 d3             	and    %rdx,%r11
   16033:	8d bc 24 00 01 0f 8c 	lea    -0x73f0ff00(%rsp),%edi
   1603a:	64 48 c1 ee 39       	fs shr $0x39,%rsi
   1603f:	34 17                	xor    $0x17,%al
   16041:	48 8b 01             	mov    (%rcx),%rax
   16044:	4c 85 ef             	test   %r13,%rdi
   16047:	0f 85 2e fc ff ff    	jne    15c7b <_obstack_memory_used@@Base+0x54cb>
   1604d:	f3 01 73 49          	repz add %esi,0x49(%rbx)
   16051:	f7 f9                	idiv   %ecx
   16053:	8c 92 fe ff ff 83    	mov    %ss,-0x7c000002(%rdx)
   16059:	fb                   	sti    
   1605a:	2d 0f 0f 8f 8a       	sub    $0x8a8f0f0f,%eax
   1605f:	00 00                	add    %al,(%rax)
   16061:	00 29                	add    %ch,(%rcx)
   16063:	eb 49                	jmp    160ae <_obstack_memory_used@@Base+0x58fe>
   16065:	f7 fd                	idiv   %ebp
   16067:	0f 88 01 f0 0f 85    	js     ffffffff8511506e <obstack_alloc_failed_handler@@Base+0xffffffff850f2fce>
   1606d:	11 fe                	adc    %edi,%esi
   1606f:	ff                   	(bad)  
   16070:	ff 08                	decl   (%rax)
   16072:	4c 29 e0             	sub    %r12,%rax
   16075:	48                   	rex.W
   16076:	48 c1 e9 34          	shr    $0x34,%rcx
   1607a:	fa                   	cli    
   1607b:	ef                   	out    %eax,(%dx)
   1607c:	49 c7 c6 54 fd ff ff 	mov    $0xfffffffffffffd54,%r14
   16083:	57                   	push   %rdi
   16084:	0d 49 01 f7 85       	or     $0x85f70149,%eax
   16089:	d2 0f                	rorb   %cl,(%rdi)
   1608b:	84 b4 ef ff ff 48 8d 	test   %dh,-0x72b70001(%rdi,%rbp,8)
   16092:	5c                   	pop    %rsp
   16093:	15 00 49 01 d4       	adc    $0xd4014900,%eax
   16098:	41 83 fb 30          	cmp    $0x30,%r11d
   1609c:	0f 84 ac 0c 00 00    	je     16d4e <_obstack_memory_used@@Base+0x659e>
   160a2:	41 83 fb 2b          	cmp    $0x2b,%r11d
   160a6:	49 f7 fb             	idiv   %r11
   160a9:	49 01 f4             	add    %rsi,%r12
   160ac:	48 89 ef             	mov    %rbp,%rdi
   160af:	be 20 00 e9 31       	mov    $0x31e90020,%esi
   160b4:	01 00                	add    %eax,(%rax)
   160b6:	75 6c                	jne    16124 <_obstack_memory_used@@Base+0x5974>
   160b8:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   160b9:	e8 fe ff e9 83       	call   ffffffff83eb60bc <obstack_alloc_failed_handler@@Base+0xffffffff83e9401c>
   160be:	49 c7 c4 d4 49 ff c5 	mov    $0xffffffffc5ff49d4,%r12
   160c5:	ff 4d 0f             	decl   0xf(%rbp)
   160c8:	af                   	scas   %es:(%rdi),%eax
   160c9:	e6 49                	out    %al,$0x49
   160cb:	85 f6                	test   %esi,%esi
   160cd:	24 30                	and    $0x30,%al
   160cf:	02 00                	add    (%rax),%al
   160d1:	00 00                	add    %al,(%rax)
   160d3:	be 4d 00 00 00       	mov    $0x4d,%esi
   160d8:	8b 50 04             	mov    0x4(%rax),%edx
   160db:	49 f7 ff             	idiv   %r15
   160de:	ff                   	(bad)  
   160df:	ff 4d 89             	decl   -0x77(%rbp)
   160e2:	ee                   	out    %al,(%dx)
   160e3:	31 ff                	xor    %edi,%edi
   160e5:	be 63 00 00 00       	mov    $0x63,%esi
   160ea:	45 31 ed             	xor    %r13d,%r13d
   160ed:	e9 d1 f4 ff ff       	jmp    155c3 <_obstack_memory_used@@Base+0x4e13>
   160f2:	4d 89 ee             	mov    %r13,%r14
   160f5:	31 49 c7             	xor    %ecx,-0x39(%rcx)
   160f8:	c3                   	ret    
   160f9:	4d 31 48 ff          	xor    %r9,-0x1(%r8)
   160fd:	c0 b5 03 00 00 d0 48 	shlb   $0x48,-0x2ffffffd(%rbp)
   16104:	69 d2 1f 85 eb 51    	imul   $0x51eb851f,%edx,%edx
   1610a:	89 c1                	mov    %eax,%ecx
   1610c:	e9 c1 01 4d 85       	jmp    ffffffff854e62d2 <obstack_alloc_failed_handler@@Base+0xffffffff854c4232>
   16111:	c8 25 29 ca          	enter  $0x2925,$0xca
   16115:	6b 4d 31 eb          	imul   $0xffffffeb,0x31(%rbp),%ecx
   16119:	c2 4d 85             	ret    $0x854d
   1611c:	e4 0f                	in     $0xf,%al
   1611e:	89 d1                	mov    %edx,%ecx
   16120:	83 c2 64             	add    $0x64,%edx
   16123:	f7 49 49 c1 eb 38 ff 	testl  $0xff38ebc1,0x49(%rcx)
   1612a:	0f 4e d1             	cmovle %ecx,%edx
   1612d:	be 79 e9 29 0f       	mov    $0xf29e979,%esi
   16132:	84 ec                	test   %ch,%ah
   16134:	fc                   	cld    
   16135:	ff                   	(bad)  
   16136:	ff f0                	push   %rax
   16138:	f2 ff                	repnz (bad) 
   1613a:	ff 8b 44 24 24 83    	decl   -0x7cdbdbbc(%rbx)
   16140:	0f 84 37 02 00 00    	je     1637d <_obstack_memory_used@@Base+0x5bcd>
   16146:	00 00                	add    %al,(%rax)
   16148:	41 89 c3             	mov    %eax,%r11d
   1614b:	c6                   	(bad)  
   1614c:	4d 01 db             	add    %r11,%r11
   1614f:	00 be 79 00 00 00    	add    %bh,0x79(%rsi)
   16155:	45 31 ff             	xor    %r15d,%r15d
   16158:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   1615f:	00 
   16160:	b8 01 00 00 00       	mov    $0x1,%eax
   16165:	e9 e0 f2 ff ff       	jmp    1544a <_obstack_memory_used@@Base+0x4c9a>
   1616a:	4d 89 ee             	mov    %r13,%r14
   1616d:	48 01 ca             	add    %rcx,%rdx
   16170:	78 00                	js     16172 <_obstack_memory_used@@Base+0x59c2>
   16172:	00 48 09             	add    %cl,0x9(%rax)
   16175:	ca ed e9             	lret   $0xe9ed
   16178:	47 f4                	rex.RXB hlt 
   1617a:	ff                   	(bad)  
   1617b:	ff 4d 39             	decl   0x39(%rbp)
   1617e:	c2 31 0f             	ret    $0xf31
   16181:	8c f0                	mov    %?,%eax
   16183:	fc                   	cld    
   16184:	ff                   	(bad)  
   16185:	ff 49 ff             	decl   -0x1(%rcx)
   16188:	c6 00 00             	movb   $0x0,(%rax)
   1618b:	8b 50 14             	mov    0x14(%rax),%edx
   1618e:	81 fa 94 f8 ff ff    	cmp    $0xfffff894,%edx
   16194:	41 0f 9c c7          	setl   %r15b
   16198:	81 c2 6c 07 00 00    	add    $0x76c,%edx
   1619e:	45 85 4d 89          	test   %r9d,-0x77(%r13)
   161a2:	cb                   	lret   
   161a3:	4d 39 ff             	cmp    %r15,%r15
   161a6:	00 4d 0f             	add    %cl,0xf(%rbp)
   161a9:	0f 8c af fd ff ff    	jl     15f5e <_obstack_memory_used@@Base+0x57ae>
   161af:	2b 0f                	sub    (%rdi),%ecx
   161b1:	84 11                	test   %dl,(%rcx)
   161b3:	0c 00                	or     $0x0,%al
   161b5:	00 c6                	add    %al,%dh
   161b7:	44 24 48             	rex.R and $0x48,%al
   161ba:	00 48 c1             	add    %cl,-0x3f(%rax)
   161bd:	e8 2b 24 30 04       	call   43185ed <obstack_alloc_failed_handler@@Base+0x42f654d>
   161c2:	00 00                	add    %al,(%rax)
   161c4:	00 0f                	add    %cl,(%rdi)
   161c6:	49 85 d7             	test   %rdx,%r15
   161c9:	d0 49 c1             	rorb   -0x3f(%rcx)
   161cc:	ef                   	out    %eax,(%dx)
   161cd:	2f                   	(bad)  
   161ce:	0f 8c 05 fd ff ff    	jl     15ed9 <_obstack_memory_used@@Base+0x5729>
   161d4:	f7 ff                	idiv   %edi
   161d6:	ff 4d 89             	decl   -0x77(%rbp)
   161d9:	ee                   	out    %al,(%dx)
   161da:	31 ff                	xor    %edi,%edi
   161dc:	be 58 00 00 00       	mov    $0x58,%esi
   161e1:	45 31 ed             	xor    %r13d,%r13d
   161e4:	e9 da 0f 8c 32       	jmp    328d71c3 <obstack_alloc_failed_handler@@Base+0x328b5123>
   161e9:	fc                   	cld    
   161ea:	ff                   	(bad)  
   161eb:	ff 4c 31 df          	decl   -0x21(%rcx,%rsi,1)
   161ef:	8b 74 24 10          	mov    0x10(%rsp),%esi
   161f3:	c7 44 24 30 4c 85 f2 	movl   $0xf2854c,0x30(%rsp)
   161fa:	00 
   161fb:	8b 46 18             	mov    0x18(%rsi),%eax
   161fe:	8b 76 1c             	mov    0x1c(%rsi),%esi
   16201:	8d 0f                	lea    (%rdi),%ecx
   16203:	84 56 ff             	test   %dl,-0x1(%rsi)
   16206:	ff                   	(bad)  
   16207:	ff                   	(bad)  
   16208:	3a 48 69             	cmp    0x69(%rax),%cl
   1620b:	c0 93 24 49 92 49 09 	rclb   $0x9,0x49924924(%rbx)
   16212:	cb                   	lret   
   16213:	fe c1                	inc    %cl
   16215:	e8 4d 85 d4 c1       	call   ffffffffc1d5e767 <obstack_alloc_failed_handler@@Base+0xffffffffc1d3c6c7>
   1621a:	f8                   	clc    
   1621b:	02 29                	add    (%rcx),%ch
   1621d:	c8 8d 0c c5          	enter  $0xc8d,$0xc5
   16221:	48 ff c3             	inc    %rbx
   16224:	00 29                	add    %ch,(%rcx)
   16226:	c1 49 ff c3          	rorl   $0xc3,-0x1(%rcx)
   1622a:	d0 8d 44 30 07 be    	rorb   -0x41f8cfbc(%rbp)
   16230:	57                   	push   %rdi
   16231:	00 00                	add    %al,(%rax)
   16233:	00 48 48             	add    %cl,0x48(%rax)
   16236:	c1 ef 48             	shr    $0x48,%edi
   16239:	89 f7                	mov    %esi,%edi
   1623b:	85 eb                	test   %ebp,%ebx
   1623d:	92                   	xchg   %eax,%edx
   1623e:	48 c1 ea 20          	shr    $0x20,%rdx
   16242:	01 c2                	add    %eax,%edx
   16244:	c1 f8 e9             	sar    $0xe9,%eax
   16247:	35 02 00 00 c2       	xor    $0xc2000002,%eax
   1624c:	e9 5a f4 ff ff       	jmp    156ab <_obstack_memory_used@@Base+0x4efb>
   16251:	4d 89 ee             	mov    %r13,%r14
   16254:	31 0f                	xor    %ecx,(%rdi)
   16256:	85 29                	test   %ebp,(%rcx)
   16258:	fe                   	(bad)  
   16259:	ff                   	(bad)  
   1625a:	ff                   	(bad)  
   1625b:	ff 4d 89             	decl   -0x77(%rbp)
   1625e:	49 31 d8             	xor    %rbx,%r8
   16261:	00 00                	add    %al,(%rax)
   16263:	be 55 49 31 d6       	mov    $0xd6314955,%esi
   16268:	8b 41 1c             	mov    0x1c(%rcx),%eax
   1626b:	4d 01 d2             	add    %r10,%r10
   1626e:	e9 d0 48 85 c0       	jmp    ffffffffc086ab43 <obstack_alloc_failed_handler@@Base+0xffffffffc0848aa3>
   16273:	d0 48 0f             	rorb   0xf(%rax)
   16276:	4c 89 f2             	mov    %r14,%rdx
   16279:	ff                   	(bad)  
   1627a:	ff 49 c1             	decl   -0x3f(%rcx)
   1627d:	e8 2d 09 f3 fc       	call   fffffffffcf46baf <obstack_alloc_failed_handler@@Base+0xfffffffffcf24b0f>
   16282:	fd                   	std    
   16283:	ff                   	(bad)  
   16284:	ff                   	(bad)  
   16285:	fa                   	cli    
   16286:	02 29                	add    (%rcx),%ch
   16288:	c2 0f 84             	ret    $0x840f
   1628b:	49 c1 e3 0b          	shl    $0xb,%r11
   1628f:	89 ee                	mov    %ebp,%esi
   16291:	4d                   	rex.WRB
   16292:	48 31 f9             	xor    %rdi,%rcx
   16295:	e6 18                	out    %al,$0x18
   16297:	48 29 49 c7          	sub    %rcx,-0x39(%rcx)
   1629b:	c3                   	ret    
   1629c:	0d fe ff ff ff       	or     $0xfffffffe,%eax
   162a1:	cb                   	lret   
   162a2:	fa                   	cli    
   162a3:	ff                   	(bad)  
   162a4:	ff 4d 89             	decl   -0x77(%rbp)
   162a7:	ee                   	out    %al,(%dx)
   162a8:	31 0f                	xor    %ecx,(%rdi)
   162aa:	85 90 fd ff ff c7    	test   %edx,-0x38000003(%rax)
   162b0:	44 24 4d             	rex.R and $0x4d,%al
   162b3:	01 49 f7             	add    %ecx,-0x9(%rcx)
   162b6:	f8                   	clc    
   162b7:	c1 e6 30             	shl    $0x30,%esi
   162ba:	00 00                	add    %al,(%rax)
   162bc:	8b 10                	mov    (%rax),%edx
   162be:	4d 09 e4             	or     %r12,%r12
   162c1:	49 85 cc             	test   %rcx,%r12
   162c4:	89 ee                	mov    %ebp,%esi
   162c6:	c7                   	(bad)  
   162c7:	4c 31 ce             	xor    %r9,%rsi
   162ca:	49 39 db             	cmp    %rbx,%r11
   162cd:	85 da                	test   %ebx,%edx
   162cf:	8d 3d 49 c1 e6 48    	lea    0x48e6c149(%rip),%edi        # 48e8241e <obstack_alloc_failed_handler@@Base+0x48e6037e>
   162d5:	ff c2                	inc    %edx
   162d7:	fa                   	cli    
   162d8:	ff                   	(bad)  
   162d9:	ff 4d 49             	decl   0x49(%rbp)
   162dc:	85 d7                	test   %edx,%edi
   162de:	ff 41 bd             	incl   -0x43(%rcx)
   162e1:	01 00                	add    %eax,(%rax)
   162e3:	00 49 ff             	add    %cl,-0x1(%rcx)
   162e6:	c1 48 89 f7          	rorl   $0xf7,-0x77(%rax)
   162ea:	4d 89 ee             	mov    %r13,%r14
   162ed:	31 49 ff             	xor    %ecx,-0x1(%rcx)
   162f0:	c1 24 30 02          	shll   $0x2,(%rax,%rsi,1)
   162f4:	00 00                	add    %al,(%rax)
   162f6:	00 8b 54 24 50 be    	add    %cl,-0x41afdbac(%rbx)
   162fc:	49 00 00             	rex.WB add %al,(%r8)
   162ff:	00 e9                	add    %ch,%cl
   16301:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   16302:	f3 48 89 d0          	repz mov %rdx,%rax
   16306:	89 ee                	mov    %ebp,%esi
   16308:	31 ff                	xor    %edi,%edi
   1630a:	48 8b 44 49 c1       	mov    -0x3f(%rcx,%rcx,2),%rax
   1630f:	e1 2c                	loope  1633d <_obstack_memory_used@@Base+0x5b8d>
   16311:	f7 ff                	idiv   %edi
   16313:	02 00                	add    (%rax),%al
   16315:	00 00                	add    %al,(%rax)
   16317:	be 48 00 00 00       	mov    $0x48,%esi
   1631c:	8b 50 08             	mov    0x8(%rax),%edx
   1631f:	48 89 ca             	mov    %rcx,%rdx
   16322:	ff                   	(bad)  
   16323:	ff 4d 89             	decl   -0x77(%rbp)
   16326:	ee                   	out    %al,(%dx)
   16327:	31 ff                	xor    %edi,%edi
   16329:	48 8b 4d 09          	mov    0x9(%rbp),%rcx
   1632d:	f6 c7 44             	test   $0x44,%bh
   16330:	24 30                	and    $0x30,%al
   16332:	01 4d 85             	add    %ecx,-0x7b(%rbp)
   16335:	e0 be                	loopne 162f5 <_obstack_memory_used@@Base+0x5b45>
   16337:	77 00                	ja     16339 <_obstack_memory_used@@Base+0x5b89>
   16339:	00 4c 31 ee          	add    %cl,-0x12(%rcx,%rsi,1)
   1633d:	48 f7 f8             	idiv   %rax
   16340:	f3 4d 01 cf          	repz add %r9,%r15
   16344:	89 ee                	mov    %ebp,%esi
   16346:	31 ff                	xor    %edi,%edi
   16348:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1634d:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   16354:	00 
   16355:	48 09 d9             	or     %rbx,%rcx
   16358:	00 00                	add    %al,(%rax)
   1635a:	8b 40 18             	mov    0x18(%rax),%eax
   1635d:	8d 50 06             	lea    0x6(%rax),%edx
   16360:	48 63 c2             	movslq %edx,%rax
   16363:	89 d1                	mov    %edx,%ecx
   16365:	49 c7 c4 9d 01 00 00 	mov    $0x19d,%r12
   1636c:	c1 f9 1f             	sar    $0x1f,%ecx
   1636f:	48 c1 e8 20          	shr    $0x20,%rax
   16373:	01 4c 09 e9          	add    %ecx,-0x17(%rcx,%rcx,1)
   16377:	02 29                	add    (%rcx),%ch
   16379:	c8 8d 0c c5          	enter  $0xc8d,$0xc5
   1637d:	00 00                	add    %al,(%rax)
   1637f:	00 00                	add    %al,(%rax)
   16381:	29 c1                	sub    %eax,%ecx
   16383:	29 e9                	sub    %ebp,%ecx
   16385:	62 03                	(bad)  
   16387:	00 00                	add    %al,(%rax)
   16389:	26 02 00             	es add (%rax),%al
   1638c:	4d 39 e7             	cmp    %r12,%r15
   1638f:	84 1c 02             	test   %bl,(%rdx,%rax,1)
   16392:	00 00                	add    %al,(%rax)
   16394:	ee                   	out    %al,(%dx)
   16395:	4c 29 e1             	sub    %r12,%rcx
   16398:	49 ff 48 0f          	decq   0xf(%r8)
   1639c:	af                   	scas   %es:(%rdi),%eax
   1639d:	c9                   	leave  
   1639e:	15 05 4c 0f af       	adc    $0xaf0f4c05,%eax
   163a3:	f2 0f 4d 09          	repnz cmovge (%rcx),%ecx
   163a7:	c7 00 00 00 48 0f    	movl   $0xf480000,(%rax)
   163ad:	af                   	scas   %es:(%rdi),%eax
   163ae:	c0 01 00             	rolb   $0x0,(%rcx)
   163b1:	00 00                	add    %al,(%rax)
   163b3:	4d 0f 85 e5 49 c1 48 	rex.WRB jne 48c2ad9f <obstack_alloc_failed_handler@@Base+0x48c08cff>
   163ba:	c7 c6 5d fc ff ff    	mov    $0xfffffc5d,%esi
   163c0:	ec                   	in     (%dx),%al
   163c1:	ff                   	(bad)  
   163c2:	ff 48 85             	decl   -0x7b(%rax)
   163c5:	ed                   	in     (%dx),%eax
   163c6:	0f 8c dd 00 00 00    	jl     164a9 <_obstack_memory_used@@Base+0x5cf9>
   163cc:	83 fb 01             	cmp    $0x1,%ebx
   163cf:	7e 31                	jle    16402 <_obstack_memory_used@@Base+0x5c52>
   163d1:	48 83 ea 01          	sub    $0x1,%rdx
   163d5:	48 8d 5c 15 49       	lea    0x49(%rbp,%rdx,1),%rbx
   163da:	c7 c3 69 fe e9 bf    	mov    $0xbfe9fe69,%ebx
   163e0:	00 00                	add    %al,(%rax)
   163e2:	00 dc                	add    %bl,%ah
   163e4:	48 c7 c3 4c fc ff ff 	mov    $0xfffffffffffffc4c,%rbx
   163eb:	08 00                	or     %al,(%rax)
   163ed:	00 48 89             	add    %cl,-0x77(%rax)
   163f0:	48                   	rex.W
   163f1:	48 f7 fa             	idiv   %rdx
   163f4:	fe                   	(bad)  
   163f5:	ff 0f                	decl   (%rdi)
   163f7:	8f                   	(bad)  
   163f8:	75 ff                	jne    163f9 <_obstack_memory_used@@Base+0x5c49>
   163fa:	ff                   	(bad)  
   163fb:	ff 85 d2 41 0f b6    	incl   -0x49f0be2e(%rbp)
   16401:	06                   	(bad)  
   16402:	88 45 00             	mov    %al,0x0(%rbp)
   16405:	48 83 c5 01          	add    $0x1,%rbp
   16409:	e9 6f f2 ff ff       	jmp    1567d <_obstack_memory_used@@Base+0x4ecd>
   1640e:	83 ff 45             	cmp    $0x45,%edi
   16411:	0f 85 49 c7 c3 7a    	jne    7ac52b60 <obstack_alloc_failed_handler@@Base+0x7ac30ac0>
   16417:	02 eb                	add    %bl,%ch
   16419:	0d ff ff 85 ff       	or     $0xff85ffff,%eax
   1641e:	0f 84 26 49 c7 c5    	je     ffffffffc5c8ad4a <obstack_alloc_failed_handler@@Base+0xffffffffc5c68caa>
   16424:	0d 01 00 e9 24       	or     $0x24e90001,%eax
   16429:	03 00                	add    (%rax),%eax
   1642b:	00 49 c1             	add    %cl,-0x3f(%rcx)
   1642e:	e0 15                	loopne 16445 <_obstack_memory_used@@Base+0x5c95>
   16430:	ff                   	(bad)  
   16431:	ff                   	(bad)  
   16432:	e9 79 ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16437:	85 ff                	test   %edi,%edi
   16439:	0f 84 56 fa ff ff    	je     15e95 <_obstack_memory_used@@Base+0x56e5>
   1643f:	e9 6c ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16444:	e9 05 ff 4c 89       	jmp    ffffffff894e634e <obstack_alloc_failed_handler@@Base+0xffffffff894c42ae>
   16449:	ca 75 03             	lret   $0x375
   1644c:	00 48 01             	add    %cl,0x1(%rax)
   1644f:	ca ff ff             	lret   $0xffff
   16452:	85 ff                	test   %edi,%edi
   16454:	0f 84 f4 f2 ff ff    	je     1574e <_obstack_memory_used@@Base+0x4f9e>
   1645a:	e9 51 0f e9 ba       	jmp    ffffffffbaea73b0 <obstack_alloc_failed_handler@@Base+0xffffffffbae85310>
   1645f:	03 00                	add    (%rax),%eax
   16461:	00 85 d9 f4 ff ff    	add    %al,-0xb27(%rbp)
   16467:	e9 44 0f 8c 3a       	jmp    3a8d73b0 <obstack_alloc_failed_handler@@Base+0x3a8b5310>
   1646c:	01 00                	add    %eax,(%rax)
   1646e:	00 0f                	add    %cl,(%rdi)
   16470:	85 67 fd             	test   %esp,-0x3(%rdi)
   16473:	ff                   	(bad)  
   16474:	ff                   	(bad)  
   16475:	e9 36 ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   1647a:	be 71 00 00 49       	mov    $0x49000071,%esi
   1647f:	01 ce                	add    %ecx,%esi
   16481:	4f 0f 84 d9 ef ff ff 	rex.WRXB je 15461 <_obstack_memory_used@@Base+0x4cb1>
   16488:	e9 00 f5 ff ff       	jmp    1598d <_obstack_memory_used@@Base+0x51dd>
   1648d:	83 ff 4f             	cmp    $0x4f,%edi
   16490:	0f 85 d9 fc ff ff    	jne    1616f <_obstack_memory_used@@Base+0x59bf>
   16496:	e9 e9 bb fe ff       	jmp    2084 <free@plt-0x25fc>
   1649b:	ff 48 ff             	decl   -0x1(%rax)
   1649e:	c6 85 53 fc ff ff 49 	movb   $0x49,-0x3ad(%rbp)
   164a5:	c1 0f 85             	rorl   $0x85,(%rdi)
   164a8:	c5 fc ff             	(bad)  
   164ab:	ff 0f                	decl   (%rdi)
   164ad:	85 fc                	test   %edi,%esp
   164af:	f9                   	stc    
   164b0:	ff                   	(bad)  
   164b1:	ff                   	(bad)  
   164b2:	e9 aa ef ff 4c       	jmp    4d015461 <obstack_alloc_failed_handler@@Base+0x4cff33c1>
   164b7:	48 31 df             	xor    %rbx,%rdi
   164ba:	29 c0                	sub    %eax,%eax
   164bc:	f7 f8                	idiv   %eax
   164be:	ff                   	(bad)  
   164bf:	ff 83 ff 4f 0f 85    	incl   -0x7af0b001(%rbx)
   164c5:	b8 0f 4d 89 fc       	mov    $0xfc894d0f,%eax
   164ca:	ff                   	(bad)  
   164cb:	ff c9                	dec    %ecx
   164cd:	ff 48 8b             	decl   -0x75(%rax)
   164d0:	4c 24 08             	rex.WR and $0x8,%al
   164d3:	4c 29 e1             	sub    %r12,%rcx
   164d6:	85 ff                	test   %edi,%edi
   164d8:	0f 84 ba fe ff ff    	je     16398 <_obstack_memory_used@@Base+0x5be8>
   164de:	4d 89 f7             	mov    %r14,%r15
   164e1:	b9 01 00 49 d1       	mov    $0xd1490001,%ecx
   164e6:	ec                   	in     (%dx),%al
   164e7:	e1 4c                	loope  16535 <_obstack_memory_used@@Base+0x5d85>
   164e9:	0f af cb             	imul   %ebx,%ecx
   164ec:	ff 45 0f             	incl   0xf(%rbp)
   164ef:	49 c1 e1 0e          	shl    $0xe,%r9
   164f3:	ff                   	(bad)  
   164f4:	e9 b7 ec 4d 39       	jmp    394f51b0 <obstack_alloc_failed_handler@@Base+0x394d3110>
   164f9:	e7 ff                	out    %eax,$0xff
   164fb:	45 0f 85 fc f1 ff ff 	rex.RB jne 156fe <_obstack_memory_used@@Base+0x4f4e>
   16502:	e9 a9 ec ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16507:	83 ff 45             	cmp    $0x45,%edi
   1650a:	48 c1 e9 17          	shr    $0x17,%rcx
   1650e:	ff                   	(bad)  
   1650f:	ff                   	(bad)  
   16510:	e9 9b ec ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16515:	83 ff 45             	cmp    $0x45,%edi
   16518:	0f 85 21 f4 ff 4c    	jne    4d01593f <obstack_alloc_failed_handler@@Base+0x4cff389f>
   1651e:	21 e7                	and    %esp,%edi
   16520:	ec                   	in     (%dx),%al
   16521:	ff                   	(bad)  
   16522:	ff 83 ff 45 0f 85    	incl   -0x7af0ba01(%rbx)
   16528:	46 f4                	rex.RX hlt 
   1652a:	ff                   	(bad)  
   1652b:	ff 48 c1             	decl   -0x3f(%rax)
   1652e:	e3 3e                	jrcxz  1656e <_obstack_memory_used@@Base+0x5dbe>
   16530:	ff 83 ff 45 0f 85    	incl   -0x7af0ba01(%rbx)
   16536:	50                   	push   %rax
   16537:	f1                   	int1   
   16538:	ff                   	(bad)  
   16539:	ff 49 c1             	decl   -0x3f(%rcx)
   1653c:	ec                   	in     (%dx),%al
   1653d:	14 ff                	adc    $0xff,%al
   1653f:	0f 85 fc 01 00 0f    	jne    f016741 <obstack_alloc_failed_handler@@Base+0xeff46a1>
   16545:	8c 7d fc             	mov    %?,-0x4(%rbp)
   16548:	ff                   	(bad)  
   16549:	ff                   	(bad)  
   1654a:	ec                   	in     (%dx),%al
   1654b:	ff                   	(bad)  
   1654c:	ff 83 49 c1 e3 02    	incl   0x2e3c149(%rbx)
   16552:	98                   	cwtl   
   16553:	fc                   	cld    
   16554:	ff 49 48             	decl   0x48(%rcx)
   16557:	4d 01 c7             	add    %r8,%r15
   1655a:	89 e0                	mov    %esp,%eax
   1655c:	d3 45 75             	roll   %cl,0x75(%rbp)
   1655f:	4f                   	rex.WRXB
   16560:	4c 01 da             	add    %r11,%rdx
   16563:	48 09 f0             	or     %rsi,%rax
   16566:	ec                   	in     (%dx),%al
   16567:	ff                   	(bad)  
   16568:	ff 83 49 c7 c2 d2    	incl   -0x2d3d38b7(%rbx)
   1656e:	fe                   	(bad)  
   1656f:	ff                   	(bad)  
   16570:	ff 49 c1             	decl   -0x3f(%rcx)
   16573:	49 c1 ef 25          	shr    $0x25,%r15
   16577:	83 ff 4d             	cmp    $0x4d,%edi
   1657a:	09 cc                	or     %ecx,%esp
   1657c:	46                   	rex.RX
   1657d:	49 c1 e5 3d          	shl    $0x3d,%r13
   16581:	2b ec                	sub    %esp,%ebp
   16583:	ff                   	(bad)  
   16584:	ff 83 ff 45 0f 85    	incl   -0x7af0ba01(%rbx)
   1658a:	61                   	(bad)  
   1658b:	4d 01 c7             	add    %r8,%r15
   1658e:	e9 1d ec ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16593:	83 ff 45             	cmp    $0x45,%edi
   16596:	0f 84 4c fd ff ff    	je     162e8 <_obstack_memory_used@@Base+0x5b38>
   1659c:	e9 0f ec ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   165a1:	48 ff c6             	inc    %rsi
   165a4:	e9 d9 f1 ff ff       	jmp    15782 <_obstack_memory_used@@Base+0x4fd2>
   165a9:	49 83 c1 01          	add    $0x1,%r9
   165ad:	43 0f b6 44 0d 00    	movzbl 0x0(%r13,%r9,1),%eax
   165b3:	4f 0f 8f 46 ff ff ff 	rex.WRXB jg 16500 <_obstack_memory_used@@Base+0x5d50>
   165ba:	e9 19 fc ff ff       	jmp    161d8 <_obstack_memory_used@@Base+0x5a28>
   165bf:	ff                   	(bad)  
   165c0:	eb e7                	jmp    165a9 <_obstack_memory_used@@Base+0x5df9>
   165c2:	66 0f 1f 0f          	nopw   (%rdi)
   165c6:	8f                   	(bad)  
   165c7:	7c fc                	jl     165c5 <_obstack_memory_used@@Base+0x5e15>
   165c9:	ff                   	(bad)  
   165ca:	ff 31                	push   (%rcx)
   165cc:	d2 e9                	shr    %cl,%cl
   165ce:	0e                   	(bad)  
   165cf:	ef                   	out    %eax,(%dx)
   165d0:	ff                   	(bad)  
   165d1:	ff 66 0f             	jmp    *0xf(%rsi)
   165d4:	1f                   	(bad)  
   165d5:	44 00 00             	add    %r8b,(%rax)
   165d8:	48 89 cb             	mov    %rcx,%rbx
   165db:	0f 8c 6d 01 00 00    	jl     1674e <_obstack_memory_used@@Base+0x5f9e>
   165e1:	ff 09                	decl   (%rcx)
   165e3:	d8 1f                	fcomps (%rdi)
   165e5:	44 00 00             	add    %r8b,(%rax)
   165e8:	41                   	rex.B
   165e9:	48 0f af fb          	imul   %rbx,%rdi
   165ed:	00 8d 73 ff 89 f2    	add    %cl,-0xd76008d(%rbp)
   165f3:	44 29 d2             	sub    %r10d,%edx
   165f6:	85 d2                	test   %edx,%edx
   165f8:	7e 66                	jle    16660 <_obstack_memory_used@@Base+0x5eb0>
   165fa:	84 c0                	test   %al,%al
   165fc:	74 62                	je     16660 <_obstack_memory_used@@Base+0x5eb0>
   165fe:	41 83 fb 5f          	cmp    $0x5f,%r11d
   16602:	0f 84 5e 01 00 00    	je     16766 <_obstack_memory_used@@Base+0x5fb6>
   16608:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1660d:	0f af c2             	imul   %edx,%eax
   16610:	48 83 f8 01          	cmp    $0x1,%rax
   16614:	0f 86 49 89 c1 31    	jbe    31c2ef63 <obstack_alloc_failed_handler@@Base+0x31c0cec3>
   1661a:	c0 85 4c 48 31 c9 88 	rolb   $0x88,-0x36ceb7b4(%rbp)
   16621:	7d 00                	jge    16623 <_obstack_memory_used@@Base+0x5e73>
   16623:	0f 84 2f 0f 85 38    	je     38867558 <obstack_alloc_failed_handler@@Base+0x388454b8>
   16629:	03 00                	add    (%rax),%eax
   1662b:	00 63 ca             	add    %ah,-0x36(%rbx)
   1662e:	41 83 fb 2d          	cmp    $0x2d,%r11d
   16632:	74 0f                	je     16643 <_obstack_memory_used@@Base+0x5e93>
   16634:	8c f6                	mov    %?,%esi
   16636:	fe                   	(bad)  
   16637:	ff                   	(bad)  
   16638:	ff 29                	ljmp   *(%rcx)
   1663a:	49 0f af fe          	imul   %r14,%rdi
   1663e:	f5                   	cmc    
   1663f:	ff                   	(bad)  
   16640:	ff 89 f3 e9 62 f5    	decl   -0xa9d160d(%rcx)
   16646:	ff                   	(bad)  
   16647:	ff 0f                	decl   (%rdi)
   16649:	1f                   	(bad)  
   1664a:	84 00                	test   %al,(%rax)
   1664c:	00 00                	add    %al,(%rax)
   1664e:	00 00                	add    %al,(%rax)
   16650:	b8 01 49 85 c3       	mov    $0xc3854901,%eax
   16655:	d1 fd                	sar    %ebp
   16657:	ff                   	(bad)  
   16658:	ff 00                	incl   (%rax)
   1665a:	00 e9                	add    %ch,%cl
   1665c:	18 f5                	sbb    %dh,%ch
   1665e:	ff                   	(bad)  
   1665f:	ff 0f                	decl   (%rdi)
   16661:	85 a5 49 c7 c2 49    	test   %esp,0x49c2c749(%rbp)
   16667:	ff                   	(bad)  
   16668:	ff                   	(bad)  
   16669:	ff e6                	jmp    *%rsi
   1666b:	0d 00 e0 4d 39       	or     $0x394de000,%eax
   16670:	d1 31                	shll   (%rcx)
   16672:	d2 e9                	shr    %cl,%cl
   16674:	3f                   	(bad)  
   16675:	f5                   	cmc    
   16676:	ff                   	(bad)  
   16677:	ff 49 c1             	decl   -0x3f(%rcx)
   1667a:	ec                   	in     (%dx),%al
   1667b:	12 48 c7             	adc    -0x39(%rax),%cl
   1667e:	c7                   	(bad)  
   1667f:	dc ff                	fdivr  %st,%st(7)
   16681:	0f 8c df fe ff ff    	jl     16566 <_obstack_memory_used@@Base+0x5db6>
   16687:	c5 e3 fe             	(bad)
   1668a:	ff 48 8b             	decl   -0x75(%rax)
   1668d:	4c 24 48             	rex.WR and $0x48,%al
   16690:	f7 fb                	idiv   %ebx
   16692:	eb ff                	jmp    16693 <_obstack_memory_used@@Base+0x5ee3>
   16694:	ff 48 89             	decl   -0x77(%rax)
   16697:	ca 4c 89             	lret   $0x894c
   1669a:	fe 48 89             	decb   -0x77(%rax)
   1669d:	ef                   	out    %eax,(%dx)
   1669e:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   166a3:	e8 a8 e3 fe ff       	call   4a50 <memcpy@plt>
   166a8:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   166ad:	e9 49 29 f6 8a       	jmp    ffffffff8af78ffb <obstack_alloc_failed_handler@@Base+0xffffffff8af56f5b>
   166b2:	0f 84 8e 01 00 00    	je     16846 <_obstack_memory_used@@Base+0x6096>
   166b8:	ff                   	(bad)  
   166b9:	ff c6                	inc    %esi
   166bb:	44 24 40             	rex.R and $0x40,%al
   166be:	01 e9                	add    %ebp,%ecx
   166c0:	33 ea                	xor    %edx,%ebp
   166c2:	ff                   	(bad)  
   166c3:	ff 48 8d             	decl   -0x73(%rax)
   166c6:	b4 0f                	mov    $0xf,%ah
   166c8:	8c db                	mov    %ds,%ebx
   166ca:	03 00                	add    (%rax),%eax
   166cc:	00 89 49 4d 09 d4    	add    %cl,-0x2bf6b2b7(%rcx)
   166d2:	e8 49 ff c3 89       	call   ffffffff89c56620 <obstack_alloc_failed_handler@@Base+0xffffffff89c34580>
   166d7:	d4                   	(bad)  
   166d8:	aa                   	stos   %al,%es:(%rdi)
   166d9:	ee                   	out    %al,(%dx)
   166da:	ff                   	(bad)  
   166db:	ff 4c 8d 69          	decl   0x69(%rbp,%rcx,4)
   166df:	4d 0f af d2          	imul   %r10,%r10
   166e3:	0f 84 9d ee e9 48    	je     48eb5586 <obstack_alloc_failed_handler@@Base+0x48e934e6>
   166e9:	fd                   	std    
   166ea:	ff                   	(bad)  
   166eb:	ff 09                	decl   (%rcx)
   166ed:	df 49 c1             	fisttps -0x3f(%rcx)
   166f0:	e0 36                	loopne 16728 <_obstack_memory_used@@Base+0x5f78>
   166f2:	01 01                	add    %eax,(%rcx)
   166f4:	00 00                	add    %al,(%rax)
   166f6:	66 2e 4c 89 e3       	data16 cs mov %r12,%rbx
   166fb:	00 49 ff             	add    %cl,-0x1(%rcx)
   166fe:	c6 00 42             	movb   $0x42,(%rax)
   16701:	0f b6 0c 2e          	movzbl (%rsi,%rbp,1),%ecx
   16705:	48 8b 10             	mov    (%rax),%rdx
   16708:	8b 14 8a             	mov    (%rdx,%rcx,4),%edx
   1670b:	42 88 54 2d 00       	mov    %dl,0x0(%rbp,%r13,1)
   16710:	49 83 ed 01          	sub    $0x1,%r13
   16714:	73 ea                	jae    16700 <_obstack_memory_used@@Base+0x5f50>
   16716:	e9 6b ee ff ff       	jmp    15586 <_obstack_memory_used@@Base+0x4dd6>
   1671b:	4d 89 ea             	mov    %r13,%r10
   1671e:	31 d2                	xor    %edx,%edx
   16720:	e9 b9 f6 ff ff       	jmp    15dde <_obstack_memory_used@@Base+0x562e>
   16725:	41 bf 2b 00 00 0f    	mov    $0xf00002b,%r15d
   1672b:	85 a2 fd ff ff 48    	test   %esp,0x48fffffd(%rdx)
   16731:	48 09 c9             	or     %rcx,%rcx
   16734:	0f 8f e5 fd 48 c1    	jg     ffffffffc14a651f <obstack_alloc_failed_handler@@Base+0xffffffffc148447f>
   1673a:	e0 36                	loopne 16772 <_obstack_memory_used@@Base+0x5fc2>
   1673c:	ff                   	(bad)  
   1673d:	ff                   	(bad)  
   1673e:	ff 6c 49 c1          	ljmp   *-0x3f(%rcx,%rcx,2)
   16742:	ea                   	(bad)  
   16743:	48 f7 f9             	idiv   %rcx
   16746:	0f 8c af 02 00 00    	jl     169fb <_obstack_memory_used@@Base+0x624b>
   1674c:	48                   	rex.W
   1674d:	4d 0f af db          	imul   %r11,%r11
   16751:	00 00                	add    %al,(%rax)
   16753:	00 4c 4c 31          	add    %cl,0x31(%rsp,%rcx,2)
   16757:	e2 04                	loop   1675d <_obstack_memory_used@@Base+0x5fad>
   16759:	e2 fe                	loop   16759 <_obstack_memory_used@@Base+0x5fa9>
   1675b:	ff 48 8b             	decl   -0x75(%rax)
   1675e:	4c 24 30             	rex.WR and $0x30,%al
   16761:	e9 a6 f4 ff ff       	jmp    15c0c <_obstack_memory_used@@Base+0x545c>
   16766:	89 d9                	mov    %ebx,%ecx
   16768:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1676d:	29 49 ff             	sub    %ecx,-0x1(%rcx)
   16770:	c6                   	(bad)  
   16771:	0f 84 92 00 00 4c    	je     4c016809 <obstack_alloc_failed_handler@@Base+0x4bff4769>
   16777:	0f af f3             	imul   %ebx,%esi
   1677a:	ed                   	in     (%dx),%eax
   1677b:	74 d0                	je     1674d <_obstack_memory_used@@Base+0x5f9d>
   1677d:	9f                   	lahf   
   1677e:	00 00                	add    %al,(%rax)
   16780:	00 48 89             	add    %cl,-0x77(%rax)
   16783:	4d 09 c5             	or     %r8,%r13
   16786:	00 00                	add    %al,(%rax)
   16788:	00 48 89             	add    %cl,-0x77(%rax)
   1678b:	54                   	push   %rsp
   1678c:	24 0f                	and    $0xf,%al
   1678e:	85 49 09             	test   %ecx,0x9(%rcx)
   16791:	cd 00                	int    $0x0
   16793:	89 4c 49 48          	mov    %ecx,0x48(%rcx,%rcx,2)
   16797:	29 cf                	sub    %ecx,%edi
   16799:	02 00                	add    (%rax),%al
   1679b:	00 e9                	add    %ch,%cl
   1679d:	17                   	(bad)  
   1679e:	fc                   	cld    
   1679f:	ff                   	(bad)  
   167a0:	ff c1                	inc    %ecx
   167a2:	ed                   	in     (%dx),%eax
   167a3:	25 24 30 48 0f       	and    $0xf483024,%eax
   167a8:	8f e8 01 00          	(bad)
   167ac:	00 0f                	add    %cl,(%rdi)
   167ae:	86 c5                	xchg   %al,%ch
   167b0:	e8 0f 85 49 c7       	call   ffffffffc74aecc4 <obstack_alloc_failed_handler@@Base+0xffffffffc748cc24>
   167b5:	c1 24 00 00          	shll   $0x0,(%rax,%rax,1)
   167b9:	00 48 49             	add    %cl,0x49(%rax)
   167bc:	31 f2                	xor    %esi,%edx
   167be:	54                   	push   %rsp
   167bf:	4d 01 c1             	add    %r8,%r9
   167c2:	71 ff                	jno    167c3 <_obstack_memory_used@@Base+0x6013>
   167c4:	e9 56 fe 49 c7       	jmp    ffffffffc74b661f <obstack_alloc_failed_handler@@Base+0xffffffffc749457f>
   167c9:	c4                   	(bad)  
   167ca:	c8 fe ff ff          	enter  $0xfffe,$0xff
   167ce:	00 00                	add    %al,(%rax)
   167d0:	00 4c 89 ed          	add    %cl,-0x13(%rcx,%rcx,4)
   167d4:	e8 87 e1 fe ff       	call   4960 <memset@plt>
   167d9:	48 8b 4c 4d 31       	mov    0x31(%rbp,%rcx,2),%rcx
   167de:	c8 5d ea ff          	enter  $0xea5d,$0xff
   167e2:	ff 49 83             	decl   -0x7d(%rcx)
   167e5:	f9                   	stc    
   167e6:	03 0f                	add    (%rdi),%ecx
   167e8:	85 2f                	test   %ebp,(%rdi)
   167ea:	4d                   	rex.WRB
   167eb:	4d 39 fa             	cmp    %r15,%r10
   167ee:	85 4c 09 f6          	test   %ecx,-0xa(%rcx,%rcx,1)
   167f2:	b2 03                	mov    $0x3,%dl
   167f4:	00 00                	add    %al,(%rax)
   167f6:	85 c9                	test   %ecx,%ecx
   167f8:	0f 85 4d 29 d0 ff    	jne    ffffffffffd1914b <obstack_alloc_failed_handler@@Base+0xffffffffffcf70ab>
   167fe:	44 89 f8             	mov    %r15d,%eax
   16801:	c6 44 24 48 01       	movb   $0x1,0x48(%rsp)
   16806:	44 89 d2             	mov    %r10d,%edx
   16809:	48 31 f8             	xor    %rdi,%rax
   1680c:	30 4d 39             	xor    %cl,0x39(%rbp)
   1680f:	f7 26                	mull   (%rsi)
   16811:	83 f0 01             	xor    $0x1,%eax
   16814:	e9 37 ec ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   16819:	0f 1f 80 00 00 74 0f 	nopl   0xf740000(%rax)
   16820:	84 2d fd ff ff 86    	test   %ch,-0x79000003(%rip)        # ffffffff87016823 <obstack_alloc_failed_handler@@Base+0xffffffff86ff4783>
   16826:	4e                   	rex.WRX
   16827:	4c 85 f6             	test   %r14,%rsi
   1682a:	8d 71 ff             	lea    -0x1(%rcx),%esi
   1682d:	4d 09 c4             	or     %r8,%r12
   16830:	f7 0f 8f 3d fc ff    	testl  $0xfffc3d8f,(%rdi)
   16836:	ff                   	(bad)  
   16837:	ff                   	(bad)  
   16838:	ff 48 89             	decl   -0x77(%rax)
   1683b:	4c 21 e2             	and    %r12,%rdx
   1683e:	00 00                	add    %al,(%rax)
   16840:	00 e8                	add    %ch,%al
   16842:	1a e1                	sbb    %cl,%ah
   16844:	fe                   	(bad)  
   16845:	ff 48 8b             	decl   -0x75(%rax)
   16848:	6c                   	insb   (%dx),%es:(%rdi)
   16849:	24 40                	and    $0x40,%al
   1684b:	44 8b 44 24 48       	mov    0x48(%rsp),%r8d
   16850:	44 8b 5c 24 54       	mov    0x54(%rsp),%r11d
   16855:	4c 8b 54 24 58       	mov    0x58(%rsp),%r10
   1685a:	e9 ef f5 ff ff       	jmp    15e4e <_obstack_memory_used@@Base+0x569e>
   1685f:	48 83 f8 01          	cmp    $0x1,%rax
   16863:	4c 85 e6             	test   %r12,%rsi
   16866:	e8 ff ff 41 bd       	call   ffffffffbd43686a <obstack_alloc_failed_handler@@Base+0xffffffffbd4147ca>
   1686b:	01 00                	add    %eax,(%rax)
   1686d:	00 00                	add    %al,(%rax)
   1686f:	48 85 ed             	test   %rbp,%rbp
   16872:	0f 85 c8 fd ff ff    	jne    16640 <_obstack_memory_used@@Base+0x5e90>
   16878:	e9 00 ee ff ff       	jmp    1567d <_obstack_memory_used@@Base+0x4ecd>
   1687d:	48 83 49 4c 31       	orq    $0x31,0x4c(%rcx)
   16882:	cb                   	lret   
   16883:	93                   	xchg   %eax,%ebx
   16884:	4d 29 fe             	sub    %r15,%r14
   16887:	41 bd 01 49 c7 c6    	mov    $0xc6c74901,%r13d
   1688d:	b2 02                	mov    $0x2,%dl
   1688f:	00 00                	add    %al,(%rax)
   16891:	e9 3a fd ff ff       	jmp    165d0 <_obstack_memory_used@@Base+0x5e20>
   16896:	21 fa                	and    %edi,%edx
   16898:	ed                   	in     (%dx),%eax
   16899:	ff                   	(bad)  
   1689a:	ff 4d 85             	decl   -0x7b(%rbp)
   1689d:	e4 24                	in     $0x24,%al
   1689f:	30 31                	xor    %dh,(%rcx)
   168a1:	db e9                	fucomi %st(1),%st
   168a3:	fc                   	cld    
   168a4:	f3 ff                	repz (bad) 
   168a6:	ff 41 bf             	incl   -0x41(%rcx)
   168a9:	01 00                	add    %eax,(%rax)
   168ab:	49 ff c5             	inc    %r13
   168ae:	01 00                	add    %eax,(%rax)
   168b0:	00 00                	add    %al,(%rax)
   168b2:	e9 e1 f6 ff ff       	jmp    15f98 <_obstack_memory_used@@Base+0x57e8>
   168b7:	48 83 f9 4d          	cmp    $0x4d,%rcx
   168bb:	85 de                	test   %ebx,%esi
   168bd:	b7 e7                	mov    $0xe7,%bh
   168bf:	ff                   	(bad)  
   168c0:	ff 41 bd             	incl   -0x43(%rcx)
   168c3:	01 00                	add    %eax,(%rax)
   168c5:	00 00                	add    %al,(%rax)
   168c7:	4d 29 c9             	sub    %r9,%r9
   168ca:	0f 85 32 fb ff ff    	jne    16402 <_obstack_memory_used@@Base+0x5c52>
   168d0:	e9 48 0f af da       	jmp    ffffffffdab0781d <obstack_alloc_failed_handler@@Base+0xffffffffdaae577d>
   168d5:	c7 44 24 30 04 00 00 	movl   $0x48000004,0x30(%rsp)
   168dc:	48 
   168dd:	85 c9                	test   %ecx,%ecx
   168df:	27                   	(bad)  
   168e0:	00 00                	add    %al,(%rax)
   168e2:	41 83 fb 2b          	cmp    $0x2b,%r11d
   168e6:	0f 85 02 05 00 00    	jne    16dee <_obstack_memory_used@@Base+0x663e>
   168ec:	39 d0                	cmp    %edx,%eax
   168ee:	73 26                	jae    16916 <_obstack_memory_used@@Base+0x6166>
   168f0:	44 89 f8             	mov    %r15d,%eax
   168f3:	48 89 f9             	mov    %rdi,%rcx
   168f6:	48                   	rex.W
   168f7:	49 c1 ee 0e          	shr    $0xe,%r14
   168fb:	00 00                	add    %al,(%rax)
   168fd:	00 83 f0 01 e9 44    	add    %al,0x44e901f0(%rbx)
   16903:	eb ff                	jmp    16904 <_obstack_memory_used@@Base+0x6154>
   16905:	ff 49 c7             	decl   -0x39(%rcx)
   16908:	c6                   	(bad)  
   16909:	af                   	scas   %es:(%rdi),%eax
   1690a:	01 00                	add    %eax,(%rax)
   1690c:	00 00                	add    %al,(%rax)
   1690e:	be 79 4d 09 e8       	mov    $0xe8094d79,%esi
   16913:	45 31 ff             	xor    %r15d,%r15d
   16916:	3b 5c 24 30          	cmp    0x30(%rsp),%ebx
   1691a:	44 89 4d 0f          	mov    %r9d,0xf(%rbp)
   1691e:	af                   	scas   %es:(%rdi),%eax
   1691f:	d2 00                	rolb   %cl,(%rax)
   16921:	00 0f                	add    %cl,(%rdi)
   16923:	84 7b 01             	test   %bh,0x1(%rbx)
   16926:	00 00                	add    %al,(%rax)
   16928:	83 4d 39 db          	orl    $0xffffffdb,0x39(%rbp)
   1692c:	0f 8f 5a 02 00 00    	jg     16b8c <_obstack_memory_used@@Base+0x63dc>
   16932:	48 89 d9             	mov    %rbx,%rcx
   16935:	48 01 d7             	add    %rdx,%rdi
   16938:	00 41 f6             	add    %al,-0xa(%rcx)
   1693b:	c1 0f 84             	rorl   $0x84,(%rdi)
   1693e:	7e fe                	jle    1693e <_obstack_memory_used@@Base+0x618e>
   16940:	ff                   	(bad)  
   16941:	ff 29                	ljmp   *(%rcx)
   16943:	5c                   	pop    %rsp
   16944:	8f c2                	pop    %rdx
   16946:	b8 6e 01 00 00       	mov    $0x16e,%eax
   1694b:	81 0f 84 0f 8c c8    	orl    $0xc88c0f84,(%rdi)
   16951:	02 00                	add    (%rax),%al
   16953:	00 81 fa 28 5c 8f    	add    %al,-0x70a3d706(%rcx)
   16959:	02 77 16             	add    0x16(%rdi),%dh
   1695c:	44 89 4c 01 f3       	mov    %r9d,-0xd(%rcx,%rax,1)
   16961:	90                   	nop
   16962:	01 00                	add    %eax,(%rax)
   16964:	4d 21 c4             	and    %r8,%r12
   16967:	f7 f8                	idiv   %eax
   16969:	f7 da                	neg    %edx
   1696b:	19 48 f7             	sbb    %ecx,-0x9(%rax)
   1696e:	f8                   	clc    
   1696f:	01 00                	add    %eax,(%rax)
   16971:	00 44 01 d0          	add    %al,-0x30(%rcx,%rax,1)
   16975:	41                   	rex.B
   16976:	4c 01 fb             	add    %r15,%rbx
   16979:	29 f0                	sub    %esi,%eax
   1697b:	41 81 c0 7e 01 49 c1 	add    $0xc149017e,%r8d
   16982:	e7 03                	out    %eax,$0x3
   16984:	c7 45 89 c1 44 29 c0 	movl   $0xc02944c1,-0x77(%rbp)
   1698b:	48 69 d2 93 24 49 92 	imul   $0xffffffff92492493,%rdx,%rdx
   16992:	41 c1 f9 1f          	sar    $0x1f,%r9d
   16996:	48 c1 ea 20          	shr    $0x20,%rdx
   1699a:	44 01 c2             	add    %r8d,%edx
   1699d:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   169a3:	c1 fa 0f             	sar    $0xf,%edx
   169a6:	7f e2                	jg     1698a <_obstack_memory_used@@Base+0x61da>
   169a8:	01 00                	add    %eax,(%rax)
   169aa:	00 0c d5 00 00 49 89 	add    %cl,-0x76b70000(,%rdx,8)
   169b1:	f2 0f 8c b1 fd ff ff 	bnd jl 16769 <_obstack_memory_used@@Base+0x5fb9>
   169b8:	03 e9                	add    %ecx,%ebp
   169ba:	07                   	(bad)  
   169bb:	ea                   	(bad)  
   169bc:	48 c1 e8 28          	shr    $0x28,%rax
   169c0:	fb                   	sti    
   169c1:	2b 0f                	sub    (%rdi),%ecx
   169c3:	85 48 85             	test   %ecx,-0x7b(%rax)
   169c6:	f8                   	clc    
   169c7:	21 c7                	and    %eax,%edi
   169c9:	44                   	rex.R
   169ca:	4d 29 fa             	sub    %r15,%r10
   169cd:	00 00                	add    %al,(%rax)
   169cf:	00 be 43 00 00 00    	add    %bh,0x43(%rsi)
   169d5:	4c 89 e6             	mov    %r12,%rsi
   169d8:	00 00                	add    %al,(%rax)
   169da:	e9 cc fe ff ff       	jmp    168ab <_obstack_memory_used@@Base+0x60fb>
   169df:	c2 94 f8             	ret    $0xf894
   169e2:	ff                   	(bad)  
   169e3:	ff 42 8d             	incl   -0x73(%rdx)
   169e6:	94                   	xchg   %eax,%esp
   169e7:	01 74 43 00          	add    %esi,0x0(%rbx,%rax,2)
   169eb:	0f 49 89 c9 4d 01 d3 	cmovns -0x2cfeb237(%rcx),%ecx
   169f2:	39 c1                	cmp    %eax,%ecx
   169f4:	4c 01 e6             	add    %r12,%rsi
   169f7:	c8 45 85 db          	enter  $0x8545,$0xdb
   169fb:	0f                   	(bad)  
   169fc:	0f 85 f0 00 00 00    	jne    16af2 <_obstack_memory_used@@Base+0x6342>
   16a02:	8b 5c 24 24          	mov    0x24(%rsp),%ebx
   16a06:	41 83 fb 2b          	cmp    $0x2b,%r11d
   16a0a:	0f 84 ee 03 00 00    	je     16dfe <_obstack_memory_used@@Base+0x664e>
   16a10:	39 c1                	cmp    %eax,%ecx
   16a12:	eb e4                	jmp    169f8 <_obstack_memory_used@@Base+0x6248>
   16a14:	24 48                	and    $0x48,%al
   16a16:	00 4d 89             	add    %cl,-0x77(%rbp)
   16a19:	ee                   	out    %al,(%dx)
   16a1a:	4d 85 fe             	test   %r15,%r14
   16a1d:	30 04 00             	xor    %al,(%rax,%rax,1)
   16a20:	48 ff c1             	inc    %rcx
   16a23:	9d                   	popf   
   16a24:	c0 e9 20             	shr    $0x20,%cl
   16a27:	ea                   	(bad)  
   16a28:	ff                   	(bad)  
   16a29:	ff 48 63             	decl   0x63(%rax)
   16a2c:	d0 0f                	rorb   (%rdi)
   16a2e:	8c a5 fd ff ff 00    	mov    %fs,0xfffffd(%rbp)
   16a34:	00 4d 89             	add    %cl,-0x77(%rbp)
   16a37:	ee                   	out    %al,(%dx)
   16a38:	48                   	rex.W
   16a39:	49 89 c8             	mov    %rcx,%r8
   16a3c:	fa                   	cli    
   16a3d:	c7 c0 1b 00 4c 21    	mov    $0x214c001b,%eax
   16a43:	e6 fb                	out    %al,$0xfb
   16a45:	0f 8c 4c 01 d0 ff    	jl     ffffffffffd16b97 <obstack_alloc_failed_handler@@Base+0xffffffffffcf4af7>
   16a4b:	49 0f af df          	imul   %r15,%rbx
   16a4f:	f7 fb                	idiv   %ebx
   16a51:	4d 0f 85 3a fd ff ff 	rex.WRB jne 16792 <_obstack_memory_used@@Base+0x5fe2>
   16a58:	24 c0                	and    $0xc0,%al
   16a5a:	00 00                	add    %al,(%rax)
   16a5c:	00 48 8d             	add    %cl,-0x73(%rax)
   16a5f:	7c 24                	jl     16a85 <_obstack_memory_used@@Base+0x62d5>
   16a61:	4d 0f af ed          	imul   %r13,%r13
   16a65:	24 30                	and    $0x30,%al
   16a67:	e8 c4 dc fe ff       	call   4730 <localtime_r@plt>
   16a6c:	4c 85 0f             	test   %r9,(%rdi)
   16a6f:	85 b5 fd ff ff e9    	test   %esi,-0x16000003(%rbp)
   16a75:	cb                   	lret   
   16a76:	00 00                	add    %al,(%rax)
   16a78:	00 ff                	add    %bh,%bh
   16a7a:	8b 84 24 49 f7 f8 00 	mov    0xf8f749(%rsp),%eax
   16a81:	e9 80 49 c1 ed       	jmp    ffffffffedc2b406 <obstack_alloc_failed_handler@@Base+0xffffffffedc09366>
   16a86:	33 00                	xor    (%rax),%eax
   16a88:	8b 8c 24 e0 00 49 f7 	mov    -0x8b6ff20(%rsp),%ecx
   16a8f:	fb                   	sti    
   16a90:	bc 24 80 00 00       	mov    $0x8024,%esp
   16a95:	00 89 44 24 30 8b    	add    %cl,-0x74cfdbbc(%rcx)
   16a9b:	84 24 c4             	test   %ah,(%rsp,%rax,8)
   16a9e:	4d                   	rex.WRB
   16a9f:	49 c1 e2 2d          	shl    $0x2d,%r10
   16aa3:	0f 4d 29             	cmovge (%rcx),%ebp
   16aa6:	e2 8f                	loop   16a37 <_obstack_memory_used@@Base+0x6287>
   16aa8:	0f 8f 0c 01 00 00    	jg     16bba <_obstack_memory_used@@Base+0x640a>
   16aae:	dd 0f                	fisttpll (%rdi)
   16ab0:	84 4d fd             	test   %cl,-0x3(%rbp)
   16ab3:	ff                   	(bad)  
   16ab4:	ff 4d 89             	decl   -0x77(%rbp)
   16ab7:	f5                   	cmc    
   16ab8:	00 89 44 24 48 8b    	add    %cl,-0x74b7dbbc(%rcx)
   16abe:	84 24 48             	test   %ah,(%rax,%rcx,2)
   16ac1:	c7 c1 4d 01 d0 4c    	mov    $0x4cd0014d,%ecx
   16ac7:	0f 49 ff             	cmovns %edi,%edi
   16aca:	c0 8c 24 4c 09 d2 00 	rorb   $0x4d,0xd2094c(%rsp)
   16ad1:	4d 
   16ad2:	49 c7 c0 53 01 00 00 	mov    $0x153,%r8
   16ad9:	89 44 24 49          	mov    %eax,0x49(%rsp)
   16add:	f7 fb                	idiv   %ebx
   16adf:	24 c8                	and    $0xc8,%al
   16ae1:	00 00                	add    %al,(%rax)
   16ae3:	00 89 44 49 f7 49    	add    %cl,0x49f74944(%rcx)
   16ae9:	31 db                	xor    %ebx,%ebx
   16aeb:	8c 00                	mov    %es,(%rax)
   16aed:	00 00                	add    %al,(%rax)
   16aef:	89 0f                	mov    %ecx,(%rdi)
   16af1:	85 7a fc             	test   %edi,-0x4(%rdx)
   16af4:	ff                   	(bad)  
   16af5:	ff cc                	dec    %esp
   16af7:	00 00                	add    %al,(%rax)
   16af9:	00 89 44 24 64 48    	add    %cl,0x48642444(%rcx)
   16aff:	ff c6                	inc    %esi
   16b01:	90                   	nop
   16b02:	00 00                	add    %al,(%rax)
   16b04:	00 89 44 24 4d 39    	add    %cl,0x394d2444(%rcx)
   16b0a:	d8 ec                	fsubr  %st(4),%st
   16b0c:	08 6f 38             	or     %ch,0x38(%rdi)
   16b0f:	48 ff c7             	inc    %rdi
   16b12:	74 08                	je     16b1c <_obstack_memory_used@@Base+0x636c>
   16b14:	48 c1 e7 32          	shl    $0x32,%rdi
   16b18:	ac                   	lods   %ds:(%rsi),%al
   16b19:	ef                   	out    %eax,(%dx)
   16b1a:	ff                   	(bad)  
   16b1b:	ff 8b 44 24 68 45    	decl   0x45682444(%rbx)
   16b21:	31 d1                	xor    %edx,%ecx
   16b23:	8b 54 24 60          	mov    0x60(%rsp),%edx
   16b27:	4d 85 fa             	test   %r15,%r10
   16b2a:	54                   	push   %rsp
   16b2b:	24 64                	and    $0x64,%al
   16b2d:	44 31 c0             	xor    %r8d,%eax
   16b30:	44 09 c8             	or     %r9d,%eax
   16b33:	09 d0                	or     %edx,%eax
   16b35:	8b 54 24 54          	mov    0x54(%rsp),%edx
   16b39:	33 54 24 58          	xor    0x58(%rsp),%edx
   16b3d:	09 d0                	or     %edx,%eax
   16b3f:	48 c7 c2 8a 00 00 00 	mov    $0x8a,%rdx
   16b46:	48 e9 49 ff c1 c7    	rex.W jmp ffffffffc7c36a95 <obstack_alloc_failed_handler@@Base+0xffffffffc7c149f5>
   16b4c:	c7                   	(bad)  
   16b4d:	6a fd                	push   $0xfffffffffffffffd
   16b4f:	ff                   	(bad)  
   16b50:	ff 00                	incl   (%rax)
   16b52:	72 ef                	jb     16b43 <_obstack_memory_used@@Base+0x6393>
   16b54:	ff                   	(bad)  
   16b55:	ff 48 8d             	decl   -0x73(%rax)
   16b58:	bc 24 00 01 00       	mov    $0x10024,%esp
   16b5d:	00 49 83             	add    %cl,-0x7d(%rcx)
   16b60:	0f 85 8a fe ff ff    	jne    169f0 <_obstack_memory_used@@Base+0x6240>
   16b66:	00 00                	add    %al,(%rax)
   16b68:	41 f6 c7 04          	test   $0x4,%r15b
   16b6c:	0f 85 c0 02 00 00    	jne    16e32 <_obstack_memory_used@@Base+0x6682>
   16b72:	4d 85 ff             	test   %r15,%r15
   16b75:	0f 84 d6 f4 4d 0f    	je     f4f6051 <obstack_alloc_failed_handler@@Base+0xf4d3fb1>
   16b7b:	af                   	scas   %es:(%rdi),%eax
   16b7c:	c7 84 24 00 01 00 00 	movl   $0x4d004588,0x100(%rsp)
   16b83:	88 45 00 4d 
   16b87:	39 ea                	cmp    %ebp,%edx
   16b89:	02 0f                	add    (%rdi),%cl
   16b8b:	84 0f                	test   %cl,(%rdi)
   16b8d:	8c 26                	mov    %fs,(%rsi)
   16b8f:	03 00                	add    (%rax),%eax
   16b91:	00 48 c7             	add    %cl,-0x39(%rax)
   16b94:	0f 8f 4c 39 d1 00    	jg     d2a4e6 <obstack_alloc_failed_handler@@Base+0xd08446>
   16b9a:	8f 87 e9 09 01 4c    	pop    0x4c0109e9(%rdi)
   16ba0:	21 c6                	and    %eax,%esi
   16ba2:	ff                   	(bad)  
   16ba3:	ff 48 39             	decl   0x39(%rax)
   16ba6:	fa                   	cli    
   16ba7:	00 6b e9             	add    %ch,-0x17(%rbx)
   16baa:	d3 fe                	sar    %cl,%esi
   16bac:	ff                   	(bad)  
   16bad:	ff c6                	inc    %esi
   16baf:	49                   	rex.WB
   16bb0:	4c 85 df             	test   %r11,%rdi
   16bb3:	89 ea                	mov    %ebp,%edx
   16bb5:	fd                   	std    
   16bb6:	10 27                	adc    %ah,(%rdi)
   16bb8:	49 c1 e5 1f          	shl    $0x1f,%r13
   16bbc:	24 30                	and    $0x30,%al
   16bbe:	09 00                	or     %eax,(%rax)
   16bc0:	00 e9                	add    %ch,%cl
   16bc2:	1e                   	(bad)  
   16bc3:	03 00                	add    (%rax),%eax
   16bc5:	00 ca                	add    %cl,%dl
   16bc7:	b9 14 00 00 00       	mov    $0x14,%ecx
   16bcc:	44 01 c2             	add    %r8d,%edx
   16bcf:	e9 7c e8 ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   16bd4:	48 8b 74 24 0f       	mov    0xf(%rsp),%rsi
   16bd9:	84 cb                	test   %cl,%bl
   16bdb:	03 00                	add    (%rax),%eax
   16bdd:	00 ef                	add    %ch,%bh
   16bdf:	e8 6c 4c 01 f6       	call   fffffffff602b850 <obstack_alloc_failed_handler@@Base+0xfffffffff60097b0>
   16be4:	e9 44 f1 e9 ea       	jmp    ffffffffeaeb5d2d <obstack_alloc_failed_handler@@Base+0xffffffffeae93c8d>
   16be9:	fc                   	cld    
   16bea:	ff                   	(bad)  
   16beb:	ff                   	(bad)  
   16bec:	ff 4d 85             	decl   -0x7b(%rbp)
   16bef:	49 ff c7             	inc    %r15
   16bf2:	00 00                	add    %al,(%rax)
   16bf4:	00 e2                	add    %ah,%dl
   16bf6:	3d c5 e0 fe ff       	cmp    $0xfffee0c5,%eax
   16bfb:	48                   	rex.W
   16bfc:	4c 29 e1             	sub    %r12,%rcx
   16bff:	28 48 89             	sub    %cl,-0x77(%rax)
   16c02:	c6                   	(bad)  
   16c03:	0f b6 14 19          	movzbl (%rcx,%rbx,1),%edx
   16c07:	48 0f 4c 09          	cmovl  (%rcx),%rcx
   16c0b:	d6                   	(bad)  
   16c0c:	00 00                	add    %al,(%rax)
   16c0e:	00 1d 00 e9 bf 00    	add    %bl,0xbfe900(%rip)        # c15514 <obstack_alloc_failed_handler@@Base+0xbf3474>
   16c14:	00 00                	add    %al,(%rax)
   16c16:	ec                   	in     (%dx),%al
   16c17:	e9 11 f1 49 c1       	jmp    ffffffffc14b5d2d <obstack_alloc_failed_handler@@Base+0xffffffffc1493c8d>
   16c1c:	e0 48                	loopne 16c66 <_obstack_memory_used@@Base+0x64b6>
   16c1e:	39 d2                	cmp    %edx,%edx
   16c20:	4d 89 f7             	mov    %r14,%r15
   16c23:	48 e9 1c fe 4d 21    	rex.W jmp 214f6a45 <obstack_alloc_failed_handler@@Base+0x214d49a5>
   16c29:	f1                   	int1   
   16c2a:	ef                   	out    %eax,(%dx)
   16c2b:	be 30 00 00 0f       	mov    $0xf000030,%esi
   16c30:	85 0d fd ff ff dd    	test   %ecx,-0x22000003(%rip)        # ffffffffde016c33 <obstack_alloc_failed_handler@@Base+0xffffffffddff4b93>
   16c36:	fe 4d 01             	decb   0x1(%rbp)
   16c39:	fc                   	cld    
   16c3a:	ec                   	in     (%dx),%al
   16c3b:	ff                   	(bad)  
   16c3c:	ff 41 6b             	incl   0x6b(%rcx)
   16c3f:	d2 64 44 89          	shlb   %cl,-0x77(%rsp,%rax,2)
   16c43:	f8                   	clc    
   16c44:	4c 01 e6             	add    %r12,%rsi
   16c47:	0f 8c d3 02 00 00    	jl     16f20 <_obstack_memory_used@@Base+0x6770>
   16c4d:	05 00 00 48 ff       	add    $0xff480000,%eax
   16c52:	c2 4d 89             	ret    $0x894d
   16c55:	48 09 db             	or     %rbx,%rbx
   16c58:	e9 f3 49 c7 c5       	jmp    ffffffffc5c8b650 <obstack_alloc_failed_handler@@Base+0xffffffffc5c695b0>
   16c5d:	37                   	(bad)  
   16c5e:	02 00                	add    (%rax),%al
   16c60:	00 29                	add    %ch,(%rcx)
   16c62:	dd 00                	fldl   (%rax)
   16c64:	00 e8                	add    %ch,%al
   16c66:	f6 de                	neg    %dh
   16c68:	fe                   	(bad)  
   16c69:	ff 44 8b 5c          	incl   0x5c(%rbx,%rcx,4)
   16c6d:	24 30                	and    $0x30,%al
   16c6f:	48 89 c1             	mov    %rax,%rcx
   16c72:	e9 76 ee ff ff       	jmp    15aed <_obstack_memory_used@@Base+0x533d>
   16c77:	48 89 ef             	mov    %rbp,%rdi
   16c7a:	be 30 4c 85 f0       	mov    $0xf0854c30,%esi
   16c7f:	48 89 dd             	mov    %rbx,%rbp
   16c82:	e8 d9 48 ff c1       	call   ffffffffc200b560 <obstack_alloc_failed_handler@@Base+0xffffffffc1fe94c0>
   16c87:	ca e9 e9             	lret   $0xe9e9
   16c8a:	ff 4c 21 c3          	decl   -0x3d(%rcx,%riz,1)
   16c8e:	ef                   	out    %eax,(%dx)
   16c8f:	be 49 c7 c0 be       	mov    $0xbec0c749,%esi
   16c94:	fe                   	(bad)  
   16c95:	ff                   	(bad)  
   16c96:	ff                   	(bad)  
   16c97:	e8 c4 4c 0f af       	call   ffffffffaf10b960 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e98c0>
   16c9c:	e6 4c                	out    %al,$0x4c
   16c9e:	21 ee                	and    %ebp,%esi
   16ca0:	09 d9                	or     %ebx,%ecx
   16ca2:	89 ef                	mov    %ebp,%edi
   16ca4:	be 30 00 00 48       	mov    $0x48000030,%esi
   16ca9:	f7 f9                	idiv   %ecx
   16cab:	dd e8                	fucomp %st(0)
   16cad:	af                   	scas   %es:(%rdi),%eax
   16cae:	dc 48 01             	fmull  0x1(%rax)
   16cb1:	c1 0f 49             	rorl   $0x49,(%rdi)
   16cb4:	c1 eb 37             	shr    $0x37,%ebx
   16cb7:	4c 85 4d 85          	test   %r9,-0x7b(%rbp)
   16cbb:	d6                   	(bad)  
   16cbc:	f8                   	clc    
   16cbd:	ff 48 ff             	decl   -0x1(%rax)
   16cc0:	c0 c0 39             	rol    $0x39,%al
   16cc3:	c1 0f 8d             	rorl   $0x8d,(%rdi)
   16cc6:	4e 01 00             	rex.WRX add %r8,(%rax)
   16cc9:	00 f7                	add    %dh,%bh
   16ccb:	da 45 85             	fiaddl -0x7b(%rbp)
   16cce:	db 0f                	fisttpl (%rdi)
   16cd0:	85 53 e7             	test   %edx,-0x19(%rbx)
   16cd3:	ff                   	(bad)  
   16cd4:	ff 44 8b 5c          	incl   0x5c(%rbx,%rcx,4)
   16cd8:	24 24                	and    $0x24,%al
   16cda:	4d 89 ee             	mov    %r13,%r14
   16cdd:	41                   	rex.B
   16cde:	4c 29 ee             	sub    %r13,%rsi
   16ce1:	0f 85 4e e7 4d 01    	jne    14f5435 <obstack_alloc_failed_handler@@Base+0x14d3395>
   16ce7:	cf                   	iret   
   16ce8:	44 24 30             	rex.R and $0x30,%al
   16ceb:	4d 09 dc             	or     %r11,%r12
   16cee:	00 45 49             	add    %al,0x49(%rbp)
   16cf1:	39 f9                	cmp    %edi,%ecx
   16cf3:	1f                   	(bad)  
   16cf4:	fc                   	cld    
   16cf5:	ff                   	(bad)  
   16cf6:	e9 64 fd ff ff       	jmp    16a5f <_obstack_memory_used@@Base+0x62af>
   16cfb:	00 01                	add    %al,(%rcx)
   16cfd:	00 e9                	add    %ch,%cl
   16cff:	7e 00                	jle    16d01 <_obstack_memory_used@@Base+0x6551>
   16d01:	00 00                	add    %al,(%rax)
   16d03:	48                   	rex.W
   16d04:	49 39 c6             	cmp    %rax,%r14
   16d07:	48 89 45 00          	mov    %rax,0x0(%rbp)
   16d0b:	49 09 f0             	or     %rsi,%r8
   16d0e:	e8 08 00 00 00       	call   16d1b <_obstack_memory_used@@Base+0x656b>
   16d13:	4a 89 44 3d f8       	mov    %rax,-0x8(%rbp,%r15,1)
   16d18:	0f 8c bb 00 00 00    	jl     16dd9 <_obstack_memory_used@@Base+0x6629>
   16d1e:	cb                   	lret   
   16d1f:	e9 d9 fc ff ff       	jmp    169fd <_obstack_memory_used@@Base+0x624d>
   16d24:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   16d28:	49 f7 f8             	idiv   %r8
   16d2b:	08 0f                	or     %cl,(%rdi)
   16d2d:	82                   	(bad)  
   16d2e:	1f                   	(bad)  
   16d2f:	f3 ff                	repz (bad) 
   16d31:	ff 48 39             	decl   0x39(%rax)
   16d34:	c3                   	ret    
   16d35:	f8                   	clc    
   16d36:	31 c9                	xor    %ecx,%ecx
   16d38:	48 8b 34 0f          	mov    (%rdi,%rcx,1),%rsi
   16d3c:	48 89 34 0a          	mov    %rsi,(%rdx,%rcx,1)
   16d40:	48 83 c1 08          	add    $0x8,%rcx
   16d44:	48 39 c1             	cmp    %rax,%rcx
   16d47:	72 ef                	jb     16d38 <_obstack_memory_used@@Base+0x6588>
   16d49:	49 c1 e0 2c          	shl    $0x2c,%r8
   16d4d:	0f 8c d1 4c 85 fb    	jl     fffffffffb86ba24 <obstack_alloc_failed_handler@@Base+0xfffffffffb849984>
   16d53:	8f                   	(bad)  
   16d54:	0f 8f a2 03 00 00    	jg     170fc <_obstack_memory_used@@Base+0x694c>
   16d5a:	fc                   	cld    
   16d5b:	4d 01 c4             	add    %r8,%r12
   16d5e:	e9 4d 01 e9 ff       	jmp    ffffffffffea6eb0 <obstack_alloc_failed_handler@@Base+0xffffffffffe84e10>
   16d63:	44 0f b6 44 24 40    	movzbl 0x40(%rsp),%r8d
   16d69:	48 83 ec 08          	sub    $0x8,%rsp
   16d6d:	e9 49 ff ff ff       	jmp    16cbb <_obstack_memory_used@@Base+0x650b>
   16d72:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   16d73:	57                   	push   %rdi
   16d74:	00 00                	add    %al,(%rax)
   16d76:	8b 84 24 68 05 48 c7 	mov    -0x38b7fa98(%rsp),%eax
   16d7d:	c1 51 ff ff          	rcll   $0xff,-0x1(%rcx)
   16d81:	ff 2b                	ljmp   *(%rbx)
   16d83:	00 00                	add    %al,(%rax)
   16d85:	00 0f                	add    %cl,(%rdi)
   16d87:	85 e2                	test   %esp,%edx
   16d89:	fe                   	(bad)  
   16d8a:	ff                   	(bad)  
   16d8b:	ff                   	(bad)  
   16d8c:	ff 48 29             	decl   0x29(%rax)
   16d8f:	f7 24 0f             	mull   (%rdi,%rcx,1)
   16d92:	8f                   	(bad)  
   16d93:	16                   	(bad)  
   16d94:	02 00                	add    (%rax),%al
   16d96:	00 24 30             	add    %ah,(%rax,%rsi,1)
   16d99:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
   16d9e:	e8 bd e1 ff ff       	call   14f60 <_obstack_memory_used@@Base+0x47b0>
   16da3:	48 83 c4 4d          	add    $0x4d,%rsp
   16da7:	85 d1                	test   %edx,%ecx
   16da9:	48                   	rex.W
   16daa:	49 c1 e1 27          	shl    $0x27,%r9
   16dae:	4d 21 e4             	and    %r12,%r12
   16db1:	49 c7 c4 e9 4e 03 00 	mov    $0x34ee9,%r12
   16db8:	00 00                	add    %al,(%rax)
   16dba:	c7 44 24 30 04 00 00 	movl   $0x4,0x30(%rsp)
   16dc1:	00 
   16dc2:	e9 17 f0 ff ff       	jmp    15dde <_obstack_memory_used@@Base+0x562e>
   16dc7:	49 c1 eb 02          	shr    $0x2,%r11
   16dcb:	04 00                	add    $0x0,%al
   16dcd:	00 00                	add    %al,(%rax)
   16dcf:	be 59 00 00 00       	mov    $0x59,%esi
   16dd4:	b8 0f 49 29 f6       	mov    $0xf629490f,%eax
   16dd9:	e9 0e fb ff ff       	jmp    168ec <_obstack_memory_used@@Base+0x613c>
   16dde:	49 01 d4             	add    %rdx,%r12
   16de1:	e9 5e e2 ff 49       	jmp    4a015044 <obstack_alloc_failed_handler@@Base+0x49ff2fa4>
   16de6:	c1 e8 39             	shr    $0x39,%eax
   16de9:	e9 f5 f1 48 f7       	jmp    fffffffff74a5fe3 <obstack_alloc_failed_handler@@Base+0xfffffffff7483f43>
   16dee:	ff 89 4d 31 e7 24    	decl   0x24e7314d(%rcx)
   16df4:	48 00 83 f0 01 e9 4c 	rex.W add %al,0x4ce901f0(%rbx)
   16dfb:	e6 ff                	out    %al,$0xff
   16dfd:	ff c7                	inc    %edi
   16dff:	44 24 30             	rex.R and $0x30,%al
   16e02:	04 4c                	add    $0x4c,%al
   16e04:	31 d2                	xor    %edx,%edx
   16e06:	4d 89 ee             	mov    %r13,%r14
   16e09:	b8 0f 27 4d 29       	mov    $0x294d270f,%eax
   16e0e:	d1 d9                	rcr    %ecx
   16e10:	fa                   	cli    
   16e11:	ff                   	(bad)  
   16e12:	ff                   	(bad)  
   16e13:	e8 78 da fe ff       	call   4890 <__stack_chk_fail@plt>
   16e18:	83 0f 8c             	orl    $0xffffff8c,(%rdi)
   16e1b:	eb fd                	jmp    16e1a <_obstack_memory_used@@Base+0x666a>
   16e1d:	ff                   	(bad)  
   16e1e:	ff 84 b1 fe ff ff e9 	incl   -0x16000002(%rcx,%rsi,4)
   16e25:	ff e5                	jmp    *%rbp
   16e27:	ff                   	(bad)  
   16e28:	ff                   	(bad)  
   16e29:	eb e3                	jmp    16e0e <_obstack_memory_used@@Base+0x665e>
   16e2b:	c1 49 39 fc          	rorl   $0xfc,0x39(%rcx)
   16e2f:	c3                   	ret    
   16e30:	0f 84 4d 03 00 00    	je     17183 <_obstack_memory_used@@Base+0x69d3>
   16e36:	8c 13                	mov    %ss,(%rbx)
   16e38:	fd                   	std    
   16e39:	ff                   	(bad)  
   16e3a:	ff 00                	incl   (%rax)
   16e3c:	42 8b 84 3c 49 f7 ff 	mov    0x49fff749(%rsp,%r15,1),%eax
   16e43:	49 
   16e44:	ff c1                	inc    %ecx
   16e46:	48 01 ca             	add    %rcx,%rdx
   16e49:	e9 4d 21 ec ff       	jmp    ffffffffffed8f9b <obstack_alloc_failed_handler@@Base+0xffffffffffeb6efb>
   16e4e:	0f 8c b2 02 00 00    	jl     17106 <_obstack_memory_used@@Base+0x6956>
   16e54:	48 83 ec 4c          	sub    $0x4c,%rsp
   16e58:	31 c6                	xor    %eax,%esi
   16e5a:	b6 ff                	mov    $0xff,%dh
   16e5c:	e8 2f 53 ff ff       	call   c190 <__sprintf_chk@plt+0x74b0>
   16e61:	84 c0                	test   %al,%al
   16e63:	74 26                	je     16e8b <_obstack_memory_used@@Base+0x66db>
   16e65:	48 8b 15 3c b1 00 00 	mov    0xb13c(%rip),%rdx        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
   16e6c:	48                   	rex.W
   16e6d:	4c 31 ce             	xor    %r9,%rsi
   16e70:	49 ff c4             	inc    %r12
   16e73:	8c a3 fc ff ff 17    	mov    %fs,0x17fffffc(%rbx)
   16e79:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
   16e7d:	0f 84 49 85 f5 ff    	je     fffffffffff6f3cc <obstack_alloc_failed_handler@@Base+0xfffffffffff4d32c>
   16e83:	48 83 05 6d b4 00 00 	addq   $0x1,0xb46d(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   16e8a:	01 
   16e8b:	48 83 49 89 f8       	orq    $0xfffffffffffffff8,-0x77(%rcx)
   16e90:	af                   	scas   %es:(%rdi),%eax
   16e91:	d3 f0                	shl    %cl,%eax
   16e93:	e8 49 0f af fb       	call   fffffffffbb07de1 <obstack_alloc_failed_handler@@Base+0xfffffffffbae5d41>
   16e98:	eb e9                	jmp    16e83 <_obstack_memory_used@@Base+0x66d3>
   16e9a:	66 0f 49 c1          	cmovns %cx,%ax
   16e9e:	e0 1f                	loopne 16ebf <_obstack_memory_used@@Base+0x670f>
   16ea0:	f3 0f 1e fa          	endbr64 
   16ea4:	41 54                	push   %r12
   16ea6:	49 89 f4             	mov    %rsi,%r12
   16ea9:	53                   	push   %rbx
   16eaa:	48 89 fb             	mov    %rdi,%rbx
   16ead:	48 81 ec a8 02 00 00 	sub    $0x2a8,%rsp
   16eb4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16ebb:	00 00 
   16ebd:	48 89 84 24 98 02 00 	mov    %rax,0x298(%rsp)
   16ec4:	00 
   16ec5:	31 c0                	xor    %eax,%eax
   16ec7:	80 3d 3a b4 00 00 00 	cmpb   $0x0,0xb43a(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
   16ece:	74 12                	je     16ee2 <_obstack_memory_used@@Base+0x6732>
   16ed0:	bf 04 00 00 00       	mov    $0x4,%edi
   16ed5:	e8 46 52 49 89       	call   ffffffff894ac120 <obstack_alloc_failed_handler@@Base+0xffffffff8948a080>
   16eda:	f1                   	int1   
   16edb:	c0 0f 85             	rorb   $0x85,(%rdi)
   16ede:	76 01                	jbe    16ee1 <_obstack_memory_used@@Base+0x6731>
   16ee0:	00 00                	add    %al,(%rax)
   16ee2:	80 3d 28 b4 00 00 00 	cmpb   $0x0,0xb428(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
   16ee9:	0f 85 b9 00 00 00    	jne    16fa8 <_obstack_memory_used@@Base+0x67f8>
   16eef:	80 3d 1a b4 00 00 00 	cmpb   $0x0,0xb41a(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
   16ef6:	74 38                	je     16f30 <_obstack_memory_used@@Base+0x6780>
   16ef8:	80 bb b8 0f 84 09 03 	cmpb   $0x3,0x9840fb8(%rbx)
   16eff:	00 49 21             	add    %cl,0x21(%rcx)
   16f02:	dd 21                	frstor (%rcx)
   16f04:	e9 00 0f 85 7c       	jmp    7c867e09 <obstack_alloc_failed_handler@@Base+0x7c845d69>
   16f09:	01 00                	add    %eax,(%rax)
   16f0b:	00 31                	add    %dh,(%rcx)
   16f0d:	d2 83 3d f7 b3 00    	rolb   %cl,0xb3f73d(%rbx)
   16f13:	00 04 74             	add    %al,(%rsp,%rsi,2)
   16f16:	06                   	(bad)  
   16f17:	8b 15 87 b3 00 00    	mov    0xb387(%rip),%edx        # 222a4 <obstack_alloc_failed_handler@@Base+0x204>
   16f1d:	49 f7 f9             	idiv   %r9
   16f20:	af                   	scas   %es:(%rdi),%eax
   16f21:	2c 00                	sub    $0x0,%al
   16f23:	00 bf 01 4d 31 e0    	add    %bh,-0x1fceb2ff(%rdi)
   16f29:	31 c0                	xor    %eax,%eax
   16f2b:	e8 10 dc fe ff       	call   4b40 <__printf_chk@plt>
   16f30:	80 3d c9 b3 00 00 00 	cmpb   $0x0,0xb3c9(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
   16f37:	74 2b                	je     16f64 <_obstack_memory_used@@Base+0x67b4>
   16f39:	31 d2                	xor    %edx,%edx
   16f3b:	83 3d ca b3 00 00 04 	cmpl   $0x4,0xb3ca(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   16f42:	48 8b 8b 0f 85 94 03 	mov    0x394850f(%rbx),%rcx
   16f49:	00 00                	add    %al,(%rax)
   16f4b:	8b 15 4f b3 00 00    	mov    0xb34f(%rip),%edx        # 222a0 <obstack_alloc_failed_handler@@Base+0x200>
   16f51:	48 8d 35 7b 2c 00 00 	lea    0x2c7b(%rip),%rsi        # 19bd3 <_obstack_memory_used@@Base+0x9423>
   16f58:	bf 01 00 4c 29       	mov    $0x294c0001,%edi
   16f5d:	c1 e9 de             	shr    $0xde,%ecx
   16f60:	02 00                	add    (%rax),%al
   16f62:	00 ff                	add    %bh,%bh
   16f64:	4c 89 e1             	mov    %r12,%rcx
   16f67:	31 d2                	xor    %edx,%edx
   16f69:	31 f6                	xor    %esi,%esi
   16f6b:	48 89 df             	mov    %rbx,%rdi
   16f6e:	e8 9d 92 ff ff       	call   10210 <_obstack_newchunk@@Base+0x550>
   16f73:	8b 05 8b b3 00 00    	mov    0xb38b(%rip),%eax        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
   16f79:	85 c0                	test   %eax,%eax
   16f7b:	0f 85 b7 00 00 00    	jne    17038 <_obstack_memory_used@@Base+0x6888>
   16f81:	48 8b 84 24 98 02 00 	mov    0x298(%rsp),%rax
   16f88:	00 
   16f89:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16f90:	00 00 
   16f92:	0f 85 25 01 00 00    	jne    170bd <_obstack_memory_used@@Base+0x690d>
   16f98:	48 81 c4 a8 02 00 00 	add    $0x2a8,%rsp
   16f9f:	5b                   	pop    %rbx
   16fa0:	41 5c                	pop    %r12
   16fa2:	c3                   	ret    
   16fa3:	7f bd                	jg     16f62 <_obstack_memory_used@@Base+0x67b2>
   16fa5:	44 00 00             	add    %r8b,(%rax)
   16fa8:	80 bb b8 00 00 00 00 	cmpb   $0x0,0xb8(%rbx)
   16faf:	4c 8d 0f             	lea    (%rdi),%r9
   16fb2:	85 f9                	test   %edi,%ecx
   16fb4:	01 48 f7             	add    %ecx,-0x9(%rax)
   16fb7:	fb                   	sti    
   16fb8:	48 ff c7             	inc    %rdi
   16fbb:	20 48 85             	and    %cl,-0x7b(%rax)
   16fbe:	4c                   	rex.WR
   16fbf:	4d 39 de             	cmp    %r11,%r14
   16fc2:	44 24 14             	rex.R and $0x14,%al
   16fc5:	00 4c 8d 44          	add    %cl,0x44(%rbp,%rcx,4)
   16fc9:	24 14                	and    $0x14,%al
   16fcb:	48 bf cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdi
   16fd2:	cc cc cc 
   16fd5:	0f 1f 00             	nopl   (%rax)
   16fd8:	48 89 c8             	mov    %rcx,%rax
   16fdb:	49 83 e8 4d          	sub    $0x4d,%r8
   16fdf:	0f af e4             	imul   %esp,%esp
   16fe2:	48 89 c8             	mov    %rcx,%rax
   16fe5:	48 c1 7f 4c 01       	sarq   $0x1,0x4c(%rdi)
   16fea:	e3 0f                	jrcxz  16ffb <_obstack_memory_used@@Base+0x684b>
   16fec:	84 de                	test   %bl,%dh
   16fee:	fe                   	(bad)  
   16fef:	ff                   	(bad)  
   16ff0:	ff 29                	ljmp   *(%rcx)
   16ff2:	f0 83 c0 30          	lock add $0x30,%eax
   16ff6:	41 88 00             	mov    %al,(%r8)
   16ff9:	49 89 c1             	mov    %rax,%r9
   16ffc:	48                   	rex.W
   16ffd:	4c 85 c0             	test   %r8,%rax
   17000:	df f8                	(bad)  
   17002:	09 77 4c             	or     %esi,0x4c(%rdi)
   17005:	89 d1                	mov    %edx,%ecx
   17007:	00 31                	add    %dh,(%rcx)
   17009:	d2 e9                	shr    %cl,%cl
   1700b:	03 01                	add    (%rcx),%eax
   1700d:	00 00                	add    %al,(%rax)
   1700f:	00 04 48             	add    %al,(%rax,%rcx,2)
   17012:	c7 c1 4c 0f af f3    	mov    $0xf3af0f4c,%ecx
   17018:	48 c1 48 f7 ff       	rorq   $0xff,-0x9(%rax)
   1701d:	8d 35 b0 0f 85 ce    	lea    -0x317af050(%rip),%esi        # ffffffffce867fd3 <obstack_alloc_failed_handler@@Base+0xffffffffce845f33>
   17023:	01 00                	add    %eax,(%rax)
   17025:	00 00                	add    %al,(%rax)
   17027:	00 31                	add    %dh,(%rcx)
   17029:	c0 e8 11             	shr    $0x11,%al
   1702c:	db fe                	(bad)  
   1702e:	ff                   	(bad)  
   1702f:	e9 0f 84 3f fe       	jmp    fffffffffe40f443 <obstack_alloc_failed_handler@@Base+0xfffffffffe3ed3a3>
   17034:	ff                   	(bad)  
   17035:	ff 40 00             	incl   0x0(%rax)
   17038:	8b 93 a8 00 00 00    	mov    0xa8(%rbx),%edx
   1703e:	8b 73 30             	mov    0x30(%rbx),%esi
   17041:	0f b6 bb b8 00 00 49 	movzbl 0x490000b8(%rbx),%edi
   17048:	c1 e3 11             	shl    $0x11,%ebx
   1704b:	ff                   	(bad)  
   1704c:	ff                   	(bad)  
   1704d:	e9 2f ff ff ff       	jmp    16f81 <_obstack_memory_used@@Base+0x67d1>
   17052:	66 0f 1f 44 00 48    	nopw   0x48(%rax,%rax,1)
   17058:	21 cf                	and    %ecx,%edi
   1705a:	3d 61 b0 00 00       	cmp    $0xb061,%eax
   1705f:	e8 3c 52 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   17064:	48 8d 3d 95 b0 00 00 	lea    0xb095(%rip),%rdi        # 22100 <obstack_alloc_failed_handler@@Base+0x60>
   1706b:	e8 30 52 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   17070:	48 8d 3d 59 b0 00 00 	lea    0xb059(%rip),%rdi        # 220d0 <obstack_alloc_failed_handler@@Base+0x30>
   17077:	7f 12                	jg     1708b <_obstack_memory_used@@Base+0x68db>
   17079:	52                   	push   %rdx
   1707a:	ff                   	(bad)  
   1707b:	ff                   	(bad)  
   1707c:	e9 61 fe ff 48       	jmp    49016ee2 <obstack_alloc_failed_handler@@Base+0x48ff4e42>
   17081:	49 c7 c5 59 fd ff ff 	mov    $0xfffffffffffffd59,%r13
   17088:	8b 15 2a b2 00 00    	mov    0xb22a(%rip),%edx        # 222b8 <obstack_alloc_failed_handler@@Base+0x218>
   1708e:	49 31 c0             	xor    %rax,%r8
   17091:	58                   	pop    %rax
   17092:	b9 00 02 00 00       	mov    $0x200,%ecx
   17097:	48 89 e6             	mov    %rsp,%rsi
   1709a:	4c                   	rex.WR
   1709b:	49 39 cd             	cmp    %rcx,%r13
   1709e:	b2 00                	mov    $0x0,%dl
   170a0:	00 7c b3 49          	add    %bh,0x49(%rbx,%rsi,4)
   170a4:	85 d2                	test   %edx,%edx
   170a6:	31 d2                	xor    %edx,%edx
   170a8:	83 48 c1 eb          	orl    $0xffffffeb,-0x3f(%rax)
   170ac:	19 00                	sbb    %eax,(%rax)
   170ae:	04 48                	add    $0x48,%al
   170b0:	89 c1                	mov    %eax,%ecx
   170b2:	0f 48 c7             	cmovs  %edi,%eax
   170b5:	c2 d1 fe             	ret    $0xfed1
   170b8:	0f                   	(bad)  
   170b9:	0f 84 09 03 00 00    	je     173c8 <_obstack_memory_used@@Base+0x6c18>
   170bf:	d7                   	xlat   %ds:(%rbx)
   170c0:	fe                   	(bad)  
   170c1:	ff 66 2e             	jmp    *0x2e(%rsi)
   170c4:	49 01 d7             	add    %rdx,%r15
   170c7:	00 00                	add    %al,(%rax)
   170c9:	00 48 f7             	add    %cl,-0x9(%rax)
   170cc:	fb                   	sti    
   170cd:	1f                   	(bad)  
   170ce:	40                   	rex
   170cf:	4c 09 d0             	or     %r10,%rax
   170d2:	1e                   	(bad)  
   170d3:	48 f7 ff             	idiv   %rdi
   170d6:	1b 2d af 00 00 31    	sbb    0x310000af(%rip),%ebp        # 3101718b <obstack_alloc_failed_handler@@Base+0x30ff50eb>
   170dc:	f6 e9                	imul   %cl
   170de:	fe                   	(bad)  
   170df:	da fe                	(bad)  
   170e1:	ff 66 2e             	jmp    *0x2e(%rsi)
   170e4:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   170eb:	00 
   170ec:	0f 48 39             	cmovs  (%rcx),%edi
   170ef:	d6                   	(bad)  
   170f0:	f3 0f 1e fa          	endbr64 
   170f4:	48 8b 05 05 9f 00 00 	mov    0x9f05(%rip),%rax        # 21000 <_obstack_memory_used@@Base+0x10850>
   170fb:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   170ff:	74 2f                	je     17130 <_obstack_memory_used@@Base+0x6980>
   17101:	49 85 c4             	test   %rax,%r12
   17104:	e5 48                	in     $0x48,%eax
   17106:	f7 fe                	idiv   %esi
   17108:	84 7e 00             	test   %bh,0x0(%rsi)
   1710b:	00 00                	add    %al,(%rax)
   1710d:	48 83 ec 08          	sub    $0x8,%rsp
   17111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17118:	ff d0                	call   *%rax
   1711a:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
   1711e:	48 83 eb 08          	sub    $0x8,%rbx
   17122:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   17126:	75 f0                	jne    17118 <_obstack_memory_used@@Base+0x6968>
   17128:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1712c:	c9                   	leave  
   1712d:	c3                   	ret    
   1712e:	66 90                	xchg   %ax,%ax
   17130:	c3                   	ret    
