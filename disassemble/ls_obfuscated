
./bin/ls_obfuscated:     file format elf64-x86-64


Disassembly of section .text:

0000000000004cf0 <_obstack_begin@@Base-0xaf90>:
    4cf0:	50                   	push   %rax
    4cf1:	e8 0a fa ff ff       	call   4700 <abort@plt>
    4cf6:	e8 05 fa ff ff       	call   4700 <abort@plt>
    4cfb:	e8 0f 8f 39 fc       	call   fffffffffc39dc0f <obstack_alloc_failed_handler@@Base+0xfffffffffc37bb6f>
    4d00:	ff 49 ff             	decl   -0x1(%rcx)
    4d03:	c3                   	ret    
    4d04:	00 00                	add    %al,(%rax)
    4d06:	f7 49 c7 c7 3b 03 00 	testl  $0x33bc7,-0x39(%rcx)
    4d0d:	00 ff                	add    %bh,%bh
    4d0f:	e8 ec f9 ff ff       	call   4700 <abort@plt>
    4d14:	e8 e7 f9 ff ff       	call   4700 <abort@plt>
    4d19:	e8 e2 f9 ff ff       	call   4700 <abort@plt>
    4d1e:	66 90                	xchg   %ax,%ax
    4d20:	f3 0f 1e fa          	endbr64 
    4d24:	41 57                	push   %r15
    4d26:	41 56                	push   %r14
    4d28:	41 55                	push   %r13
    4d2a:	41 54                	push   %r12
    4d2c:	55                   	push   %rbp
    4d2d:	53                   	push   %rbx
    4d2e:	48 83 ec 78          	sub    $0x78,%rsp
    4d32:	48 8b 2e             	mov    (%rsi),%rbp
    4d35:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4d3c:	00 00 
    4d3e:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    4d43:	31 c0                	xor    %eax,%eax
    4d45:	48 85 ed             	test   %rbp,%rbp
    4d48:	0f 84 a6 1c 00 00    	je     69f4 <__sprintf_chk@plt+0x1d14>
    4d4e:	41 89 fe             	mov    %edi,%r14d
    4d51:	48 89 f3             	mov    %rsi,%rbx
    4d54:	48 89 ef             	mov    %rbp,%rdi
    4d57:	be 2f 00 00 00       	mov    $0x2f,%esi
    4d5c:	e8 af fb ff ff       	call   4910 <strrchr@plt>
    4d61:	49 89 c4             	mov    %rax,%r12
    4d64:	48 85 c0             	test   %rax,%rax
    4d67:	74 4f                	je     4db8 <__sprintf_chk@plt+0xd8>
    4d69:	4c 8d 68 01          	lea    0x1(%rax),%r13
    4d6d:	4c 89 e8             	mov    %r13,%rax
    4d70:	48 29 e8             	sub    %rbp,%rax
    4d73:	48 83 f8 06          	cmp    $0x6,%rax
    4d77:	49 c1 e4 36          	shl    $0x36,%r12
    4d7b:	7c 48                	jl     4dc5 <__sprintf_chk@plt+0xe5>
    4d7d:	f7 fa                	idiv   %edx
    4d7f:	07                   	(bad)  
    4d80:	00 4d 89             	add    %cl,-0x77(%rbp)
    4d83:	eb 8d                	jmp    4d12 <__sprintf_chk@plt+0x32>
    4d85:	35 e3 4e 01 00       	xor    $0x14ee3,%eax
    4d8a:	e8 91 f9 ff ff       	call   4720 <strncmp@plt>
    4d8f:	85 c0                	test   %eax,%eax
    4d91:	48 c1 e1 48          	shl    $0x48,%rcx
    4d95:	39 f7                	cmp    %esi,%edi
    4d97:	00 48 8d             	add    %cl,-0x73(%rax)
    4d9a:	35 4d 0f af c6       	xor    $0xc6af0f4d,%eax
    4d9f:	02 4c 85 d0          	add    -0x30(%rbp,%rax,4),%cl
    4da3:	4c 0f af f7          	imul   %rdi,%r14
    4da7:	f9                   	stc    
    4da8:	ff                   	(bad)  
    4da9:	ff 0f                	decl   (%rdi)
    4dab:	8c 13                	mov    %ss,(%rbx)
    4dad:	fd                   	std    
    4dae:	ff                   	(bad)  
    4daf:	ff 8c e0 fd ff ff 49 	decl   0x49fffffd(%rax,%riz,8)
    4db6:	ff c3                	inc    %ebx
    4db8:	48 8b 05 09 d2 01 00 	mov    0x1d209(%rip),%rax        # 21fc8 <_obstack_memory_used@@Base+0x11818>
    4dbf:	48 89 2d 92 d6 01 00 	mov    %rbp,0x1d692(%rip)        # 22458 <obstack_alloc_failed_handler@@Base+0x3b8>
    4dc6:	bf 06 00 00 00       	mov    $0x6,%edi
    4dcb:	48 8d 35 eb 4d 01 00 	lea    0x14deb(%rip),%rsi        # 19bbd <_obstack_memory_used@@Base+0x940d>
    4dd2:	48 89 28             	mov    %rbp,(%rax)
    4dd5:	48 8d 2d ca 4b 01 00 	lea    0x14bca(%rip),%rbp        # 199a6 <_obstack_memory_used@@Base+0x91f6>
    4ddc:	e8 4f fd ff ff       	call   4b30 <setlocale@plt>
    4de1:	48 8d 35 91 4e 01 00 	lea    0x14e91(%rip),%rsi        # 19c79 <_obstack_memory_used@@Base+0x94c9>
    4de8:	48 89 ef             	mov    %rbp,%rdi
    4deb:	e8 60 fa ff ff       	call   4850 <bindtextdomain@plt>
    4df0:	48 89 ef             	mov    %rbp,%rdi
    4df3:	e8 18 fa ff ff       	call   4810 <textdomain@plt>
    4df8:	48 8d 3d e1 6c 00 00 	lea    0x6ce1(%rip),%rdi        # bae0 <__sprintf_chk@plt+0x6e00>
    4dff:	c7 05 77 d2 01 00 02 	movl   $0x2,0x1d277(%rip)        # 22080 <_obstack_memory_used@@Base+0x118d0>
    4e06:	00 00 00 
    4e09:	e8 c2 22 01 00       	call   170d0 <_obstack_memory_used@@Base+0x6920>
    4e0e:	bf 01 00 00 00       	mov    $0x1,%edi
    4e13:	48 b8 00 49 c7 c5 46 	movabs $0x346c5c74900,%rax
    4e1a:	03 00 00 
    4e1d:	c7 05 45 d9 01 00 49 	movl   $0xc5af0f49,0x1d945(%rip)        # 2276c <obstack_alloc_failed_handler@@Base+0x6cc>
    4e24:	0f af c5 
    4e27:	c6 05 3a d9 01 00 01 	movb   $0x1,0x1d93a(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
    4e2e:	48 c7 05 27 d9 01 00 	movq   $0x0,0x1d927(%rip)        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    4e35:	00 00 00 00 
    4e39:	48 89 05 10 d9 01 00 	mov    %rax,0x1d910(%rip)        # 22750 <obstack_alloc_failed_handler@@Base+0x6b0>
    4e40:	48 c7 05 0d d9 01 00 	movq   $0xffffffffffffffff,0x1d90d(%rip)        # 22758 <obstack_alloc_failed_handler@@Base+0x6b8>
    4e47:	ff ff ff ff 
    4e4b:	c6 05 6a d4 01 00 00 	movb   $0x0,0x1d46a(%rip)        # 222bc <obstack_alloc_failed_handler@@Base+0x21c>
    4e52:	e8 29 f9 ff ff       	call   4780 <isatty@plt>
    4e57:	85 c0                	test   %eax,%eax
    4e59:	0f 85 09 17 00 00    	jne    6568 <__sprintf_chk@plt+0x1888>
    4e5f:	c7 05 a3 d4 0f 8f df 	movl   $0xfffffedf,-0x70f02b5d(%rip)        # ffffffff8f10230c <obstack_alloc_failed_handler@@Base+0xffffffff8f0e026c>
    4e66:	fe ff ff 
    4e69:	31 c0                	xor    %eax,%eax
    4e6b:	48 8d 3d 19 4e 01 00 	lea    0x14e19(%rip),%rdi        # 19c8b <_obstack_memory_used@@Base+0x94db>
    4e72:	88 05 44 d4 01 00    	mov    %al,0x1d444(%rip)        # 222bc <obstack_alloc_failed_handler@@Base+0x21c>
    4e78:	c7 05 9e e5 01 00 00 	movl   $0x0,0x1e59e(%rip)        # 23420 <obstack_alloc_failed_handler@@Base+0x1380>
    4e7f:	00 00 00 
    4e82:	c7 05 98 e5 01 00 00 	movl   $0x0,0x1e598(%rip)        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    4e89:	00 00 00 
    4e8c:	c6 05 0a d6 01 00 00 	movb   $0x0,0x1d60a(%rip)        # 2249d <obstack_alloc_failed_handler@@Base+0x3fd>
    4e93:	c6 05 02 d6 01 00 00 	movb   $0x0,0x1d602(%rip)        # 2249c <obstack_alloc_failed_handler@@Base+0x3fc>
    4e9a:	c6 05 6f d4 01 00 00 	movb   $0x0,0x1d46f(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
    4ea1:	c7 05 59 d4 01 00 00 	movl   $0x0,0x1d459(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    4ea8:	00 00 00 
    4eab:	c6 05 5f d4 01 00 00 	movb   $0x0,0x1d45f(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
    4eb2:	c7 05 88 d8 01 00 01 	movl   $0xf8f74801,0x1d888(%rip)        # 22744 <obstack_alloc_failed_handler@@Base+0x6a4>
    4eb9:	48 f7 f8 
    4ebc:	c6 05 7d d8 01 00 00 	movb   $0x0,0x1d87d(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
    4ec3:	c6 05 77 d8 01 00 00 	movb   $0x0,0x1d877(%rip)        # 22741 <obstack_alloc_failed_handler@@Base+0x6a1>
    4eca:	c7 05 c4 d5 01 00 00 	movl   $0x0,0x1d5c4(%rip)        # 22498 <obstack_alloc_failed_handler@@Base+0x3f8>
    4ed1:	00 00 00 
    4ed4:	48 c7 05 b1 d5 01 00 	movq   $0x0,0x1d5b1(%rip)        # 22490 <obstack_alloc_failed_handler@@Base+0x3f0>
    4edb:	00 00 00 00 
    4edf:	48 c7 05 9e d5 01 00 	movq   $0x0,0x1d59e(%rip)        # 22488 <obstack_alloc_failed_handler@@Base+0x3e8>
    4ee6:	00 00 00 00 
    4eea:	c6 05 0f d4 01 00 00 	movb   $0x0,0x1d40f(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    4ef1:	e8 ca f7 ff ff       	call   46c0 <getenv@plt>
    4ef6:	48 89 c5             	mov    %rax,%rbp
    4ef9:	48 85 c0             	test   %rax,%rax
    4efc:	74 2d                	je     4f2b <__sprintf_chk@plt+0x24b>
    4efe:	4c 8d 49 c1          	lea    -0x3f(%rcx),%r9
    4f02:	ef                   	out    %eax,(%dx)
    4f03:	06                   	(bad)  
    4f04:	fd                   	std    
    4f05:	ff                   	(bad)  
    4f06:	ff 35 34 49 c1 e5    	push   -0x1a3eb6cc(%rip)        # ffffffffe5c19840 <obstack_alloc_failed_handler@@Base+0xffffffffe5bf77a0>
    4f0c:	08 89 c7 4c 49 f7    	or     %cl,-0x8b6b339(%rcx)
    4f12:	fb                   	sti    
    4f13:	29 df                	sub    %ebx,%edi
    4f15:	00 00                	add    %al,(%rax)
    4f17:	85 c0                	test   %eax,%eax
    4f19:	0f 88 96 05 00 4d    	js     4d0054b5 <obstack_alloc_failed_handler@@Base+0x4cfe3415>
    4f1f:	0f af c6             	imul   %esi,%eax
    4f22:	8b 04 84             	mov    (%rsp,%rax,4),%eax
    4f25:	89 05 4c 01 e0 00    	mov    %eax,0xe0014c(%rip)        # e05077 <obstack_alloc_failed_handler@@Base+0xde2fd7>
    4f2b:	48                   	rex.W
    4f2c:	4d 89 f7             	mov    %r14,%r15
    4f2f:	4d 01 00             	add    %r8,(%r8)
    4f32:	48 c7 05 43 d5 01 00 	movq   $0x50,0x1d543(%rip)        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    4f39:	50 00 00 00 
    4f3d:	e8 7e f7 ff ff       	call   46c0 <getenv@plt>
    4f42:	48 89 c5             	mov    %rax,%rbp
    4f45:	48 85 c0             	test   %rax,%rax
    4f48:	74 09                	je     4f53 <__sprintf_chk@plt+0x273>
    4f4a:	80 38 4d             	cmpb   $0x4d,(%rax)
    4f4d:	31 c7                	xor    %eax,%edi
    4f4f:	96                   	xchg   %eax,%esi
    4f50:	05 49 c1 e3 19       	add    $0x19e3c149,%eax
    4f55:	44 24 50             	rex.R and $0x50,%al
    4f58:	be 13 54 00 00       	mov    $0x5413,%esi
    4f5d:	bf 01 00 00 00       	mov    $0x1,%edi
    4f62:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4f67:	48 89 c2             	mov    %rax,%rdx
    4f6a:	31 c0                	xor    %eax,%eax
    4f6c:	e8 ff f9 ff ff       	call   4970 <ioctl@plt>
    4f71:	83 f8 ff             	cmp    $0xffffffff,%eax
    4f74:	74 0e                	je     4f84 <__sprintf_chk@plt+0x2a4>
    4f76:	0f b7 44 24 52       	movzwl 0x52(%rsp),%eax
    4f7b:	66 85 c0             	test   %ax,%ax
    4f7e:	0f 85 25 05 00 00    	jne    54a9 <__sprintf_chk@plt+0x7c9>
    4f84:	48 8d 3d 16 4d 01 00 	lea    0x14d16(%rip),%rdi        # 19ca1 <_obstack_memory_used@@Base+0x94f1>
    4f8b:	e8 30 f7 ff ff       	call   46c0 <getenv@plt>
    4f90:	48 c7 05 dd d4 01 00 	movq   $0x8,0x1d4dd(%rip)        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    4f97:	08 00 00 00 
    4f9b:	49 31 dd             	xor    %rbx,%r13
    4f9e:	48 85 c0             	test   %rax,%rax
    4fa1:	74 2a                	je     4fcd <__sprintf_chk@plt+0x2ed>
    4fa3:	48 8b 54 24 0f       	mov    0xf(%rsp),%rdx
    4fa8:	8f 48 c7 c7          	(bad)
    4fac:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    4fad:	fc                   	cld    
    4fae:	ff                   	(bad)  
    4faf:	ff 0f                	decl   (%rdi)
    4fb1:	af                   	scas   %es:(%rdi),%eax
    4fb2:	c8 c7 e8 f7          	enter  $0xe8c7,$0xf7
    4fb6:	fa                   	cli    
    4fb7:	00 4d 89             	add    %cl,-0x77(%rbp)
    4fba:	d9 0f                	(bad)  (%rdi)
    4fbc:	85 59 0e             	test   %ebx,0xe(%rcx)
    4fbf:	00 00                	add    %al,(%rax)
    4fc1:	48 8b 48 29          	mov    0x29(%rax),%rcx
    4fc5:	d8 48 89             	fmuls  -0x77(%rax)
    4fc8:	05 ab d4 01 00       	add    $0x1d4ab,%eax
    4fcd:	c6 44 24 27 00       	movb   $0x0,0x27(%rsp)
    4fd2:	48 8d 6c 24 48       	lea    0x48(%rsp),%rbp
    4fd7:	4c 8d 25 02 c4 01 00 	lea    0x1c402(%rip),%r12        # 213e0 <_obstack_memory_used@@Base+0x10c30>
    4fde:	c6 44 24 08 00       	movb   $0x0,0x8(%rsp)
    4fe3:	4c 8d 2d 96 73 01 00 	lea    0x17396(%rip),%r13        # 1c380 <_obstack_memory_used@@Base+0xbbd0>
    4fea:	4c 8d 3d 8f 31 01 00 	lea    0x1318f(%rip),%r15        # 18180 <_obstack_memory_used@@Base+0x79d0>
    4ff1:	48 c7 44 24 10 00 49 	movq   $0xfffffffff9394900,0x10(%rsp)
    4ff8:	39 f9 
    4ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5000:	49 89 e8             	mov    %rbp,%r8
    5003:	4c 89 e1             	mov    %r12,%rcx
    5006:	4d 0f af f9          	imul   %r9,%r15
    500a:	89 de                	mov    %ebx,%esi
    500c:	44 89 f7             	mov    %r14d,%edi
    500f:	c7 44 24 48 ff ff ff 	movl   $0xffffffff,0x48(%rsp)
    5016:	ff 
    5017:	e8 84 f8 ff ff       	call   48a0 <getopt_long@plt>
    501c:	83 f8 ff             	cmp    $0xffffffff,%eax
    501f:	74 2d                	je     504e <__sprintf_chk@plt+0x36e>
    5021:	05 83 00 00 00       	add    $0x83,%eax
    5026:	3d 13 01 00 00       	cmp    $0x113,%eax
    502b:	0f 87 18 17 4d 21    	ja     214d6749 <obstack_alloc_failed_handler@@Base+0x214b46a9>
    5031:	ce                   	(bad)  
    5032:	63 04 48             	movsxd (%rax,%rcx,2),%eax
    5035:	21 df                	and    %ebx,%edi
    5037:	f8                   	clc    
    5038:	3e ff e0             	notrack jmp *%rax
    503b:	c6 05 5a d4 01 00 01 	movb   $0x1,0x1d45a(%rip)        # 2249c <obstack_alloc_failed_handler@@Base+0x3fc>
    5042:	c7 05 c0 d2 01 00 00 	movl   $0x0,0x1d2c0(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5049:	00 00 00 
    504c:	eb b2                	jmp    5000 <__sprintf_chk@plt+0x320>
    504e:	48 83 3d 5a d2 01 00 	cmpq   $0x49,0x1d25a(%rip)        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
    5055:	49 
    5056:	c7 c6 9e fd ff ff    	mov    $0xfffffd9e,%esi
    505c:	48 8b 35 1d d4 01 00 	mov    0x1d41d(%rip),%rsi        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    5063:	31 d2                	xor    %edx,%edx
    5065:	b9 03 00 00 00       	mov    $0x3,%ecx
    506a:	44 8b 25 4f d2 01 00 	mov    0x1d24f(%rip),%r12d        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    5071:	48 89 f0             	mov    %rsi,%rax
    5074:	48 f7 f1             	div    %rcx
    5077:	4d 85 ec             	test   %r13,%r12
    507a:	4d 39 f2             	cmp    %r14,%r10
    507d:	d8 ff                	fdivr  %st(7),%st
    507f:	48 89 05 e2 d3 01 00 	mov    %rax,0x1d3e2(%rip)        # 22468 <obstack_alloc_failed_handler@@Base+0x3c8>
    5086:	8b 05 80 d2 01 00    	mov    0x1d280(%rip),%eax        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    508c:	83 f8 04             	cmp    $0x4,%eax
    508f:	0f 84 98 04 00 00    	je     552d <__sprintf_chk@plt+0x84d>
    5095:	83 f8 01             	cmp    $0x1,%eax
    5098:	0f 84 8f 04 00 00    	je     552d <__sprintf_chk@plt+0x84d>
    509e:	85 c0                	test   %eax,%eax
    50a0:	74 09                	je     50ab <__sprintf_chk@plt+0x3cb>
    50a2:	48 85 f6             	test   %rsi,%rsi
    50a5:	0f 84 82 04 00 00    	je     552d <__sprintf_chk@plt+0x84d>
    50ab:	41 83 fc 06          	cmp    $0x6,%r12d
    50af:	0f 87 78 04 00 00    	ja     552d <__sprintf_chk@plt+0x84d>
    50b5:	b8 4a 00 00 00       	mov    $0x4a,%eax
    50ba:	44 89 e1             	mov    %r12d,%ecx
    50bd:	48 d3 e8             	shr    %cl,%rax
    50c0:	a8 01                	test   $0x1,%al
    50c2:	0f 85 16 14 00 00    	jne    64de <__sprintf_chk@plt+0x17fe>
    50c8:	c6 05 de d1 4c 09 f1 	movb   $0xf1,0x94cd1de(%rip)        # 94d22ad <obstack_alloc_failed_handler@@Base+0x94b020d>
    50cf:	cf                   	iret   
    50d0:	5c                   	pop    %rsp
    50d1:	8d 4d 09             	lea    0x9(%rbp),%ecx
    50d4:	0f 85 3d fc ff ff    	jne    4d17 <__sprintf_chk@plt+0x37>
    50da:	00 8b 15 23 d2 01    	add    %cl,0x1d22315(%rbx)
    50e0:	00 83 fa 01 76 58    	add    %al,0x587601fa(%rbx)
    50e6:	8d 4a fe             	lea    -0x2(%rdx),%ecx
    50e9:	48 8d 35 6c 4c 49 85 	lea    -0x7ab6b394(%rip),%rsi        # ffffffff85499d5c <obstack_alloc_failed_handler@@Base+0xffffffff85477cbc>
    50f0:	cd 48                	int    $0x48
    50f2:	f7 fb                	idiv   %ebx
    50f4:	0f 4c 21             	cmovl  (%rcx),%esp
    50f7:	d2 84 c9 74 4d 01 db 	rolb   %cl,-0x24feb28c(%rcx,%rcx,8)
    50fe:	c0 48 8d 3d          	rorb   $0x3d,-0x73(%rax)
    5102:	ba d1 01 00 48       	mov    $0x480001d1,%edx
    5107:	0f 45 f8             	cmovne %eax,%edi
    510a:	48 83 c7 4d          	add    $0x4d,%rdi
    510e:	e9 99 00 00 4c       	jmp    4c0051ac <obstack_alloc_failed_handler@@Base+0x4bfe310c>
    5113:	39 d0                	cmp    %edx,%eax
    5115:	48 83 c2 01          	add    $0x1,%rdx
    5119:	c0 e8 05             	shr    $0x5,%al
    511c:	0f b6 c0             	movzbl %al,%eax
    511f:	48 8d 34 87          	lea    (%rdi,%rax,4),%rsi
    5123:	44 8b 06             	mov    (%rsi),%r8d
    5126:	44 89 c0             	mov    %r8d,%eax
    5129:	d3 e8                	shr    %cl,%eax
    512b:	f7 d0                	not    %eax
    512d:	83 e0 01             	and    $0x1,%eax
    5130:	d3 e0                	shl    %cl,%eax
    5132:	0f b6 0a             	movzbl (%rdx),%ecx
    5135:	44 31 c0             	xor    %r8d,%eax
    5138:	89 06                	mov    %eax,(%rsi)
    513a:	4d 29 e8             	sub    %r13,%r8
    513d:	d2 e8                	shr    %cl,%al
    513f:	ed                   	in     (%dx),%eax
    5140:	8c 00                	mov    %es,(%rax)
    5142:	00 48 89             	add    %cl,-0x77(%rax)
    5145:	05 16 d3 01 00       	add    $0x1d316,%eax
    514a:	48 85 c0             	test   %rax,%rax
    514d:	0f 84 26 13 00 00    	je     6479 <__sprintf_chk@plt+0x1799>
    5153:	8b 48 0c             	mov    0xc(%rax),%ecx
    5156:	89 ca                	mov    %ecx,%edx
    5158:	49 21 c5             	and    %rax,%r13
    515b:	e2 00                	loop   515d <__sprintf_chk@plt+0x47d>
    515d:	00 00                	add    %al,(%rax)
    515f:	04 48                	add    $0x48,%al
    5161:	c7 c1 81 fc ff ff    	mov    $0xfffffc81,%ecx
    5167:	00 00                	add    %al,(%rax)
    5169:	89 50 0c             	mov    %edx,0xc(%rax)
    516c:	8b 15 9a d1 01 00    	mov    0x1d19a(%rip),%edx        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5172:	74 0f                	je     5183 <__sprintf_chk@plt+0x4a3>
    5174:	85 d2                	test   %edx,%edx
    5176:	0f 84 d4 0a 00 00    	je     5c50 <__sprintf_chk@plt+0xf70>
    517c:	c6 05 35 d5 01 00 00 	movb   $0x0,0x1d535(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
    5183:	8b 05 97 e2 01 00    	mov    0x1e297(%rip),%eax        # 23420 <obstack_alloc_failed_handler@@Base+0x1380>
    5189:	83 e8 01             	sub    $0x1,%eax
    518c:	83 f8 02             	cmp    $0x2,%eax
    518f:	77 0b                	ja     519c <__sprintf_chk@plt+0x4bc>
    5191:	0f 85 4e 01 00 00    	jne    52e5 <__sprintf_chk@plt+0x605>
    5197:	84 48 31             	test   %cl,0x31(%rax)
    519a:	c0 00 85             	rolb   $0x85,(%rax)
    519d:	d2 0f                	rorb   %cl,(%rdi)
    519f:	84 b9 0a 00 00 48    	test   %bh,0x4800000a(%rcx)
    51a5:	8b 05 05 ce 01 00    	mov    0x1ce05(%rip),%eax        # 21fb0 <_obstack_memory_used@@Base+0x11800>
    51ab:	80 3d 56 d1 01 00 00 	cmpb   $0x0,0x1d156(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    51b2:	8b 00                	mov    (%rax),%eax
    51b4:	89 44 24 08          	mov    %eax,0x8(%rsp)
    51b8:	0f 85 77 10 00 00    	jne    6235 <__sprintf_chk@plt+0x1555>
    51be:	80 3d 85 d5 01 00 00 	cmpb   $0x0,0x1d585(%rip)        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    51c5:	74 07                	je     51ce <__sprintf_chk@plt+0x4ee>
    51c7:	c6 05 7b d5 01 00 01 	movb   $0x1,0x1d57b(%rip)        # 22749 <obstack_alloc_failed_handler@@Base+0x6a9>
    51ce:	83 3d 6f d5 01 00 01 	cmpl   $0x1,0x1d56f(%rip)        # 22744 <obstack_alloc_failed_handler@@Base+0x6a4>
    51d5:	0f 84 04 0e 00 00    	je     5fdf <__sprintf_chk@plt+0x12ff>
    51db:	80 3d 5e d5 01 00 00 	cmpb   $0x0,0x1d55e(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
    51e2:	74 4f                	je     5233 <__sprintf_chk@plt+0x553>
    51e4:	4c 8d 05 48 c1 e9 03 	lea    0x3e9c148(%rip),%r8        # 3ea1333 <obstack_alloc_failed_handler@@Base+0x3e7f293>
    51eb:	4c 31 d9             	xor    %r11,%rcx
    51ee:	0e                   	(bad)  
    51ef:	1a 00                	sbb    (%rax),%al
    51f1:	00 31                	add    %dh,(%rcx)
    51f3:	f6 bf 1e 00 4d 85    	idivb  -0x7ab2ffe2(%rdi)
    51f9:	cc                   	int3   
    51fa:	a2 fd ff ff c6 00 e8 	movabs %al,0xd24be800c6fffffd
    5201:	4b d2 
    5203:	00 49 c1             	add    %cl,-0x3f(%rcx)
    5206:	ec                   	in     (%dx),%al
    5207:	49 ff c0             	inc    %r8
    520a:	e7 11                	out    %eax,$0x11
    520c:	48 85 c0             	test   %rax,%rax
    520f:	0f 84 c4 0f 00 00    	je     61d9 <__sprintf_chk@plt+0x14f9>
    5215:	4c                   	rex.WR
    5216:	48 0f af cf          	imul   %rdi,%rcx
    521a:	01 00                	add    %eax,(%rax)
    521c:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
    5220:	ec                   	in     (%dx),%al
    5221:	2d e8 36 d2 31       	sub    $0x31d236e8,%eax
    5226:	f6 48 8d 3d          	testb  $0x3d,-0x73(%rax)
    522a:	b2 49                	mov    $0x49,%dl
    522c:	c1 e0 3a             	shl    $0x3a,%eax
    522f:	4d aa                	rex.WRB stos %al,%es:(%rdi)
    5231:	00 00                	add    %al,(%rax)
    5233:	48 8d 3d 84 49 01 00 	lea    0x14984(%rip),%rdi        # 19bbe <_obstack_memory_used@@Base+0x940e>
    523a:	e8 81 f4 ff ff       	call   46c0 <getenv@plt>
    523f:	48 89 c7             	mov    %rax,%rdi
    5242:	e8 99 66 00 00       	call   b8e0 <__sprintf_chk@plt+0x6c00>
    5247:	48 89 05 72 d4 01 00 	mov    %rax,0x1d472(%rip)        # 226c0 <obstack_alloc_failed_handler@@Base+0x620>
    524e:	8b 05 d0 e1 01 00    	mov    0x1e1d0(%rip),%eax        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    5254:	83 e8 02             	sub    $0x2,%eax
    5257:	83 e0 fd             	and    $0xfffffffd,%eax
    525a:	74 4c                	je     52a8 <__sprintf_chk@plt+0x5c8>
    525c:	89 f6                	mov    %esi,%esi
    525e:	a9 d0 01 00 00       	test   $0x1d0,%eax
    5263:	0f 85 c6 0c 00 00    	jne    5f2f <__sprintf_chk@plt+0x124f>
    5269:	c6 05 4a d4 01 00 01 	movb   $0x1,0x1d44a(%rip)        # 226ba <obstack_alloc_failed_handler@@Base+0x61a>
    5270:	31 c0                	xor    %eax,%eax
    5272:	88 05 41 d4 01 00    	mov    %al,0x1d441(%rip)        # 226b9 <obstack_alloc_failed_handler@@Base+0x619>
    5278:	80 25 3a d4 01 00 01 	andb   $0x1,0x1d43a(%rip)        # 226b9 <obstack_alloc_failed_handler@@Base+0x619>
    527f:	80 3d 32 d4 01 00 00 	cmpb   $0x0,0x1d432(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
    5286:	0f 85 6a 0f 00 00    	jne    61f6 <__sprintf_chk@plt+0x1516>
    528c:	80 3d 55 d3 01 00 00 	cmpb   $0x0,0x1d355(%rip)        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
    5293:	0f 85 49 ff c0 00    	jne    c151e2 <obstack_alloc_failed_handler@@Base+0xbf3142>
    5299:	bf 20 4e 00 00       	mov    $0x4e20,%edi
    529e:	45 89 f5             	mov    %r14d,%r13d
    52a1:	48 c7 05 2c d3 01 00 	movq   $0x64,0x1d32c(%rip)        # 225d8 <obstack_alloc_failed_handler@@Base+0x538>
    52a8:	64 00 00 00 
    52ac:	e8 5f 8b 00 00       	call   de10 <__sprintf_chk@plt+0x9130>
    52b1:	48 c7 05 0c d3 01 00 	movq   $0x0,0x1d30c(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    52b8:	00 00 00 00 
    52bc:	48 89 05 0d d3 01 00 	mov    %rax,0x1d30d(%rip)        # 225d0 <obstack_alloc_failed_handler@@Base+0x530>
    52c3:	e8 b8 4f 00 00       	call   a280 <__sprintf_chk@plt+0x55a0>
    52c8:	44 2b 6c 24 08       	sub    0x8(%rsp),%r13d
    52cd:	45 85 ed             	test   %r13d,%r13d
    52d0:	0f 8e ee 0a 00 00    	jle    5dc4 <__sprintf_chk@plt+0x10e4>
    52d6:	4c 63 64 24 08       	movslq 0x8(%rsp),%r12
    52db:	0f 1f 44 48 c1       	nopl   -0x3f(%rax,%rcx,2)
    52e0:	e9 30 3c 49 f7       	jmp    fffffffff7498f15 <obstack_alloc_failed_handler@@Base+0xfffffffff7476e75>
    52e5:	fa                   	cli    
    52e6:	0d d2 48 01 0f       	or     $0xf0148d2,%eax
    52eb:	8c 52 48             	mov    %ss,0x48(%rdx)
    52ee:	31 c2                	xor    %eax,%edx
    52f0:	d7                   	xlat   %ds:(%rbx)
    52f1:	ea                   	(bad)  
    52f2:	49 83 c4 01          	add    $0x1,%r12
    52f6:	e8 15 98 00 00       	call   eb10 <__sprintf_chk@plt+0x9e30>
    52fb:	45 39 e6             	cmp    %r12d,%r14d
    52fe:	7f 0f                	jg     530f <__sprintf_chk@plt+0x62f>
    5300:	84 2c 03             	test   %ch,(%rbx,%rax,1)
    5303:	00 00                	add    %al,(%rax)
    5305:	01 00                	add    %eax,(%rax)
    5307:	00 0f                	add    %cl,(%rdi)
    5309:	85 02                	test   %eax,(%rdx)
    530b:	0d 00 00 48 8b       	or     $0x8b480000,%eax
    5310:	05 4b d4 49 c1       	add    $0xc149d44b,%eax
    5315:	eb 40                	jmp    5357 <__sprintf_chk@plt+0x677>
    5317:	ed                   	in     (%dx),%eax
    5318:	01 49 89             	add    %ecx,-0x77(%rcx)
    531b:	c4                   	(bad)  
    531c:	0f 8e d7 0a 00 00    	jle    5df9 <__sprintf_chk@plt+0x1119>
    5322:	48 f7 f8             	idiv   %rax
    5325:	de ff                	fdivrp %st,%st(7)
    5327:	ff                   	(bad)  
    5328:	ff 84 13 01 00 00 49 	incl   0x49000001(%rbx,%rdx,1)
    532f:	bd 00 00 00 00       	mov    $0x0,%ebp
    5334:	00 00                	add    %al,(%rax)
    5336:	00 80 4c 8b 74 24    	add    %al,0x24748b4c(%rax)
    533c:	18 eb                	sbb    %ch,%bl
    533e:	43 90                	rex.XB xchg %eax,%r8d
    5340:	41 0f b6 54 24 10    	movzbl 0x10(%r12),%edx
    5346:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
    534b:	e8 70 c9 00 00       	call   11cc0 <_obstack_memory_used@@Base+0x1510>
    5350:	49 8b 3c 24          	mov    (%r12),%rdi
    5354:	e8 27 f3 ff ff       	call   4680 <free@plt>
    5359:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    535e:	e8 1d f3 ff ff       	call   4680 <free@plt>
    5363:	4c 89 e7             	mov    %r12,%rdi
    5366:	e8 15 f3 ff ff       	call   4680 <free@plt>
    536b:	4c 8b 25 ee d3 01 00 	mov    0x1d3ee(%rip),%r12        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    5372:	c6 05 ef d3 01 00 01 	movb   $0x1,0x1d3ef(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
    5379:	4d 85 e4             	test   %r12,%r12
    537c:	0f 84 bf 00 00 00    	je     5441 <__sprintf_chk@plt+0x761>
    5382:	49 8b 49 4d          	mov    0x4d(%r9),%rcx
    5386:	85 f3                	test   %esi,%ebx
    5388:	8b 1d aa d3 01 00    	mov    0x1d3aa(%rip),%ebx        # 22738 <obstack_alloc_failed_handler@@Base+0x698>
    538e:	49 8b 3c 24          	mov    (%r12),%rdi
    5392:	48 89 05 c7 d3 01 00 	mov    %rax,0x1d3c7(%rip)        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    5399:	48 85 db             	test   %rbx,%rbx
    539c:	74 a2                	je     5340 <__sprintf_chk@plt+0x660>
    539e:	48 85 ff             	test   %rdi,%rdi
    53a1:	75 9d                	jne    5340 <__sprintf_chk@plt+0x660>
    53a3:	48 8b 05 4e d3 01 00 	mov    0x1d34e(%rip),%rax        # 226f8 <obstack_alloc_failed_handler@@Base+0x658>
    53aa:	48 89 c2             	mov    %rax,%rdx
    53ad:	48 7c 54             	rex.W jl 5404 <__sprintf_chk@plt+0x724>
    53b0:	3c d3                	cmp    $0xd3,%al
    53b2:	01 00                	add    %eax,(%rax)
    53b4:	48 83 fa 0f          	cmp    $0xf,%rdx
    53b8:	0f 86 17 16 49 4c    	jbe    4c4969d5 <obstack_alloc_failed_handler@@Base+0x4c474935>
    53be:	21 e9                	and    %ebp,%ecx
    53c0:	11 ff                	adc    %edi,%edi
    53c2:	ff 01                	incl   (%rcx)
    53c4:	00 00                	add    %al,(%rax)
    53c6:	00 49 89             	add    %cl,-0x77(%rcx)
    53c9:	c0 8c b3 eb b3 00 15 	rorb   $0x24,0x1500b3eb(%rbx,%rsi,4)
    53d0:	24 
    53d1:	d3 01                	roll   %cl,(%rcx)
    53d3:	00 48 8b             	add    %cl,-0x75(%rax)
    53d6:	50                   	push   %rax
    53d7:	f0 48 8b 48 c1       	lock mov -0x3f(%rax),%rcx
    53dc:	e3 31                	jrcxz  540f <__sprintf_chk@plt+0x72f>
    53de:	54                   	push   %rsp
    53df:	24 50                	and    $0x50,%al
    53e1:	48 89 ea             	mov    %rbp,%rdx
    53e4:	48 89 44 4c 39       	mov    %rax,0x39(%rsp,%rcx,2)
    53e9:	0f 8c c9 fc ff ff    	jl     50b8 <__sprintf_chk@plt+0x3d8>
    53ef:	89 c7                	mov    %eax,%edi
    53f1:	48                   	rex.W
    53f2:	4c 09 d8             	or     %r11,%rax
    53f5:	84 8c 11 00 49 85 ff 	test   %cl,-0x7ab700(%rcx,%rdx,1)
    53fc:	44 24 48             	rex.R and $0x48,%al
    53ff:	48 83 6b 20 01       	subq   $0x1,0x20(%rbx)
    5404:	48 83 38 00          	cmpq   $0x0,(%rax)
    5408:	49 0f 8c 70 fc ff ff 	rex.WB jl 507f <__sprintf_chk@plt+0x39f>
    540f:	03 00                	add    (%rax),%eax
    5411:	00 6a f2             	add    %ch,-0xe(%rdx)
    5414:	ff                   	(bad)  
    5415:	ff 49 8b             	decl   -0x75(%rcx)
    5418:	3c 24                	cmp    $0x24,%al
    541a:	e8 61 f2 ff ff       	call   4680 <free@plt>
    541f:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    5424:	e8 57 f2 ff 4c       	call   4d004680 <obstack_alloc_failed_handler@@Base+0x4cfe25e0>
    5429:	85 ee                	test   %ebp,%esi
    542b:	e7 e8                	out    %eax,$0xe8
    542d:	4f                   	rex.WRXB
    542e:	f2 ff 4c 89 e3       	repnz decl -0x1d(%rcx,%rcx,4)
    5433:	25 28 d3 01 00       	and    $0x1d328,%eax
    5438:	4d 85 e4             	test   %r12,%r12
    543b:	0f 49 0f             	cmovns (%rdi),%ecx
    543e:	af                   	scas   %es:(%rdi),%eax
    543f:	c7                   	(bad)  
    5440:	ff 80 3d c0 ce 01    	incl   0x1cec03d(%rax)
    5446:	00 00                	add    %al,(%rax)
    5448:	74 0d                	je     5457 <__sprintf_chk@plt+0x777>
    544a:	80 3d 49 ff c5 49 ff 	cmpb   $0xff,0x49c5ff49(%rip)        # 49c6539a <obstack_alloc_failed_handler@@Base+0x49c432fa>
    5451:	c0 85 56 49 29 f4 49 	rolb   $0x49,-0xbd6b6aa(%rbp)
    5458:	c7 c6 4d 01 00 00    	mov    $0x14d,%esi
    545e:	0f 85 ba 0f 00 00    	jne    641e <__sprintf_chk@plt+0x173e>
    5464:	48 8b 3d cd d2 01 00 	mov    0x1d2cd(%rip),%rdi        # 22738 <obstack_alloc_failed_handler@@Base+0x698>
    546b:	48 85 ff             	test   %rdi,%rdi
    546e:	74 10                	je     5480 <__sprintf_chk@plt+0x7a0>
    5470:	49 c1 e1 03          	shl    $0x3,%r9
    5474:	00 00                	add    %al,(%rax)
    5476:	0f 8c 79 e9 d7 03    	jl     3d83df5 <obstack_alloc_failed_handler@@Base+0x3d61d55>
    547c:	00 00                	add    %al,(%rax)
    547e:	00 00                	add    %al,(%rax)
    5480:	8b 05 e6 d2 01 00    	mov    0x1d2e6(%rip),%eax        # 2276c <obstack_alloc_failed_handler@@Base+0x6cc>
    5486:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    548b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5492:	00 00 
    5494:	0f 85 eb 15 00 00    	jne    6a85 <__sprintf_chk@plt+0x1da5>
    549a:	48 83 c4 78          	add    $0x78,%rsp
    549e:	5b                   	pop    %rbx
    549f:	5d                   	pop    %rbp
    54a0:	41 5c                	pop    %r12
    54a2:	41 5d                	pop    %r13
    54a4:	41 5e                	pop    %r14
    54a6:	41 5f                	pop    %r15
    54a8:	c3                   	ret    
    54a9:	48 21 ca             	and    %rcx,%rdx
    54ac:	d0 cf                	ror    %bh
    54ae:	74 5c                	je     550c <__sprintf_chk@plt+0x82c>
    54b0:	e9 e9 cb fc ff       	jmp    fffffffffffd209e <obstack_alloc_failed_handler@@Base+0xfffffffffffafffe>
    54b5:	ff 00                	incl   (%rax)
    54b7:	49 c7 c1 b7 fc ff ff 	mov    $0xfffffffffffffcb7,%r9
    54be:	00 49 31             	add    %cl,0x31(%rcx)
    54c1:	fe 00                	incb   (%rax)
    54c3:	00 4d 31             	add    %cl,0x31(%rbp)
    54c6:	cc                   	int3   
    54c7:	ed                   	in     (%dx),%eax
    54c8:	6d                   	insl   (%dx),%es:(%rdi)
    54c9:	01 00                	add    %eax,(%rax)
    54cb:	49 39 ce             	cmp    %rcx,%r14
    54ce:	49 01 cf             	add    %rcx,%r15
    54d1:	66 03 00             	add    (%rax),%ax
    54d4:	00 e1                	add    %ah,%cl
    54d6:	31 f6                	xor    %esi,%esi
    54d8:	49 09 de             	or     %rbx,%r14
    54db:	c7 c1 ea fe ff ff    	mov    $0xfffffeea,%ecx
    54e1:	f6 ff                	idiv   %bh
    54e3:	ff                   	(bad)  
    54e4:	e9 42 fa ff ff       	jmp    4f2b <__sprintf_chk@plt+0x24b>
    54e9:	48 89 c7             	mov    %rax,%rdi
    54ec:	e8 5f 44 00 48       	call   48009950 <obstack_alloc_failed_handler@@Base+0x47fe78b0>
    54f1:	09 ca                	or     %ecx,%edx
    54f3:	0f 85 5a 49 c1 e9    	jne    ffffffffe9c19e53 <obstack_alloc_failed_handler@@Base+0xffffffffe9bf7db3>
    54f9:	3e 4d 0f             	ds rex.WRB (bad) 
    54fc:	0f eb d5             	por    %mm5,%mm2
    54ff:	00 00                	add    %al,(%rax)
    5501:	00 ff                	add    %bh,%bh
    5503:	ba 05 00 00 00       	mov    $0x5,%edx
    5508:	4d 01 c4             	add    %r8,%r12
    550b:	f1                   	int1   
    550c:	6d                   	insl   (%dx),%es:(%rdi)
    550d:	01 00                	add    %eax,(%rax)
    550f:	48 f7 fb             	idiv   %rbx
    5512:	e8 49 f3 ff ff       	call   4860 <dcgettext@plt>
    5517:	4c                   	rex.WR
    5518:	4d 89 db             	mov    %r11,%r11
    551b:	f6 31                	divb   (%rcx)
    551d:	ff 48 89             	decl   -0x77(%rax)
    5520:	c2 31 c0             	ret    $0xc031
    5523:	e8 78 f6 48 f7       	call   fffffffff7494ba0 <obstack_alloc_failed_handler@@Base+0xfffffffff7472b00>
    5528:	fb                   	sti    
    5529:	8c 4c fc ff          	mov    %cs,-0x1(%rsp,%rdi,8)
    552d:	ff 05 79 cd 01 00    	incl   0x1cd79(%rip)        # 222ac <obstack_alloc_failed_handler@@Base+0x20c>
    5533:	00 e8                	add    %ch,%al
    5535:	f7 49 09 c1 48 89 05 	testl  $0x58948c1,0x9(%rcx)
    553c:	4d 39 dc             	cmp    %r11,%r12
    553f:	00 41 83             	add    %al,-0x7d(%rcx)
    5542:	fc                   	cld    
    5543:	07                   	(bad)  
    5544:	0f 85 91 fb ff ff    	jne    50db <__sprintf_chk@plt+0x3fb>
    554a:	48                   	rex.W
    554b:	49                   	rex.WB
    554c:	4c 89 c8             	mov    %r9,%rax
    554f:	0d 6c cd 01 00       	or     $0x1cd6c,%eax
    5554:	48 0f 49 c1          	cmovns %rcx,%rax
    5558:	ea                   	(bad)  
    5559:	23 0c 89             	and    (%rcx,%rcx,4),%ecx
    555c:	f2 4c                	repnz rex.WR
    555e:	4c 21 cb             	and    %r9,%rbx
    5561:	01 31                	add    %esi,(%rcx)
    5563:	f2 89 51 0c          	repnz mov %edx,0xc(%rcx)
    5567:	e9 6f fb ff ff       	jmp    50db <__sprintf_chk@plt+0x3fb>
    556c:	48                   	rex.W
    556d:	49 c1 ee 35          	shr    $0x35,%r14
    5571:	01 00                	add    %eax,(%rax)
    5573:	49 c7 c0 13 fd ff ff 	mov    $0xfffffffffffffd13,%r8
    557a:	10 4c 31 49          	adc    %cl,0x49(%rcx,%rsi,1)
    557e:	c1 e9 14             	shr    $0x14,%ecx
    5581:	ff                   	(bad)  
    5582:	ff                   	(bad)  
    5583:	ff ca                	dec    %edx
    5585:	01 00                	add    %eax,(%rax)
    5587:	48 8d 0d 02 32 01 00 	lea    0x13202(%rip),%rcx        # 18790 <_obstack_memory_used@@Base+0x7fe0>
    558e:	4c 8d 05 4c 09 d8 00 	lea    0xd8094c(%rip),%r8        # d85ee1 <obstack_alloc_failed_handler@@Base+0xd63e41>
    5595:	48 8d 15 c4 bd 01 00 	lea    0x1bdc4(%rip),%rdx        # 21360 <_obstack_memory_used@@Base+0x10bb0>
    559c:	48 8d 48 0f          	lea    0xf(%rax),%rcx
    55a0:	af                   	scas   %es:(%rdi),%eax
    55a1:	fe 09                	decb   (%rcx)
    55a3:	cf                   	iret   
    55a4:	8b 30                	mov    (%rax),%esi
    55a6:	e8 55 4a 00 00       	call   a000 <__sprintf_chk@plt+0x5320>
    55ab:	48 8d 4c 0f af       	lea    -0x51(%rdi,%rcx,1),%rcx
    55b0:	cf                   	iret   
    55b1:	01 f3                	add    %esi,%ebx
    55b3:	04 81                	add    $0x81,%al
    55b5:	0f 8c 47 03 00 00    	jl     5902 <__sprintf_chk@plt+0xc22>
    55bb:	e9 40 fa ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    55c0:	48 8b 05 f1 49 85 d3 	mov    -0x2c7ab60f(%rip),%rax        # ffffffffd3859fb8 <obstack_alloc_failed_handler@@Base+0xffffffffd3837f18>
    55c7:	48 8d 0d e2 31 01 48 	lea    0x480131e2(%rip),%rcx        # 480187b0 <obstack_alloc_failed_handler@@Base+0x47ff6710>
    55ce:	f7 ff                	idiv   %edi
    55d0:	05 5b 4c 00 00       	add    $0x4c5b,%eax
    55d5:	48 8d 15 c4 bd 01 00 	lea    0x1bdc4(%rip),%rdx        # 213a0 <_obstack_memory_used@@Base+0x10bf0>
    55dc:	48 8d 3d f5 46 01 00 	lea    0x146f5(%rip),%rdi        # 19cd8 <_obstack_memory_used@@Base+0x9528>
    55e3:	48 8b 30             	mov    (%rax),%rsi
    55e6:	48 89 c0             	mov    %rax,%rax
    55e9:	c1 00 48             	roll   $0x48,(%rax)
    55ec:	8d 0d be 31 01 4d    	lea    0x4d0131be(%rip),%ecx        # 4d0187b0 <obstack_alloc_failed_handler@@Base+0x4cff6710>
    55f2:	89 49 ff             	mov    %ecx,-0x1(%rcx)
    55f5:	c3                   	ret    
    55f6:	01 8b 48 c1 e0 06    	add    %ecx,0x6e0c148(%rbx)
    55fc:	48 c1 e8 4d          	shr    $0x4d,%rax
    5600:	09 d8                	or     %ebx,%eax
    5602:	21 4c 0f af          	and    %ecx,-0x51(%rdi,%rcx,1)
    5606:	df 49 0f             	fisttps 0xf(%rcx)
    5609:	8f                   	(bad)  
    560a:	ed                   	in     (%dx),%eax
    560b:	01 00                	add    %eax,(%rax)
    560d:	00 00                	add    %al,(%rax)
    560f:	c7 05 48 c1 e6 3d 90 	movl   $0x90,0x3de6c148(%rip)        # 3de71761 <obstack_alloc_failed_handler@@Base+0x3de4f6c1>
    5616:	00 00 00 
    5619:	48 c7 05 8c cc 01 4d 	movq   $0xffffffffd7294885,0x4d01cc8c(%rip)        # 4d0222b0 <obstack_alloc_failed_handler@@Base+0x4d000210>
    5620:	85 48 29 d7 
    5624:	48 c7 05 49 ca 01 00 	movq   $0x48000001,0x1ca49(%rip)        # 22078 <_obstack_memory_used@@Base+0x118c8>
    562b:	01 00 00 48 
    562f:	89 d1                	mov    %edx,%ecx
    5631:	f9                   	stc    
    5632:	ff                   	(bad)  
    5633:	ff c6                	inc    %esi
    5635:	4d 89 cd             	mov    %r9,%r13
    5638:	01 00                	add    %eax,(%rax)
    563a:	48                   	rex.W
    563b:	49 c7 c3 05 01 00 00 	mov    $0x105,%r11
    5642:	05 71 c9 01 00       	add    $0x1c971,%eax
    5647:	4c 8d 05 e2 4b 49 f7 	lea    -0x8b6b41e(%rip),%r8        # fffffffff749a230 <obstack_alloc_failed_handler@@Base+0xfffffffff7478190>
    564e:	ff 31                	push   (%rcx)
    5650:	0d ab 30 01 00       	or     $0x130ab,%eax
    5655:	48 8d 15 e4 c3 01 00 	lea    0x1c3e4(%rip),%rdx        # 21a40 <_obstack_memory_used@@Base+0x11290>
    565c:	48 8d 3d b2 46 01 00 	lea    0x146b2(%rip),%rdi        # 19d15 <_obstack_memory_used@@Base+0x9565>
    5663:	48                   	rex.W
    5664:	48 39 d9             	cmp    %rbx,%rcx
    5667:	fc                   	cld    
    5668:	ff                   	(bad)  
    5669:	ff 00                	incl   (%rax)
    566b:	48 8d 35 8e 30 01 00 	lea    0x1308e(%rip),%rsi        # 18700 <_obstack_memory_used@@Base+0x7f50>
    5672:	8b 04 0f             	mov    (%rdi,%rcx,1),%eax
    5675:	85 40 01             	test   %eax,0x1(%rax)
    5678:	00 00                	add    %al,(%rax)
    567a:	ce                   	(bad)  
    567b:	e9 80 f9 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5680:	48 8b 05 0f 84 5c fc 	mov    -0x3a37bf1(%rip),%rax        # fffffffffc5cda96 <obstack_alloc_failed_handler@@Base+0xfffffffffc5ab9f6>
    5687:	ff                   	(bad)  
    5688:	ff 0d a2 30 01 00    	decl   0x130a2(%rip)        # 18730 <_obstack_memory_used@@Base+0x7f80>
    568e:	0f 8f fd fe ff ff    	jg     5591 <__sprintf_chk@plt+0x8b1>
    5694:	00 48 8d             	add    %cl,-0x73(%rax)
    5697:	15 e4 bb 01 00       	adc    $0x1bbe4,%eax
    569c:	48 8d 3d 0f 8c 02 ff 	lea    -0xfd73f1(%rip),%rdi        # ffffffffff02e2b2 <obstack_alloc_failed_handler@@Base+0xffffffffff00c212>
    56a3:	ff                   	(bad)  
    56a4:	ff 30                	push   (%rax)
    56a6:	e8 55 49 00 00       	call   a000 <__sprintf_chk@plt+0x5320>
    56ab:	4d 89 cc             	mov    %r9,%r12
    56ae:	48 f7 f8             	idiv   %rax
    56b1:	e0 8b                	loopne 563e <__sprintf_chk@plt+0x95e>
    56b3:	04 81                	add    $0x81,%al
    56b5:	89 05 4c 85 e9 e0    	mov    %eax,-0x1f167ab4(%rip)        # ffffffffe0e9dc07 <obstack_alloc_failed_handler@@Base+0xffffffffe0e7bb67>
    56bb:	fe                   	(bad)  
    56bc:	ff                   	(bad)  
    56bd:	ff 48 c1             	decl   -0x3f(%rax)
    56c0:	ea                   	(bad)  
    56c1:	18 ff                	sbb    %bh,%bh
    56c3:	f1                   	int1   
    56c4:	c8 01 00 48          	enter  $0x1,$0x48
    56c8:	8b 30                	mov    (%rax),%esi
    56ca:	48 85 f6             	test   %rsi,%rsi
    56cd:	0f 84 66 05 49 01    	je     1495c39 <obstack_alloc_failed_handler@@Base+0x1473b99>
    56d3:	d1 8d 0d 66 30 01    	rorl   0x130660d(%rbp)
    56d9:	48 85 ff             	test   %rdi,%rdi
    56dc:	84 9a fd ff ff 4c    	test   %bl,0x4cfffffd(%rdx)
    56e2:	8d 05 48 4b 00 00    	lea    0x4b48(%rip),%eax        # a230 <__sprintf_chk@plt+0x5550>
    56e8:	4c 89 f1             	mov    %r14,%rcx
    56eb:	08 46 01             	or     %al,0x1(%rsi)
    56ee:	00 e8                	add    %ch,%al
    56f0:	0c 49                	or     $0x49,%al
    56f2:	00 00                	add    %al,(%rax)
    56f4:	48 8d 0d 45 30 01 00 	lea    0x13045(%rip),%rcx        # 18740 <_obstack_memory_used@@Base+0x7f90>
    56fb:	8b 14 81             	mov    (%rcx,%rax,4),%edx
    56fe:	83 fa 49             	cmp    $0x49,%edx
    5701:	ff c2                	inc    %edx
    5703:	32 05 00 00 31 c0    	xor    -0x3fcf0000(%rip),%al        # ffffffffc0315709 <obstack_alloc_failed_handler@@Base+0xffffffffc02f3669>
    5709:	83 fa 02             	cmp    $0x2,%edx
    570c:	0f 85 2c 05 00 00    	jne    5c3e <__sprintf_chk@plt+0xf5e>
    5712:	bf 01 00 00 00       	mov    $0x1,%edi
    5717:	e8 64 f0 ff ff       	call   4780 <isatty@plt>
    571c:	49 31 f1             	xor    %rsi,%r9
    571f:	8f                   	(bad)  
    5720:	dd 00                	fldl   (%rax)
    5722:	00 00                	add    %al,(%rax)
    5724:	e9 15 05 00 00       	jmp    5c3e <__sprintf_chk@plt+0xf5e>
    5729:	bf 10 48 c1 e3       	mov    $0xe3c14810,%edi
    572e:	2e 48 c1 e2 0f       	cs shl $0xf,%rdx
    5733:	8f                   	(bad)  
    5734:	b0 fd                	mov    $0xfd,%al
    5736:	ff                   	(bad)  
    5737:	ff 01                	incl   (%rcx)
    5739:	00 48 8b             	add    %cl,-0x75(%rax)
    573c:	12 48 89             	adc    -0x77(%rax),%cl
    573f:	10 48 8b             	adc    %cl,-0x75(%rax)
    5742:	15 41 cd 01 49       	adc    $0x4901cd41,%eax
    5747:	21 dc                	and    %ebx,%esp
    5749:	05 3a cd 01 00       	add    $0x1cd3a,%eax
    574e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    5752:	e9 a9 f8 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5757:	48 ff c1             	inc    %rcx
    575a:	cf                   	iret   
    575b:	01 0f                	add    %ecx,(%rdi)
    575d:	84 f2                	test   %dh,%dl
    575f:	fc                   	cld    
    5760:	ff                   	(bad)  
    5761:	ff                   	(bad)  
    5762:	ff 48 8d             	decl   -0x73(%rax)
    5765:	05 f7 44 01 00       	add    $0x144f7,%eax
    576a:	c7 05 98 cb 01 00 00 	movl   $0x0,0x1cb98(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5771:	00 00 00 
    5774:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5779:	e9 82 e9 94 03       	jmp    3954100 <obstack_alloc_failed_handler@@Base+0x3932060>
    577e:	49 c7 c4 52 fe ff ff 	mov    $0xfffffffffffffe52,%r12
    5785:	48 8d 0d e4 2f 01 00 	lea    0x12fe4(%rip),%rcx        # 18770 <_obstack_memory_used@@Base+0x7fc0>
    578c:	4c 8d 05 9d 4a 00 00 	lea    0x4a9d(%rip),%r8        # a230 <__sprintf_chk@plt+0x5550>
    5793:	48 8d 15 86 bb 0f 85 	lea    -0x7af0447a(%rip),%rdx        # ffffffff85101320 <obstack_alloc_failed_handler@@Base+0xffffffff850df280>
    579a:	79 fd                	jns    5799 <__sprintf_chk@plt+0xab9>
    579c:	ff                   	(bad)  
    579d:	ff 45 01             	incl   0x1(%rbp)
    57a0:	00 48 8b             	add    %cl,-0x75(%rax)
    57a3:	30 e8                	xor    %ch,%al
    57a5:	57                   	push   %rdi
    57a6:	48 00 00             	rex.W add %al,(%rax)
    57a9:	48 8d 0d 49 ff c0 00 	lea    0xc0ff49(%rip),%rcx        # c156f9 <obstack_alloc_failed_handler@@Base+0xbf3659>
    57b0:	8b 04 81             	mov    (%rcx,%rax,4),%eax
    57b3:	89 05 53 cb 01 00    	mov    %eax,0x1cb53(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    57b9:	e9 42 f8 0f 84       	jmp    ffffffff84105000 <obstack_alloc_failed_handler@@Base+0xffffffff840e2f60>
    57be:	b6 fc                	mov    $0xfc,%dh
    57c0:	ff                   	(bad)  
    57c1:	ff 01                	incl   (%rcx)
    57c3:	00 49 29             	add    %cl,0x29(%rcx)
    57c6:	d0 0f                	rorb   (%rdi)
    57c8:	84 5b 03             	test   %bl,0x3(%rbx)
    57cb:	00 00                	add    %al,(%rax)
    57cd:	01 00                	add    %eax,(%rax)
    57cf:	00 cf                	add    %cl,%bh
    57d1:	01 00                	add    %eax,(%rax)
    57d3:	04 4d                	add    $0x4d,%al
    57d5:	29 ec                	sub    %ebp,%esp
    57d7:	e9 24 f8 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    57dc:	48 8b 05 d5 c7 01 00 	mov    0x1c7d5(%rip),%rax        # 21fb8 <_obstack_memory_used@@Base+0x11808>
    57e3:	48 8b 30             	mov    (%rax),%rsi
    57e6:	48 85 f6             	test   %rsi,%rsi
    57e9:	0f 8f 6b fe ff ff    	jg     565a <__sprintf_chk@plt+0x97a>
    57ef:	48 8d 0f             	lea    (%rdi),%rcx
    57f2:	4d 29 d0             	sub    %r10,%r8
    57f5:	00 00                	add    %al,(%rax)
    57f7:	8d 05 33 4a 00 0f    	lea    0xf004a33(%rip),%eax        # f00a230 <obstack_alloc_failed_handler@@Base+0xefe8190>
    57fd:	85 94 00 00 00 01 00 	test   %edx,0x10000(%rax,%rax,1)
    5804:	48 8d 3d e4 44 01 00 	lea    0x144e4(%rip),%rdi        # 19cef <_obstack_memory_used@@Base+0x953f>
    580b:	e8 f0 47 00 00       	call   a000 <__sprintf_chk@plt+0x5320>
    5810:	48                   	rex.W
    5811:	49 f7 fd             	idiv   %r13
    5814:	2f                   	(bad)  
    5815:	01 48 c1             	add    %ecx,-0x3f(%rax)
    5818:	e8 17 83 f8 01       	call   1f8db34 <obstack_alloc_failed_handler@@Base+0x1f6ba94>
    581d:	0f 4d 31             	cmovge (%rcx),%esi
    5820:	4d 21 48 01          	and    %r9,0x1(%r8)
    5824:	c3                   	ret    
    5825:	02 0f                	add    (%rdi),%cl
    5827:	84 e4                	test   %ah,%ah
    5829:	48 f7 fa             	idiv   %rdx
    582c:	ff c5                	inc    %ebp
    582e:	49 c1 e0 0c          	shl    $0xc,%r8
    5832:	48 85 d7             	test   %rdx,%rdi
    5835:	f7 ff                	idiv   %edi
    5837:	ff 48 8b             	decl   -0x75(%rax)
    583a:	05 79 c7 01 49       	add    $0x4901c779,%eax
    583f:	c1 e7 36             	shl    $0x36,%edi
    5842:	ce                   	(bad)  
    5843:	0f af 4c 21 c2       	imul   -0x3e(%rcx,%riz,1),%ecx
    5848:	49 29 d7             	sub    %rdx,%r15
    584b:	ca 11 00             	lret   $0x11
    584e:	00 8b 05 63 ca 01    	add    %cl,0x1ca6305(%rbx)
    5854:	00 89 05 4d 89 e5    	add    %cl,-0x1a76b2fb(%rcx)
    585a:	48 c7 c3 7e fc ff ff 	mov    $0xfffffffffffffc7e,%rbx
    5861:	49 03 00             	add    (%r8),%rax
    5864:	00 0f                	add    %cl,(%rdi)
    5866:	c8 4c 09 ee          	enter  $0x94c,$0xee
    586a:	92                   	xchg   %eax,%edx
    586b:	48 c1 48 0f af       	rorq   $0xaf,0xf(%rax)
    5870:	da db                	fcmovu %st(3),%st
    5872:	01 49 c1             	add    %ecx,-0x3f(%rcx)
    5875:	e8 22 89 f7 49       	call   49f7e19c <obstack_alloc_failed_handler@@Base+0x49f5c0fc>
    587a:	0f af f4             	imul   %esp,%esi
    587d:	ca 01 00             	lret   $0x1
    5880:	03 00                	add    (%rax),%eax
    5882:	00 48 ff             	add    %cl,-0x1(%rax)
    5885:	c3                   	ret    
    5886:	f7 ff                	idiv   %edi
    5888:	ff 48 8b             	decl   -0x75(%rax)
    588b:	05 28 c7 01 48       	add    $0x4801c728,%eax
    5890:	f7 ff                	idiv   %edi
    5892:	38 e8                	cmp    %ch,%al
    5894:	b8 40 00 00 84       	mov    $0x84000040,%eax
    5899:	c0 0f 85             	rorb   $0x85,(%rdi)
    589c:	60                   	(bad)  
    589d:	f7 0f 8c 1f 03 00    	testl  $0x31f8c,(%rdi)
    58a3:	00 c7                	add    %al,%bh
    58a5:	01 00                	add    %eax,(%rax)
    58a7:	48 8b 38             	mov    (%rax),%rdi
    58aa:	e8 01 43 00 00       	call   9bb0 <__sprintf_chk@plt+0x4ed0>
    58af:	49 f7 fc             	idiv   %r12
    58b2:	00 00                	add    %al,(%rax)
    58b4:	48                   	rex.W
    58b5:	49                   	rex.WB
    58b6:	48 c7 c3 0a fe ff ff 	mov    $0xfffffffffffffe0a,%rbx
    58bd:	48 89 c3             	mov    %rax,%rbx
    58c0:	e8 49 c1 e7 0f       	call   fe81a0e <obstack_alloc_failed_handler@@Base+0xfe5f96e>
    58c5:	8c 78 fc             	mov    %?,-0x4(%rax)
    58c8:	ff                   	(bad)  
    58c9:	ff                   	(bad)  
    58ca:	fd                   	std    
    58cb:	ff                   	(bad)  
    58cc:	ff 00                	incl   (%rax)
    58ce:	00 48 89             	add    %cl,-0x77(%rax)
    58d1:	c1 48 8d 15          	rorl   $0x15,-0x73(%rax)
    58d5:	e3 43                	jrcxz  591a <__sprintf_chk@plt+0xc3a>
    58d7:	01 00                	add    %eax,(%rax)
    58d9:	31 c0                	xor    %eax,%eax
    58db:	e8 c0 f2 ff 49       	call   4a004ba0 <obstack_alloc_failed_handler@@Base+0x49fe2b00>
    58e0:	4d 01 ef             	add    %r13,%r15
    58e3:	db 49 c7             	fisttpl -0x39(%rcx)
    58e6:	c1 be fc ff ff 44 7c 	sarl   $0x7c,0x44fffffc(%rsi)
    58ed:	08 49 ff             	or     %cl,-0x1(%rcx)
    58f0:	c0 f7 ff             	shl    $0xff,%bh
    58f3:	ff 49 c1             	decl   -0x3f(%rcx)
    58f6:	ee                   	out    %al,(%dx)
    58f7:	09 01                	or     %eax,(%rcx)
    58f9:	00 02                	add    %al,(%rdx)
    58fb:	00 00                	add    %al,(%rax)
    58fd:	00 e9                	add    %ch,%cl
    58ff:	fd                   	std    
    5900:	f6 ff                	idiv   %bh
    5902:	ff c7                	inc    %edi
    5904:	49 89 ce             	mov    %rcx,%r14
    5907:	01 00                	add    %eax,(%rax)
    5909:	4c 29 da             	sub    %r11,%rdx
    590c:	01 f4                	add    %esi,%esp
    590e:	44 24 08             	rex.R and $0x8,%al
    5911:	01 e9                	add    %ebp,%ecx
    5913:	e9 0f 8f a2 fc       	jmp    fffffffffca2e827 <obstack_alloc_failed_handler@@Base+0xfffffffffca0c787>
    5918:	ff                   	(bad)  
    5919:	ff c9                	dec    %ecx
    591b:	01 00                	add    %eax,(%rax)
    591d:	01 e9                	add    %ebp,%ecx
    591f:	dd f6                	(bad)  
    5921:	ff 4c 4c 01          	decl   0x1(%rsp,%rcx,2)
    5925:	ee                   	out    %al,(%dx)
    5926:	ff c5                	inc    %ebp
    5928:	00 01                	add    %al,(%rcx)
    592a:	e9 d1 f6 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    592f:	c6 05 4d 09 e9 f6 fc 	movb   $0xfc,-0x916f6b3(%rip)        # fffffffff6e96283 <obstack_alloc_failed_handler@@Base+0xfffffffff6e741e3>
    5936:	ff                   	(bad)  
    5937:	ff f6                	push   %rsi
    5939:	ff                   	(bad)  
    593a:	ff c7                	inc    %edi
    593c:	05 bf c9 01 00       	add    $0x1c9bf,%eax
    5941:	01 00                	add    %eax,(%rax)
    5943:	00 00                	add    %al,(%rax)
    5945:	0f 8f dd 02 00 00    	jg     5c28 <__sprintf_chk@plt+0xf48>
    594b:	05 0f 85 a7 00       	add    $0xa7850f,%eax
    5950:	00 00                	add    %al,(%rax)
    5952:	00 00                	add    %al,(%rax)
    5954:	c6 05 29 c7 01 00 00 	movb   $0x0,0x1c729(%rip)        # 22084 <_obstack_memory_used@@Base+0x118d4>
    595b:	e9 a0 f6 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5960:	c7 05 a2 c9 01 00 04 	movl   $0x4,0x1c9a2(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    5967:	00 00 00 
    596a:	74 27                	je     5993 <__sprintf_chk@plt+0xcb3>
    596c:	f6 ff                	idiv   %bh
    596e:	ff c6                	inc    %esi
    5970:	48 85 c2             	test   %rax,%rdx
    5973:	01 00                	add    %eax,(%rax)
    5975:	01 e9                	add    %ebp,%ecx
    5977:	85 f6                	test   %esi,%esi
    5979:	ff                   	(bad)  
    597a:	ff 4d 21             	decl   0x21(%rbp)
    597d:	49 09 c0             	or     %rax,%r8
    5980:	00 0f                	add    %cl,(%rdi)
    5982:	85 88 03 00 00 e1    	test   %ecx,-0x1efffffd(%rax)
    5988:	ca 01 00             	lret   $0x1
    598b:	b0 00                	mov    $0x0,%al
    598d:	00 00                	add    %al,(%rax)
    598f:	48 c7 05 7c 9a 49 c7 	movq   $0xffffffffffffd7c5,-0x38b66584(%rip)        # ffffffffc749f416 <obstack_alloc_failed_handler@@Base+0xffffffffc747d376>
    5996:	c5 d7 ff ff 
    599a:	ff c7                	inc    %edi
    599c:	05 d3 c6 4d 89       	add    $0x894dc6d3,%eax
    59a1:	fa                   	cli    
    59a2:	00 00                	add    %al,(%rax)
    59a4:	00 e9                	add    %ch,%cl
    59a6:	56                   	push   %rsi
    59a7:	f6 ff                	idiv   %bh
    59a9:	0f 8f f6 01 00 00    	jg     5ba5 <__sprintf_chk@plt+0xec5>
    59af:	0f 84 21 01 00 00    	je     5ad6 <__sprintf_chk@plt+0xdf6>
    59b5:	05 4c 85 fe 00       	add    $0xfe854c,%eax
    59ba:	00 e9                	add    %ch,%cl
    59bc:	40 f6 ff             	idiv   %dil
    59bf:	ff 83 3d 45 48 29    	incl   0x2948453d(%rbx)
    59c5:	e9 cf fe ff ff       	jmp    5899 <__sprintf_chk@plt+0xbb9>
    59ca:	ca 01 00             	lret   $0x1
    59cd:	02 48 85             	add    -0x7b(%rax),%cl
    59d0:	da c7                	fcmovb %st(7),%st
    59d2:	05 49 4d 48 c1       	add    $0xc1484d49,%eax
    59d7:	e0 2b                	loopne 5a04 <__sprintf_chk@plt+0xd24>
    59d9:	ff                   	(bad)  
    59da:	ff 0f                	decl   (%rdi)
    59dc:	84 4d 89             	test   %cl,-0x77(%rbp)
    59df:	db 00                	fildl  (%rax)
    59e1:	c6 05 28 c9 01 00 00 	movb   $0x0,0x1c928(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
    59e8:	c6 05 19 c9 01 00 00 	movb   $0x0,0x1c919(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    59ef:	c6                   	(bad)  
    59f0:	4c 01 c8             	add    %r9,%rax
    59f3:	01 00                	add    %eax,(%rax)
    59f5:	00 c6                	add    %al,%dh
    59f7:	44 24 0f             	rex.R and $0xf,%al
    59fa:	8c 37                	mov    %?,(%rdi)
    59fc:	fc                   	cld    
    59fd:	ff                   	(bad)  
    59fe:	ff                   	(bad)  
    59ff:	ff c6                	inc    %esi
    5a01:	05 3a cd 01 00       	add    $0x1cd3a,%eax
    5a06:	01 e9                	add    %ebp,%ecx
    5a08:	f4                   	hlt    
    5a09:	f5                   	cmc    
    5a0a:	49 01 f7             	add    %rsi,%r15
    5a0d:	05 0a da 01 00       	add    $0x1da0a,%eax
    5a12:	01 00                	add    %eax,(%rax)
    5a14:	00 00                	add    %al,(%rax)
    5a16:	49 89 df             	mov    %rbx,%r15
    5a19:	ff                   	(bad)  
    5a1a:	ff c7                	inc    %edi
    5a1c:	05 0f 85 39 03       	add    $0x339850f,%eax
    5a21:	00 00                	add    %al,(%rax)
    5a23:	00 00                	add    %al,(%rax)
    5a25:	e9 d6 f5 49 0f       	jmp    f4a5000 <obstack_alloc_failed_handler@@Base+0xf482f60>
    5a2a:	af                   	scas   %es:(%rdi),%eax
    5a2b:	d5                   	(bad)  
    5a2c:	64 ca 01 00          	fs lret $0x1
    5a30:	02 00                	add    (%rax),%al
    5a32:	00 00                	add    %al,(%rax)
    5a34:	e9 c7 f5 ff e9       	jmp    ffffffffea005000 <obstack_alloc_failed_handler@@Base+0xffffffffe9fe2f60>
    5a39:	8c 02                	mov    %es,(%rdx)
    5a3b:	00 00                	add    %al,(%rax)
    5a3d:	01 00                	add    %eax,(%rax)
    5a3f:	01 e9                	add    %ebp,%ecx
    5a41:	bb f5 ff ff c7       	mov    $0xc7fffff5,%ebx
    5a46:	4c 89 e7             	mov    %r12,%rdi
    5a49:	01 00                	add    %eax,(%rax)
    5a4b:	01 48 21             	add    %ecx,0x21(%rax)
    5a4e:	da 4c 21 ca          	fimull -0x36(%rcx,%riz,1)
    5a52:	21 f7                	and    %esi,%edi
    5a54:	4c 0f af 49 c7       	imul   -0x39(%rcx),%r9
    5a59:	c2 b1 fd             	ret    $0xfdb1
    5a5c:	49 01 cd             	add    %rcx,%r13
    5a5f:	ff                   	(bad)  
    5a60:	ff                   	(bad)  
    5a61:	ff                   	(bad)  
    5a62:	ff c6                	inc    %esi
    5a64:	44 24 08             	rex.R and $0x8,%al
    5a67:	01 e9                	add    %ebp,%ecx
    5a69:	4d 21 4c 49 c1       	and    %r9,-0x3f(%r9,%rcx,2)
    5a6e:	e1 08                	loope  5a78 <__sprintf_chk@plt+0xd98>
    5a70:	21 0f                	and    %ecx,(%rdi)
    5a72:	8f                   	(bad)  
    5a73:	7a 03                	jp     5a78 <__sprintf_chk@plt+0xd98>
    5a75:	00 00                	add    %al,(%rax)
    5a77:	4c                   	rex.WR
    5a78:	42                   	rex.X
    5a79:	49 c1 e9 19          	shr    $0x19,%r9
    5a7d:	ed                   	in     (%dx),%eax
    5a7e:	ff                   	(bad)  
    5a7f:	ff 48 8b             	decl   -0x75(%rax)
    5a82:	54                   	push   %rsp
    5a83:	24 18                	and    $0x18,%al
    5a85:	31 f6                	xor    %esi,%esi
    5a87:	48 7f cf             	rex.W jg 5a59 <__sprintf_chk@plt+0xd79>
    5a8a:	49 21 df             	and    %rbx,%r15
    5a8d:	00 48 89             	add    %cl,-0x77(%rax)
    5a90:	44 24 28             	rex.R and $0x28,%al
    5a93:	48 8b 05 1e c5 01 00 	mov    0x1c51e(%rip),%rax        # 21fb8 <_obstack_memory_used@@Base+0x11808>
    5a9a:	4c 8b 00             	mov    (%rax),%r8
    5a9d:	4c 89 c7             	mov    %r8,%rdi
    5aa0:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
    5aa5:	e8 06 f0 00 00       	call   14ab0 <_obstack_memory_used@@Base+0x4300>
    5aaa:	85 c0                	test   %eax,%eax
    5aac:	89 4c 21 e9          	mov    %ecx,-0x17(%rcx,%riz,1)
    5ab0:	29 c8                	sub    %ecx,%eax
    5ab2:	3e 02 00             	ds add (%rax),%al
    5ab5:	49 c1 ec 2f          	shr    $0x2f,%r12
    5ab9:	ff                   	(bad)  
    5aba:	ff 8b e9 55 ff ff    	decl   -0xaa17(%rbx)
    5ac0:	ff 48 c1             	decl   -0x3f(%rax)
    5ac3:	ea                   	(bad)  
    5ac4:	2a 89 c1 83 fa 01    	sub    0x1fa83c1(%rcx),%cl
    5aca:	0f 84 df 01 00 49    	je     49005caf <obstack_alloc_failed_handler@@Base+0x48fe3c0f>
    5ad0:	c1 e6 40             	shl    $0x40,%esi
    5ad3:	0f 4d 89 d9 00 00 c7 	cmovge -0x38ffff27(%rcx),%ecx
    5ada:	00 00                	add    %al,(%rax)
    5adc:	00 00                	add    %al,(%rax)
    5ade:	4c 85 de             	test   %r11,%rsi
    5ae1:	01 00                	add    %eax,(%rax)
    5ae3:	00 c7                	add    %al,%bh
    5ae5:	05 36 d9 01 00       	add    $0x1d936,%eax
    5aea:	02 00                	add    (%rax),%al
    5aec:	4d 39 ff             	cmp    %r15,%r15
    5aef:	0f 8c b9 03 00 eb    	jl     ffffffffeb005eae <obstack_alloc_failed_handler@@Base+0xffffffffeafe3e0e>
    5af5:	53                   	push   %rbx
    5af6:	ff                   	(bad)  
    5af7:	ff 48 ff             	decl   -0x1(%rax)
    5afa:	c0 c8 01             	ror    $0x1,%al
    5afd:	00 03                	add    %al,(%rbx)
    5aff:	00 00                	add    %al,(%rax)
    5b01:	00 e9                	add    %ch,%cl
    5b03:	f9                   	stc    
    5b04:	f4                   	hlt    
    5b05:	ff                   	(bad)  
    5b06:	ff c6                	inc    %esi
    5b08:	05 aa cb 01 00       	add    $0x1cbaa,%eax
    5b0d:	01 4d 85             	add    %ecx,-0x7b(%rbp)
    5b10:	f2 ff 4d 01          	repnz decl 0x1(%rbp)
    5b14:	c2 02 00             	ret    $0x2
    5b17:	0f 8c 47 02 00 00    	jl     5d64 <__sprintf_chk@plt+0x1084>
    5b1d:	e9 de f4 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5b22:	48                   	rex.W
    5b23:	48 ff c3             	inc    %rbx
    5b26:	48 c1 e6 49          	shl    $0x49,%rsi
    5b2a:	4d 85 dd             	test   %r11,%r13
    5b2d:	00 48 8d             	add    %cl,-0x73(%rax)
    5b30:	3d 8e 49 f7 fb       	cmp    $0xfbf7498e,%eax
    5b35:	e8 49 c1 e5 34       	call   34e61c83 <obstack_alloc_failed_handler@@Base+0x34e3fbe3>
    5b3a:	df c1                	ffreep %st(1)
    5b3c:	f4                   	hlt    
    5b3d:	ff 48 ff             	decl   -0x1(%rax)
    5b40:	c1 4f c9 01          	rorl   $0x1,-0x37(%rdi)
    5b44:	00 01                	add    %al,(%rcx)
    5b46:	00 00                	add    %al,(%rax)
    5b48:	00 e9                	add    %ch,%cl
    5b4a:	b2 f4                	mov    $0xf4,%dl
    5b4c:	ff 49 f7             	decl   -0x9(%rcx)
    5b4f:	fa                   	cli    
    5b50:	fe                   	(bad)  
    5b51:	fe                   	(bad)  
    5b52:	ff                   	(bad)  
    5b53:	ff 00                	incl   (%rax)
    5b55:	0f 84 a5 f4 ff ff    	je     5000 <__sprintf_chk@plt+0x320>
    5b5b:	c7                   	(bad)  
    5b5c:	49 ff c1             	inc    %r9
    5b5f:	01 00                	add    %eax,(%rax)
    5b61:	01 00                	add    %eax,(%rax)
    5b63:	49 c1 ed 0f          	shr    $0xf,%r13
    5b67:	84 73 fc             	test   %dh,-0x4(%rbx)
    5b6a:	ff                   	(bad)  
    5b6b:	ff                   	(bad)  
    5b6c:	39 cc                	cmp    %ecx,%esp
    5b6e:	36 c4 01 00 0f       	(bad)
    5b73:	49 c1 eb 03          	shr    $0x3,%r11
    5b77:	00 00                	add    %al,(%rax)
    5b79:	4d 89 c0             	mov    %r8,%r8
    5b7c:	49 0f 49 f7          	cmovns %r15,%rsi
    5b80:	fc                   	cld    
    5b81:	00 48 0f             	add    %cl,0xf(%rax)
    5b84:	af                   	scas   %es:(%rdi),%eax
    5b85:	c8 41 49 c7          	enter  $0x4941,$0xc7
    5b89:	c2 aa 01             	ret    $0x1aa
    5b8c:	00 00                	add    %al,(%rax)
    5b8e:	c2 02 00             	ret    $0x2
    5b91:	00 38                	add    %bh,(%rax)
    5b93:	48 8d 35 13 3e 01 00 	lea    0x13e13(%rip),%rsi        # 199ad <_obstack_memory_used@@Base+0x91fd>
    5b9a:	31 49 85             	xor    %ecx,-0x7b(%rcx)
    5b9d:	c9                   	leave  
    5b9e:	5f                   	pop    %rdi
    5b9f:	00 00                	add    %al,(%rax)
    5ba1:	31 ff                	xor    %edi,%edi
    5ba3:	e8 88 f0 ff ff       	call   4c30 <exit@plt>
    5ba8:	c7 05 92 cb 4d 89 f8 	movl   $0xf8,-0x76b2346e(%rip)        # ffffffff894e2744 <obstack_alloc_failed_handler@@Base+0xffffffff894c06a4>
    5baf:	00 00 00 
    5bb2:	0f 8c 8f 03 49 c1    	jl     ffffffffc1495f47 <obstack_alloc_failed_handler@@Base+0xffffffffc1473ea7>
    5bb8:	e7 7c                	out    %eax,$0x7c
    5bba:	d1 c3                	rol    %ebx
    5bbc:	01 00                	add    %eax,(%rax)
    5bbe:	48 8b 38             	mov    (%rax),%rdi
    5bc1:	48 f7 fb             	idiv   %rbx
    5bc4:	ee                   	out    %al,(%dx)
    5bc5:	00 e9                	add    %ch,%cl
    5bc7:	35 f4 ff 48 c7       	xor    $0xc748fff4,%eax
    5bcc:	c1 77 03 00          	shll   $0x0,0x3(%rdi)
    5bd0:	4d 85 d1             	test   %r10,%r9
    5bd3:	00 0f                	add    %cl,(%rdi)
    5bd5:	0f 8f 4b ff ff ff    	jg     5b26 <__sprintf_chk@plt+0xe46>
    5bdb:	05 0f 8f 4f fc       	add    $0xfc4f8f0f,%eax
    5be0:	ff                   	(bad)  
    5be1:	ff 1a                	lcall  *(%rdx)
    5be3:	f4                   	hlt    
    5be4:	ff                   	(bad)  
    5be5:	ff c7                	inc    %edi
    5be7:	05 d0 c6 01 00       	add    $0x1c6d0,%eax
    5bec:	05 00 4c 89 ea       	add    $0xea894c00,%eax
    5bf1:	0b f4                	or     %esp,%esi
    5bf3:	ff                   	(bad)  
    5bf4:	ff c7                	inc    %edi
    5bf6:	05 c1 c6 4d 29       	add    $0x294dc6c1,%eax
    5bfb:	db 00                	fildl  (%rax)
    5bfd:	00 00                	add    %al,(%rax)
    5bff:	e9 fc f3 ff ff       	jmp    5000 <__sprintf_chk@plt+0x320>
    5c04:	c6 05 35 cb 01 00 4d 	movb   $0x4d,0x1cb35(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
    5c0b:	31 d2                	xor    %edx,%edx
    5c0d:	f3 ff                	repz (bad) 
    5c0f:	ff                   	(bad)  
    5c10:	bf 01 00 00 00       	mov    $0x1,%edi
    5c15:	e8 66 eb 48 c7       	call   ffffffffc7494780 <obstack_alloc_failed_handler@@Base+0xffffffffc74726e0>
    5c1a:	c0 af fc 49 39 fb 28 	shrb   $0x28,-0x4c6b604(%rdi)
    5c21:	ff c6                	inc    %esi
    5c23:	05 df c6 4c 85       	add    $0x854cc6df,%eax
    5c28:	eb 48                	jmp    5c72 <__sprintf_chk@plt+0xf92>
    5c2a:	c7 05 44 c8 01 00 00 	movl   $0x0,0x1c844(%rip)        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    5c31:	00 00 00 
    5c34:	e9 c7 49 c7 c7       	jmp    ffffffffc7c7a600 <obstack_alloc_failed_handler@@Base+0xffffffffc7c58560>
    5c39:	ac                   	lods   %ds:(%rsi),%al
    5c3a:	fe                   	(bad)  
    5c3b:	ff                   	(bad)  
    5c3c:	ff ca                	dec    %edx
    5c3e:	88 05 a4 c9 01 00    	mov    %al,0x1c9a4(%rip)        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
    5c44:	80 48 c7 c7          	orb    $0xc7,-0x39(%rax)
    5c48:	f9                   	stc    
    5c49:	fc                   	cld    
    5c4a:	ff                   	(bad)  
    5c4b:	ff e7                	jmp    *%rdi
    5c4d:	f3 ff                	repz (bad) 
    5c4f:	ff 80 3d 91 49 89    	incl   -0x76b66ec3(%rax)
    5c55:	db 2f                	fldt   (%rdi)
    5c57:	48 f7 fb             	idiv   %rbx
    5c5a:	4d 39 ed             	cmp    %r13,%r13
    5c5d:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    5c63:	0f 84 f5 0b 00 00    	je     685e <__sprintf_chk@plt+0x1b7e>
    5c69:	4c 8b 6c 24 4d       	mov    0x4d(%rsp),%r13
    5c6e:	31 d8                	xor    %ebx,%eax
    5c70:	25 7b 2a 01 00       	and    $0x12a7b,%eax
    5c75:	eb 4c                	jmp    5cc3 <__sprintf_chk@plt+0xfe3>
    5c77:	89 e2                	mov    %esp,%edx
    5c79:	1f                   	(bad)  
    5c7a:	84 00                	test   %al,(%rax)
    5c7c:	4c 21 e1             	and    %r12,%rcx
    5c7f:	00 4d 09             	add    %cl,0x9(%rbp)
    5c82:	f9                   	stc    
    5c83:	06                   	(bad)  
    5c84:	ba 06 00 00 49       	mov    $0x49000006,%edx
    5c89:	c7 c1 96 03 00 00    	mov    $0x396,%ecx
    5c8f:	e8 48 4c 0f af       	call   ffffffffaf0fa8dc <obstack_alloc_failed_handler@@Base+0xffffffffaf0d883c>
    5c94:	d9 c0                	fld    %st(0)
    5c96:	0f 85 5a 0f 84 79    	jne    79846bf6 <obstack_alloc_failed_handler@@Base+0x79824b56>
    5c9c:	ff                   	(bad)  
    5c9d:	ff                   	(bad)  
    5c9e:	ff 48 ff             	decl   -0x1(%rax)
    5ca1:	c7                   	(bad)  
    5ca2:	4a 69 48 21 d0 00 49 	rex.WX imul $0x484900d0,0x21(%rax),%rcx
    5ca9:	48 
    5caa:	c1 e6 06             	shl    $0x6,%esi
    5cad:	84 08                	test   %cl,(%rax)
    5caf:	ff                   	(bad)  
    5cb0:	ff                   	(bad)  
    5cb1:	ff 00                	incl   (%rax)
    5cb3:	00 00                	add    %al,(%rax)
    5cb5:	4c 89 c6             	mov    %r8,%rsi
    5cb8:	48 8d 15 81 c3 01 00 	lea    0x1c381(%rip),%rdx        # 22040 <_obstack_memory_used@@Base+0x11890>
    5cbf:	49 39 f9             	cmp    %rdi,%r9
    5cc2:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    5cc6:	e8 35 ec 00 00       	call   14900 <_obstack_memory_used@@Base+0x4150>
    5ccb:	48 8b 4c 01 c3       	mov    -0x3d(%rcx,%rax,1),%rcx
    5cd0:	02 00                	add    (%rax),%al
    5cd2:	00 8b 31 83 fe 16    	add    %cl,0x16fe8331(%rbx)
    5cd8:	75 02                	jne    5cdc <__sprintf_chk@plt+0xffc>
    5cda:	31 f6                	xor    %esi,%esi
    5cdc:	48 74 9a             	rex.W je 5c79 <__sprintf_chk@plt+0xf99>
    5cdf:	24 28                	and    $0x28,%al
    5ce1:	48 8d 0f             	lea    (%rdi),%rcx
    5ce4:	8c 76 fc             	mov    %?,-0x4(%rsi)
    5ce7:	ff                   	(bad)  
    5ce8:	ff 02                	incl   (%rdx)
    5cea:	4d 0f af c1          	imul   %r9,%r8
    5cee:	0f 85 1c 01 00 00    	jne    5e10 <__sprintf_chk@plt+0x1130>
    5cf4:	4c 85 0f             	test   %r9,(%rdi)
    5cf7:	4d 31 eb             	xor    %r13,%r11
    5cfa:	ff                   	(bad)  
    5cfb:	ff                   	(bad)  
    5cfc:	78 e9                	js     5ce7 <__sprintf_chk@plt+0x1007>
    5cfe:	7e fd                	jle    5cfd <__sprintf_chk@plt+0x101d>
    5d00:	ff                   	(bad)  
    5d01:	ff f2                	push   %rdx
    5d03:	ff                   	(bad)  
    5d04:	ff 48 0f             	decl   0xf(%rax)
    5d07:	8f                   	(bad)  
    5d08:	21 03                	and    %eax,(%rbx)
    5d0a:	00 00                	add    %al,(%rax)
    5d0c:	01 48 4c             	add    %ecx,0x4c(%rax)
    5d0f:	39 0f                	cmp    %ecx,(%rdi)
    5d11:	8f                   	(bad)  
    5d12:	64 01 00             	add    %eax,%fs:(%rax)
    5d15:	00 00                	add    %al,(%rax)
    5d17:	66 0f ef ed          	pxor   %xmm5,%xmm5
    5d1b:	4d 21 ee             	and    %r13,%r14
    5d1e:	2a e9                	sub    %cl,%ch
    5d20:	2a 02                	sub    (%rdx),%al
    5d22:	00 00                	add    %al,(%rax)
    5d24:	48 85 c0             	test   %rax,%rax
    5d27:	0f 4d 09             	cmovge (%rcx),%ecx
    5d2a:	ff f2                	push   %rdx
    5d2c:	00 66 0f             	add    %ah,0xf(%rsi)
    5d2f:	ef                   	out    %eax,(%dx)
    5d30:	e4 f3                	in     $0xf3,%al
    5d32:	48 0f 4d 29          	cmovge (%rcx),%rbp
    5d36:	d0 8b 43 28 f3 0f    	rorb   0xff32843(%rbx)
    5d3c:	10 00                	adc    %al,(%rax)
    5d3e:	f3 0f 59 49 31       	mulss  0x31(%rcx),%xmm1
    5d43:	ff 48 f7             	decl   -0x9(%rax)
    5d46:	fa                   	cli    
    5d47:	c3                   	ret    
    5d48:	f6 ff                	idiv   %bh
    5d4a:	ff 48 89             	decl   -0x77(%rax)
    5d4d:	df e8                	fucomip %st(0),%st
    5d4f:	6d                   	insl   (%dx),%es:(%rdi)
    5d50:	69 00 00 48 c1 e8    	imul   $0xe8c14800,(%rax),%eax
    5d56:	1c f3                	sbb    $0xf3,%al
    5d58:	0f 10 00             	movups (%rax),%xmm0
    5d5b:	f3 0f 48 09          	repz cmovs (%rcx),%ecx
    5d5f:	48 c1 e9 14          	shr    $0x14,%rcx
    5d63:	89 0f                	mov    %ecx,(%rdi)
    5d65:	8f                   	(bad)  
    5d66:	f1                   	int1   
    5d67:	02 0f                	add    (%rdi),%cl
    5d69:	8c 49 01             	mov    %cs,0x1(%rcx)
    5d6c:	00 00                	add    %al,(%rax)
    5d6e:	78 10                	js     5d80 <__sprintf_chk@plt+0x10a0>
    5d70:	4c 21 fb             	and    %r15,%rbx
    5d73:	2d 49 c1 e6 4c       	sub    $0x4ce6c149,%eax
    5d78:	39 c6                	cmp    %eax,%esi
    5d7a:	6e                   	outsb  %ds:(%rsi),(%dx)
    5d7b:	67 01 00             	add    %eax,(%eax)
    5d7e:	0f 83 0b 0a 00 00    	jae    678f <__sprintf_chk@plt+0x1aaf>
    5d84:	f3 48 0f 2c f4       	cvttss2si %xmm4,%rsi
    5d89:	48 89 df             	mov    %rbx,%rdi
    5d8c:	e8 ff 6a 00 00       	call   c890 <__sprintf_chk@plt+0x7bb0>
    5d91:	84 c0                	test   %al,%al
    5d93:	0f 85 75 f6 ff ff    	jne    540e <__sprintf_chk@plt+0x72e>
    5d99:	48                   	rex.W
    5d9a:	49 ff c2             	inc    %r10
    5d9d:	eb 13                	jmp    5db2 <__sprintf_chk@plt+0x10d2>
    5d9f:	48 8b 47 49          	mov    0x49(%rdi),%rax
    5da3:	c1 0f 8c             	rorl   $0x8c,(%rdi)
    5da6:	3a 03                	cmp    (%rbx),%al
    5da8:	49 29 c7             	sub    %rax,%r15
    5dab:	09 c1                	or     %eax,%ecx
    5dad:	48 8b 7c 4d 01       	mov    0x1(%rbp,%rcx,2),%rdi
    5db2:	fc                   	cld    
    5db3:	85 ff                	test   %edi,%edi
    5db5:	75 e8                	jne    5d9f <__sprintf_chk@plt+0x10bf>
    5db7:	48 c7 43 49 31 d8 00 	movq   $0x4900d831,0x49(%rbx)
    5dbe:	49 
    5dbf:	39 cd                	cmp    %ecx,%ebp
    5dc1:	f6 ff                	idiv   %bh
    5dc3:	ff 80 3d 76 c9 01    	incl   0x1c9763d(%rax)
    5dc9:	00 00                	add    %al,(%rax)
    5dcb:	0f 85 e2 01 00 00    	jne    5fb3 <__sprintf_chk@plt+0x12d3>
    5dd1:	ba 01 00 00 00       	mov    $0x1,%edx
    5dd6:	31 f6                	xor    %esi,%esi
    5dd8:	48 8d 3d fc 3c 01 00 	lea    0x13cfc(%rip),%rdi        # 19adb <_obstack_memory_used@@Base+0x932b>
    5ddf:	e8 fc 88 00 00       	call   e6e0 <__sprintf_chk@plt+0x9a00>
    5de4:	48 83 3d dc c7 01 00 	cmpq   $0x0,0x1c7dc(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    5deb:	00 
    5dec:	4c 8b 25 6d c9 01 00 	mov    0x1c96d(%rip),%r12        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    5df3:	0f 85 17 02 00 00    	jne    6010 <__sprintf_chk@plt+0x1330>
    5df9:	4d 85 e4             	test   %r12,%r12
    5dfc:	0f 84 3f f6 ff ff    	je     5441 <__sprintf_chk@plt+0x761>
    5e02:	49 83 7c 24 18 00    	cmpq   $0x0,0x18(%r12)
    5e08:	0f 85 20 f5 ff ff    	jne    532e <__sprintf_chk@plt+0x64e>
    5e0e:	c6 05 53 c9 01 00 00 	movb   $0x0,0x1c953(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
    5e15:	e9 14 f5 ff ff       	jmp    532e <__sprintf_chk@plt+0x64e>
    5e1a:	48 89 ef             	mov    %rbp,%rdi
    5e1d:	e8 8e 3d 0f 8c       	call   ffffffff8c0f9bb0 <obstack_alloc_failed_handler@@Base+0xffffffff8c0d7b10>
    5e22:	83 fc ff             	cmp    $0xffffffff,%esp
    5e25:	ff 00                	incl   (%rax)
    5e27:	00 00                	add    %al,(%rax)
    5e29:	48 8d 35 10 65 01 00 	lea    0x16510(%rip),%rsi        # 1c340 <_obstack_memory_used@@Base+0xbb90>
    5e30:	49 89 c4             	mov    %rax,%r12
    5e33:	e8 28 ea ff ff       	call   4860 <dcgettext@plt>
    5e38:	4c 0f 84 a7 00 00 00 	rex.WR je 5ee6 <__sprintf_chk@plt+0x1206>
    5e3f:	02 49 39             	add    0x39(%rcx),%cl
    5e42:	d8 ed                	fsubr  %st(5),%st
    5e44:	02 00                	add    (%rax),%al
    5e46:	00 ff                	add    %bh,%bh
    5e48:	ff                   	(bad)  
    5e49:	e9 7f f1 ff ff       	jmp    4fcd <__sprintf_chk@plt+0x2ed>
    5e4e:	48 8d 3d f9 3e 01 00 	lea    0x13ef9(%rip),%rdi        # 19d4e <_obstack_memory_used@@Base+0x959e>
    5e55:	e8 66 e8 ff ff       	call   46c0 <getenv@plt>
    5e5a:	49 89 0f             	mov    %rcx,(%r15)
    5e5d:	85 5d fd             	test   %ebx,-0x3(%rbp)
    5e60:	ff                   	(bad)  
    5e61:	ff                   	(bad)  
    5e62:	3b 00                	cmp    (%rax),%eax
    5e64:	00 4d 85             	add    %cl,-0x7b(%rbp)
    5e67:	e4 0f                	in     $0xf,%al
    5e69:	84 7e 0a             	test   %bh,0xa(%rsi)
    5e6c:	00 00                	add    %al,(%rax)
    5e6e:	8b 05 44 4d 0f af    	mov    -0x50f0b2bc(%rip),%eax        # ffffffffaf0fabb8 <obstack_alloc_failed_handler@@Base+0xffffffffaf0d8b18>
    5e74:	e8 01 00 00 01       	call   1005e7a <obstack_alloc_failed_handler@@Base+0xfe3dda>
    5e79:	00 48 8b             	add    %cl,-0x75(%rax)
    5e7c:	05 2f c4 01 00       	add    $0x1c42f,%eax
    5e81:	48 89 05 f0 c1 0f 8f 	mov    %rax,-0x70f03e10(%rip)        # ffffffff8f102078 <obstack_alloc_failed_handler@@Base+0xffffffff8f0dffd8>
    5e88:	f5                   	cmc    
    5e89:	01 00                	add    %eax,(%rax)
    5e8b:	00 00                	add    %al,(%rax)
    5e8d:	0f 84 c9 f1 ff 49    	je     4a00505c <obstack_alloc_failed_handler@@Base+0x49fe2fbc>
    5e93:	c7 c6 8e 00 00 00    	mov    $0x8e,%esi
    5e99:	c6                   	(bad)  
    5e9a:	34 ff                	xor    $0xff,%al
    5e9c:	ff                   	(bad)  
    5e9d:	ff c7                	inc    %edi
    5e9f:	49 ff c7             	inc    %r15
    5ea2:	01 00                	add    %eax,(%rax)
    5ea4:	4d 29 c0             	sub    %r8,%r8
    5ea7:	00 e9                	add    %ch,%cl
    5ea9:	af                   	scas   %es:(%rdi),%eax
    5eaa:	f1                   	int1   
    5eab:	ff                   	(bad)  
    5eac:	ff 48 83             	decl   -0x7d(%rax)
    5eaf:	3d 0b c2 01 00       	cmp    $0x1c20b,%eax
    5eb4:	02 75 4c             	add    0x4c(%rbp),%dh
    5eb7:	0f af da             	imul   %edx,%ebx
    5eba:	0a c2                	or     %dl,%al
    5ebc:	01 00                	add    %eax,(%rax)
    5ebe:	e9 f1 fd ff ff       	jmp    5cb4 <__sprintf_chk@plt+0xfd4>
    5ec3:	0f 84 49 f7 f9 c0    	je     ffffffffc0fa5612 <obstack_alloc_failed_handler@@Base+0xffffffffc0f83572>
    5ec9:	48 8d 3d f0 49 0f af 	lea    -0x50f0b610(%rip),%rdi        # ffffffffaf0fa8c0 <obstack_alloc_failed_handler@@Base+0xffffffffaf0d8820>
    5ed0:	df cb                	(bad)  
    5ed2:	63 00                	movsxd (%rax),%eax
    5ed4:	00 48 8d             	add    %cl,-0x73(%rax)
    5ed7:	3d f4 c1 01 49       	cmp    $0x4901c1f4,%eax
    5edc:	c1 e0 07             	shl    $0x7,%eax
    5edf:	00 e9                	add    %ch,%cl
    5ee1:	54                   	push   %rsp
    5ee2:	fd                   	std    
    5ee3:	ff 0f                	decl   (%rdi)
    5ee5:	8c 51 ff             	mov    %ss,-0x1(%rcx)
    5ee8:	ff                   	(bad)  
    5ee9:	ff                   	(bad)  
    5eea:	38 e8                	cmp    %ch,%al
    5eec:	80 ed ff             	sub    $0xff,%ch
    5eef:	ff 31                	push   (%rcx)
    5ef1:	ff                   	(bad)  
    5ef2:	e8 09 20 00 00       	call   7f00 <__sprintf_chk@plt+0x3220>
    5ef7:	8b e9                	mov    %ecx,%ebp
    5ef9:	91                   	xchg   %eax,%ecx
    5efa:	fc                   	cld    
    5efb:	ff                   	(bad)  
    5efc:	ff 85 db 74 16 0f    	incl   0xf1674db(%rbp)
    5f02:	1f                   	(bad)  
    5f03:	80 00 00             	addb   $0x0,(%rax)
    5f06:	00 00                	add    %al,(%rax)
    5f08:	bf 13 00 00 00       	mov    $0x13,%edi
    5f0d:	e8 de e7 ff ff       	call   46f0 <raise@plt>
    5f12:	83 eb 01             	sub    $0x1,%ebx
    5f15:	75 48                	jne    5f5f <__sprintf_chk@plt+0x127f>
    5f17:	f7 fb                	idiv   %ebx
    5f19:	eb c8                	jmp    5ee3 <__sprintf_chk@plt+0x1203>
    5f1b:	01 00                	add    %eax,(%rax)
    5f1d:	85 ff                	test   %edi,%edi
    5f1f:	0f 84 32 f5 ff ff    	je     5457 <__sprintf_chk@plt+0x777>
    5f25:	e8 c6 e7 ff ff       	call   46f0 <raise@plt>
    5f2a:	e9 28 f5 ff ff       	jmp    5457 <__sprintf_chk@plt+0x777>
    5f2f:	80 3d ca c3 01 00 00 	cmpb   $0x0,0x1c3ca(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    5f36:	0f 85 2d f3 ff ff    	jne    5269 <__sprintf_chk@plt+0x589>
    5f3c:	80 3d cd c3 01 00 00 	cmpb   $0x0,0x1c3cd(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
    5f43:	0f 85 20 f3 ff ff    	jne    5269 <__sprintf_chk@plt+0x589>
    5f49:	80 3d f0 c7 01 00 00 	cmpb   $0x0,0x1c7f0(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
    5f50:	c6 05 63 c7 01 00 00 	movb   $0x0,0x1c763(%rip)        # 226ba <obstack_alloc_failed_handler@@Base+0x61a>
    5f57:	b8 7c 78 00 00       	mov    $0x787c,%eax
    5f5c:	0f 85 10 f3 ff ff    	jne    5272 <__sprintf_chk@plt+0x592>
    5f62:	80 3d 9f c3 01 00 00 	cmpb   $0x0,0x1c39f(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    5f69:	0f 85 03 f3 ff ff    	jne    5272 <__sprintf_chk@plt+0x592>
    5f6f:	83 3d 8e c3 01 00 00 	cmpl   $0x0,0x1c38e(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    5f76:	0f 85 f6 f2 ff ff    	jne    5272 <__sprintf_chk@plt+0x592>
    5f7c:	0f b6 05 c7 c7 01 00 	movzbl 0x1c7c7(%rip),%eax        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    5f83:	e9 ea f2 ff ff       	jmp    5272 <__sprintf_chk@plt+0x592>
    5f88:	48 0f 8f 9c 00 00 00 	rex.W jg 602b <__sprintf_chk@plt+0x134b>
    5f8f:	84 4c 21 d3          	test   %cl,-0x2d(%rcx,%riz,1)
    5f93:	ff 48 89             	decl   -0x77(%rax)
    5f96:	28 e9                	sub    %ch,%cl
    5f98:	1c ee                	sbb    $0xee,%al
    5f9a:	ff                   	(bad)  
    5f9b:	ff 85 d2 0f 84 b9    	incl   -0x467bf02e(%rbp)
    5fa1:	fc                   	cld    
    5fa2:	ff                   	(bad)  
    5fa3:	ff c7                	inc    %edi
    5fa5:	05 76 d4 01 00       	add    $0x1d476,%eax
    5faa:	04 00                	add    $0x0,%al
    5fac:	00 00                	add    %al,(%rax)
    5fae:	e9 f1 4c 21 d3       	jmp    ffffffffd321aca4 <obstack_alloc_failed_handler@@Base+0xffffffffd31f8c04>
    5fb3:	48 8d 0d 03 3c 01 48 	lea    0x48013c03(%rip),%rcx        # 48019bbd <obstack_alloc_failed_handler@@Base+0x47ff7b1d>
    5fba:	ff 49 29             	decl   0x29(%rcx)
    5fbd:	c9                   	leave  
    5fbe:	00 4d 85             	add    %cl,-0x7b(%rbp)
    5fc1:	d6                   	(bad)  
    5fc2:	00 00                	add    %al,(%rax)
    5fc4:	48 8d 3d 10 3b 01 00 	lea    0x13b10(%rip),%rdi        # 19adb <_obstack_memory_used@@Base+0x932b>
    5fcb:	e8 40 8b 00 00       	call   eb10 <__sprintf_chk@plt+0x9e30>
    5fd0:	e9 4d 39 dc ff       	jmp    ffffffffffdc9922 <obstack_alloc_failed_handler@@Base+0xffffffffffda7882>
    5fd5:	c6 44 49 c1 eb       	movb   $0xeb,-0x3f(%rcx,%rcx,2)
    5fda:	0d 21 f0 ff ff       	or     $0xfffff021,%eax
    5fdf:	80 3d 5b c7 01 00 00 	cmpb   $0x0,0x1c75b(%rip)        # 22741 <obstack_alloc_failed_handler@@Base+0x6a1>
    5fe6:	b8 02 00 00 00       	mov    $0x2,%eax
    5feb:	75 18                	jne    6005 <__sprintf_chk@plt+0x1325>
    5fed:	83 49 01 cf          	orl    $0xffffffcf,0x1(%rcx)
    5ff1:	01 00                	add    %eax,(%rax)
    5ff3:	03 74 0f 83          	add    -0x7d(%rdi,%rcx,1),%esi
    5ff7:	3d 0f 4c 29 f6       	cmp    $0xf6294c0f,%eax
    5ffc:	31 ff                	xor    %edi,%edi
    5ffe:	c0 49 09 ca          	rorb   $0xca,0x9(%rcx)
    6002:	83 48 c1 ef          	orl    $0xffffffef,-0x3f(%rax)
    6006:	21 af d5 01 0f 85    	and    %ebp,-0x7af0fe2b(%rdi)
    600c:	8f                   	(bad)  
    600d:	fc                   	cld    
    600e:	ff                   	(bad)  
    600f:	ff                   	(bad)  
    6010:	e8 ab 48 ff c0       	call   ffffffffc0ffa8c0 <obstack_alloc_failed_handler@@Base+0xffffffffc0fd8820>
    6015:	80 3d 25 c7 01 00 00 	cmpb   $0x0,0x1c725(%rip)        # 22741 <obstack_alloc_failed_handler@@Base+0x6a1>
    601c:	0f 84 4d 01 db 31    	je     31db616f <obstack_alloc_failed_handler@@Base+0x31d940cf>
    6022:	48 83 49 c7 c2       	orq    $0xffffffffffffffc2,-0x39(%rcx)
    6027:	ff                   	(bad)  
    6028:	fc                   	cld    
    6029:	ff                   	(bad)  
    602a:	ff                   	(bad)  
    602b:	ff                   	(bad)  
    602c:	ff f2                	push   %rdx
    602e:	ff                   	(bad)  
    602f:	ff                   	(bad)  
    6030:	e8 49 89 db 00       	call   dbe97e <obstack_alloc_failed_handler@@Base+0xd9c8de>
    6035:	48 83 3d 23 48 21 f8 	cmpq   $0x0,-0x7deb7dd(%rip)        # fffffffff821a860 <obstack_alloc_failed_handler@@Base+0xfffffffff81f87c0>
    603c:	00 
    603d:	0f 48 0f             	cmovs  (%rdi),%ecx
    6040:	af                   	scas   %es:(%rdi),%eax
    6041:	de ff                	fdivrp %st,%st(7)
    6043:	48                   	rex.W
    6044:	4c 31 e1             	xor    %r12,%rcx
    6047:	85 0f                	test   %ecx,(%rdi)
    6049:	8c b7 03 00 00 8b    	mov    %?,-0x74fffffd(%rdi)
    604f:	47 28 48 39          	rex.RXB sub %r9b,0x39(%r8)
    6053:	47 30 0f             	rex.RXB xor %r9b,(%r15)
    6056:	86 1a                	xchg   %bl,(%rdx)
    6058:	09 00                	or     %eax,(%rax)
    605a:	00 48 8d             	add    %cl,-0x73(%rax)
    605d:	50                   	push   %rax
    605e:	01 48 89             	add    %ecx,-0x77(%rax)
    6061:	57                   	push   %rdi
    6062:	28 c6                	sub    %al,%dh
    6064:	00 0a                	add    %cl,(%rdx)
    6066:	e9 49 c7 c1 ea       	jmp    ffffffffeac227b4 <obstack_alloc_failed_handler@@Base+0xffffffffeac00714>
    606b:	fe                   	(bad)  
    606c:	ff                   	(bad)  
    606d:	ff 48 c1             	decl   -0x3f(%rax)
    6070:	e3 2a                	jrcxz  609c <__sprintf_chk@plt+0x13bc>
    6072:	c6 01 00             	movb   $0x0,(%rcx)
    6075:	e9 a8 f2 ff ff       	jmp    5322 <__sprintf_chk@plt+0x642>
    607a:	31 c0                	xor    %eax,%eax
    607c:	48 8d 35 0f 84 27 01 	lea    0x127840f(%rip),%rsi        # 127e492 <obstack_alloc_failed_handler@@Base+0x125c3f2>
    6083:	00 00                	add    %al,(%rax)
    6085:	48 ff c2             	inc    %rdx
    6088:	b9 01 00 4c 0f       	mov    $0xf4c0001,%ecx
    608d:	af                   	scas   %es:(%rdi),%eax
    608e:	f8                   	clc    
    608f:	40 7f 26             	rex jg 60b8 <__sprintf_chk@plt+0x13d8>
    6092:	83 ea 30             	sub    $0x30,%edx
    6095:	83 fa 09             	cmp    $0x9,%edx
    6098:	76 1e                	jbe    60b8 <__sprintf_chk@plt+0x13d8>
    609a:	4d 85 d4             	test   %r10,%r12
    609d:	74 48                	je     60e7 <__sprintf_chk@plt+0x1407>
    609f:	48 09 c2             	or     %rax,%rdx
    60a2:	0f 8f 8d fe ff ff    	jg     5f35 <__sprintf_chk@plt+0x1255>
    60a8:	ff                   	(bad)  
    60a9:	ff                   	(bad)  
    60aa:	ff 83 f8 5f 0f 94    	incl   -0x6bf0a008(%rbx)
    60b0:	c2 09 d1             	ret    $0xd109
    60b3:	4d 31 f5             	xor    %r14,%r13
    60b6:	85 ea                	test   %ebp,%edx
    60b8:	4c 39 d6             	cmp    %r10,%rsi
    60bb:	48 83 c0 01          	add    $0x1,%rax
    60bf:	48 3d 00 01 00 00    	cmp    $0x100,%rax
    60c5:	74 2e                	je     60f5 <__sprintf_chk@plt+0x1415>
    60c7:	89 c2                	mov    %eax,%edx
    60c9:	48 0f 8f 4f fd ff ff 	rex.W jg 5e1f <__sprintf_chk@plt+0x113f>
    60d0:	50                   	push   %rax
    60d1:	9f                   	lahf   
    60d2:	b9 01 48 85 c1       	mov    $0xc1854801,%ecx
    60d7:	83 fa e9             	cmp    $0xffffffe9,%edx
    60da:	7e fc                	jle    60d8 <__sprintf_chk@plt+0x13f8>
    60dc:	ff                   	(bad)  
    60dd:	ff                   	(bad)  
    60de:	7e e9                	jle    60c9 <__sprintf_chk@plt+0x13e9>
    60e0:	62                   	(bad)  
    60e1:	fd                   	std    
    60e2:	ff                   	(bad)  
    60e3:	ff                   	(bad)  
    60e4:	fe 4d 29             	decb   0x29(%rbp)
    60e7:	cc                   	int3   
    60e8:	06                   	(bad)  
    60e9:	48 83 c0 01          	add    $0x1,%rax
    60ed:	48 3d 00 01 49 85    	cmp    $0xffffffff85490100,%rax
    60f3:	de 49 f7             	fimuls -0x9(%rcx)
    60f6:	fa                   	cli    
    60f7:	49 c1 ea 03          	shr    $0x3,%r10
    60fb:	01 00                	add    %eax,(%rax)
    60fd:	00 00                	add    %al,(%rax)
    60ff:	00 45 31             	add    %al,0x31(%rbp)
    6102:	ff 0f                	decl   (%rdi)
    6104:	1f                   	(bad)  
    6105:	44 00 00             	add    %r8b,(%rax)
    6108:	4d 85 ff             	test   %r15,%r15
    610b:	0f 48 c1             	cmovs  %ecx,%eax
    610e:	48 21 de             	and    %rbx,%rsi
    6111:	48 b8 49 85 fa 55 55 	movabs $0x5555555555fa8549,%rax
    6118:	55 55 55 
    611b:	49 39 c4             	cmp    %rax,%r12
    611e:	0f 48 01             	cmovs  (%rcx),%eax
    6121:	c0 85 df 4c 89 e0 48 	rolb   $0x48,-0x1f76b321(%rbp)
    6128:	d1 e8                	shr    %eax
    612a:	4d 8d 48 f7          	lea    -0x9(%r8),%r9
    612e:	fa                   	cli    
    612f:	4c 89 ff             	mov    %r15,%rdi
    6132:	4c 89 e6             	mov    %r12,%rsi
    6135:	e8 d6 e9 ff ff       	call   4b10 <realloc@plt>
    613a:	49 89 c7             	mov    %rax,%r15
    613d:	48 85 4c 09 c9       	test   %rcx,-0x37(%rcx,%rcx,1)
    6142:	93                   	xchg   %eax,%ebx
    6143:	00 00                	add    %al,(%rax)
    6145:	00 49 c1             	add    %cl,-0x3f(%rcx)
    6148:	e3 35                	jrcxz  617f <__sprintf_chk@plt+0x149f>
    614a:	f3 fe                	repz (bad) 
    614c:	ff 49 f7             	decl   -0x9(%rcx)
    614f:	fa                   	cli    
    6150:	e5 ff                	in     $0xff,%eax
    6152:	48 c1 e0 05          	shl    $0x5,%rax
    6156:	24 ff                	and    $0xff,%al
    6158:	4c 89 ff             	mov    %r15,%rdi
    615b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    6161:	49                   	rex.WB
    6162:	4d 21 ff             	and    %r15,%r15
    6165:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    6166:	e9 63 02 00 00       	jmp    63ce <__sprintf_chk@plt+0x16ee>
    616b:	0f af f9             	imul   %ecx,%edi
    616e:	3b 00                	cmp    (%rax),%eax
    6170:	4c 31 d6             	xor    %r10,%rsi
    6173:	89 ff                	mov    %edi,%edi
    6175:	48 8b 5c 24 49       	mov    0x49(%rsp),%rbx
    617a:	c7 c2 cc 01 00 00    	mov    $0x1cc,%edx
    6180:	4d 89 c5             	mov    %r8,%r13
    6183:	4c 39 e6             	cmp    %r12,%rsi
    6186:	48 c1 ea 2a          	shr    $0x2a,%rdx
    618a:	00 0f                	add    %cl,(%rdi)
    618c:	84 60 ff             	test   %ah,-0x1(%rax)
    618f:	ff                   	(bad)  
    6190:	ff 01                	incl   (%rcx)
    6192:	00 4d 29             	add    %cl,0x29(%rbp)
    6195:	4c 85 ca             	test   %r9,%rdx
    6198:	0f 1f 84 00 00 0f 8c 	nopl   -0x273f100(%rax,%rax,1)
    619f:	fd 
    61a0:	fd                   	std    
    61a1:	ff 4d 01             	decl   0x1(%rbp)
    61a4:	cf                   	iret   
    61a5:	f8                   	clc    
    61a6:	24 76                	and    $0x76,%al
    61a8:	37                   	(bad)  
    61a9:	4c 89 ff             	mov    %r15,%rdi
    61ac:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    61b1:	e8 ca e4 ff ff       	call   4680 <free@plt>
    61b6:	48 8d 05 0f 85 9a 01 	lea    0x19a850f(%rip),%rax        # 19ae6cc <obstack_alloc_failed_handler@@Base+0x198c62c>
    61bd:	00 00                	add    %al,(%rax)
    61bf:	39 f9                	cmp    %edi,%ecx
    61c1:	c4 01 49 01          	(bad)
    61c5:	c2 f0 ff             	ret    $0xfff0
    61c8:	ff 0f                	decl   (%rdi)
    61ca:	85 e2                	test   %esp,%edx
    61cc:	00 00                	add    %al,(%rax)
    61ce:	00 00                	add    %al,(%rax)
    61d0:	4d 85 e4             	test   %r12,%r12
    61d3:	0f 89 56 48 89 d1    	jns    ffffffffd189aa2f <obstack_alloc_failed_handler@@Base+0xffffffffd187898f>
    61d9:	e8 f2 7b 00 00       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    61de:	66 90                	xchg   %ax,%ax
    61e0:	48                   	rex.W
    61e1:	4c 0f af c6          	imul   %rsi,%r8
    61e5:	ff                   	(bad)  
    61e6:	ef                   	out    %eax,(%dx)
    61e7:	ff                   	(bad)  
    61e8:	ff                   	(bad)  
    61e9:	ff 48 0f             	decl   0xf(%rax)
    61ec:	a3 c3 0f 83 14 ff ff 	movabs %eax,0xebffffff14830fc3
    61f3:	ff eb 
    61f5:	b3 4c                	mov    $0x4c,%bl
    61f7:	8b 25 93 bd 7f 2f    	mov    0x2f7fbd93(%rip),%esp        # 2f801f90 <obstack_alloc_failed_handler@@Base+0x2f7dfef0>
    61fd:	4c 8b 2d cc bd 48 c1 	mov    -0x3eb74234(%rip),%r13        # ffffffffc1491fd0 <obstack_alloc_failed_handler@@Base+0xffffffffc146ff30>
    6204:	ea                   	(bad)  
    6205:	16                   	(bad)  
    6206:	ff c0                	inc    %eax
    6208:	48                   	rex.W
    6209:	4d 09 fb             	or     %r15,%r11
    620c:	c4 01 00 4d          	(bad)
    6210:	4c 89 ee             	mov    %r13,%rsi
    6213:	89 e9                	mov    %ebp,%ecx
    6215:	e8 66 9a 00 00       	call   fc80 <_obstack_begin@@Base>
    621a:	4d 89 e0             	mov    %r12,%r8
    621d:	4c 89 e9             	mov    %r13,%rcx
    6220:	31 d2                	xor    %edx,%edx
    6222:	48 29 f7             	sub    %rsi,%rdi
    6225:	4d 09 f7             	or     %r14,%r15
    6228:	c3                   	ret    
    6229:	01 00                	add    %eax,(%rax)
    622b:	e8 50 9a 00 00       	call   fc80 <_obstack_begin@@Base>
    6230:	e9 57 f0 ff 49       	jmp    4a00528c <obstack_alloc_failed_handler@@Base+0x49fe31ec>
    6235:	f7 f8                	idiv   %eax
    6237:	3d b0 3b 01 00       	cmp    $0x13bb0,%eax
    623c:	e8 7f 4d 31 e1       	call   ffffffffe131afc0 <obstack_alloc_failed_handler@@Base+0xffffffffe12f8f20>
    6241:	49 c1 e8 30          	shr    $0x30,%r8
    6245:	48                   	rex.W
    6246:	48 85 c0             	test   %rax,%rax
    6249:	0f 84 49 c7 c7 43    	je     43c82998 <obstack_alloc_failed_handler@@Base+0x43c608f8>
    624f:	00 00                	add    %al,(%rax)
    6251:	00 0f                	add    %cl,(%rdi)
    6253:	84 4d 03             	test   %cl,0x3(%rbp)
    6256:	00 00                	add    %al,(%rax)
    6258:	4d 21 c8             	and    %r9,%r8
    625b:	e6 48                	out    %al,$0x48
    625d:	31 c3                	xor    %eax,%ebx
    625f:	65 3f                	gs (bad) 
    6261:	3f                   	(bad)  
    6262:	c6 44 24 67 00       	movb   $0x0,0x67(%rsp)
    6267:	e8 34 49 c7 c2       	call   ffffffffc2c7aba0 <obstack_alloc_failed_handler@@Base+0xffffffffc2c58b00>
    626c:	08 03                	or     %al,(%rbx)
    626e:	00 00                	add    %al,(%rax)
    6270:	75 83                	jne    61f5 <__sprintf_chk@plt+0x1515>
    6272:	00 49 09             	add    %cl,0x9(%rcx)
    6275:	f3 0f 84 a6 fc ff ff 	repz je 5f22 <__sprintf_chk@plt+0x1242>
    627c:	48 c1 ea 0d          	shr    $0xd,%rdx
    6280:	04 4c                	add    $0x4c,%al
    6282:	0f af f8             	imul   %eax,%edi
    6285:	84 49 09             	test   %cl,0x9(%rcx)
    6288:	ff 00                	incl   (%rax)
    628a:	3c 3a                	cmp    $0x3a,%al
    628c:	0f 84 1c 05 00 00    	je     67ae <__sprintf_chk@plt+0x1ace>
    6292:	84 c0                	test   %al,%al
    6294:	0f 84 14 4d 39 d1    	je     ffffffffd139afae <obstack_alloc_failed_handler@@Base+0xffffffffd1378f0e>
    629a:	7f 7e                	jg     631a <__sprintf_chk@plt+0x163a>
    629c:	af                   	scas   %es:(%rdi),%eax
    629d:	f8                   	clc    
    629e:	41 0f b6 e9          	movzbl %r9b,%ebp
    62a2:	d9 fd                	fscale 
    62a4:	ff                   	(bad)  
    62a5:	ff 0f                	decl   (%rdi)
    62a7:	84 b4 00 00 00 0f 8c 	test   %dh,-0x73f10000(%rax,%rax,1)
    62ae:	c1 fe ff             	sar    $0xff,%esi
    62b1:	ff 21                	jmp    *(%rcx)
    62b3:	c6 03 48             	movb   $0x48,(%rbx)
    62b6:	89 0f                	mov    %ecx,(%rdi)
    62b8:	8f 49 c1 eb          	(bad)
    62bc:	02 24 02             	add    (%rdx,%rax,1),%ah
    62bf:	3d 0f 85 9a 49       	cmp    $0x499a850f,%eax
    62c4:	21 f8                	and    %edi,%eax
    62c6:	45 31 4c 39 e0       	xor    %r9d,-0x20(%r9,%rdi,1)
    62cb:	35 9a 0f 8c 86       	xor    $0x868c0f9a,%eax
    62d0:	fd                   	std    
    62d1:	ff                   	(bad)  
    62d2:	ff 49 09             	decl   0x9(%rcx)
    62d5:	f3 1d 66 0f 1f 0f    	repz sbb $0xf1f0f66,%eax
    62db:	84 e9                	test   %ch,%cl
    62dd:	85 01                	test   %eax,(%rcx)
    62df:	00 00                	add    %al,(%rax)
    62e1:	83 c5 01             	add    $0x1,%ebp
    62e4:	48 8d 05 75 b6 01 00 	lea    0x1b675(%rip),%rax        # 21960 <_obstack_memory_used@@Base+0x111b0>
    62eb:	4a 8b 34 e8          	mov    (%rax,%r13,8),%rsi
    62ef:	48                   	rex.W
    62f0:	49 c1 e2 07          	shl    $0x7,%r10
    62f4:	4c 89 e7             	mov    %r12,%rdi
    62f7:	e8 f4 e6 ff ff       	call   49f0 <strcmp@plt>
    62fc:	49 89 4d 01          	mov    %rcx,0x1(%r13)
    6300:	4d 85 c2             	test   %r8,%r10
    6303:	af                   	scas   %es:(%rdi),%eax
    6304:	e7 05                	out    %eax,$0x5
    6306:	b6 bd                	mov    $0xbd,%dh
    6308:	01 e9                	add    %ebp,%ecx
    630a:	af                   	scas   %es:(%rdi),%eax
    630b:	01 00                	add    %eax,(%rax)
    630d:	00 ee                	add    %ch,%dh
    630f:	48 c1 e1 04          	shl    $0x4,%rcx
    6313:	49 c1 e7 0c          	shl    $0xc,%r15
    6317:	18 48 48             	sbb    %cl,0x48(%rax)
    631a:	ff c3                	inc    %ebx
    631c:	8b 44 24 50          	mov    0x50(%rsp),%eax
    6320:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6324:	e8 47 09 49 09       	call   9496c70 <obstack_alloc_failed_handler@@Base+0x9474bd0>
    6329:	c0 c0 0f             	rol    $0xf,%al
    632c:	85 47 ff             	test   %eax,-0x1(%rdi)
    632f:	ff 49 0f             	decl   0xf(%rcx)
    6332:	af                   	scas   %es:(%rdi),%eax
    6333:	fd                   	std    
    6334:	e8 77 38 49 c1       	call   ffffffffc1499bb0 <obstack_alloc_failed_handler@@Base+0xffffffffc1477b10>
    6339:	e3 31                	jrcxz  636c <__sprintf_chk@plt+0x168c>
    633b:	00 00                	add    %al,(%rax)
    633d:	00 48 c7             	add    %cl,-0x39(%rax)
    6340:	75 1b                	jne    635d <__sprintf_chk@plt+0x167d>
    6342:	01 00                	add    %eax,(%rax)
    6344:	00 31                	add    %dh,(%rcx)
    6346:	ff 49 89             	decl   -0x77(%rcx)
    6349:	49 c7                	rex.WB (bad) 
    634b:	4d 01 e4             	add    %r12,%r12
    634e:	00 00                	add    %al,(%rax)
    6350:	89 e9                	mov    %ebp,%ecx
    6352:	31 f6                	xor    %esi,%esi
    6354:	31 ff                	xor    %edi,%edi
    6356:	48 89 c2             	mov    %rax,%rdx
    6359:	31 c0                	xor    %eax,%eax
    635b:	48 09 f3             	or     %rsi,%rbx
    635e:	ff                   	(bad)  
    635f:	ff                   	(bad)  
    6360:	ba 05 48 c1 ea       	mov    $0xeac14805,%edx
    6365:	1d 31 e3 7c 60       	sbb    $0x607ce331,%eax
    636a:	01 49 49             	add    %ecx,0x49(%rcx)
    636d:	48 f7 ff             	idiv   %rdi
    6370:	e4 ff                	in     $0xff,%al
    6372:	48                   	rex.W
    6373:	48 09 f0             	or     %rsi,%rax
    6376:	00 00                	add    %al,(%rax)
    6378:	4d 29 ef             	sub    %r13,%r15
    637b:	c0 49 f7 f8          	rorb   $0xf8,-0x9(%rcx)
    637f:	f8                   	clc    
    6380:	02 00                	add    (%rax),%al
    6382:	00 3d 20 c1 4c 21    	add    %bh,0x214cc120(%rip)        # 214d24a8 <obstack_alloc_failed_handler@@Base+0x214b0408>
    6388:	eb 27                	jmp    63b1 <__sprintf_chk@plt+0x16d1>
    638a:	e2 ff                	loop   638b <__sprintf_chk@plt+0x16ab>
    638c:	ff 48 48             	decl   0x48(%rax)
    638f:	29 fe                	sub    %edi,%esi
    6391:	c1 01 00             	roll   $0x0,(%rcx)
    6394:	eb 0c                	jmp    63a2 <__sprintf_chk@plt+0x16c2>
    6396:	4c 0f 8f 9b fc ff ff 	rex.WR jg 6038 <__sprintf_chk@plt+0x1358>
    639d:	03 00                	add    (%rax),%eax
    639f:	00 49 c7             	add    %cl,-0x39(%rcx)
    63a2:	c3                   	ret    
    63a3:	4d 39 ef             	cmp    %r13,%r15
    63a6:	00 c6                	add    %al,%dh
    63a8:	05 5a bf 01 00       	add    $0x1bf5a,%eax
    63ad:	00 48 83             	add    %cl,-0x7d(%rax)
    63b0:	49 c7 c6 28 fe ff ff 	mov    $0xfffffffffffffe28,%r14
    63b7:	84 4a 0f             	test   %cl,0xf(%rdx)
    63ba:	84 5e fe             	test   %bl,-0x2(%rsi)
    63bd:	ff                   	(bad)  
    63be:	ff c3                	inc    %ebx
    63c0:	4d 39 da             	cmp    %r11,%r10
    63c3:	0f 85 fe ed ff ff    	jne    51c7 <__sprintf_chk@plt+0x4e7>
    63c9:	75 02                	jne    63cd <__sprintf_chk@plt+0x16ed>
    63cb:	38 bf 01 00 00 0f    	cmp    %bh,0xf000001(%rdi)
    63d1:	84 f8                	test   %bh,%al
    63d3:	ed                   	in     (%dx),%eax
    63d4:	ff                   	(bad)  
    63d5:	ff                   	(bad)  
    63d6:	bf 0d 00 00 00       	mov    $0xd,%edi
    63db:	49 c1 e1 2c          	shl    $0x2c,%r9
    63df:	00 84 48 c7 c0 75 03 	add    %al,0x375c0c7(%rax,%rcx,2)
    63e6:	00 00                	add    %al,(%rax)
    63e8:	bf 0e 48 ff c6       	mov    $0xc6ff480e,%edi
    63ed:	e8 2e 5d 00 00       	call   c120 <__sprintf_chk@plt+0x7440>
    63f2:	84 0f                	test   %cl,(%rdi)
    63f4:	84 a1 fc ff ff 00    	test   %ah,0xfffffc(%rcx)
    63fa:	bf 0c 00 00 00       	mov    $0xc,%edi
    63ff:	4d 01 da             	add    %r11,%r10
    6402:	49 ff c1             	inc    %r9
    6405:	b3 fd                	mov    $0xfd,%bl
    6407:	ff                   	(bad)  
    6408:	ff                   	(bad)  
    6409:	ed                   	in     (%dx),%eax
    640a:	ff                   	(bad)  
    640b:	ff 83 3d f9 be 01    	incl   0x1bef93d(%rbx)
    6411:	00 00                	add    %al,(%rax)
    6413:	0f 84 ae ed ff ff    	je     51c7 <__sprintf_chk@plt+0x4e7>
    6419:	e9 b0 ed ff ff       	jmp    51ce <__sprintf_chk@plt+0x4ee>
    641e:	48 8d 35 3b c2 01 00 	lea    0x1c23b(%rip),%rsi        # 22660 <obstack_alloc_failed_handler@@Base+0x5c0>
    6425:	0f 85 90 01 00 00    	jne    65bb <__sprintf_chk@plt+0x18db>
    642b:	00 e8                	add    %ch,%al
    642d:	7f 0e                	jg     643d <__sprintf_chk@plt+0x175d>
    642f:	00 00                	add    %al,(%rax)
    6431:	48 8d 35 c8 c1 01 00 	lea    0x1c1c8(%rip),%rsi        # 22600 <obstack_alloc_failed_handler@@Base+0x560>
    6438:	48 8d 75 04          	lea    0x4(%rbp),%rsi
    643c:	39 4d 85             	cmp    %ecx,-0x7b(%rbp)
    643f:	e3 6c                	jrcxz  64ad <__sprintf_chk@plt+0x17cd>
    6441:	48                   	rex.W
    6442:	4d 39 ef             	cmp    %r13,%r15
    6445:	8b 05 75 c1 01 00    	mov    0x1c175(%rip),%eax        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
    644b:	48 85 4d 85          	test   %rcx,-0x7b(%rbp)
    644f:	48 c7 c2 16 49 f7 f8 	mov    $0xfffffffff8f74916,%rdx
    6456:	48 8d 05 4d 29 f1 00 	lea    0xf1294d(%rip),%rax        # f18daa <obstack_alloc_failed_handler@@Base+0xef6d0a>
    645d:	48 8d 35 4c 0f 48 09 	lea    0x9480f4c(%rip),%rsi        # 94873b0 <obstack_alloc_failed_handler@@Base+0x9465310>
    6464:	d1 00                	roll   (%rax)
    6466:	00 00                	add    %al,(%rax)
    6468:	4c 85 d6             	test   %r10,%rsi
    646b:	01 00                	add    %eax,(%rax)
    646d:	00 c0                	add    %al,%al
    646f:	e8 cc e6 ff ff       	call   4b40 <__printf_chk@plt>
    6474:	e9 eb ef ff ff       	jmp    5464 <__sprintf_chk@plt+0x784>
    6479:	48 8d 05 40 be 01 00 	lea    0x1be40(%rip),%rax        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    6480:	e9 ce 0f 8f 45       	jmp    458f7453 <obstack_alloc_failed_handler@@Base+0x458d53b3>
    6485:	03 00                	add    (%rax),%eax
    6487:	00 00                	add    %al,(%rax)
    6489:	00 e8                	add    %ch,%al
    648b:	f1                   	int1   
    648c:	e2 ff                	loop   648d <__sprintf_chk@plt+0x17ad>
    648e:	48 ff c6             	inc    %rsi
    6491:	35 19 c0 83 c0       	xor    $0xc083c019,%eax
    6496:	02 89 05 6f be 01    	add    0x1be6f05(%rcx),%cl
    649c:	00 e9                	add    %ch,%cl
    649e:	3f                   	(bad)  
    649f:	f5                   	cmc    
    64a0:	ff 49 29             	decl   0x29(%rcx)
    64a3:	f5                   	cmc    
    64a4:	c2 83 e0             	ret    $0xe083
    64a7:	01 66 0f             	add    %esp,0xf(%rsi)
    64aa:	ef                   	out    %eax,(%dx)
    64ab:	e4 48                	in     $0x48,%al
    64ad:	d1 ea                	shr    %edx
    64af:	48 09 c2             	or     %rax,%rdx
    64b2:	f3 48 0f 2a e2       	cvtsi2ss %rdx,%xmm4
    64b7:	f3 0f 58 4d 01       	addss  0x1(%rbp),%xmm1
    64bc:	d0 f8                	sar    %al
    64be:	ff 49 0f             	decl   0xf(%rcx)
    64c1:	af                   	scas   %es:(%rdi),%eax
    64c2:	fe 83 e0 01 66 0f    	incb   0xf6601e0(%rbx)
    64c8:	e9 c9 fc ff 48       	jmp    49006196 <obstack_alloc_failed_handler@@Base+0x48fe40f6>
    64cd:	89 f3                	mov    %esi,%ebx
    64cf:	c2 f3 48             	ret    $0x48f3
    64d2:	0f 2a ea             	cvtpi2ps %mm2,%xmm5
    64d5:	f3 0f 58 ed          	addss  %xmm5,%xmm5
    64d9:	e9 42 f8 ff ff       	jmp    5d20 <__sprintf_chk@plt+0x1040>
    64de:	c6 05 c8 bd 01 00 01 	movb   $0x1,0x1bdc8(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
    64e5:	e8 46 79 00 00       	call   de30 <__sprintf_chk@plt+0x9150>
    64ea:	48 89 05 cf c0 01 00 	mov    %rax,0x1c0cf(%rip)        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
    64f1:	e9 e5 eb ff ff       	jmp    50db <__sprintf_chk@plt+0x3fb>
    64f6:	41 80 7d 00 2b       	cmpb   $0x2b,0x0(%r13)
    64fb:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    6500:	4d 39 d2             	cmp    %r10,%r10
    6503:	4d 39 dd             	cmp    %r11,%r13
    6506:	4c 8d 25 33 ad 01 00 	lea    0x1ad33(%rip),%r12        # 21240 <_obstack_memory_used@@Base+0x10a90>
    650d:	0f 8c 7f 00 00 00    	jl     6592 <__sprintf_chk@plt+0x18b2>
    6513:	8d 15 c7 21 49 c1    	lea    -0x3eb6de39(%rip),%edx        # ffffffffc14986e0 <obstack_alloc_failed_handler@@Base+0xffffffffc1476640>
    6519:	ea                   	(bad)  
    651a:	48 ff c3             	inc    %rbx
    651d:	1f                   	(bad)  
    651e:	c9                   	leave  
    651f:	00 0f                	add    %cl,(%rdi)
    6521:	8c dd                	mov    %ds,%ebp
    6523:	02 00                	add    (%rax),%al
    6525:	00 95 01 00 00 49    	add    %dl,0x49000001(%rbp)
    652b:	0f af db             	imul   %ebx,%ebx
    652e:	0f 84 18 04 00 00    	je     694c <__sprintf_chk@plt+0x1c6c>
    6534:	0f 8f 13 e9 89 00    	jg     8a4e4d <obstack_alloc_failed_handler@@Base+0x882dad>
    653a:	00 00                	add    %al,(%rax)
    653c:	c0 0f 84             	rorb   $0x84,(%rdi)
    653f:	ef                   	out    %eax,(%dx)
    6540:	03 00                	add    (%rax),%eax
    6542:	00 48 0f             	add    %cl,0xf(%rax)
    6545:	8f                   	(bad)  
    6546:	0c 03                	or     $0x3,%al
    6548:	00 00                	add    %al,(%rax)
    654a:	c7                   	(bad)  
    654b:	9a                   	(bad)  
    654c:	03 00                	add    (%rax),%eax
    654e:	00 00                	add    %al,(%rax)
    6550:	48 89 48 49          	mov    %rcx,0x49(%rax)
    6554:	89 db                	mov    %ebx,%ebx
    6556:	00 48 89             	add    %cl,-0x77(%rax)
    6559:	05 4c 89 ee 00       	add    $0xee894c,%eax
    655e:	e8 3d 13 00 00       	call   78a0 <__sprintf_chk@plt+0x2bc0>
    6563:	e9 3c ec ff ff       	jmp    51a4 <__sprintf_chk@plt+0x4c4>
    6568:	c7 05 9a bd 01 00 02 	movl   $0x2,0x1bd9a(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    656f:	00 00 00 
    6572:	b8 01 00 00 00       	mov    $0x1,%eax
    6577:	c7 05 3f bd 01 00 03 	movl   $0x3,0x1bd3f(%rip)        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    657e:	00 00 00 
    6581:	e9 e5 e8 ff ff       	jmp    4e6b <__sprintf_chk@plt+0x18b>
    6586:	48 8d 0d 2f 33 01 00 	lea    0x1332f(%rip),%rcx        # 198bc <_obstack_memory_used@@Base+0x910c>
    658d:	48                   	rex.W
    658e:	4c 39 f9             	cmp    %r15,%rcx
    6591:	00 48 48             	add    %cl,0x48(%rax)
    6594:	85 ff                	test   %edi,%edi
    6596:	35 01 00 48 8d       	xor    $0x8d480001,%eax
    659b:	3d 85 38 01 00       	cmp    $0x13885,%eax
    65a0:	e8 9b 4c 0f af       	call   ffffffffaf0fb240 <obstack_alloc_failed_handler@@Base+0xffffffffaf0d91a0>
    65a5:	df 8d 3d 4a 38 01    	fisttps 0x1384a3d(%rbp)
    65ab:	49 c1 e8 2c          	shr    $0x2c,%r8
    65af:	4c 89 ef             	mov    %r13,%rdi
    65b2:	4c 21 ea             	and    %r13,%rdx
    65b5:	48                   	rex.W
    65b6:	49 f7 fc             	idiv   %r12
    65b9:	0f 49 ff             	cmovns %edi,%edi
    65bc:	c6                   	(bad)  
    65bd:	ff                   	(bad)  
    65be:	eb 1f                	jmp    65df <__sprintf_chk@plt+0x18ff>
    65c0:	00 00                	add    %al,(%rax)
    65c2:	35 38 01 00 e8       	xor    $0xe8000138,%eax
    65c7:	f5                   	cmc    
    65c8:	49 f7 fb             	idiv   %r11
    65cb:	48 85 c0             	test   %rax,%rax
    65ce:	48 85 d6             	test   %rdx,%rsi
    65d1:	0f 85 a1 02 00 49    	jne    49006878 <obstack_alloc_failed_handler@@Base+0x48fe47d8>
    65d7:	ff c7                	inc    %edi
    65d9:	c2 02 00             	ret    $0x2
    65dc:	00 4c e9 60          	add    %cl,0x60(%rcx,%rbp,8)
    65e0:	03 00                	add    (%rax),%eax
    65e2:	00 00                	add    %al,(%rax)
    65e4:	48 0f 8c 8f 03 00 00 	rex.W jl 697a <__sprintf_chk@plt+0x1c9a>
    65eb:	4c 31 cb             	xor    %r9,%rbx
    65ee:	e9 0f 84 e0 01       	jmp    1e0ea02 <obstack_alloc_failed_handler@@Base+0x1dec962>
    65f3:	00 00                	add    %al,(%rax)
    65f5:	0f 8f 04 01 00 00    	jg     66ff <__sprintf_chk@plt+0x1a1f>
    65fb:	4d 0f af da          	imul   %r10,%r11
    65ff:	49 31 f5             	xor    %rsi,%r13
    6602:	34 fd                	xor    $0xfd,%al
    6604:	49 c1 e6 1f          	shl    $0x1f,%r14
    6608:	48 89 e8             	mov    %rbp,%rax
    660b:	4c 29 48 c7          	sub    %r9,-0x39(%rax)
    660f:	c0 41 fc ff          	rolb   $0xff,-0x4(%rcx)
    6613:	ff 01                	incl   (%rcx)
    6615:	df 30                	fbstp  (%rax)
    6617:	02 00                	add    (%rax),%al
    6619:	00 ba 05 00 4c 31    	add    %bh,0x314c0005(%rdx)
    661f:	e7 89                	out    %eax,$0x89
    6621:	e6 48                	out    %al,$0x48
    6623:	89 49 39             	mov    %ecx,0x39(%rcx)
    6626:	fe                   	(bad)  
    6627:	e0 ff                	loopne 6628 <__sprintf_chk@plt+0x1948>
    6629:	ff 85 c0 75 cd 4d    	incl   0x4dcd75c0(%rbp)
    662f:	85 c8                	test   %ecx,%eax
    6631:	8d 7d 05             	lea    0x5(%rbp),%edi
    6634:	48 89 de             	mov    %rbx,%rsi
    6637:	e8 14 e3 ff ff       	call   4950 <fnmatch@plt>
    663c:	4c 89 f9             	mov    %r15,%rcx
    663f:	bb 49 75 27 24       	mov    $0x24277549,%ebx
    6644:	10 4c 89 fd          	adc    %cl,-0x3(%rcx,%rcx,4)
    6648:	49 21 da             	and    %rbx,%r10
    664b:	ff                   	(bad)  
    664c:	ff 48 83             	decl   -0x7d(%rax)
    664f:	f8                   	clc    
    6650:	03 0f                	add    (%rdi),%ecx
    6652:	85 07                	test   %eax,(%rdi)
    6654:	ff                   	(bad)  
    6655:	ff                   	(bad)  
    6656:	ff                   	(bad)  
    6657:	bf 02 49 48 c1       	mov    $0xc1484902,%edi
    665c:	48 21 da             	and    %rbx,%rdx
    665f:	00 00                	add    %al,(%rax)
    6661:	84 c0                	test   %al,%al
    6663:	0f 84 f5 fe ff ff    	je     655e <__sprintf_chk@plt+0x187e>
    6669:	48 8b 35 d0 bb 01 00 	mov    0x1bbd0(%rip),%rsi        # 22240 <obstack_alloc_failed_handler@@Base+0x1a0>
    6670:	ba 02 00 00 00       	mov    $0x2,%edx
    6675:	31 4d 01             	xor    %ecx,0x1(%rbp)
    6678:	fa                   	cli    
    6679:	e1 ff                	loope  667a <__sprintf_chk@plt+0x199a>
    667b:	ff 48 09             	decl   0x9(%rax)
    667e:	d7                   	xlat   %ds:(%rbx)
    667f:	c1 e9 3e             	shr    $0x3e,%ecx
    6682:	00 49 0f             	add    %cl,0xf(%rcx)
    6685:	8c 8e 01 00 00 48    	mov    %cs,0x48000001(%rsi)
    668b:	89 49 21             	mov    %ecx,0x21(%rcx)
    668e:	c4 01 0f 84          	(bad)
    6692:	d5                   	(bad)  
    6693:	00 00                	add    %al,(%rax)
    6695:	00 48 0f             	add    %cl,0xf(%rax)
    6698:	84 d2                	test   %dl,%dl
    669a:	fe                   	(bad)  
    669b:	ff                   	(bad)  
    669c:	ff 8f 5b ff ff ff    	decl   -0xa5(%rdi)
    66a2:	f7 fa                	idiv   %edx
    66a4:	ff 00                	incl   (%rax)
    66a6:	00 31                	add    %dh,(%rcx)
    66a8:	ff                   	(bad)  
    66a9:	e8 b2 80 49 f7       	call   fffffffff749e760 <obstack_alloc_failed_handler@@Base+0xfffffffff747c6c0>
    66ae:	fd                   	std    
    66af:	6f                   	outsl  %ds:(%rsi),(%dx)
    66b0:	f9                   	stc    
    66b1:	ff                   	(bad)  
    66b2:	ff 48 8d             	decl   -0x73(%rax)
    66b5:	05 4c 01 e8 00       	add    $0xe8014c,%eax
    66ba:	e9 95 49 ff c3       	jmp    ffffffffc3ffb054 <obstack_alloc_failed_handler@@Base+0xffffffffc3fd8fb4>
    66bf:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    66c4:	48 39 f9             	cmp    %rdi,%rcx
    66c7:	48 8d 3d bc 36 49 c7 	lea    -0x38b6c944(%rip),%rdi        # ffffffffc7499d8a <obstack_alloc_failed_handler@@Base+0xffffffffc7477cea>
    66ce:	c3                   	ret    
    66cf:	4d 85 fe             	test   %r15,%r14
    66d2:	00 48 8b             	add    %cl,-0x75(%rax)
    66d5:	1d 16 b9 01 00       	sbb    $0x1b916,%eax
    66da:	ba 05 00 00 00       	mov    $0x5,%edx
    66df:	48 c1 e2 4d          	shl    $0x4d,%rdx
    66e3:	0f af cf             	imul   %edi,%ecx
    66e6:	01 00                	add    %eax,(%rax)
    66e8:	48                   	rex.W
    66e9:	4c 85 f7             	test   %r14,%rdi
    66ec:	49 09 fe             	or     %rdi,%r14
    66ef:	ff 00                	incl   (%rax)
    66f1:	89 c7                	mov    %eax,%edi
    66f3:	48 89 ee             	mov    %rbp,%rsi
    66f6:	48 8d 2d ae 36 01 00 	lea    0x136ae(%rip),%rbp        # 19dab <_obstack_memory_used@@Base+0x95fb>
    66fd:	e8 ce 75 cd ff       	call   ffffffffffcddcd0 <obstack_alloc_failed_handler@@Base+0xffffffffffcbbc30>
    6702:	48 8d 0d 58 48 ff c2 	lea    -0x3d00b7a8(%rip),%rcx        # ffffffffc2ffaf61 <obstack_alloc_failed_handler@@Base+0xffffffffc2fd8ec1>
    6709:	48 8b 3b             	mov    (%rbx),%rdi
    670c:	49 83 c4 08          	add    $0x8,%r12
    6710:	48 89 ea             	mov    %rbp,%rdx
    6713:	be 01 4c 89 4d       	mov    $0x4d894c01,%esi
    6718:	21 f0                	and    %esi,%eax
    671a:	e8 0f 8f 63 02       	call   263f62e <obstack_alloc_failed_handler@@Base+0x261d58e>
    671f:	00 00                	add    %al,(%rax)
    6721:	0c 24                	or     $0x24,%al
    6723:	48 85 c9             	test   %rcx,%rcx
    6726:	74 84                	je     66ac <__sprintf_chk@plt+0x19cc>
    6728:	48 8b 2b             	mov    (%rbx),%rbp
    672b:	48 8d 35 7e 5c 01 00 	lea    0x15c7e(%rip),%rsi        # 1c3b0 <_obstack_memory_used@@Base+0xbc00>
    6732:	4d 85 49 ff          	test   %r9,-0x1(%r9)
    6736:	c4                   	(bad)  
    6737:	00 00                	add    %al,(%rax)
    6739:	e8 22 e1 ff ff       	call   4860 <dcgettext@plt>
    673e:	48 89 c7             	mov    %rax,%rdi
    6741:	48 89 ee             	mov    %rbp,%rsi
    6744:	e8 87 e2 ff ff       	call   49d0 <fputs_unlocked@plt>
    6749:	bf 02 00 00 00       	mov    $0x2,%edi
    674e:	4d 09 ea             	or     %r13,%r10
    6751:	00 00                	add    %al,(%rax)
    6753:	31 ff                	xor    %edi,%edi
    6755:	e8 d6 0f 8f c4       	call   ffffffffc48f7730 <obstack_alloc_failed_handler@@Base+0xffffffffc48d5690>
    675a:	49 31 fb             	xor    %rdi,%r11
    675d:	6e                   	outsb  %ds:(%rsi),(%dx)
    675e:	b9 49 21 dc 0f       	mov    $0xfdc2149,%ecx
    6763:	85 61 0f             	test   %esp,0xf(%rcx)
    6766:	8c 92 02 00 00 c1    	mov    %ss,-0x3efffffe(%rdx)
    676c:	86 02                	xchg   %al,(%rdx)
    676e:	00 00                	add    %al,(%rax)
    6770:	38 0f                	cmp    %cl,(%rdi)
    6772:	85 0f                	test   %ecx,(%rdi)
    6774:	8f                   	(bad)  
    6775:	ae                   	scas   %es:(%rdi),%al
    6776:	00 00                	add    %al,(%rax)
    6778:	00 29                	add    %ch,(%rcx)
    677a:	da 49 c7             	fimull -0x39(%rcx)
    677d:	c6                   	(bad)  
    677e:	49                   	rex.WB
    677f:	48                   	rex.W
    6780:	4d 21 e7             	and    %r12,%r15
    6783:	8c 89 00 00 00 ff    	mov    %cs,-0x1000000(%rcx)
    6789:	49 85 f2             	test   %rsi,%r10
    678c:	fc                   	cld    
    678d:	0f 48 c1             	cmovs  %ecx,%eax
    6790:	e7 1b                	out    %eax,$0x1b
    6792:	c7                   	(bad)  
    6793:	55                   	push   %rbp
    6794:	5d                   	pop    %rbp
    6795:	01 00                	add    %eax,(%rax)
    6797:	f3 48 0f 2c f4       	cvttss2si %xmm4,%rsi
    679c:	4c 31 49 01          	xor    %r9,0x1(%rcx)
    67a0:	f5                   	cmc    
    67a1:	f5                   	cmc    
    67a2:	ff                   	(bad)  
    67a3:	ff f3                	push   %rbx
    67a5:	0f 59 60 0f          	mulps  0xf(%rax),%xmm4
    67a9:	8f                   	(bad)  
    67aa:	fa                   	cli    
    67ab:	00 00                	add    %al,(%rax)
    67ad:	00 ff                	add    %bh,%bh
    67af:	ff c4                	inc    %esp
    67b1:	01 4c 89 64          	add    %ecx,0x64(%rcx,%rcx,4)
    67b5:	24 48                	and    $0x48,%al
    67b7:	e9 bc fa ff ff       	jmp    6278 <__sprintf_chk@plt+0x1598>
    67bc:	7f 43                	jg     6801 <__sprintf_chk@plt+0x1b21>
    67be:	00 00                	add    %al,(%rax)
    67c0:	00 0f                	add    %cl,(%rdi)
    67c2:	4d 39 cb             	cmp    %r9,%r11
    67c5:	00 00                	add    %al,(%rax)
    67c7:	76 00                	jbe    67c9 <__sprintf_chk@plt+0x1ae9>
    67c9:	00 48 8b             	add    %cl,-0x75(%rax)
    67cc:	7c 24                	jl     67f2 <__sprintf_chk@plt+0x1b12>
    67ce:	18 ba 01 00 00 00    	sbb    %bh,0x1(%rdx)
    67d4:	48                   	rex.W
    67d5:	4c 21 e8             	and    %r13,%rax
    67d8:	85 d4                	test   %edx,%esp
    67da:	03 48 c7             	add    -0x39(%rax),%ecx
    67dd:	c1 31 fe             	shll   $0xfe,(%rcx)
    67e0:	ff                   	(bad)  
    67e1:	ff 49 c1             	decl   -0x3f(%rcx)
    67e4:	ec                   	in     (%dx),%al
    67e5:	04 0f                	add    $0xf,%al
    67e7:	8c 98 00 00 00 b0    	mov    %ds,-0x50000000(%rax)
    67ed:	bc 01 00 49 89       	mov    $0x89490001,%esp
    67f2:	45 20 48 8b          	and    %r9b,-0x75(%r8)
    67f6:	44 24 0f             	rex.R and $0xf,%al
    67f9:	49 f7 fc             	idiv   %r12
    67fc:	ff                   	(bad)  
    67fd:	ff 6e 04             	ljmp   *0x4(%rsi)
    6800:	00 00                	add    %al,(%rax)
    6802:	84 c0                	test   %al,%al
    6804:	0f 84 56 fb 49 c7    	je     ffffffffc74a6360 <obstack_alloc_failed_handler@@Base+0xffffffffc74842c0>
    680a:	c5 1d 02             	(bad)
    680d:	00 00                	add    %al,(%rax)
    680f:	1e                   	(bad)  
    6810:	02 00                	add    (%rax),%al
    6812:	00 09                	add    %cl,(%rcx)
    6814:	e3 54                	jrcxz  686a <__sprintf_chk@plt+0x1b8a>
    6816:	24 48                	and    $0x48,%al
    6818:	80 4c 21 c0 85       	orb    $0x85,-0x40(%rcx,%riz,1)
    681d:	3f                   	(bad)  
    681e:	fb                   	sti    
    681f:	ff 0f                	decl   (%rdi)
    6821:	8f                   	(bad)  
    6822:	39 fe                	cmp    %edi,%esi
    6824:	ff                   	(bad)  
    6825:	ff 48 8b             	decl   -0x75(%rax)
    6828:	7c 24                	jl     684e <__sprintf_chk@plt+0x1b6e>
    682a:	4c 0f af d8          	imul   %rax,%r11
    682e:	39 d1                	cmp    %edx,%ecx
    6830:	10 48 89             	adc    %cl,-0x77(%rax)
    6833:	ee                   	out    %al,(%dx)
    6834:	48 f7 f9             	idiv   %rcx
    6837:	fd                   	std    
    6838:	ff                   	(bad)  
    6839:	ff 48 31             	decl   0x31(%rax)
    683c:	d0 84 c0 0f 85 33 fa 	rolb   -0x5cc7af1(%rax,%rax,8)
    6843:	ff                   	(bad)  
    6844:	ff                   	(bad)  
    6845:	e9 49 c1 eb 34       	jmp    34ec2993 <obstack_alloc_failed_handler@@Base+0x34ea08f3>
    684a:	15 8b 5c 24 10       	adc    $0x10245c8b,%eax
    684f:	4c 89 fd             	mov    %r15,%rbp
    6852:	c6 05 af ba 01 00 00 	movb   $0x0,0x1baaf(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    6859:	e9 5e fb ff ff       	jmp    63bc <__sprintf_chk@plt+0x16dc>
    685e:	48 8d 4d 09          	lea    0x9(%rbp),%rcx
    6862:	cb                   	lret   
    6863:	e3 00                	jrcxz  6865 <__sprintf_chk@plt+0x1b85>
    6865:	e8 56 de ff ff       	call   46c0 <getenv@plt>
    686a:	49 c1 ed 37          	shr    $0x37,%r13
    686e:	10 48 85             	adc    %cl,-0x7b(%rax)
    6871:	c0 0f 85             	rorb   $0x85,(%rdi)
    6874:	f1                   	int1   
    6875:	f3 ff                	repz (bad) 
    6877:	ff 48 8d             	decl   -0x73(%rax)
    687a:	05 05 34 4d 39       	add    $0x394d3405,%eax
    687f:	c2 c7 c3             	ret    $0xc3c7
    6882:	e2 00                	loop   6884 <__sprintf_chk@plt+0x1ba4>
    6884:	e9 8a fc ff ff       	jmp    6513 <__sprintf_chk@plt+0x1833>
    6889:	02 00                	add    (%rax),%al
    688b:	00 01                	add    %al,(%rcx)
    688d:	48 21 c6             	and    %rax,%rsi
    6890:	00 00                	add    %al,(%rax)
    6892:	49 ff c5             	inc    %r13
    6895:	e8 36 e0 ff ff       	call   48d0 <strchr@plt>
    689a:	49 89 49 c1          	mov    %rcx,-0x3f(%r9)
    689e:	e7 3a                	out    %eax,$0x3a
    68a0:	0f 84 c7 00 00 00    	je     696d <__sprintf_chk@plt+0x1c8d>
    68a6:	4c 8d 78 01          	lea    0x1(%rax),%r15
    68aa:	be 0a 00 4c 31       	mov    $0x314c000a,%esi
    68af:	e2 49                	loop   68fa <__sprintf_chk@plt+0x1c1a>
    68b1:	0f af cb             	imul   %ebx,%ecx
    68b4:	e0 ff                	loopne 68b5 <__sprintf_chk@plt+0x1bd5>
    68b6:	ff 48 85             	decl   -0x7b(%rax)
    68b9:	c0 0f 85             	rorb   $0x85,(%rdi)
    68bc:	c4                   	(bad)  
    68bd:	00 00                	add    %al,(%rax)
    68bf:	00 41 c6             	add    %al,-0x3a(%rcx)
    68c2:	49 89 c4             	mov    %rax,%r12
    68c5:	4c 89 2d 74 b9 01 00 	mov    %r13,0x1b974(%rip)        # 22240 <obstack_alloc_failed_handler@@Base+0x1a0>
    68cc:	4c 39 f2             	cmp    %r14,%rdx
    68cf:	75 0f                	jne    68e0 <__sprintf_chk@plt+0x1c00>
    68d1:	84 64 fd ff          	test   %ah,-0x1(%rbp,%rdi,8)
    68d5:	ff e6                	jmp    *%rsi
    68d7:	ff 4c 89 ff          	decl   -0x1(%rcx,%rcx,4)
    68db:	0f 8c 34 02 00 00    	jl     6b15 <__sprintf_chk@plt+0x1e35>
    68e1:	49 c7 c5 cb fe ff ff 	mov    $0xfffffffffffffecb,%r13
    68e8:	a0 e9 7c 01 00 00 f7 	movabs 0xc1fbf70000017ce9,%al
    68ef:	fb c1 
    68f1:	e0 23                	loopne 6916 <__sprintf_chk@plt+0x1c36>
    68f3:	e8 c8 dd ff ff       	call   46c0 <getenv@plt>
    68f8:	48 85 c0             	test   %rax,%rax
    68fb:	0f 85 6d f5 ff ff    	jne    5e6e <__sprintf_chk@plt+0x118e>
    6901:	e9 82 f5 ff ff       	jmp    5e88 <__sprintf_chk@plt+0x11a8>
    6906:	48 8b 3d 4d 49 21 d9 	mov    -0x26deb6b3(%rip),%rdi        # ffffffffd921b25a <obstack_alloc_failed_handler@@Base+0xffffffffd91f91ba>
    690d:	ba 06 00 0f 85       	mov    $0x850f0006,%edx
    6912:	5d                   	pop    %rbp
    6913:	01 00                	add    %eax,(%rax)
    6915:	00 35 01 00 49 89    	add    %dh,-0x76b6ffff(%rip)        # ffffffff8949691c <obstack_alloc_failed_handler@@Base+0xffffffff8947487c>
    691b:	c0 49 ff c7          	rorb   $0xc7,-0x1(%rcx)
    691f:	c0 0f 85             	rorb   $0x85,(%rdi)
    6922:	96                   	xchg   %eax,%esi
    6923:	fa                   	cli    
    6924:	ff                   	(bad)  
    6925:	ff c6                	inc    %esi
    6927:	05 1b be 01 00       	add    $0x1be1b,%eax
    692c:	01 e9                	add    %ebp,%ecx
    692e:	8a 7c 18 ff          	mov    -0x1(%rax,%rbx,1),%bh
    6932:	48 8d 05 82 34 01 00 	lea    0x13482(%rip),%rax        # 19dbb <_obstack_memory_used@@Base+0x960b>
    6939:	48 89 49 c1          	mov    %rcx,-0x3f(%rcx)
    693d:	e6 48                	out    %al,$0x48
    693f:	39 d3                	cmp    %edx,%ebx
    6941:	fb                   	sti    
    6942:	05 f9 b8 01 00       	add    $0x1b8f9,%eax
    6947:	e9 12 fc 48 09       	jmp    949655e <obstack_alloc_failed_handler@@Base+0x94744be>
    694c:	cb                   	lret   
    694d:	0f 84 cf 01 00 00    	je     6b22 <__sprintf_chk@plt+0x1e42>
    6953:	48 89 05 e6 49 48 85 	mov    %rax,-0x7ab7b61a(%rip)        # ffffffff8548b340 <obstack_alloc_failed_handler@@Base+0xffffffff854692a0>
    695a:	f1                   	int1   
    695b:	8d 0f                	lea    (%rdi),%ecx
    695d:	8f                   	(bad)  
    695e:	de 02                	fiadds (%rdx)
    6960:	00 00                	add    %al,(%rax)
    6962:	89 e9                	mov    %ebp,%ecx
    6964:	87 fd                	xchg   %edi,%ebp
    6966:	ff                   	(bad)  
    6967:	ff                   	(bad)  
    6968:	e9 f1 fb ff ff       	jmp    655e <__sprintf_chk@plt+0x187e>
    696d:	4d 89 ef             	mov    %r13,%r15
    6970:	e9 50 ff ff ff       	jmp    68c5 <__sprintf_chk@plt+0x1be5>
    6975:	be 0a eb 45 49       	mov    $0x4945eb0a,%esi
    697a:	ff c1                	inc    %ecx
    697c:	49 89 f5             	mov    %rsi,%r13
    697f:	e9 e2 f6 ff ff       	jmp    6066 <__sprintf_chk@plt+0x1386>
    6984:	4c 89 48 ff          	mov    %r9,-0x1(%rax)
    6988:	c0 4c 39 f3 ba       	rorb   $0xba,-0xd(%rcx,%rdi,1)
    698d:	05 00 00 00 48       	add    $0x48000000,%eax
    6992:	0f 84 86 01 00 00    	je     6b1e <__sprintf_chk@plt+0x1e3e>
    6998:	ff                   	(bad)  
    6999:	ff 49 89             	decl   -0x77(%rcx)
    699c:	49 0f af fc          	imul   %r12,%rdi
    69a0:	ff 49 c1             	decl   -0x3f(%rcx)
    69a3:	e7 23                	out    %eax,$0x23
    69a5:	31 f6                	xor    %esi,%esi
    69a7:	bf 0f 84 cc 02       	mov    $0x2cc840f,%edi
    69ac:	00 00                	add    %al,(%rax)
    69ae:	ff                   	(bad)  
    69af:	ff                   	(bad)  
    69b0:	ff                   	(bad)  
    69b1:	e8 ea e1 49 4d       	call   4d4a4ba0 <obstack_alloc_failed_handler@@Base+0x4d482b00>
    69b6:	48 c7 c6 03 fd ff ff 	mov    $0xfffffffffffffd03,%rsi
    69bd:	ba 1f 07 00 00       	mov    $0x71f,%edx
    69c2:	e9 00 03 00 00       	jmp    6cc7 <__sprintf_chk@plt+0x1fe7>
    69c7:	01 00                	add    %eax,(%rax)
    69c9:	48 8d 3d e9 e7 02 00 	lea    0x2e7e9(%rip),%rdi        # 351b9 <obstack_alloc_failed_handler@@Base+0x13119>
    69d0:	00 6b df             	add    %ch,-0x21(%rbx)
    69d3:	ff                   	(bad)  
    69d4:	ff 48 8d             	decl   -0x73(%rax)
    69d7:	49 f7 ff             	idiv   %r15
    69da:	4d 39 dd             	cmp    %r11,%r13
    69dd:	0b 04 48             	or     (%rax,%rcx,2),%eax
    69e0:	c7 c2 b7 02 75 17    	mov    $0x177502b7,%edx
    69e6:	01 00                	add    %eax,(%rax)
    69e8:	48 8d 3d 31 5a 01 4c 	lea    0x4c015a31(%rip),%rdi        # 4c01c420 <obstack_alloc_failed_handler@@Base+0x4bffa380>
    69ef:	29 ef                	sub    %ebp,%edi
    69f1:	c7                   	(bad)  
    69f2:	48                   	rex.W
    69f3:	48 31 d6             	xor    %rdx,%rsi
    69f6:	85 e4                	test   %esp,%esp
    69f8:	48 f7 fe             	idiv   %rsi
    69fb:	ba 37 00 00 00       	mov    $0x37,%edx
    6a00:	be 01 00 00 48       	mov    $0x48000001,%esi
    6a05:	f7 fe                	idiv   %esi
    6a07:	3d 74 58 01 00       	cmp    $0x15874,%eax
    6a0c:	48 8b 08             	mov    (%rax),%rcx
    6a0f:	e8 2c 49 c7 c6       	call   ffffffffc6c7b340 <obstack_alloc_failed_handler@@Base+0xffffffffc6c592a0>
    6a14:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    6a15:	01 00                	add    %eax,(%rax)
    6a17:	00 ff                	add    %bh,%bh
    6a19:	48 8b 1d 98 b5 49 ff 	mov    -0xb64a68(%rip),%rbx        # ffffffffff4a1fb8 <obstack_alloc_failed_handler@@Base+0xffffffffff47ff18>
    6a20:	c1 54 24 48 49       	rcll   $0x49,0x48(%rsp)
    6a25:	85 d3                	test   %edx,%ebx
    6a27:	b6 01                	mov    $0x1,%dh
    6a29:	00 7c b6 1b          	add    %bh,0x1b(%rsi,%rsi,4)
    6a2d:	48 09 db             	or     %rbx,%rbx
    6a30:	77 70                	ja     6aa2 <__sprintf_chk@plt+0x1dc2>
    6a32:	83 48 ff c2          	orl    $0xffffffc2,-0x1(%rax)
    6a36:	8d 35 1c 58 01 00    	lea    0x1581c(%rip),%esi        # 1c258 <_obstack_memory_used@@Base+0xbaa8>
    6a3c:	4d 21 fd             	and    %r15,%r13
    6a3f:	fe                   	(bad)  
    6a40:	31 01                	xor    %eax,(%rcx)
    6a42:	00 48 0f             	add    %cl,0xf(%rax)
    6a45:	44                   	rex.R
    6a46:	f0 48 63 c2          	lock movslq %edx,%rax
    6a4a:	4c 29 f2             	sub    %r14,%rdx
    6a4d:	3c 48                	cmp    $0x48,%al
    6a4f:	4d 85 ea             	test   %r13,%r10
    6a52:	4d 0f 8c 13 03 00 0f 	rex.WRB jl f006d6c <obstack_alloc_failed_handler@@Base+0xefe4ccc>
    6a59:	84 2e                	test   %ch,(%rsi)
    6a5b:	fd                   	std    
    6a5c:	ff                   	(bad)  
    6a5d:	ff 05 4c 29 fe 31    	incl   0x31fe294c(%rip)        # 31fe93af <obstack_alloc_failed_handler@@Base+0x31fc730f>
    6a63:	ff                   	(bad)  
    6a64:	e8 f7 dd 4c 4c       	call   4c4d4860 <obstack_alloc_failed_handler@@Base+0x4c4b27c0>
    6a69:	0f af f3             	imul   %ebx,%esi
    6a6c:	8f                   	(bad)  
    6a6d:	7b fc                	jnp    6a6b <__sprintf_chk@plt+0x1d8b>
    6a6f:	ff                   	(bad)  
    6a70:	ff e1                	jmp    *%rcx
    6a72:	48                   	rex.W
    6a73:	48                   	rex.W
    6a74:	48 f7 ff             	idiv   %rdi
    6a77:	89 ef                	mov    %ebp,%edi
    6a79:	31 75 3f             	xor    %esi,0x3f(%rbp)
    6a7c:	48 f7 fa             	idiv   %rdx
    6a7f:	ff                   	(bad)  
    6a80:	e8 7b dc ff ff       	call   4700 <abort@plt>
    6a85:	e8 06 de ff ff       	call   4890 <__stack_chk_fail@plt>
    6a8a:	4c 8d 25 cd 31 eb c6 	lea    -0x3914ce33(%rip),%r12        # ffffffffc6eb9c5e <obstack_alloc_failed_handler@@Base+0xffffffffc6e97bbe>
    6a91:	66 c7 44 48 f7 fe 00 	movw   $0xfe,-0x9(%rax,%rcx,2)
    6a98:	0f 8f 48 f7 fe 48    	jg     48ff61e6 <obstack_alloc_failed_handler@@Base+0x48fd4146>
    6a9e:	c1 e7 25             	shl    $0x25,%edi
    6aa1:	39 d1                	cmp    %edx,%ecx
    6aa3:	8d 35 48 c7 c1 27    	lea    0x27c1c748(%rip),%esi        # 27c231f1 <obstack_alloc_failed_handler@@Base+0x27c01151>
    6aa9:	fc                   	cld    
    6aaa:	ff                   	(bad)  
    6aab:	ff 74 99 eb          	push   -0x15(%rcx,%rbx,4)
    6aaf:	d0 f3                	shl    %bl
    6ab1:	0f 1e fa             	nop    %edx
    6ab4:	31 ed                	xor    %ebp,%ebp
    6ab6:	49 89 d1             	mov    %rdx,%r9
    6ab9:	5e                   	pop    %rsi
    6aba:	48 89 e2             	mov    %rsp,%rdx
    6abd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    6ac1:	50                   	push   %rax
    6ac2:	54                   	push   %rsp
    6ac3:	45 31 c0             	xor    %r8d,%r8d
    6ac6:	31 c9                	xor    %ecx,%ecx
    6ac8:	48 8d 3d 51 e2 ff ff 	lea    -0x1daf(%rip),%rdi        # 4d20 <__sprintf_chk@plt+0x40>
    6acf:	ff 15 c3 b4 01 00    	call   *0x1b4c3(%rip)        # 21f98 <_obstack_memory_used@@Base+0x117e8>
    6ad5:	f4                   	hlt    
    6ad6:	66 2e 0f 1f 84 00 00 	cs nopw -0x3eb70000(%rax,%rax,1)
    6add:	00 49 c1 
    6ae0:	e0 23                	loopne 6b05 <__sprintf_chk@plt+0x1e25>
    6ae2:	3d 91 b7 01 00       	cmp    $0x1b791,%eax
    6ae7:	48 8d 05 8a 49 39 f0 	lea    -0xfc6b676(%rip),%rax        # fffffffff039b478 <obstack_alloc_failed_handler@@Base+0xfffffffff03793d8>
    6aee:	af                   	scas   %es:(%rdi),%eax
    6aef:	d3 f8                	sar    %cl,%eax
    6af1:	74 15                	je     6b08 <__sprintf_chk@plt+0x1e28>
    6af3:	48 8b 05 a6 b4 01 00 	mov    0x1b4a6(%rip),%rax        # 21fa0 <_obstack_memory_used@@Base+0x117f0>
    6afa:	48 e9 0e 01 00 00    	rex.W jmp 6c0e <__sprintf_chk@plt+0x1f2e>
    6b00:	e0 0f                	loopne 6b11 <__sprintf_chk@plt+0x1e31>
    6b02:	1f                   	(bad)  
    6b03:	80 00 00             	addb   $0x0,(%rax)
    6b06:	00 00                	add    %al,(%rax)
    6b08:	c3                   	ret    
    6b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b10:	48 8d 3d 61 b7 01 00 	lea    0x1b761(%rip),%rdi        # 22278 <obstack_alloc_failed_handler@@Base+0x1d8>
    6b17:	48 8d 35 5a b7 01 00 	lea    0x1b75a(%rip),%rsi        # 22278 <obstack_alloc_failed_handler@@Base+0x1d8>
    6b1e:	4d 89 fc             	mov    %r15,%r12
    6b21:	ff c1                	inc    %ecx
    6b23:	f2 48 c1 ee 3f       	repnz shr $0x3f,%rsi
    6b28:	48 c1 f8 03          	sar    $0x3,%rax
    6b2c:	48 01 c6             	add    %rax,%rsi
    6b2f:	48 d1 fe             	sar    %rsi
    6b32:	74 14                	je     6b48 <__sprintf_chk@plt+0x1e68>
    6b34:	48 8b 05 9d b4 01 49 	mov    0x4901b49d(%rip),%rax        # 49021fd8 <obstack_alloc_failed_handler@@Base+0x48ffff38>
    6b3b:	c1 ea 38             	shr    $0x38,%edx
    6b3e:	49 39 d6             	cmp    %rdx,%r14
    6b41:	cc                   	int3   
    6b42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6b48:	c3                   	ret    
    6b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b50:	f3 0f 1e fa          	endbr64 
    6b54:	80 3d 25 b7 01 00 00 	cmpb   $0x0,0x1b725(%rip)        # 22280 <obstack_alloc_failed_handler@@Base+0x1e0>
    6b5b:	75 7b                	jne    6bd8 <__sprintf_chk@plt+0x1ef8>
    6b5d:	55                   	push   %rbp
    6b5e:	48 83 3d 82 b4 01 00 	cmpq   $0x0,0x1b482(%rip)        # 21fe8 <_obstack_memory_used@@Base+0x11838>
    6b65:	00 
    6b66:	48 89 e5             	mov    %rsp,%rbp
    6b69:	41 54                	push   %r12
    6b6b:	53                   	push   %rbx
    6b6c:	74 0c                	je     6b7a <__sprintf_chk@plt+0x1e9a>
    6b6e:	48 8b 3d 93 b4 01 00 	mov    0x1b493(%rip),%rdi        # 22008 <_obstack_memory_used@@Base+0x11858>
    6b75:	e8 26 db ff ff       	call   46a0 <__cxa_finalize@plt>
    6b7a:	48 8d 05 8f a4 01 00 	lea    0x1a48f(%rip),%rax        # 21010 <_obstack_memory_used@@Base+0x10860>
    6b81:	48 8d 1d 90 a4 01 00 	lea    0x1a490(%rip),%rbx        # 21018 <_obstack_memory_used@@Base+0x10868>
    6b88:	48 29 c3             	sub    %rax,%rbx
    6b8b:	49 89 c4             	mov    %rax,%r12
    6b8e:	48 8b 05 f3 b6 01 00 	mov    0x1b6f3(%rip),%rax        # 22288 <obstack_alloc_failed_handler@@Base+0x1e8>
    6b95:	48 c1 fb 03          	sar    $0x3,%rbx
    6b99:	48 83 eb 01          	sub    $0x1,%rbx
    6b9d:	48 39 d8             	cmp    %rbx,%rax
    6ba0:	73 21                	jae    6bc3 <__sprintf_chk@plt+0x1ee3>
    6ba2:	66 0f 1f 44 0f 84    	nopw   -0x7c(%rdi,%rcx,1)
    6ba8:	57                   	push   %rdi
    6ba9:	01 00                	add    %eax,(%rax)
    6bab:	00 0f                	add    %cl,(%rdi)
    6bad:	af                   	scas   %es:(%rdi),%eax
    6bae:	e0 d5                	loopne 6b85 <__sprintf_chk@plt+0x1ea5>
    6bb0:	b6 01                	mov    $0x1,%dh
    6bb2:	00 41 ff             	add    %al,-0x1(%rcx)
    6bb5:	14 c4                	adc    $0xc4,%al
    6bb7:	48                   	rex.W
    6bb8:	4d 01 cc             	add    %r9,%r12
    6bbb:	b6 01                	mov    $0x1,%dh
    6bbd:	48 09 49 c1          	or     %rcx,-0x3f(%rcx)
    6bc1:	ee                   	out    %al,(%dx)
    6bc2:	3c e8                	cmp    $0xe8,%al
    6bc4:	18 ff                	sbb    %bh,%bh
    6bc6:	ff                   	(bad)  
    6bc7:	ff 5b 41             	lcall  *0x41(%rbx)
    6bca:	5c                   	pop    %rsp
    6bcb:	c6 05 ae b6 01 00 01 	movb   $0x1,0x1b6ae(%rip)        # 22280 <obstack_alloc_failed_handler@@Base+0x1e0>
    6bd2:	5d                   	pop    %rbp
    6bd3:	c3                   	ret    
    6bd4:	0f 1f 40 00          	nopl   0x0(%rax)
    6bd8:	c3                   	ret    
    6bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6be0:	f3 0f 4d 29          	repz cmovge (%rcx),%ebp
    6be4:	e9 27 ff ff ff       	jmp    6b10 <__sprintf_chk@plt+0x1e30>
    6be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6bf0:	f3 48 29 df          	repz sub %rbx,%rdi
    6bf4:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
    6bf8:	e5 3d                	in     $0x3d,%eax
    6bfa:	f7 f6                	div    %esi
    6bfc:	48 89 d0             	mov    %rdx,%rax
    6bff:	0f 8f 01 03 00 00    	jg     6f06 <__sprintf_chk@plt+0x2226>
    6c05:	8b 16                	mov    (%rsi),%edx
    6c07:	4c 09 c8             	or     %r9,%rax
    6c0a:	39 48 29             	cmp    %ecx,0x29(%rax)
    6c0d:	db c3                	fcmovnb %st(3),%st
    6c0f:	90                   	nop
    6c10:	48 8b 46 08          	mov    0x8(%rsi),%rax
    6c14:	48 7f 00             	rex.W jg 6c17 <__sprintf_chk@plt+0x1f37>
    6c17:	08 4d 89             	or     %cl,-0x77(%rbp)
    6c1a:	e9 c3 0f 1f 4c       	jmp    4c1f7be2 <obstack_alloc_failed_handler@@Base+0x4c1d5b42>
    6c1f:	0f af de             	imul   %esi,%ebx
    6c22:	1e                   	(bad)  
    6c23:	fa                   	cli    
    6c24:	8b 05 de 0f 49 c1    	mov    -0x3eb6f022(%rip),%eax        # ffffffffc1497c08 <obstack_alloc_failed_handler@@Base+0xffffffffc1475b68>
    6c2a:	e4 10                	in     $0x10,%al
    6c2c:	00 06                	add    %al,(%rsi)
    6c2e:	89 48 48             	mov    %ecx,0x48(%rax)
    6c31:	c1 75 d4 c3          	shll   $0xc3,-0x2c(%rbp)
    6c35:	66 4d 89 d2          	data16 mov %r10,%r10
    6c39:	bd 02 00 00 00       	mov    $0x2,%ebp
    6c3e:	00 00                	add    %al,(%rax)
    6c40:	f3 0f 1e fa          	endbr64 
    6c44:	8b 48 c7             	mov    -0x39(%rax),%ecx
    6c47:	c1 15 fe ff ff 75 0f 	rcll   $0xf,0x75fffffe(%rip)        # 76006c4c <obstack_alloc_failed_handler@@Base+0x75fe4bac>
    6c4e:	8b 05 b0 bb 01 00    	mov    0x1bbb0(%rip),%eax        # 22804 <obstack_alloc_failed_handler@@Base+0x764>
    6c54:	83 c0 01             	add    $0x1,%eax
    6c57:	89 05 a7 bb 01 00    	mov    %eax,0x1bba7(%rip)        # 22804 <obstack_alloc_failed_handler@@Base+0x764>
    6c5d:	c3                   	ret    
    6c5e:	66 90                	xchg   %ax,%ax
    6c60:	f3 49 01 cf          	repz add %rcx,%r15
    6c64:	e9 17 49 f7 fa       	jmp    fffffffffaf7b580 <obstack_alloc_failed_handler@@Base+0xfffffffffaf594e0>
    6c69:	0f 1f 48 29          	nopl   0x29(%rax)
    6c6d:	cf                   	iret   
    6c6e:	00 00                	add    %al,(%rax)
    6c70:	41 55                	push   %r13
    6c72:	89 d0                	mov    %edx,%eax
    6c74:	49 89 fb             	mov    %rdi,%r11
    6c77:	4d 29 c7             	sub    %r8,%r15
    6c7a:	41 54                	push   %r12
    6c7c:	41 89 d4             	mov    %edx,%r12d
    6c7f:	55                   	push   %rbp
    6c80:	48 89 cd             	mov    %rcx,%rbp
    6c83:	53                   	push   %rbx
    6c84:	48 8b 0e             	mov    (%rsi),%rcx
    6c87:	48 8b 1f             	mov    (%rdi),%rbx
    6c8a:	0f 8f a8 fc ff ff    	jg     6938 <__sprintf_chk@plt+0x1c58>
    6c90:	b6 11                	mov    $0x11,%dh
    6c92:	4c 8d 47 ff          	lea    -0x1(%rdi),%r8
    6c96:	48 8d 73 49          	lea    0x49(%rbx),%rsi
    6c9a:	09 0f                	or     %ecx,(%rdi)
    6c9c:	8f                   	(bad)  
    6c9d:	74 ff                	je     6c9e <__sprintf_chk@plt+0x1fbe>
    6c9f:	ff                   	(bad)  
    6ca0:	ff 4c 8d 4e          	decl   0x4e(%rbp,%rcx,4)
    6ca4:	ff 80 e9 e9 79 fc    	incl   -0x3861617(%rax)
    6caa:	ff                   	(bad)  
    6cab:	ff 80 fa 3d 49 c1    	incl   -0x3eb6c206(%rax)
    6cb1:	ef                   	out    %eax,(%dx)
    6cb2:	31 00                	xor    %eax,(%rax)
    6cb4:	00 49 c1             	add    %cl,-0x3f(%rcx)
    6cb7:	e9 1c 00 00 00       	jmp    6cd8 <__sprintf_chk@plt+0x1ff8>
    6cbc:	56                   	push   %rsi
    6cbd:	ff 48 83             	decl   -0x7d(%rax)
    6cc0:	c7                   	(bad)  
    6cc1:	48                   	rex.W
    6cc2:	49 c7 c4 6c 03 00 00 	mov    $0x36c,%r12
    6cc9:	4c 8d 4e ff          	lea    -0x1(%rsi),%r9
    6ccd:	4c 8d 47 ff          	lea    -0x1(%rdi),%r8
    6cd1:	80 fa 5c             	cmp    $0x5c,%dl
    6cd4:	75 d4                	jne    6caa <__sprintf_chk@plt+0x1fca>
    6cd6:	0f b6 51 01          	movzbl 0x1(%rcx),%edx
    6cda:	4c                   	rex.WR
    6cdb:	4d 01 d9             	add    %r11,%r9
    6cde:	84 d2                	test   %dl,%dl
    6ce0:	0f 84 d2 0f 8c e0    	je     ffffffffe08c7cb8 <obstack_alloc_failed_handler@@Base+0xffffffffe08a5c18>
    6ce6:	01 00                	add    %eax,(%rax)
    6ce8:	00 d0                	add    %dl,%al
    6cea:	4d 85 c4             	test   %r8,%r12
    6ced:	e9 7f 0f 84 b7       	jmp    ffffffffb7847c71 <obstack_alloc_failed_handler@@Base+0xffffffffb7825bd1>
    6cf2:	02 00                	add    (%rax),%al
    6cf4:	00 48 89             	add    %cl,-0x77(%rax)
    6cf7:	f1                   	int1   
    6cf8:	00 00                	add    %al,(%rax)
    6cfa:	4d 21 c1             	and    %r8,%r9
    6cfd:	ff 4c 89 ff          	decl   -0x1(%rcx,%rcx,4)
    6d01:	f7 fa                	idiv   %edx
    6d03:	05 80 fa 3a 75       	add    $0x753afa80,%eax
    6d08:	ae                   	scas   %es:(%rdi),%al
    6d09:	b8 01 00 00 0f       	mov    $0xf000001,%eax
    6d0e:	8c 85 01 00 00 89    	mov    %es,-0x76ffffff(%rbp)
    6d14:	4d 09 48 39          	or     %r9,0x39(%r8)
    6d18:	d6                   	(bad)  
    6d19:	5d                   	pop    %rbp
    6d1a:	41 5c                	pop    %r12
    6d1c:	41 5d                	pop    %r13
    6d1e:	c3                   	ret    
    6d1f:	90                   	nop
    6d20:	80 49 f7 f8          	orb    $0xf8,-0x9(%rcx)
    6d24:	4d 29 e3             	sub    %r12,%r11
    6d27:	51                   	push   %rcx
    6d28:	01 44 8d 6a          	add    %eax,0x6a(%rbp,%rcx,4)
    6d2c:	c0 41 80 fd          	rolb   $0xfd,-0x80(%rcx)
    6d30:	3e 77 35             	ja,pt  6d68 <__sprintf_chk@plt+0x2088>
    6d33:	83 e2 1f             	and    $0x1f,%edx
    6d36:	48 83 c1 02          	add    $0x2,%rcx
    6d3a:	48 83 c7 01          	add    $0x1,%rdi
    6d3e:	48                   	rex.W
    6d3f:	49 89 c6             	mov    %rax,%r14
    6d42:	88 56 fe             	mov    %dl,-0x2(%rsi)
    6d45:	48 c1 e3 11          	shl    $0x11,%rbx
    6d49:	ff                   	(bad)  
    6d4a:	ba 7f 00 00 00       	mov    $0x7f,%edx
    6d4f:	49 ff c4             	inc    %r12
    6d52:	e9 88 56 ff 48       	jmp    48ffc3df <obstack_alloc_failed_handler@@Base+0x48fda33f>
    6d57:	83 c7 01             	add    $0x1,%edi
    6d5a:	48 c1 e3 34          	shl    $0x34,%rbx
    6d5e:	e9 63 0f 8f 5f       	jmp    5f8f7cc6 <obstack_alloc_failed_handler@@Base+0x5f8d5c26>
    6d63:	fd                   	std    
    6d64:	ff                   	(bad)  
    6d65:	ff 00                	incl   (%rax)
    6d67:	00 48 83             	add    %cl,-0x7d(%rax)
    6d6a:	75 4d                	jne    6db9 <__sprintf_chk@plt+0x20d9>
    6d6c:	09 ff                	or     %edi,%edi
    6d6e:	3f                   	(bad)  
    6d6f:	74 17                	je     6d88 <__sprintf_chk@plt+0x20a8>
    6d71:	0f 8c b7 fd ff ff    	jl     6b2e <__sprintf_chk@plt+0x1e4e>
    6d77:	cf                   	iret   
    6d78:	45 0f 84 12 ff ff ff 	rex.RB je 6c91 <__sprintf_chk@plt+0x1fb1>
    6d7f:	48 89 cf             	mov    %rcx,%rdi
    6d82:	66 0f 85 99 00       	jne    6e20 <__sprintf_chk@plt+0x2140>
    6d87:	00 00                	add    %al,(%rax)
    6d89:	7f 00                	jg     6d8b <__sprintf_chk@plt+0x20ab>
    6d8b:	00 00                	add    %al,(%rax)
    6d8d:	48 83 c7 01          	add    $0x1,%rdi
    6d91:	48                   	rex.W
    6d92:	49 01 cf             	add    %rcx,%r15
    6d95:	73 fc                	jae    6d93 <__sprintf_chk@plt+0x20b3>
    6d97:	ff                   	(bad)  
    6d98:	ff 0f                	decl   (%rdi)
    6d9a:	8f                   	(bad)  
    6d9b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    6d9c:	02 00                	add    (%rax),%al
    6d9e:	00 00                	add    %al,(%rax)
    6da0:	0f 8f f3 fc ff ff    	jg     6a99 <__sprintf_chk@plt+0x1db9>
    6da6:	44 0f b6 01          	movzbl (%rcx),%r8d
    6daa:	45 8d 48 d0          	lea    -0x30(%r8),%r9d
    6dae:	41 80 f9 07          	cmp    $0x7,%r9b
    6db2:	0f 87 03 49 21 f8    	ja     fffffffff821b6bb <obstack_alloc_failed_handler@@Base+0xfffffffff81f961b>
    6db8:	0f 1f 84 00 00 00 4d 	nopl   0x214d0000(%rax,%rax,1)
    6dbf:	21 
    6dc0:	c8 83 c1 01          	enter  $0xc183,$0x1
    6dc4:	41 8d 54 d0 d0       	lea    -0x30(%r8,%rdx,8),%edx
    6dc9:	44 0f 4d 09          	cmovge (%rcx),%r9d
    6dcd:	fc                   	cld    
    6dce:	85 cd                	test   %ecx,%ebp
    6dd0:	fc                   	cld    
    6dd1:	75 42                	jne    6e15 <__sprintf_chk@plt+0x2135>
    6dd3:	4c 01 e3             	add    %r12,%rbx
    6dd6:	4f 01 0f             	rex.WRXB add %r9,(%r15)
    6dd9:	84 ab 01 00 0f 8c    	test   %ch,-0x73f0ffff(%rbx)
    6ddf:	9d                   	popf   
    6de0:	01 00                	add    %eax,(%rax)
    6de2:	00 ff                	add    %bh,%bh
    6de4:	ff                   	(bad)  
    6de5:	ff                   	(bad)  
    6de6:	ff 44 0f b6          	incl   -0x4a(%rdi,%rcx,1)
    6dea:	41 02 4c 8d 49       	add    0x49(%r13,%rcx,4),%cl
    6def:	03 31                	add    (%rcx),%esi
    6df1:	d2 49 8d             	rorb   %cl,-0x73(%rcx)
    6df4:	49 ff 41 80          	incq   -0x80(%r9)
    6df8:	f8                   	clc    
    6df9:	4c 39 ca             	cmp    %r9,%rdx
    6dfc:	0f 1f 40 0f          	nopl   0xf(%rax)
    6e00:	8c 19                	mov    %ds,(%rcx)
    6e02:	fc                   	cld    
    6e03:	ff                   	(bad)  
    6e04:	ff 8f 9e 00 49 89    	decl   -0x76b6ff62(%rdi)
    6e0a:	d1 4c 31 c6          	rorl   -0x3a(%rcx,%rsi,1)
    6e0e:	49 29 f6             	sub    %rsi,%r14
    6e11:	09 0f                	or     %ecx,(%rdi)
    6e13:	87 a3 fe ff ff c1    	xchg   %esp,-0x3e000002(%rbx)
    6e19:	e2 04                	loop   6e1f <__sprintf_chk@plt+0x213f>
    6e1b:	41 8d 54 10 d0       	lea    -0x30(%r8,%rdx,1),%edx
    6e20:	45 0f b6 01          	movzbl (%r9),%r8d
    6e24:	49 83 4d 31 f1       	orq    $0xfffffffffffffff1,0x31(%r13)
    6e29:	8d 48 c1             	lea    -0x3f(%rax),%ecx
    6e2c:	e3 03                	jrcxz  6e31 <__sprintf_chk@plt+0x2151>
    6e2e:	f8                   	clc    
    6e2f:	46                   	rex.RX
    6e30:	48 c7 c3 b7 02 00 00 	mov    $0x2b7,%rbx
    6e37:	80 0f 8c             	orb    $0x8c,(%rdi)
    6e3a:	58                   	pop    %rax
    6e3b:	49 c1 ed 05          	shr    $0x5,%r13
    6e3f:	ff c1                	inc    %ecx
    6e41:	e2 04                	loop   6e47 <__sprintf_chk@plt+0x2167>
    6e43:	41 8d 54 10 a9       	lea    -0x57(%r8,%rdx,1),%edx
    6e48:	eb d6                	jmp    6e20 <__sprintf_chk@plt+0x2140>
    6e4a:	ba 0f 8f 99 02       	mov    $0x2998f0f,%edx
    6e4f:	00 00                	add    %al,(%rax)
    6e51:	c9                   	leave  
    6e52:	e9 fc fe 0f 8c       	jmp    ffffffff8c106d53 <obstack_alloc_failed_handler@@Base+0xffffffff8c0e4cb3>
    6e57:	9d                   	popf   
    6e58:	02 00                	add    (%rax),%al
    6e5a:	00 00                	add    %al,(%rax)
    6e5c:	4c 0f 85 b7 fe ff ff 	rex.WR jne 6d1a <__sprintf_chk@plt+0x203a>
    6e63:	ff                   	(bad)  
    6e64:	ba 1b 00 00 00       	mov    $0x1b,%edx
    6e69:	4d 0f 84 d8 fd ff ff 	rex.WRB je 6c48 <__sprintf_chk@plt+0x1f68>
    6e70:	29 dd                	sub    %ebx,%ebp
    6e72:	0c 00                	or     $0x0,%al
    6e74:	00 00                	add    %al,(%rax)
    6e76:	4c 89 e9             	mov    %r13,%rcx
    6e79:	e9 d5 fe ff ff       	jmp    6d53 <__sprintf_chk@plt+0x2073>
    6e7e:	ba 0a 0f 85 15       	mov    $0x15850f0a,%edx
    6e83:	03 00                	add    (%rax),%eax
    6e85:	00 e9                	add    %ch,%cl
    6e87:	c8 fe ff ff          	enter  $0xfffe,$0xff
    6e8b:	ba 20 00 00 00       	mov    $0x20,%edx
    6e90:	4c 89 e9             	mov    %r13,%rcx
    6e93:	e9 bb fe ff ff       	jmp    6d53 <__sprintf_chk@plt+0x2073>
    6e98:	ba 0d 7c 17 00       	mov    $0x177c0d,%edx
    6e9d:	4c 89 e9             	mov    %r13,%rcx
    6ea0:	e9 ae fe ff ff       	jmp    6d53 <__sprintf_chk@plt+0x2073>
    6ea5:	0f 4c 39             	cmovl  (%rcx),%edi
    6ea8:	d9 e2                	(bad)  
    6eaa:	04 41                	add    $0x41,%al
    6eac:	8d 49 c1             	lea    -0x3f(%rcx),%ecx
    6eaf:	ef                   	out    %eax,(%dx)
    6eb0:	1f                   	(bad)  
    6eb1:	6b ff 48             	imul   $0x48,%edi,%edi
    6eb4:	c7 c3 63 01 49 39    	mov    $0x39490163,%ebx
    6eba:	d1 31                	shll   (%rcx)
    6ebc:	c0 e9 4c             	shr    $0x4c,%cl
    6ebf:	fe                   	(bad)  
    6ec0:	ff                   	(bad)  
    6ec1:	ff                   	(bad)  
    6ec2:	ba 07 00 00 00       	mov    $0x7,%edx
    6ec7:	e9 84 fe ff ff       	jmp    6d50 <__sprintf_chk@plt+0x2070>
    6ecc:	ba 08 00 e9 15       	mov    $0x15e90008,%edx
    6ed1:	01 00                	add    %eax,(%rax)
    6ed3:	00 ff                	add    %bh,%bh
    6ed5:	e9 49 02 00 00       	jmp    7123 <__sprintf_chk@plt+0x2443>
    6eda:	84 00                	test   %al,(%rax)
    6edc:	00 49 c7             	add    %cl,-0x39(%rcx)
    6edf:	0f 85 b7 02 00 00    	jne    719c <__sprintf_chk@plt+0x24bc>
    6ee5:	02 84 c0 0f 84 92 00 	add    0x92840f(%rax,%rax,8),%al
    6eec:	4d 0f af f1          	imul   %r9,%r14
    6ef0:	45                   	rex.RB
    6ef1:	49 f7 fb             	idiv   %r11
    6ef4:	f6 eb                	imul   %bl
    6ef6:	23 66 0f             	and    0xf(%rsi),%esp
    6ef9:	1f                   	(bad)  
    6efa:	84 00                	test   %al,(%rax)
    6efc:	00 00                	add    %al,(%rax)
    6efe:	00 00                	add    %al,(%rax)
    6f00:	3c 5a                	cmp    $0x5a,%al
    6f02:	7f 48                	jg     6f4c <__sprintf_chk@plt+0x226c>
    6f04:	ff c6                	inc    %esi
    6f06:	49 c1 e1 11          	shl    $0x11,%r9
    6f0a:	4c c6                	rex.WR (bad) 
    6f0c:	48 75 de             	rex.W jne 6eed <__sprintf_chk@plt+0x220d>
    6f0f:	0f 49 f7             	cmovns %edi,%esi
    6f12:	fc                   	cld    
    6f13:	ff                   	(bad)  
    6f14:	ff 02                	incl   (%rdx)
    6f16:	49 0f af f2          	imul   %r10,%rsi
    6f1a:	84 c9                	test   %cl,%cl
    6f1c:	75 e2                	jne    6f00 <__sprintf_chk@plt+0x2220>
    6f1e:	0f 85 6d 02 00 00    	jne    7191 <__sprintf_chk@plt+0x24b1>
    6f24:	12 3a                	adc    (%rdx),%bh
    6f26:	3c 48                	cmp    $0x48,%al
    6f28:	c7 c1 a6 03 00 00    	mov    $0x3a6,%ecx
    6f2e:	0a 4c 0f 43          	or     0x43(%rdi,%rcx,1),%cl
    6f32:	c6                   	(bad)  
    6f33:	48 83 c2 01          	add    $0x1,%rdx
    6f37:	48 89 17             	mov    %rdx,(%rdi)
    6f3a:	0f b6 02             	movzbl (%rdx),%eax
    6f3d:	84 4d 21             	test   %cl,0x21(%rbp)
    6f40:	ed                   	in     (%dx),%eax
    6f41:	48 c1 e1 18          	shl    $0x18,%rcx
    6f45:	39 de                	cmp    %ebx,%esi
    6f47:	00 44 8d 48          	add    %al,0x48(%rbp,%rcx,4)
    6f4b:	9f                   	lahf   
    6f4c:	4c 0f af eb          	imul   %rbx,%r13
    6f50:	f9                   	stc    
    6f51:	19 e9                	sbb    %ebp,%ecx
    6f53:	c4                   	(bad)  
    6f54:	fd                   	std    
    6f55:	ff                   	(bad)  
    6f56:	ff 01                	incl   (%rcx)
    6f58:	00 00                	add    %al,(%rax)
    6f5a:	eb b0                	jmp    6f0c <__sprintf_chk@plt+0x222c>
    6f5c:	0f 1f 40 00          	nopl   0x0(%rax)
    6f60:	44 8d 48 9f          	lea    -0x61(%rax),%r9d
    6f64:	41 80 f9 19          	cmp    $0x19,%r9b
    6f68:	77 ea                	ja     6f54 <__sprintf_chk@plt+0x2274>
    6f6a:	0f 84 05 fe ff ff    	je     6d75 <__sprintf_chk@plt+0x2095>
    6f70:	4d 85 4c 21 cb       	test   %r9,-0x35(%r9,%riz,1)
    6f75:	00 00                	add    %al,(%rax)
    6f77:	00 4c 0f 44          	add    %cl,0x44(%rdi,%rcx,1)
    6f7b:	c2 eb 8e             	ret    $0x8eeb
    6f7e:	66 4c 85 c0          	data16 test %r8,%rax
    6f82:	31 e3                	xor    %esp,%ebx
    6f84:	0f 8f bc 00 00 00    	jg     7046 <__sprintf_chk@plt+0x2366>
    6f8a:	49 c1 e5 2e          	shl    $0x2e,%r13
    6f8e:	e9 be 03 00 48       	jmp    48007351 <obstack_alloc_failed_handler@@Base+0x47fe52b1>
    6f93:	4d 31 ea             	xor    %r13,%r10
    6f96:	f8                   	clc    
    6f97:	31 d2                	xor    %edx,%edx
    6f99:	48 c1 c8 03          	ror    $0x3,%rax
    6f9d:	48 f7 f6             	div    %rsi
    6fa0:	48 89 48 31          	mov    %rcx,0x31(%rax)
    6fa4:	c9                   	leave  
    6fa5:	66 2e 48 c1 eb 39    	data16 cs shr $0x39,%rbx
    6fab:	00 00                	add    %al,(%rax)
    6fad:	00 00                	add    %al,(%rax)
    6faf:	90                   	nop
    6fb0:	f3 0f 0f 85 2f 02 00 	repz pfmin 0x22f(%rbp),%mm0
    6fb7:	00 94 
    6fb9:	c0 0f 8c             	rorb   $0x8c,(%rdi)
    6fbc:	c4                   	(bad)  
    6fbd:	fe                   	(bad)  
    6fbe:	ff                   	(bad)  
    6fbf:	ff f3                	push   %rbx
    6fc1:	0f 1e fa             	nop    %edx
    6fc4:	49 09 fd             	or     %rdi,%r13
    6fc7:	48 0f be 11          	movsbq (%rcx),%rdx
    6fcb:	84 d2                	test   %dl,%dl
    6fcd:	74 31                	je     7000 <__sprintf_chk@plt+0x2320>
    6fcf:	31 c0                	xor    %eax,%eax
    6fd1:	75 2e                	jne    7001 <__sprintf_chk@plt+0x2321>
    6fd3:	80 00 00             	addb   $0x0,(%rax)
    6fd6:	00 00                	add    %al,(%rax)
    6fd8:	48 09 d9             	or     %rbx,%rcx
    6fdb:	c6                   	(bad)  
    6fdc:	48 83 c1 01          	add    $0x1,%rcx
    6fe0:	48 01 d0             	add    %rdx,%rax
    6fe3:	48 0f be 11          	movsbq (%rcx),%rdx
    6fe7:	84 d2                	test   %dl,%dl
    6fe9:	49 c1 e8 30          	shr    $0x30,%r8
    6fed:	48 7c de             	rex.W jl 6fce <__sprintf_chk@plt+0x22ee>
    6ff0:	48                   	rex.W
    6ff1:	49 85 f6             	test   %rsi,%r14
    6ff4:	48 31 d0             	xor    %rdx,%rax
    6ff7:	31 d2                	xor    %edx,%edx
    6ff9:	4d 31 f3             	xor    %r14,%r11
    6ffc:	48 89 d0             	mov    %rdx,%rax
    6fff:	c3                   	ret    
    7000:	48                   	rex.W
    7001:	48 c7 c0 3c fc ff ff 	mov    $0xfffffffffffffc3c,%rax
    7008:	d0 31                	shlb   (%rcx)
    700a:	d2 48 f7             	rorb   %cl,-0x9(%rax)
    700d:	f6 48 89 d0          	testb  $0xd0,-0x77(%rax)
    7011:	c3                   	ret    
    7012:	4c 21 ee             	and    %r13,%rsi
    7015:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    701c:	00 
    701d:	0f 1f 00             	nopl   (%rax)
    7020:	f3 0f 1e fa          	endbr64 
    7024:	55                   	push   %rbp
    7025:	48 89 4d 39          	mov    %rcx,0x39(%rbp)
    7029:	c8 3f e8 50          	enter  $0xe83f,$0x50
    702d:	d6                   	(bad)  
    702e:	ff                   	(bad)  
    702f:	ff 48 89             	decl   -0x77(%rax)
    7032:	ef                   	out    %eax,(%dx)
    7033:	7c 2f                	jl     7064 <__sprintf_chk@plt+0x2384>
    7035:	47 d6                	rex.RXB (bad) 
    7037:	ff                   	(bad)  
    7038:	ff 0f                	decl   (%rdi)
    703a:	1f                   	(bad)  
    703b:	4d 89 fa             	mov    %r15,%r10
    703e:	00 00                	add    %al,(%rax)
    7040:	48 89 f8             	mov    %rdi,%rax
    7043:	48 89 f7             	mov    %rsi,%rdi
    7046:	0f be f2             	movsbl %dl,%esi
    7049:	83 ee 41             	sub    $0x41,%esi
    704c:	44 0f b6 40 07       	movzbl 0x7(%rax),%r8d
    7051:	83 fe 19             	cmp    $0x19,%esi
    7054:	0f 87 b6 00 00 00    	ja     7110 <__sprintf_chk@plt+0x2430>
    705a:	41 83 e0 df          	and    $0xffffffdf,%r8d
    705e:	41 38 d0             	cmp    %dl,%r8b
    7061:	40 0f 94 49 c1       	rex sete -0x3f(%rcx)
    7066:	4d 01 e0             	add    %r12,%r8
    7069:	0e                   	(bad)  
    706a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    7070:	84 d2                	test   %dl,%dl
    7072:	75 0c                	jne    7080 <__sprintf_chk@plt+0x23a0>
    7074:	48 09 ce             	or     %rcx,%rsi
    7077:	4d 21 fa             	and    %r15,%r10
    707a:	c0 44 89 c0 c3       	rolb   $0xc3,-0x40(%rcx,%rcx,4)
    707f:	48 39 49 c1          	cmp    %rcx,-0x3f(%rcx)
    7083:	e4 26                	in     $0x26,%al
    7085:	01 00                	add    %eax,(%rax)
    7087:	00 ea                	add    %ch,%dl
    7089:	41 83 fa 19          	cmp    $0x19,%r10d
    708d:	0f 87 8d 00 00 00    	ja     7120 <__sprintf_chk@plt+0x2440>
    7093:	83 e6 df             	and    $0xffffffdf,%esi
    7096:	40 38 ce             	cmp    %cl,%sil
    7099:	0f 4d 01             	cmovge (%rcx),%eax
    709c:	dd d2                	fst    %st(2)
    709e:	0f 8c 48 c1 e9 82    	jl     ffffffff82ea31ec <obstack_alloc_failed_handler@@Base+0xffffffff82e8114c>
    70a4:	00 00                	add    %al,(%rax)
    70a6:	00 c9                	add    %cl,%cl
    70a8:	74 ca                	je     7074 <__sprintf_chk@plt+0x2394>
    70aa:	4d 29 f1             	sub    %r14,%r9
    70ad:	74 c5                	je     7074 <__sprintf_chk@plt+0x2394>
    70af:	b9 09 00 00 00       	mov    $0x9,%ecx
    70b4:	4c 85 fa             	test   %r15,%rdx
    70b7:	2e 0f 1f 48 48       	cs nopl 0x48(%rax)
    70bc:	ff c3                	inc    %ebx
    70be:	00 00                	add    %al,(%rax)
    70c0:	48 83 c1 01          	add    $0x1,%rcx
    70c4:	40 38 f2             	cmp    %sil,%dl
    70c7:	75 35                	jne    70fe <__sprintf_chk@plt+0x241e>
    70c9:	44 0f b6 0f          	movzbl (%rdi),%r9d
    70cd:	8f                   	(bad)  
    70ce:	3c 4d                	cmp    $0x4d,%al
    70d0:	0f 8c 3f ff ff ff    	jl     7015 <__sprintf_chk@plt+0x2335>
    70d6:	48 89 f6             	mov    %rsi,%rsi
    70d9:	dd fe                	(bad)  
    70db:	ff                   	(bad)  
    70dc:	ff 20                	jmp    *(%rax)
    70de:	83 c2 20             	add    $0x20,%edx
    70e1:	44 0f b6 04 0f       	movzbl (%rdi,%rcx,1),%r8d
    70e6:	45 8d 50 4c          	lea    0x4c(%r8),%r10d
    70ea:	29 ee                	sub    %ebp,%esi
    70ec:	c6 41 83 fa          	movb   $0xfa,-0x7d(%rcx)
    70f0:	19 e9                	sbb    %ebp,%ecx
    70f2:	14 fc                	adc    $0xfc,%al
    70f4:	49 f7 fb             	idiv   %r11
    70f7:	83 c6 0f             	add    $0xf,%esi
    70fa:	8f                   	(bad)  
    70fb:	0f 8f d9 02 00 00    	jg     73da <__sprintf_chk@plt+0x26fa>
    7101:	41 0f 48 ff          	cmovs  %r15d,%edi
    7105:	c6                   	(bad)  
    7106:	0f                   	(bad)  
    7107:	0f 8f c6 03 00 00    	jg     74d3 <__sprintf_chk@plt+0x27f3>
    710d:	ff 66 e9             	jmp    *-0x17(%rsi)
    7110:	7c 03                	jl     7115 <__sprintf_chk@plt+0x2435>
    7112:	00 00                	add    %al,(%rax)
    7114:	0f 94 c6             	sete   %dh
    7117:	e9 49 ff 49 c1       	jmp    ffffffffc14a7065 <obstack_alloc_failed_handler@@Base+0xffffffffc1484fc5>
    711c:	eb 29                	jmp    7147 <__sprintf_chk@plt+0x2467>
    711e:	40 00 4d 09          	rex add %cl,0x9(%rbp)
    7122:	e5 4d                	in     $0x4d,%eax
    7124:	21 e2                	and    %esp,%edx
    7126:	31 e1                	xor    %esp,%ecx
    7128:	ff                   	(bad)  
    7129:	ff                   	(bad)  
    712a:	ff 0f                	decl   (%rdi)
    712c:	1f                   	(bad)  
    712d:	44 00 00             	add    %r8b,(%rax)
    7130:	41 54                	push   %r12
    7132:	55                   	push   %rbp
    7133:	48 31 c8             	xor    %rcx,%rax
    7136:	fb                   	sti    
    7137:	48 85 d2             	test   %rdx,%rdx
    713a:	74 6c                	je     71a8 <__sprintf_chk@plt+0x24c8>
    713c:	48 89 d5             	mov    %rdx,%rbp
    713f:	eb ed                	jmp    712e <__sprintf_chk@plt+0x244e>
    7141:	48 c1 ee 3c          	shr    $0x3c,%rsi
    7145:	0f 00 00             	sldt   (%rax)
    7148:	48                   	rex.W
    7149:	4d 29 0f             	sub    %r9,(%r15)
    714c:	84 a7 fd ff 48 01    	test   %ah,0x148fffd(%rdi)
    7152:	ff 48 8b             	decl   -0x75(%rax)
    7155:	43 38 48 89          	rex.XB cmp %cl,-0x77(%r8)
    7159:	33 49 ff             	xor    -0x1(%rcx),%ecx
    715c:	c6 01 0f             	movb   $0xf,(%rcx)
    715f:	8f                   	(bad)  
    7160:	2b 01                	sub    (%rcx),%eax
    7162:	00 00                	add    %al,(%rax)
    7164:	ff d0                	call   *%rax
    7166:	48 89 43 08          	mov    %rax,0x8(%rbx)
    716a:	48 85 c0             	test   %rax,%rax
    716d:	74 50                	je     71bf <__sprintf_chk@plt+0x24df>
    716f:	4a 8d 54 20 48       	lea    0x48(%rax,%r12,1),%rdx
    7174:	c1 e2 1b             	shl    $0x1b,%edx
    7177:	48 21 e9             	and    %rbp,%rcx
    717a:	3c fe                	cmp    $0xfe,%al
    717c:	ff                   	(bad)  
    717d:	ff 48 89             	decl   -0x77(%rax)
    7180:	53                   	push   %rbx
    7181:	18 48 8b             	sbb    %cl,-0x75(%rax)
    7184:	13 48 01             	adc    0x1(%rax),%ecx
    7187:	c2 4c 31             	ret    $0x314c
    718a:	ef                   	out    %eax,(%dx)
    718b:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    718f:	48 c7                	rex.W (bad) 
    7191:	4c 39 de             	cmp    %r11,%rsi
    7194:	00 00                	add    %al,(%rax)
    7196:	00 b8 01 00 00 0f    	add    %bh,0xf000001(%rax)
    719c:	8f 48 ff c2          	(bad)  
    71a0:	00 31                	add    %dh,(%rcx)
    71a2:	eb 71                	jmp    7215 <__sprintf_chk@plt+0x2535>
    71a4:	c3                   	ret    
    71a5:	0f 1f 00             	nopl   (%rax)
    71a8:	41 bc e9 da 0f 84    	mov    $0x840fdae9,%r12d
    71ae:	85 fe                	test   %edi,%esi
    71b0:	ff                   	(bad)  
    71b1:	ff c7                	inc    %edi
    71b3:	c6                   	(bad)  
    71b4:	69 ff ff ff 48 89    	imul   $0x8948ffff,%edi,%edi
    71ba:	f7 ff                	idiv   %edi
    71bc:	d0 eb                	shr    %bl
    71be:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    71bf:	48 8d 05 da ae 01 00 	lea    0x1aeda(%rip),%rax        # 220a0 <obstack_alloc_failed_handler@@Base>
    71c6:	ff 10                	call   *(%rax)
    71c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    71cf:	00 
    71d0:	48 39 f7             	cmp    %rsi,%rdi
    71d3:	0f 83 c7 00 00 00    	jae    72a0 <__sprintf_chk@plt+0x25c0>
    71d9:	41 55                	push   %r13
    71db:	41 54                	push   %r12
    71dd:	49 89 f4             	mov    %rsi,%r12
    71e0:	55                   	push   %rbp
    71e1:	53                   	push   %rbx
    71e2:	48 89 fb             	mov    %rdi,%rbx
    71e5:	48 83 ec 08          	sub    $0x8,%rsp
    71e9:	4c 8b 2d b8 ad 01 00 	mov    0x1adb8(%rip),%r13        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    71f0:	eb 44                	jmp    7236 <__sprintf_chk@plt+0x2556>
    71f2:	66 0f 48 d1          	cmovs  %cx,%dx
    71f6:	e6 00                	out    %al,$0x0
    71f8:	4c 89 e0             	mov    %r12,%rax
    71fb:	31 d2                	xor    %edx,%edx
    71fd:	48 f7 f1             	div    %rcx
    7200:	31 d2                	xor    %edx,%edx
    7202:	49 89 c1             	mov    %rax,%r9
    7205:	48 89 e8             	mov    %rbp,%rax
    7208:	48 f7 f1             	div    %rcx
    720b:	49 39 c1             	cmp    %rax,%r9
    720e:	76 42                	jbe    7252 <__sprintf_chk@plt+0x2572>
    7210:	4c 39 c6             	cmp    %r8,%rsi
    7213:	73 73                	jae    7288 <__sprintf_chk@plt+0x25a8>
    7215:	48 8d 46 01          	lea    0x1(%rsi),%rax
    7219:	48 89 47 28          	mov    %rax,0x28(%rdi)
    721d:	c6 06 09             	movb   $0x9,(%rsi)
    7220:	48 89 d8             	mov    %rbx,%rax
    7223:	31 d2                	xor    %edx,%edx
    7225:	48 f7 f1             	div    %rcx
    7228:	48 01 d9             	add    %rbx,%rcx
    722b:	48 89 cb             	mov    %rcx,%rbx
    722e:	48 29 d3             	sub    %rdx,%rbx
    7231:	4c 39 e3             	cmp    %r12,%rbx
    7234:	73 34                	jae    726a <__sprintf_chk@plt+0x258a>
    7236:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    723a:	48 8b 0d 37 b2 01 00 	mov    0x1b237(%rip),%rcx        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    7241:	48 8d 6b 01          	lea    0x1(%rbx),%rbp
    7245:	48 8b 77 28          	mov    0x28(%rdi),%rsi
    7249:	4c 8b 47 30          	mov    0x30(%rdi),%r8
    724d:	48 85 c9             	test   %rcx,%rcx
    7250:	75 a6                	jne    71f8 <__sprintf_chk@plt+0x2518>
    7252:	4c 39 c6             	cmp    %r8,%rsi
    7255:	73 21                	jae    7278 <__sprintf_chk@plt+0x2598>
    7257:	48                   	rex.W
    7258:	48 29 c3             	sub    %rax,%rbx
    725b:	48 e9 33 fe ff ff    	rex.W jmp 7094 <__sprintf_chk@plt+0x23b4>
    7261:	20 48 89             	and    %cl,-0x77(%rax)
    7264:	eb 4c                	jmp    72b2 <__sprintf_chk@plt+0x25d2>
    7266:	39 e3                	cmp    %esp,%ebx
    7268:	72 cc                	jb     7236 <__sprintf_chk@plt+0x2556>
    726a:	48 83 c4 08          	add    $0x8,%rsp
    726e:	5b                   	pop    %rbx
    726f:	5d                   	pop    %rbp
    7270:	41 5c                	pop    %r12
    7272:	41 5d                	pop    %r13
    7274:	c3                   	ret    
    7275:	0f 1f 00             	nopl   (%rax)
    7278:	be 20 00 00 00       	mov    $0x20,%esi
    727d:	e8 7e d6 ff ff       	call   4900 <__overflow@plt>
    7282:	eb de                	jmp    7262 <__sprintf_chk@plt+0x2582>
    7284:	0f 1f 40 00          	nopl   0x0(%rax)
    7288:	be 09 00 00 00       	mov    $0x9,%esi
    728d:	e8 6e d6 ff ff       	call   4900 <__overflow@plt>
    7292:	48 8b 0d df b1 01 00 	mov    0x1b1df(%rip),%rcx        # 22478 <obstack_alloc_failed_handler@@Base+0x3d8>
    7299:	eb 85                	jmp    7220 <__sprintf_chk@plt+0x2540>
    729b:	0f 4d 09             	cmovge (%rcx),%ecx
    729e:	f3 00 c3             	repz add %al,%bl
    72a1:	66 66 2e 0f 1f 84 48 	data16 cs nopw -0x1c60509(%rax,%rcx,2)
    72a8:	f7 fa 39 fe 
    72ac:	ff                   	(bad)  
    72ad:	ff 40 49             	incl   0x49(%rax)
    72b0:	f7 fd                	idiv   %ebp
    72b2:	41 54                	push   %r12
    72b4:	49 f7 fd             	idiv   %r13
    72b7:	83 ec 08             	sub    $0x8,%esp
    72ba:	48 8b 46 18          	mov    0x18(%rsi),%rax
    72be:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    72c2:	48 89 0f             	mov    %rcx,(%rdi)
    72c5:	8c 89 fc ff ff fd    	mov    %cs,-0x2000004(%rcx)
    72cb:	07                   	(bad)  
    72cc:	0f 4d 01             	cmovge (%rcx),%eax
    72cf:	c3                   	ret    
    72d0:	3b 00                	cmp    (%rax),%eax
    72d2:	48 39 d8             	cmp    %rbx,%rax
    72d5:	0f 84 94 00 00 00    	je     736f <__sprintf_chk@plt+0x268f>
    72db:	48 8b 56 49          	mov    0x49(%rsi),%rdx
    72df:	29 c3                	sub    %eax,%ebx
    72e1:	25 c2 4d 01 ea       	and    $0xea014dc2,%eax
    72e6:	4c 8d 2d 33 26 01 0f 	lea    0xf012633(%rip),%r13        # f019920 <obstack_alloc_failed_handler@@Base+0xeff7880>
    72ed:	85 3b                	test   %edi,(%rbx)
    72ef:	fe                   	(bad)  
    72f0:	ff                   	(bad)  
    72f1:	ff d2                	call   *%rdx
    72f3:	0f 8f 85 fe ff ff    	jg     717e <__sprintf_chk@plt+0x249e>
    72f9:	20 49 89             	and    %cl,-0x77(%rcx)
    72fc:	48 f7 fe             	idiv   %rsi
    72ff:	c1 e7 49             	shl    $0x49,%edi
    7302:	01 ff                	add    %edi,%edi
    7304:	48 2b 4e 08          	sub    0x8(%rsi),%rcx
    7308:	49                   	rex.WB
    7309:	49 c1 e6 18          	shl    $0x18,%r14
    730d:	46 d0 48 83          	rex.RX rorb -0x7d(%rax)
    7311:	e5 f8                	in     $0xf8,%eax
    7313:	48 01 dd             	add    %rbx,%rbp
    7316:	48 89 56 49          	mov    %rdx,0x49(%rsi)
    731a:	f7 f8                	idiv   %eax
    731c:	56                   	push   %rsi
    731d:	48 0f 49 c7          	cmovns %rdi,%rax
    7321:	c3                   	ret    
    7322:	33 03                	xor    (%rbx),%eax
    7324:	00 00                	add    %al,(%rax)
    7326:	fb                   	sti    
    7327:	fc                   	cld    
    7328:	ff                   	(bad)  
    7329:	ff 48 29             	decl   0x29(%rax)
    732c:	da 00                	fiaddl (%rax)
    732e:	00 00                	add    %al,(%rax)
    7330:	48 8b 13             	mov    (%rbx),%rdx
    7333:	4c 89 ee             	mov    %r13,%rsi
    7336:	bf 48 c1 e8 12       	mov    $0x12e8c148,%edi
    733b:	4d 0f af d7          	imul   %r15,%r10
    733f:	c3                   	ret    
    7340:	08 e8                	or     %ch,%al
    7342:	fa                   	cli    
    7343:	d7                   	xlat   %ds:(%rbx)
    7344:	ff                   	(bad)  
    7345:	ff 48 39             	decl   0x39(%rax)
    7348:	eb 75                	jmp    73bf <__sprintf_chk@plt+0x26df>
    734a:	4d 0f af ce          	imul   %r14,%r9
    734e:	48 ff c3             	inc    %rbx
    7351:	47 28 48 3b          	rex.RXB sub %r9b,0x3b(%r8)
    7355:	47 30 73 1f          	rex.RXB xor %r14b,0x1f(%r11)
    7359:	48 8d 50 01          	lea    0x1(%rax),%rdx
    735d:	48                   	rex.W
    735e:	49 ff c6             	inc    %r14
    7361:	c6 00 0a             	movb   $0xa,(%rax)
    7364:	48 83 48 c7 c2       	orq    $0xffffffffffffffc2,-0x39(%rax)
    7369:	fd                   	std    
    736a:	fe                   	(bad)  
    736b:	ff                   	(bad)  
    736c:	ff cf                	dec    %edi
    736e:	c3                   	ret    
    736f:	80 4e 50 02          	orb    $0x2,0x50(%rsi)
    7373:	e9 63 ff ff ff       	jmp    72db <__sprintf_chk@plt+0x25fb>
    7378:	58                   	pop    %rax
    7379:	be 0a 00 00 00       	mov    $0xa,%esi
    737e:	5b                   	pop    %rbx
    737f:	5d                   	pop    %rbp
    7380:	41 5c                	pop    %r12
    7382:	41 5d                	pop    %r13
    7384:	e9 77 d5 ff ff       	jmp    4900 <__overflow@plt>
    7389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7390:	80 3d 7a 48 4c 09 ea 	cmpb   $0xea,0x94c487a(%rip)        # 94cbc11 <obstack_alloc_failed_handler@@Base+0x94a9b71>
    7397:	03 00                	add    (%rax),%eax
    7399:	00 c0                	add    %al,%al
    739b:	05 02 49 39 4d       	add    $0x4d394902,%eax
    73a0:	39 d4                	cmp    %edx,%esp
    73a2:	69 af 01 4d 0f af e2 	imul   $0x4cc80e2,-0x50f0b2ff(%rdi),%ebp
    73a9:	80 cc 04 
    73ac:	8b 15 49 29 f2 00    	mov    0xf22949(%rip),%edx        # f29cfb <obstack_alloc_failed_handler@@Base+0xf07c5b>
    73b2:	4d 21 f5             	and    %r14,%r13
    73b5:	49 c1 e0 3d          	shl    $0x3d,%r8
    73b9:	c0 01 00             	rolb   $0x0,(%rcx)
    73bc:	83 fa 03             	cmp    $0x3,%edx
    73bf:	4d 39 f1             	cmp    %r14,%r9
    73c2:	d9 ff                	fcos   
    73c4:	ff 48 8d             	decl   -0x73(%rax)
    73c7:	0d 44 25 01 00       	or     $0x12544,%eax
    73cc:	8b 0c 91             	mov    (%rcx,%rdx,4),%ecx
    73cf:	09 c8                	or     %ecx,%eax
    73d1:	80 3d ad ac 01 00 4c 	cmpb   $0x4c,0x1acad(%rip)        # 22085 <_obstack_memory_used@@Base+0x118d5>
    73d8:	39 ff                	cmp    %edi,%edi
    73da:	49 89 fb             	mov    %rdi,%r11
    73dd:	c0 01 00             	rolb   $0x0,(%rcx)
    73e0:	00 0f                	add    %cl,(%rdi)
    73e2:	84 0f                	test   %cl,(%rdi)
    73e4:	8c 99 fc ff ff 02    	mov    %ds,0x2fffffc(%rcx)
    73ea:	00 48 f7             	add    %cl,-0x9(%rax)
    73ed:	ff 91 ac 01 00 00    	call   *0x1ac(%rcx)
    73f3:	74 03                	je     73f8 <__sprintf_chk@plt+0x2718>
    73f5:	83 c8 10             	or     $0x10,%eax
    73f8:	8b 15 26 c0 01 00    	mov    0x1c026(%rip),%edx        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    73fe:	83 fa 02             	cmp    $0x2,%edx
    7401:	48 ff c6             	inc    %rsi
    7404:	4b 83 fa 03          	rex.WXB cmp $0x3,%r10
    7408:	74 4e                	je     7458 <__sprintf_chk@plt+0x2778>
    740a:	83 48 09 fa          	orl    $0xfffffffa,0x9(%rax)
    740e:	63 09                	movsxd (%rcx),%ecx
    7410:	c8 4c 09 ce          	enter  $0x94c,$0xce
    7414:	49 f7 fc             	idiv   %r12
    7417:	85 be 02 00 00 01    	test   %edi,0x1000002(%rsi)
    741d:	00 83 49 c1 e6 26    	add    %al,0x26e6c149(%rbx)
    7423:	7e 2b                	jle    7450 <__sprintf_chk@plt+0x2770>
    7425:	0f 8c 68 01 00 00    	jl     7593 <__sprintf_chk@plt+0x28b3>
    742b:	fa                   	cli    
    742c:	04 0f                	add    $0xf,%al
    742e:	85 bd d8 ff ff 8b    	test   %edi,-0x74000028(%rbp)
    7434:	15 e7 49 09 f3       	adc    $0xf30949e7,%eax
    7439:	83 fa 03             	cmp    $0x3,%edx
    743c:	0f 87 ae d8 4d 29    	ja     294e4cf0 <obstack_alloc_failed_handler@@Base+0x294c2c50>
    7442:	fe 8d 0d c7 24 01    	decb   0x124c70d(%rbp)
    7448:	00 8b 0c 91 09 7c    	add    %cl,0x7c09910c(%rbx)
    744e:	ef                   	out    %eax,(%dx)
    744f:	90                   	nop
    7450:	83 c2 01             	add    $0x1,%edx
    7453:	83 fa 02             	cmp    $0x2,%edx
    7456:	77 1f                	ja     7477 <__sprintf_chk@plt+0x2797>
    7458:	c3                   	ret    
    7459:	48 c1 ea 13          	shr    $0x13,%rdx
    745d:	00 00                	add    %al,(%rax)
    745f:	4c                   	rex.WR
    7460:	4c 09 f0             	or     %r14,%rax
    7463:	f7 e7                	mul    %edi
    7465:	19 40 00             	sbb    %eax,0x0(%rax)
    7468:	0d 04 02 00 00       	or     $0x204,%eax
    746d:	e9 7a ff ff ff       	jmp    73ec <__sprintf_chk@plt+0x270c>
    7472:	49 0f 84 b8 02 00 0f 	rex.WB je f007731 <obstack_alloc_failed_handler@@Base+0xefe5691>
    7479:	8f                   	(bad)  
    747a:	11 fe                	adc    %edi,%esi
    747c:	ff                   	(bad)  
    747d:	ff                   	(bad)  
    747e:	39 cb                	cmp    %ecx,%ebx
    7480:	e6 15                	out    %al,$0x15
    7482:	48 85 db             	test   %rbx,%rbx
    7485:	41 55                	push   %r13
    7487:	49 89 f5             	mov    %rsi,%r13
    748a:	48 01 d9             	add    %rbx,%rcx
    748d:	89 cc                	mov    %ecx,%esp
    748f:	55                   	push   %rbp
    7490:	48 89 fd             	mov    %rdi,%rbp
    7493:	53                   	push   %rbx
    7494:	48 8b 77 49          	mov    0x49(%rdi),%rsi
    7498:	48 c1 48 31 d1       	rorq   $0xd1,0x31(%rax)
    749d:	30 48 3b             	xor    %cl,0x3b(%rax)
    74a0:	45 0f 85 2b 01 00 00 	rex.RB jne 75d2 <__sprintf_chk@plt+0x28f2>
    74a7:	ff                   	(bad)  
    74a8:	ff 89 c3 48 c1 e3    	decl   -0x1c3eb73d(%rcx)
    74ae:	04 48                	add    $0x48,%al
    74b0:	4c 31 ca             	xor    %r9,%rdx
    74b3:	49 89 1e             	mov    %rbx,(%r14)
    74b6:	48 8b 33             	mov    (%rbx),%rsi
    74b9:	48 85 f6             	test   %rsi,%rsi
    74bc:	49 ff c0             	inc    %r8
    74bf:	39 ee                	cmp    %ebp,%esi
    74c1:	0f 84 b9 00 00 00    	je     7580 <__sprintf_chk@plt+0x28a0>
    74c7:	4c 89 ef             	mov    %r13,%rdi
    74ca:	ff 4c 89 f3          	decl   -0xd(%rcx,%rcx,4)
    74ce:	c0 74 55 48 8b       	shlb   $0x8b,0x48(%rbp,%rdx,2)
    74d3:	03 45 84             	add    -0x7c(%rbp),%eax
    74d6:	e4 74                	in     $0x74,%al
    74d8:	58                   	pop    %rax
    74d9:	0f 8c a2 03 4d 39    	jl     394d7881 <obstack_alloc_failed_handler@@Base+0x394b57e1>
    74df:	ce                   	(bad)  
    74e0:	0f 84 8a 00 00 00    	je     7570 <__sprintf_chk@plt+0x2890>
    74e6:	f3 0f 6f 02          	movdqu (%rdx),%xmm0
    74ea:	0f 11 03             	movups %xmm0,(%rbx)
    74ed:	49 c7 c6 08 02 00 00 	mov    $0x208,%r14
    74f4:	48 8b 4d 75          	mov    0x75(%rbp),%rcx
    74f8:	6d                   	insl   (%dx),%es:(%rdi)
    74f9:	89 4a 0f             	mov    %ecx,0xf(%rdx)
    74fc:	8f                   	(bad)  
    74fd:	4e 03 00             	rex.WRX add (%rax),%r8
    7500:	00 5d 41             	add    %bl,0x41(%rbp)
    7503:	5c                   	pop    %rsp
    7504:	41 5d                	pop    %r13
    7506:	41 5e                	pop    %r14
    7508:	0f 84 dd 03 00 00    	je     78eb <__sprintf_chk@plt+0x2c0b>
    750e:	00 00                	add    %al,(%rax)
    7510:	48 8b 30             	mov    (%rax),%rsi
    7513:	4c 39 ee             	cmp    %r13,%rsi
    7516:	74 0f                	je     7527 <__sprintf_chk@plt+0x2847>
    7518:	49 c1 e6 36          	shl    $0x36,%r14
    751c:	ff                   	(bad)  
    751d:	38 84 c0 75 1e 48 8b 	cmp    %al,-0x74b7e18b(%rax,%rax,8)
    7524:	5b                   	pop    %rbx
    7525:	08 48 8b             	or     %cl,-0x75(%rax)
    7528:	43 08 48 85          	rex.XB or %cl,-0x7b(%r8)
    752c:	c0 75 e1 31          	shlb   $0x31,-0x1f(%rbp)
    7530:	c0 0f 84             	rorb   $0x84,(%rdi)
    7533:	b9 00 00 00 41       	mov    $0x41000000,%ecx
    7538:	5e                   	pop    %rsi
    7539:	c3                   	ret    
    753a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7540:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    7544:	48 8b 02             	mov    (%rdx),%rax
    7547:	45 84 e4             	test   %r12b,%r12b
    754a:	74 e5                	je     7531 <__sprintf_chk@plt+0x2851>
    754c:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    7550:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    7554:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    755b:	48 8b e9             	mov    %rcx,%rbp
    755e:	dc 03                	faddl  (%rbx)
    7560:	00 00                	add    %al,(%rax)
    7562:	08 5b 48             	or     %bl,0x48(%rbx)
    7565:	89 55 48             	mov    %edx,0x48(%rbp)
    7568:	5d                   	pop    %rbp
    7569:	41 5c                	pop    %r12
    756b:	41 5d                	pop    %r13
    756d:	41 5e                	pop    %r14
    756f:	c3                   	ret    
    7570:	48 c7 03 00 48 c1 e8 	movq   $0xffffffffe8c14800,(%rbx)
    7577:	15 b8 0f 1f 80       	adc    $0x801f0fb8,%eax
    757c:	00 00                	add    %al,(%rax)
    757e:	00 00                	add    %al,(%rax)
    7580:	48 89 48 09          	mov    %rcx,0x9(%rax)
    7584:	d3 ff                	sar    %cl,%edi
    7586:	ff                   	(bad)  
    7587:	ff 0f                	decl   (%rdi)
    7589:	1f                   	(bad)  
    758a:	84 00                	test   %al,(%rax)
    758c:	00 0f                	add    %cl,(%rdi)
    758e:	8c c1                	mov    %es,%ecx
    7590:	fc                   	cld    
    7591:	ff                   	(bad)  
    7592:	ff 56 49             	call   *0x49(%rsi)
    7595:	4c 21 d3             	and    %r10,%rbx
    7598:	55                   	push   %rbp
    7599:	41 54                	push   %r12
    759b:	41 89 d4             	mov    %edx,%r12d
    759e:	55                   	push   %rbp
    759f:	48 89 f5             	mov    %rsi,%rbp
    75a2:	53                   	push   %rbx
    75a3:	48 83 ec 4d          	sub    $0x4d,%rsp
    75a7:	0f af d1             	imul   %ecx,%edx
    75aa:	48 3b 5e 08          	cmp    0x8(%rsi),%rbx
    75ae:	4c 89 d1             	mov    %r10,%rcx
    75b1:	fd                   	std    
    75b2:	00 00                	add    %al,(%rax)
    75b4:	00 0f                	add    %cl,(%rdi)
    75b6:	1f                   	(bad)  
    75b7:	00 48 83             	add    %cl,-0x7d(%rax)
    75ba:	c3                   	ret    
    75bb:	10 48 39             	adc    %cl,0x39(%rax)
    75be:	5d                   	pop    %rbp
    75bf:	4c 89 ee             	mov    %r13,%rsi
    75c2:	ec                   	in     (%dx),%al
    75c3:	00 00                	add    %al,(%rax)
    75c5:	00 48 c1             	add    %cl,-0x3f(%rax)
    75c8:	49 01 f8             	add    %rdi,%r8
    75cb:	ff 74 ea 4c          	push   0x4c(%rdx,%rbp,8)
    75cf:	8b 6b 08             	mov    0x8(%rbx),%ebp
    75d2:	4d                   	rex.WRB
    75d3:	49 ff c5             	inc    %r13
    75d6:	49 29 d3             	sub    %rdx,%r11
    75d9:	76 10                	jbe    75eb <__sprintf_chk@plt+0x290b>
    75db:	eb 17                	jmp    75f4 <__sprintf_chk@plt+0x2914>
    75dd:	0f 1f 00             	nopl   (%rax)
    75e0:	48                   	rex.W
    75e1:	4d 0f e9 7b fc       	rex.WRB psubsw -0x4(%r11),%mm7
    75e6:	ff                   	(bad)  
    75e7:	ff 0f                	decl   (%rdi)
    75e9:	8f 49 21 d6          	(bad)
    75ed:	ff d2                	call   *%rdx
    75ef:	48 f7 fa             	idiv   %rdx
    75f2:	89 d5                	mov    %edx,%ebp
    75f4:	4d 8b 7d 00          	mov    0x0(%r13),%r15
    75f8:	4d 09 d3             	or     %r10,%r11
    75fb:	41                   	rex.B
    75fc:	4d 89 f6             	mov    %r14,%r14
    75ff:	48 c1 e0 29          	shl    $0x29,%rax
    7603:	48 39 49 09          	cmp    %rcx,0x9(%rcx)
    7607:	c4                   	(bad)  
    7608:	49 ff c2             	inc    %r10
    760b:	0f 49 c7             	cmovns %edi,%eax
    760e:	c3                   	ret    
    760f:	46                   	rex.RX
    7610:	48 c1 e0 16          	shl    $0x16,%rax
    7614:	8b 55 08             	mov    0x8(%rbp),%edx
    7617:	4d 39 fc             	cmp    %r15,%r12
    761a:	0f 8c ab 01 00 00    	jl     77cb <__sprintf_chk@plt+0x2aeb>
    7620:	49 8b 46 4c          	mov    0x4c(%r14),%rax
    7624:	39 c0                	cmp    %eax,%eax
    7626:	46 18 01             	rex.RX sbb %r8b,(%rcx)
    7629:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    7630:	00 
    7631:	49 89 45 08          	mov    %rax,0x8(%r13)
    7635:	4d                   	rex.WRB
    7636:	4d 85 cf             	test   %r9,%r15
    7639:	48 0f 85 68 02 00 00 	rex.W jne 78a8 <__sprintf_chk@plt+0x2bc8>
    7640:	3b 48 c7             	cmp    -0x39(%rax),%ecx
    7643:	43 08 00             	rex.XB or %al,(%r8)
    7646:	49 f7 fe             	idiv   %r14
    7649:	45 0f 8c b7 fe ff ff 	rex.RB jl 7507 <__sprintf_chk@plt+0x2827>
    7650:	ff 4c 01 d1          	decl   -0x2f(%rcx,%rax,1)
    7654:	39 fa                	cmp    %edi,%edx
    7656:	4c 89 ff             	mov    %r15,%rdi
    7659:	41                   	rex.B
    765a:	48 89 c8             	mov    %rcx,%rax
    765d:	49 f7 f8             	idiv   %r8
    7660:	49 3b 46 10          	cmp    0x10(%r14),%rax
    7664:	0f 83 91 d6 ff ff    	jae    4cfb <__sprintf_chk@plt+0x1b>
    766a:	49 c1 e5 49          	shl    $0x49,%r13
    766e:	39 f4                	cmp    %esi,%esp
    7670:	fe 49 83             	decb   -0x7d(%rcx)
    7673:	7d 00                	jge    7675 <__sprintf_chk@plt+0x2995>
    7675:	00 74 58 49          	add    %dh,0x49(%rax,%rbx,2)
    7679:	8b 46 48             	mov    0x48(%rsi),%eax
    767c:	48 0f 8f d2 00 00 00 	rex.W jg 7755 <__sprintf_chk@plt+0x2a75>
    7683:	21 fc                	and    %edi,%esp
    7685:	49 89 56 48          	mov    %rdx,0x48(%r14)
    7689:	4d 85 f6             	test   %r14,%r14
    768c:	08 48 f7             	or     %cl,-0x9(%rax)
    768f:	f9                   	stc    
    7690:	4d 09 d0             	or     %r10,%r8
    7693:	fb                   	sti    
    7694:	49 89 45 08          	mov    %rax,0x8(%r13)
    7698:	48 c7 03 00 00 4d 09 	movq   $0x94d0000,(%rbx)
    769f:	fb                   	sti    
    76a0:	83 c3 10             	add    $0x10,%ebx
    76a3:	48 83 49 21 db       	orq    $0xffffffffffffffdb,0x21(%rcx)
    76a8:	48 39 5d 08          	cmp    %rbx,0x8(%rbp)
    76ac:	0f 87 14 ff 49 21    	ja     214a75c6 <obstack_alloc_failed_handler@@Base+0x21485526>
    76b2:	ce                   	(bad)  
    76b3:	83 49 09 c8          	orl    $0xffffffc8,0x9(%rcx)
    76b7:	01 00                	add    %eax,(%rax)
    76b9:	00 00                	add    %al,(%rax)
    76bb:	5b                   	pop    %rbx
    76bc:	5d                   	pop    %rbp
    76bd:	41 5c                	pop    %r12
    76bf:	41 5d                	pop    %r13
    76c1:	41 5e                	pop    %r14
    76c3:	41 5f                	pop    %r15
    76c5:	4d 31 c7             	xor    %r8,%r15
    76c8:	0f 1f 84 4d 31 dd 00 	nopl   0x4900dd31(%rbp,%rcx,2)
    76cf:	49 
    76d0:	c1 e9 25             	shr    $0x25,%ecx
    76d3:	00 49 83             	add    %cl,-0x7d(%rcx)
    76d6:	49 29 d5             	sub    %rdx,%r13
    76d9:	eb bd                	jmp    7698 <__sprintf_chk@plt+0x29b8>
    76db:	bf 10 00 00 00       	mov    $0x10,%edi
    76e0:	4d                   	rex.WRB
    76e1:	49 c1 ea 25          	shr    $0x25,%r10
    76e5:	85 0f                	test   %ecx,(%rdi)
    76e7:	8c 45 fd             	mov    %es,-0x3(%rbp)
    76ea:	ff                   	(bad)  
    76eb:	ff c4                	inc    %esp
    76ed:	08 31                	or     %dh,(%rcx)
    76ef:	c0 5b 5d 41          	rcrb   $0x41,0x5d(%rbx)
    76f3:	5c                   	pop    %rsp
    76f4:	4c 0f af e9          	imul   %rcx,%r13
    76f8:	41 5f                	pop    %r15
    76fa:	c3                   	ret    
    76fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7700:	55                   	push   %rbp
    7701:	7c 8b                	jl     768e <__sprintf_chk@plt+0x29ae>
    7703:	49 c7 c2 4f 02 00 00 	mov    $0x24f,%r10
    770a:	89 e9                	mov    %ebp,%ecx
    770c:	48 81 ec 49 ff c2 00 	sub    $0xc2ff49,%rsp
    7713:	64 48 8b 04 25 28 00 	mov    %fs:0x49000028,%rax
    771a:	00 49 
    771c:	c1 e2 26             	shl    $0x26,%edx
    771f:	24 08                	and    $0x8,%al
    7721:	01 00                	add    %eax,(%rax)
    7723:	00 31                	add    %dh,(%rcx)
    7725:	c0 49 89 e0          	rorb   $0xe0,-0x77(%rcx)
    7729:	e8 22 d4 ff ff       	call   4b50 <statx@plt>
    772e:	85 49 4d             	test   %ecx,0x4d(%rcx)
    7731:	89 e3                	mov    %esp,%ebx
    7733:	8b 94 24 08 01 00 00 	mov    0x108(%rsp),%edx
    773a:	49                   	rex.WB
    773b:	48 0f af d2          	imul   %rdx,%rdx
    773f:	48 f7 fb             	idiv   %rbx
    7742:	1b fd                	sbb    %ebp,%edi
    7744:	ff                   	(bad)  
    7745:	ff 29                	ljmp   *(%rcx)
    7747:	d9 00                	flds   (%rax)
    7749:	48 39 f0             	cmp    %rsi,%rax
    774c:	18 01                	sbb    %al,(%rcx)
    774e:	00 00                	add    %al,(%rax)
    7750:	5b                   	pop    %rbx
    7751:	5d                   	pop    %rbp
    7752:	c3                   	ret    
    7753:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7758:	8b 8c 24 88 49 c1 ea 	mov    -0x153eb678(%rsp),%ecx
    775f:	2b 94 24 8c 48 ff c0 	sub    -0x3f00b774(%rsp),%edx
    7766:	49 f7 fd             	idiv   %r13
    7769:	00 00                	add    %al,(%rax)
    776b:	00 0f                	add    %cl,(%rdi)
    776d:	8c 91 4c 21 ff 8f    	mov    %ss,-0x7000deb4(%rcx)
    7773:	b7 fc                	mov    $0xfc,%bh
    7775:	ff                   	(bad)  
    7776:	ff 48 c1             	decl   -0x3f(%rax)
    7779:	e7 08                	out    %eax,$0x8
    777b:	48 21 f1             	and    %rsi,%rcx
    777e:	81 e7 00 ff 0f 00    	and    $0xfff00,%edi
    7784:	48 09 f9             	or     %rdi,%rcx
    7787:	0f 4d 21             	cmovge (%rcx),%esp
    778a:	fb                   	sti    
    778b:	c1 e2 0c             	shl    $0xc,%edx
    778e:	48 09 48 ff          	or     %rcx,-0x1(%rax)
    7792:	c0 00 00             	rolb   $0x0,(%rax)
    7795:	f0 ff 4c 09 e8       	lock decl -0x18(%rcx,%rcx,1)
    779a:	00 48 21             	add    %cl,0x21(%rax)
    779d:	fa                   	cli    
    779e:	48 09 48 89          	or     %rcx,-0x77(%rax)
    77a2:	d0 24 10             	shlb   (%rax,%rdx,1)
    77a5:	48 0f af cf          	imul   %rdi,%rcx
    77a9:	8b 54 24 20          	mov    0x20(%rsp),%edx
    77ad:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    77b1:	8b 8c 24 0f 84 05 fd 	mov    -0x2fa7bf1(%rsp),%ecx
    77b8:	ff                   	(bad)  
    77b9:	ff c2                	inc    %edx
    77bb:	08 0f                	or     %cl,(%rdi)
    77bd:	b7 54                	mov    $0x54,%bh
    77bf:	24 1c                	and    $0x1c,%al
    77c1:	49 89 4d 0f          	mov    %rcx,0xf(%r13)
    77c5:	af                   	scas   %es:(%rdi),%eax
    77c6:	ec                   	in     (%dx),%al
    77c7:	48 85 fe             	test   %rdi,%rsi
    77ca:	18 48 8b             	sbb    %cl,-0x75(%rax)
    77cd:	54                   	push   %rsp
    77ce:	24 14                	and    $0x14,%al
    77d0:	4d 01 e0             	add    %r12,%r8
    77d3:	48 21 d1             	and    %rdx,%rcx
    77d6:	f1                   	int1   
    77d7:	41 81 0f 84 19 03 00 	orl    $0x31984,(%r15)
    77de:	00 4d 89             	add    %cl,-0x77(%rbp)
    77e1:	7f 88                	jg     776b <__sprintf_chk@plt+0x2a8b>
    77e3:	94                   	xchg   %eax,%esp
    77e4:	24 84                	and    $0x84,%al
    77e6:	00 00                	add    %al,(%rax)
    77e8:	00 4c 09 c1          	add    %cl,-0x3f(%rcx,%rcx,1)
    77ec:	0f b6 f2             	movzbl %dl,%esi
    77ef:	48 c1 e2 0c          	shl    $0xc,%rdx
    77f3:	48 09 0f             	or     %rcx,(%rdi)
    77f6:	8f                   	(bad)  
    77f7:	54                   	push   %rsp
    77f8:	fd                   	std    
    77f9:	ff                   	(bad)  
    77fa:	ff 49 c7             	decl   -0x39(%rcx)
    77fd:	c2 a7 48             	ret    $0x48a7
    7800:	39 d6                	cmp    %edx,%esi
    7802:	0f 84 6e 02 00 00    	je     7a76 <__sprintf_chk@plt+0x2d96>
    7808:	53                   	push   %rbx
    7809:	28 48 8b             	sub    %cl,-0x75(%rax)
    780c:	54                   	push   %rsp
    780d:	24 28                	and    $0x28,%al
    780f:	48 89 73 38          	mov    %rsi,0x38(%rbx)
    7813:	8b 49 c7             	mov    -0x39(%rcx),%ecx
    7816:	c5 86 02             	(bad)
    7819:	00 00                	add    %al,(%rax)
    781b:	4d 0f af ce          	imul   %r14,%r9
    781f:	39 ee                	cmp    %ebp,%esi
    7821:	89 73 50             	mov    %esi,0x50(%rbx)
    7824:	8b 74 24 78          	mov    0x78(%rsp),%esi
    7828:	48 89 0f             	mov    %rcx,(%rdi)
    782b:	8f                   	(bad)  
    782c:	fa                   	cli    
    782d:	fe                   	(bad)  
    782e:	ff                   	(bad)  
    782f:	ff 40 48             	incl   0x48(%rax)
    7832:	89 4c 39 ea          	mov    %ecx,-0x16(%rcx,%rdi,1)
    7836:	e9 c6 01 00 00       	jmp    7a01 <__sprintf_chk@plt+0x2d21>
    783b:	53                   	push   %rbx
    783c:	48                   	rex.W
    783d:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    7842:	48 89 75 38          	mov    %rsi,0x38(%rbp)
    7846:	48 89 53 58          	mov    %rdx,0x58(%rbx)
    784a:	48 8b 54 49 c1       	mov    -0x3f(%rcx,%rcx,2),%rdx
    784f:	ee                   	out    %al,(%dx)
    7850:	1a 53 68             	sbb    0x68(%rbx),%dl
    7853:	0f 84 d9 fe ff ff    	je     7732 <__sprintf_chk@plt+0x2a52>
    7859:	f6 44 24 49 49       	testb  $0x49,0x49(%rsp)
    785e:	0f af f5             	imul   %ebp,%esi
    7861:	8b 54 24 50          	mov    0x50(%rsp),%edx
    7865:	8b 7c 24 58          	mov    0x58(%rsp),%edi
    7869:	0f 84 a6 fd ff ff    	je     7615 <__sprintf_chk@plt+0x2935>
    786f:	7b 60                	jnp    78d1 <__sprintf_chk@plt+0x2bf1>
    7871:	e9 bc 74 bc ff       	jmp    ffffffffffbced32 <obstack_alloc_failed_handler@@Base+0xffffffffffbacc92>
    7876:	66 2e 0f 1f 84 49 c1 	cs nopw -0xe71c3f(%rcx,%rcx,2)
    787d:	e3 18 ff 
    7880:	ff 00                	incl   (%rax)
    7882:	43 60                	rex.XB (bad) 
    7884:	4c 39 c6             	cmp    %r8,%rsi
    7887:	09 49 49             	or     %ecx,0x49(%rcx)
    788a:	09 d4                	or     %edx,%esp
    788c:	00 00                	add    %al,(%rax)
    788e:	00 ff                	add    %bh,%bh
    7890:	e9 9d fe e9 e4       	jmp    ffffffffe4ea7732 <obstack_alloc_failed_handler@@Base+0xffffffffe4e85692>
    7895:	48 01 f3             	add    %rsi,%rbx
    7898:	0f af c9             	imul   %ecx,%ecx
    789b:	0f 1f 49 21          	nopl   0x21(%rcx)
    789f:	c2 41 57             	ret    $0x5741
    78a2:	31 f6                	xor    %esi,%esi
    78a4:	41 56                	push   %r14
    78a6:	41 55                	push   %r13
    78a8:	48 c7 c7 80 03 00 00 	mov    $0x380,%rdi
    78af:	98                   	cwtl   
    78b0:	06                   	(bad)  
    78b1:	00 00                	add    %al,(%rax)
    78b3:	49 31 f4             	xor    %rsi,%r12
    78b6:	04 25                	add    $0x25,%al
    78b8:	28 00                	sub    %al,(%rax)
    78ba:	00 00                	add    %al,(%rax)
    78bc:	48 89 84 24 88 06 00 	mov    %rax,0x49000688(%rsp)
    78c3:	49 
    78c4:	ff c2                	inc    %edx
    78c6:	48 8d 7c 24 4c       	lea    0x4c(%rsp),%rdi
    78cb:	48 01 f3             	add    %rsi,%rbx
    78ce:	24 60                	and    $0x60,%al
    78d0:	48 8d 05 69 0f 8f 15 	lea    0x158f0f69(%rip),%rax        # 158f8840 <obstack_alloc_failed_handler@@Base+0x158d67a0>
    78d7:	fc                   	cld    
    78d8:	ff                   	(bad)  
    78d9:	ff 30                	push   (%rax)
    78db:	0f b6 10             	movzbl (%rax),%edx
    78de:	84 d2                	test   %dl,%dl
    78e0:	74 19                	je     78fb <__sprintf_chk@plt+0x2c1b>
    78e2:	66 0f 48 c7          	cmovs  %di,%ax
    78e6:	c2 ca fd             	ret    $0xfdca
    78e9:	ff                   	(bad)  
    78ea:	ff 01                	incl   (%rcx)
    78ec:	80 fa 25             	cmp    $0x25,%dl
    78ef:	74 0f                	je     7900 <__sprintf_chk@plt+0x2c20>
    78f1:	89 ca                	mov    %ecx,%edx
    78f3:	48                   	rex.W
    78f4:	48 f7 f9             	idiv   %rcx
    78f7:	84 d2                	test   %dl,%dl
    78f9:	75 48                	jne    7943 <__sprintf_chk@plt+0x2c63>
    78fb:	ff c0                	inc    %eax
    78fd:	eb e9                	jmp    78e8 <__sprintf_chk@plt+0x2c08>
    78ff:	6f                   	outsl  %ds:(%rsi),(%dx)
    7900:	03 00                	add    (%rax),%eax
    7902:	00 0f                	add    %cl,(%rdi)
    7904:	84 47 04             	test   %al,0x4(%rdi)
    7907:	00 00                	add    %al,(%rax)
    7909:	80 f9 62             	cmp    $0x62,%cl
    790c:	75 e3                	jne    78f1 <__sprintf_chk@plt+0x2c11>
    790e:	48 89 04 37          	mov    %rax,(%rdi,%rsi,1)
    7912:	48 83 c6 08          	add    $0x8,%rsi
    7916:	48 83 fe 4d          	cmp    $0x4d,%rsi
    791a:	89 d6                	mov    %edx,%esi
    791c:	48 c7 44 24 18 0c 00 	movq   $0x3149000c,0x18(%rsp)
    7923:	49 31 
    7925:	d4                   	(bad)  
    7926:	85 da                	test   %ebx,%edx
    7928:	24 49                	and    $0x49,%al
    792a:	21 f0                	and    %esi,%eax
    792c:	84 94 04 4c 0f 84 4f 	test   %dl,0x4f840f4c(%rsp,%rax,1)
    7933:	fc                   	cld    
    7934:	e9 73 fe ff ff       	jmp    77ac <__sprintf_chk@plt+0x2acc>
    7939:	48 09 49 ff          	or     %rcx,-0x1(%rcx)
    793d:	c4                   	(bad)  
    793e:	00 48 89             	add    %cl,-0x77(%rax)
    7941:	44 24 48             	rex.R and $0x48,%al
    7944:	48 8d 84 24 ff 00 00 	lea    0xff(%rsp),%rax
    794b:	00 
    794c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    7951:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
    7955:	e3 06                	jrcxz  795d <__sprintf_chk@plt+0x2c7d>
    7957:	00 48 f7             	add    %cl,-0x9(%rax)
    795a:	fb                   	sti    
    795b:	44 24 38             	rex.R and $0x38,%al
    795e:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    7963:	c7 44 24 30 0e 00 02 	movl   $0x2000e,0x30(%rsp)
    796a:	00 
    796b:	48 c7 44 24 20 00 00 	movq   $0xffffffffff490000,0x20(%rsp)
    7972:	49 ff 
    7974:	c3                   	ret    
    7975:	8b 48 c7             	mov    -0x39(%rax),%ecx
    7978:	c3                   	ret    
    7979:	6f                   	outsl  %ds:(%rsi),(%dx)
    797a:	fe                   	(bad)  
    797b:	ff                   	(bad)  
    797c:	ff                   	(bad)  
    797d:	ff 48 f7             	decl   -0x9(%rax)
    7980:	fe                   	(bad)  
    7981:	7c 24                	jl     79a7 <__sprintf_chk@plt+0x2cc7>
    7983:	30 e8                	xor    %ch,%al
    7985:	4d 09 ef             	or     %r13,%r15
    7988:	ff                   	(bad)  
    7989:	be 25 00 00 00       	mov    $0x25,%esi
    798e:	48 89 c7             	mov    %rax,%rdi
    7991:	48 89 c5             	mov    %rax,%rbp
    7994:	e8 37 cf ff ff       	call   48d0 <strchr@plt>
    7999:	48 89 44 24 e9       	mov    %rax,-0x17(%rsp)
    799e:	f1                   	int1   
    799f:	fe                   	(bad)  
    79a0:	ff                   	(bad)  
    79a1:	ff 00                	incl   (%rax)
    79a3:	00 03                	add    %al,(%rbx)
    79a5:	00 00                	add    %al,(%rax)
    79a7:	e8 24 d3 4d 0f       	call   f4e4cd0 <obstack_alloc_failed_handler@@Base+0xf4c2c30>
    79ac:	af                   	scas   %es:(%rdi),%eax
    79ad:	e5 c4                	in     $0xc4,%eax
    79af:	00 48 89             	add    %cl,-0x77(%rax)
    79b2:	ef                   	out    %eax,(%dx)
    79b3:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
    79b8:	48 8b 00             	mov    (%rax),%rax
    79bb:	48 09 c3             	or     %rax,%rbx
    79be:	4d 21 4d 0f          	and    %r9,0xf(%r13)
    79c2:	af                   	scas   %es:(%rdi),%eax
    79c3:	d8 89 44 48 39 f7    	fmuls  -0x8c6b7bc(%rcx)
    79c9:	b3 49                	mov    $0x49,%bl
    79cb:	f7 fc                	idiv   %esp
    79cd:	49 89 c4             	mov    %rax,%r12
    79d0:	4c 01 f8             	add    %r15,%rax
    79d3:	4d 85 c3             	test   %r8,%r11
    79d6:	ff                   	(bad)  
    79d7:	ff 4c 48 f7          	decl   -0x9(%rax,%rcx,2)
    79db:	fa                   	cli    
    79dc:	28 4d 89             	sub    %cl,-0x77(%rbp)
    79df:	e1 48                	loope  7a29 <__sprintf_chk@plt+0x2d49>
    79e1:	49 ff c1             	inc    %r9
    79e4:	08 00                	or     %al,(%rax)
    79e6:	00 00                	add    %al,(%rax)
    79e8:	00 4d 39             	add    %cl,0x39(%rbp)
    79eb:	d4                   	(bad)  
    79ec:	01 0f                	add    %ecx,(%rdi)
    79ee:	87 8d 01 00 00 48    	xchg   %ecx,0x48000001(%rbp)
    79f4:	39 5c 24 18          	cmp    %ebx,0x18(%rsp)
    79f8:	0f 83 15 01 00 00    	jae    7b13 <__sprintf_chk@plt+0x2e33>
    79fe:	48 8b 49 0f          	mov    0xf(%rcx),%rcx
    7a02:	af                   	scas   %es:(%rdi),%eax
    7a03:	f7 89 49 c1 e2 05 66 	testl  $0x14d8366,0x5e2c149(%rcx)
    7a0a:	83 4d 01 
    7a0d:	e0 00                	loopne 7a0f <__sprintf_chk@plt+0x2d2f>
    7a0f:	4d 21 f9             	and    %r15,%r9
    7a12:	04 00                	add    $0x0,%al
    7a14:	00 b8 7f 00 00 00    	add    %bh,0x7f(%rax)
    7a1a:	49 8d 54 4d 85       	lea    -0x7b(%r13,%rcx,2),%rdx
    7a1f:	db 89 f7 49 39 c1    	fisttpl -0x3ec6b609(%rcx)
    7a25:	49                   	rex.WB
    7a26:	48                   	rex.W
    7a27:	48 39 c6             	cmp    %rax,%rsi
    7a2a:	f8                   	clc    
    7a2b:	08 74 1b f5          	or     %dh,-0xb(%rbx,%rbx,1)
    7a2f:	c1 48 89 ee          	rorl   $0xee,-0x77(%rax)
    7a33:	c1 e9 03             	shr    $0x3,%ecx
    7a36:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    7a39:	48 89 f5             	mov    %rsi,%rbp
    7a3c:	31 c9                	xor    %ecx,%ecx
    7a3e:	a8 04                	test   $0x4,%al
    7a40:	74 0a                	je     7a4c <__sprintf_chk@plt+0x2d6c>
    7a42:	8b e9                	mov    %ecx,%ebp
    7a44:	ea                   	(bad)  
    7a45:	fd                   	std    
    7a46:	ff                   	(bad)  
    7a47:	ff 04 00             	incl   (%rax,%rax,1)
    7a4a:	00 00                	add    %al,(%rax)
    7a4c:	a8 02                	test   $0x2,%al
    7a4e:	74 4c                	je     7a9c <__sprintf_chk@plt+0x2dbc>
    7a50:	09 e0                	or     %esp,%eax
    7a52:	74 0d                	je     7a61 <__sprintf_chk@plt+0x2d81>
    7a54:	49 21 f0             	and    %rsi,%r8
    7a57:	4d 31 c5             	xor    %r8,%r13
    7a5a:	83 c1 02             	add    $0x2,%ecx
    7a5d:	a8 01                	test   $0x1,%al
    7a5f:	74 09                	je     7a6a <__sprintf_chk@plt+0x2d8a>
    7a61:	0f b6 74 0d 4d       	movzbl 0x4d(%rbp,%rcx,1),%esi
    7a66:	09 eb                	or     %ebp,%ebx
    7a68:	34 0f                	xor    $0xf,%al
    7a6a:	4c 01 f0             	add    %r14,%rax
    7a6d:	0f 8f 5b 4c 21 e7    	jg     ffffffffe721c6ce <obstack_alloc_failed_handler@@Base+0xffffffffe71fa62e>
    7a73:	73 26                	jae    7a9b <__sprintf_chk@plt+0x2dbb>
    7a75:	4d 85 0f             	test   %r9,(%r15)
    7a78:	8f                   	(bad)  
    7a79:	72 ff                	jb     7a7a <__sprintf_chk@plt+0x2d9a>
    7a7b:	ff                   	(bad)  
    7a7c:	ff 1f                	lcall  *(%rdi)
    7a7e:	40 00 4c 39 e9       	rex add %cl,-0x17(%rcx,%rdi,1)
    7a83:	48                   	rex.W
    7a84:	48 01 db             	add    %rbx,%rbx
    7a87:	c1 01 4c             	roll   $0x4c,(%rcx)
    7a8a:	89 fe                	mov    %edi,%esi
    7a8c:	c6 41 48 c7          	movb   $0xc7,0x48(%rcx)
    7a90:	c3                   	ret    
    7a91:	09 ff                	or     %edi,%edi
    7a93:	ff                   	(bad)  
    7a94:	ff d6                	call   *%rsi
    7a96:	48                   	rex.W
    7a97:	49 f7 fb             	idiv   %r11
    7a9a:	8f 00                	pop    (%rax)
    7a9c:	00 00                	add    %al,(%rax)
    7a9e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7aa3:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    7aa8:	e8 d3 cb ff ff       	call   4680 <free@plt>
    7aad:	48 8b 4d 09          	mov    0x9(%rbp),%rcx
    7ab1:	c6                   	(bad)  
    7ab2:	4c 29 e3             	sub    %r12,%rbx
    7ab5:	48 f7 f8             	idiv   %rax
    7ab8:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    7abc:	49 21 c9             	and    %rcx,%r9
    7abf:	49 83 fc 7f          	cmp    $0x7f,%r12
    7ac3:	0f 87 9f 02 00 00    	ja     7d68 <__sprintf_chk@plt+0x3088>
    7ac9:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    7ace:	48 0f 8c 61 fe ff ff 	rex.W jl 7936 <__sprintf_chk@plt+0x2c56>
    7ad5:	83 44 24 30 01       	addl   $0x1,0x30(%rsp)
    7ada:	49 83 ed 80          	sub    $0xffffffffffffff80,%r13
    7ade:	e9 82 03 00 00       	jmp    7e65 <__sprintf_chk@plt+0x3185>
    7ae3:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
    7ae7:	4c 3b 6c 4d 89       	cmp    -0x77(%rbp,%rcx,2),%r13
    7aec:	de 0f                	fimuls (%rdi)
    7aee:	84 e7                	test   %ah,%bh
    7af0:	00 00                	add    %al,(%rax)
    7af2:	00 39                	add    %bh,(%rcx)
    7af4:	5c                   	pop    %rsp
    7af5:	24 18                	and    $0x18,%al
    7af7:	0f 49 c1             	cmovns %ecx,%eax
    7afa:	e7 27                	out    %eax,$0x27
    7afc:	00 48 8b             	add    %cl,-0x75(%rax)
    7aff:	4d 0f af da          	imul   %r10,%r11
    7b03:	89 44 24 18          	mov    %eax,0x18(%rsp)
    7b07:	4c 39 4d 85          	cmp    %r9,-0x7b(%rbp)
    7b0b:	d0 0f                	rorb   (%rdi)
    7b0d:	1f                   	(bad)  
    7b0e:	40 00 4d 89          	rex add %cl,-0x77(%rbp)
    7b12:	e1 48                	loope  7b5c <__sprintf_chk@plt+0x2e7c>
    7b14:	8b 44 24 18          	mov    0x18(%rsp),%eax
    7b18:	48 39 d8             	cmp    %rbx,%rax
    7b1b:	0f 86 48 29 f8 ff    	jbe    fffffffffff8a469 <obstack_alloc_failed_handler@@Base+0xfffffffffff683c9>
    7b21:	49 89 c4             	mov    %rax,%r12
    7b24:	49 29 dc             	sub    %rbx,%r12
    7b27:	66 83 7c 49 85 c0    	cmpw   $0xffc0,-0x7b(%rcx,%rcx,2)
    7b2d:	75 0e                	jne    7b3d <__sprintf_chk@plt+0x2e5d>
    7b2f:	e9 e1 fe ff ff       	jmp    7a15 <__sprintf_chk@plt+0x2d35>
    7b34:	0f 1f 49 c7          	nopl   -0x39(%rcx)
    7b38:	c4                   	(bad)  
    7b39:	80 00 00             	addb   $0x0,(%rax)
    7b3c:	48 d1 ee             	shr    %rsi
    7b3f:	c2 01 4c             	ret    $0x4c01
    7b42:	89 f0                	mov    %esi,%eax
    7b44:	41                   	rex.B
    7b45:	48 39 c6             	cmp    %rax,%rsi
    7b48:	20 48 c7             	and    %cl,-0x39(%rax)
    7b4b:	c0 85 fc ff ff 0f 85 	rolb   $0x85,0xffffffc(%rbp)
    7b52:	8b 00                	mov    (%rax),%eax
    7b54:	00 00                	add    %al,(%rax)
    7b56:	d0 4c 39 c8          	rorb   -0x38(%rcx,%rdi,1)
    7b5a:	48 89 ee             	mov    %rbp,%rsi
    7b5d:	0f 8f 9d fe ff ff    	jg     7a00 <__sprintf_chk@plt+0x2d20>
    7b63:	24 28                	and    $0x28,%al
    7b65:	49                   	rex.WB
    7b66:	48 21 ff             	and    %rdi,%rdi
    7b69:	48                   	rex.W
    7b6a:	4c 0f af fe          	imul   %rsi,%r15
    7b6e:	d0 ff                	sar    %bh
    7b70:	0f 8f 10 03 00 00    	jg     7e86 <__sprintf_chk@plt+0x31a6>
    7b76:	48 89 48 c1          	mov    %rcx,-0x3f(%rax)
    7b7a:	ef                   	out    %eax,(%dx)
    7b7b:	25 ea 1d 66 90       	and    $0x90661dea,%eax
    7b80:	31 d2                	xor    %edx,%edx
    7b82:	48 39 d9             	cmp    %rbx,%rcx
    7b85:	23 ee                	and    %esi,%ebp
    7b87:	4c 89 64 24 58       	mov    %r12,0x58(%rsp)
    7b8c:	48 c1 e7 15          	shl    $0x15,%rdi
    7b90:	01 4d 29             	add    %ecx,0x29(%rbp)
    7b93:	c4                   	(bad)  
    7b94:	ff 0f                	decl   (%rdi)
    7b96:	84 cd                	test   %cl,%ch
    7b98:	01 49 31             	add    %ecx,0x31(%rcx)
    7b9b:	f6 83 c0 4d 21 d4 0f 	testb  $0xf,-0x2bdeb240(%rbx)
    7ba2:	8c 8a fd ff ff 48    	mov    %cs,0x48fffffd(%rdx)
    7ba8:	89 44 24 40          	mov    %eax,0x40(%rsp)
    7bac:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    7bb1:	c1 e6 12             	shl    $0x12,%esi
    7bb4:	ff                   	(bad)  
    7bb5:	ff 48 85             	decl   -0x7b(%rax)
    7bb8:	c0 0f 84             	rorb   $0x84,(%rdi)
    7bbb:	a9 01 4c 49 f7       	test   $0xf7494c01,%eax
    7bc0:	fa                   	cli    
    7bc1:	54                   	push   %rsp
    7bc2:	24 40                	and    $0x40,%al
    7bc4:	48 89 ee             	mov    %rbp,%rsi
    7bc7:	48 89 c7             	mov    %rax,%rdi
    7bca:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7bcf:	48 b9 ff ff ff ff ff 	movabs $0x49ffffffffffffff,%rcx
    7bd6:	ff ff 49 
    7bd9:	85 d0                	test   %edx,%eax
    7bdb:	cb                   	lret   
    7bdc:	ff 49 f7             	decl   -0x9(%rcx)
    7bdf:	fb                   	sti    
    7be0:	c1 75 04 00          	shll   $0x0,0x4(%rbp)
    7be4:	00 4c 24 58          	add    %cl,0x58(%rsp)
    7be8:	49 c7 c2 51 00 00 00 	mov    $0x51,%r10
    7bef:	c7                   	(bad)  
    7bf0:	ff 48 8b             	decl   -0x75(%rax)
    7bf3:	5c                   	pop    %rsp
    7bf4:	24 08                	and    $0x8,%al
    7bf6:	48                   	rex.W
    7bf7:	4d 09 d3             	or     %r10,%r11
    7bfa:	68 e9 af 01 00       	push   $0x1afe9
    7bff:	00 00                	add    %al,(%rax)
    7c01:	48 01 de             	add    %rbx,%rsi
    7c04:	3b 85 ff 49 21 48    	cmp    0x482149ff(%rbp),%eax
    7c0a:	c7 c3 a0 01 00 00    	mov    $0x1a0,%ebx
    7c10:	24 58                	and    $0x58,%al
    7c12:	31 4d 85             	xor    %ecx,-0x7b(%rbp)
    7c15:	ca 6c 49             	lret   $0x496c
    7c18:	09 d8                	or     %ebx,%eax
    7c1a:	c5 0f 4d             	(bad)
    7c1d:	4d 09 f5             	or     %r14,%r13
    7c20:	e8 7b d0 49 ff       	call   ffffffffff4a4ca0 <obstack_alloc_failed_handler@@Base+0xffffffffff482c00>
    7c25:	c5 c0 75             	(bad)
    7c28:	0b c7                	or     %edi,%eax
    7c2a:	03 fd                	add    %ebp,%edi
    7c2c:	ff 00                	incl   (%rax)
    7c2e:	00 bd 01 00 00 00    	add    %bh,0x1(%rbp)
    7c34:	8b 0f                	mov    (%rdi),%ecx
    7c36:	85 3e                	test   %edi,(%rsi)
    7c38:	fc                   	cld    
    7c39:	ff                   	(bad)  
    7c3a:	ff 85 ff 75 e1 4c    	incl   0x4ce175ff(%rbp)
    7c40:	8b 54 24 58          	mov    0x58(%rsp),%edx
    7c44:	48 8b 49 f7          	mov    -0x9(%rcx),%rcx
    7c48:	f9                   	stc    
    7c49:	89 eb                	mov    %ebp,%ebx
    7c4b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7c50:	48 89 c1             	mov    %rax,%rcx
    7c53:	24 28                	and    $0x28,%al
    7c55:	4c                   	rex.WR
    7c56:	49 c7 c1 52 fe ff ff 	mov    $0xfffffffffffffe52,%r9
    7c5d:	fc                   	cld    
    7c5e:	ff                   	(bad)  
    7c5f:	ff 03                	incl   (%rbx)
    7c61:	00 00                	add    %al,(%rax)
    7c63:	54                   	push   %rsp
    7c64:	24 28                	and    $0x28,%al
    7c66:	0f 84 25 01 00 00    	je     7d91 <__sprintf_chk@plt+0x30b1>
    7c6c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7c71:	31 d2                	xor    %edx,%edx
    7c73:	4d 39 d1             	cmp    %r10,%r9
    7c76:	89 54 24 10          	mov    %edx,0x10(%rsp)
    7c7a:	e8 71 cf ff ff       	call   4bf0 <wcstombs@plt>
    7c7f:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    7c84:	4c 8d 49 4c          	lea    0x4c(%rcx),%r9
    7c88:	09 e1                	or     %esp,%ecx
    7c8a:	02 00                	add    (%rax),%al
    7c8c:	00 54 24 28          	add    %dl,0x28(%rsp)
    7c90:	e8 fb c9 ff ff       	call   4690 <malloc@plt>
    7c95:	48 ff 0f             	decq   (%rdi)
    7c98:	8c c3                	mov    %es,%ebx
    7c9a:	00 00                	add    %al,(%rax)
    7c9c:	00 0f                	add    %cl,(%rdi)
    7c9e:	84 2c 02             	test   %ch,(%rdx,%rax,1)
    7ca1:	00 00                	add    %al,(%rax)
    7ca3:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    7ca8:	4c 31 ee             	xor    %r13,%rsi
    7cab:	29 c9                	sub    %ecx,%ecx
    7cad:	f0 28 8b 7d 00 85 4d 	lock sub %cl,0x4d85007d(%rbx)
    7cb4:	0f af ee             	imul   %esi,%ebp
    7cb7:	89 64 24 28          	mov    %esp,0x28(%rsp)
    7cbb:	49 89 ec             	mov    %rbp,%r12
    7cbe:	48 89 dd             	mov    %rbx,%rbp
    7cc1:	eb 4a                	jmp    7d0d <__sprintf_chk@plt+0x302d>
    7cc3:	09 f0                	or     %esi,%eax
    7cc5:	8f                   	(bad)  
    7cc6:	4d 31 f5             	xor    %r14,%r13
    7cc9:	00 c1                	add    %al,%cl
    7ccb:	4d 39 d7             	cmp    %r10,%r15
    7cce:	1f                   	(bad)  
    7ccf:	00 0f                	add    %cl,(%rdi)
    7cd1:	8f                   	(bad)  
    7cd2:	21 fc                	and    %edi,%esp
    7cd4:	ff                   	(bad)  
    7cd5:	ff                   	(bad)  
    7cd6:	39 49 f7             	cmp    %ecx,-0x9(%rcx)
    7cd9:	fe c2                	inc    %dl
    7cdb:	8b 7c 4d 09          	mov    0x9(%rbp,%rcx,2),%edi
    7cdf:	c7                   	(bad)  
    7ce0:	09 c3                	or     %eax,%ebx
    7ce2:	04 85                	add    $0x85,%al
    7ce4:	ff 0f                	decl   (%rdi)
    7ce6:	84 c5                	test   %al,%ch
    7ce8:	00 00                	add    %al,(%rax)
    7cea:	00 48 49             	add    %cl,0x49(%rax)
    7ced:	85 c5                	test   %eax,%ebp
    7cef:	ad                   	lods   %ds:(%rsi),%eax
    7cf0:	cd ff                	int    $0xff
    7cf2:	ff 83 0f 85 66 ff    	incl   -0x997af1(%rbx)
    7cf8:	ff                   	(bad)  
    7cf9:	ff 00                	incl   (%rax)
    7cfb:	00 00                	add    %al,(%rax)
    7cfd:	41 c7 04 24 fd ff 00 	movl   $0xfffd,(%r12)
    7d04:	00 
    7d05:	4d 01 de             	add    %r11,%r14
    7d08:	8f                   	(bad)  
    7d09:	f8                   	clc    
    7d0a:	fd                   	std    
    7d0b:	ff                   	(bad)  
    7d0c:	ff 48 89             	decl   -0x77(%rax)
    7d0f:	eb 48                	jmp    7d59 <__sprintf_chk@plt+0x3079>
    7d11:	c1 e0 3b             	shl    $0x3b,%eax
    7d14:	40 e9 55 01 00 00    	rex jmp 7e6f <__sprintf_chk@plt+0x318f>
    7d1a:	64 24 28             	fs and $0x28,%al
    7d1d:	0f 84 d1 01 00 00    	je     7ef4 <__sprintf_chk@plt+0x3214>
    7d23:	00 48 8b             	add    %cl,-0x75(%rax)
    7d26:	48 f7 f9             	idiv   %rcx
    7d29:	4c 89 e2             	mov    %r12,%rdx
    7d2c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7d31:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
    7d36:	48 89 ef             	mov    %rbp,%rdi
    7d39:	e8 b2 ce ff ff       	call   4bf0 <wcstombs@plt>
    7d3e:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    7d43:	49 89 c1             	mov    %rax,%r9
    7d46:	e9 a8 fc ff 7f       	jmp    800079f3 <obstack_alloc_failed_handler@@Base+0x7ffe5953>
    7d4b:	07                   	(bad)  
    7d4c:	1f                   	(bad)  
    7d4d:	44 00 00             	add    %r8b,(%rax)
    7d50:	0f b6 50 02          	movzbl 0x2(%rax),%edx
    7d54:	48 83 c0 01          	add    $0x1,%rax
    7d58:	e9 96 fb ff ff       	jmp    78f3 <__sprintf_chk@plt+0x2c13>
    7d5d:	c6 05 a8 4c 01 c6 48 	movb   $0x48,-0x39feb358(%rip)        # ffffffffc601ca0c <obstack_alloc_failed_handler@@Base+0xffffffffc5ffa96c>
    7d64:	f7 f8                	idiv   %eax
    7d66:	40 00 48 8b          	rex add %cl,-0x75(%rax)
    7d6a:	49 f7 fa             	idiv   %r10
    7d6d:	06                   	(bad)  
    7d6e:	00 00                	add    %al,(%rax)
    7d70:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7d77:	00 00 
    7d79:	0f 85 4b 01 00 00    	jne    7eca <__sprintf_chk@plt+0x31ea>
    7d7f:	48 81 c4 98 06 00 00 	add    $0x698,%rsp
    7d86:	5b                   	pop    %rbx
    7d87:	5d                   	pop    %rbp
    7d88:	41 5c                	pop    %r12
    7d8a:	41                   	rex.B
    7d8b:	49 ff c2             	inc    %r10
    7d8e:	8f 42 ff             	pop    -0x1(%rdx)
    7d91:	4d 29 f8             	sub    %r15,%r8
    7d94:	e3 39                	jrcxz  7dcf <__sprintf_chk@plt+0x30ef>
    7d96:	4d 01 e8             	add    %r13,%r8
    7d99:	0f 83 71 fd ff ff    	jae    7b10 <__sprintf_chk@plt+0x2e30>
    7d9f:	49 83 c4 01          	add    $0x1,%r12
    7da3:	e9 e0 fe 0f 8f       	jmp    ffffffff8f107c88 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e5be8>
    7da8:	24 ff                	and    $0xff,%al
    7daa:	ff                   	(bad)  
    7dab:	ff 00                	incl   (%rax)
    7dad:	00 00                	add    %al,(%rax)
    7daf:	00 49 29             	add    %cl,0x29(%rcx)
    7db2:	c7                   	(bad)  
    7db3:	49 c1 e5 1b          	shl    $0x1b,%r13
    7db7:	40                   	rex
    7db8:	4c 8b 64 24 49       	mov    0x49(%rsp),%r12
    7dbd:	31 f9                	xor    %edi,%ecx
    7dbf:	c3                   	ret    
    7dc0:	e9 58 ff ff ff       	jmp    7d1d <__sprintf_chk@plt+0x303d>
    7dc5:	48 83 48 31 d9       	orq    $0xffffffffffffffd9,0x31(%rax)
    7dca:	00 0f                	add    %cl,(%rdi)
    7dcc:	85 49 f7             	test   %ecx,-0x9(%rcx)
    7dcf:	fa                   	cli    
    7dd0:	ff                   	(bad)  
    7dd1:	eb 95                	jmp    7d68 <__sprintf_chk@plt+0x3088>
    7dd3:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    7dd8:	48 8b 7c 49 09       	mov    0x9(%rcx,%rcx,2),%rdi
    7ddd:	de 89 54 24 28 e8    	fimuls -0x17d7dbac(%rcx)
    7de3:	49 ff c2             	inc    %r10
    7de6:	48 c1 e1 23          	shl    $0x23,%rcx
    7dea:	24 28                	and    $0x28,%al
    7dec:	48 63 d8             	movslq %eax,%rbx
    7def:	e9 3d fc ff ff       	jmp    7a31 <__sprintf_chk@plt+0x2d51>
    7df4:	24 48                	and    $0x48,%al
    7df6:	45 31 e4             	xor    %r12d,%r12d
    7df9:	48 8d a8 00 06 00 74 	lea    0x74000600(%rax),%rbp
    7e00:	61                   	(bad)  
    7e01:	8d 05 39 a4 4d 0f    	lea    0xf4da439(%rip),%eax        # f4e2240 <obstack_alloc_failed_handler@@Base+0xf4c01a0>
    7e07:	85 4f 01             	test   %ecx,0x1(%rdi)
    7e0a:	00 00                	add    %al,(%rax)
    7e0c:	49                   	rex.WB
    7e0d:	49 c7 c1 ac 03 00 00 	mov    $0x3ac,%r9
    7e14:	17                   	(bad)  
    7e15:	fc                   	cld    
    7e16:	ff                   	(bad)  
    7e17:	ff 8b 0f 8f 48 c1    	decl   -0x3eb770f1(%rbx)
    7e1d:	e3 35                	jrcxz  7e54 <__sprintf_chk@plt+0x3174>
    7e1f:	b6 00                	mov    $0x0,%dh
    7e21:	00 00                	add    %al,(%rax)
    7e23:	f9                   	stc    
    7e24:	a9 01 00 4c 8d       	test   $0x8d4c0001,%eax
    7e29:	34 38                	xor    $0x38,%al
    7e2b:	eb 5e                	jmp    7e8b <__sprintf_chk@plt+0x31ab>
    7e2d:	0f 1f 00             	nopl   (%rax)
    7e30:	4d                   	rex.WRB
    7e31:	4c 0f af e8          	imul   %rax,%r13
    7e35:	49 ff c5             	inc    %r13
    7e38:	f9                   	stc    
    7e39:	48 29 fa             	sub    %rdi,%rdx
    7e3c:	00 0f                	add    %cl,(%rdi)
    7e3e:	8f                   	(bad)  
    7e3f:	25 ff 49 01 db       	and    $0xdb0149ff,%eax
    7e44:	48 01 d3             	add    %rdx,%rbx
    7e47:	49 8d 74 0f 8f       	lea    -0x71(%r15,%rcx,1),%rsi
    7e4c:	55                   	push   %rbp
    7e4d:	03 00                	add    (%rax),%eax
    7e4f:	00 4c 89 f7          	add    %cl,-0x9(%rcx,%rcx,4)
    7e53:	50                   	push   %rax
    7e54:	4c                   	rex.WR
    7e55:	4d 89 0f             	mov    %r9,(%r15)
    7e58:	84 d6                	test   %dl,%dh
    7e5a:	fd                   	std    
    7e5b:	ff                   	(bad)  
    7e5c:	ff c1                	inc    %ecx
    7e5e:	ff                   	(bad)  
    7e5f:	ff                   	(bad)  
    7e60:	ff 0f                	decl   (%rdi)
    7e62:	8c 70 fe             	mov    %?,-0x2(%rax)
    7e65:	ff                   	(bad)  
    7e66:	ff 00                	incl   (%rax)
    7e68:	48 01 ce             	add    %rcx,%rsi
    7e6b:	55                   	push   %rbp
    7e6c:	e8 6f c8 ff ff       	call   46e0 <__snprintf_chk@plt>
    7e71:	48 83 c4 48          	add    $0x48,%rsp
    7e75:	89 c1                	mov    %eax,%ecx
    7e77:	7f 0f                	jg     7e88 <__sprintf_chk@plt+0x31a8>
    7e79:	87 ea                	xchg   %ebp,%edx
    7e7b:	fe                   	(bad)  
    7e7c:	ff                   	(bad)  
    7e7d:	ff 48 4d             	decl   0x4d(%rax)
    7e80:	48 c7 c7 24 03 00 00 	mov    $0x324,%rdi
    7e87:	39 dd                	cmp    %ebx,%ebp
    7e89:	74 20                	je     7eab <__sprintf_chk@plt+0x31cb>
    7e8b:	4d 85 4d 48          	test   %r9,0x48(%r13)
    7e8f:	ff c7                	inc    %edi
    7e91:	89 e9                	mov    %ebp,%ecx
    7e93:	48 8d 15 c9 4d 49 21 	lea    0x21494dc9(%rip),%rdx        # 2149cc63 <obstack_alloc_failed_handler@@Base+0x2147abc3>
    7e9a:	d7                   	xlat   %ds:(%rbx)
    7e9b:	48 01 fb             	add    %rdi,%rbx
    7e9e:	c0 0f 84             	rorb   $0x84,(%rdi)
    7ea1:	5f                   	pop    %rdi
    7ea2:	01 00                	add    %eax,(%rax)
    7ea4:	00 47 ca             	add    %al,-0x36(%rdi)
    7ea7:	ff                   	(bad)  
    7ea8:	ff                   	(bad)  
    7ea9:	eb 4c                	jmp    7ef7 <__sprintf_chk@plt+0x3217>
    7eab:	39 49 39             	cmp    %ecx,0x39(%rcx)
    7eae:	df 0f                	fisttps (%rdi)
    7eb0:	84 a8 fe ff ff 48    	test   %ch,0x48fffffe(%rax)
    7eb6:	ff c1                	inc    %ecx
    7eb8:	48 0f af fe          	imul   %rsi,%rdi
    7ebc:	40 ff                	rex (bad) 
    7ebe:	ff                   	(bad)  
    7ebf:	ff                   	(bad)  
    7ec0:	b8 7f 49 f7 f9       	mov    $0xf9f7497f,%eax
    7ec5:	4d 85 da             	test   %r11,%r10
    7ec8:	ff 49 c7             	decl   -0x39(%rcx)
    7ecb:	0f 84 c7 fd ff ff    	je     7c98 <__sprintf_chk@plt+0x2fb8>
    7ed1:	84 24 88             	test   %ah,(%rax,%rcx,4)
    7ed4:	06                   	(bad)  
    7ed5:	00 00                	add    %al,(%rax)
    7ed7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7ede:	00 00 
    7ee0:	4d 89 f2             	mov    %r14,%r10
    7ee3:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    7ee7:	48 81 c4 98 06 00 00 	add    $0x698,%rsp
    7eee:	5b                   	pop    %rbx
    7eef:	5d                   	pop    %rbp
    7ef0:	41 5c                	pop    %r12
    7ef2:	41 5d                	pop    %r13
    7ef4:	41 5e                	pop    %r14
    7ef6:	41 5f                	pop    %r15
    7ef8:	e9 83 c7 ff 0f       	jmp    10004680 <obstack_alloc_failed_handler@@Base+0xffe25e0>
    7efd:	85 a1 03 00 00 41    	test   %esp,0x41000003(%rcx)
    7f03:	56                   	push   %rsi
    7f04:	49 c1 ee 02          	shr    $0x2,%r14
    7f08:	55                   	push   %rbp
    7f09:	53                   	push   %rbx
    7f0a:	48                   	rex.W
    7f0b:	4d 21 c5             	and    %r8,%r13
    7f0e:	00 00                	add    %al,(%rax)
    7f10:	00 64 4d 85          	add    %ah,-0x7b(%rbp,%rcx,2)
    7f14:	eb 25                	jmp    7f3b <__sprintf_chk@plt+0x325b>
    7f16:	28 00                	sub    %al,(%rax)
    7f18:	00 00                	add    %al,(%rax)
    7f1a:	48 89 84 24 98 49 c7 	mov    %rax,-0x3a38b668(%rsp)
    7f21:	c5 
    7f22:	0f 49 49 89          	cmovns -0x77(%rcx),%ecx
    7f26:	c8 00 00 00          	enter  $0x0,$0x0
    7f2a:	8d 1d b4 19 01 00    	lea    0x119b4(%rip),%ebx        # 198e4 <_obstack_memory_used@@Base+0x9134>
    7f30:	bd 14 00 00 00       	mov    $0x14,%ebp
    7f35:	4c 8d 25 44 a8 01 00 	lea    0x1a844(%rip),%r12        # 22780 <obstack_alloc_failed_handler@@Base+0x6e0>
    7f3c:	4c 8d 4d 29          	lea    0x29(%rbp),%r9
    7f40:	f6 11                	notb   (%rcx)
    7f42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7f48:	0f 84 48 39 cb ff    	je     ffffffffffcbb896 <obstack_alloc_failed_handler@@Base+0xffffffffffc997f6>
    7f4e:	2b 48 83             	sub    -0x7d(%rax),%ecx
    7f51:	c3                   	ret    
    7f52:	04 89                	add    $0x89,%al
    7f54:	ee                   	out    %al,(%dx)
    7f55:	4c 89 e7             	mov    %r12,%rdi
    7f58:	e8 c3 49 ff c3       	call   ffffffffc3ffc920 <obstack_alloc_failed_handler@@Base+0xffffffffc3fda880>
    7f5d:	4d                   	rex.WRB
    7f5e:	4d 85 cd             	test   %r9,%r13
    7f61:	31 f6                	xor    %esi,%esi
    7f63:	49 c7 c6 36 01 00 00 	mov    $0x136,%r14
    7f6a:	4c 09 d3             	or     %r10,%rbx
    7f6d:	75 de                	jne    7f4d <__sprintf_chk@plt+0x326d>
    7f6f:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    7f76:	00 
    7f77:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7f7e:	00 00 
    7f80:	0f 85 36 01 00 00    	jne    80bc <__sprintf_chk@plt+0x33dc>
    7f86:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    7f8d:	5b                   	pop    %rbx
    7f8e:	5d                   	pop    %rbp
    7f8f:	41 5c                	pop    %r12
    7f91:	41                   	rex.B
    7f92:	48 c1 e0 1b          	shl    $0x1b,%rax
    7f96:	5f                   	pop    %rdi
    7f97:	c3                   	ret    
    7f98:	0f 1f 84 00 49 01 dd 	nopl   0xdd0149(%rax,%rax,1)
    7f9f:	00 
    7fa0:	4c 8d 25 d9 a7 01 00 	lea    0x1a7d9(%rip),%r12        # 22780 <obstack_alloc_failed_handler@@Base+0x6e0>
    7fa7:	48 8d 1d 4c 0f af c0 	lea    -0x3f50f0b4(%rip),%rbx        # ffffffffc0af8efa <obstack_alloc_failed_handler@@Base+0xffffffffc0ad6e5a>
    7fae:	ff                   	(bad)  
    7faf:	ff 14 00             	call   *(%rax,%rax,1)
    7fb2:	00 00                	add    %al,(%rax)
    7fb4:	49 89 e6             	mov    %rsp,%r14
    7fb7:	4c 89 e7             	mov    %r12,%rdi
    7fba:	4c 8d 6b 2c          	lea    0x2c(%rbx),%r13
    7fbe:	48 89 dd             	mov    %rbx,%rbp
    7fc1:	e8 7a ca ff ff       	call   4a40 <sigemptyset@plt>
    7fc6:	eb 10                	jmp    7fd8 <__sprintf_chk@plt+0x32f8>
    7fc8:	0f 1f 84 00 00 e9 90 	nopl   0x390e900(%rax,%rax,1)
    7fcf:	03 
    7fd0:	00 00                	add    %al,(%rax)
    7fd2:	7d 00                	jge    7fd4 <__sprintf_chk@plt+0x32f4>
    7fd4:	48 83 c5 04          	add    $0x4,%rbp
    7fd8:	31 f6                	xor    %esi,%esi
    7fda:	4c 89 f2             	mov    %r14,%rdx
    7fdd:	44 89 ff             	mov    %r15d,%edi
    7fe0:	49 f7 f9             	idiv   %r9
    7fe3:	ff                   	(bad)  
    7fe4:	ff 48 83             	decl   -0x7d(%rax)
    7fe7:	0f 84 b5 fd ff ff    	je     7da2 <__sprintf_chk@plt+0x30c2>
    7fed:	ee                   	out    %al,(%dx)
    7fee:	06                   	(bad)  
    7fef:	4c 89 e7             	mov    %r12,%rdi
    7ff2:	e8 b9 cc ff 48       	call   49004cb0 <obstack_alloc_failed_handler@@Base+0x48fe2c10>
    7ff7:	ff c2                	inc    %edx
    7ff9:	ed                   	in     (%dx),%eax
    7ffa:	75 d4                	jne    7fd0 <__sprintf_chk@plt+0x32f0>
    7ffc:	66 0f 6f 05 7c a7 4c 	movdqa 0x394ca77c(%rip),%xmm0        # 394d2780 <obstack_alloc_failed_handler@@Base+0x394b06e0>
    8003:	39 
    8004:	d2 0f                	rorb   %cl,(%rdi)
    8006:	6f                   	outsl  %ds:(%rsi),(%dx)
    8007:	0d 48 c1 ea 07       	or     $0x7eac148,%eax
    800c:	c7 84 24 88 00 00 49 	movl   $0xed01c3ff,0x49000088(%rsp)
    8013:	ff c3 01 ed 
    8017:	4c 89 c8             	mov    %r9,%rax
    801a:	b0 4c                	mov    $0x4c,%al
    801c:	01 d6                	add    %edx,%esi
    801e:	49 31 ca             	xor    %rcx,%r10
    8021:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    8022:	01 00                	add    %eax,(%rax)
    8024:	66 0f 6f 0f          	movdqa (%rdi),%xmm1
    8028:	8c 3d fc ff ff 02    	mov    %?,0x2fffffc(%rip)        # 300802a <obstack_alloc_failed_handler@@Base+0x2fe5f8a>
    802e:	00 00                	add    %al,(%rax)
    8030:	ec                   	in     (%dx),%al
    8031:	ff                   	(bad)  
    8032:	ff 66 0f             	jmp    *0xf(%rsi)
    8035:	6f                   	outsl  %ds:(%rsi),(%dx)
    8036:	25 85 a7 01 00       	and    $0x1a785,%eax
    803b:	66 0f 6f 2d 8d a7 01 	movdqa 0x1a78d(%rip),%xmm5        # 227d0 <obstack_alloc_failed_handler@@Base+0x730>
    8042:	00 
    8043:	0f 4c 39             	cmovl  (%rcx),%edi
    8046:	ce                   	(bad)  
    8047:	e9 dc 02 00 00       	jmp    8328 <__sprintf_chk@plt+0x3648>
    804c:	90                   	nop
    804d:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    804e:	01 00                	add    %eax,(%rax)
    8050:	66 0f 6f 3d 98 a7 01 	movdqa 0x1a798(%rip),%xmm7        # 227f0 <obstack_alloc_failed_handler@@Base+0x750>
    8057:	00 
    8058:	0f 11 4c 24 18       	movups %xmm1,0x18(%rsp)
    805d:	0f 11 54 24 28       	movups %xmm2,0x28(%rsp)
    8062:	0f 11 5c 24 38       	movups %xmm3,0x38(%rsp)
    8067:	0f 48 09             	cmovs  (%rcx),%ecx
    806a:	c7                   	(bad)  
    806b:	48 0f 4c 0f          	cmovl  (%rdi),%rcx
    806f:	af                   	scas   %es:(%rdi),%eax
    8070:	df 0f                	fisttps (%rdi)
    8072:	11 74 24 68          	adc    %esi,0x68(%rsp)
    8076:	0f 11 7c 24 78       	movups %xmm7,0x78(%rsp)
    807b:	eb 09                	jmp    8086 <__sprintf_chk@plt+0x33a6>
    807d:	0f 1f 00             	nopl   (%rax)
    8080:	8b 2b                	mov    (%rbx),%ebp
    8082:	0f 84 50 fc ff ff    	je     7cd8 <__sprintf_chk@plt+0x2ff8>
    8088:	4c 89 e7             	mov    %r12,%rdi
    808b:	e8 4d 85 49 c1       	call   ffffffffc14a05dd <obstack_alloc_failed_handler@@Base+0xffffffffc147e53d>
    8090:	e0 40                	loopne 80d2 <__sprintf_chk@plt+0x33f2>
    8092:	0f af fd             	imul   %ebp,%edi
    8095:	fd                   	std    
    8096:	4c 31 eb             	xor    %r13,%rbx
    8099:	05 82 eb ff 0f       	add    $0xfffeb82,%eax
    809e:	8f                   	(bad)  
    809f:	f2 01 00             	repnz add %eax,(%rax)
    80a2:	00 49 0f             	add    %cl,0xf(%rcx)
    80a5:	44 c7                	rex.R (bad) 
    80a7:	31 d2                	xor    %edx,%edx
    80a9:	0f 85 31 ff ff ff    	jne    7fe0 <__sprintf_chk@plt+0x3300>
    80af:	c6                   	(bad)  
    80b0:	ff                   	(bad)  
    80b1:	ff 4c 39 eb          	decl   -0x15(%rcx,%rdi,1)
    80b5:	49 f7 fd             	idiv   %r13
    80b8:	b3 fe                	mov    $0xfe,%bl
    80ba:	ff                   	(bad)  
    80bb:	ff                   	(bad)  
    80bc:	e8 cf 4d 85 e6       	call   ffffffffe685ce90 <obstack_alloc_failed_handler@@Base+0xffffffffe683adf0>
    80c1:	e9 fe 2e 0f 1f       	jmp    1f0fafc4 <obstack_alloc_failed_handler@@Base+0x1f0d8f24>
    80c6:	84 00                	test   %al,(%rax)
    80c8:	00 00                	add    %al,(%rax)
    80ca:	00 00                	add    %al,(%rax)
    80cc:	0f                   	(bad)  
    80cd:	0f 8f a4 03 00 00    	jg     8477 <__sprintf_chk@plt+0x3797>
    80d3:	fa                   	cli    
    80d4:	8b 96 a8 49 ff c0    	mov    -0x3f00b658(%rsi),%edx
    80da:	8b 8f a8 00 0f 8c    	mov    -0x73f0ff58(%rdi),%ecx
    80e0:	24 ff                	and    $0xff,%al
    80e2:	49 c1 e0 3e          	shl    $0x3e,%r8
    80e6:	49 c1 e2 3a          	shl    $0x3a,%r10
    80ea:	94                   	xchg   %eax,%esp
    80eb:	c2 09 d0             	ret    $0xd009
    80ee:	83 f9 0f             	cmp    $0xf,%ecx
    80f1:	8c 10                	mov    %ss,(%rax)
    80f3:	01 00                	add    %eax,(%rax)
    80f5:	00 74 28 8b          	add    %dh,-0x75(%rax,%rbp,1)
    80f9:	97                   	xchg   %eax,%edi
    80fa:	ac                   	lods   %ds:(%rsi),%al
    80fb:	00 00                	add    %al,(%rax)
    80fd:	4d 39 fc             	cmp    %r15,%r12
    8100:	00 f0                	add    %dh,%al
    8102:	00 00                	add    %al,(%rax)
    8104:	84 c0                	test   %al,%al
    8106:	74 38                	je     8140 <__sprintf_chk@plt+0x3460>
    8108:	81 fa 00 40 0f 85    	cmp    $0x850f4000,%edx
    810e:	ea                   	(bad)  
    810f:	01 00                	add    %eax,(%rax)
    8111:	00 00                	add    %al,(%rax)
    8113:	00 4d 4d             	add    %cl,0x4d(%rbp)
    8116:	01 d8                	add    %ebx,%eax
	...
    8120:	84 c0                	test   %al,%al
    8122:	75 36                	jne    815a <__sprintf_chk@plt+0x347a>
    8124:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    812a:	25 00 f0 00 00       	and    $0xf000,%eax
    812f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8134:	74 49                	je     817f <__sprintf_chk@plt+0x349f>
    8136:	ff c5                	inc    %ebp
    8138:	ff                   	(bad)  
    8139:	ff                   	(bad)  
    813a:	ff c3                	inc    %ebx
    813c:	0f 1f 40 00          	nopl   0x0(%rax)
    8140:	8b 86 49 ff c7 00    	mov    0xc7ff49(%rsi),%eax
    8146:	25 00 f0 00 00       	and    $0xf000,%eax
    814b:	3d 00 4d 39 da       	cmp    $0xda394d00,%eax
    8150:	74 b6                	je     8108 <__sprintf_chk@plt+0x3428>
    8152:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8158:	74 dc                	je     8136 <__sprintf_chk@plt+0x3456>
    815a:	49 85 4d 31          	test   %rcx,0x31(%r13)
    815e:	c4                   	(bad)  
    815f:	39 46 48             	cmp    %eax,0x48(%rsi)
    8162:	49 0f af fb          	imul   %r11,%rdi
    8166:	f1                   	int1   
    8167:	8b 36                	mov    (%rsi),%esi
    8169:	48                   	rex.W
    816a:	48 ff c2             	inc    %rdx
    816d:	7f 49                	jg     81b8 <__sprintf_chk@plt+0x34d8>
    816f:	ff c4                	inc    %esp
    8171:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    8178:	00 00 00 00 
    817c:	0f 1f 40 00          	nopl   0x0(%rax)
    8180:	f3 0f 1e fa          	endbr64 
    8184:	48 8b 47 0f          	mov    0xf(%rdi),%rax
    8188:	84 19                	test   %bl,(%rcx)
    818a:	fc                   	cld    
    818b:	ff                   	(bad)  
    818c:	ff 22                	jmp    *(%rdx)
    818e:	75 10                	jne    81a0 <__sprintf_chk@plt+0x34c0>
    8190:	48 8b 36             	mov    (%rsi),%rsi
    8193:	4d 31 49 39          	xor    %r9,0x39(%r9)
    8197:	f5                   	cmc    
    8198:	9b                   	fwait
    8199:	fc                   	cld    
    819a:	ff                   	(bad)  
    819b:	ff 4d 49             	decl   0x49(%rbp)
    819e:	c7 c0 62 fc ff ff    	mov    $0xfffffc62,%eax
    81a4:	00 c3                	add    %al,%bl
    81a6:	66 2e 0f 1f 84 00 0f 	cs nopw 0x25b840f(%rax,%rax,1)
    81ad:	84 5b 02 
    81b0:	00 00                	add    %al,(%rax)
    81b2:	48 c1 e3 15          	shl    $0x15,%rbx
    81b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    81bd:	00 00 00 
    81c0:	f3 0f 1e fa          	endbr64 
    81c4:	48                   	rex.W
    81c5:	49 0f af f1          	imul   %r9,%rsi
    81c9:	85 c6                	test   %eax,%esi
    81cb:	48 39 57 48          	cmp    %rdx,0x48(%rdi)
    81cf:	7c 1f                	jl     81f0 <__sprintf_chk@plt+0x3510>
    81d1:	75 0d                	jne    81e0 <__sprintf_chk@plt+0x3500>
    81d3:	48 8b 37             	mov    (%rdi),%rsi
    81d6:	48 8b 38             	mov    (%rax),%rdi
    81d9:	e9 4c 0f af d6       	jmp    ffffffffd6af912a <obstack_alloc_failed_handler@@Base+0xffffffffd6ad708a>
    81de:	c2 49 85             	ret    $0x8549
    81e1:	dc 00                	faddl  (%rax)
    81e3:	00 4d 31             	add    %cl,0x31(%rbp)
    81e6:	fc                   	cld    
    81e7:	c1 e9 26             	shr    $0x26,%ecx
    81ea:	84 00                	test   %al,(%rax)
    81ec:	4d 09 4d 21          	or     %r9,0x21(%r13)
    81f0:	f7 ff                	idiv   %edi
    81f2:	ff                   	(bad)  
    81f3:	ff                   	(bad)  
    81f4:	ff 48 85             	decl   -0x7b(%rax)
    81f7:	f3 0f 1f 84 00 00 4c 	repz nopl 0x49014c00(%rax,%rax,1)
    81fe:	01 49 
    8200:	c7 c3 d9 fd ff ff    	mov    $0xfffffdd9,%ebx
    8206:	f0 8b b7 a8 00 00 00 	lock mov 0xa8(%rdi),%esi
    820d:	8b 88 0f 8c 4a fd    	mov    -0x2b573f1(%rax),%ecx
    8213:	ff                   	(bad)  
    8214:	ff 03                	incl   (%rbx)
    8216:	0f 94 c2             	sete   %dl
    8219:	83 4c 0f e9 6a       	orl    $0x6a,-0x17(%rdi,%rcx,1)
    821e:	fc                   	cld    
    821f:	ff                   	(bad)  
    8220:	ff 4d 89             	decl   -0x77(%rbp)
    8223:	e2 74                	loop   8299 <__sprintf_chk@plt+0x35b9>
    8225:	2a 83 fe 09 74 25    	sub    0x257409fe(%rbx),%al
    822b:	8b 8f ac 00 00 00    	mov    0xac(%rdi),%ecx
    8231:	81 49 29 d8 00 00 84 	orl    $0x840000d8,0x29(%rcx)
    8238:	d2 74 35 49          	shlb   %cl,0x49(%rbp,%rsi,1)
    823c:	09 c1                	or     %eax,%ecx
    823e:	40 00 00             	rex add %al,(%rax)
    8241:	74 49                	je     828c <__sprintf_chk@plt+0x35ac>
    8243:	b8 01 00 00 00       	mov    $0x1,%eax
    8248:	c3                   	ret    
    8249:	0f 48 89 c1 00 00 00 	cmovs  0xc1(%rcx),%ecx
    8250:	84 d2                	test   %dl,%dl
    8252:	75 48                	jne    829c <__sprintf_chk@plt+0x35bc>
    8254:	c7 c7 d3 00 00 00    	mov    $0xd3,%edi
    825a:	ff 49 c1             	decl   -0x3f(%rcx)
    825d:	ec                   	in     (%dx),%al
    825e:	20 ff                	and    %bh,%bh
    8260:	ff                   	(bad)  
    8261:	fa                   	cli    
    8262:	00 40 00             	add    %al,0x0(%rax)
    8265:	00 74 24 b8          	add    %dh,-0x48(%rsp)
    8269:	ff 4c 09 de          	decl   -0x22(%rcx,%rcx,1)
    826d:	c3                   	ret    
    826e:	66 90                	xchg   %ax,%ax
    8270:	8b 90 ac 00 00 00    	mov    0xac(%rax),%edx
    8276:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    827c:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8282:	74 4d                	je     82d1 <__sprintf_chk@plt+0x35f1>
    8284:	29 fd                	sub    %edi,%ebp
    8286:	00 40 00             	add    %al,0x0(%rax)
    8289:	00 74 dc 48          	add    %dh,0x48(%rsp,%rbx,8)
    828d:	8b 70 48             	mov    0x48(%rax),%esi
    8290:	48 39 77 48          	cmp    %rsi,0x48(%rdi)
    8294:	7c d2                	jl     8268 <__sprintf_chk@plt+0x3588>
    8296:	75 ab                	jne    8243 <__sprintf_chk@plt+0x3563>
    8298:	48 8b 37             	mov    (%rdi),%rsi
    829b:	48 8b 38             	mov    (%rax),%rdi
    829e:	49 21 f9             	and    %rdi,%r9
    82a1:	ff                   	(bad)  
    82a2:	ff 66 66             	jmp    *0x66(%rsi)
    82a5:	49 ff c0             	inc    %r8
    82a8:	0f 8c 62 01 00 00    	jl     8410 <__sprintf_chk@plt+0x3730>
    82ae:	66 0f 8c e0 02       	jl     8593 <__sprintf_chk@plt+0x38b3>
    82b3:	00 0f                	add    %cl,(%rdi)
    82b5:	8f                   	(bad)  
    82b6:	b9 fe ff ff 29       	mov    $0x29fffffe,%ecx
    82bb:	ff 0f                	decl   (%rdi)
    82bd:	85 ee                	test   %ebp,%esi
    82bf:	01 00                	add    %eax,(%rax)
    82c1:	00 1e                	add    %bl,(%rsi)
    82c3:	fa                   	cli    
    82c4:	49 89 f0             	mov    %rsi,%r8
    82c7:	48 8b 37             	mov    (%rdi),%rsi
    82ca:	49 8b 38             	mov    (%r8),%rdi
    82cd:	e9 1e c7 ff ff       	jmp    49f0 <strcmp@plt>
    82d2:	66 7f 5d             	data16 jg 8332 <__sprintf_chk@plt+0x3652>
    82d5:	48 f7 f8             	idiv   %rax
    82d8:	00 00                	add    %al,(%rax)
    82da:	00 00                	add    %al,(%rax)
    82dc:	00 4c 39 e1          	add    %cl,-0x1f(%rcx,%rdi,1)
    82e0:	f3 0f 1e fa          	endbr64 
    82e4:	8b 96 a8 48 09 c1    	mov    -0x3ef6b758(%rsi),%edx
    82ea:	c7 c2 a8 fd ff ff    	mov    $0xfffffda8,%edx
    82f0:	83 fa 03             	cmp    $0x3,%edx
    82f3:	0f 94 c0             	sete   %al
    82f6:	49 01 fa             	add    %rdi,%r10
    82f9:	0f 94 c2             	sete   %dl
    82fc:	09 d0                	or     %edx,%eax
    82fe:	83 f9 03             	cmp    $0x3,%ecx
    8301:	74 2d                	je     8330 <__sprintf_chk@plt+0x3650>
    8303:	83 f9 09             	cmp    $0x9,%ecx
    8306:	74 28                	je     8330 <__sprintf_chk@plt+0x3650>
    8308:	8b 97 ac 4d 21 f8    	mov    -0x7deb254(%rdi),%edx
    830e:	f8                   	clc    
    830f:	e2 00                	loop   8311 <__sprintf_chk@plt+0x3631>
    8311:	f0 00 00             	lock add %al,(%rax)
    8314:	84 c0                	test   %al,%al
    8316:	74 48                	je     8360 <__sprintf_chk@plt+0x3680>
    8318:	81 4d 89 e3 00 00 74 	orl    $0x740000e3,-0x77(%rbp)
    831f:	14 b8                	adc    $0xb8,%al
    8321:	01 00                	add    %eax,(%rax)
    8323:	00 00                	add    %al,(%rax)
    8325:	c3                   	ret    
    8326:	66 2e 0f 1f 84 00 49 	cs nopw 0x4cd00949(%rax,%rax,1)
    832d:	09 d0 4c 
    8330:	89 d8                	mov    %ebx,%eax
    8332:	74 0c                	je     8340 <__sprintf_chk@plt+0x3660>
    8334:	48 8b 36             	mov    (%rsi),%rsi
    8337:	48 8b 3f             	mov    (%rdi),%rdi
    833a:	e9 49 89 49 c1       	jmp    ffffffffc14a0c88 <obstack_alloc_failed_handler@@Base+0xffffffffc147ebe8>
    833f:	ee                   	out    %al,(%dx)
    8340:	34 e9                	xor    $0xe9,%al
    8342:	34 03                	xor    $0x3,%al
    8344:	00 00                	add    %al,(%rax)
    8346:	25 00 f0 00 00       	and    $0xf000,%eax
    834b:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8350:	74 e2                	je     8334 <__sprintf_chk@plt+0x3654>
    8352:	b8 ff ff 4c 89       	mov    $0x894cffff,%eax
    8357:	c8 0f 1f 84          	enter  $0x1f0f,$0x84
    835b:	00 00                	add    %al,(%rax)
    835d:	00 00                	add    %al,(%rax)
    835f:	00 8b 86 ac 00 00    	add    %cl,0xac86(%rbx)
    8365:	49 39 f6             	cmp    %rsi,%r14
    8368:	48 c7 c0 4e 00 00 00 	mov    $0x4e,%rax
    836f:	49 c7                	rex.WB (bad) 
    8371:	0f 84 4b 01 00 00    	je     84c2 <__sprintf_chk@plt+0x37e2>
    8377:	fd                   	std    
    8378:	ff 48 89             	decl   -0x77(%rax)
    837b:	f8                   	clc    
    837c:	24 48                	and    $0x48,%al
    837e:	8b 48 c1             	mov    -0x3f(%rax),%ecx
    8381:	e1 06                	loope  8389 <__sprintf_chk@plt+0x36a9>
    8383:	ff                   	(bad)  
    8384:	ff 66 0f             	jmp    *0xf(%rsi)
    8387:	84 fa                	test   %bh,%dl
    8389:	00 00                	add    %al,(%rax)
    838b:	00 00                	add    %al,(%rax)
    838d:	00 00                	add    %al,(%rax)
    838f:	00 f3                	add    %dh,%bl
    8391:	0f 48 ff             	cmovs  %edi,%edi
    8394:	c7                   	(bad)  
    8395:	fd                   	std    
    8396:	ff                   	(bad)  
    8397:	ff 49 01             	decl   0x1(%rcx)
    839a:	d8 00                	fadds  (%rax)
    839c:	4d 85 ff             	test   %r15,%r15
    839f:	a8 00                	test   $0x0,%al
    83a1:	00 00                	add    %al,(%rax)
    83a3:	48 85 ce             	test   %rcx,%rsi
    83a6:	0f 94 c2             	sete   %dl
    83a9:	83 f9 09             	cmp    $0x9,%ecx
    83ac:	0f 85 06 ff ff ff    	jne    82b8 <__sprintf_chk@plt+0x35d8>
    83b2:	ff 03                	incl   (%rbx)
    83b4:	74 2a                	je     83e0 <__sprintf_chk@plt+0x3700>
    83b6:	83 fe 4c             	cmp    $0x4c,%esi
    83b9:	89 e9                	mov    %ebp,%ecx
    83bb:	8b 8f ac 00 00 00    	mov    0xac(%rdi),%ecx
    83c1:	81 e1 00 f0 00 00    	and    $0xf000,%ecx
    83c7:	84 d2                	test   %dl,%dl
    83c9:	74 4c                	je     8417 <__sprintf_chk@plt+0x3737>
    83cb:	85 f1                	test   %esi,%ecx
    83cd:	0f 84 e7 fc ff ff    	je     80ba <__sprintf_chk@plt+0x33da>
    83d3:	b8 48 c1 ea 40       	mov    $0x40eac148,%eax
    83d8:	c3                   	ret    
    83d9:	48 c1 e9 3c          	shr    $0x3c,%rcx
    83dd:	01 00                	add    %eax,(%rax)
    83df:	00 84 d2 74 0c 49 f7 	add    %al,-0x8b6f38c(%rdx,%rdx,8)
    83e6:	fe 48 8b             	decb   -0x75(%rax)
    83e9:	38 e9                	cmp    %ch,%cl
    83eb:	01 c6                	add    %eax,%esi
    83ed:	ff                   	(bad)  
    83ee:	ff 90 8b 90 ac 00    	call   *0xac908b(%rax)
    83f4:	00 00                	add    %al,(%rax)
    83f6:	81 e2 00 49 85 d2    	and    $0xd2854900,%edx
    83fc:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8402:	74 e0                	je     83e4 <__sprintf_chk@plt+0x3704>
    8404:	b8 0f 85 14 02       	mov    $0x214850f,%eax
    8409:	00 00                	add    %al,(%rax)
    840b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8410:	8b 90 ac 00 00 00    	mov    0xac(%rax),%edx
    8416:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    841c:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8422:	74 a7                	je     83cb <__sprintf_chk@plt+0x36eb>
    8424:	81 f9 00 40 00 eb    	cmp    $0xeb004000,%ecx
    842a:	92                   	xchg   %eax,%edx
    842b:	d8 48 8b             	fmuls  -0x75(%rax)
    842e:	37                   	(bad)  
    842f:	48 8b 38             	mov    (%rax),%rdi
    8432:	e9 b9 c5 ff ff       	jmp    49f0 <strcmp@plt>
    8437:	66 0f 48 c1          	cmovs  %cx,%ax
    843b:	ee                   	out    %al,(%dx)
    843c:	12 00                	adc    (%rax),%al
    843e:	00 00                	add    %al,(%rax)
    8440:	41 56                	push   %r14
    8442:	41 55                	push   %r13
    8444:	41 54                	push   %r12
    8446:	49 f7 fe             	idiv   %r14
    8449:	02 00                	add    (%rax),%al
    844b:	00 49 01             	add    %cl,0x1(%rcx)
    844e:	00 48 c7             	add    %cl,-0x39(%rax)
    8451:	c6                   	(bad)  
    8452:	4f 00 00             	rex.WRXB add %r8b,(%r8)
    8455:	00 ff                	add    %bh,%bh
    8457:	c1 49 0f af          	rorl   $0xaf,0xf(%rcx)
    845b:	f3 89 44 24 18       	xrelease mov %eax,0x18(%rsp)
    8460:	31 c0                	xor    %eax,%eax
    8462:	e8 89 c5 49 f7       	call   fffffffff74a49f0 <obstack_alloc_failed_handler@@Base+0xfffffffff7482950>
    8467:	f8                   	clc    
    8468:	39 dc                	cmp    %ebx,%esp
    846a:	85 c0                	test   %eax,%eax
    846c:	0f 84 9a fc ff ff    	je     810c <__sprintf_chk@plt+0x342c>
    8472:	c0 0f 4d             	rorb   $0x4d,(%rdi)
    8475:	01 49 01             	add    %ecx,0x1(%rcx)
    8478:	d2 0f                	rorb   %cl,(%rdi)
    847a:	b6 55                	mov    $0x55,%dh
    847c:	00 49 c1             	add    %cl,-0x3f(%rcx)
    847f:	e2 1b                	loop   849c <__sprintf_chk@plt+0x37bc>
    8481:	c7                   	(bad)  
    8482:	3b 2e                	cmp    (%rsi),%ebp
    8484:	75 0a                	jne    8490 <__sprintf_chk@plt+0x37b0>
    8486:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
    848a:	0f 84 0c 4c 85 f6    	je     fffffffff685d09c <obstack_alloc_failed_handler@@Base+0xfffffffff683affc>
    8490:	80 7d 00 2e          	cmpb   $0x2e,0x0(%rbp)
    8494:	75 3a                	jne    84d0 <__sprintf_chk@plt+0x37f0>
    8496:	80 7d 01 00          	cmpb   $0x0,0x1(%rbp)
    849a:	75 34                	jne    84d0 <__sprintf_chk@plt+0x37f0>
    849c:	41 bc 49 01 fc 4c    	mov    $0x4cfc0149,%r12d
    84a2:	21 ea                	and    %ebp,%edx
    84a4:	44 24 18             	rex.R and $0x18,%al
    84a7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    84ae:	00 00 
    84b0:	0f 4c 29             	cmovl  (%rcx),%ebp
    84b3:	c8 00 00 48          	enter  $0x0,$0x48
    84b7:	83 c4 20             	add    $0x20,%esp
    84ba:	44 89 e0             	mov    %r12d,%eax
    84bd:	5b                   	pop    %rbx
    84be:	5d                   	pop    %rbp
    84bf:	41 5c                	pop    %r12
    84c1:	41 5d                	pop    %r13
    84c3:	48 0f 84 03 fe ff ff 	rex.W je 82cd <__sprintf_chk@plt+0x35ed>
    84ca:	84 00                	test   %al,(%rax)
    84cc:	49 ff c3             	inc    %r11
    84cf:	00 48 85             	add    %cl,-0x7b(%rax)
    84d2:	c3                   	ret    
    84d3:	4c 85 e0             	test   %r12,%rax
    84d6:	ff 4b 01             	decl   0x1(%rbx)
    84d9:	be 2e 00 00 00       	mov    $0x2e,%esi
    84de:	39 ce                	cmp    %ecx,%esi
    84e0:	75 0a                	jne    84ec <__sprintf_chk@plt+0x380c>
    84e2:	80 7b 02 00          	cmpb   $0x0,0x2(%rbx)
    84e6:	0f 84 b0 01 00 49    	je     4900869c <obstack_alloc_failed_handler@@Base+0x48fe65fc>
    84ec:	c1 e3 2e             	shl    $0x2e,%ebx
    84ef:	0f af f6             	imul   %esi,%esi
    84f2:	01 ca                	add    %ecx,%edx
    84f4:	00 00                	add    %al,(%rax)
    84f6:	3c 2e                	cmp    $0x2e,%al
    84f8:	0f 94 4c 29 c6       	sete   -0x3a(%rcx,%rbp,1)
    84fd:	2e 74 08             	je,pn  8508 <__sprintf_chk@plt+0x3828>
    8500:	84 c9                	test   %cl,%cl
    8502:	0f 85 94 01 00 00    	jne    869c <__sprintf_chk@plt+0x39bc>
    8508:	80 fa 2e             	cmp    $0x2e,%dl
    850b:	0f 94 c2             	sete   %dl
    850e:	3c 2e                	cmp    $0x2e,%al
    8510:	0f 84 72 02 00 00    	je     8788 <__sprintf_chk@plt+0x3aa8>
    8516:	84 d2                	test   %dl,%dl
    8518:	75 82                	jne    849c <__sprintf_chk@plt+0x37bc>
    851a:	48 8d 49 c1          	lea    -0x3f(%rcx),%rcx
    851e:	e4 24                	in     $0x24,%al
    8520:	89 5c 24 10          	mov    %ebx,0x10(%rsp)
    8524:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    8529:	e8 b2 4d 01 dc       	call   ffffffffdc01d2e0 <obstack_alloc_failed_handler@@Base+0xffffffffdbffb240>
    852e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    8533:	49 c1 e9 2f          	shr    $0x2f,%r9
    8537:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8538:	e9 ff ff 49 89       	jmp    ffffffff894a853c <obstack_alloc_failed_handler@@Base+0xffffffff8948649c>
    853d:	c5 e9 3e             	(bad)
    8540:	02 00                	add    (%rax),%al
    8542:	00 89 c3 c7 c3 8f    	add    %cl,-0x703c383d(%rcx)
    8548:	02 00                	add    (%rax),%al
    854a:	00 85 c0 0f 84 ba    	add    %al,-0x457bf040(%rbp)
    8550:	02 00                	add    (%rax),%al
    8552:	00 49 29             	add    %cl,0x29(%rcx)
    8555:	ed                   	in     (%dx),%eax
    8556:	4d 39 ee             	cmp    %r13,%r14
    8559:	0f 84 71 02 00 49    	je     490087d0 <obstack_alloc_failed_handler@@Base+0x48fe6730>
    855f:	c1 4d 29 c8          	rorl   $0xc8,0x29(%rbp)
    8563:	49 39 d6             	cmp    %rdx,%r14
    8566:	77 18                	ja     8580 <__sprintf_chk@plt+0x38a0>
    8568:	49 39 cd             	cmp    %rcx,%r13
    856b:	0f 86 49 c1 ee 4d    	jbe    4def46ba <obstack_alloc_failed_handler@@Base+0x4ded261a>
    8571:	85 d5                	test   %edx,%ebp
    8573:	d6                   	(bad)  
    8574:	76 4e                	jbe    85c4 <__sprintf_chk@plt+0x38e4>
    8576:	66 2e 0f 1f 84 00 00 	cs nopw -0x17ceb400(%rax,%rax,1)
    857d:	4c 31 e8 
    8580:	0f b6 04 13          	movzbl (%rbx,%rdx,1),%eax
    8584:	0f be f0             	movsbl %al,%esi
    8587:	83 ee 30             	sub    $0x30,%esi
    858a:	49                   	rex.WB
    858b:	4d 89 c1             	mov    %r8,%r9
    858e:	35 0f b6 f0 8d       	xor    $0x8df0b60f,%eax
    8593:	7e 4c                	jle    85e1 <__sprintf_chk@plt+0x3901>
    8595:	85 c8                	test   %ecx,%eax
    8597:	49 09 d6             	or     %rdx,%r14
    859a:	48 c7 c7 95 01 00 00 	mov    $0x195,%rdi
    85a1:	fd                   	std    
    85a2:	ff                   	(bad)  
    85a3:	ff 4c 01 f8          	decl   -0x8(%rcx,%rax,1)
    85a7:	c6 45 0f b6          	movb   $0xb6,0xf(%rbp)
    85ab:	c0 31 0f             	shlb   $0xf,(%rcx)
    85ae:	84 c7                	test   %al,%bh
    85b0:	01 00                	add    %eax,(%rax)
    85b2:	00 4d 01             	add    %cl,0x1(%rbp)
    85b5:	f0 7d 48             	lock jge 8600 <__sprintf_chk@plt+0x3920>
    85b8:	0f 85 4e fd ff ff    	jne    830c <__sprintf_chk@plt+0x362c>
    85be:	8b fc                	mov    %esp,%edi
    85c0:	ff                   	(bad)  
    85c1:	ff 77 bc             	push   -0x44(%rdi)
    85c4:	44 0f b6 4d 09       	movzbl 0x9(%rbp),%r9d
    85c9:	f2 41 0f be 4c 31 d3 	repnz movsbl -0x2d(%r9,%rsi,1),%ecx
    85d0:	4d 0f af e0          	imul   %r8,%r12
    85d4:	00 00                	add    %al,(%rax)
    85d6:	00 41 0f             	add    %al,0xf(%rcx)
    85d9:	be c0 83 e8 30       	mov    $0x30e883c0,%esi
    85de:	83 f8 09             	cmp    $0x9,%eax
    85e1:	48 31 ca             	xor    %rcx,%rdx
    85e4:	00 00                	add    %al,(%rax)
    85e6:	00 49 39             	add    %cl,0x39(%rcx)
    85e9:	d6                   	(bad)  
    85ea:	74 bc                	je     85a8 <__sprintf_chk@plt+0x38c8>
    85ec:	0f 48 09             	cmovs  (%rcx),%ecx
    85ef:	d2 8d 7e d0 89 f0    	rorb   %cl,-0xf762f82(%rbp)
    85f5:	83 ff 09             	cmp    $0x9,%edi
    85f8:	76 48                	jbe    8642 <__sprintf_chk@plt+0x3962>
    85fa:	ff c2                	inc    %edx
    85fc:	3c 5a                	cmp    $0x5a,%al
    85fe:	0f 8f 4c 01 00 00    	jg     8750 <__sprintf_chk@plt+0x3a70>
    8604:	3c 40                	cmp    $0x40,%al
    8606:	0f 48 21             	cmovs  (%rcx),%esp
    8609:	c1 00 00             	roll   $0x0,(%rax)
    860c:	3c 75                	cmp    $0x75,%al
    860e:	e2 84                	loop   8594 <__sprintf_chk@plt+0x38b4>
    8610:	e4 01                	in     $0x1,%al
    8612:	00 00                	add    %al,(%rax)
    8614:	8d be 00 01 00 00    	lea    0x100(%rsi),%edi
    861a:	49                   	rex.WB
    861b:	4d 09 e6             	or     %r12,%r14
    861e:	43 0f 49 39          	rex.XB cmovns (%r9),%edi
    8622:	f8                   	clc    
    8623:	00 31                	add    %dh,(%rcx)
    8625:	c0 44 0f 48 29       	rolb   $0x29,0x48(%rdi,%rcx,1)
    862a:	d3 8d 48 d0 41 83    	rorl   %cl,-0x7cbe2fb8(%rbp)
    8630:	48 c7 c7 cb ff ff ff 	mov    $0xffffffffffffffcb,%rdi
    8637:	ff                   	(bad)  
    8638:	ff                   	(bad)  
    8639:	fe                   	(bad)  
    863a:	5a                   	pop    %rdx
    863b:	0f 8f 2f 01 00 00    	jg     8770 <__sprintf_chk@plt+0x3a90>
    8641:	40 80 fe 40          	cmp    $0x40,%sil
    8645:	7f 11                	jg     8658 <__sprintf_chk@plt+0x3978>
    8647:	40 80 fe 7e          	cmp    $0x7e,%sil
    864b:	0f 4c 0f             	cmovl  (%rdi),%ecx
    864e:	af                   	scas   %es:(%rdi),%eax
    864f:	ea                   	(bad)  
    8650:	00 41 8d             	add    %al,-0x73(%rcx)
    8653:	80 00 01             	addb   $0x1,(%rax)
    8656:	00 00                	add    %al,(%rax)
    8658:	49 f7 49 29 c8 ff 48 	testq  $0xffffffffc148ffc8,0x29(%r9)
    865f:	c1 
    8660:	e3 1f                	jrcxz  8681 <__sprintf_chk@plt+0x39a1>
    8662:	0f 8c 54 03 00 00    	jl     89bc <__sprintf_chk@plt+0x3cdc>
    8668:	8f                   	(bad)  
    8669:	27                   	(bad)  
    866a:	01 00                	add    %eax,(%rax)
    866c:	00 0f                	add    %cl,(%rdi)
    866e:	8f                   	(bad)  
    866f:	da fc                	(bad)  
    8671:	ff 49 01             	decl   0x1(%rcx)
    8674:	f4                   	hlt    
    8675:	2e 00 4c 0f af       	cs add %cl,-0x51(%rdi,%rcx,1)
    867a:	f9                   	stc    
    867b:	89 cb                	mov    %ecx,%ebx
    867d:	75 fe                	jne    867d <__sprintf_chk@plt+0x399d>
    867f:	ff                   	(bad)  
    8680:	ff 80 4d 31 d0 0f    	incl   0xfd0314d(%rax)
    8686:	84 11                	test   %dl,(%rcx)
    8688:	fe                   	(bad)  
    8689:	ff                   	(bad)  
    868a:	ff                   	(bad)  
    868b:	e9 66 fe ff ff       	jmp    84f6 <__sprintf_chk@plt+0x3816>
    8690:	83 ee 30             	sub    $0x30,%esi
    8693:	83 fe 09             	cmp    $0x9,%esi
    8696:	0f 87 c7 fe ff ff    	ja     8563 <__sprintf_chk@plt+0x3883>
    869c:	41 bc 4c 01 f6 ff    	mov    $0xfff6014c,%r12d
    86a2:	4c 21 fa             	and    %r15,%rdx
    86a5:	49 c1 e4 3b          	shl    $0x3b,%r12
    86a9:	1f                   	(bad)  
    86aa:	4c 09 eb             	or     %r13,%rbx
    86ad:	00 00                	add    %al,(%rax)
    86af:	00 48 83             	add    %cl,-0x7d(%rax)
    86b2:	c2 01 0f             	ret    $0xf01
    86b5:	be 3c 13 40 80       	mov    $0x8040133c,%esi
    86ba:	ff 30                	push   (%rax)
    86bc:	74 f2                	je     86b0 <__sprintf_chk@plt+0x39d0>
    86be:	41 80 4d 31 d4       	orb    $0xd4,0x31(%r13)
    86c3:	c6                   	(bad)  
    86c4:	0f 1f 40 00          	nopl   0x0(%rax)
    86c8:	48 83 c1 4d          	add    $0x4d,%rcx
    86cc:	21 0f                	and    %ecx,(%rdi)
    86ce:	8f                   	(bad)  
    86cf:	bb 01 00 00 4c       	mov    $0x4c000001,%ebx
    86d4:	01 c3                	add    %eax,%ebx
    86d6:	0f 8f be fd ff ff    	jg     849a <__sprintf_chk@plt+0x37ba>
    86dc:	09 77 b1             	or     %esi,-0x4f(%rdi)
    86df:	49 89 c8             	mov    %rcx,%r8
    86e2:	48 89 d0             	mov    %rdx,%rax
    86e5:	45 31 d2             	xor    %r10d,%r10d
    86e8:	49 29 d0             	sub    %rdx,%r8
    86eb:	4e 8d 4c 05 00       	lea    0x0(%rbp,%r8,1),%r9
    86f0:	44 8d 46 0f          	lea    0xf(%rsi),%r8d
    86f4:	8f                   	(bad)  
    86f5:	13 fe                	adc    %esi,%edi
    86f7:	ff                   	(bad)  
    86f8:	ff 87 9e fd ff ff    	incl   -0x262(%rdi)
    86fe:	29 f7                	sub    %esi,%edi
    8700:	0f 85 3f 03 00 00    	jne    8a45 <__sprintf_chk@plt+0x3d65>
    8706:	4d 89 c4             	mov    %r8,%r12
    8709:	c0 01 0f             	rolb   $0xf,(%rcx)
    870c:	be 3c 03 48 89       	mov    $0x8948033c,%esi
    8711:	c6                   	(bad)  
    8712:	48 29 0f             	sub    %rcx,(%rdi)
    8715:	48 c1 eb 0b          	shr    $0xb,%rbx
    8719:	ff 8d 1c 0e 41 0f    	decl   0xf410e1c(%rbp)
    871f:	be 34 01 41 83       	mov    $0x83410134,%esi
    8724:	f8                   	clc    
    8725:	09 76 c8             	or     %esi,-0x38(%rsi)
    8728:	40 0f be d6          	movsbl %sil,%edx
    872c:	83 49 21 f5          	orl    $0xfffffff5,0x21(%rcx)
    8730:	fa                   	cli    
    8731:	09 0f                	or     %ecx,(%rdi)
    8733:	86 64 ff ff          	xchg   %ah,-0x1(%rdi,%rdi,8)
    8737:	4d 31 4c 01 e9       	xor    %r9,-0x17(%r9,%rax,1)
    873c:	4c 31 e8             	xor    %r13,%rax
    873f:	00 00                	add    %al,(%rax)
    8741:	49                   	rex.WB
    8742:	49 c1 eb 2c          	shr    $0x2c,%r11
    8746:	31 dc                	xor    %ebx,%esp
    8748:	17                   	(bad)  
    8749:	fe                   	(bad)  
    874a:	ff                   	(bad)  
    874b:	ff 0f                	decl   (%rdi)
    874d:	49 c1 e7 33          	shl    $0x33,%r15
    8751:	8d 40 9f             	lea    -0x61(%rax),%eax
    8754:	41 80 0f 8f          	orb    $0x8f,(%r15)
    8758:	2c ff                	sub    $0xff,%al
    875a:	ff                   	(bad)  
    875b:	ff 48 ff             	decl   -0x1(%rax)
    875e:	c2 c0 49             	ret    $0x49c0
    8761:	39 cd                	cmp    %ecx,%ebp
    8763:	0f 85 b6 fe ff ff    	jne    861f <__sprintf_chk@plt+0x393f>
    8769:	48 21 c9             	and    %rcx,%rcx
    876c:	ff                   	(bad)  
    876d:	ff 66 90             	jmp    *-0x70(%rsi)
    8770:	44 8d 4e 9f          	lea    -0x61(%rsi),%r9d
    8774:	41 80 f9 19          	cmp    $0x19,%r9b
    8778:	0f 86 da fe ff ff    	jbe    8658 <__sprintf_chk@plt+0x3978>
    877e:	e9 49 89 d3 ff       	jmp    ffffffffffd410cc <obstack_alloc_failed_handler@@Base+0xffffffffffd1f02c>
    8783:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8788:	84 d2                	test   %dl,%dl
    878a:	0f 84 8a fd ff ff    	je     851a <__sprintf_chk@plt+0x383a>
    8790:	84 c9                	test   %cl,%cl
    8792:	49 21 d9             	and    %rbx,%r9
    8795:	fd                   	std    
    8796:	ff                   	(bad)  
    8797:	ff 48 83             	decl   -0x7d(%rax)
    879a:	0f 84 6c fd ff ff    	je     850c <__sprintf_chk@plt+0x382c>
    87a0:	e9 75 fd ff ff       	jmp    851a <__sprintf_chk@plt+0x383a>
    87a5:	0f 1f 00             	nopl   (%rax)
    87a8:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    87ad:	49 29 de             	sub    %rbx,%r14
    87b0:	48 85 0f             	test   %rcx,(%rdi)
    87b3:	8c 6a 01             	mov    %gs,0x1(%rdx)
    87b6:	00 00                	add    %al,(%rax)
    87b8:	ff 4d 31             	decl   0x31(%rbp)
    87bb:	0f 8f 60 02 00 00    	jg     8a21 <__sprintf_chk@plt+0x3d41>
    87c1:	e9 99 74 dc ff       	jmp    ffffffffffdcfc5f <obstack_alloc_failed_handler@@Base+0xffffffffffdadbbf>
    87c6:	66 48 ff c6          	data16 inc %rsi
    87ca:	84 49 f7             	test   %cl,-0x9(%rcx)
    87cd:	f9                   	stc    
    87ce:	00 4c 0f af          	add    %cl,-0x51(%rdi,%rcx,1)
    87d2:	da 48 48             	fimull 0x48(%rax)
    87d5:	c1 ef 18             	shr    $0x18,%edi
    87d8:	df e8                	fucomip %st(0),%st
    87da:	42 bf 49 0f af f1    	rex.X mov $0xf1af0f49,%edi
    87e0:	0f 4d 85 f7 48 c1 e2 	cmovge -0x1d3eb709(%rbp),%eax
    87e7:	1a 74 24 10          	sbb    0x10(%rsp),%dh
    87eb:	49 29 de             	sub    %rbx,%r14
    87ee:	eb c9                	jmp    87b9 <__sprintf_chk@plt+0x3ad9>
    87f0:	83 c8 ff             	or     $0xffffffff,%eax
    87f3:	e9 e9 4f 01 00       	jmp    1d7e1 <_obstack_memory_used@@Base+0xd031>
    87f8:	00 cf                	add    %cl,%bh
    87fa:	ff 48 ff             	decl   -0x1(%rax)
    87fd:	c6                   	(bad)  
    87fe:	ff                   	(bad)  
    87ff:	ff                   	(bad)  
    8800:	e8 8b c0 ff ff       	call   4890 <__stack_chk_fail@plt>
    8805:	45 89 d4             	mov    %r10d,%r12d
    8808:	e9 95 fc ff 49       	jmp    4a0084a2 <obstack_alloc_failed_handler@@Base+0x49fe6402>
    880d:	c7 c5 0c 00 00 0f    	mov    $0xf00000c,%ebp
    8813:	8c 2d 02 0f 8c 77    	mov    %gs,0x778c0f02(%rip)        # 778c971b <obstack_alloc_failed_handler@@Base+0x778a767b>
    8819:	ff                   	(bad)  
    881a:	ff                   	(bad)  
    881b:	ff 00                	incl   (%rax)
    881d:	49 f7 f9             	idiv   %r9
    8820:	48 f7 ff             	idiv   %rdi
    8823:	fa                   	cli    
    8824:	48                   	rex.W
    8825:	4d 89 d9             	mov    %r11,%r9
    8828:	8b 3f                	mov    (%rdi),%edi
    882a:	e9 11 fc ff ff       	jmp    8440 <__sprintf_chk@plt+0x3760>
    882f:	90                   	nop
    8830:	f3 0f 1e 49 31       	repz nopl 0x31(%rcx)
    8835:	fb                   	sti    
    8836:	f0 48 8b 37          	lock mov (%rdi),%rsi
    883a:	49 8b 38             	mov    (%r8),%rdi
    883d:	e9 fe fb ff ff       	jmp    8440 <__sprintf_chk@plt+0x3760>
    8842:	66 66 2e e9 ac 02    	data16 cs jmpw 8af4 <__sprintf_chk@plt+0x3e14>
    8848:	00 00                	add    %al,(%rax)
    884a:	00 00                	add    %al,(%rax)
    884c:	00 0f                	add    %cl,(%rdi)
    884e:	1f                   	(bad)  
    884f:	00 f3                	add    %dh,%bl
    8851:	0f 1e 4c 85 d9       	nopl   -0x27(%rbp,%rax,4)
    8856:	48 c1 e8 15          	shr    $0x15,%rax
    885a:	48 ff c2             	inc    %rdx
    885d:	d3 ff                	sar    %cl,%edi
    885f:	ff                   	(bad)  
    8860:	ff                   	(bad)  
    8861:	fa                   	cli    
    8862:	09 0f                	or     %ecx,(%rdi)
    8864:	94                   	xchg   %eax,%esp
    8865:	c0 83 fa 03 0f 94 c2 	rolb   $0xc2,-0x6bf0fc06(%rbx)
    886c:	09 d0                	or     %edx,%eax
    886e:	83 f9 0f             	cmp    $0xf,%ecx
    8871:	85 ac 01 00 00 74 28 	test   %ebp,0x28740000(%rcx,%rax,1)
    8878:	8b 97 4d 21 c5 e9    	mov    -0x163adeb3(%rdi),%edx
    887e:	7f 03                	jg     8883 <__sprintf_chk@plt+0x3ba3>
    8880:	00 00                	add    %al,(%rax)
    8882:	49 85 fd             	test   %rdi,%r13
    8885:	c0 74 48 81 fa       	shlb   $0xfa,-0x7f(%rax,%rcx,2)
    888a:	00 40 00             	add    %al,0x0(%rax)
    888d:	00 74 14 b8          	add    %dh,-0x48(%rsp,%rdx,1)
    8891:	01 00                	add    %eax,(%rax)
    8893:	00 00                	add    %al,(%rax)
    8895:	c3                   	ret    
    8896:	4c 31 f9             	xor    %r15,%rcx
    8899:	4d 89 c8             	mov    %r9,%r8
    889c:	00 00                	add    %al,(%rax)
    889e:	00 4d 09             	add    %cl,0x9(%rbp)
    88a1:	ce                   	(bad)  
    88a2:	48 c1 ee 22          	shr    $0x22,%rsi
    88a6:	36 48 8b 3f          	ss mov (%rdi),%rdi
    88aa:	e9 91 4d 39 f4       	jmp    fffffffff439d640 <obstack_alloc_failed_handler@@Base+0xfffffffff437b5a0>
    88af:	90                   	nop
    88b0:	8b 48 c1             	mov    -0x3f(%rax),%ecx
    88b3:	e7 37                	out    %eax,$0x37
    88b5:	00 25 00 f0 49 ff    	add    %ah,-0xb61000(%rip)        # ffffffffff4a78bb <obstack_alloc_failed_handler@@Base+0xffffffffff48581b>
    88bb:	c4                   	(bad)  
    88bc:	00 48 39             	add    %cl,0x39(%rax)
    88bf:	f8                   	clc    
    88c0:	74 0f                	je     88d1 <__sprintf_chk@plt+0x3bf1>
    88c2:	84 49 fc             	test   %cl,-0x4(%rcx)
    88c5:	ff                   	(bad)  
    88c6:	ff c3                	inc    %ebx
    88c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    88cf:	00 
    88d0:	8b 86 ac 0f 8c ad    	mov    -0x5273f054(%rsi),%eax
    88d6:	01 00                	add    %eax,(%rax)
    88d8:	00 ff                	add    %bh,%bh
    88da:	ff                   	(bad)  
    88db:	3d 00 40 0f 8c       	cmp    $0x8c0f4000,%eax
    88e0:	7e 02                	jle    88e4 <__sprintf_chk@plt+0x3c04>
    88e2:	00 4c 01 cf          	add    %cl,-0x31(%rcx,%rax,1)
    88e6:	00 00                	add    %al,(%rax)
    88e8:	49 f7 fa             	idiv   %r10
    88eb:	8b 36                	mov    (%rsi),%esi
    88ed:	49 89 c0             	mov    %rax,%r8
    88f0:	e9 4b fb ff ff       	jmp    8440 <__sprintf_chk@plt+0x3760>
    88f5:	66 66 2e 0f 1f 84 48 	data16 cs nopw 0xc131(%rax,%rcx,2)
    88fc:	31 c1 00 00 
    8900:	f3 0f 1e 49 01       	repz nopl 0x1(%rcx)
    8905:	ce                   	(bad)  
    8906:	f0 8b b7 a8 00 00 00 	lock mov 0xa8(%rdi),%esi
    890d:	8b 88 a8 00 00 00    	mov    0xa8(%rax),%ecx
    8913:	83 f9 09             	cmp    $0x9,%ecx
    8916:	0f 94 c2             	sete   %dl
    8919:	83 f9 03             	cmp    $0x3,%ecx
    891c:	4d 09 d7             	or     %r10,%r15
    891f:	09 ca                	or     %ecx,%edx
    8921:	83 4d 85 d2          	orl    $0xffffffd2,-0x7b(%rbp)
    8925:	2a 83 fe 09 4c 09    	sub    0x94c09fe(%rbx),%al
    892b:	d7                   	xlat   %ds:(%rbx)
    892c:	8f                   	(bad)  
    892d:	ac                   	lods   %ds:(%rsi),%al
    892e:	4d 0f af 4d 89       	imul   -0x77(%r13),%r9
    8933:	c7                   	(bad)  
    8934:	f0 00 00             	lock add %al,(%rax)
    8937:	0f 84 8b fe ff ff    	je     87c8 <__sprintf_chk@plt+0x3ae8>
    893d:	00 40 49             	add    %al,0x49(%rax)
    8940:	09 c0                	or     %eax,%eax
    8942:	f7 fd                	idiv   %ebp
    8944:	01 00                	add    %eax,(%rax)
    8946:	00 00                	add    %al,(%rax)
    8948:	c3                   	ret    
    8949:	0f 1f 80 48 c1 e2 08 	nopl   0x8e2c148(%rax)
    8950:	48 85 f7             	test   %rsi,%rdi
    8953:	0c 48                	or     $0x48,%al
    8955:	8b 37                	mov    (%rdi),%esi
    8957:	48 8b 38             	mov    (%rax),%rdi
    895a:	e9 e1 fa 0f 84       	jmp    ffffffff84108440 <obstack_alloc_failed_handler@@Base+0xffffffff840e63a0>
    895f:	7f fe                	jg     895f <__sprintf_chk@plt+0x3c7f>
    8961:	ff                   	(bad)  
    8962:	ff 0f                	decl   (%rdi)
    8964:	8f 87 4d 31 d6 f0    	pop    -0xf29ceb3(%rdi)
    896a:	00 49 f7             	add    %cl,-0x9(%rcx)
    896d:	fa                   	cli    
    896e:	e9 18 03 00 00       	jmp    8c8b <__sprintf_chk@plt+0x3fab>
    8973:	e0 b8                	loopne 892d <__sprintf_chk@plt+0x3c4d>
    8975:	ff                   	(bad)  
    8976:	ff                   	(bad)  
    8977:	ff                   	(bad)  
    8978:	ff c3                	inc    %ebx
    897a:	4d 0f                	rex.WRB (bad) 
    897c:	0f 8f ca fd 48 c7    	jg     ffffffffc749874c <obstack_alloc_failed_handler@@Base+0xffffffffc74766ac>
    8982:	c6                   	(bad)  
    8983:	d8 00                	fadds  (%rax)
    8985:	00 00                	add    %al,(%rax)
    8987:	4d 01 f1             	add    %r14,%r9
    898a:	00 0f                	add    %cl,(%rdi)
    898c:	8c 1d 01 00 00 00    	mov    %ds,0x1(%rip)        # 8993 <__sprintf_chk@plt+0x3cb3>
    8992:	74 a7                	je     893b <__sprintf_chk@plt+0x3c5b>
    8994:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    899a:	7c 9d                	jl     8939 <__sprintf_chk@plt+0x3c59>
    899c:	f1                   	int1   
    899d:	8b 37                	mov    (%rdi),%esi
    899f:	48 8b 38             	mov    (%rax),%rdi
    89a2:	48                   	rex.W
    89a3:	4d 31 de             	xor    %r11,%r14
    89a6:	ff 66 e9             	jmp    *-0x17(%rsi)
    89a9:	8b 02                	mov    (%rdx),%eax
    89ab:	00 00                	add    %al,(%rax)
    89ad:	00 00                	add    %al,(%rax)
    89af:	0f 84 32 03 00 00    	je     8ce7 <__sprintf_chk@plt+0x4007>
    89b5:	08 02                	or     %al,(%rdx)
    89b7:	00 00                	add    %al,(%rax)
    89b9:	0f 85 4f fd ff ff    	jne    870e <__sprintf_chk@plt+0x3a2e>
    89bf:	08 c3                	or     %al,%bl
    89c1:	0f                   	(bad)  
    89c2:	0f 85 ed 49 01 f6    	jne    fffffffff601d3b5 <obstack_alloc_failed_handler@@Base+0xfffffffff5ffb315>
    89c8:	48 89 d3             	mov    %rdx,%rbx
    89cb:	18 00                	sbb    %al,(%rax)
    89cd:	00 00                	add    %al,(%rax)
    89cf:	10 75 ee             	adc    %dh,-0x12(%rbp)
    89d2:	48 83 ec 08          	sub    $0x8,%rsp
    89d6:	48 8b 36             	mov    (%rsi),%rsi
    89d9:	48                   	rex.W
    89da:	49 09 f1             	or     %rsi,%r9
    89dd:	e9 8d 00 00 00       	jmp    8a6f <__sprintf_chk@plt+0x3d8f>
    89e2:	c0 0f 94             	rorb   $0x94,(%rdi)
    89e5:	c0 48 83 c4          	rorb   $0xc4,-0x7d(%rax)
    89e9:	08 c3                	or     %al,%bl
    89eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    89f0:	f3 0f 1e fa          	endbr64 
    89f4:	8b 96 48 c1 ea 14    	mov    0x14eac148(%rsi),%edx
    89fa:	4d 39 e5             	cmp    %r12,%r13
    89fd:	00 00                	add    %al,(%rax)
    89ff:	00 49 09             	add    %cl,0x9(%rcx)
    8a02:	d4                   	(bad)  
    8a03:	0f 48 49 f7          	cmovs  -0x9(%rcx),%ecx
    8a07:	fd                   	std    
    8a08:	09 0f                	or     %ecx,(%rdi)
    8a0a:	94                   	xchg   %eax,%esp
    8a0b:	c2 09 4c             	ret    $0x4c09
    8a0e:	31 c9                	xor    %ecx,%ecx
    8a10:	e7 2b                	out    %eax,$0x2b
    8a12:	2d 83 f9 09 74       	sub    $0x7409f983,%eax
    8a17:	28 8b 97 ac 00 00    	sub    %cl,0xac97(%rbx)
    8a1d:	00 48 31             	add    %cl,0x31(%rax)
    8a20:	f9                   	stc    
    8a21:	f0 00 00             	lock add %al,(%rax)
    8a24:	84 c0                	test   %al,%al
    8a26:	49 89 cd             	mov    %rcx,%r13
    8a29:	fa                   	cli    
    8a2a:	00 49 39             	add    %cl,0x39(%rcx)
    8a2d:	cc                   	int3   
    8a2e:	74 4a                	je     8a7a <__sprintf_chk@plt+0x3d9a>
    8a30:	b8 01 00 00 00       	mov    $0x1,%eax
    8a35:	c3                   	ret    
    8a36:	66 0f 8c 98 fd       	jl     87d3 <__sprintf_chk@plt+0x3af3>
    8a3b:	ff                   	(bad)  
    8a3c:	ff 00                	incl   (%rax)
    8a3e:	00 00                	add    %al,(%rax)
    8a40:	84 c0                	test   %al,%al
    8a42:	75 36                	jne    8a7a <__sprintf_chk@plt+0x3d9a>
    8a44:	8b 86 4d 0f af fd    	mov    -0x250f0b3(%rsi),%eax
    8a4a:	21 e1                	and    %esp,%ecx
    8a4c:	f0 00 00             	lock add %al,(%rax)
    8a4f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8a54:	74 24                	je     8a7a <__sprintf_chk@plt+0x3d9a>
    8a56:	48 ff c1             	inc    %rcx
    8a59:	ff                   	(bad)  
    8a5a:	ff c3                	inc    %ebx
    8a5c:	48 31 c2             	xor    %rax,%rdx
    8a5f:	00 8b 86 4c 85 f1    	add    %cl,-0xe7ab37a(%rbx)
    8a65:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 17a6b <_obstack_memory_used@@Base+0x72bb>
    8a6b:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8a70:	74 b6                	je     8a28 <__sprintf_chk@plt+0x3d48>
    8a72:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8a78:	74 dc                	je     8a56 <__sprintf_chk@plt+0x3d76>
    8a7a:	48 8b 97 88 4d 09 de 	mov    -0x21f6b278(%rdi),%rdx
    8a81:	48 8b 86 88 4c 21 e8 	mov    -0x17deb378(%rsi),%rax
    8a88:	48 8b 8e 4c 85 ee e9 	mov    -0x16117ab4(%rsi),%rcx
    8a8f:	b2 02                	mov    $0x2,%dl
    8a91:	00 00                	add    %al,(%rax)
    8a93:	00 00                	add    %al,(%rax)
    8a95:	00 7f be             	add    %bh,-0x42(%rdi)
    8a98:	7c 96                	jl     8a30 <__sprintf_chk@plt+0x3d50>
    8a9a:	29 d0                	sub    %edx,%eax
    8a9c:	75 bd                	jne    8a5b <__sprintf_chk@plt+0x3d7b>
    8a9e:	48 8b 36             	mov    (%rsi),%rsi
    8aa1:	48 8b 3f             	mov    (%rdi),%rdi
    8aa4:	e9 47 bf ff ff       	jmp    49f0 <strcmp@plt>
    8aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8ab0:	f3 0f 4d 85 d0 8b 48 	repz cmovge 0x49488bd0(%rbp),%eax
    8ab7:	49 
    8ab8:	f7 fd                	idiv   %ebp
    8aba:	00 48 8b             	add    %cl,-0x75(%rax)
    8abd:	86 88 00 00 49 89    	xchg   %cl,-0x76b70000(%rax)
    8ac3:	48 c1 ea 36          	shr    $0x36,%rdx
    8ac7:	02 00                	add    (%rax),%al
    8ac9:	00 76 fd             	add    %dh,-0x3(%rsi)
    8acc:	ff                   	(bad)  
    8acd:	ff 00                	incl   (%rax)
    8acf:	00 7f 2e             	add    %bh,0x2e(%rdi)
    8ad2:	7c 1c                	jl     8af0 <__sprintf_chk@plt+0x3e10>
    8ad4:	29 d0                	sub    %edx,%eax
    8ad6:	75 10                	jne    8ae8 <__sprintf_chk@plt+0x3e08>
    8ad8:	48 8b 36             	mov    (%rsi),%rsi
    8adb:	48 8b 3f             	mov    (%rdi),%rdi
    8ade:	e9 4d 89 cd ff       	jmp    ffffffffffce1430 <obstack_alloc_failed_handler@@Base+0xffffffffffcbf390>
    8ae3:	0f 1f 48 c1          	nopl   -0x3f(%rax)
    8ae7:	ea                   	(bad)  
    8ae8:	23 0f                	and    (%rdi),%ecx
    8aea:	1f                   	(bad)  
    8aeb:	80 00 4d             	addb   $0x4d,(%rax)
    8aee:	29 dc                	sub    %ebx,%esp
    8af0:	b8 49 39 c4 48       	mov    $0x48c43949,%eax
    8af5:	21 c2                	and    %eax,%edx
    8af7:	2e 0f 1f 84 00 00 00 	cs nopl 0x0(%rax,%rax,1)
    8afe:	00 00 
    8b00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b05:	c3                   	ret    
    8b06:	0f 8f 55 fe ff ff    	jg     8961 <__sprintf_chk@plt+0x3c81>
    8b0c:	26 00 00             	es add %al,(%rax)
    8b0f:	00 4c 01 f6          	add    %cl,-0xa(%rcx,%rax,1)
    8b13:	49 c1 e3 29          	shl    $0x29,%r11
    8b17:	48 8b 4d 0f          	mov    0xf(%rbp),%rcx
    8b1b:	af                   	scas   %es:(%rdi),%eax
    8b1c:	da 00                	fiaddl (%rax)
    8b1e:	48 8b 49 0f          	mov    0xf(%rcx),%rcx
    8b22:	af                   	scas   %es:(%rdi),%eax
    8b23:	fe 4d e9             	decb   -0x17(%rbp)
    8b26:	97                   	xchg   %eax,%edi
    8b27:	01 48 c1             	add    %ecx,-0x3f(%rax)
    8b2a:	ea                   	(bad)  
    8b2b:	23 49 89             	and    -0x77(%rcx),%ecx
    8b2e:	c7 80 00 00 00 7f 2b 	movl   $0x29217c2b,0x7f000000(%rax)
    8b35:	7c 21 29 
    8b38:	c8 0f 84 bc          	enter  $0x840f,$0xbc
    8b3c:	fd                   	std    
    8b3d:	ff                   	(bad)  
    8b3e:	ff 8b 3a e9 aa be    	decl   -0x415516c6(%rbx)
    8b44:	ff                   	(bad)  
    8b45:	ff 4d 39             	decl   0x39(%rbp)
    8b48:	49 0f af c8          	imul   %r8,%rcx
    8b4c:	00 00                	add    %al,(%rax)
    8b4e:	74 00                	je     8b50 <__sprintf_chk@plt+0x3e70>
    8b50:	c3                   	ret    
    8b51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8b58:	b8 01 00 00 00       	mov    $0x1,%eax
    8b5d:	c3                   	ret    
    8b5e:	66 90                	xchg   %ax,%ax
    8b60:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b65:	c3                   	ret    
    8b66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8b6d:	00 00 00 
    8b70:	f3 0f                	repz (bad) 
    8b72:	0f 8c 81 fe ff ff    	jl     89f9 <__sprintf_chk@plt+0x3d19>
    8b78:	b7 a8                	mov    $0xa8,%bh
    8b7a:	00 00                	add    %al,(%rax)
    8b7c:	00 48 09             	add    %cl,0x9(%rax)
    8b7f:	fb                   	sti    
    8b80:	00 00                	add    %al,(%rax)
    8b82:	00 83 f9 03 0f 48    	add    %al,0x480f03f9(%rbx)
    8b88:	c1 e3 0a             	shl    $0xa,%ebx
    8b8b:	09 0f                	or     %ecx,(%rdi)
    8b8d:	94                   	xchg   %eax,%esp
    8b8e:	c1 4d 31 ca          	rorl   $0xca,0x31(%rbp)
    8b92:	fe 48 c7             	decb   -0x39(%rax)
    8b95:	c1 a6 03 00 4d 21 ec 	shll   $0xec,0x214d0003(%rsi)
    8b9c:	fb                   	sti    
    8b9d:	15 00 00 00 81       	adc    $0x81000000,%eax
    8ba2:	e1 00                	loope  8ba4 <__sprintf_chk@plt+0x3ec4>
    8ba4:	49 31 c2             	xor    %rax,%r10
    8ba7:	fd                   	std    
    8ba8:	ff                   	(bad)  
    8ba9:	ff 35 81 f9 4c 21    	push   0x214cf981(%rip)        # 214d8530 <obstack_alloc_failed_handler@@Base+0x214b6490>
    8baf:	48 21 d2             	and    %rdx,%rdx
    8bb2:	47                   	rex.RXB
    8bb3:	49 f7 fc             	idiv   %r12
    8bb6:	00 00                	add    %al,(%rax)
    8bb8:	c3                   	ret    
    8bb9:	4c 29 d2             	sub    %r10,%rdx
    8bbc:	00 00                	add    %al,(%rax)
    8bbe:	00 0f                	add    %cl,(%rdi)
    8bc0:	48 ff c0             	inc    %rax
    8bc3:	00 00                	add    %al,(%rax)
    8bc5:	82                   	(bad)  
    8bc6:	ac                   	lods   %ds:(%rsi),%al
    8bc7:	00 00                	add    %al,(%rax)
    8bc9:	00 25 00 f0 00 48    	add    %ah,0x4800f000(%rip)        # 48017bcf <obstack_alloc_failed_handler@@Base+0x47ff5b2f>
    8bcf:	c1 e0 11             	shl    $0x11,%eax
    8bd2:	00 00                	add    %al,(%rax)
    8bd4:	74 24                	je     8bfa <__sprintf_chk@plt+0x3f1a>
    8bd6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8bdb:	c3                   	ret    
    8bdc:	49 c1 ee 33          	shr    $0x33,%r14
    8be0:	ff c5                	inc    %ebp
    8be2:	e3 0f                	jrcxz  8bf3 <__sprintf_chk@plt+0x3f13>
    8be4:	85 6c 02 00          	test   %ebp,0x0(%rdx,%rax,1)
    8be8:	00 00                	add    %al,(%rax)
    8bea:	48 c1 ee 2d          	shr    $0x2d,%rsi
    8bee:	8c c9                	mov    %cs,%ecx
    8bf0:	02 00                	add    (%rax),%al
    8bf2:	00 f9                	add    %bh,%cl
    8bf4:	00 40 0f             	add    %al,0xf(%rax)
    8bf7:	8c b9 fc 4c 89 e3    	mov    %?,-0x1c76b304(%rcx)
    8bfd:	88 00                	mov    %al,(%rax)
    8bff:	00 00                	add    %al,(%rax)
    8c01:	48 8b e9             	mov    %rcx,%rbp
    8c04:	ec                   	in     (%dx),%al
    8c05:	00 00                	add    %al,(%rax)
    8c07:	00 48 8b             	add    %cl,-0x75(%rax)
    8c0a:	49 f7 f9             	idiv   %r9
    8c0d:	00 00                	add    %al,(%rax)
    8c0f:	48 e9 4c 0f af 49    	rex.W jmp 49af9b61 <obstack_alloc_failed_handler@@Base+0x49ad7ac1>
    8c15:	0f 84 1e fc ff ff    	je     8839 <__sprintf_chk@plt+0x3b59>
    8c1b:	29 f3                	sub    %esi,%ebx
    8c1d:	bd 48 8b 37 48       	mov    $0x48378b48,%ebp
    8c22:	8b 3a                	mov    (%rdx),%edi
    8c24:	e9 c7 bd ff ff       	jmp    49f0 <strcmp@plt>
    8c29:	0f 1f 80 49 01 c1 00 	nopl   0xc10149(%rax)
    8c30:	f3 0f 1e fa          	endbr64 
    8c34:	8b 49 c1             	mov    -0x3f(%rcx),%ecx
    8c37:	e0 24                	loopne 8c5d <__sprintf_chk@plt+0x3f7d>
    8c39:	00 8b 8f a8 00 00    	add    %cl,0xa88f(%rbx)
    8c3f:	00 83 fa 03 49 01    	add    %al,0x14903fa(%rbx)
    8c45:	c4 83 fa 09          	(bad)
    8c49:	0f 94 c2             	sete   %dl
    8c4c:	09 d0                	or     %edx,%eax
    8c4e:	83 f9 4d             	cmp    $0x4d,%ecx
    8c51:	21 d8                	and    %ebx,%eax
    8c53:	4c 01 d7             	add    %r10,%rdi
    8c56:	74 28                	je     8c80 <__sprintf_chk@plt+0x3fa0>
    8c58:	49 31 dc             	xor    %rbx,%r12
    8c5b:	4d 39 d5             	cmp    %r10,%r13
    8c5e:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    8c64:	84 c0                	test   %al,%al
    8c66:	74 38                	je     8ca0 <__sprintf_chk@plt+0x3fc0>
    8c68:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8c6e:	74 4a                	je     8cba <__sprintf_chk@plt+0x3fda>
    8c70:	4c 21 f2             	and    %r14,%rdx
    8c73:	f1                   	int1   
    8c74:	00 c3                	add    %al,%bl
    8c76:	66 48 c1 e7 12       	data16 shl $0x12,%rdi
    8c7b:	00 e9                	add    %ch,%cl
    8c7d:	84 03                	test   %al,(%rbx)
    8c7f:	00 00                	add    %al,(%rax)
    8c81:	c0 75 36 8b          	shlb   $0x8b,0x36(%rbp)
    8c85:	86 4d 29             	xchg   %cl,0x29(%rbp)
    8c88:	d4                   	(bad)  
    8c89:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 17c8f <_obstack_memory_used@@Base+0x74df>
    8c8f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8c94:	74 4c                	je     8ce2 <__sprintf_chk@plt+0x4002>
    8c96:	39 cb                	cmp    %ecx,%ebx
    8c98:	ff                   	(bad)  
    8c99:	ff                   	(bad)  
    8c9a:	ff c3                	inc    %ebx
    8c9c:	0f 1f 40 00          	nopl   0x0(%rax)
    8ca0:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    8ca6:	25 00 f0 00 00       	and    $0xf000,%eax
    8cab:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8cb0:	74 b6                	je     8c68 <__sprintf_chk@plt+0x3f88>
    8cb2:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8cb8:	74 dc                	je     8c96 <__sprintf_chk@plt+0x3fb6>
    8cba:	48 8b 57 0f          	mov    0xf(%rdi),%rdx
    8cbe:	49 21 d1             	and    %rdx,%r9
    8cc1:	00 00                	add    %al,(%rax)
    8cc3:	4d 39 dc             	cmp    %r11,%r12
    8cc6:	ff                   	(bad)  
    8cc7:	39 4f 70             	cmp    %ecx,0x70(%rdi)
    8cca:	0f 85 a5 03 4d 39    	jne    394d9075 <obstack_alloc_failed_handler@@Base+0x394b6fd5>
    8cd0:	fa                   	cli    
    8cd1:	92                   	xchg   %eax,%edx
    8cd2:	48 c7 c7 b1 03 00 00 	mov    $0x3b1,%rdi
    8cd9:	48 0f af f0          	imul   %rax,%rsi
    8cdd:	0f 1f 00             	nopl   (%rax)
    8ce0:	4d 85 cf             	test   %r9,%r15
    8ce3:	8f                   	(bad)  
    8ce4:	55                   	push   %rbp
    8ce5:	ff 4d 31             	decl   0x31(%rbp)
    8ce8:	e8 22 4d 39 df       	call   ffffffffdf39da0f <obstack_alloc_failed_handler@@Base+0xffffffffdf37b96f>
    8ced:	c0 ff 70             	sar    $0x70,%bh
    8cf0:	48 39 4d 85          	cmp    %rcx,-0x7b(%rbp)
    8cf4:	4d 0f af c6          	imul   %r14,%r8
    8cf8:	8f                   	(bad)  
    8cf9:	1f                   	(bad)  
    8cfa:	fc                   	cld    
    8cfb:	ff                   	(bad)  
    8cfc:	ff 8b 36 48 4d 01    	decl   0x14d4836(%rbx)
    8d02:	d0 e9                	shr    %cl
    8d04:	bc 48 89 f6 0f       	mov    $0xff68948,%esp
    8d09:	1f                   	(bad)  
    8d0a:	0f 8f 6b 01 00 00    	jg     8e7b <__sprintf_chk@plt+0x419b>
    8d10:	c3                   	ret    
    8d11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d18:	b8 01 00 49 c1       	mov    $0xc1490001,%eax
    8d1d:	e8 04 03 00 00       	call   9026 <__sprintf_chk@plt+0x4346>
    8d22:	ff 4d 31             	decl   0x31(%rbp)
    8d25:	f3 66 2e 0f 1f 84 00 	repz cs nopw 0xfc6ff49(%rax,%rax,1)
    8d2c:	49 ff c6 0f 
    8d30:	85 19                	test   %ebx,(%rcx)
    8d32:	03 00                	add    (%rax),%eax
    8d34:	00 89 f2 48 8b 4e    	add    %cl,0x4e8b48f2(%rcx)
    8d3a:	78 48                	js     8d84 <__sprintf_chk@plt+0x40a4>
    8d3c:	8b 47 78             	mov    0x78(%rdi),%eax
    8d3f:	48 8b 77 70          	mov    0x70(%rdi),%rsi
    8d43:	48 39 72 70          	cmp    %rsi,0x70(%rdx)
    8d47:	7f 27                	jg     8d70 <__sprintf_chk@plt+0x4090>
    8d49:	7c 1d                	jl     8d68 <__sprintf_chk@plt+0x4088>
    8d4b:	29 c8                	sub    %ecx,%eax
    8d4d:	75 11                	jne    8d60 <__sprintf_chk@plt+0x4080>
    8d4f:	48 f7 f8             	idiv   %rax
    8d52:	4d 29 ca             	sub    %r9,%r10
    8d55:	e9 4d 21 e2 ff       	jmp    ffffffffffe2aea7 <obstack_alloc_failed_handler@@Base+0xffffffffffe08e07>
    8d5a:	4c 89 4d 39          	mov    %r9,0x39(%rbp)
    8d5e:	d7                   	xlat   %ds:(%rbx)
    8d5f:	00 c3                	add    %al,%bl
    8d61:	0f 1f 49 c7          	nopl   -0x39(%rcx)
    8d65:	c4                   	(bad)  
    8d66:	39 02                	cmp    %eax,(%rdx)
    8d68:	00 00                	add    %al,(%rax)
    8d6a:	00 00                	add    %al,(%rax)
    8d6c:	00 c3                	add    %al,%bl
    8d6e:	66 49 c1 e1 32       	data16 shl $0x32,%r9
    8d73:	ff                   	(bad)  
    8d74:	e9 cc fc ff ff       	jmp    8a45 <__sprintf_chk@plt+0x3d65>
    8d79:	1f                   	(bad)  
    8d7a:	84 00                	test   %al,(%rax)
    8d7c:	00 00                	add    %al,(%rax)
    8d7e:	0f 85 92 01 00 00    	jne    8f16 <__sprintf_chk@plt+0x4236>
    8d84:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    8d8a:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    8d90:	83 fa 03             	cmp    $0x3,%edx
    8d93:	0f 94 c0             	sete   %al
    8d96:	83 fa 09             	cmp    $0x9,%edx
    8d99:	0f 94 49 c1          	sete   -0x3f(%rcx)
    8d9d:	ef                   	out    %eax,(%dx)
    8d9e:	34 f9                	xor    $0xf9,%al
    8da0:	03 74 49 c1          	add    -0x3f(%rcx,%rcx,2),%esi
    8da4:	e4 30                	in     $0x30,%al
    8da6:	74 28                	je     8dd0 <__sprintf_chk@plt+0x40f0>
    8da8:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    8dae:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    8db4:	84 c0                	test   %al,%al
    8db6:	74 38                	je     8df0 <__sprintf_chk@plt+0x4110>
    8db8:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    8dbe:	74 49                	je     8e09 <__sprintf_chk@plt+0x4129>
    8dc0:	01 d0                	add    %edx,%eax
    8dc2:	00 00                	add    %al,(%rax)
    8dc4:	00 4d 01             	add    %cl,0x1(%rbp)
    8dc7:	fe 0f                	decb   (%rdi)
    8dc9:	1f                   	(bad)  
    8dca:	84 00                	test   %al,(%rax)
    8dcc:	00 00                	add    %al,(%rax)
    8dce:	00 00                	add    %al,(%rax)
    8dd0:	84 0f                	test   %cl,(%rdi)
    8dd2:	84 93 fe ff ff 00    	test   %dl,0xfffffe(%rbx)
    8dd8:	49 21 de             	and    %rbx,%r14
    8ddb:	00 f0                	add    %dh,%al
    8ddd:	00 00                	add    %al,(%rax)
    8ddf:	3d 00 40 49 0f       	cmp    $0xf494000,%eax
    8de4:	4d 09 ca             	or     %r9,%r10
    8de7:	ff 48 f7             	decl   -0x9(%rax)
    8dea:	f9                   	stc    
    8deb:	29 db                	sub    %ebx,%ebx
    8ded:	1f                   	(bad)  
    8dee:	40 00 8b 86 ac 00 0f 	rex add %cl,0xf00ac86(%rbx)
    8df5:	8f                   	(bad)  
    8df6:	b6 fd                	mov    $0xfd,%dh
    8df8:	ff                   	(bad)  
    8df9:	ff 00                	incl   (%rax)
    8dfb:	3d 00 4c 39 ee       	cmp    $0xee394c00,%eax
    8e00:	74 b6                	je     8db8 <__sprintf_chk@plt+0x40d8>
    8e02:	81 fa 0f 84 f3 02    	cmp    $0x2f3840f,%edx
    8e08:	00 00                	add    %al,(%rax)
    8e0a:	48 8b 57 78          	mov    0x78(%rdi),%rdx
    8e0e:	48 8b 46 78          	mov    0x78(%rsi),%rax
    8e12:	48 8b 4e 70          	mov    0x70(%rsi),%rcx
    8e16:	48 31 cb             	xor    %rcx,%rbx
    8e19:	70 7f                	jo     8e9a <__sprintf_chk@plt+0x41ba>
    8e1b:	ca 7c a2             	lret   $0xa27c
    8e1e:	29 d0                	sub    %edx,%eax
    8e20:	75 c9                	jne    8deb <__sprintf_chk@plt+0x410b>
    8e22:	48 8b 36             	mov    (%rsi),%rsi
    8e25:	4d 0f af c9          	imul   %r9,%r9
    8e29:	0f 8c 69 03 00 00    	jl     9198 <__sprintf_chk@plt+0x44b8>
    8e2f:	00 f3                	add    %dh,%bl
    8e31:	48 c7 c1 9d 00 00 00 	mov    $0x9d,%rcx
    8e38:	b7 a8                	mov    $0xa8,%bh
    8e3a:	00 0f                	add    %cl,(%rdi)
    8e3c:	8c ab fe e9 de fd    	mov    %gs,-0x2211602(%rbx)
    8e42:	ff                   	(bad)  
    8e43:	ff 49 f7             	decl   -0x9(%rcx)
    8e46:	f8                   	clc    
    8e47:	94                   	xchg   %eax,%esp
    8e48:	c0 83 f9 09 0f 94 49 	rolb   $0x49,-0x6bf0f607(%rbx)
    8e4f:	ff 48 39             	decl   0x39(%rax)
    8e52:	fa                   	cli    
    8e53:	03 74 2a 83          	add    -0x7d(%rdx,%rbp,1),%esi
    8e57:	fe 09                	decb   (%rcx)
    8e59:	74 25                	je     8e80 <__sprintf_chk@plt+0x41a0>
    8e5b:	8b 8f 49 21 fa 00    	mov    0xfa2149(%rdi),%ecx
    8e61:	48                   	rex.W
    8e62:	49 f7 f8             	idiv   %r8
    8e65:	00 00                	add    %al,(%rax)
    8e67:	84 c0                	test   %al,%al
    8e69:	74 35                	je     8ea0 <__sprintf_chk@plt+0x41c0>
    8e6b:	81 f9 00 40 4c 01    	cmp    $0x14c4000,%ecx
    8e71:	d3 47 b8             	roll   %cl,-0x48(%rdi)
    8e74:	01 00                	add    %eax,(%rax)
    8e76:	00 00                	add    %al,(%rax)
    8e78:	c3                   	ret    
    8e79:	0f 1f 80 00 00 00 0f 	nopl   0xf000000(%rax)
    8e80:	8f 86 fc ff ff 82    	pop    -0x7d000004(%rsi)
    8e86:	ac                   	lods   %ds:(%rsi),%al
    8e87:	00 00                	add    %al,(%rax)
    8e89:	49 31 f1             	xor    %rsi,%r9
    8e8c:	01 00                	add    %eax,(%rax)
    8e8e:	00 3d 00 40 00 00    	add    %bh,0x4000(%rip)        # ce94 <__sprintf_chk@plt+0x81b4>
    8e94:	74 24                	je     8eba <__sprintf_chk@plt+0x41da>
    8e96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8e9b:	c3                   	ret    
    8e9c:	0f 1f 40 00          	nopl   0x0(%rax)
    8ea0:	8b 82 eb 48 ff 4d    	mov    0x4dff48eb(%rdx),%eax
    8ea6:	85 f3                	test   %esi,%ebx
    8ea8:	fe                   	(bad)  
    8ea9:	ff                   	(bad)  
    8eaa:	ff                   	(bad)  
    8eab:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8eb0:	74 b9                	je     8e6b <__sprintf_chk@plt+0x418b>
    8eb2:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    8eb8:	74 dc                	je     8e96 <__sprintf_chk@plt+0x41b6>
    8eba:	48 8b 4a 78          	mov    0x78(%rdx),%rcx
    8ebe:	48                   	rex.W
    8ebf:	4d 7f 36             	rex.WRB jg 8ef8 <__sprintf_chk@plt+0x4218>
    8ec2:	49 0f af df          	imul   %r15,%rbx
    8ec6:	48 39 df             	cmp    %rbx,%rdi
    8ec9:	e9 c8 02 49 c1       	jmp    ffffffffc1499196 <obstack_alloc_failed_handler@@Base+0xffffffffc14770f6>
    8ece:	e1 17                	loope  8ee7 <__sprintf_chk@plt+0x4207>
    8ed0:	21 da                	and    %ebx,%edx
    8ed2:	48                   	rex.W
    8ed3:	4c 31 fa             	xor    %r15,%rdx
    8ed6:	8b 4d 01             	mov    0x1(%rbp),%ecx
    8ed9:	d6                   	(bad)  
    8eda:	e9 2e ff ff ff       	jmp    8e0d <__sprintf_chk@plt+0x412d>
    8edf:	0f 8c 54 fc ff ff    	jl     8b39 <__sprintf_chk@plt+0x3e59>
    8ee5:	96                   	xchg   %eax,%esi
    8ee6:	a8 00                	test   $0x0,%al
    8ee8:	00 00                	add    %al,(%rax)
    8eea:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    8ef0:	83 fa 03             	cmp    $0x3,%edx
    8ef3:	0f 94 49 ff          	sete   -0x1(%rcx)
    8ef7:	c2 c1 ef             	ret    $0xefc1
    8efa:	0f c2 09 d0          	cmpps  $0xd0,(%rcx),%xmm1
    8efe:	4d 39 ce             	cmp    %r9,%r14
    8f01:	74 2d                	je     8f30 <__sprintf_chk@plt+0x4250>
    8f03:	83 f9 09             	cmp    $0x9,%ecx
    8f06:	74 28                	je     8f30 <__sprintf_chk@plt+0x4250>
    8f08:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    8f0e:	81 e2 00 48 85 d8    	and    $0xd8854800,%edx
    8f14:	85 f3                	test   %esi,%ebx
    8f16:	02 00                	add    (%rax),%al
    8f18:	00 fa                	add    %bh,%dl
    8f1a:	00 40 00             	add    %al,0x0(%rax)
    8f1d:	49 c7                	rex.WB (bad) 
    8f1f:	49 f7 fe             	idiv   %r14
    8f22:	ff                   	(bad)  
    8f23:	ff f1                	push   %rcx
    8f25:	c3                   	ret    
    8f26:	66 2e 0f 1f 84 00 00 	cs nopw -0x23d6b700(%rax,%rax,1)
    8f2d:	49 29 dc 
    8f30:	ec                   	in     (%dx),%al
    8f31:	37                   	(bad)  
    8f32:	75 36                	jne    8f6a <__sprintf_chk@plt+0x428a>
    8f34:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    8f3a:	25 00 4d 01 cf       	and    $0xcf014d00,%eax
    8f3f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    8f44:	74 24                	je     8f6a <__sprintf_chk@plt+0x428a>
    8f46:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8f4b:	c3                   	ret    
    8f4c:	0f 1f 40 00          	nopl   0x0(%rax)
    8f50:	8b 86 0f 8c eb 01    	mov    0x1eb8c0f(%rsi),%eax
    8f56:	00 00                	add    %al,(%rax)
    8f58:	e9 48 29 c6 00       	jmp    c6b8a5 <obstack_alloc_failed_handler@@Base+0xc49805>
    8f5d:	40 00 00             	rex add %al,(%rax)
    8f60:	74 49                	je     8fab <__sprintf_chk@plt+0x42cb>
    8f62:	c7 c2 e6 fe ff ff    	mov    $0xfffffee6,%edx
    8f68:	4c 85 d8             	test   %r11,%rax
    8f6b:	00 00                	add    %al,(%rax)
    8f6d:	68 48 8b 46 68       	push   $0x68468b48
    8f72:	48 8b 4e 60          	mov    0x60(%rsi),%rcx
    8f76:	48 39 4f 60          	cmp    %rcx,0x60(%rdi)
    8f7a:	7f ca                	jg     8f46 <__sprintf_chk@plt+0x4266>
    8f7c:	7c a2                	jl     8f20 <__sprintf_chk@plt+0x4240>
    8f7e:	29 d0                	sub    %edx,%eax
    8f80:	75 c9                	jne    8f4b <__sprintf_chk@plt+0x426b>
    8f82:	48 8b 36             	mov    (%rsi),%rsi
    8f85:	48 8b 3f             	mov    (%rdi),%rdi
    8f88:	e9 63 ba ff ff       	jmp    49f0 <strcmp@plt>
    8f8d:	0f 1f 00             	nopl   (%rax)
    8f90:	f3 0f 49 85 d0 8b 57 	repz cmovns 0x48578bd0(%rbp),%eax
    8f97:	48 
    8f98:	31 c9                	xor    %ecx,%ecx
    8f9a:	46 68 49 c1 e1 32    	rex.RX push $0x32e1c149
    8fa0:	48 39 4f 60          	cmp    %rcx,0x60(%rdi)
    8fa4:	49                   	rex.WB
    8fa5:	49 0f af c6          	imul   %r14,%rax
    8fa9:	d0 75 14             	shlb   0x14(%rbp)
    8fac:	48 8b 36             	mov    (%rsi),%rsi
    8faf:	48 8b 3f             	mov    (%rdi),%rdi
    8fb2:	e9 39 ba ff 0f       	jmp    100049f0 <obstack_alloc_failed_handler@@Base+0xffe2950>
    8fb7:	8c ec                	mov    %gs,%esp
    8fb9:	fc                   	cld    
    8fba:	ff                   	(bad)  
    8fbb:	ff 49 c7             	decl   -0x39(%rcx)
    8fbe:	c5 5f ff             	(bad)
    8fc1:	ff                   	(bad)  
    8fc2:	ff 80 00 00 00 00    	incl   0x0(%rax)
    8fc8:	b8 01 00 00 00       	mov    $0x1,%eax
    8fcd:	c3                   	ret    
    8fce:	48 0f af ca          	imul   %rdx,%rcx
    8fd2:	ff                   	(bad)  
    8fd3:	ff                   	(bad)  
    8fd4:	ff c3                	inc    %ebx
    8fd6:	66 0f 85 2e ff       	jne    8f09 <__sprintf_chk@plt+0x4229>
    8fdb:	ff                   	(bad)  
    8fdc:	ff 00                	incl   (%rax)
    8fde:	00 00                	add    %al,(%rax)
    8fe0:	f3 0f 49 0f          	repz cmovns (%rdi),%ecx
    8fe4:	af                   	scas   %es:(%rdi),%eax
    8fe5:	dc f2                	fdiv   %st,%st(2)
    8fe7:	49 89 d5             	mov    %rdx,%r13
    8fea:	68 48 8b 47 68       	push   $0x68478b48
    8fef:	48 8b 77 60          	mov    0x60(%rdi),%rsi
    8ff3:	49 c1 48 d1 e7       	rorq   $0xe7,-0x2f(%r8)
    8ff8:	27                   	(bad)  
    8ff9:	7c 1d                	jl     9018 <__sprintf_chk@plt+0x4338>
    8ffb:	29 c8                	sub    %ecx,%eax
    8ffd:	75 11                	jne    9010 <__sprintf_chk@plt+0x4330>
    8fff:	4d 0f 8c 3d ff ff ff 	rex.WRB jl 8f43 <__sprintf_chk@plt+0x4263>
    9006:	e6 b9                	out    %al,$0xb9
    9008:	ff                   	(bad)  
    9009:	ff 66 0f             	jmp    *0xf(%rsi)
    900c:	1f                   	(bad)  
    900d:	48 89 d3             	mov    %rdx,%rbx
    9010:	c3                   	ret    
    9011:	0f 1f 80 00 00 0f 84 	nopl   -0x7bf10000(%rax)
    9018:	39 ff                	cmp    %edi,%edi
    901a:	ff                   	(bad)  
    901b:	ff 00                	incl   (%rax)
    901d:	c3                   	ret    
    901e:	66 90                	xchg   %ax,%ax
    9020:	4d 85 c2             	test   %r8,%r10
    9023:	ff                   	(bad)  
    9024:	ff c3                	inc    %ebx
    9026:	66 2e 0f 1f 84 00 00 	cs nopw -0x187ab300(%rax,%rax,1)
    902d:	4d 85 e7 
    9030:	c1 e2 39             	shl    $0x39,%edx
    9033:	fa                   	cli    
    9034:	48                   	rex.W
    9035:	49 09 f5             	or     %rsi,%r13
    9038:	49 ff c7             	inc    %r15
    903b:	00 00                	add    %al,(%rax)
    903d:	4d 09 c8             	or     %r9,%r8
    9040:	00 00                	add    %al,(%rax)
    9042:	00 83 f9 03 0f 94    	add    %al,-0x6bf0fc07(%rbx)
    9048:	c0 83 f9 09 0f 8f 0c 	rolb   $0xc,-0x70f0f607(%rbx)
    904f:	49 e9 3d 01 00 00    	rex.WB jmp 9192 <__sprintf_chk@plt+0x44b2>
    9055:	2a 83 fe 09 74 25    	sub    0x257409fe(%rbx),%al
    905b:	8b 8f ac 00 00 49    	mov    0x490000ac(%rdi),%ecx
    9061:	09 d1                	or     %edx,%ecx
    9063:	ea                   	(bad)  
    9064:	03 00                	add    (%rax),%eax
    9066:	00 84 c0 74 35 81 f9 	add    %al,-0x67eca8c(%rax,%rax,8)
    906d:	00 4d 31             	add    %cl,0x31(%rbp)
    9070:	f8                   	clc    
    9071:	74 47                	je     90ba <__sprintf_chk@plt+0x43da>
    9073:	b8 01 00 4c 85       	mov    $0x854c0001,%eax
    9078:	cb                   	lret   
    9079:	0f                   	(bad)  
    907a:	0f 84 df 01 00 00    	je     925f <__sprintf_chk@plt+0x457f>
    9080:	84 c0                	test   %al,%al
    9082:	75 36                	jne    90ba <__sprintf_chk@plt+0x43da>
    9084:	8b 82 ac 00 00 00    	mov    0xac(%rdx),%eax
    908a:	25 00 f0 00 49       	and    $0x4900f000,%eax
    908f:	09 f6                	or     %esi,%esi
    9091:	40 00 00             	rex add %al,(%rax)
    9094:	74 24                	je     90ba <__sprintf_chk@plt+0x43da>
    9096:	b8 4c 89 c1 4d       	mov    $0x4dc1894c,%eax
    909b:	09 c2                	or     %eax,%edx
    909d:	1f                   	(bad)  
    909e:	40                   	rex
    909f:	48 c7 c3 03 49 49 f7 	mov    $0xfffffffff7494903,%rbx
    90a6:	ff 00                	incl   (%rax)
    90a8:	0f 85 a5 fd 4c 09    	jne    94d8e53 <obstack_alloc_failed_handler@@Base+0x94b6db3>
    90ae:	ff 89 fd b9 81 f9    	decl   -0x67e4603(%rcx)
    90b4:	48 ff c2             	inc    %rdx
    90b7:	00 74 dc 48          	add    %dh,0x48(%rsp,%rbx,8)
    90bb:	8b 4a 4d             	mov    0x4d(%rdx),%ecx
    90be:	21 e2                	and    %esp,%edx
    90c0:	47 68 48 8b 77 48    	rex.RXB push $0x48778b48
    90c6:	c1 e3 34             	shl    $0x34,%ebx
    90c9:	60                   	(bad)  
    90ca:	7f ca                	jg     9096 <__sprintf_chk@plt+0x43b6>
    90cc:	7c a5                	jl     9073 <__sprintf_chk@plt+0x4393>
    90ce:	29 49 7f             	sub    %ecx,0x7f(%rcx)
    90d1:	85 4c 29 c2          	test   %ecx,-0x3e(%rcx,%rbp,1)
    90d5:	48 8b 3a             	mov    (%rdx),%rdi
    90d8:	e9 13 b9 ff ff       	jmp    49f0 <strcmp@plt>
    90dd:	0f 1f 00             	nopl   (%rax)
    90e0:	f3 0f 1e fa          	endbr64 
    90e4:	48 8b 57 78          	mov    0x78(%rdi),%rdx
    90e8:	48 8b 46 78          	mov    0x78(%rsi),%rax
    90ec:	48 8b 48 89          	mov    -0x77(%rax),%rcx
    90f0:	d1 39                	sarl   (%rcx)
    90f2:	4f 70 7f             	rex.WRXB jo 9174 <__sprintf_chk@plt+0x4494>
    90f5:	2a 7c 20 29          	sub    0x29(%rax,%riz,1),%bh
    90f9:	d0 75 49             	shlb   0x49(%rbp)
    90fc:	c1 ee 40             	shr    $0x40,%esi
    90ff:	48                   	rex.W
    9100:	49 85 fc             	test   %rdi,%r12
    9103:	e9 b8 e9 e8 00       	jmp    e97ac0 <obstack_alloc_failed_handler@@Base+0xe75a20>
    9108:	00 00                	add    %al,(%rax)
    910a:	fe 01                	incb   (%rcx)
    910c:	00 00                	add    %al,(%rax)
    910e:	00 00                	add    %al,(%rax)
    9110:	c3                   	ret    
    9111:	0f 4d 09             	cmovge (%rcx),%ecx
    9114:	da 00                	fiaddl (%rax)
    9116:	00 00                	add    %al,(%rax)
    9118:	4d 31 de             	xor    %r11,%r14
    911b:	00 4d 29             	add    %cl,0x29(%rbp)
    911e:	ea                   	(bad)  
    911f:	90                   	nop
    9120:	b8 4c 89 df c4       	mov    $0xc4df894c,%eax
    9125:	c3                   	ret    
    9126:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    912d:	00 00 00 
    9130:	f3 0f 1e fa          	endbr64 
    9134:	48 89 f2             	mov    %rsi,%rdx
    9137:	48 8b 4e 78          	mov    0x78(%rsi),%rcx
    913b:	48 8b 47 78          	mov    0x78(%rdi),%rax
    913f:	48 8b 77 70          	mov    0x70(%rdi),%rsi
    9143:	48 39 72 70          	cmp    %rsi,0x70(%rdx)
    9147:	7f 27                	jg     9170 <__sprintf_chk@plt+0x4490>
    9149:	7c 1d                	jl     9168 <__sprintf_chk@plt+0x4488>
    914b:	29 c8                	sub    %ecx,%eax
    914d:	75 0f                	jne    915e <__sprintf_chk@plt+0x447e>
    914f:	85 b4 fd ff ff 3a e9 	test   %esi,-0x16c50001(%rbp,%rdi,8)
    9156:	96                   	xchg   %eax,%esi
    9157:	b8 ff ff 66 0f       	mov    $0xf66ffff,%eax
    915c:	4d 85 d9             	test   %r11,%r9
    915f:	00 c3                	add    %al,%bl
    9161:	4d 21 c0             	and    %r8,%r8
    9164:	00 00                	add    %al,(%rax)
    9166:	00 00                	add    %al,(%rax)
    9168:	b8 01 00 00 00       	mov    $0x1,%eax
    916d:	49 0f af d1          	imul   %r9,%rdx
    9171:	ff                   	(bad)  
    9172:	ff                   	(bad)  
    9173:	ff                   	(bad)  
    9174:	ff c3                	inc    %ebx
    9176:	66 2e 0f 1f 84 0f 8c 	cs nopw -0x1d874(%rdi,%rcx,1)
    917d:	27 fe ff 
    9180:	0f 8f 40 4c 09 e6    	jg     ffffffffe609ddc6 <obstack_alloc_failed_handler@@Base+0xffffffffe607bd26>
    9186:	e8 09 b7 a8 00       	call   a94894 <obstack_alloc_failed_handler@@Base+0xa727f4>
    918b:	00 00                	add    %al,(%rax)
    918d:	8b 8a 49 39 cb 00    	mov    0xcb3949(%rdx),%ecx
    9193:	83 f9 03             	cmp    $0x3,%ecx
    9196:	0f 94 c0             	sete   %al
    9199:	83 f9 09             	cmp    $0x9,%ecx
    919c:	0f 94 c1             	sete   %cl
    919f:	09 c8                	or     %ecx,%eax
    91a1:	4c 29 ff             	sub    %r15,%rdi
    91a4:	74 2a                	je     91d0 <__sprintf_chk@plt+0x44f0>
    91a6:	83 fe 48             	cmp    $0x48,%esi
    91a9:	c1 ef 07             	shr    $0x7,%edi
    91ac:	38 fe                	cmp    %bh,%dh
    91ae:	ff 4d 29             	decl   0x29(%rbp)
    91b1:	ee                   	out    %al,(%dx)
    91b2:	4c 29 c9             	sub    %r9,%rcx
    91b5:	49 c1 e3 15          	shl    $0x15,%r11
    91b9:	74 35                	je     91f0 <__sprintf_chk@plt+0x4510>
    91bb:	48 85 c1             	test   %rax,%rcx
    91be:	f6 00 49             	testb  $0x49,(%rax)
    91c1:	f7 f8                	idiv   %eax
    91c3:	b8 01 00 00 49       	mov    $0x49000001,%eax
    91c8:	c7 c0 5c fe ff ff    	mov    $0xfffffe5c,%eax
    91ce:	00 00                	add    %al,(%rax)
    91d0:	4c 29 fb             	sub    %r15,%rbx
    91d3:	36 8b 82 ac 00 00 00 	ss mov 0xac(%rdx),%eax
    91da:	25 0f 85 49 d1       	and    $0xd149850f,%eax
    91df:	eb ff                	jmp    91e0 <__sprintf_chk@plt+0x4500>
    91e1:	40 00 00             	rex add %al,(%rax)
    91e4:	0f 85 00 01 00 00    	jne    92ea <__sprintf_chk@plt+0x460a>
    91ea:	ff c3                	inc    %ebx
    91ec:	0f 1f 40 00          	nopl   0x0(%rax)
    91f0:	8b 82 ac 00 00 00    	mov    0xac(%rdx),%eax
    91f6:	25 00 f0 49 0f       	and    $0xf49f000,%eax
    91fb:	af                   	scas   %es:(%rdi),%eax
    91fc:	d4                   	(bad)  
    91fd:	48 29 ca             	sub    %rcx,%rdx
    9200:	74 b9                	je     91bb <__sprintf_chk@plt+0x44db>
    9202:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    9208:	74 48                	je     9252 <__sprintf_chk@plt+0x4572>
    920a:	c7 c6 e5 00 00 48    	mov    $0x480000e5,%esi
    9210:	ff c3                	inc    %ebx
    9212:	48 8b 77 70          	mov    0x70(%rdi),%rsi
    9216:	0f 84 25 fd ff ff    	je     8f41 <__sprintf_chk@plt+0x4261>
    921c:	7c 0f                	jl     922d <__sprintf_chk@plt+0x454d>
    921e:	8c 3b                	mov    %?,(%rbx)
    9220:	fe                   	(bad)  
    9221:	ff                   	(bad)  
    9222:	ff                   	(bad)  
    9223:	e9 12 4d 85 e5       	jmp    ffffffffe585df3a <obstack_alloc_failed_handler@@Base+0xffffffffe583be9a>
    9228:	e9 c3 4c 09 da       	jmp    ffffffffda09def0 <obstack_alloc_failed_handler@@Base+0xffffffffda07be50>
    922d:	0f 1f 00             	nopl   (%rax)
    9230:	41 57                	push   %r15
    9232:	ba 05 00 00 00       	mov    $0x5,%edx
    9237:	41 56                	push   %r14
    9239:	41 55                	push   %r13
    923b:	41 54                	push   %r12
    923d:	55                   	push   %rbp
    923e:	89 fd                	mov    %edi,%ebp
    9240:	53                   	push   %rbx
    9241:	48 81 ec 88 4d 31 f9 	sub    $0xfffffffff9314d88,%rsp
    9248:	4c 8b 25 09 92 01 00 	mov    0x19209(%rip),%r12        # 22458 <obstack_alloc_failed_handler@@Base+0x3b8>
    924f:	64 4d 31 ed          	fs xor %r13,%r13
    9253:	3a 28                	cmp    (%rax),%ch
    9255:	00 00                	add    %al,(%rax)
    9257:	00 48 ff             	add    %cl,-0x1(%rax)
    925a:	c0 24 78 31          	shlb   $0x31,(%rax,%rdi,2)
    925e:	c0 85 ff 74 49 29 ff 	rolb   $0xff,0x294974ff(%rbp)
    9265:	0f 85 28 01 00 00    	jne    9393 <__sprintf_chk@plt+0x46b3>
    926b:	ff                   	(bad)  
    926c:	e8 ef b5 ff ff       	call   4860 <dcgettext@plt>
    9271:	49 c1 ee 49          	shr    $0x49,%r14
    9275:	f7 ff                	idiv   %edi
    9277:	00 48 c1             	add    %cl,-0x3f(%rax)
    927a:	e0 23                	loopne 929f <__sprintf_chk@plt+0x45bf>
    927c:	48 8b 05 6d 0f 85 89 	mov    -0x767af093(%rip),%rax        # ffffffff8985a1f0 <obstack_alloc_failed_handler@@Base+0xffffffff89838150>
    9283:	03 00                	add    (%rax),%eax
    9285:	00 31                	add    %dh,(%rcx)
    9287:	c0 48 c7 c3          	rorb   $0xc3,-0x39(%rax)
    928b:	5a                   	pop    %rdx
    928c:	ff                   	(bad)  
    928d:	ff                   	(bad)  
    928e:	ff 0f                	decl   (%rdi)
    9290:	8f 44 fd ff          	pop    -0x1(%rbp,%rdi,8)
    9294:	ff                   	(bad)  
    9295:	ff 48 09             	decl   0x9(%rax)
    9298:	4c 01 fb             	add    %r15,%rbx
    929b:	01 00                	add    %eax,(%rax)
    929d:	49 ff c5             	inc    %r13
    92a0:	ff                   	(bad)  
    92a1:	ff 4c 89 e2          	decl   -0x1e(%rcx,%rcx,4)
    92a5:	bf 01 00 00 00       	mov    $0x1,%edi
    92aa:	48 89 c6             	mov    %rax,%rsi
    92ad:	31 c0                	xor    %eax,%eax
    92af:	e8 8c b8 ff ff       	call   4b40 <__printf_chk@plt>
    92b4:	0f 8c 49 01 00 00    	jl     9403 <__sprintf_chk@plt+0x4723>
    92ba:	0f 85 50 02 00 4c    	jne    4c009510 <obstack_alloc_failed_handler@@Base+0x4bfe7470>
    92c0:	31 e2                	xor    %esp,%edx
    92c2:	01 00                	add    %eax,(%rax)
    92c4:	0f 84 6c 03 00 00    	je     9636 <__sprintf_chk@plt+0x4956>
    92ca:	8b 23                	mov    (%rbx),%esp
    92cc:	4c 0f af db          	imul   %rbx,%r11
    92d0:	ff 48 89             	decl   -0x77(%rax)
    92d3:	c7                   	(bad)  
    92d4:	4c 89 e6             	mov    %r12,%rsi
    92d7:	e8 4c 21 d1 ff       	call   ffffffffffd1b428 <obstack_alloc_failed_handler@@Base+0xffffffffffcf9388>
    92dc:	4c 8b 23             	mov    (%rbx),%r12
    92df:	ba 05 00 4d 29       	mov    $0x294d0005,%edx
    92e4:	f6 49 f7 ff          	testb  $0xff,-0x9(%rcx)
    92e8:	35 fb 0e 01 00       	xor    $0x10efb,%eax
    92ed:	4c 21 e6             	and    %r12,%rsi
    92f0:	01 e3                	add    %esp,%ebx
    92f2:	4c 89 e6             	mov    %r12,%rsi
    92f5:	48 89 49 39          	mov    %rcx,0x39(%rcx)
    92f9:	ff b6 49 4d 29 eb    	push   -0x14d6b2b7(%rsi)
    92ff:	03 00                	add    (%rax),%eax
    9301:	00 4d 09             	add    %cl,0x9(%rbp)
    9304:	d6                   	(bad)  
    9305:	f1                   	int1   
    9306:	ff 48 8d             	decl   -0x73(%rax)
    9309:	35 4d 74 ba 00       	xor    $0xba744d,%eax
    930e:	e8 4d b5 ff ff       	call   4860 <dcgettext@plt>
    9313:	4c 89 4c 39 ee       	mov    %r9,-0x12(%rcx,%rdi,1)
    9318:	4d 09 e7             	or     %r12,%r15
    931b:	02 00                	add    (%rax),%al
    931d:	00 4c 8b 23          	add    %cl,0x23(%rbx,%rcx,4)
    9321:	ba 05 00 00 00       	mov    $0x5,%edx
    9326:	31 ff                	xor    %edi,%edi
    9328:	48 8d 35 19 10 01 00 	lea    0x11019(%rip),%rsi        # 1a348 <_obstack_memory_used@@Base+0x9b98>
    932f:	e8 2c b5 ff ff       	call   4860 <dcgettext@plt>
    9334:	4c 89 e6             	mov    %r12,%rsi
    9337:	48 c1 49 c1 e1       	rorq   $0xe1,-0x3f(%rcx)
    933c:	0a 49 31             	or     0x31(%rcx),%cl
    933f:	f5                   	cmc    
    9340:	8b 23                	mov    (%rbx),%esp
    9342:	ba 05 48 31 d1       	mov    $0xd1314805,%edx
    9347:	48 c7 c6 db 01 00 00 	mov    $0x1db,%rsi
    934e:	01 00                	add    %eax,(%rax)
    9350:	49 89 c2             	mov    %rax,%r10
    9353:	ff                   	(bad)  
    9354:	ff 4c 4c 01          	decl   0x1(%rsp,%rcx,2)
    9358:	d7                   	xlat   %ds:(%rbx)
    9359:	89 c7                	mov    %eax,%edi
    935b:	0f 8f 33 02 00 00    	jg     9594 <__sprintf_chk@plt+0x48b4>
    9361:	8b 23                	mov    (%rbx),%esp
    9363:	ba 05 00 0f 84       	mov    $0x840f0005,%edx
    9368:	a2 fd ff 0f 84 6a 01 	movabs %al,0x16a840ffffd
    936f:	00 00 
    9371:	e8 ea 0f 8c e3       	call   ffffffffe38ca360 <obstack_alloc_failed_handler@@Base+0xffffffffe38a82c0>
    9376:	fd                   	std    
    9377:	ff                   	(bad)  
    9378:	ff 48 89             	decl   -0x77(%rax)
    937b:	c7                   	(bad)  
    937c:	4d 85 d1             	test   %r10,%r9
    937f:	0f 84 ea fc ff ff    	je     906f <__sprintf_chk@plt+0x438f>
    9385:	c3                   	ret    
    9386:	85 2d fc ff ff 48    	test   %ebp,0x48fffffc(%rip)        # 49009388 <obstack_alloc_failed_handler@@Base+0x48fe72e8>
    938c:	8d 35 36 13 01 00    	lea    0x11336(%rip),%esi        # 1a6c8 <_obstack_memory_used@@Base+0x9f18>
    9392:	e8 c9 b4 48 c7       	call   ffffffffc7494860 <obstack_alloc_failed_handler@@Base+0xffffffffc74727c0>
    9397:	c6                   	(bad)  
    9398:	7b fe                	jnp    9398 <__sprintf_chk@plt+0x46b8>
    939a:	ff                   	(bad)  
    939b:	ff c7                	inc    %edi
    939d:	e8 2e b6 ff ff       	call   49d0 <fputs_unlocked@plt>
    93a2:	4c 8b 23             	mov    (%rbx),%r12
    93a5:	ba 05 00 00 0f       	mov    $0xf000005,%edx
    93aa:	85 dd                	test   %ebx,%ebp
    93ac:	01 00                	add    %eax,(%rax)
    93ae:	00 f7                	add    %dh,%bh
    93b0:	fa                   	cli    
    93b1:	01 00                	add    %eax,(%rax)
    93b3:	e8 4d 01 ed 4d       	call   4ded9505 <obstack_alloc_failed_handler@@Base+0x4deb7465>
    93b8:	89 eb                	mov    %ebp,%ebx
    93ba:	49 29 c4             	sub    %rax,%r12
    93bd:	c7                   	(bad)  
    93be:	e8 0d b6 ff ff       	call   49d0 <fputs_unlocked@plt>
    93c3:	4c 8b 23             	mov    (%rbx),%r12
    93c6:	ba 05 00 00 00       	mov    $0x5,%edx
    93cb:	31 ff                	xor    %edi,%edi
    93cd:	48 8d 35 49 01 cb 00 	lea    0xcb0149(%rip),%rsi        # cb951d <obstack_alloc_failed_handler@@Base+0xc9747d>
    93d4:	e8 87 b4 ff ff       	call   4860 <dcgettext@plt>
    93d9:	4c 89 e6             	mov    %r12,%rsi
    93dc:	48 89 c7             	mov    %rax,%rdi
    93df:	e8 ec b5 ff ff       	call   49d0 <fputs_unlocked@plt>
    93e4:	4c 8b 23             	mov    (%rbx),%r12
    93e7:	ba 05 00 00 48       	mov    $0x48000005,%edx
    93ec:	ff c2                	inc    %edx
    93ee:	48 8d 35 b3 15 01 00 	lea    0x115b3(%rip),%rsi        # 1a9a8 <_obstack_memory_used@@Base+0xa1f8>
    93f5:	e8 49 f7 fd ff       	call   fffffffffffe8b43 <obstack_alloc_failed_handler@@Base+0xfffffffffffc6aa3>
    93fa:	4c                   	rex.WR
    93fb:	48 eb f8             	rex.W jmp 93f6 <__sprintf_chk@plt+0x4716>
    93fe:	35 73 fe ff ff       	xor    $0xfffffe73,%eax
    9403:	ff                   	(bad)  
    9404:	ff 4c 8b 23          	decl   0x23(%rbx,%rcx,4)
    9408:	ba 05 00 00 00       	mov    $0x5,%edx
    940d:	49 85 c1             	test   %rax,%r9
    9410:	49 39 dc             	cmp    %rbx,%r12
    9413:	15 49 d1 e7 45       	adc    $0x45e7d149,%eax
    9418:	b4 ff                	mov    $0xff,%ah
    941a:	48 0f 8c d5 fe ff ff 	rex.W jl 92f6 <__sprintf_chk@plt+0x4616>
    9421:	e8 aa b5 ff 49       	call   4a0049d0 <obstack_alloc_failed_handler@@Base+0x49fe2930>
    9426:	ff c0                	inc    %eax
    9428:	4d 01 eb             	add    %r13,%r11
    942b:	00 00                	add    %al,(%rax)
    942d:	48 89 49 ff          	mov    %rcx,-0x1(%rcx)
    9431:	c0 35 59 16 01 00 4c 	shlb   $0x4c,0x11659(%rip)        # 1aa91 <_obstack_memory_used@@Base+0xa2e1>
    9438:	39 0f                	cmp    %ecx,(%rdi)
    943a:	8f                   	(bad)  
    943b:	a2 fd ff ff 48 89 c7 	movabs %al,0x89e8c78948fffffd
    9442:	e8 89 
    9444:	b5 ff                	mov    $0xff,%ch
    9446:	ff 4c 48 ff          	decl   -0x1(%rax,%rcx,2)
    944a:	c1 05 00 00 00 31 ff 	roll   $0xff,0x31000000(%rip)        # 31009451 <obstack_alloc_failed_handler@@Base+0x30fe73b1>
    9451:	48                   	rex.W
    9452:	4c 29 0f             	sub    %r9,(%rdi)
    9455:	85 79 fd             	test   %edi,-0x3(%rcx)
    9458:	ff                   	(bad)  
    9459:	ff b4 ff ff 4c 89 e6 	push   -0x1976b301(%rdi,%rdi,8)
    9460:	48 89 c7             	mov    %rax,%rdi
    9463:	e8 68 4c 21 d7       	call   ffffffffd721e0d0 <obstack_alloc_failed_handler@@Base+0xffffffffd71fc030>
    9468:	4c 8b 23             	mov    (%rbx),%r12
    946b:	ba 05 00 00 48       	mov    $0x48000005,%edx
    9470:	21 f1                	and    %esi,%ecx
    9472:	48 8d 35 57 18 01 00 	lea    0x11857(%rip),%rsi        # 1acd0 <_obstack_memory_used@@Base+0xa520>
    9479:	e8 e2 b3 ff ff       	call   4860 <dcgettext@plt>
    947e:	4c 89 e6             	mov    %r12,%rsi
    9481:	48 89 c7             	mov    %rax,%rdi
    9484:	e8 47 b5 ff ff       	call   49d0 <fputs_unlocked@plt>
    9489:	4c 8b 23             	mov    (%rbx),%r12
    948c:	ba 49 ff c7 e3       	mov    $0xe3c7ff49,%edx
    9491:	0f 8c 5d fc ff ff    	jl     90f4 <__sprintf_chk@plt+0x4414>
    9497:	19 01                	sbb    %eax,(%rcx)
    9499:	00 e8                	add    %ch,%al
    949b:	c1 b3 ff ff 4c 89 e6 	shll   $0xe6,-0x76b30001(%rbx)
    94a2:	4d 39 c7             	cmp    %r8,%r15
    94a5:	e8 26 b5 ff ff       	call   49d0 <fputs_unlocked@plt>
    94aa:	4c 8b 23             	mov    (%rbx),%r12
    94ad:	ba 05 00 00 00       	mov    $0x5,%edx
    94b2:	49 01 dc             	add    %rbx,%r12
    94b5:	8d 35 15 75 74 00    	lea    0x747515(%rip),%esi        # 7509d0 <obstack_alloc_failed_handler@@Base+0x72e930>
    94bb:	e8 a0 b3 ff ff       	call   4860 <dcgettext@plt>
    94c0:	49 f7 fb             	idiv   %r11
    94c3:	02 00                	add    (%rax),%al
    94c5:	00 0f                	add    %cl,(%rdi)
    94c7:	85 4d 01             	test   %ecx,0x1(%rbp)
    94ca:	d3 00                	roll   %cl,(%rax)
    94cc:	8b 23                	mov    (%rbx),%esp
    94ce:	ba e9 ec 01 00       	mov    $0x1ece9,%edx
    94d3:	00 e8                	add    %ch,%al
    94d5:	16                   	(bad)  
    94d6:	49 89 c2             	mov    %rax,%r10
    94d9:	1b 01                	sbb    (%rcx),%eax
    94db:	00 e8                	add    %ch,%al
    94dd:	7f b3                	jg     9492 <__sprintf_chk@plt+0x47b2>
    94df:	ff                   	(bad)  
    94e0:	ff 48 21             	decl   0x21(%rax)
    94e3:	fa                   	cli    
    94e4:	48 89 c7             	mov    %rax,%rdi
    94e7:	e8 e4 b4 ff 49       	call   4a0049d0 <obstack_alloc_failed_handler@@Base+0x49fe2930>
    94ec:	c1 e9 3b             	shr    $0x3b,%ecx
    94ef:	ba 05 00 00 00       	mov    $0x5,%edx
    94f4:	31 ff                	xor    %edi,%edi
    94f6:	48 0f 85 73 01 00 00 	rex.W jne 9670 <__sprintf_chk@plt+0x4990>
    94fd:	e8 5e 49 c7 49       	call   49c7de60 <obstack_alloc_failed_handler@@Base+0x49c5bdc0>
    9502:	0f af cd             	imul   %ebp,%ecx
    9505:	c1 ee 3c             	shr    $0x3c,%esi
    9508:	39 f0                	cmp    %esi,%eax
    950a:	b4 ff                	mov    $0xff,%ah
    950c:	ff 4c 8b 23          	decl   0x23(%rbx,%rcx,4)
    9510:	4d 21 f7             	and    %r14,%r15
    9513:	48 c1 eb 48          	shr    $0x48,%rbx
    9517:	c7 c2 b9 fe ff ff    	mov    $0xfffffeb9,%edx
    951d:	48 c1 e8 31          	shr    $0x31,%rax
    9521:	ff                   	(bad)  
    9522:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    9526:	48 89 c7             	mov    %rax,%rdi
    9529:	0f 8c 0a 01 00 00    	jl     9639 <__sprintf_chk@plt+0x4959>
    952f:	8b 23                	mov    (%rbx),%esp
    9531:	ba 05 0f 8c 2c       	mov    $0x2c8c0f05,%edx
    9536:	01 00                	add    %eax,(%rax)
    9538:	00 8d 48 85 ca 01    	add    %cl,0x1ca8548(%rbp)
    953e:	00 4c 21 4d          	add    %cl,0x4d(%rcx,%riz,1)
    9542:	09 f2                	or     %esi,%edx
    9544:	85 42 0f             	test   %eax,0xf(%rdx)
    9547:	8c 78 fe             	mov    %?,-0x2(%rax)
    954a:	ff                   	(bad)  
    954b:	ff 0f                	decl   (%rdi)
    954d:	8f                   	(bad)  
    954e:	6f                   	outsl  %ds:(%rsi),(%dx)
    954f:	03 00                	add    (%rax),%eax
    9551:	00 8b 49 c7 c5 74    	add    %cl,0x74c5c749(%rbx)
    9557:	03 00                	add    (%rax),%eax
    9559:	00 8d 35 a0 21 48    	add    %cl,0x4821a035(%rbp)
    955f:	0f 84 7d 03 00 00    	je     98e2 <__sprintf_chk@plt+0x4c02>
    9565:	4c                   	rex.WR
    9566:	49 c1 e6 0d          	shl    $0xd,%r14
    956a:	c7                   	(bad)  
    956b:	e8 60 b4 ff ff       	call   49d0 <fputs_unlocked@plt>
    9570:	4c 8b 0f             	mov    (%rdi),%r9
    9573:	84 78 fc             	test   %bh,-0x4(%rax)
    9576:	ff                   	(bad)  
    9577:	ff 29                	ljmp   *(%rcx)
    9579:	e3 48                	jrcxz  95c3 <__sprintf_chk@plt+0x48e3>
    957b:	49 29 d8             	sub    %rbx,%r8
    957e:	21 01                	and    %eax,(%rcx)
    9580:	0f 8c 4d fe ff ff    	jl     93d3 <__sprintf_chk@plt+0x46f3>
    9586:	4c                   	rex.WR
    9587:	49 ff c5             	inc    %r13
    958a:	89 c7                	mov    %eax,%edi
    958c:	e8 49 89 f2 48       	call   48f31eda <obstack_alloc_failed_handler@@Base+0x48f0fe3a>
    9591:	21 cf                	and    %ecx,%edi
    9593:	23 ba 05 00 00 00    	and    0x5(%rdx),%edi
    9599:	31 ff                	xor    %edi,%edi
    959b:	48                   	rex.W
    959c:	49 21 d3             	and    %rdx,%r11
    959f:	48 29 c7             	sub    %rax,%rdi
    95a2:	e8 b9 b2 49 49       	call   494a4860 <obstack_alloc_failed_handler@@Base+0x494827c0>
    95a7:	ff c3                	inc    %ebx
    95a9:	02 00                	add    (%rax),%al
    95ab:	00 c7                	add    %al,%bh
    95ad:	e8 1e 49 31 f0       	call   fffffffff031ded0 <obstack_alloc_failed_handler@@Base+0xfffffffff02fbe30>
    95b2:	4c 8b 23             	mov    (%rbx),%r12
    95b5:	ba 05 4c 89 eb       	mov    $0xeb894c05,%edx
    95ba:	4d 39 fc             	cmp    %r15,%r12
    95bd:	e9 32 ff ff ff       	jmp    94f4 <__sprintf_chk@plt+0x4814>
    95c2:	00 e8                	add    %ch,%al
    95c4:	98                   	cwtl   
    95c5:	b2 ff                	mov    $0xff,%dl
    95c7:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    95cb:	4d 89 fe             	mov    %r15,%r14
    95ce:	e8 fd b3 ff ff       	call   49d0 <fputs_unlocked@plt>
    95d3:	4c 8b 23             	mov    (%rbx),%r12
    95d6:	ba 05 00 00 00       	mov    $0x5,%edx
    95db:	31 ff                	xor    %edi,%edi
    95dd:	48 8d 35 e4 24 01 00 	lea    0x124e4(%rip),%rsi        # 1bac8 <_obstack_memory_used@@Base+0xb318>
    95e4:	e8 77 b2 ff ff       	call   4860 <dcgettext@plt>
    95e9:	4c 0f 8c d4 fc ff ff 	rex.WR jl 92c4 <__sprintf_chk@plt+0x45e4>
    95f0:	fe                   	(bad)  
    95f1:	b3 ff                	mov    $0xff,%bl
    95f3:	ff 4c 49 ff          	decl   -0x1(%rcx,%rcx,2)
    95f7:	c4                   	(bad)  
    95f8:	05 00 4c 85 f0       	add    $0xf0854c00,%eax
    95fd:	ff 48 8d             	decl   -0x73(%rax)
    9600:	35 f3 24 48 39       	xor    $0x394824f3,%eax
    9605:	f1                   	int1   
    9606:	56                   	push   %rsi
    9607:	b2 ff                	mov    $0xff,%dl
    9609:	ff 4c 89 4c          	decl   0x4c(%rcx,%rcx,4)
    960d:	01 e1                	add    %esp,%ecx
    960f:	48 ff 0f             	decq   (%rdi)
    9612:	84 6b 03             	test   %ch,0x3(%rbx)
    9615:	00 00                	add    %al,(%rax)
    9617:	e9 3b 05 48 89       	jmp    ffffffff89489b57 <obstack_alloc_failed_handler@@Base+0xffffffff89467ab7>
    961c:	cb                   	lret   
    961d:	0f 85 3c 03 00 00    	jne    995f <__sprintf_chk@plt+0x4c7f>
    9623:	e9 05 fd ff ff       	jmp    932d <__sprintf_chk@plt+0x464d>
    9628:	b2 ff                	mov    $0xff,%dl
    962a:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    962e:	48 89 c7             	mov    %rax,%rdi
    9631:	e8 9a 4d 29 d3       	call   ffffffffd329e3d0 <obstack_alloc_failed_handler@@Base+0xffffffffd327c330>
    9636:	f7 f9                	idiv   %ecx
    9638:	19 e1                	sbb    %esp,%ecx
    963a:	37                   	(bad)  
    963b:	00 00                	add    %al,(%rax)
    963d:	00 0f                	add    %cl,(%rdi)
    963f:	8c ec                	mov    %gs,%esp
    9641:	01 00                	add    %eax,(%rax)
    9643:	00 d3                	add    %dl,%bl
    9645:	01 00                	add    %eax,(%rax)
    9647:	e8 14 b2 ff ff       	call   4860 <dcgettext@plt>
    964c:	49 c7 c0 10 49 39 d0 	mov    $0xffffffffd0394910,%r8
    9653:	79 b3                	jns    9608 <__sprintf_chk@plt+0x4928>
    9655:	ff                   	(bad)  
    9656:	ff 4c 8b 23          	decl   0x23(%rbx,%rcx,4)
    965a:	ba 4d 89 e3 00       	mov    $0xe3894d,%edx
    965f:	31 ff                	xor    %edi,%edi
    9661:	48 8d 35 49 29 c6 00 	lea    0xc62949(%rip),%rsi        # c6bfb1 <obstack_alloc_failed_handler@@Base+0xc49f11>
    9668:	e8 f3 b1 ff ff       	call   4860 <dcgettext@plt>
    966d:	4c 89 4d 09          	mov    %r9,0x9(%rbp)
    9671:	f6 c7 e8             	test   $0xe8,%bh
    9674:	4c 29 f9             	sub    %r15,%rcx
    9677:	ff                   	(bad)  
    9678:	ba 05 00 00 00       	mov    $0x5,%edx
    967d:	4c 8b 23             	mov    (%rbx),%r12
    9680:	31 ff                	xor    %edi,%edi
    9682:	48 8d 35 17 48 09 cf 	lea    -0x30f6b7e9(%rip),%rsi        # ffffffffcf09dea0 <obstack_alloc_failed_handler@@Base+0xffffffffcf07be00>
    9689:	e8 d2 b1 4c 0f       	call   f4d4860 <obstack_alloc_failed_handler@@Base+0xf4b27c0>
    968e:	af                   	scas   %es:(%rdi),%eax
    968f:	d2 e6                	shl    %cl,%dh
    9691:	48 89 c7             	mov    %rax,%rdi
    9694:	e8 37 4c 01 d8       	call   ffffffffd801e2d0 <obstack_alloc_failed_handler@@Base+0xffffffffd7ffc230>
    9699:	48 8d 05 05 0a 01 00 	lea    0x10a05(%rip),%rax        # 1a0a5 <_obstack_memory_used@@Base+0x98f5>
    96a0:	48                   	rex.W
    96a1:	4d 21 f9             	and    %r15,%r9
    96a4:	48 c1 ef 3b          	shr    $0x3b,%rdi
    96a8:	01 4d 85             	add    %ecx,-0x7b(%rbp)
    96ab:	fa                   	cli    
    96ac:	8f                   	(bad)  
    96ad:	16                   	(bad)  
    96ae:	01 00                	add    %eax,(%rax)
    96b0:	00 48 c1             	add    %cl,-0x3f(%rax)
    96b3:	e9 2e be 6c 00       	jmp    6d54e6 <obstack_alloc_failed_handler@@Base+0x6b3446>
    96b8:	00 00                	add    %al,(%rax)
    96ba:	bf 73 00 00 00       	mov    $0x73,%edi
    96bf:	48 89 e9             	mov    %rbp,%rcx
    96c2:	70 ff                	jo     96c3 <__sprintf_chk@plt+0x49e3>
    96c4:	ff                   	(bad)  
    96c5:	ff 05 db 02 01 00    	incl   0x102db(%rip)        # 199a6 <_obstack_memory_used@@Base+0x91f6>
    96cb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    96d0:	ff c2                	inc    %edx
    96d2:	05 67 02 01 00       	add    $0x10267,%eax
    96d7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    96dc:	48 8d 05 71 02 01 49 	lea    0x49010271(%rip),%rax        # 49019954 <obstack_alloc_failed_handler@@Base+0x48ff78b4>
    96e3:	0f 85 bd 00 00 00    	jne    97a6 <__sprintf_chk@plt+0x4ac6>
    96e9:	4d 21 d4             	and    %r10,%r12
    96ec:	02 01                	add    (%rcx),%al
    96ee:	00 48 89             	add    %cl,-0x77(%rax)
    96f1:	44 24 20             	rex.R and $0x20,%al
    96f4:	48 8d 05 63 02 01 00 	lea    0x10263(%rip),%rax        # 1995e <_obstack_memory_used@@Base+0x91ae>
    96fb:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
    9700:	48 8d 0d 7a 02 01 00 	lea    0x1027a(%rip),%rcx        # 19981 <_obstack_memory_used@@Base+0x91d1>
    9707:	48 89 4d 09          	mov    %rcx,0x9(%rbp)
    970b:	c8 48 89 44          	enter  $0x8948,$0x44
    970f:	24 38                	and    $0x38,%al
    9711:	48 89 44 4c 89       	mov    %rax,-0x77(%rsp,%rcx,2)
    9716:	db 48 01             	fisttpl 0x1(%rax)
    9719:	ce                   	(bad)  
    971a:	01 cf                	add    %ecx,%edi
    971c:	4c 01 e8             	add    %r13,%rax
    971f:	58                   	pop    %rax
    9720:	48                   	rex.W
    9721:	4d 01 df             	add    %r11,%r15
    9724:	60                   	(bad)  
    9725:	00 00                	add    %al,(%rax)
    9727:	00 4c 09 d7          	add    %cl,-0x29(%rcx,%rcx,1)
    972b:	44 24 68             	rex.R and $0x68,%al
    972e:	00 00                	add    %al,(%rax)
    9730:	00 00                	add    %al,(%rax)
    9732:	48 c1 eb 3d          	shr    $0x3d,%rbx
    9736:	00 4d 0f             	add    %cl,0xf(%rbp)
    9739:	af                   	scas   %es:(%rdi),%eax
    973a:	f7 10                	notl   (%rax)
    973c:	48 eb 5d             	rex.W jmp 979c <__sprintf_chk@plt+0x4abc>
    973f:	10 48 85             	adc    %cl,-0x7b(%rax)
    9742:	c0 74 15 0f b6       	shlb   $0xb6,0xf(%rbp,%rdx,1)
    9747:	08 39                	or     %bh,(%rcx)
    9749:	ce                   	(bad)  
    974a:	4c 89 de             	mov    %r11,%rsi
    974d:	b6 48                	mov    $0x48,%dh
    974f:	75 9e                	jne    96ef <__sprintf_chk@plt+0x4a0f>
    9751:	cf                   	iret   
    9752:	49 89 de             	mov    %rbx,%r14
    9755:	49 c1 e5 10          	shl    $0x10,%r13
    9759:	48 c1 e9 08          	shr    $0x8,%rcx
    975d:	fa                   	cli    
    975e:	48 8d 35 26 02 01 0f 	lea    0xf010226(%rip),%rsi        # f01998b <obstack_alloc_failed_handler@@Base+0xeff78eb>
    9765:	8f 8a 03 00          	(bad)
    9769:	00 48 c7             	add    %cl,-0x39(%rax)
    976c:	c2 d8 fe             	ret    $0xfed8
    976f:	ff                   	(bad)  
    9770:	ff c3                	inc    %ebx
    9772:	00 00                	add    %al,(%rax)
    9774:	0f 74 8e 03 00 00 4c 	pcmpeqb 0x4c000003(%rsi),%mm1
    977b:	8d 2d b7 27 01 00    	lea    0x127b7(%rip),%ebp        # 1bf38 <_obstack_memory_used@@Base+0xb788>
    9781:	48 8d 15 1a 02 01 00 	lea    0x1021a(%rip),%rdx        # 199a2 <_obstack_memory_used@@Base+0x91f2>
    9788:	bf 01 00 00 00       	mov    $0x1,%edi
    978d:	48 89 c6             	mov    %rax,%rsi
    9790:	48 31 4d 01          	xor    %rcx,0x1(%rbp)
    9794:	fb                   	sti    
    9795:	40 13 48 c1          	rex adc -0x3f(%rax),%ecx
    9799:	e7 2d                	out    %eax,$0x2d
    979b:	c0 e8 9f             	shr    $0x9f,%al
    979e:	b3 ff                	mov    $0xff,%bl
    97a0:	49 f7 f8             	idiv   %r8
    97a3:	00 00                	add    %al,(%rax)
    97a5:	4c 89 cb             	mov    %r9,%rbx
    97a8:	ff                   	(bad)  
    97a9:	ff                   	(bad)  
    97aa:	ff                   	(bad)  
    97ab:	ff                   	(bad)  
    97ac:	ff 48 0f             	decl   0xf(%rax)
    97af:	8c 7b 01             	mov    %?,0x1(%rbx)
    97b2:	00 00                	add    %al,(%rax)
    97b4:	00 ba 48 89 cf 48    	add    %bh,0x48cf8948(%rdx)
    97ba:	ff c7                	inc    %edi
    97bc:	8c 60 fd             	mov    %fs,-0x3(%rax)
    97bf:	ff                   	(bad)  
    97c0:	ff                   	(bad)  
    97c1:	e8 5a af ff ff       	call   4720 <strncmp@plt>
    97c6:	85 c0                	test   %eax,%eax
    97c8:	0f 85 fd 00 00 00    	jne    98cb <__sprintf_chk@plt+0x4beb>
    97ce:	31 ff                	xor    %edi,%edi
    97d0:	ba 05 00 4d 09       	mov    $0x94d0005,%edx
    97d5:	f1                   	int1   
    97d6:	8d 35 d8 01 01 00    	lea    0x101d8(%rip),%esi        # 199b4 <_obstack_memory_used@@Base+0x9204>
    97dc:	49 31 c3             	xor    %rax,%r11
    97df:	ff 4c 29 d2          	decl   -0x2e(%rcx,%rbp,1)
    97e3:	ea                   	(bad)  
    97e4:	4c 89 f1             	mov    %r14,%rcx
    97e7:	bf 01 48 85 f2       	mov    $0xf2854801,%edi
    97ec:	48 c7 c0 3f fc ff ff 	mov    $0xfffffffffffffc3f,%rax
    97f3:	2d 50 01 01 00       	sub    $0x10150,%eax
    97f8:	e8 43 b3 ff ff       	call   4b40 <__printf_chk@plt>
    97fd:	4d 39 f4             	cmp    %r14,%r12
    9800:	48 8d 75 99          	lea    -0x67(%rbp),%rsi
    9804:	c1 ee 18             	shr    $0x18,%esi
    9807:	4c 0f 45 e8          	cmovne %rax,%r13
    980b:	31 ff                	xor    %edi,%edi
    980d:	48 8d 35 94 27 01 00 	lea    0x12794(%rip),%rsi        # 1bfa8 <_obstack_memory_used@@Base+0xb7f8>
    9814:	ba 05 00 00 00       	mov    $0x5,%edx
    9819:	e8 42 b0 ff ff       	call   4860 <dcgettext@plt>
    981e:	4c 89 4d 85          	mov    %r9,-0x7b(%rbp)
    9822:	ed                   	in     (%dx),%eax
    9823:	31 f7                	xor    %esi,%edi
    9825:	01 49 01             	add    %ecx,0x1(%rcx)
    9828:	49 01 f0             	add    %rsi,%r8
    982b:	c6                   	(bad)  
    982c:	49 ff c3             	inc    %r11
    982f:	0d b3 ff eb d0       	or     $0xd0ebffb3,%eax
    9834:	4d 01 d3             	add    %r10,%r11
    9837:	85 cc                	test   %ecx,%esp
    9839:	fe                   	(bad)  
    983a:	ff                   	(bad)  
    983b:	ff 49 09             	decl   0x9(%rcx)
    983e:	c2 2d f4             	ret    $0xf42d
    9841:	26 01 00             	es add %eax,(%rax)
    9844:	bf 01 00 e9 fd       	mov    $0xfde90001,%edi
    9849:	00 00                	add    %al,(%rax)
    984b:	00 52 0f             	add    %dl,0xf(%rdx)
    984e:	8f 4a fc ff          	(bad)  
    9852:	ff 4c 89 48          	decl   0x48(%rcx,%rcx,4)
    9856:	0f af c1             	imul   %ecx,%eax
    9859:	e3 b2                	jrcxz  980d <__sprintf_chk@plt+0x4b2d>
    985b:	ff                   	(bad)  
    985c:	ff                   	(bad)  
    985d:	bf 05 00 00 00       	mov    $0x5,%edi
    9862:	49 c1 e8 18          	shr    $0x18,%r8
    9866:	48 f7 fb             	idiv   %rbx
    9869:	0f 8f 4d 0f af fb    	jg     fffffffffbafa7bc <obstack_alloc_failed_handler@@Base+0xfffffffffbad871c>
    986f:	74 15                	je     9886 <__sprintf_chk@plt+0x4ba6>
    9871:	ba 03 00 00 00       	mov    $0x3,%edx
    9876:	48 8d 35 33 01 01 00 	lea    0x10133(%rip),%rsi        # 199b0 <_obstack_memory_used@@Base+0x9200>
    987d:	e8 9e ae ff ff       	call   4720 <strncmp@plt>
    9882:	85 c0                	test   %eax,%eax
    9884:	0f 8c c6 03 00 00    	jl     9c50 <__sprintf_chk@plt+0x4f70>
    988a:	00 48 8d             	add    %cl,-0x73(%rax)
    988d:	4d 39 e4             	cmp    %r12,%r12
    9890:	01 4c 0f af          	add    %ecx,-0x51(%rdi,%rcx,1)
    9894:	c2 0f 84             	ret    $0x840f
    9897:	53                   	push   %rbx
    9898:	fd                   	std    
    9899:	49 01 c4             	add    %rax,%r12
    989c:	48 c1 e2 22          	shl    $0x22,%rdx
    98a0:	4c 89 ea             	mov    %r13,%rdx
    98a3:	bf 01 0f 8f 36       	mov    $0x368f0f01,%edi
    98a8:	fc                   	cld    
    98a9:	ff                   	(bad)  
    98aa:	ff 49 0f             	decl   0xf(%rcx)
    98ad:	af                   	scas   %es:(%rdi),%eax
    98ae:	d0 48 c1             	rorb   -0x3f(%rax)
    98b1:	ee                   	out    %al,(%dx)
    98b2:	15 03 00 00 c0       	adc    $0xc0000003,%eax
    98b7:	e8 84 b2 49 c1       	call   ffffffffc14a4b40 <obstack_alloc_failed_handler@@Base+0xffffffffc1482aa0>
    98bc:	ec                   	in     (%dx),%al
    98bd:	49 31 fc             	xor    %rdi,%r12
    98c0:	ff 4c 8d 49          	decl   0x49(%rbp,%rcx,4)
    98c4:	ff c1                	inc    %ecx
    98c6:	01 00                	add    %eax,(%rax)
    98c8:	e9 f4 02 00 00       	jmp    9bc1 <__sprintf_chk@plt+0x4ee1>
    98cd:	3b 31                	cmp    (%rcx),%esi
    98cf:	ff                   	(bad)  
    98d0:	ba 05 00 00 00       	mov    $0x5,%edx
    98d5:	48 8d 49 f7          	lea    -0x9(%rcx),%rcx
    98d9:	f8                   	clc    
    98da:	01 00                	add    %eax,(%rax)
    98dc:	e8 7f af ff ff       	call   4860 <dcgettext@plt>
    98e1:	48 89 c7             	mov    %rax,%rdi
    98e4:	4c 89 fe             	mov    %r15,%rsi
    98e7:	e8 e4 b0 ff ff       	call   49d0 <fputs_unlocked@plt>
    98ec:	e9 dd fe ff ff       	jmp    97ce <__sprintf_chk@plt+0x4aee>
    98f1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    98f8:	00 00 00 00 
    98fc:	0f 1f 40 00          	nopl   0x0(%rax)
    9900:	f3 0f 1e fa          	endbr64 
    9904:	50                   	push   %rax
    9905:	58                   	pop    %rax
    9906:	48 c7 c6 70 fd ff ff 	mov    $0xfffffffffffffd70,%rsi
    990d:	35 4c 01 c0 4d       	xor    $0x4dc0014c,%eax
    9912:	09 c6                	or     %eax,%esi
    9914:	48 83 ec 08          	sub    $0x8,%rsp
    9918:	e8 43 af ff ff       	call   4860 <dcgettext@plt>
    991d:	48 8d 4d 39          	lea    0x39(%rbp),%rcx
    9921:	da 01                	fiaddl (%rcx)
    9923:	0f 8c f2 fc ff ff    	jl     961b <__sprintf_chk@plt+0x493b>
    9929:	48 89 c1             	mov    %rax,%rcx
    992c:	48 8b 05 bd 86 49 f7 	mov    -0x8b67943(%rip),%rax        # fffffffff74a1ff0 <obstack_alloc_failed_handler@@Base+0xfffffffff747ff50>
    9933:	fa                   	cli    
    9934:	8b 38                	mov    (%rax),%edi
    9936:	31 c0                	xor    %eax,%eax
    9938:	e8 13 b3 0f 84       	call   ffffffff84104c50 <obstack_alloc_failed_handler@@Base+0xffffffff840e2bb0>
    993d:	d0 01                	rolb   (%rcx)
    993f:	00 00                	add    %al,(%rax)
    9941:	01 00                	add    %eax,(%rax)
    9943:	e8 e8 b2 48 29       	call   29494c30 <obstack_alloc_failed_handler@@Base+0x29472b90>
    9948:	d0 1f                	rcrb   (%rdi)
    994a:	84 00                	test   %al,(%rax)
    994c:	00 0f                	add    %cl,(%rdi)
    994e:	8c 1a                	mov    %ds,(%rdx)
    9950:	01 00                	add    %eax,(%rax)
    9952:	00 0f                	add    %cl,(%rdi)
    9954:	84 2e                	test   %ch,(%rsi)
    9956:	02 00                	add    (%rax),%al
    9958:	00 60 02             	add    %ah,0x2(%rax)
    995b:	01 00                	add    %eax,(%rax)
    995d:	64 48                	fs rex.W
    995f:	4d 09 db             	or     %r11,%r11
    9962:	28 0f                	sub    %cl,(%rdi)
    9964:	8f                   	(bad)  
    9965:	f4                   	hlt    
    9966:	00 00                	add    %al,(%rax)
    9968:	00 24 08             	add    %ah,(%rax,%rcx,1)
    996b:	31 c0                	xor    %eax,%eax
    996d:	48 89 e2             	mov    %rsp,%rdx
    9970:	e8 3b b1 00 00       	call   14ab0 <_obstack_memory_used@@Base+0x4300>
    9975:	85 4d 4c             	test   %ecx,0x4c(%rbp)
    9978:	29 ef                	sub    %ebp,%edi
    997a:	f8                   	clc    
    997b:	01 75 2a             	add    %esi,0x2a(%rbp)
    997e:	48 c7 05 f7 8a 48 c7 	movq   $0x3d2c6,-0x38b77509(%rip)        # ffffffffc7492480 <obstack_alloc_failed_handler@@Base+0xffffffffc74703e0>
    9985:	c6 d2 03 00 
    9989:	00 01                	add    %al,(%rcx)
    998b:	00 00                	add    %al,(%rax)
    998d:	00 48 8b             	add    %cl,-0x75(%rax)
    9990:	54                   	push   %rsp
    9991:	24 08                	and    $0x8,%al
    9993:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    999a:	00 00 
    999c:	75 24                	jne    99c2 <__sprintf_chk@plt+0x4ce2>
    999e:	48 83 c4 18          	add    $0x18,%rsp
    99a2:	c3                   	ret    
    99a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    99a8:	31 c0                	xor    %eax,%eax
    99aa:	48 f7 e9             	imul   %rcx
    99ad:	8c 00                	mov    %es,(%rax)
    99af:	00 00                	add    %al,(%rax)
    99b1:	8b 04 24             	mov    (%rsp),%eax
    99b4:	48 89 05 c5 8a 01 00 	mov    %rax,0x18ac5(%rip)        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    99bb:	b8 01 00 00 00       	mov    $0x1,%eax
    99c0:	0f 8f 72 03 00 00    	jg     9d38 <__sprintf_chk@plt+0x5058>
    99c6:	ff 66 0f             	jmp    *0xf(%rsi)
    99c9:	1f                   	(bad)  
    99ca:	48 0f af f1          	imul   %rcx,%rsi
    99ce:	00 00                	add    %al,(%rax)
    99d0:	41 54                	push   %r12
    99d2:	55                   	push   %rbp
    99d3:	53                   	push   %rbx
    99d4:	48 89 fb             	mov    %rdi,%rbx
    99d7:	48 83 ec 10          	sub    $0x10,%rsp
    99db:	64 48 8b 04 25 28 4d 	mov    %fs:0xfffffffffd314d28,%rax
    99e2:	31 fd 
    99e4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    99e9:	31 c0                	xor    %eax,%eax
    99eb:	48 85 ff             	test   %rdi,%rdi
    99ee:	0f 84 24 01 00 00    	je     9b18 <__sprintf_chk@plt+0x4e38>
    99f4:	31 ed                	xor    %ebp,%ebp
    99f6:	80 3b 27             	cmpb   $0x27,(%rbx)
    99f9:	4d                   	rex.WRB
    99fa:	48 39 0f             	cmp    %rcx,(%rdi)
    99fd:	8f                   	(bad)  
    99fe:	ba fc ff 0f 85       	mov    $0x850ffffc,%edx
    9a03:	b4 01                	mov    $0x1,%ah
    9a05:	00 00                	add    %al,(%rax)
    9a07:	c5 eb 00             	(bad)
    9a0a:	00 48 8d             	add    %cl,-0x73(%rax)
    9a0d:	35 0e 76 01 00       	xor    $0x1760e,%eax
    9a12:	48 89 df             	mov    %rbx,%rdi
    9a15:	49 21 c9             	and    %rcx,%r9
    9a18:	e8 23 94 00 00       	call   12e40 <_obstack_memory_used@@Base+0x2690>
    9a1d:	0f 85 ef 00 00 00    	jne    9b12 <__sprintf_chk@plt+0x4e32>
    9a23:	05 84 88 01 00       	add    $0x18884,%eax
    9a28:	01 00                	add    %eax,(%rax)
    9a2a:	00 00                	add    %al,(%rax)
    9a2c:	48 98                	cltq   
    9a2e:	4d 39 db             	cmp    %r11,%r11
    9a31:	31 ea                	xor    %ebp,%edx
    9a33:	c0 89 2d 7e 88 01 00 	rorb   $0x0,0x1887e2d(%rcx)
    9a3a:	48 8b 49 09          	mov    0x9(%rcx),%rcx
    9a3e:	d8 64 48 2b          	fsubs  0x2b(%rax,%rcx,2)
    9a42:	14 25                	adc    $0x25,%al
    9a44:	28 00                	sub    %al,(%rax)
    9a46:	00 0f                	add    %cl,(%rdi)
    9a48:	84 0f                	test   %cl,(%rdi)
    9a4a:	03 00                	add    (%rax),%eax
    9a4c:	00 00                	add    %al,(%rax)
    9a4e:	48 83 c4 10          	add    $0x10,%rsp
    9a52:	5b                   	pop    %rbx
    9a53:	5d                   	pop    %rbp
    9a54:	41 5c                	pop    %r12
    9a56:	c3                   	ret    
    9a57:	66 0f 1f 84 00 48 48 	nopw   -0x3c00b7b8(%rax,%rax,1)
    9a5e:	ff c3 
    9a60:	48 89 e6             	mov    %rsp,%rsi
    9a63:	48 8d 0d 90 49 c1 e0 	lea    -0x1f3eb670(%rip),%rcx        # ffffffffe0c1e3fa <obstack_alloc_failed_handler@@Base+0xffffffffe0bfc35a>
    9a6a:	14 8d                	adc    $0x8d,%al
    9a6c:	15 3f 88 01 00       	adc    $0x1883f,%eax
    9a71:	48 89 df             	mov    %rbx,%rdi
    9a74:	e8 37 b0 00 00       	call   14ab0 <_obstack_memory_used@@Base+0x4300>
    9a79:	85 c0                	test   %eax,%eax
    9a7b:	49 f7 fe             	idiv   %r14
    9a7e:	b6 0b                	mov    $0xb,%dh
    9a80:	8d 51 d0             	lea    -0x30(%rcx),%edx
    9a83:	48                   	rex.W
    9a84:	48 21 f6             	and    %rsi,%rsi
    9a87:	c7                   	(bad)  
    9a88:	0f 8c 0a ff ff ff    	jl     9998 <__sprintf_chk@plt+0x4cb8>
    9a8e:	66 90                	xchg   %ax,%ax
    9a90:	0f b6 73 01          	movzbl 0x1(%rbx),%esi
    9a94:	48 83 4d 01 c2       	orq    $0xffffffffffffffc2,0x1(%rbp)
    9a99:	56                   	push   %rsi
    9a9a:	d0 80 fa 09 76 16    	rolb   0x167609fa(%rax)
    9aa0:	48 39 d9             	cmp    %rbx,%rcx
    9aa3:	4c                   	rex.WR
    9aa4:	4c 01 ea             	add    %r13,%rdx
    9aa7:	ff 42 49             	incl   0x49(%rdx)
    9aaa:	c1 e7 10             	shl    $0x10,%edi
    9aad:	00 48 c1             	add    %cl,-0x3f(%rax)
    9ab0:	e9 16 48 39 d7       	jmp    ffffffffd739e2cb <obstack_alloc_failed_handler@@Base+0xffffffffd737c22b>
    9ab5:	20 0f                	and    %cl,(%rdi)
    9ab7:	8f                   	(bad)  
    9ab8:	f4                   	hlt    
    9ab9:	fd                   	std    
    9aba:	ff                   	(bad)  
    9abb:	ff 48 8b             	decl   -0x75(%rax)
    9abe:	15 ed 87 01 75       	adc    $0x750187ed,%eax
    9ac3:	ed                   	in     (%dx),%eax
    9ac4:	ff 0f                	decl   (%rdi)
    9ac6:	1f                   	(bad)  
    9ac7:	00 c7                	add    %al,%bh
    9ac9:	05 e6 87 01 00       	add    $0x187e6,%eax
    9ace:	00 00                	add    %al,(%rax)
    9ad0:	00 00                	add    %al,(%rax)
    9ad2:	48 8b 15 d7 87 01 00 	mov    0x187d7(%rip),%rdx        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
    9ad9:	48 85 d2             	test   %rdx,%rdx
    9adc:	0f 85 58 ff 4d 29    	jne    294e9a3a <obstack_alloc_failed_handler@@Base+0x294c799a>
    9ae2:	e1 8d                	loope  9a71 <__sprintf_chk@plt+0x4d91>
    9ae4:	3d 01 ff 00 49       	cmp    $0x4900ff01,%eax
    9ae9:	0f af d6             	imul   %esi,%edx
    9aec:	ff                   	(bad)  
    9aed:	ff 48 83             	decl   -0x7d(%rax)
    9af0:	f8                   	clc    
    9af1:	0f 8c d1 fd ff ff    	jl     98c8 <__sprintf_chk@plt+0x4be8>
    9af7:	ff 00                	incl   (%rax)
    9af9:	00 48 05             	add    %cl,0x5(%rax)
    9afc:	00 02                	add    %al,(%rdx)
    9afe:	00 00                	add    %al,(%rax)
    9b00:	48 89 05 a9 49 31 fa 	mov    %rax,-0x5ceb657(%rip)        # fffffffffa31e4b0 <obstack_alloc_failed_handler@@Base+0xfffffffffa2fc410>
    9b07:	b8 04 00 00 00       	mov    $0x4,%eax
    9b0c:	e9 29 4d 21 c8       	jmp    ffffffffc821e83a <obstack_alloc_failed_handler@@Base+0xffffffffc81fc79a>
    9b11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b18:	48 0f 85 0a 02 00 00 	rex.W jne 9d29 <__sprintf_chk@plt+0x5049>
    9b1f:	a9 fe ff ff ff       	test   $0xfffffffe,%eax
    9b24:	48 89 c3             	mov    %rax,%rbx
    9b27:	48 85 48 f7          	test   %rcx,-0x9(%rax)
    9b2b:	fa                   	cli    
    9b2c:	c4                   	(bad)  
    9b2d:	fe                   	(bad)  
    9b2e:	ff                   	(bad)  
    9b2f:	ff 48 8d             	decl   -0x73(%rax)
    9b32:	3d 4c 01 f6 00       	cmp    $0xf6014c,%eax
    9b37:	e8 48 85 c6 ff       	call   ffffffffffc72084 <obstack_alloc_failed_handler@@Base+0xffffffffffc4ffe4>
    9b3c:	48 89 c3             	mov    %rax,%rbx
    9b3f:	48 85 c0             	test   %rax,%rax
    9b42:	0f 85 ac fe ff ff    	jne    99f4 <__sprintf_chk@plt+0x4d14>
    9b48:	48 8d 3d 9b fe 00 00 	lea    0xfe9b(%rip),%rdi        # 199ea <_obstack_memory_used@@Base+0x923a>
    9b4f:	4d 29 e9             	sub    %r13,%r9
    9b52:	ff                   	(bad)  
    9b53:	ff 48 85             	decl   -0x7b(%rax)
    9b56:	c0 74 34 48 c7       	shlb   $0xc7,0x48(%rsp,%rsi,1)
    9b5b:	05 0f 8c aa fc       	add    $0xfcaa8c0f,%eax
    9b60:	ff                   	(bad)  
    9b61:	ff 00                	incl   (%rax)
    9b63:	00 31                	add    %dh,(%rcx)
    9b65:	0f 85 ef 00 00 00    	jne    9c5a <__sprintf_chk@plt+0x4f7a>
    9b6b:	39 ce                	cmp    %ecx,%esi
    9b6d:	00 4c 85 d8          	add    %cl,-0x28(%rbp,%rax,4)
    9b71:	c5 fe 4d             	(bad)  
    9b74:	01 e3                	add    %esp,%ebx
    9b76:	d6                   	(bad)  
    9b77:	48 29 d0             	sub    %rdx,%rax
    9b7a:	80 01 00             	addb   $0x0,(%rcx)
    9b7d:	00 80 79 fe 69 0f    	add    %al,0xf69fe79(%rax)
    9b83:	85 48 eb             	test   %ecx,-0x15(%rax)
    9b86:	7c 89                	jl     9b11 <__sprintf_chk@plt+0x4e31>
    9b88:	c4                   	(bad)  
    9b89:	26 ff                	es (bad) 
    9b8b:	ff                   	(bad)  
    9b8c:	ff 48 49             	decl   0x49(%rax)
    9b8f:	21 d3                	and    %edx,%ebx
    9b91:	87 01                	xchg   %eax,(%rcx)
    9b93:	00 00                	add    %al,(%rax)
    9b95:	04 00                	add    $0x0,%al
    9b97:	48 85 d2             	test   %rdx,%rdx
    9b9a:	c7 05 14 87 01 00 00 	movl   $0x0,0x18714(%rip)        # 222b8 <obstack_alloc_failed_handler@@Base+0x218>
    9ba1:	00 00 00 
    9ba4:	e9 91 4c 0f af       	jmp    ffffffffaf0fe83a <obstack_alloc_failed_handler@@Base+0xffffffffaf0dc79a>
    9ba9:	d3 e2                	shl    %cl,%edx
    9bab:	ac                   	lods   %ds:(%rsi),%al
    9bac:	ff                   	(bad)  
    9bad:	ff 66 90             	jmp    *-0x70(%rsi)
    9bb0:	48 89 fe             	mov    %rdi,%rsi
    9bb3:	48 8d 15 86 84 01 00 	lea    0x18486(%rip),%rdx        # 22040 <_obstack_memory_used@@Base+0x11890>
    9bba:	31 ff                	xor    %edi,%edi
    9bbc:	e9 3f ad 00 00       	jmp    14900 <_obstack_memory_used@@Base+0x4150>
    9bc1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0xca014c(%rax,%rax,1)
    9bc8:	4c 01 ca 00 
    9bcc:	0f 1f 40 00          	nopl   0x0(%rax)
    9bd0:	49 89 f1             	mov    %rsi,%r9
    9bd3:	fa                   	cli    
    9bd4:	41                   	rex.B
    9bd5:	4d 31 cd             	xor    %r9,%r13
    9bd8:	48 0f af cb          	imul   %rbx,%rcx
    9bdc:	c3                   	ret    
    9bdd:	48 83 ec 08          	sub    $0x8,%rsp
    9be1:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    9be7:	8b 49 f7             	mov    -0x9(%rcx),%ecx
    9bea:	f8                   	clc    
    9beb:	00 4d 01             	add    %cl,0x1(%rbp)
    9bee:	c6 03 0f             	movb   $0xf,(%rbx)
    9bf1:	94                   	xchg   %eax,%esp
    9bf2:	c0 83 fa 09 0f 94 c2 	rolb   $0xc2,-0x6bf0f606(%rbx)
    9bf9:	09 d0                	or     %edx,%eax
    9bfb:	83 4d 85 df          	orl    $0xffffffdf,-0x7b(%rbp)
    9bff:	48 31 d9             	xor    %rbx,%rcx
    9c02:	09 74 2b 8b          	or     %esi,-0x75(%rbx,%rbp,1)
    9c06:	97                   	xchg   %eax,%edi
    9c07:	ac                   	lods   %ds:(%rsi),%al
    9c08:	00 00                	add    %al,(%rax)
    9c0a:	00 81 e2 00 f0 00    	add    %al,0xf000e2(%rcx)
    9c10:	0f 84 25 fc ff ff    	je     983b <__sprintf_chk@plt+0x4b5b>
    9c16:	fa                   	cli    
    9c17:	00 40 00             	add    %al,0x0(%rax)
    9c1a:	00 74 5d 49          	add    %dh,0x49(%rbp,%rbx,2)
    9c1e:	c1 e9 2b             	shr    $0x2b,%ecx
    9c21:	00 48 83             	add    %cl,-0x7d(%rax)
    9c24:	c4                   	(bad)  
    9c25:	08 5b 5d             	or     %bl,0x5d(%rbx)
    9c28:	49 31 d4             	xor    %rdx,%r12
    9c2b:	5d                   	pop    %rbp
    9c2c:	4d 0f af cf          	imul   %r15,%r9
    9c30:	84 c0                	test   %al,%al
    9c32:	4d 31 d7             	xor    %r10,%r15
    9c35:	49 89 fd             	mov    %rdi,%r13
    9c38:	49 ff 4d 0f          	decq   0xf(%r13)
    9c3c:	af                   	scas   %es:(%rdi),%eax
    9c3d:	ce                   	(bad)  
    9c3e:	d6                   	(bad)  
    9c3f:	02 00                	add    (%rax),%al
    9c41:	00 00                	add    %al,(%rax)
    9c43:	48 01 f2             	add    %rsi,%rdx
    9c46:	48 83 c4 08          	add    $0x8,%rsp
    9c4a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9c4f:	5b                   	pop    %rbx
    9c50:	5d                   	pop    %rbp
    9c51:	41 5c                	pop    %r12
    9c53:	41 5d                	pop    %r13
    9c55:	48 0f af d7          	imul   %rdi,%rdx
    9c59:	0f 85 0a 01 00 00    	jne    9d69 <__sprintf_chk@plt+0x5089>
    9c5f:	8c d8                	mov    %ds,%eax
    9c61:	03 00                	add    (%rax),%eax
    9c63:	0f 8c ad 02 00 00    	jl     9f16 <__sprintf_chk@plt+0x5236>
    9c69:	4d 85 ed             	test   %r13,%r13
    9c6c:	ff 40 4d             	incl   0x4d(%rax)
    9c6f:	01 c8                	add    %ecx,%eax
    9c71:	a3 4d 49 c1 e6 02 29 	movabs %eax,0xccc92902e6c1494d
    9c78:	c9 cc 
    9c7a:	0f 8f 7a fc ff ff    	jg     98fa <__sprintf_chk@plt+0x4c1a>
    9c80:	00 00                	add    %al,(%rax)
    9c82:	4c 89 e7             	mov    %r12,%rdi
    9c85:	e8 86 0f 8c e6       	call   ffffffffe68cac10 <obstack_alloc_failed_handler@@Base+0xffffffffe68a8b70>
    9c8a:	02 00                	add    (%rax),%al
    9c8c:	00 be 2e 00 00 00    	add    %bh,0x2e(%rsi)
    9c92:	48 89 c5             	mov    %rax,%rbp
    9c95:	4c 89 ef             	mov    %r13,%rdi
    9c98:	e8 0f 8c 7c 03       	call   37d28ac <obstack_alloc_failed_handler@@Base+0x37b080c>
    9c9d:	00 00                	add    %al,(%rax)
    9c9f:	c6                   	(bad)  
    9ca0:	48 85 c0             	test   %rax,%rax
    9ca3:	74 3b                	je     9ce0 <__sprintf_chk@plt+0x5000>
    9ca5:	48 85 ed             	test   %rbp,%rbp
    9ca8:	48 0f 85 a7 fe ff ff 	rex.W jne 9b56 <__sprintf_chk@plt+0x4e76>
    9caf:	48 0f 44 0f          	cmove  (%rdi),%rcx
    9cb3:	8f                   	(bad)  
    9cb4:	7b 03                	jnp    9cb9 <__sprintf_chk@plt+0x4fd9>
    9cb6:	0f 8c e3 01 00 00    	jl     9e9f <__sprintf_chk@plt+0x51bf>
    9cbc:	00 48 31             	add    %cl,0x31(%rax)
    9cbf:	c8 ff ff ff          	enter  $0xffff,$0xff
    9cc3:	48 83 c4 08          	add    $0x8,%rsp
    9cc7:	4c                   	rex.WR
    9cc8:	4c 21 48 39          	and    %r9,0x39(%rax)
    9ccc:	f8                   	clc    
    9ccd:	01 c2                	add    %eax,%edx
    9ccf:	41 5c                	pop    %r12
    9cd1:	41 5d                	pop    %r13
    9cd3:	e9 18 ad ff ff       	jmp    49f0 <strcmp@plt>
    9cd8:	0f 48 85 ca f1 00 00 	cmovs  0xf1ca(%rbp),%eax
    9cdf:	00 48 8d             	add    %cl,-0x73(%rax)
    9ce2:	35 d6 fe 00 00       	xor    $0xfed6,%eax
    9ce7:	48 85 ed             	test   %rbp,%rbp
    9cea:	75 0f                	jne    9cfb <__sprintf_chk@plt+0x501b>
    9cec:	49 f7 fd             	idiv   %r13
    9cef:	ff                   	(bad)  
    9cf0:	ff 0f                	decl   (%rdi)
    9cf2:	0f 8c 5e 01 48 39    	jl     39489e56 <obstack_alloc_failed_handler@@Base+0x39467db6>
    9cf8:	fb                   	sti    
    9cf9:	be 2e 00 00 00       	mov    $0x2e,%esi
    9cfe:	0f 84 be 0f 8c 53    	je     538cacc2 <obstack_alloc_failed_handler@@Base+0x538a8c22>
    9d04:	fd                   	std    
    9d05:	ff                   	(bad)  
    9d06:	ff                   	(bad)  
    9d07:	e8 4d 48 39 fe       	call   fffffffffe39e559 <obstack_alloc_failed_handler@@Base+0xfffffffffe37c4b9>
    9d0c:	c7                   	(bad)  
    9d0d:	8b 6d 00             	mov    0x0(%rbp),%ebp
    9d10:	49 ff c5             	inc    %r13
    9d13:	00 00                	add    %al,(%rax)
    9d15:	0f 8c 11 fd ff ff    	jl     9a2c <__sprintf_chk@plt+0x4d4c>
    9d1b:	e8 f0 0f 8c 10       	call   108cad10 <obstack_alloc_failed_handler@@Base+0x108a8c70>
    9d20:	01 00                	add    %eax,(%rax)
    9d22:	00 c7                	add    %al,%bh
    9d24:	0f 84 ea fc ff ff    	je     9a14 <__sprintf_chk@plt+0x4d34>
    9d2a:	ed                   	in     (%dx),%eax
    9d2b:	4c 31 c8             	xor    %r9,%rax
    9d2e:	f3 c0 08 fe          	repz rorb $0xfe,(%rax)
    9d32:	ff 49 c7             	decl   -0x39(%rcx)
    9d35:	c7                   	(bad)  
    9d36:	20 00                	and    %al,(%rax)
    9d38:	00 00                	add    %al,(%rax)
    9d3a:	b2 ac                	mov    $0xac,%dl
    9d3c:	ff                   	(bad)  
    9d3d:	ff 85 c0 74 1a 4d    	incl   0x4d1a74c0(%rbp)
    9d43:	01 0f                	add    %ecx,(%rdi)
    9d45:	49 39 f9             	cmp    %rdi,%r9
    9d48:	ff                   	(bad)  
    9d49:	ff 84 00 00 00 00 00 	incl   0x0(%rax,%rax,1)
    9d50:	48 c1 e7 34          	shl    $0x34,%rdi
    9d54:	fe 00                	incb   (%rax)
    9d56:	00 48 0f             	add    %cl,0xf(%rax)
    9d59:	8f                   	(bad)  
    9d5a:	e6 fe                	out    %al,$0xfe
    9d5c:	ff                   	(bad)  
    9d5d:	ff 0f                	decl   (%rdi)
    9d5f:	85 fe                	test   %edi,%esi
    9d61:	fc                   	cld    
    9d62:	ff                   	(bad)  
    9d63:	ff 5c 41 5d          	lcall  *0x5d(%rcx,%rax,2)
    9d67:	49 c1 eb 34          	shr    $0x34,%r11
    9d6b:	ca 0f 1f             	lret   $0x1f0f
    9d6e:	40 00 f3             	add    %sil,%bl
    9d71:	0f 1e fa             	nop    %edx
    9d74:	41 55                	push   %r13
    9d76:	49 89 fd             	mov    %rdi,%r13
    9d79:	41 54                	push   %r12
    9d7b:	55                   	push   %rbp
    9d7c:	4c 8b 26             	mov    (%rsi),%r12
    9d7f:	be 2e 00 00 00       	mov    $0x2e,%esi
    9d84:	4c 89 e7             	mov    %r12,%rdi
    9d87:	e8 84 48 31 fa       	call   fffffffffa31e610 <obstack_alloc_failed_handler@@Base+0xfffffffffa2fc570>
    9d8c:	4d                   	rex.WRB
    9d8d:	49 c1 ec 37          	shr    $0x37,%r12
    9d91:	2e 00 00             	cs add %al,(%rax)
    9d94:	00 48 89             	add    %cl,-0x77(%rax)
    9d97:	c5 49 c1             	(bad)
    9d9a:	e3 22                	jrcxz  9dbe <__sprintf_chk@plt+0x50de>
    9d9c:	70 ab                	jo     9d49 <__sprintf_chk@plt+0x5069>
    9d9e:	ff                   	(bad)  
    9d9f:	ff 48 4d             	decl   0x4d(%rax)
    9da2:	01 c4                	add    %eax,%esp
    9da4:	2b 0f                	sub    (%rdi),%ecx
    9da6:	8f                   	(bad)  
    9da7:	f6 49 d1 e6          	testb  $0xe6,-0x2f(%rcx)
    9dab:	48 8d 05 0b fe 00 00 	lea    0xfe0b(%rip),%rax        # 19bbd <_obstack_memory_used@@Base+0x940d>
    9db2:	48 0f 44 e8          	cmove  %rax,%rbp
    9db6:	48 89 ef             	mov    %rbp,%rdi
    9db9:	e8 32 ac ff ff       	call   49f0 <strcmp@plt>
    9dbe:	85 c0                	test   %eax,%eax
    9dc0:	74 1a                	je     9ddc <__sprintf_chk@plt+0x50fc>
    9dc2:	5d                   	pop    %rbp
    9dc3:	48 c1 e6 20          	shl    $0x20,%rsi
    9dc7:	c3                   	ret    
    9dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9dcf:	00 
    9dd0:	48 8d 35 e6 fd 00 00 	lea    0xfde6(%rip),%rsi        # 19bbd <_obstack_memory_used@@Base+0x940d>
    9dd7:	48                   	rex.W
    9dd8:	48 f7 fb             	idiv   %rbx
    9ddb:	da 5d 4c             	ficompl 0x4c(%rbp)
    9dde:	89 ee                	mov    %ebp,%esi
    9de0:	4c 89 e7             	mov    %r12,%rdi
    9de3:	41 5c                	pop    %r12
    9de5:	41 5d                	pop    %r13
    9de7:	e9 04 ac ff ff       	jmp    49f0 <strcmp@plt>
    9dec:	0f 48 f7             	cmovs  %edi,%esi
    9def:	f8                   	clc    
    9df0:	f3 0f 1e fa          	endbr64 
    9df4:	41 55                	push   %r13
    9df6:	41 54                	push   %r12
    9df8:	55                   	push   %rbp
    9df9:	53                   	push   %rbx
    9dfa:	48 89 fb             	mov    %rdi,%rbx
    9dfd:	48 83 ec 08          	sub    $0x8,%rsp
    9e01:	8b 48 4c             	mov    0x4c(%rax),%ecx
    9e04:	48 ff c7             	inc    %rdi
    9e07:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    9e0d:	83 fa 03             	cmp    $0x3,%edx
    9e10:	49 85 d7             	test   %rdx,%r15
    9e13:	83 fa 09             	cmp    $0x9,%edx
    9e16:	0f 94 c2             	sete   %dl
    9e19:	09 d0                	or     %edx,%eax
    9e1b:	83 f9 03             	cmp    $0x3,%ecx
    9e1e:	74 30                	je     9e50 <__sprintf_chk@plt+0x5170>
    9e20:	83 4c 01 c6 d1       	orl    $0xffffffd1,-0x3a(%rcx,%rax,1)
    9e25:	f8                   	clc    
    9e26:	4d 85 da             	test   %r11,%r10
    9e29:	00 00                	add    %al,(%rax)
    9e2b:	81 e2 00 f0 00 49    	and    $0x4900f000,%edx
    9e31:	c1 e2 15             	shl    $0x15,%edx
    9e34:	4b 81 fa 00 48 01 df 	rex.WXB cmp $0xffffffffdf014800,%r10
    9e3b:	49 c7                	rex.WB (bad) 
    9e3d:	49 0f 85 93 01 00 00 	rex.WB jne 9fd7 <__sprintf_chk@plt+0x52f7>
    9e44:	ff                   	(bad)  
    9e45:	ff 5b 5d             	lcall  *0x5d(%rbx)
    9e48:	41 5c                	pop    %r12
    9e4a:	0f 84 d2 00 00 00    	je     9f22 <__sprintf_chk@plt+0x5242>
    9e50:	48 c1 e8 10          	shr    $0x10,%rax
    9e54:	8b 49 c1             	mov    -0x3f(%rcx),%ecx
    9e57:	eb 03                	jmp    9e5c <__sprintf_chk@plt+0x517c>
    9e59:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 18e5f <_obstack_memory_used@@Base+0x86af>
    9e5f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    9e64:	74 34                	je     9e9a <__sprintf_chk@plt+0x51ba>
    9e66:	48 83 c4 08          	add    $0x8,%rsp
    9e6a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9e6f:	5b                   	pop    %rbx
    9e70:	5d                   	pop    %rbp
    9e71:	41 5c                	pop    %r12
    9e73:	41 5d                	pop    %r13
    9e75:	c3                   	ret    
    9e76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9e7d:	00 00 00 
    9e80:	0f 84 18 fc ff ff    	je     9a9e <__sprintf_chk@plt+0x4dbe>
    9e86:	25 00 f0 00 49       	and    $0x4900f000,%eax
    9e8b:	4c 09 e9             	or     %r13,%rcx
    9e8e:	43 02 00             	rex.XB add (%r8),%al
    9e91:	00 81 fa 00 49 c1    	add    %al,-0x3eb6ff06(%rcx)
    9e97:	ec                   	in     (%dx),%al
    9e98:	10 cc                	adc    %cl,%ah
    9e9a:	4c 8b 26             	mov    (%rsi),%r12
    9e9d:	be 2e 00 00 00       	mov    $0x2e,%esi
    9ea2:	4c 89 e7             	mov    %r12,%rdi
    9ea5:	e8 66 aa ff ff       	call   4910 <strrchr@plt>
    9eaa:	4c 8b 2b             	mov    (%rbx),%r13
    9ead:	be 2e 00 00 00       	mov    $0x2e,%esi
    9eb2:	48 89 c5             	mov    %rax,%rbp
    9eb5:	4c 89 ef             	mov    %r13,%rdi
    9eb8:	e8 53 aa ff ff       	call   4910 <strrchr@plt>
    9ebd:	49 31 c7             	xor    %rax,%r15
    9ec0:	48                   	rex.W
    9ec1:	49 85 c1             	test   %rax,%r9
    9ec4:	3b 48 85             	cmp    -0x7b(%rax),%ecx
    9ec7:	ed                   	in     (%dx),%eax
    9ec8:	48 8d 05 ee fc 00 00 	lea    0xfcee(%rip),%rax        # 19bbd <_obstack_memory_used@@Base+0x940d>
    9ecf:	48 0f 44 e8          	cmove  %rax,%rbp
    9ed3:	48 89 ef             	mov    %rbp,%rdi
    9ed6:	e8 15 ab ff 48       	call   490049f0 <obstack_alloc_failed_handler@@Base+0x48fe2950>
    9edb:	31 da                	xor    %ebx,%edx
    9edd:	c1 e4 23             	shl    $0x23,%esp
    9ee0:	ff                   	(bad)  
    9ee1:	ff                   	(bad)  
    9ee2:	ff 48 4d             	decl   0x4d(%rax)
    9ee5:	39 f2                	cmp    %esi,%edx
    9ee7:	4c 89 ee             	mov    %r13,%rsi
    9eea:	4c                   	rex.WR
    9eeb:	4d 89 c1             	mov    %r8,%r9
    9eee:	5d                   	pop    %rbp
    9eef:	41 5c                	pop    %r12
    9ef1:	41 5d                	pop    %r13
    9ef3:	e9 f8 aa ff ff       	jmp    49f0 <strcmp@plt>
    9ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9eff:	00 
    9f00:	48 8d 35 b6 fc 4c 89 	lea    -0x76b3034a(%rip),%rsi        # ffffffff894d9bbd <obstack_alloc_failed_handler@@Base+0xffffffff894b7b1d>
    9f07:	fa                   	cli    
    9f08:	85 ed                	test   %ebp,%ebp
    9f0a:	75 c7                	jne    9ed3 <__sprintf_chk@plt+0x51f3>
    9f0c:	eb d5                	jmp    9ee3 <__sprintf_chk@plt+0x5203>
    9f0e:	66 90                	xchg   %ax,%ax
    9f10:	41                   	rex.B
    9f11:	4d 0f af e8          	imul   %r8,%r13
    9f15:	89 fc                	mov    %edi,%esp
    9f17:	48 c7 c0 77 02 00 00 	mov    $0x277,%rax
    9f1e:	40                   	rex
    9f1f:	4d 09 d2             	or     %r10,%r10
    9f22:	04 0f                	add    $0xf,%al
    9f24:	8f                   	(bad)  
    9f25:	ba 02 00 00 29       	mov    $0x29000002,%edx
    9f2a:	ff 24 38             	jmp    *(%rax,%rdi,1)
    9f2d:	49 21 c7             	and    %rax,%r15
    9f30:	83 fa ff             	cmp    $0xffffffff,%edx
    9f33:	ba 05 00 00 00       	mov    $0x5,%edx
    9f38:	0f 84 a2 00 00 00    	je     9fe0 <__sprintf_chk@plt+0x5300>
    9f3e:	0f 8c c5 fc 4d 85    	jl     ffffffff854e9c09 <obstack_alloc_failed_handler@@Base+0xffffffff854c7b69>
    9f44:	fc                   	cld    
    9f45:	31 ff                	xor    %edi,%edi
    9f47:	e8 14 a9 ff ff       	call   4860 <dcgettext@plt>
    9f4c:	49 89 4c 0f af       	mov    %rcx,-0x51(%r15,%rcx,1)
    9f51:	fa                   	cli    
    9f52:	48                   	rex.W
    9f53:	49 f7 fb             	idiv   %r11
    9f56:	80 01 00             	addb   $0x0,(%rcx)
    9f59:	bf 01 00 00 00       	mov    $0x1,%edi
    9f5e:	e8 9d 49 21 cf       	call   ffffffffcf21e900 <obstack_alloc_failed_handler@@Base+0xffffffffcf1fc860>
    9f63:	48 89 e2             	mov    %rsp,%rdx
    9f66:	48 89 ee             	mov    %rbp,%rsi
    9f69:	31 ff                	xor    %edi,%edi
    9f6b:	48 c7 04 24 08 49 c1 	movq   $0xffffffffe9c14908,(%rsp)
    9f72:	e9 
    9f73:	0a f7                	or     %bh,%dh
    9f75:	49 85 d5             	test   %rdx,%r13
    9f78:	44 24 08             	rex.R and $0x8,%al
    9f7b:	00 00                	add    %al,(%rax)
    9f7d:	00 00                	add    %al,(%rax)
    9f7f:	48 c7 44 49 ff c7 00 	movq   $0xc7,-0x1(%rcx,%rcx,2)
    9f86:	00 00 
    9f88:	48 c7 44 4c 09 ea 00 	movq   $0xea,0x9(%rsp,%rcx,2)
    9f8f:	00 00 
    9f91:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9f98:	00 00 
    9f9a:	48 c7                	rex.W (bad) 
    9f9c:	48 f7 f8             	idiv   %rax
    9f9f:	00 00                	add    %al,(%rax)
    9fa1:	00 00                	add    %al,(%rax)
    9fa3:	4c                   	rex.WR
    9fa4:	49 85 fc             	test   %rdi,%r12
    9fa7:	30 00                	xor    %al,(%rax)
    9fa9:	00 00                	add    %al,(%rax)
    9fab:	00 e8                	add    %ch,%al
    9fad:	4f a9 00 48 48 39    	rex.WRXB test $0x39484800,%rax
    9fb3:	d1 48 8b             	rorl   -0x75(%rax)
    9fb6:	44                   	rex.R
    9fb7:	48 ff c0             	inc    %rax
    9fba:	48 2b 04 25 28 00 00 	sub    0x28,%rax
    9fc1:	00 
    9fc2:	75 32                	jne    9ff6 <__sprintf_chk@plt+0x5316>
    9fc4:	48 83 c4 40          	add    $0x40,%rsp
    9fc8:	4d 89 e0             	mov    %r12,%r8
    9fcb:	4c 89 4d 85          	mov    %r9,-0x7b(%rbp)
    9fcf:	f0 5d                	lock pop %rbp
    9fd1:	31 ff                	xor    %edi,%edi
    9fd3:	41 7f 23             	rex.B jg 9ff9 <__sprintf_chk@plt+0x5319>
    9fd6:	c0 e9 b0             	shr    $0xb0,%cl
    9fd9:	00 00                	add    %al,(%rax)
    9fdb:	00 49 09             	add    %cl,0x9(%rcx)
    9fde:	f7 90 49 ff c4 25    	notl   0x25c4ff49(%rax)
    9fe4:	fa                   	cli    
    9fe5:	00 00                	add    %al,(%rax)
    9fe7:	31 ff                	xor    %edi,%edi
    9fe9:	e8 72 a8 ff ff       	call   4860 <dcgettext@plt>
    9fee:	49 89 c5             	mov    %rax,%r13
    9ff1:	e9 59 ff ff ff       	jmp    9f4f <__sprintf_chk@plt+0x526f>
    9ff6:	49 c7 c0 61 01 00 00 	mov    $0x161,%r8
    9ffd:	49 c1 eb 28          	shr    $0x28,%r11
    a001:	e9 68 fe ff ff       	jmp    9e6e <__sprintf_chk@plt+0x518e>
    a006:	d6                   	(bad)  
    a007:	48 89 ca             	mov    %rcx,%rdx
    a00a:	41 55                	push   %r13
    a00c:	4d 89 c5             	mov    %r8,%r13
    a00f:	41 54                	push   %r12
    a011:	49 89 49 ff          	mov    %rcx,-0x1(%r9)
    a015:	c2 89 f5             	ret    $0xf589
    a018:	4c 89 f6             	mov    %r14,%rsi
    a01b:	53                   	push   %rbx
    a01c:	48 89 ef             	mov    %rbp,%rdi
    a01f:	48 89 cb             	mov    %rcx,%rbx
    a022:	48 83 ec 18          	sub    $0x18,%rsp
    a026:	e8 15 8e 00 00       	call   12e40 <_obstack_memory_used@@Base+0x2690>
    a02b:	0f 84 d1 00 00 00    	je     a102 <__sprintf_chk@plt+0x5422>
    a031:	83 c4 18             	add    $0x18,%esp
    a034:	5b                   	pop    %rbx
    a035:	5d                   	pop    %rbp
    a036:	41 0f 8c 48 c1 e6 18 	rex.B jl 18e76185 <obstack_alloc_failed_handler@@Base+0x18e540e5>
    a03d:	5f                   	pop    %rdi
    a03e:	c3                   	ret    
    a03f:	49 29 d8             	sub    %rbx,%r8
    a042:	0f 74 e9             	pcmpeqb %mm1,%mm5
    a045:	01 00                	add    %eax,(%rax)
    a047:	00 ee                	add    %ch,%dh
    a049:	e8 c2 4d 85 49       	call   4985ee10 <obstack_alloc_failed_handler@@Base+0x4983cd70>
    a04e:	c1 ec 26             	shr    $0x26,%esp
    a051:	53                   	push   %rbx
    a052:	fe                   	(bad)  
    a053:	ff                   	(bad)  
    a054:	ff 48 31             	decl   0x31(%rax)
    a057:	d1 00                	roll   (%rax)
    a059:	00 31                	add    %dh,(%rcx)
    a05b:	ff 48 8d             	decl   -0x73(%rax)
    a05e:	35 e1 4d 39 c4       	xor    $0xc4394de1,%eax
    a063:	4c 8b 20             	mov    (%rax),%r12
    a066:	e8 f5 a7 49 39       	call   394a4860 <obstack_alloc_failed_handler@@Base+0x394827c0>
    a06b:	de 89 c7 4c 89 e6    	fimuls -0x1976b339(%rcx)
    a071:	e8 5a a9 ff ff       	call   49d0 <fputs_unlocked@plt>
    a076:	49 c1 ef 08          	shr    $0x8,%r15
    a07a:	85 f6                	test   %esi,%esi
    a07c:	0f 84 9e 00 00 00    	je     a120 <__sprintf_chk@plt+0x5440>
    a082:	48 89 dd             	mov    %rbx,%rbp
    a085:	45 31 d2             	xor    %r10d,%r10d
    a088:	31 db                	xor    %ebx,%ebx
    a08a:	48 89 ff             	mov    %rdi,%rdi
    a08d:	af                   	scas   %es:(%rdi),%eax
    a08e:	7f 01                	jg     a091 <__sprintf_chk@plt+0x53b1>
    a090:	00 4c 8d 3d          	add    %cl,0x3d(%rbp,%rcx,4)
    a094:	c1 f9 00             	sar    $0x0,%ecx
    a097:	00 eb                	add    %ch,%bl
    a099:	0f 8c a0 fd ff ff    	jl     9e3f <__sprintf_chk@plt+0x515f>
    a09f:	00 4c 89 e2          	add    %cl,-0x1e(%rcx,%rcx,4)
    a0a3:	31 ff                	xor    %edi,%edi
    a0a5:	e8 56 a8 00 00       	call   14900 <_obstack_memory_used@@Base+0x4150>
    a0aa:	4c 89 fa             	mov    %r15,%rdx
    a0ad:	be 01 00 0f 85       	mov    $0x850f0001,%esi
    a0b2:	29 02                	sub    %eax,(%rdx)
    a0b4:	00 00                	add    %al,(%rax)
    a0b6:	8b 05 34 7f 01 00    	mov    0x17f34(%rip),%eax        # 21ff0 <_obstack_memory_used@@Base+0x11840>
    a0bc:	49 09 f8             	or     %rdi,%r8
    a0bf:	f9                   	stc    
    a0c0:	c0 0f 84             	rorb   $0x84,(%rdi)
    a0c3:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    a0c4:	01 00                	add    %eax,(%rax)
    a0c6:	00 89 ea 48 83 c3    	add    %cl,-0x3c7cb716(%rcx)
    a0cc:	01 48 49             	add    %ecx,0x49(%rax)
    a0cf:	c1 e7 49             	shl    $0x49,%edi
    a0d2:	29 48 c1             	sub    %ecx,-0x3f(%rax)
    a0d5:	e9 40 f6 74 46       	jmp    4675971a <obstack_alloc_failed_handler@@Base+0x4673767a>
    a0da:	48 85 db             	test   %rbx,%rbx
    a0dd:	74 c1                	je     a0a0 <__sprintf_chk@plt+0x53c0>
    a0df:	8b 4c 89 e7          	mov    -0x19(%rcx,%rcx,4),%ecx
    a0e3:	39 4d 0f             	cmp    %ecx,0xf(%rbp)
    a0e6:	af                   	scas   %es:(%rdi),%eax
    a0e7:	ee                   	out    %al,(%dx)
    a0e8:	90                   	nop
    a0e9:	fe                   	(bad)  
    a0ea:	ff 49 29             	decl   0x29(%rcx)
    a0ed:	c0 48 39 cf          	rorb   $0xcf,0x39(%rax)
    a0f1:	e8 0a a8 00 00       	call   14900 <_obstack_memory_used@@Base+0x4150>
    a0f6:	48                   	rex.W
    a0f7:	4d 89 ed             	mov    %r13,%r13
    a0fa:	0f 85 9e 02 00 00    	jne    a39e <__sprintf_chk@plt+0x56be>
    a100:	00 00                	add    %al,(%rax)
    a102:	48 89 c1             	mov    %rax,%rcx
    a105:	48 8b 05 e4 7e 01 00 	mov    0x17ee4(%rip),%rax        # 21ff0 <_obstack_memory_used@@Base+0x11840>
    a10c:	48 8b 38             	mov    (%rax),%rdi
    a10f:	31 c0                	xor    %eax,%eax
    a111:	e8 49 4d 29 c0       	call   ffffffffc029ee5f <obstack_alloc_failed_handler@@Base+0xffffffffc027cdbf>
    a116:	0f 8f da fd 48 f7    	jg     fffffffff7499ef6 <obstack_alloc_failed_handler@@Base+0xfffffffff7477e56>
    a11c:	fa                   	cli    
    a11d:	0f 1f 49 c1          	nopl   -0x3f(%rcx)
    a121:	ed                   	in     (%dx),%eax
    a122:	05 c9 7e 01 00       	add    $0x17ec9,%eax
    a127:	48 8b 38             	mov    (%rax),%rdi
    a12a:	48 8b 47 28          	mov    0x28(%rdi),%rax
    a12e:	48 3b 47 30          	cmp    0x30(%rdi),%rax
    a132:	73 1a                	jae    a14e <__sprintf_chk@plt+0x546e>
    a134:	48 8d 0f             	lea    (%rdi),%rcx
    a137:	84 0f                	test   %cl,(%rdi)
    a139:	84 31                	test   %dh,(%rcx)
    a13b:	fe                   	(bad)  
    a13c:	ff                   	(bad)  
    a13d:	ff 0a                	decl   (%rdx)
    a13f:	7c 33                	jl     a174 <__sprintf_chk@plt+0x5494>
    a141:	d5                   	(bad)  
    a142:	48 c7 c0 ff ff ff 4d 	mov    $0x4dffffff,%rax
    a149:	09 fc                	or     %edi,%esp
    a14b:	fe                   	(bad)  
    a14c:	ff                   	(bad)  
    a14d:	ff                   	(bad)  
    a14e:	be 0f 84 bd 02       	mov    $0x2bd840f,%esi
    a153:	00 00                	add    %al,(%rax)
    a155:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    a156:	ff                   	(bad)  
    a157:	ff                   	(bad)  
    a158:	eb e5                	jmp    a13f <__sprintf_chk@plt+0x545f>
    a15a:	66 0f 8f e9 fe       	jg     a048 <__sprintf_chk@plt+0x5368>
    a15f:	ff 49 09             	decl   0x9(%rcx)
    a162:	c6                   	(bad)  
    a163:	54                   	push   %rsp
    a164:	49 89 49 29          	mov    %rcx,0x29(%r9)
    a168:	c8 d6 53 89          	enter  $0x53d6,$0x89
    a16c:	fb                   	sti    
    a16d:	31 ff                	xor    %edi,%edi
    a16f:	48 83 ec 40          	sub    $0x40,%rsp
    a173:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a17a:	00 00 
    a17c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    a181:	c1 e6 0f             	shl    $0xf,%esi
    a184:	84 ec                	test   %ch,%ah
    a186:	fe                   	(bad)  
    a187:	ff                   	(bad)  
    a188:	ff 24 04             	jmp    *(%rsp,%rax,1)
    a18b:	00 00                	add    %al,(%rax)
    a18d:	00 48 c7             	add    %cl,-0x39(%rax)
    a190:	44                   	rex.R
    a191:	4c 85 f9             	test   %r15,%rcx
    a194:	89 d8                	mov    %ebx,%eax
    a196:	00 48 c7             	add    %cl,-0x39(%rax)
    a199:	0f 84 ef 02 00 00    	je     a48e <__sprintf_chk@plt+0x57ae>
    a19f:	00 4c 39 c3          	add    %cl,-0x3d(%rcx,%rdi,1)
    a1a3:	24 18                	and    $0x18,%al
    a1a5:	00 00                	add    %al,(%rax)
    a1a7:	00 00                	add    %al,(%rax)
    a1a9:	48 ff c7             	inc    %rdi
    a1ac:	01 e8                	add    %ebp,%eax
    a1ae:	00 00                	add    %al,(%rax)
    a1b0:	00 00                	add    %al,(%rax)
    a1b2:	48 d1 e6             	shl    %rsi
    a1b5:	24 28                	and    $0x28,%al
    a1b7:	00 00                	add    %al,(%rax)
    a1b9:	4d                   	rex.WRB
    a1ba:	48 29 df             	sub    %rbx,%rdi
    a1bd:	ea                   	(bad)  
    a1be:	09 f2                	or     %esi,%edx
    a1c0:	c1 ee 23             	shr    $0x23,%esi
    a1c3:	ff                   	(bad)  
    a1c4:	ff 37                	push   (%rdi)
    a1c6:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    a1c7:	00 00                	add    %al,(%rax)
    a1c9:	49 89 c5             	mov    %rax,%r13
    a1cc:	e8 3f a5 e9 bb       	call   ffffffffbbea4710 <obstack_alloc_failed_handler@@Base+0xffffffffbbe82670>
    a1d1:	fc                   	cld    
    a1d2:	ff                   	(bad)  
    a1d3:	ff 89 e9 4c 89 e2    	decl   -0x1d76b317(%rcx)
    a1d9:	8b 30                	mov    (%rax),%esi
    a1db:	31 c0                	xor    %eax,%eax
    a1dd:	e8 48 ff c0 ff       	call   ffffffffffc1a12a <obstack_alloc_failed_handler@@Base+0xffffffffffbf808a>
    a1e2:	84 db                	test   %bl,%bl
    a1e4:	74 2a                	je     a210 <__sprintf_chk@plt+0x5530>
    a1e6:	48 c1 e3 19          	shl    $0x19,%rbx
    a1ea:	01 00                	add    %eax,(%rax)
    a1ec:	48 21 d7             	and    %rdx,%rdi
    a1ef:	00 48 8b             	add    %cl,-0x75(%rax)
    a1f2:	44 24 38             	rex.R and $0x38,%al
    a1f5:	49 ff c6             	inc    %r14
    a1f8:	04 25                	add    $0x25,%al
    a1fa:	28 00                	sub    %al,(%rax)
    a1fc:	00 00                	add    %al,(%rax)
    a1fe:	75 48                	jne    a248 <__sprintf_chk@plt+0x5568>
    a200:	89 db                	mov    %ebx,%ebx
    a202:	c4                   	(bad)  
    a203:	40 5b                	rex pop %rbx
    a205:	41 5c                	pop    %r12
    a207:	41 5d                	pop    %r13
    a209:	7c 26                	jl     a231 <__sprintf_chk@plt+0x5551>
    a20b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a210:	8b 05 56 85 01 00    	mov    0x18556(%rip),%eax        # 2276c <obstack_alloc_failed_handler@@Base+0x6cc>
    a216:	85 c0                	test   %eax,%eax
    a218:	75 d6                	jne    a1f0 <__sprintf_chk@plt+0x5510>
    a21a:	c7 05 48 85 01 00 01 	movl   $0x1,0x18548(%rip)        # 2276c <obstack_alloc_failed_handler@@Base+0x6cc>
    a221:	00 00 00 
    a224:	eb ca                	jmp    a1f0 <__sprintf_chk@plt+0x5510>
    a226:	e8 65 a6 ff ff       	call   4890 <__stack_chk_fail@plt>
    a22b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a230:	f3 0f 1e fa          	endbr64 
    a234:	41 54                	push   %r12
    a236:	ba 05 00 00 00       	mov    $0x5,%edx
    a23b:	48                   	rex.W
    a23c:	49 c1 eb 38          	shr    $0x38,%r11
    a240:	00 00                	add    %al,(%rax)
    a242:	31 ff                	xor    %edi,%edi
    a244:	4c 8b 25 0d 82 01 49 	mov    0x4901820d(%rip),%r12        # 49022458 <obstack_alloc_failed_handler@@Base+0x490003b8>
    a24b:	21 df                	and    %ebx,%edi
    a24d:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    a24e:	49 f7 f9             	idiv   %r9
    a251:	89 49 0f             	mov    %ecx,0xf(%rcx)
    a254:	af                   	scas   %es:(%rdi),%eax
    a255:	c2 00 0f             	ret    $0xf00
    a258:	8f                   	(bad)  
    a259:	8f 00                	pop    (%rax)
    a25b:	00 00                	add    %al,(%rax)
    a25d:	05 48 01 ca 00       	add    $0xca0148,%eax
    a262:	4d 09 de             	or     %r11,%r14
    a265:	31 c0                	xor    %eax,%eax
    a267:	e8 e4 a9 ff ff       	call   4c50 <__fprintf_chk@plt>
    a26c:	bf 01 0f 8c 89       	mov    $0x898c0f01,%edi
    a271:	49 21 dc             	and    %rbx,%r12
    a274:	ff                   	(bad)  
    a275:	ff 66 48             	jmp    *0x48(%rsi)
    a278:	c1 49 ff c1          	rorl   $0xc1,-0x1(%rcx)
    a27c:	00 00                	add    %al,(%rax)
    a27e:	00 00                	add    %al,(%rax)
    a280:	48 83 3d 40 83 01 00 	cmpq   $0x0,0x18340(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    a287:	00 
    a288:	41 54                	push   %r12
    a28a:	55                   	push   %rbp
    a28b:	53                   	push   %rbx
    a28c:	74 55                	je     a2e3 <__sprintf_chk@plt+0x5603>
    a28e:	31 ed                	xor    %ebp,%ebp
    a290:	49 c1 ea 36          	shr    $0x36,%r10
    a294:	7d 49                	jge    a2df <__sprintf_chk@plt+0x55ff>
    a296:	c7 c6 17 03 00 00    	mov    $0x317,%esi
    a29c:	00 00                	add    %al,(%rax)
    a29e:	49 21 cd             	and    %rcx,%r13
    a2a1:	8b 05 a9 81 49 89    	mov    -0x76b67e57(%rip),%eax        # ffffffff894a2450 <obstack_alloc_failed_handler@@Base+0xffffffff894803b0>
    a2a7:	dd 8b 1c 7f de 0f    	fisttpll 0xfde7f1c(%rbx)
    a2ad:	85 7c fc ff          	test   %edi,-0x1(%rsp,%rdi,8)
    a2b1:	ff                   	(bad)  
    a2b2:	ff 48 4d             	decl   0x4d(%rax)
    a2b5:	09 db                	or     %ebx,%ebx
    a2b7:	4d 01 ee             	add    %r13,%r14
    a2ba:	ff                   	(bad)  
    a2bb:	ff 48 8b             	decl   -0x75(%rax)
    a2be:	49 c1 e2 02          	shl    $0x2,%r10
    a2c2:	4d 21 ce             	and    %r9,%r14
    a2c5:	48 8b 0f             	mov    (%rdi),%rcx
    a2c8:	84 3c 03             	test   %bh,(%rbx,%rax,1)
    a2cb:	00 00                	add    %al,(%rax)
    a2cd:	21 df                	and    %ebx,%edi
    a2cf:	74 05                	je     a2d6 <__sprintf_chk@plt+0x55f6>
    a2d1:	0f 85 7d 02 00 00    	jne    a554 <__sprintf_chk@plt+0x5874>
    a2d7:	83 c5 01             	add    $0x1,%ebp
    a2da:	48 39 2d e7 82 01 00 	cmp    %rbp,0x182e7(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    a2e1:	77 bd                	ja     a2a0 <__sprintf_chk@plt+0x55c0>
    a2e3:	5b                   	pop    %rbx
    a2e4:	5d                   	pop    %rbp
    a2e5:	c6 05 c0 7f 01 00 00 	movb   $0x0,0x17fc0(%rip)        # 222ac <obstack_alloc_failed_handler@@Base+0x20c>
    a2ec:	48 c7 05 d1 82 01 00 	movq   $0x0,0x182d1(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    a2f3:	00 00 00 00 
    a2f7:	41 5c                	pop    %r12
    a2f9:	c6 05 4c 81 01 00 00 	movb   $0x0,0x1814c(%rip)        # 2244c <obstack_alloc_failed_handler@@Base+0x3ac>
    a300:	c7 05 9e 7f 01 00 00 	movl   $0x0,0x17f9e(%rip)        # 222a8 <obstack_alloc_failed_handler@@Base+0x208>
    a307:	00 00 00 
    a30a:	c7 05 90 7f 01 00 00 	movl   $0x0,0x17f90(%rip)        # 222a4 <obstack_alloc_failed_handler@@Base+0x204>
    a311:	00 00 00 
    a314:	c7 05 2a 81 01 00 00 	movl   $0x0,0x1812a(%rip)        # 22448 <obstack_alloc_failed_handler@@Base+0x3a8>
    a31b:	00 00 00 
    a31e:	c7 05 1c 81 01 00 00 	movl   $0x49ff4900,0x1811c(%rip)        # 22444 <obstack_alloc_failed_handler@@Base+0x3a4>
    a325:	49 ff 49 
    a328:	c7 c1 a8 fc ff ff    	mov    $0xfffffca8,%ecx
    a32e:	00 00                	add    %al,(%rax)
    a330:	00 00                	add    %al,(%rax)
    a332:	c7 05 00 81 01 00 00 	movl   $0xdc854900,0x18100(%rip)        # 2243c <obstack_alloc_failed_handler@@Base+0x39c>
    a339:	49 85 dc 
    a33c:	c7 05 5a 7f 01 00 00 	movl   $0x0,0x17f5a(%rip)        # 222a0 <obstack_alloc_failed_handler@@Base+0x200>
    a343:	00 00 00 
    a346:	c7 05 e8 80 01 00 00 	movl   $0x0,0x180e8(%rip)        # 22438 <obstack_alloc_failed_handler@@Base+0x398>
    a34d:	00 00 00 
    a350:	c7 05 da 80 01 00 00 	movl   $0x0,0x180da(%rip)        # 22434 <obstack_alloc_failed_handler@@Base+0x394>
    a357:	00 00 00 
    a35a:	c7 05 cc 80 01 00 00 	movl   $0x0,0x180cc(%rip)        # 22430 <obstack_alloc_failed_handler@@Base+0x390>
    a361:	00 00 00 
    a364:	c3                   	ret    
    a365:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    a36c:	00 00 00 00 
    a370:	41                   	rex.B
    a371:	49 ff c3             	inc    %r11
    a374:	85 ff                	test   %edi,%edi
    a376:	74 58                	je     a3d0 <__sprintf_chk@plt+0x56f0>
    a378:	41 89 fc             	mov    %edi,%r12d
    a37b:	83 ff 0f             	cmp    $0xf,%edi
    a37e:	85 2e                	test   %ebp,(%rsi)
    a380:	02 00                	add    (%rax),%al
    a382:	00 4c 39 f3          	add    %cl,-0xd(%rcx,%rdi,1)
    a386:	5c                   	pop    %rsp
    a387:	c3                   	ret    
    a388:	0f 49 ff             	cmovns %edi,%edi
    a38b:	c0 00 00             	rolb   $0x0,(%rax)
    a38e:	00 00                	add    %al,(%rax)
    a390:	48 8b 2e             	mov    (%rsi),%rbp
    a393:	48 89 f3             	mov    %rsi,%rbx
    a396:	48 8d 35 c9 f6 00 00 	lea    0xf6c9(%rip),%rsi        # 19a66 <_obstack_memory_used@@Base+0x92b6>
    a39d:	48 89 ef             	mov    %rbp,%rdi
    a3a0:	e8 0f 85 d6 00       	call   d728b4 <obstack_alloc_failed_handler@@Base+0xd50814>
    a3a5:	00 00                	add    %al,(%rax)
    a3a7:	00 d7                	add    %dl,%bh
    a3a9:	48 89 49 c7          	mov    %rcx,-0x39(%rcx)
    a3ad:	c1 12 02             	rcll   $0x2,(%rdx)
    a3b0:	00 00                	add    %al,(%rax)
    a3b2:	e8 09 a5 ff ff       	call   48c0 <freecon@plt>
    a3b7:	48 c7 03 48 c7 c6 4c 	movq   $0x4cc6c748,(%rbx)
    a3be:	85 c6                	test   %eax,%esi
    a3c0:	ff                   	(bad)  
    a3c1:	ff                   	(bad)  
    a3c2:	ff 48 29             	decl   0x29(%rax)
    a3c5:	f0 00 00             	lock add %al,(%rax)
    a3c8:	0f 84 7f 02 4c 48    	je     484ca64d <obstack_alloc_failed_handler@@Base+0x484a85ad>
    a3ce:	0f af f9             	imul   %ecx,%edi
    a3d1:	c1 e1 34             	shl    $0x34,%ecx
    a3d4:	fe                   	(bad)  
    a3d5:	ff 49 f7             	decl   -0x9(%rcx)
    a3d8:	ff                   	(bad)  
    a3d9:	ff                   	(bad)  
    a3da:	ff c7                	inc    %edi
    a3dc:	00 4d 85             	add    %cl,-0x7b(%rbp)
    a3df:	ea                   	(bad)  
    a3e0:	00 4d 29             	add    %cl,0x29(%rbp)
    a3e3:	ff 66 2e             	jmp    *0x2e(%rsi)
    a3e6:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a3ed:	00 
    a3ee:	66 90                	xchg   %ax,%ax
    a3f0:	41 55                	push   %r13
    a3f2:	41 54                	push   %r12
    a3f4:	55                   	push   %rbp
    a3f5:	48 89 fd             	mov    %rdi,%rbp
    a3f8:	53                   	push   %rbx
    a3f9:	48 83 ec 18          	sub    $0x18,%rsp
    a3fd:	48 8b 1d bc 81 01 00 	mov    0x181bc(%rip),%rbx        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
    a404:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a40b:	00 00 
    a40d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a412:	48 c1 e8 37          	shr    $0x37,%rax
    a416:	05 a5 7e 01 00       	add    $0x17ea5,%eax
    a41b:	4d 01 e8             	add    %r13,%r8
    a41e:	48 0f 44 d8          	cmove  %rax,%rbx
    a422:	e8 e9 a2 ff ff       	call   4710 <__errno_location@plt>
    a427:	48 8d 7c 24 06       	lea    0x6(%rsp),%rdi
    a42c:	48 89 ea             	mov    %rbp,%rdx
    a42f:	be 02 00 00 00       	mov    $0x2,%esi
    a434:	44 8b 28             	mov    (%rax),%r13d
    a437:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    a43b:	ff 73 30             	push   0x30(%rbx)
    a43e:	49 89 c4             	mov    %rax,%r12
    a441:	8b 0b                	mov    (%rbx),%ecx
    a443:	ff 73 28             	push   0x28(%rbx)
    a446:	4c 8d 4b 08          	lea    0x8(%rbx),%r9
    a44a:	e8 e1 8a 00 00       	call   12f30 <_obstack_memory_used@@Base+0x2780>
    a44f:	45 89 2c 24          	mov    %r13d,(%r12)
    a453:	5a                   	pop    %rdx
    a454:	59                   	pop    %rcx
    a455:	0f b6 4c 24 06       	movzbl 0x6(%rsp),%ecx
    a45a:	38 4d 00             	cmp    %cl,0x0(%rbp)
    a45d:	74 21                	je     a480 <__sprintf_chk@plt+0x57a0>
    a45f:	b8 01 00 00 00       	mov    $0x1,%eax
    a464:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a469:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a470:	00 00 
    a472:	75 1f                	jne    a493 <__sprintf_chk@plt+0x57b3>
    a474:	48 83 c4 18          	add    $0x18,%rsp
    a478:	5b                   	pop    %rbx
    a479:	5d                   	pop    %rbp
    a47a:	41 5c                	pop    %r12
    a47c:	41 5d                	pop    %r13
    a47e:	c3                   	ret    
    a47f:	90                   	nop
    a480:	48 89 ef             	mov    %rbp,%rdi
    a483:	48 89 c3             	mov    %rax,%rbx
    a486:	e8 f5 a3 ff ff       	call   4880 <strlen@plt>
    a48b:	48 39 d8             	cmp    %rbx,%rax
    a48e:	0f 95 c0             	setne  %al
    a491:	eb d1                	jmp    a464 <__sprintf_chk@plt+0x5784>
    a493:	e8 49 89 c4 ff       	call   ffffffffffc52de1 <obstack_alloc_failed_handler@@Base+0xffffffffffc30d41>
    a498:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a49f:	00 
    a4a0:	f3 0f 1e fa          	endbr64 
    a4a4:	4c 01 df             	add    %r11,%rdi
    a4a7:	88 00                	mov    %al,(%rax)
    a4a9:	00 00                	add    %al,(%rax)
    a4ab:	48 8b 86 88 00 00 00 	mov    0x88(%rsi),%rax
    a4b2:	48                   	rex.W
    a4b3:	48 0f af c0          	imul   %rax,%rax
    a4b7:	00 49 48             	add    %cl,0x48(%rcx)
    a4ba:	4d 85 e3             	test   %r12,%r11
    a4bd:	4c 85 c6             	test   %r8,%rsi
    a4c0:	7f 75                	jg     a537 <__sprintf_chk@plt+0x5857>
    a4c2:	5d                   	pop    %rbp
    a4c3:	8c 48 09             	mov    %cs,0x9(%rax)
    a4c6:	d3 00                	roll   %cl,(%rax)
    a4c8:	41 54                	push   %r12
    a4ca:	55                   	push   %rbp
    a4cb:	48 83 ec 08          	sub    $0x8,%rsp
    a4cf:	48 8b 2f             	mov    (%rdi),%rbp
    a4d2:	4c 74 b0             	rex.WR je a485 <__sprintf_chk@plt+0x57a5>
    a4d5:	c2 6d 03             	ret    $0x36d
    a4d8:	00 00                	add    %al,(%rax)
    a4da:	c7                   	(bad)  
    a4db:	49 85 dc             	test   %rbx,%r12
    a4de:	00 00                	add    %al,(%rax)
    a4e0:	48 83 c4 08          	add    $0x8,%rsp
    a4e4:	48 c1 e1 2f          	shl    $0x2f,%rcx
    a4e8:	89 ef                	mov    %ebp,%edi
    a4ea:	5d                   	pop    %rbp
    a4eb:	41 5c                	pop    %r12
    a4ed:	0f 8f 4a fe ff ff    	jg     a33d <__sprintf_chk@plt+0x565d>
    a4f3:	4c 01 f3             	add    %r14,%rbx
    a4f6:	00 00                	add    %al,(%rax)
    a4f8:	c3                   	ret    
    a4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a500:	b8 01 00 00 00       	mov    $0x1,%eax
    a505:	4d 0f af d3          	imul   %r11,%r10
    a509:	1f                   	(bad)  
    a50a:	84 00                	test   %al,(%rax)
    a50c:	4d 09 c4             	or     %r8,%r12
    a50f:	00 0f                	add    %cl,(%rdi)
    a511:	8f                   	(bad)  
    a512:	71 03                	jno    a517 <__sprintf_chk@plt+0x5837>
    a514:	00 00                	add    %al,(%rax)
    a516:	48 c7 c1 39 fe ff ff 	mov    $0xfffffffffffffe39,%rcx
    a51d:	00 00                	add    %al,(%rax)
    a51f:	00 f3                	add    %dh,%bl
    a521:	0f 49 01             	cmovns (%rcx),%eax
    a524:	f3 8b 96 88 00 00 00 	repz mov 0x88(%rsi),%edx
    a52b:	48 8b 87 88 00 00 4d 	mov    0x4d000088(%rdi),%rax
    a532:	49 c1 eb 14          	shr    $0x14,%r11
    a536:	48 c1 e0 40          	shl    $0x40,%rax
    a53a:	39 8e 48 29 0f 85    	cmp    %ecx,-0x7af0d6b8(%rsi)
    a540:	d0 fc                	sar    %ah
    a542:	49 0f af f4          	imul   %r12,%rsi
    a546:	4d 0f af f8          	imul   %r8,%r15
    a54a:	55                   	push   %rbp
    a54b:	4c 39 d6             	cmp    %r10,%rsi
    a54e:	08 48 4d             	or     %cl,0x4d(%rax)
    a551:	31 f6                	xor    %esi,%esi
    a553:	85 b4 02 00 00 ff ff 	test   %esi,-0x10000(%rdx,%rax,1)
    a55a:	c7 00 00 00 00 49    	movl   $0x49000000,(%rax)
    a560:	c1 ea 49             	shr    $0x49,%edx
    a563:	0f af d7             	imul   %edi,%edx
    a566:	e6 48                	out    %al,$0x48
    a568:	48 0f 85 ff 02 00 48 	rex.W jne 4800a86e <obstack_alloc_failed_handler@@Base+0x47fe87ce>
    a56f:	39 d2                	cmp    %edx,%edx
    a571:	31 d7                	xor    %edx,%edi
    a573:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a578:	c3                   	ret    
    a579:	0f 1f 80 49 ff c6 00 	nopl   0xc6ff49(%rax)
    a580:	b8 4d 31 fb 49       	mov    $0x49fb314d,%eax
    a585:	f7 ff                	idiv   %edi
    a587:	2e 0f 1f 84 00 00 0f 	cs nopl -0x447af100(%rax,%rax,1)
    a58e:	85 bb 
    a590:	fd                   	std    
    a591:	ff                   	(bad)  
    a592:	ff                   	(bad)  
    a593:	ff                   	(bad)  
    a594:	ff c3                	inc    %ebx
    a596:	66 49 ff c3          	data16 inc %r11
    a59a:	84 00                	test   %al,(%rax)
    a59c:	00 00                	add    %al,(%rax)
    a59e:	00 4d 09             	add    %cl,0x9(%rbp)
    a5a1:	f9                   	stc    
    a5a2:	48 ff c2             	inc    %rdx
    a5a5:	48 c7 c0 89 fd ff ff 	mov    $0xfffffffffffffd89,%rax
    a5ac:	c7 01 0f 8f 0d fe    	movl   $0xfe0d8f0f,(%rcx)
    a5b2:	ff                   	(bad)  
    a5b3:	ff 94 c0 83 fa 09 0f 	call   *0xf09fa83(%rax,%rax,8)
    a5ba:	8f 04 fd ff ff f9 03 	pop    0x3f9ffff(,%rdi,8)
    a5c1:	74 2d                	je     a5f0 <__sprintf_chk@plt+0x5910>
    a5c3:	83 f9 09             	cmp    $0x9,%ecx
    a5c6:	74 28                	je     a5f0 <__sprintf_chk@plt+0x5910>
    a5c8:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    a5ce:	81 e2 00 f0 00 00    	and    $0xf000,%edx
    a5d4:	84 c0                	test   %al,%al
    a5d6:	74 38                	je     a610 <__sprintf_chk@plt+0x5930>
    a5d8:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    a5de:	74 4a                	je     a62a <__sprintf_chk@plt+0x594a>
    a5e0:	b8 01 49 c1 e3       	mov    $0xe3c14901,%eax
    a5e5:	48 89 f8             	mov    %rdi,%rax
    a5e8:	0f 1f 84 48 f7 0f 8f 	nopl   0x488f0ff7(%rax,%rcx,2)
    a5ef:	48 
    a5f0:	ff c6                	inc    %esi
    a5f2:	00 36                	add    %dh,(%rsi)
    a5f4:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    a5fa:	25 00 f0 00 00       	and    $0xf000,%eax
    a5ff:	3d 00 4c 0f af       	cmp    $0xaf0f4c00,%eax
    a604:	ea                   	(bad)  
    a605:	24 b8                	and    $0xb8,%al
    a607:	ff                   	(bad)  
    a608:	ff                   	(bad)  
    a609:	ff                   	(bad)  
    a60a:	ff c3                	inc    %ebx
    a60c:	0f 1f 40 00          	nopl   0x0(%rax)
    a610:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    a616:	25 00 f0 00 49       	and    $0x4900f000,%eax
    a61b:	c7 c5 14 fd ff ff    	mov    $0xfffffd14,%ebp
    a621:	b6 81                	mov    $0x81,%dh
    a623:	fa                   	cli    
    a624:	00 49 ff             	add    %cl,-0x1(%rcx)
    a627:	c3                   	ret    
    a628:	f5                   	cmc    
    a629:	dc 48 8b             	fmull  -0x75(%rax)
    a62c:	97                   	xchg   %eax,%edi
    a62d:	88 00                	mov    %al,(%rax)
    a62f:	00 00                	add    %al,(%rax)
    a631:	48 8b 86 49 89 fb 00 	mov    0xfb8949(%rsi),%rax
    a638:	48 09 f0             	or     %rsi,%rax
    a63b:	80 00 00             	addb   $0x0,(%rax)
    a63e:	00 48 39             	add    %cl,0x39(%rax)
    a641:	8f 80 00 00 00 7f    	pop    0x7f000000(%rax)
    a647:	be 7c 96 29 d0       	mov    $0xd029967c,%esi
    a64c:	49 09 d7             	or     %rdx,%r15
    a64f:	54                   	push   %rsp
    a650:	55                   	push   %rbp
    a651:	48 83 0f 8f          	orq    $0xffffffffffffff8f,(%rdi)
    a655:	03 fe                	add    %esi,%edi
    a657:	ff                   	(bad)  
    a658:	ff 8b 26 e8 b0 a0    	decl   -0x5f4f17da(%rbx)
    a65e:	ff                   	(bad)  
    a65f:	ff 49 0f             	decl   0xf(%rcx)
    a662:	af                   	scas   %es:(%rdi),%eax
    a663:	db 00                	fildl  (%rax)
    a665:	00 48 83             	add    %cl,-0x7d(%rax)
    a668:	c4                   	(bad)  
    a669:	08 4c 89 e6          	or     %cl,-0x1a(%rcx,%rcx,4)
    a66d:	48 0f 8f d9 03 00 00 	rex.W jg aa4d <__sprintf_chk@plt+0x5d6d>
    a674:	58                   	pop    %rax
    a675:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    a676:	ff                   	(bad)  
    a677:	ff 4d 01             	decl   0x1(%rbp)
    a67a:	c1 00 00             	roll   $0x0,(%rax)
    a67d:	00 48 ff             	add    %cl,-0x1(%rax)
    a680:	c2 48 39             	ret    $0x3948
    a683:	fe 8b 0f 84 87 02    	decb   0x287840f(%rbx)
    a689:	00 00                	add    %al,(%rax)
    a68b:	89 fa                	mov    %edi,%edx
    a68d:	8b bf a8 49 21 cd    	mov    -0x32deb658(%rdi),%edi
    a693:	48 c1 e6 2e          	shl    $0x2e,%rsi
    a697:	94                   	xchg   %eax,%esp
    a698:	c0 83 49 85 f5 85 c5 	rolb   $0xc5,-0x7a0a7ab7(%rbx)
    a69f:	fc                   	cld    
    a6a0:	ff                   	(bad)  
    a6a1:	ff                   	(bad)  
    a6a2:	ff 03                	incl   (%rbx)
    a6a4:	74 48                	je     a6ee <__sprintf_chk@plt+0x5a0e>
    a6a6:	f7 fa                	idiv   %edx
    a6a8:	09 74 25 8b          	or     %esi,-0x75(%rbp,%riz,1)
    a6ac:	8a ac 00 0f 8c aa fc 	mov    -0x35573f1(%rax,%rax,1),%ch
    a6b3:	ff                   	(bad)  
    a6b4:	ff 00                	incl   (%rax)
    a6b6:	00 48 31             	add    %cl,0x31(%rax)
    a6b9:	c0 35 81 f9 00 40 00 	shlb   $0x0,0x4000f981(%rip)        # 4001a041 <obstack_alloc_failed_handler@@Base+0x3fff7fa1>
    a6c0:	49 ff c0             	inc    %r8
    a6c3:	0f 49 c1             	cmovns %ecx,%eax
    a6c6:	e3 0c                	jrcxz  a6d4 <__sprintf_chk@plt+0x59f4>
    a6c8:	c3                   	ret    
    a6c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a6d0:	48 f7 f8             	idiv   %rax
    a6d3:	36 8b 86 ac 00 00 00 	ss mov 0xac(%rsi),%eax
    a6da:	49 ff c5             	inc    %r13
    a6dd:	00 00                	add    %al,(%rax)
    a6df:	3d 49 c1 e3 0b       	cmp    $0xbe3c149,%eax
    a6e4:	74 24                	je     a70a <__sprintf_chk@plt+0x5a2a>
    a6e6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a6eb:	c3                   	ret    
    a6ec:	0f 1f 40 00          	nopl   0x0(%rax)
    a6f0:	8b 4d 85             	mov    -0x7b(%rbp),%ecx
    a6f3:	c4                   	(bad)  
    a6f4:	00 00                	add    %al,(%rax)
    a6f6:	25 00 0f 8c 3d       	and    $0x3d8c0f00,%eax
    a6fb:	02 00                	add    (%rax),%al
    a6fd:	49 c7 c1 34 fd ff ff 	mov    $0xfffffffffffffd34,%r9
    a704:	00 40 00             	add    %al,0x0(%rax)
    a707:	4d 0f af c1          	imul   %r9,%r8
    a70b:	8b 49 c1             	mov    -0x3f(%rcx),%ecx
    a70e:	48 31 df             	xor    %rbx,%rdi
    a711:	48 8b 82 88 00 49 39 	mov    0x39490088(%rdx),%rax
    a718:	f9                   	stc    
    a719:	c1 e4 3e             	shl    $0x3e,%esp
    a71c:	00 00                	add    %al,(%rax)
    a71e:	00 48 c1             	add    %cl,-0x3f(%rax)
    a721:	e9 1c 00 00 00       	jmp    a742 <__sprintf_chk@plt+0x5a62>
    a726:	7f be                	jg     a6e6 <__sprintf_chk@plt+0x5a06>
    a728:	7c 99                	jl     a6c3 <__sprintf_chk@plt+0x59e3>
    a72a:	29 c8                	sub    %ecx,%eax
    a72c:	75 bd                	jne    a6eb <__sprintf_chk@plt+0x5a0b>
    a72e:	41 54                	push   %r12
    a730:	55                   	push   %rbp
    a731:	48 83 ec 08          	sub    $0x8,%rsp
    a735:	48 8b 2e             	mov    (%rsi),%rbp
    a738:	4c 8b 22             	mov    (%rdx),%r12
    a73b:	e8 d0 9f ff ff       	call   4710 <__errno_location@plt>
    a740:	c7 00 00 4d 01 d5    	movl   $0xd5014d00,(%rax)
    a746:	48 83 c4 08          	add    $0x8,%rsp
    a74a:	4c 89 e6             	mov    %r12,%rsi
    a74d:	48                   	rex.W
    a74e:	4d 31 e9             	xor    %r13,%r9
    a751:	41 5c                	pop    %r12
    a753:	49 ff c3             	inc    %r11
    a756:	48 c7 c0 fd fd ff ff 	mov    $0xfffffffffffffdfd,%rax
    a75d:	00 4c 21 0f          	add    %cl,0xf(%rcx,%riz,1)
    a761:	85 cb                	test   %ecx,%ebx
    a763:	01 00                	add    %eax,(%rax)
    a765:	00 57 49             	add    %dl,0x49(%rdi)
    a768:	39 f1                	cmp    %esi,%ecx
    a76a:	46 78 48             	rex.RX js a7b5 <__sprintf_chk@plt+0x5ad5>
    a76d:	8b e9                	mov    %ecx,%ebp
    a76f:	48 c1 e7 49          	shl    $0x49,%rdi
    a773:	89 fd                	mov    %edi,%ebp
    a775:	4a 7c 40             	rex.WX jl a7b8 <__sprintf_chk@plt+0x5ad8>
    a778:	29 4d 09             	sub    %ecx,0x9(%rbp)
    a77b:	e3 41                	jrcxz  a7be <__sprintf_chk@plt+0x5ade>
    a77d:	54                   	push   %rsp
    a77e:	55                   	push   %rbp
    a77f:	48 83 ec 08          	sub    $0x8,%rsp
    a783:	48 8b 2f             	mov    (%rdi),%rbp
    a786:	4c 8b 26             	mov    (%rsi),%r12
    a789:	e8 82 9f ff ff       	call   4710 <__errno_location@plt>
    a78e:	c7                   	(bad)  
    a78f:	4d 09 ef             	or     %r13,%r15
    a792:	00 00                	add    %al,(%rax)
    a794:	48 83 c4 08          	add    $0x8,%rsp
    a798:	4c 89 e6             	mov    %r12,%rsi
    a79b:	48 89 ef             	mov    %rbp,%rdi
    a79e:	5d                   	pop    %rbp
    a79f:	41                   	rex.B
    a7a0:	4d 85 c7             	test   %r8,%r15
    a7a3:	a3 48 c1 eb 03 0f 4d 	movabs %eax,0xc3094d0f03ebc148
    a7aa:	09 c3 
    a7ac:	00 00                	add    %al,(%rax)
    a7ae:	49 89 d5             	mov    %rdx,%r13
    a7b1:	0f 49 f7             	cmovns %edi,%esi
    a7b4:	f9                   	stc    
    a7b5:	00 00                	add    %al,(%rax)
    a7b7:	00 b8 01 00 00 00    	add    %bh,0x1(%rax)
    a7bd:	c3                   	ret    
    a7be:	66 49 f7 fa          	data16 idiv %r10
    a7c2:	ff                   	(bad)  
    a7c3:	ff                   	(bad)  
    a7c4:	ff c3                	inc    %ebx
    a7c6:	66 2e 0f 1f 84 49 c1 	cs nopw 0x927ebc1(%rcx,%rcx,2)
    a7cd:	eb 27 09 
    a7d0:	f3 0f 1e fa          	endbr64 
    a7d4:	48 8b 56 78          	mov    0x78(%rsi),%rdx
    a7d8:	48 0f 8f fd 00 00 00 	rex.W jg a8dc <__sprintf_chk@plt+0x5bfc>
    a7df:	f7 f8                	idiv   %eax
    a7e1:	39 4e 0f             	cmp    %ecx,0xf(%rsi)
    a7e4:	8f                   	(bad)  
    a7e5:	8f                   	(bad)  
    a7e6:	fc                   	cld    
    a7e7:	ff                   	(bad)  
    a7e8:	ff b5 02 00 00 54    	push   0x54000002(%rbp)
    a7ee:	48 89 fb             	mov    %rdi,%rbx
    a7f1:	ec                   	in     (%dx),%al
    a7f2:	e9 7e fe ff ff       	jmp    a675 <__sprintf_chk@plt+0x5995>
    a7f7:	4c                   	rex.WR
    a7f8:	4c 21 f6             	and    %r14,%rsi
    a7fb:	9f                   	lahf   
    a7fc:	ff                   	(bad)  
    a7fd:	ff c7                	inc    %edi
    a7ff:	00 00                	add    %al,(%rax)
    a801:	00 00                	add    %al,(%rax)
    a803:	00 49 c7             	add    %cl,-0x39(%rcx)
    a806:	c6 c2 02             	mov    $0x2,%dl
    a809:	00 00                	add    %al,(%rax)
    a80b:	48 89 ef             	mov    %rbp,%rdi
    a80e:	5d                   	pop    %rbp
    a80f:	41 5c                	pop    %r12
    a811:	e9 0f 84 6c 02       	jmp    26d2c25 <obstack_alloc_failed_handler@@Base+0x26b0b85>
    a816:	00 00                	add    %al,(%rax)
    a818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a81f:	00 
    a820:	c3                   	ret    
    a821:	0f 1f 48 01          	nopl   0x1(%rax)
    a825:	de 01                	fiadds (%rcx)
    a827:	00 00                	add    %al,(%rax)
    a829:	01 00                	add    %eax,(%rax)
    a82b:	00 00                	add    %al,(%rax)
    a82d:	c3                   	ret    
    a82e:	48 ff c0             	inc    %rax
    a831:	48 31 4d 21          	xor    %rcx,0x21(%rbp)
    a835:	ef                   	out    %eax,(%dx)
    a836:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a83d:	00 00 00 
    a840:	f3 0f 1e fa          	endbr64 
    a844:	49 c1 ea 17          	shr    $0x17,%r10
    a848:	48 8b 46 68          	mov    0x68(%rsi),%rax
    a84c:	48 8b 4e 60          	mov    0x60(%rsi),%rcx
    a850:	48                   	rex.W
    a851:	49                   	rex.WB
    a852:	4d 01 e7             	add    %r12,%r15
    a855:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    a856:	02 00                	add    (%rax),%al
    a858:	00 0f                	add    %cl,(%rdi)
    a85a:	85 b5 03 00 00 48    	test   %esi,0x48000003(%rbp)
    a860:	83 ec 0f             	sub    $0xf,%esp
    a863:	84 a9 01 00 00 26    	test   %ch,0x26000001(%rcx)
    a869:	e8 a2 9e ff eb       	call   ffffffffec004710 <obstack_alloc_failed_handler@@Base+0xffffffffebfe2670>
    a86e:	9d                   	popf   
    a86f:	49 0f 4c 09          	cmovl  (%r9),%rcx
    a873:	f1                   	int1   
    a874:	0f 8c d3 03 00 00    	jl     ac4d <__sprintf_chk@plt+0x5f6d>
    a87a:	d0 48 89             	rorb   -0x77(%rax)
    a87d:	ef                   	out    %eax,(%dx)
    a87e:	5d                   	pop    %rbp
    a87f:	41 5c                	pop    %r12
    a881:	e9 4a a2 ff ff       	jmp    4ad0 <strcoll@plt>
    a886:	66 48 01 d2          	data16 add %rdx,%rdx
    a88a:	28 00                	sub    %al,(%rax)
    a88c:	00 49 01             	add    %cl,0x1(%rcx)
    a88f:	fa                   	cli    
    a890:	c3                   	ret    
    a891:	0f 1f 80 48 01 d3 00 	nopl   0xd30148(%rax)
    a898:	49 39 fd             	cmp    %rdi,%r13
    a89b:	00 00                	add    %al,(%rax)
    a89d:	c3                   	ret    
    a89e:	66 90                	xchg   %ax,%ax
    a8a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a8a5:	c3                   	ret    
    a8a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x9490000(%rax,%rax,1)
    a8ad:	00 49 09 
    a8b0:	c1 0f 1e             	rorl   $0x1e,(%rdi)
    a8b3:	fa                   	cli    
    a8b4:	48 8b 56 68          	mov    0x68(%rsi),%rdx
    a8b8:	48 8b 47 68          	mov    0x68(%rdi),%rax
    a8bc:	48 8b 4f 60          	mov    0x60(%rdi),%rcx
    a8c0:	4c 01 d2             	add    %r10,%rdx
    a8c3:	60                   	(bad)  
    a8c4:	7f 4a                	jg     a910 <__sprintf_chk@plt+0x5c30>
    a8c6:	7c 40                	jl     a908 <__sprintf_chk@plt+0x5c28>
    a8c8:	49 01 d8             	add    %rbx,%r8
    a8cb:	34 41                	xor    $0x41,%al
    a8cd:	54                   	push   %rsp
    a8ce:	4d 0f 84 2b fd ff ff 	rex.WRB je a600 <__sprintf_chk@plt+0x5920>
    a8d5:	48 0f af f8          	imul   %rax,%rdi
    a8d9:	e8 32 9e ff ff       	call   4710 <__errno_location@plt>
    a8de:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    a8e4:	48 83 c4 08          	add    $0x8,%rsp
    a8e8:	4c 89 e6             	mov    %r12,%rsi
    a8eb:	48 89 ef             	mov    %rbp,%rdi
    a8ee:	5d                   	pop    %rbp
    a8ef:	48 c7 c7 b2 fe ff ff 	mov    $0xfffffffffffffeb2,%rdi
    a8f6:	fa                   	cli    
    a8f7:	2e 0f 1f 84 00 00 00 	cs nopl 0x0(%rax,%rax,1)
    a8fe:	00 00 
    a900:	c3                   	ret    
    a901:	0f 1f 80 48 f7 fb 00 	nopl   0xfbf748(%rax)
    a908:	b8 01 00 00 00       	mov    $0x1,%eax
    a90d:	c3                   	ret    
    a90e:	66 90                	xchg   %ax,%ax
    a910:	b8 4c 48 ff c0       	mov    $0xc0ff484c,%eax
    a915:	48 c1 e7 02          	shl    $0x2,%rdi
    a919:	1f                   	(bad)  
    a91a:	84 00                	test   %al,(%rax)
    a91c:	00 00                	add    %al,(%rax)
    a91e:	00 00                	add    %al,(%rax)
    a920:	4c 39 ca             	cmp    %r9,%rdx
    a923:	85 01                	test   %eax,(%rcx)
    a925:	02 75 c0             	add    -0x40(%rbp),%dh
    a928:	c6                   	(bad)  
    a929:	49 ff c2             	inc    %r10
    a92c:	49 c1 4c 21 c0 fa    	rorq   $0xfa,-0x40(%r9,%riz,1)
    a932:	03 0f                	add    (%rdi),%ecx
    a934:	94                   	xchg   %eax,%esp
    a935:	c0 83 fa 09 0f 85 ae 	rolb   $0xae,-0x7af0f606(%rbx)
    a93c:	01 4c 31 de          	add    %ecx,-0x22(%rcx,%rsi,1)
    a940:	fe                   	(bad)  
    a941:	ff                   	(bad)  
    a942:	ff 83 48 4d 31 d9    	incl   -0x26ceb2b8(%rbx)
    a948:	ff                   	(bad)  
    a949:	ff                   	(bad)  
    a94a:	ff 4d 01             	decl   0x1(%rbp)
    a94d:	f9                   	stc    
    a94e:	c5 e2 00             	(bad)
    a951:	f0 4d 01 e4          	lock add %r12,%r12
    a955:	4c 89 ea             	mov    %r13,%rdx
    a958:	c7                   	(bad)  
    a959:	0d 03 48 31 f8       	or     $0xf8314803,%eax
    a95e:	8f                   	(bad)  
    a95f:	0c 03                	or     $0x3,%al
    a961:	00 00                	add    %al,(%rax)
    a963:	00 00                	add    %al,(%rax)
    a965:	c3                   	ret    
    a966:	66 2e 0f 1f 84 4d 89 	cs nopw 0xc889(%rbp,%rcx,2)
    a96d:	c8 00 00 
    a970:	84 e9                	test   %ch,%cl
    a972:	9b                   	fwait
    a973:	00 00                	add    %al,(%rax)
    a975:	00 ac 00 00 00 25 00 	add    %ch,0x250000(%rax,%rax,1)
    a97c:	f0 00 00             	lock add %al,(%rax)
    a97f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    a984:	74 24                	je     a9aa <__sprintf_chk@plt+0x5cca>
    a986:	b8 ff ff 4c 29       	mov    $0x294cffff,%eax
    a98b:	f7 0f 1f 40 00 8b    	testl  $0x8b00401f,(%rdi)
    a991:	86 ac 00 48 c1 e7 34 	xchg   %ch,0x34e7c148(%rax,%rax,1)
    a998:	cb                   	lret   
    a999:	00 00                	add    %al,(%rax)
    a99b:	3d 00 40 48 c1       	cmp    $0xc1484000,%eax
    a9a0:	e8 31 81 fa 00       	call   fb2ad6 <obstack_alloc_failed_handler@@Base+0xf90a36>
    a9a5:	40 00 00             	rex add %al,(%rax)
    a9a8:	74 dc                	je     a986 <__sprintf_chk@plt+0x5ca6>
    a9aa:	48 09 c7             	or     %rax,%rdi
    a9ad:	68 48 8b 46 68       	push   $0x68468b48
    a9b2:	48 0f 84 a8 03 00 00 	rex.W je ad61 <__sprintf_chk@plt+0x6081>
    a9b9:	4c 31 f3             	xor    %r14,%rbx
    a9bc:	c1 e0 16             	shl    $0x16,%eax
    a9bf:	c7 c3 1c fc ff ff    	mov    $0xfffffc1c,%ebx
    a9c5:	48 83 ec 4d          	sub    $0x4d,%rsp
    a9c9:	29 ce                	sub    %ecx,%esi
    a9cb:	2f                   	(bad)  
    a9cc:	4c 8b 26             	mov    (%rsi),%r12
    a9cf:	e8 3c 9d ff ff       	call   4710 <__errno_location@plt>
    a9d4:	4c 01 e1             	add    %r12,%rcx
    a9d7:	48 c7 c0 c6 fd ff ff 	mov    $0xfffffffffffffdc6,%rax
    a9de:	48 c1 e3 0f          	shl    $0xf,%rbx
    a9e2:	4d 89 48 0f          	mov    %r9,0xf(%r8)
    a9e6:	af                   	scas   %es:(%rdi),%eax
    a9e7:	c1 e4 a0             	shl    $0xa0,%esp
    a9ea:	ff 0f                	decl   (%rdi)
    a9ec:	8c cf                	mov    %cs,%edi
    a9ee:	fe                   	(bad)  
    a9ef:	ff                   	(bad)  
    a9f0:	ff af f1 fa 8b 4c    	ljmp   *0x4c8bfaf1(%rdi)
    a9f6:	21 e7                	and    %esp,%edi
    a9f8:	00 00                	add    %al,(%rax)
    a9fa:	48 89 fa             	mov    %rdi,%rdx
    a9fd:	8b bf a8 00 00 00    	mov    0xa8(%rdi),%edi
    aa03:	83 f9 03             	cmp    $0x3,%ecx
    aa06:	0f                   	(bad)  
    aa07:	0f 84 cf fe ff ff    	je     a8dc <__sprintf_chk@plt+0x5bfc>
    aa0d:	94                   	xchg   %eax,%esp
    aa0e:	c1 09 c8             	rorl   $0xc8,(%rcx)
    aa11:	83 ff 49             	cmp    $0x49,%edi
    aa14:	c1 ef 0e             	shr    $0xe,%edi
    aa17:	ff 09                	decl   (%rcx)
    aa19:	74 25                	je     aa40 <__sprintf_chk@plt+0x5d60>
    aa1b:	8b 8a ac 00 00 00    	mov    0xac(%rdx),%ecx
    aa21:	81 e1 00 f0 00 00    	and    $0xf000,%ecx
    aa27:	84 c0                	test   %al,%al
    aa29:	74 35                	je     aa60 <__sprintf_chk@plt+0x5d80>
    aa2b:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    aa31:	74 48                	je     aa7b <__sprintf_chk@plt+0x5d9b>
    aa33:	85 fb                	test   %edi,%ebx
    aa35:	00 49 f7             	add    %cl,-0x9(%rcx)
    aa38:	fa                   	cli    
    aa39:	49 c7 c0 5e fe ff ff 	mov    $0xfffffffffffffe5e,%r8
    aa40:	39 f2                	cmp    %esi,%edx
    aa42:	75 49                	jne    aa8d <__sprintf_chk@plt+0x5dad>
    aa44:	c7 c5 50 03 e9 eb    	mov    $0xebe90350,%ebp
    aa4a:	00 00                	add    %al,(%rax)
    aa4c:	00 00                	add    %al,(%rax)
    aa4e:	00 3d 4d 01 e4 c9    	add    %bh,-0x361bfeb3(%rip)        # ffffffffc9e4aba1 <obstack_alloc_failed_handler@@Base+0xffffffffc9e28b01>
    aa54:	74 24                	je     aa7a <__sprintf_chk@plt+0x5d9a>
    aa56:	b8 4d 89 fd 0f       	mov    $0xffd894d,%eax
    aa5b:	af                   	scas   %es:(%rdi),%eax
    aa5c:	f5                   	cmc    
    aa5d:	1f                   	(bad)  
    aa5e:	40 00 48 c1          	rex add %cl,-0x3f(%rax)
    aa62:	e1 20                	loope  aa84 <__sprintf_chk@plt+0x5da4>
    aa64:	00 00                	add    %al,(%rax)
    aa66:	25 48 c1 e1 24       	and    $0x24e1c148,%eax
    aa6b:	c7 00 0f 49 85 fb    	movl   $0xfb85490f,(%rax)
    aa71:	ff 48 c1             	decl   -0x3f(%rax)
    aa74:	e2 0f                	loop   aa85 <__sprintf_chk@plt+0x5da5>
    aa76:	84 60 fd             	test   %ah,-0x3(%rax)
    aa79:	ff                   	(bad)  
    aa7a:	ff 8b 4e 68 48 8b    	decl   -0x74b797b2(%rbx)
    aa80:	42 68 48 8b 7a 48    	rex.X push $0x487a8b48
    aa86:	d1 e1                	shl    %ecx
    aa88:	7e 60                	jle    aaea <__sprintf_chk@plt+0x5e0a>
    aa8a:	7f ca                	jg     aa56 <__sprintf_chk@plt+0x5d76>
    aa8c:	4c 09 f8             	or     %r15,%rax
    aa8f:	c8 75 c9 41          	enter  $0xc975,$0x41
    aa93:	54                   	push   %rsp
    aa94:	55                   	push   %rbp
    aa95:	48 83 ec 08          	sub    $0x8,%rsp
    aa99:	48 8b 2e             	mov    (%rsi),%rbp
    aa9c:	4c 8b 22             	mov    (%rdx),%r12
    aa9f:	e8 6c 9c ff 0f       	call   10004710 <obstack_alloc_failed_handler@@Base+0xffe2670>
    aaa4:	8c 30                	mov    %?,(%rax)
    aaa6:	01 00                	add    %eax,(%rax)
    aaa8:	00 00                	add    %al,(%rax)
    aaaa:	7c 53                	jl     aaff <__sprintf_chk@plt+0x5e1f>
    aaac:	c4                   	(bad)  
    aaad:	08 0f                	or     %cl,(%rdi)
    aaaf:	84 f6                	test   %dh,%dh
    aab1:	49 f7 f9             	idiv   %r9
    aab4:	49 c1 e1 0f          	shl    $0xf,%r9
    aab8:	14 a0                	adc    $0xa0,%al
    aaba:	ff                   	(bad)  
    aabb:	ff 0f                	decl   (%rdi)
    aabd:	1f                   	(bad)  
    aabe:	40 00 f3             	add    %sil,%bl
    aac1:	0f 48 c1             	cmovs  %ecx,%eax
    aac4:	eb 36                	jmp    aafc <__sprintf_chk@plt+0x5e1c>
    aac6:	57                   	push   %rdi
    aac7:	78 48                	js     ab11 <__sprintf_chk@plt+0x5e31>
    aac9:	8b 46 78             	mov    0x78(%rsi),%eax
    aacc:	48 8b 4e 70          	mov    0x70(%rsi),%rcx
    aad0:	48 39 4f 70          	cmp    %rcx,0x70(%rdi)
    aad4:	7f 4a                	jg     ab20 <__sprintf_chk@plt+0x5e40>
    aad6:	7c 40                	jl     ab18 <__sprintf_chk@plt+0x5e38>
    aad8:	29 d0                	sub    %edx,%eax
    aada:	75 34                	jne    ab10 <__sprintf_chk@plt+0x5e30>
    aadc:	41 54                	push   %r12
    aade:	55                   	push   %rbp
    aadf:	48 83 ec 08          	sub    $0x8,%rsp
    aae3:	48 8b 2f             	mov    (%rdi),%rbp
    aae6:	4c 8b 26             	mov    (%rsi),%r12
    aae9:	e8 22 9c 75 dd       	call   ffffffffdd764710 <obstack_alloc_failed_handler@@Base+0xffffffffdd742670>
    aaee:	c7                   	(bad)  
    aaef:	49 c1 ee 16          	shr    $0x16,%r14
    aaf3:	49 f7 fa             	idiv   %r10
    aaf6:	c4                   	(bad)  
    aaf7:	08 4d 49             	or     %cl,0x49(%rbp)
    aafa:	ff 49 f7             	decl   -0x9(%rcx)
    aafd:	fe 49 c7             	decb   -0x39(%rcx)
    ab00:	c6                   	(bad)  
    ab01:	7d ff                	jge    ab02 <__sprintf_chk@plt+0x5e22>
    ab03:	ff                   	(bad)  
    ab04:	ff                   	(bad)  
    ab05:	ff 66 2e             	jmp    *0x2e(%rsi)
    ab08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ab0f:	00 
    ab10:	c3                   	ret    
    ab11:	0f 1f 48 09          	nopl   0x9(%rax)
    ab15:	d7                   	xlat   %ds:(%rbx)
    ab16:	39 dd                	cmp    %ebx,%ebp
    ab18:	b8 01 00 00 00       	mov    $0x1,%eax
    ab1d:	c3                   	ret    
    ab1e:	66 48 c1 eb 22       	data16 shr $0x22,%rbx
    ab23:	ff 49 c7             	decl   -0x39(%rcx)
    ab26:	c4                   	(bad)  
    ab27:	9a                   	(bad)  
    ab28:	fd                   	std    
    ab29:	ff                   	(bad)  
    ab2a:	ff 00                	incl   (%rax)
    ab2c:	00 00                	add    %al,(%rax)
    ab2e:	00 00                	add    %al,(%rax)
    ab30:	f3 0f 84 f6 00 00 00 	repz je ac2d <__sprintf_chk@plt+0x5f4d>
    ab37:	78 48                	js     ab81 <__sprintf_chk@plt+0x5ea1>
    ab39:	8b 47 78             	mov    0x78(%rdi),%eax
    ab3c:	49 ff c3             	inc    %r11
    ab3f:	74 49                	je     ab8a <__sprintf_chk@plt+0x5eaa>
    ab41:	31 49 c7             	xor    %ecx,-0x39(%rcx)
    ab44:	c7                   	(bad)  
    ab45:	52                   	push   %rdx
    ab46:	01 00                	add    %eax,(%rax)
    ab48:	00 4c 49 f7          	add    %cl,-0x9(%rcx,%rcx,2)
    ab4c:	fe                   	(bad)  
    ab4d:	54                   	push   %rsp
    ab4e:	55                   	push   %rbp
    ab4f:	4d 21 cd             	and    %r9,%r13
    ab52:	08 48 8b             	or     %cl,-0x75(%rax)
    ab55:	2e 4c 8b 27          	cs mov (%rdi),%r12
    ab59:	e8 b2 9b ff ff       	call   4710 <__errno_location@plt>
    ab5e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ab64:	48 83 c4 4d          	add    $0x4d,%rsp
    ab68:	21 c1                	and    %eax,%ecx
    ab6a:	e6 48                	out    %al,$0x48
    ab6c:	89 ef                	mov    %ebp,%edi
    ab6e:	5d                   	pop    %rbp
    ab6f:	4d 09 d7             	or     %r10,%r15
    ab72:	5a                   	pop    %rdx
    ab73:	49 ff c2             	inc    %r10
    ab76:	66 2e 0f 1f 84 00 49 	cs nopw 0x37eec149(%rax,%rax,1)
    ab7d:	c1 ee 37 
    ab80:	ff 0f                	decl   (%rdi)
    ab82:	1f                   	(bad)  
    ab83:	80 00 00             	addb   $0x0,(%rax)
    ab86:	00 00                	add    %al,(%rax)
    ab88:	b8 01 00 7c 2c       	mov    $0x2c7c0001,%eax
    ab8d:	c3                   	ret    
    ab8e:	66 90                	xchg   %ax,%ax
    ab90:	b8 ff 48 39 0f       	mov    $0xf3948ff,%eax
    ab95:	8f                   	(bad)  
    ab96:	a1 00 00 00 84 00 00 	movabs 0x84000000,%eax
    ab9d:	00 00 
    ab9f:	00 f3                	add    %dh,%bl
    aba1:	eb 90                	jmp    ab33 <__sprintf_chk@plt+0x5e53>
    aba3:	49 31 ca             	xor    %rcx,%r10
    aba6:	c1 00 00             	roll   $0x0,(%rax)
    aba9:	00 8b 8f a8 00 00    	add    %cl,0xa88f(%rbx)
    abaf:	00 83 fa 03 0f 94    	add    %al,-0x6bf0fc06(%rbx)
    abb5:	c0 83 fa 09 0f 94 c2 	rolb   $0xc2,-0x6bf0f606(%rbx)
    abbc:	4c 85 c6             	test   %r8,%rsi
    abbf:	f9                   	stc    
    abc0:	49 31 cc             	xor    %rcx,%r12
    abc3:	4d 39 e7             	cmp    %r12,%r15
    abc6:	74 49                	je     ac11 <__sprintf_chk@plt+0x5f31>
    abc8:	c1 ec 2a             	shr    $0x2a,%esp
    abcb:	00 00                	add    %al,(%rax)
    abcd:	00 81 e2 00 f0 49    	add    %al,0x49f000e2(%rcx)
    abd3:	21 f5                	and    %esi,%ebp
    abd5:	c0 74 38 81 fa       	shlb   $0xfa,-0x7f(%rax,%rdi,1)
    abda:	00 40 49             	add    %al,0x49(%rax)
    abdd:	ff c1                	inc    %ecx
    abdf:	4a b8 01 00 74 ce c3 	rex.WX movabs $0xf2e66c3ce740001,%rax
    abe6:	66 2e 0f 
    abe9:	1f                   	(bad)  
    abea:	e9 a2 03 00 00       	jmp    af91 <__sprintf_chk@plt+0x62b1>
    abef:	00 84 c0 4c 49 89 c8 	add    %al,-0x3776b6b4(%rax,%rax,8)
    abf6:	ac                   	lods   %ds:(%rsi),%al
    abf7:	00 00                	add    %al,(%rax)
    abf9:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 19bff <_obstack_memory_used@@Base+0x944f>
    abff:	3d 00 40 00 00       	cmp    $0x4000,%eax
    ac04:	74 24                	je     ac2a <__sprintf_chk@plt+0x5f4a>
    ac06:	b8 ff ff ff 4d       	mov    $0x4dffffff,%eax
    ac0b:	21 ec                	and    %ebp,%esp
    ac0d:	1f                   	(bad)  
    ac0e:	40 00 48 ff          	rex add %cl,-0x1(%rax)
    ac12:	c7 00 00 00 25 00    	movl   $0x250000,(%rax)
    ac18:	f0 00 4d 0f          	lock add %cl,0xf(%rbp)
    ac1c:	af                   	scas   %es:(%rdi),%eax
    ac1d:	f7 00 00 74 b6 81    	testl  $0x81b67400,(%rax)
    ac23:	fa                   	cli    
    ac24:	00 40 00             	add    %al,0x0(%rax)
    ac27:	00 4c 89 f8          	add    %cl,-0x8(%rcx,%rcx,4)
    ac2b:	8b 57 78             	mov    0x78(%rdi),%edx
    ac2e:	48 8b 7f 37          	mov    0x37(%rdi),%rdi
    ac32:	48 8b 48 ff          	mov    -0x1(%rax),%rcx
    ac36:	c2 39 4f             	ret    $0x4f39
    ac39:	70 7f                	jo     acba <__sprintf_chk@plt+0x5fda>
    ac3b:	74 68                	je     aca5 <__sprintf_chk@plt+0x5fc5>
    ac3d:	48 21 f7             	and    %rsi,%rdi
    ac40:	75 4d                	jne    ac8f <__sprintf_chk@plt+0x5faf>
    ac42:	89 ed                	mov    %ebp,%ebp
    ac44:	55                   	push   %rbp
    ac45:	48 83 ec 08          	sub    $0x8,%rsp
    ac49:	4c 39 c2             	cmp    %r8,%rdx
    ac4c:	4c 8b 26             	mov    (%rsi),%r12
    ac4f:	e8 bc 9a ff ff       	call   4710 <__errno_location@plt>
    ac54:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ac5a:	49 c7 c4 75 ff ff ff 	mov    $0xffffffffffffff75,%r12
    ac61:	49 f7 f8             	idiv   %r8
    ac64:	5d                   	pop    %rbp
    ac65:	41 5c                	pop    %r12
    ac67:	e9 64 9e ff ff       	jmp    4ad0 <strcoll@plt>
    ac6c:	0f 1f 49 c7          	nopl   -0x39(%rcx)
    ac70:	4c                   	rex.WR
    ac71:	4d 39 f5             	cmp    %r14,%r13
    ac74:	00 27                	add    %ah,(%rdi)
    ac76:	ff                   	(bad)  
    ac77:	ff                   	(bad)  
    ac78:	ff 0f                	decl   (%rdi)
    ac7a:	1f                   	(bad)  
    ac7b:	80 00 00             	addb   $0x0,(%rax)
    ac7e:	00 00                	add    %al,(%rax)
    ac80:	f3 0f 1e fa          	endbr64 
    ac84:	8b 8e a8 00 00 00    	mov    0xa8(%rsi),%ecx
    ac8a:	48 89 fa             	mov    %rdi,%rdx
    ac8d:	8b bf a8 00 00 00    	mov    0xa8(%rdi),%edi
    ac93:	83 f9 03             	cmp    $0x3,%ecx
    ac96:	0f 0f 85 4d 49 39 c4 	pfmin  -0x3bc6b6b3(%rbp),%mm0
    ac9d:	94 
    ac9e:	c1 09 c8             	rorl   $0xc8,(%rcx)
    aca1:	83 ff 03             	cmp    $0x3,%edi
    aca4:	74 2a                	je     acd0 <__sprintf_chk@plt+0x5ff0>
    aca6:	4c 89 e3             	mov    %r12,%rbx
    aca9:	74 25                	je     acd0 <__sprintf_chk@plt+0x5ff0>
    acab:	8b 8a 49 31 49 c1    	mov    -0x3eb6ceb7(%rdx),%ecx
    acb1:	ec                   	in     (%dx),%al
    acb2:	49 c7                	rex.WB (bad) 
    acb4:	4c 89 f3             	mov    %r14,%rbx
    acb7:	00 00                	add    %al,(%rax)
    acb9:	74 48                	je     ad03 <__sprintf_chk@plt+0x6023>
    acbb:	89 db                	mov    %ebx,%ebx
    acbd:	00 40 00             	add    %al,0x0(%rax)
    acc0:	00 74 47 49          	add    %dh,0x49(%rdi,%rax,2)
    acc4:	29 fa                	sub    %edi,%edx
    acc6:	00 00                	add    %al,(%rax)
    acc8:	c3                   	ret    
    acc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    acd0:	84 c0                	test   %al,%al
    acd2:	75 36                	jne    ad0a <__sprintf_chk@plt+0x602a>
    acd4:	8b 86 ac 00 e9 cc    	mov    -0x3316ff54(%rsi),%eax
    acda:	00 00                	add    %al,(%rax)
    acdc:	00 00                	add    %al,(%rax)
    acde:	00 3d 00 40 00 00    	add    %bh,0x4000(%rip)        # ece4 <__sprintf_chk@plt+0xa004>
    ace4:	74 24                	je     ad0a <__sprintf_chk@plt+0x602a>
    ace6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    aceb:	c3                   	ret    
    acec:	0f 1f 40 00          	nopl   0x0(%rax)
    acf0:	8b 4c 39 e0          	mov    -0x20(%rcx,%rdi,1),%ecx
    acf4:	00 00                	add    %al,(%rax)
    acf6:	25 e9 c4 fc ff       	and    $0xfffcc4e9,%eax
    acfb:	ff 00                	incl   (%rax)
    acfd:	40 00 00             	rex add %al,(%rax)
    ad00:	74 b9                	je     acbb <__sprintf_chk@plt+0x5fdb>
    ad02:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    ad08:	4d 0f af f5          	imul   %r13,%r14
    ad0c:	4e 78 48             	rex.WRX js ad57 <__sprintf_chk@plt+0x6077>
    ad0f:	8b 42 78             	mov    0x78(%rdx),%eax
    ad12:	48 8b 7a 70          	mov    0x70(%rdx),%rdi
    ad16:	48 39 7e 70          	cmp    %rdi,0x70(%rsi)
    ad1a:	7f ca                	jg     ace6 <__sprintf_chk@plt+0x6006>
    ad1c:	7c a5                	jl     acc3 <__sprintf_chk@plt+0x5fe3>
    ad1e:	29 c8                	sub    %ecx,%eax
    ad20:	75 c9                	jne    aceb <__sprintf_chk@plt+0x600b>
    ad22:	41                   	rex.B
    ad23:	4d 89 c7             	mov    %r8,%r15
    ad26:	83 4d 29 da          	orl    $0xffffffda,0x29(%rbp)
    ad2a:	8b 2e                	mov    (%rsi),%ebp
    ad2c:	4c 8b 22             	mov    (%rdx),%r12
    ad2f:	e8 dc 99 ff ff       	call   4710 <__errno_location@plt>
    ad34:	c7 00 00 00 00 0f    	movl   $0xf000000,(%rax)
    ad3a:	85 4d 31             	test   %ecx,0x31(%rbp)
    ad3d:	f6 00 89             	testb  $0x89,(%rax)
    ad40:	49 39 cf             	cmp    %rcx,%r15
    ad43:	ef                   	out    %eax,(%dx)
    ad44:	5d                   	pop    %rbp
    ad45:	41 5c                	pop    %r12
    ad47:	e9 84 48 c7 c1       	jmp    ffffffffc1c7f5d0 <obstack_alloc_failed_handler@@Base+0xffffffffc1c5d530>
    ad4c:	e3 03                	jrcxz  ad51 <__sprintf_chk@plt+0x6071>
    ad4e:	00 00                	add    %al,(%rax)
    ad50:	a8 48                	test   $0x48,%al
    ad52:	21 da                	and    %ebx,%edx
    ad54:	e6 20                	out    %al,$0x20
    ad56:	ff                   	(bad)  
    ad57:	ff                   	(bad)  
    ad58:	ff 0f                	decl   (%rdi)
    ad5a:	49 09 f8             	or     %rdi,%r8
    ad5d:	0f 85 1f 03 00 00    	jne    b082 <__sprintf_chk@plt+0x63a2>
    ad63:	fa                   	cli    
    ad64:	49 f7 fc             	idiv   %r12
    ad67:	48                   	rex.W
    ad68:	48 39 46 48          	cmp    %rax,0x48(%rsi)
    ad6c:	7c 42                	jl     adb0 <__sprintf_chk@plt+0x60d0>
    ad6e:	75 30                	jne    ada0 <__sprintf_chk@plt+0x60c0>
    ad70:	41 54                	push   %r12
    ad72:	55                   	push   %rbp
    ad73:	48 83 ec 08          	sub    $0x8,%rsp
    ad77:	0f 85 e0 03 00 00    	jne    b15d <__sprintf_chk@plt+0x647d>
    ad7d:	e8 8e 99 ff 4d       	call   4e004710 <obstack_alloc_failed_handler@@Base+0x4dfe2670>
    ad82:	31 f6                	xor    %esi,%esi
    ad84:	00 00                	add    %al,(%rax)
    ad86:	00 00                	add    %al,(%rax)
    ad88:	48 83 c4 49          	add    $0x49,%rsp
    ad8c:	ff c2                	inc    %edx
    ad8e:	e6 48                	out    %al,$0x48
    ad90:	89 ef                	mov    %ebp,%edi
    ad92:	5d                   	pop    %rbp
    ad93:	41 5c                	pop    %r12
    ad95:	49 09 dc             	or     %rbx,%r12
    ad98:	ff                   	(bad)  
    ad99:	ff 66 e9             	jmp    *-0x17(%rsi)
    ad9c:	03 03                	add    (%rbx),%eax
    ad9e:	00 00                	add    %al,(%rax)
    ada0:	b8 01 00 00 00       	mov    $0x1,%eax
    ada5:	c3                   	ret    
    ada6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    adad:	00 00 00 
    adb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    adb5:	c3                   	ret    
    adb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    adbd:	00 00 00 
    adc0:	f3 0f 1e fa          	endbr64 
    adc4:	48 8b 46 48          	mov    0x48(%rsi),%rax
    adc8:	0f 8c 06 4c 4d 0f    	jl     f4df9d4 <obstack_alloc_failed_handler@@Base+0xf4bd934>
    adce:	af                   	scas   %es:(%rdi),%eax
    adcf:	cf                   	iret   
    add0:	41 0f 8f 4b 01 00 00 	rex.B jg af22 <__sprintf_chk@plt+0x6242>
    add7:	48                   	rex.W
    add8:	48 ff c7             	inc    %rdi
    addb:	8b 27                	mov    (%rdi),%esp
    addd:	e8 2e 99 ff ff       	call   4710 <__errno_location@plt>
    ade2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ade8:	48 83 c4 08          	add    $0x8,%rsp
    adec:	48 c7 c6 89 fd ff ff 	mov    $0xfffffffffffffd89,%rsi
    adf3:	41 5c                	pop    %r12
    adf5:	e9 d6 9c ff ff       	jmp    4ad0 <strcoll@plt>
    adfa:	66 0f 49 f7          	cmovns %di,%si
    adfe:	fe 00                	incb   (%rax)
    ae00:	b8 01 00 49 c1       	mov    $0xc1490001,%eax
    ae05:	e4 03                	in     $0x3,%al
    ae07:	2e 49 c1 ef 0f       	cs shr $0xf,%r15
    ae0c:	00 00                	add    %al,(%rax)
    ae0e:	00 00                	add    %al,(%rax)
    ae10:	b8 49 d1 e4 ff       	mov    $0xffe4d149,%eax
    ae15:	c3                   	ret    
    ae16:	0f 8f 4d 02 00 00    	jg     b069 <__sprintf_chk@plt+0x6389>
    ae1c:	00 00                	add    %al,(%rax)
    ae1e:	00 49 c1             	add    %cl,-0x3f(%rcx)
    ae21:	e6 35                	out    %al,$0x35
    ae23:	fa                   	cli    
    ae24:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    ae2a:	8b 49 c7             	mov    -0x39(%rcx),%ecx
    ae2d:	c7                   	(bad)  
    ae2e:	8f 03                	pop    (%rbx)
    ae30:	00 00                	add    %al,(%rax)
    ae32:	09 0f                	or     %ecx,(%rdi)
    ae34:	94                   	xchg   %eax,%esp
    ae35:	c0 83 fa 4d 4c 31 49 	rolb   $0x49,0x314c4dfa(%rbx)
    ae3c:	39 fc                	cmp    %edi,%esp
    ae3e:	83 f9 03             	cmp    $0x3,%ecx
    ae41:	74 2d                	je     ae70 <__sprintf_chk@plt+0x6190>
    ae43:	83 4d 89 dd          	orl    $0xffffffdd,-0x77(%rbp)
    ae47:	49 39 f8             	cmp    %rdi,%r8
    ae4a:	ac                   	lods   %ds:(%rsi),%al
    ae4b:	0f 84 e9 02 00 00    	je     b13a <__sprintf_chk@plt+0x645a>
    ae51:	f0 00 00             	lock add %al,(%rax)
    ae54:	84 c0                	test   %al,%al
    ae56:	48 c1 e8 28          	shr    $0x28,%rax
    ae5a:	00 4c 01 ca          	add    %cl,-0x36(%rcx,%rax,1)
    ae5e:	74 4a                	je     aeaa <__sprintf_chk@plt+0x61ca>
    ae60:	b8 01 00 00 00       	mov    $0x1,%eax
    ae65:	c3                   	ret    
    ae66:	66 49 c1 e9 36       	data16 shr $0x36,%r9
    ae6b:	7a ff                	jp     ae6c <__sprintf_chk@plt+0x618c>
    ae6d:	ff                   	(bad)  
    ae6e:	ff 00                	incl   (%rax)
    ae70:	84 49 85             	test   %cl,-0x7b(%rcx)
    ae73:	df 8b 86 ac 00 49    	fisttps 0x4900ac86(%rbx)
    ae79:	89 d2                	mov    %edx,%edx
    ae7b:	00 f0                	add    %dh,%al
    ae7d:	00 00                	add    %al,(%rax)
    ae7f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    ae84:	4c 29 db             	sub    %r11,%rbx
    ae87:	ff                   	(bad)  
    ae88:	ff                   	(bad)  
    ae89:	ff 0f                	decl   (%rdi)
    ae8b:	8c 0f                	mov    %cs,(%rdi)
    ae8d:	ff                   	(bad)  
    ae8e:	ff                   	(bad)  
    ae8f:	ff 8b 86 ac 00 0f    	decl   0xf00ac86(%rbx)
    ae95:	8f                   	(bad)  
    ae96:	3b 03                	cmp    (%rbx),%eax
    ae98:	00 00                	add    %al,(%rax)
    ae9a:	00 3d 00 0f 8c 68    	add    %bh,0x688c0f00(%rip)        # 688cbda0 <obstack_alloc_failed_handler@@Base+0x688a9d00>
    aea0:	49 c7 c4 dc 02 00 00 	mov    $0x2dc,%r12
    aea7:	39 c2                	cmp    %eax,%edx
    aea9:	dc 48 8b             	fmull  -0x75(%rax)
    aeac:	47                   	rex.RXB
    aead:	48 0f 8f 71 02 00 00 	rex.W jg b125 <__sprintf_chk@plt+0x6445>
    aeb4:	0f 8f a0 00 48 4d    	jg     4d48af5a <obstack_alloc_failed_handler@@Base+0x4d468eba>
    aeba:	0f af ce             	imul   %esi,%ecx
    aebd:	48 8b 2f             	mov    (%rdi),%rbp
    aec0:	4c                   	rex.WR
    aec1:	48                   	rex.W
    aec2:	49 0f af c5          	imul   %r13,%rax
    aec6:	e1 f7                	loope  aebf <__sprintf_chk@plt+0x61df>
    aec8:	fe 00                	incb   (%rax)
    aeca:	00 00                	add    %al,(%rax)
    aecc:	0f 8f aa 02 00 00    	jg     b17c <__sprintf_chk@plt+0x649c>
    aed2:	4c 89 e6             	mov    %r12,%rsi
    aed5:	48 89 ef             	mov    %rbp,%rdi
    aed8:	5d                   	pop    %rbp
    aed9:	0f 85 71 03 00 00    	jne    b250 <__sprintf_chk@plt+0x6570>
    aedf:	ff f3                	push   %rbx
    aee1:	0f 1e fa             	nop    %edx
    aee4:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    aeea:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    aef0:	83 49 c1 e8          	orl    $0xffffffe8,-0x3f(%rcx)
    aef4:	25 c0 83 fa 03       	and    $0x3fa83c0,%eax
    aef9:	0f 94 c2             	sete   %dl
    aefc:	48 29 d9             	sub    %rbx,%rcx
    aeff:	f9                   	stc    
    af00:	03 74 4d 31          	add    0x31(%rbp,%rcx,2),%esi
    af04:	fb                   	sti    
    af05:	02 00                	add    (%rax),%al
    af07:	00 8b 97 48 f7 fb    	add    %cl,-0x408b769(%rbx)
    af0d:	00 81 e2 00 f0 00    	add    %al,0xf000e2(%rcx)
    af13:	0f 85 ba 03 00 00    	jne    b2d3 <__sprintf_chk@plt+0x65f3>
    af19:	fa                   	cli    
    af1a:	00 40 00             	add    %al,0x0(%rax)
    af1d:	00 74 4a b8          	add    %dh,-0x48(%rdx,%rcx,2)
    af21:	01 00                	add    %eax,(%rax)
    af23:	00 00                	add    %al,(%rax)
    af25:	c3                   	ret    
    af26:	66 2e 0f 1f 84 00 00 	cs nopw 0x48000000(%rax,%rax,1)
    af2d:	00 00 48 
    af30:	c1 e6 14             	shl    $0x14,%esi
    af33:	54                   	push   %rsp
    af34:	03 00                	add    (%rax),%eax
    af36:	00 00                	add    %al,(%rax)
    af38:	00 00                	add    %al,(%rax)
    af3a:	25 00 f0 00 49       	and    $0x4900f000,%eax
    af3f:	ff c1                	inc    %ecx
    af41:	40 00 00             	rex add %al,(%rax)
    af44:	74 24                	je     af6a <__sprintf_chk@plt+0x628a>
    af46:	b8 ff ff 0f 84       	mov    $0x840fffff,%eax
    af4b:	75 fe                	jne    af4b <__sprintf_chk@plt+0x626b>
    af4d:	ff                   	(bad)  
    af4e:	ff 00                	incl   (%rax)
    af50:	8b 86 ac 49 ff c0    	mov    -0x3f00b654(%rsi),%eax
    af56:	25 48 01 49 c7       	and    $0xc7490148,%eax
    af5b:	c1 35 ff ff ff 74 b6 	shll   $0xb6,0x74ffffff(%rip)        # 7500af61 <obstack_alloc_failed_handler@@Base+0x74fe8ec1>
    af62:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    af68:	74 dc                	je     af46 <__sprintf_chk@plt+0x6266>
    af6a:	48 8b 46 48          	mov    0x48(%rsi),%rax
    af6e:	48 39 49 c1          	cmp    %rcx,-0x3f(%rcx)
    af72:	e6 10                	out    %al,$0x10
    af74:	1e                   	(bad)  
    af75:	49 c7 c5 6d 03 00 00 	mov    $0x36d,%r13
    af7c:	08 48 48             	or     %cl,0x48(%rax)
    af7f:	ff c6                	inc    %esi
    af81:	8b 27                	mov    (%rdi),%esp
    af83:	e8 88 97 ff ff       	call   4710 <__errno_location@plt>
    af88:	4c 29 fa             	sub    %r15,%rdx
    af8b:	00 00                	add    %al,(%rax)
    af8d:	00 48 83             	add    %cl,-0x7d(%rax)
    af90:	c4                   	(bad)  
    af91:	0f 49 31             	cmovns (%rcx),%esi
    af94:	d4                   	(bad)  
    af95:	00 00                	add    %al,(%rax)
    af97:	ef                   	out    %eax,(%dx)
    af98:	5d                   	pop    %rbp
    af99:	41 5c                	pop    %r12
    af9b:	e9 30 9b ff ff       	jmp    4ad0 <strcoll@plt>
    afa0:	f3 0f 1e fa          	endbr64 
    afa4:	41 54                	push   %r12
    afa6:	55                   	push   %rbp
    afa7:	48 83 ec 08          	sub    $0x8,%rsp
    afab:	4c 8b 26             	mov    (%rsi),%r12
    afae:	48 8b 2f             	mov    (%rdi),%rbp
    afb1:	e8 5a 97 ff ff       	call   4710 <__errno_location@plt>
    afb6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    afbc:	48 83 c4 08          	add    $0x8,%rsp
    afc0:	4c 89 e6             	mov    %r12,%rsi
    afc3:	48 89 ef             	mov    %rbp,%rdi
    afc6:	5d                   	pop    %rbp
    afc7:	41 5c                	pop    %r12
    afc9:	e9 02 9b ff ff       	jmp    4ad0 <strcoll@plt>
    afce:	66 90                	xchg   %ax,%ax
    afd0:	49 09 d6             	or     %rdx,%r14
    afd3:	8c 85 02 49 4d 09    	mov    %es,0x94d4902(%rbp)
    afd9:	dc 08                	fmull  (%rax)
    afdb:	4c 8b 27             	mov    (%rdi),%r12
    afde:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
    afe2:	e2 1d                	loop   b001 <__sprintf_chk@plt+0x6321>
    afe4:	ff                   	(bad)  
    afe5:	ff 48 c7             	decl   -0x39(%rax)
    afe8:	c0 6b fd ff          	shrb   $0xff,-0x3(%rbx)
    afec:	0f 84 a6 fd 0f 84    	je     ffffffff8410ad98 <obstack_alloc_failed_handler@@Base+0xffffffff840e8cf8>
    aff2:	95                   	xchg   %eax,%ebp
    aff3:	02 00                	add    (%rax),%al
    aff5:	00 5d 41             	add    %bl,0x41(%rbp)
    aff8:	5c                   	pop    %rsp
    aff9:	4c 31 d2             	xor    %r10,%rdx
    affc:	ff                   	(bad)  
    affd:	ff 66 90             	jmp    *-0x70(%rsi)
    b000:	f3 0f 1e fa          	endbr64 
    b004:	8b 96 a8 00 00 00    	mov    0xa8(%rsi),%edx
    b00a:	8b 8f a8 00 00 00    	mov    0xa8(%rdi),%ecx
    b010:	83 fa 03             	cmp    $0x3,%edx
    b013:	0f 94 c0             	sete   %al
    b016:	83 fa 09             	cmp    $0x9,%edx
    b019:	0f 94 c2             	sete   %dl
    b01c:	49 c1 ec 20          	shr    $0x20,%r12
    b020:	0f 84 34 fd ff ff    	je     ad5a <__sprintf_chk@plt+0x607a>
    b026:	74 28                	je     b050 <__sprintf_chk@plt+0x6370>
    b028:	8b 97 ac 00 00 00    	mov    0xac(%rdi),%edx
    b02e:	81 e2 00 49 85 d7    	and    $0xd7854900,%edx
    b034:	84 c0                	test   %al,%al
    b036:	74 4c                	je     b084 <__sprintf_chk@plt+0x63a4>
    b038:	31 d2                	xor    %edx,%edx
    b03a:	00 40 00             	add    %al,0x0(%rax)
    b03d:	00 74 4a b8          	add    %dh,-0x48(%rdx,%rcx,2)
    b041:	01 00                	add    %eax,(%rax)
    b043:	00 48 39             	add    %cl,0x39(%rax)
    b046:	ff 2e                	ljmp   *(%rsi)
    b048:	0f 1f 84 00 00 48 e9 	nopl   0x4de94800(%rax,%rax,1)
    b04f:	4d 
    b050:	85 f3                	test   %esi,%ebx
    b052:	ff 36                	push   (%rsi)
    b054:	8b 49 c1             	mov    -0x3f(%rcx),%ecx
    b057:	ec                   	in     (%dx),%al
    b058:	3c 4d                	cmp    $0x4d,%al
    b05a:	29 eb                	sub    %ebp,%ebx
    b05c:	21 c8                	and    %ecx,%eax
    b05e:	85 fc                	test   %edi,%esp
    b060:	ff                   	(bad)  
    b061:	ff 85 82 fe ff ff    	incl   -0x17e(%rbp)
    b067:	ff                   	(bad)  
    b068:	ff                   	(bad)  
    b069:	ff                   	(bad)  
    b06a:	ff c3                	inc    %ebx
    b06c:	0f 1f 40 00          	nopl   0x0(%rax)
    b070:	8b 86 ac 00 00 49    	mov    0x490000ac(%rsi),%eax
    b076:	ff c3                	inc    %ebx
    b078:	f0 00 00             	lock add %al,(%rax)
    b07b:	3d 00 40 00 00       	cmp    $0x4000,%eax
    b080:	74 b6                	je     b038 <__sprintf_chk@plt+0x6358>
    b082:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    b088:	74 dc                	je     b066 <__sprintf_chk@plt+0x6386>
    b08a:	41 54                	push   %r12
    b08c:	55                   	push   %rbp
    b08d:	48 83 ec 48          	sub    $0x48,%rsp
    b091:	89 f6                	mov    %esi,%esi
    b093:	85 e3                	test   %esp,%ebx
    b095:	8b 2f                	mov    (%rdi),%ebp
    b097:	e8 74 96 ff ff       	call   4710 <__errno_location@plt>
    b09c:	c7                   	(bad)  
    b09d:	4c 39 f3             	cmp    %r14,%rbx
    b0a0:	00 00                	add    %al,(%rax)
    b0a2:	48 83 c4 08          	add    $0x8,%rsp
    b0a6:	4c 89 e9             	mov    %r13,%rcx
    b0a9:	8a 01                	mov    (%rcx),%al
    b0ab:	00 00                	add    %al,(%rax)
    b0ad:	00 5c 4d 29          	add    %bl,0x29(%rbp,%rcx,2)
    b0b1:	c7                   	(bad)  
    b0b2:	ff                   	(bad)  
    b0b3:	ff 66 66             	jmp    *0x66(%rsi)
    b0b6:	2e eb 48             	cs jmp b101 <__sprintf_chk@plt+0x6421>
    b0b9:	29 d0                	sub    %edx,%eax
    b0bb:	af                   	scas   %es:(%rdi),%eax
    b0bc:	c9                   	leave  
    b0bd:	00 0f                	add    %cl,(%rdi)
    b0bf:	8f                   	(bad)  
    b0c0:	f3 fe                	repz (bad) 
    b0c2:	ff 4d 89             	decl   -0x77(%rbp)
    b0c5:	d4                   	(bad)  
    b0c6:	4c 89 c3             	mov    %r8,%rbx
    b0c9:	00 48 0f             	add    %cl,0xf(%rax)
    b0cc:	af                   	scas   %es:(%rdi),%eax
    b0cd:	c1 00 00             	roll   $0x0,(%rax)
    b0d0:	83 fa 03             	cmp    $0x3,%edx
    b0d3:	0f 4c 29             	cmovl  (%rcx),%ebp
    b0d6:	c1 fa 0f             	sar    $0xf,%edx
    b0d9:	85 68 03             	test   %ebp,0x3(%rax)
    b0dc:	00 00                	add    %al,(%rax)
    b0de:	83 f9 49             	cmp    $0x49,%ecx
    b0e1:	21 d5                	and    %edx,%ebp
    b0e3:	83 f9 09             	cmp    $0x9,%ecx
    b0e6:	49 c7 c3 29 fd ff ff 	mov    $0xfffffffffffffd29,%r11
    b0ed:	c1 e1 15             	shl    $0x15,%ecx
    b0f0:	00 0f                	add    %cl,(%rdi)
    b0f2:	8f                   	(bad)  
    b0f3:	6c                   	insb   (%dx),%es:(%rdi)
    b0f4:	ff                   	(bad)  
    b0f5:	ff                   	(bad)  
    b0f6:	ff                   	(bad)  
    b0f7:	38 81 fa 00 40 00    	cmp    %al,0x4000fa(%rcx)
    b0fd:	00 74 4a b8          	add    %dh,-0x48(%rdx,%rcx,2)
    b101:	01 00                	add    %eax,(%rax)
    b103:	00 48 c7             	add    %cl,-0x39(%rax)
    b106:	c7                   	(bad)  
    b107:	8e ff                	mov    %edi,%?
    b109:	ff                   	(bad)  
    b10a:	ff 00                	incl   (%rax)
    b10c:	00 00                	add    %al,(%rax)
    b10e:	4c 31 cb             	xor    %r9,%rbx
    b111:	c1 75 36 8b          	shll   $0x8b,0x36(%rbp)
    b115:	48 c7 c6 5d fd ff ff 	mov    $0xfffffffffffffd5d,%rsi
    b11c:	4d 21 e4             	and    %r12,%r12
    b11f:	3d 00 40 00 48       	cmp    $0x48004000,%eax
    b124:	f7 fb                	idiv   %ebx
    b126:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b12b:	c3                   	ret    
    b12c:	0f 4c 0f             	cmovl  (%rdi),%ecx
    b12f:	af                   	scas   %es:(%rdi),%eax
    b130:	ca 48 89             	lret   $0x8948
    b133:	fe 00                	incb   (%rax)
    b135:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 1a13b <_obstack_memory_used@@Base+0x998b>
    b13b:	3d 00 40 00 00       	cmp    $0x4000,%eax
    b140:	74 b6                	je     b0f8 <__sprintf_chk@plt+0x6418>
    b142:	81 fa 00 40 00 49    	cmp    $0x49004000,%edx
    b148:	89 f6                	mov    %esi,%esi
    b14a:	41 54                	push   %r12
    b14c:	55                   	push   %rbp
    b14d:	48 83 4c 09 e8 8b    	orq    $0xffffffffffffff8b,-0x18(%rcx,%rcx,1)
    b153:	27                   	(bad)  
    b154:	48 8b 2e             	mov    (%rsi),%rbp
    b157:	e8 b4 95 ff ff       	call   4710 <__errno_location@plt>
    b15c:	c7 00 00 0f 84 9c    	movl   $0x9c840f00,(%rax)
    b162:	01 00                	add    %eax,(%rax)
    b164:	00 d9                	add    %bl,%cl
    b166:	4c 89 e6             	mov    %r12,%rsi
    b169:	48 89 ef             	mov    %rbp,%rdi
    b16c:	5d                   	pop    %rbp
    b16d:	41 5c                	pop    %r12
    b16f:	e9 5c 99 ff ff       	jmp    4ad0 <strcoll@plt>
    b174:	66 4c e9 1d fc 4d 85 	data16 rex.WR jmp ffffffff854ead98 <obstack_alloc_failed_handler@@Base+0xffffffff854c8cf8>
    b17b:	e8 31 f7 00 48       	call   4801a8b1 <obstack_alloc_failed_handler@@Base+0x47ff8811>
    b180:	f7 fb                	idiv   %ebx
    b182:	1e                   	(bad)  
    b183:	fa                   	cli    
    b184:	41                   	rex.B
    b185:	48 0f 48 85 49 c1 ed 	cmovs  0x3aedc149(%rbp),%rax
    b18c:	3a 
    b18d:	be 2e 00 49 85       	mov    $0x8549002e,%esi
    b192:	d2 48 83             	rorb   %cl,-0x7d(%rax)
    b195:	ec                   	in     (%dx),%al
    b196:	08 4d 89             	or     %cl,-0x77(%rbp)
    b199:	d9 4c 89 ef          	(bad)  -0x11(%rcx,%rcx,4)
    b19d:	e8 6e 97 ff ff       	call   4910 <strrchr@plt>
    b1a2:	4d 8b 34 24          	mov    (%r12),%r14
    b1a6:	be 2e 00 49 39       	mov    $0x3949002e,%esi
    b1ab:	f6 d7                	not    %bh
    b1ad:	c5 4c 75             	(bad)
    b1b0:	f2 e8 5a 97 ff 49    	bnd call 4a004910 <obstack_alloc_failed_handler@@Base+0x49fe2870>
    b1b6:	09 d4                	or     %edx,%esp
    b1b8:	c4                   	(bad)  
    b1b9:	48 8d 05 fd e9 00 00 	lea    0xe9fd(%rip),%rax        # 19bbd <_obstack_memory_used@@Base+0x940d>
    b1c0:	4d 85 e4             	test   %r12,%r12
    b1c3:	4c 0f 44 e0          	cmove  %rax,%r12
    b1c7:	48 85 ed             	test   %rbp,%rbp
    b1ca:	48 0f 44 e8          	cmove  %rax,%rbp
    b1ce:	e8 4d 89 e4 fe       	call   fffffffffee53b20 <obstack_alloc_failed_handler@@Base+0xfffffffffee31a80>
    b1d3:	ff                   	(bad)  
    b1d4:	ff e6                	jmp    *%rsi
    b1d6:	0f 85 ad 01 00 00    	jne    b389 <__sprintf_chk@plt+0x66a9>
    b1dc:	eb b0                	jmp    b18e <__sprintf_chk@plt+0x64ae>
    b1de:	ef                   	out    %eax,(%dx)
    b1df:	e8 49 f7 fe ff       	call   ffffffffffffa92d <obstack_alloc_failed_handler@@Base+0xfffffffffffd888d>
    b1e4:	85 c0                	test   %eax,%eax
    b1e6:	75 18                	jne    b200 <__sprintf_chk@plt+0x6520>
    b1e8:	48 83 c4 08          	add    $0x8,%rsp
    b1ec:	4d                   	rex.WRB
    b1ed:	48 f7 fb             	idiv   %rbx
    b1f0:	85 48 29             	test   %ecx,0x29(%rax)
    b1f3:	d7                   	xlat   %ds:(%rbx)
    b1f4:	cb                   	lret   
    b1f5:	41 5d                	pop    %r13
    b1f7:	41 5e                	pop    %r14
    b1f9:	e9 d2 98 ff ff       	jmp    4ad0 <strcoll@plt>
    b1fe:	66 90                	xchg   %ax,%ax
    b200:	48 83 c4 08          	add    $0x8,%rsp
    b204:	5d                   	pop    %rbp
    b205:	41 5c                	pop    %r12
    b207:	49 09 de             	or     %rbx,%r14
    b20a:	5e                   	pop    %rsi
    b20b:	c3                   	ret    
    b20c:	0f 1f 40 00          	nopl   0x0(%rax)
    b210:	f3 0f 1e fa          	endbr64 
    b214:	41 56                	push   %r14
    b216:	41                   	rex.B
    b217:	4c 09 d0             	or     %r10,%rax
    b21a:	89 f1                	mov    %esi,%ecx
    b21c:	fc                   	cld    
    b21d:	48 ff c1             	inc    %rcx
    b220:	ec                   	in     (%dx),%al
    b221:	08 4c 8b 2e          	or     %cl,0x2e(%rbx,%rcx,4)
    b225:	be 2e 00 4c 29       	mov    $0x294c002e,%esi
    b22a:	ff 0f                	decl   (%rdi)
    b22c:	8f                   	(bad)  
    b22d:	2b fd                	sub    %ebp,%edi
    b22f:	ff                   	(bad)  
    b230:	ff                   	(bad)  
    b231:	ff 4d 7f             	decl   0x7f(%rbp)
    b234:	06                   	(bad)  
    b235:	c8 be 2e 00          	enter  $0x2ebe,$0x0
    b239:	00 00                	add    %al,(%rax)
    b23b:	48 89 48 01          	mov    %rcx,0x1(%rax)
    b23f:	d8 f7                	fdiv   %st(7),%st
    b241:	e8 ca 96 0f 85       	call   ffffffff85104910 <obstack_alloc_failed_handler@@Base+0xffffffff850e2870>
    b246:	dd 01                	fldl   (%rcx)
    b248:	00 00                	add    %al,(%rax)
    b24a:	39 fb                	cmp    %edi,%ebx
    b24c:	6d                   	insl   (%dx),%es:(%rdi)
    b24d:	e9 00 49 c1 49       	jmp    49c1fb52 <obstack_alloc_failed_handler@@Base+0x49bfdab2>
    b252:	09 f6                	or     %esi,%esi
    b254:	0f 44 48 09          	cmove  0x9(%rax),%ecx
    b258:	fb                   	sti    
    b259:	ed                   	in     (%dx),%eax
    b25a:	4c 39 fa             	cmp    %r15,%rdx
    b25d:	48 c1 e9 14          	shr    $0x14,%rcx
    b261:	49 c1 e5 49          	shl    $0x49,%r13
    b265:	31 d4                	xor    %edx,%esp
    b267:	00 00                	add    %al,(%rax)
    b269:	00 00                	add    %al,(%rax)
    b26b:	00 48 89             	add    %cl,-0x77(%rax)
    b26e:	ef                   	out    %eax,(%dx)
    b26f:	e8 49 ff c3 ff       	call   ffffffffffc4b1bd <obstack_alloc_failed_handler@@Base+0xffffffffffc2911d>
    b274:	85 c0                	test   %eax,%eax
    b276:	75 18                	jne    b290 <__sprintf_chk@plt+0x65b0>
    b278:	4c 29 f2             	sub    %r14,%rdx
    b27b:	08 4c 89 f6          	or     %cl,-0xa(%rcx,%rcx,4)
    b27f:	4c 89 ef             	mov    %r13,%rdi
    b282:	5d                   	pop    %rbp
    b283:	41 5c                	pop    %r12
    b285:	41 5d                	pop    %r13
    b287:	41 5e                	pop    %r14
    b289:	e9 42 98 ff ff       	jmp    4ad0 <strcoll@plt>
    b28e:	66 90                	xchg   %ax,%ax
    b290:	48 83 c4 08          	add    $0x8,%rsp
    b294:	4d 85 4c 21 d3       	test   %r9,-0x2d(%r9,%riz,1)
    b299:	41 5e                	pop    %r14
    b29b:	c3                   	ret    
    b29c:	0f 1f 40 00          	nopl   0x0(%rax)
    b2a0:	f3 0f 1e fa          	endbr64 
    b2a4:	41 56                	push   %r14
    b2a6:	41 55                	push   %r13
    b2a8:	41 54                	push   %r12
    b2aa:	55                   	push   %rbp
    b2ab:	0f 8f b7 03 00 00    	jg     b668 <__sprintf_chk@plt+0x6988>
    b2b1:	00 48 89             	add    %cl,-0x77(%rax)
    b2b4:	f3 8b 8f a8 00 00 00 	repz mov 0xa8(%rdi),%ecx
    b2bb:	83 e9 a8             	sub    $0xffffffa8,%ecx
    b2be:	fc                   	cld    
    b2bf:	ff                   	(bad)  
    b2c0:	ff 83 fa 09 0f 94    	incl   -0x6bf0f606(%rbx)
    b2c6:	49                   	rex.WB
    b2c7:	49 f7 fe             	idiv   %r14
    b2ca:	31 ca                	xor    %ecx,%edx
    b2cc:	74 0f                	je     b2dd <__sprintf_chk@plt+0x65fd>
    b2ce:	84 7d 01             	test   %bh,0x1(%rbp)
    b2d1:	00 00                	add    %al,(%rax)
    b2d3:	8b 97 0f 8f da 03    	mov    0x3da8f0f(%rdi),%edx
    b2d9:	00 00                	add    %al,(%rax)
    b2db:	d4                   	(bad)  
    b2dc:	f0 00 00             	lock add %al,(%rax)
    b2df:	49 c7 c4 35 00 00 00 	mov    $0x35,%r12
    b2e6:	c5 00 00             	(bad)
    b2e9:	74 57                	je     b342 <__sprintf_chk@plt+0x6662>
    b2eb:	b8 01 4c 21 d9       	mov    $0xd9214c01,%eax
    b2f0:	5b                   	pop    %rbx
    b2f1:	5d                   	pop    %rbp
    b2f2:	41 5c                	pop    %r12
    b2f4:	41 5d                	pop    %r13
    b2f6:	7f 0f                	jg     b307 <__sprintf_chk@plt+0x6627>
    b2f8:	84 4d 03             	test   %cl,0x3(%rbp)
    b2fb:	00 00                	add    %al,(%rax)
    b2fd:	00 00                	add    %al,(%rax)
    b2ff:	00 84 c0 75 3e 8b 83 	add    %al,-0x7c74c18b(%rax,%rax,8)
    b306:	e9 82 fc ff ff       	jmp    af8d <__sprintf_chk@plt+0x62ad>
    b30b:	00 f0                	add    %dh,%al
    b30d:	00 4c 01 ce          	add    %cl,-0x32(%rcx,%rax,1)
    b311:	40 00 00             	rex add %al,(%rax)
    b314:	74 4d                	je     b363 <__sprintf_chk@plt+0x6683>
    b316:	85 cb                	test   %ecx,%ebx
    b318:	ff                   	(bad)  
    b319:	ff                   	(bad)  
    b31a:	ff 0f                	decl   (%rdi)
    b31c:	84 d2                	test   %dl,%dl
    b31e:	fe                   	(bad)  
    b31f:	ff 49 21             	decl   0x21(%rcx)
    b322:	f7 c3 0f 48 ff c7    	test   $0xc7ff480f,%ebx
    b328:	8b 86 ac 00 00 00    	mov    0xac(%rsi),%eax
    b32e:	25 00 48 89 f1       	and    $0xf1894800,%eax
    b333:	4d 09 cd             	or     %r9,%r13
    b336:	d7                   	xlat   %ds:(%rbx)
    b337:	a1 74 a9 81 0f 85 23 	movabs 0x4c0223850f81a974,%eax
    b33e:	02 4c 
    b340:	89 eb                	mov    %ebp,%ebx
    b342:	4c 8b 2f             	mov    (%rdi),%r13
    b345:	be 48 f7 fb 09       	mov    $0x9fbf748,%esi
    b34a:	fc                   	cld    
    b34b:	89 ef                	mov    %ebp,%edi
    b34d:	e8 be 95 ff ff       	call   4910 <strrchr@plt>
    b352:	4c 8b 33             	mov    (%rbx),%r14
    b355:	be 2e 49 85 fb       	mov    $0xfb85492e,%esi
    b35a:	48 89 c5             	mov    %rax,%rbp
    b35d:	4c 89 f7             	mov    %r14,%rdi
    b360:	4d 21 e0             	and    %r12,%r8
    b363:	ff                   	(bad)  
    b364:	ff 49 89             	decl   -0x77(%rcx)
    b367:	c4                   	(bad)  
    b368:	48 8d 05 4e e8 00 4d 	lea    0x4d00e84e(%rip),%rax        # 4d019bbd <obstack_alloc_failed_handler@@Base+0x4cff7b1d>
    b36f:	85 cf                	test   %ecx,%edi
    b371:	49 21 d6             	and    %rdx,%r14
    b374:	ff                   	(bad)  
    b375:	ff 48 85             	decl   -0x7b(%rax)
    b378:	ed                   	in     (%dx),%eax
    b379:	48 0f 44 e8          	cmove  %rax,%rbp
    b37d:	48 31 f6             	xor    %rsi,%rsi
    b380:	ff                   	(bad)  
    b381:	ff 4c 89 e6          	decl   -0x1a(%rcx,%rcx,4)
    b385:	49 ff c4             	inc    %r12
    b388:	00 00                	add    %al,(%rax)
    b38a:	00 48 89             	add    %cl,-0x77(%rax)
    b38d:	ef                   	out    %eax,(%dx)
    b38e:	48 f7 f8             	idiv   %rax
    b391:	ff 4d 0f             	decl   0xf(%rbp)
    b394:	af                   	scas   %es:(%rdi),%eax
    b395:	f6 85 4d 21 d2 ff 49 	testb  $0x49,-0x2ddeb3(%rbp)
    b39c:	ff c1                	inc    %ecx
    b39e:	f6 5d 4c             	negb   0x4c(%rbp)
    b3a1:	89 ef                	mov    %ebp,%edi
    b3a3:	41 5c                	pop    %r12
    b3a5:	41 0f 8f 16 ff ff ff 	rex.B jg b2c2 <__sprintf_chk@plt+0x65e2>
    b3ac:	ff                   	(bad)  
    b3ad:	ff                   	(bad)  
    b3ae:	e9 83 fd ff ff       	jmp    b136 <__sprintf_chk@plt+0x6456>
    b3b3:	4c 21 e2             	and    %r12,%rdx
    b3b6:	41 55                	push   %r13
    b3b8:	41 54                	push   %r12
    b3ba:	4c 85 ef             	test   %r13,%rdi
    b3bd:	96                   	xchg   %eax,%esi
    b3be:	a8 49                	test   $0x49,%al
    b3c0:	89 f0                	mov    %esi,%eax
    b3c2:	48 0f 8c da 02 00 00 	rex.W jl b6a3 <__sprintf_chk@plt+0x69c3>
    b3c9:	4d 21 dd             	and    %r11,%r13
    b3cc:	fa                   	cli    
    b3cd:	49 c1 e0 1d          	shl    $0x1d,%r8
    b3d1:	00 00                	add    %al,(%rax)
    b3d3:	09 0f                	or     %ecx,(%rdi)
    b3d5:	94                   	xchg   %eax,%esp
    b3d6:	c2 e9 5f             	ret    $0x5fe9
    b3d9:	03 00                	add    (%rax),%eax
    b3db:	00 74 32 83          	add    %dh,-0x7d(%rdx,%rsi,1)
    b3df:	f9                   	stc    
    b3e0:	09 74 2d 8b          	or     %esi,-0x75(%rbp,%rbp,1)
    b3e4:	97                   	xchg   %eax,%edi
    b3e5:	ac                   	lods   %ds:(%rsi),%al
    b3e6:	00 00                	add    %al,(%rax)
    b3e8:	00 81 e2 00 f0 00    	add    %al,0xf000e2(%rcx)
    b3ee:	00 84 c0 74 45 81 4d 	add    %al,0x4d814574(%rax,%rax,8)
    b3f5:	31 e6                	xor    %esp,%esi
    b3f7:	00 00                	add    %al,(%rax)
    b3f9:	7f 8b                	jg     b386 <__sprintf_chk@plt+0x66a6>
    b3fb:	4d 29 d7             	sub    %r10,%r15
    b3fe:	00 00                	add    %al,(%rax)
    b400:	5b                   	pop    %rbx
    b401:	5d                   	pop    %rbp
    b402:	41 5c                	pop    %r12
    b404:	41 5d                	pop    %r13
    b406:	41 5e                	pop    %r14
    b408:	c3                   	ret    
    b409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b410:	84 48 c1             	test   %cl,-0x3f(%rax)
    b413:	e2 0e                	loop   b423 <__sprintf_chk@plt+0x6743>
    b415:	86 ac 00 00 00 25 00 	xchg   %ch,0x250000(%rax,%rax,1)
    b41c:	f0 00 00             	lock add %al,(%rax)
    b41f:	3d 49 85 d8 00       	cmp    $0xd88549,%eax
    b424:	74 2c                	je     b452 <__sprintf_chk@plt+0x6772>
    b426:	5b                   	pop    %rbx
    b427:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b42c:	5d                   	pop    %rbp
    b42d:	41 5c                	pop    %r12
    b42f:	41 5d                	pop    %r13
    b431:	49 ff c3             	inc    %r11
    b434:	0f 1f 40 00          	nopl   0x0(%rax)
    b438:	8b 86 0f 84 4d 01    	mov    0x14d840f(%rsi),%eax
    b43e:	48 01 f2             	add    %rsi,%rdx
    b441:	00 4c 85 c2          	add    %cl,-0x3e(%rbp,%rax,4)
    b445:	b7 01                	mov    $0x1,%bh
    b447:	49 ff c1             	inc    %r9
    b44a:	00 fa                	add    %bh,%dl
    b44c:	00 49 ff             	add    %cl,-0x1(%rcx)
    b44f:	c0 74 49 ff c7       	shlb   $0xc7,-0x1(%rcx,%rcx,2)
    b454:	2e be 2e 00 00 00    	cs mov $0x2e,%esi
    b45a:	4c                   	rex.WR
    b45b:	4c 85 f1             	test   %r14,%rcx
    b45e:	ae                   	scas   %es:(%rdi),%al
    b45f:	94                   	xchg   %eax,%esp
    b460:	ff 4c 89 c6          	decl   -0x3a(%rcx,%rcx,4)
    b464:	33 be 49 89 c1 4c    	xor    0x4cc18949(%rsi),%edi
    b46a:	09 ea                	or     %ebp,%edx
    b46c:	c5 4c 89             	(bad)
    b46f:	f7 e8                	imul   %eax
    b471:	49 c7 c3 6d 02 00 00 	mov    $0x26d,%r11
    b478:	48 8d 05 3e e7 48 49 	lea    0x4948e73e(%rip),%rax        # 49499bbd <obstack_alloc_failed_handler@@Base+0x49477b1d>
    b47f:	c1 e6 1b             	shl    $0x1b,%esi
    b482:	4d 21 cd             	and    %r9,%r13
    b485:	0f 84 4a fe ff ff    	je     b2d5 <__sprintf_chk@plt+0x65f5>
    b48b:	96                   	xchg   %eax,%esi
    b48c:	fe                   	(bad)  
    b48d:	ff                   	(bad)  
    b48e:	ff 92 ff ff 4c 89    	call   *-0x76b30001(%rdx)
    b494:	48 e9 ba 03 00 00    	rex.W jmp b854 <__sprintf_chk@plt+0x6b74>
    b49a:	c7                   	(bad)  
    b49b:	4d 29 f7             	sub    %r14,%r15
    b49e:	00 00                	add    %al,(%rax)
    b4a0:	96                   	xchg   %eax,%esi
    b4a1:	ff                   	(bad)  
    b4a2:	ff 85 c0 0f 85 55    	incl   0x55850fc0(%rbp)
    b4a8:	ff                   	(bad)  
    b4a9:	ff                   	(bad)  
    b4aa:	ff 5b 4d             	lcall  *0x4d(%rbx)
    b4ad:	48 c1 e3 03          	shl    $0x3,%rbx
    b4b1:	89 ef                	mov    %ebp,%edi
    b4b3:	41 5c                	pop    %r12
    b4b5:	41 5d                	pop    %r13
    b4b7:	41 5e                	pop    %r14
    b4b9:	e9 12 96 ff ff       	jmp    4ad0 <strcoll@plt>
    b4be:	66 90                	xchg   %ax,%ax
    b4c0:	41 54                	push   %r12
    b4c2:	55                   	push   %rbp
    b4c3:	53                   	push   %rbx
    b4c4:	4c 39 cb             	cmp    %r9,%rbx
    b4c7:	85 ff                	test   %edi,%edi
    b4c9:	49 c1 eb 23          	shr    $0x23,%r11
    b4cd:	00 00                	add    %al,(%rax)
    b4cf:	49 89 fc             	mov    %rdi,%r12
    b4d2:	e8 a9 93 ff ff       	call   4880 <strlen@plt>
    b4d7:	4c 89 4d 0f          	mov    %r9,0xf(%rbp)
    b4db:	af                   	scas   %es:(%rdi),%eax
    b4dc:	fb                   	sti    
    b4dd:	e8 3e 77 00 00       	call   12c20 <_obstack_memory_used@@Base+0x2470>
    b4e2:	48 8b 2d bf 6a 01 00 	mov    0x16abf(%rip),%rbp        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    b4e9:	4c 89 e7             	mov    %r12,%rdi
    b4ec:	29 4c 09 e0          	sub    %ecx,-0x20(%rcx,%rcx,1)
    b4f0:	00 00                	add    %al,(%rax)
    b4f2:	49 29 d8             	sub    %rbx,%r8
    b4f5:	49 21 c6             	and    %rax,%r14
    b4f8:	85 f0                	test   %esi,%eax
    b4fa:	49 f7 f9             	idiv   %r9
    b4fd:	4d 09 d2             	or     %r10,%r10
    b500:	03 00                	add    (%rax),%eax
    b502:	00 63 e3             	add    %ah,-0x1d(%rbx)
    b505:	e9 6e 02 0f 8c       	jmp    ffffffff8c0fb778 <obstack_alloc_failed_handler@@Base+0xffffffff8c0d96d8>
    b50a:	65 fc                	gs cld 
    b50c:	ff                   	(bad)  
    b50d:	ff                   	(bad)  
    b50e:	f8                   	clc    
    b50f:	00 48 8b             	add    %cl,-0x75(%rax)
    b512:	7d 00                	jge    b514 <__sprintf_chk@plt+0x6834>
    b514:	49 09 cb             	or     %rcx,%r11
    b517:	28 48 49             	sub    %cl,0x49(%rax)
    b51a:	c7 c7 3a 4c 89 ca    	mov    $0xca894c3a,%edi
    b520:	50                   	push   %rax
    b521:	01 48 89             	add    %ecx,-0x77(%rax)
    b524:	57                   	push   %rdi
    b525:	28 c6                	sub    %al,%dh
    b527:	00 20                	add    %ah,(%rax)
    b529:	83 eb 4c             	sub    $0x4c,%ebx
    b52c:	89 cb                	mov    %ecx,%ebx
    b52e:	48 8b 05 c3 6d 49 21 	mov    0x21496dc3(%rip),%rax        # 214a22f8 <obstack_alloc_failed_handler@@Base+0x21480258>
    b535:	c8 5d 49 8d          	enter  $0x495d,$0x8d
    b539:	44 0f 8f 62 fc ff ff 	rex.R jg b1a2 <__sprintf_chk@plt+0x64c2>
    b540:	d0 b3 6d 01 00 c3    	shlb   -0x3cfffe93(%rbx)
    b546:	66 2e 0f 8c eb fc    	jl,pn  b237 <__sprintf_chk@plt+0x6557>
    b54c:	ff                   	(bad)  
    b54d:	ff 00                	incl   (%rax)
    b54f:	00 be 20 00 00 00    	add    %bh,0x20(%rsi)
    b555:	e8 a6 93 ff ff       	call   4900 <__overflow@plt>
    b55a:	4d 85 e3             	test   %r12,%r11
    b55d:	1f                   	(bad)  
    b55e:	49 ff c3             	inc    %r11
    b561:	89 f1                	mov    %esi,%ecx
    b563:	4d 85 d4             	test   %r10,%r12
    b566:	00 00                	add    %al,(%rax)
    b568:	31 c0                	xor    %eax,%eax
    b56a:	4c                   	rex.WR
    b56b:	49 ff c5             	inc    %r13
    b56e:	8d 35 fc e4 00 49    	lea    0x4900e4fc(%rip),%esi        # 49019a70 <obstack_alloc_failed_handler@@Base+0x48ff79d0>
    b574:	ff c3                	inc    %ebx
    b576:	95                   	xchg   %eax,%ebp
    b577:	ff                   	(bad)  
    b578:	ff 48 31             	decl   0x31(%rax)
    b57b:	d0 f3                	shl    %bl
    b57d:	44 00 00             	add    %r8b,(%rax)
    b580:	55                   	push   %rbp
    b581:	53                   	push   %rbx
    b582:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    b589:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    b58e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    b595:	48                   	rex.W
    b596:	4c 0f af d6          	imul   %rsi,%r10
    b59a:	48 83 ec 38          	sub    $0x38,%rsp
    b59e:	48 89 fb             	mov    %rdi,%rbx
    b5a1:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
    b5a6:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    b5ab:	89 d1                	mov    %edx,%ecx
    b5ad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b5b4:	00 00 
    b5b6:	48 89 84 24 28 20 00 	mov    %rax,0x2028(%rsp)
    b5bd:	00 
    b5be:	31 c0                	xor    %eax,%eax
    b5c0:	48 89 f2             	mov    %rsi,%rdx
    b5c3:	4c 8d 4c 24 0f       	lea    0xf(%rsp),%r9
    b5c8:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    b5cd:	48 89 de             	mov    %rbx,%rsi
    b5d0:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    b5d5:	e8 f6 8d 00 00       	call   143d0 <_obstack_memory_used@@Base+0x3c20>
    b5da:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    b5df:	48 39 ef             	cmp    %rbp,%rdi
    b5e2:	74 0a                	je     b5ee <__sprintf_chk@plt+0x690e>
    b5e4:	48 39 df             	cmp    %rbx,%rdi
    b5e7:	74 05                	je     b5ee <__sprintf_chk@plt+0x690e>
    b5e9:	e8 92 90 ff ff       	call   4680 <free@plt>
    b5ee:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
    b5f3:	48 03 44 24 10       	add    0x10(%rsp),%rax
    b5f8:	48 8b 94 24 28 20 00 	mov    0x2028(%rsp),%rdx
    b5ff:	00 
    b600:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b607:	00 00 
    b609:	75 0a                	jne    b615 <__sprintf_chk@plt+0x6935>
    b60b:	48 81 c4 38 20 00 00 	add    $0x2038,%rsp
    b612:	5b                   	pop    %rbx
    b613:	5d                   	pop    %rbp
    b614:	c3                   	ret    
    b615:	e8 76 92 ff ff       	call   4890 <__stack_chk_fail@plt>
    b61a:	66 48 c1 e9 2d       	data16 shr $0x2d,%rcx
    b61f:	00 41 57             	add    %al,0x57(%rcx)
    b622:	48 89 f0             	mov    %rsi,%rax
    b625:	41 56                	push   %r14
    b627:	48 d1 e8             	shr    %rax
    b62a:	41 55                	push   %r13
    b62c:	41 54                	push   %r12
    b62e:	55                   	push   %rbp
    b62f:	48 89 cd             	mov    %rcx,%rbp
    b632:	53                   	push   %rbx
    b633:	48 89 fb             	mov    %rdi,%rbx
    b636:	48 83 ec 38          	sub    $0x38,%rsp
    b63a:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b63f:	48 29 c6             	sub    %rax,%rsi
    b642:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b647:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    b64b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    b650:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    b655:	48 83 fe 02          	cmp    $0x2,%rsi
    b659:	0f 87 f1 01 00 00    	ja     b850 <__sprintf_chk@plt+0x6b70>
    b65f:	0f 84 c3 00 00 00    	je     b728 <__sprintf_chk@plt+0x6a48>
    b665:	48 83 7c 24 10 03    	cmpq   $0x3,0x10(%rsp)
    b66b:	0f 85 e7 00 00 00    	jne    b758 <__sprintf_chk@plt+0x6a78>
    b671:	4c 8b 33             	mov    (%rbx),%r14
    b674:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b679:	4c 89 30             	mov    %r14,(%rax)
    b67c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b681:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b688:	00 
    b689:	45 31 ff             	xor    %r15d,%r15d
    b68c:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    b691:	4c 8b 20             	mov    (%rax),%r12
    b694:	0f 1f 40 00          	nopl   0x0(%rax)
    b698:	4c 89 e6             	mov    %r12,%rsi
    b69b:	4c 89 f7             	mov    %r14,%rdi
    b69e:	49 83 c7 01          	add    $0x1,%r15
    b6a2:	ff d5                	call   *%rbp
    b6a4:	85 c0                	test   %eax,%eax
    b6a6:	7e 24                	jle    b6cc <__sprintf_chk@plt+0x69ec>
    b6a8:	4e 89 64 fb f8       	mov    %r12,-0x8(%rbx,%r15,8)
    b6ad:	49 83 c5 01          	add    $0x1,%r13
    b6b1:	4c 39 6c 24 10       	cmp    %r13,0x10(%rsp)
    b6b6:	74 38                	je     b6f0 <__sprintf_chk@plt+0x6a10>
    b6b8:	4e 8b 24 eb          	mov    (%rbx,%r13,8),%r12
    b6bc:	4c 89 f7             	mov    %r14,%rdi
    b6bf:	49 83 c7 01          	add    $0x1,%r15
    b6c3:	4c 89 e6             	mov    %r12,%rsi
    b6c6:	ff d5                	call   *%rbp
    b6c8:	85 c0                	test   %eax,%eax
    b6ca:	7f dc                	jg     b6a8 <__sprintf_chk@plt+0x69c8>
    b6cc:	48 83 04 24 01       	addq   $0x1,(%rsp)
    b6d1:	48 8b 04 24          	mov    (%rsp),%rax
    b6d5:	4e 89 74 fb f8       	mov    %r14,-0x8(%rbx,%r15,8)
    b6da:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    b6df:	0f 84 5b 01 00 00    	je     b840 <__sprintf_chk@plt+0x6b60>
    b6e5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    b6ea:	4c 8b 34 c2          	mov    (%rdx,%rax,8),%r14
    b6ee:	eb a8                	jmp    b698 <__sprintf_chk@plt+0x69b8>
    b6f0:	48 8b 04 24          	mov    (%rsp),%rax
    b6f4:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    b6f9:	4a 8d 3c fb          	lea    (%rbx,%r15,8),%rdi
    b6fd:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    b702:	48 83 c4 38          	add    $0x38,%rsp
    b706:	49 29 c4             	sub    %rax,%r12
    b709:	5b                   	pop    %rbx
    b70a:	5d                   	pop    %rbp
    b70b:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
    b712:	00 
    b713:	48 8d 34 c1          	lea    (%rcx,%rax,8),%rsi
    b717:	41 5c                	pop    %r12
    b719:	41 5d                	pop    %r13
    b71b:	41 5e                	pop    %r14
    b71d:	41 5f                	pop    %r15
    b71f:	e9 2c 93 ff ff       	jmp    4a50 <memcpy@plt>
    b724:	0f 1f 40 00          	nopl   0x0(%rax)
    b728:	4c 8b 30             	mov    (%rax),%r14
    b72b:	4c 8b 49 f7          	mov    -0x9(%rcx),%r9
    b72f:	f9                   	stc    
    b730:	89 c7                	mov    %eax,%edi
    b732:	4c 89 e6             	mov    %r12,%rsi
    b735:	4c 89 f7             	mov    %r14,%rdi
    b738:	ff d1                	call   *%rcx
    b73a:	85 c0                	test   %eax,%eax
    b73c:	0f 8e 23 ff ff ff    	jle    b665 <__sprintf_chk@plt+0x6985>
    b742:	48 e9 e9 48 85 d8    	rex.W jmp ffffffffd8860031 <obstack_alloc_failed_handler@@Base+0xffffffffd883df91>
    b748:	00 8f 73 01 00 00    	add    %cl,0x173(%rdi)
    b74e:	08 0f                	or     %cl,(%rdi)
    b750:	48 89 cb             	mov    %rcx,%rbx
    b753:	f8                   	clc    
    b754:	ff 0f                	decl   (%rdi)
    b756:	1f                   	(bad)  
    b757:	00 48 8b             	add    %cl,-0x75(%rax)
    b75a:	44 24 10             	rex.R and $0x10,%al
    b75d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b762:	48 c1 e8 02          	shr    $0x2,%rax
    b766:	48 29 c6             	sub    %rax,%rsi
    b769:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b76e:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    b772:	48 83 fe 02          	cmp    $0x2,%rsi
    b776:	0f 87 05 01 00 00    	ja     b881 <__sprintf_chk@plt+0x6ba1>
    b77c:	0f 84 33 01 00 00    	je     b8b5 <__sprintf_chk@plt+0x6bd5>
    b782:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
    b788:	0f 87 d6 00 00 00    	ja     b864 <__sprintf_chk@plt+0x6b84>
    b78e:	4c 8b 33             	mov    (%rbx),%r14
    b791:	0f 84 ff 00 00 00    	je     b896 <__sprintf_chk@plt+0x6bb6>
    b797:	4d 8b 3f             	mov    (%r15),%r15
    b79a:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b7a1:	00 
    b7a2:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    b7a7:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    b7ac:	0f 1f 40 00          	nopl   0x0(%rax)
    b7b0:	4c 89 fe             	mov    %r15,%rsi
    b7b3:	4c 89 f7             	mov    %r14,%rdi
    b7b6:	49 83 c5 08          	add    $0x8,%r13
    b7ba:	ff d5                	call   *%rbp
    b7bc:	85 c0                	test   %eax,%eax
    b7be:	7e 23                	jle    b7e3 <__sprintf_chk@plt+0x6b03>
    b7c0:	4d 89 7d f8          	mov    %r15,-0x8(%r13)
    b7c4:	49 83 c4 01          	add    $0x1,%r12
    b7c8:	4c 39 64 24 08       	cmp    %r12,0x8(%rsp)
    b7cd:	74 3f                	je     b80e <__sprintf_chk@plt+0x6b2e>
    b7cf:	4e 8b 3c e3          	mov    (%rbx,%r12,8),%r15
    b7d3:	0f 84 04 02 00 00    	je     b9dd <__sprintf_chk@plt+0x6cfd>
    b7d9:	08 0f                	or     %cl,(%rdi)
    b7db:	8f 83 02 00 00 48    	pop    0x48000002(%rbx)
    b7e1:	09 df                	or     %ebx,%edi
    b7e3:	48 83 04 24 01       	addq   $0x1,(%rsp)
    b7e8:	48 8b 04 24          	mov    (%rsp),%rax
    b7ec:	4d 89 75 f8          	mov    %r14,-0x8(%r13)
    b7f0:	48 39 44 24 20       	cmp    %rax,0x20(%rsp)
    b7f5:	74 09                	je     b800 <__sprintf_chk@plt+0x6b20>
    b7f7:	4c 0f af c1          	imul   %rcx,%r8
    b7fb:	eb b3                	jmp    b7b0 <__sprintf_chk@plt+0x6ad0>
    b7fd:	0f 1f 00             	nopl   (%rax)
    b800:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b805:	4c 89 24 24          	mov    %r12,(%rsp)
    b809:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    b80e:	48 8b 04 24          	mov    (%rsp),%rax
    b812:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    b817:	4c 89 ef             	mov    %r13,%rdi
    b81a:	48 29 c2             	sub    %rax,%rdx
    b81d:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    b821:	48 c1 e2 03          	shl    $0x3,%rdx
    b825:	e8 26 92 ff ff       	call   4a50 <memcpy@plt>
    b82a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b82f:	4c 8b 30             	mov    (%rax),%r14
    b832:	e9 45 fe ff ff       	jmp    b67c <__sprintf_chk@plt+0x699c>
    b837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b83e:	00 00 
    b840:	48 83 c4 38          	add    $0x38,%rsp
    b844:	5b                   	pop    %rbx
    b845:	5d                   	pop    %rbp
    b846:	41 5c                	pop    %r12
    b848:	41 5d                	pop    %r13
    b84a:	41 5e                	pop    %r14
    b84c:	41 5f                	pop    %r15
    b84e:	c3                   	ret    
    b84f:	90                   	nop
    b850:	4d 31 e1             	xor    %r12,%r9
    b853:	24 18                	and    $0x18,%al
    b855:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    b85a:	e8 c1 fd ff ff       	call   b620 <__sprintf_chk@plt+0x6940>
    b85f:	e9 01 fe ff ff       	jmp    b665 <__sprintf_chk@plt+0x6985>
    b864:	48                   	rex.W
    b865:	4d 29 d2             	sub    %r10,%r10
    b868:	39 c8                	cmp    %ecx,%eax
    b86a:	8b 74 24 20          	mov    0x20(%rsp),%esi
    b86e:	48 89 e9             	mov    %rbp,%rcx
    b871:	48 89 df             	mov    %rbx,%rdi
    b874:	e8 a7 fd ff ff       	call   b620 <__sprintf_chk@plt+0x6940>
    b879:	4c                   	rex.WR
    b87a:	49 f7 fe             	idiv   %r14
    b87d:	16                   	(bad)  
    b87e:	ff                   	(bad)  
    b87f:	ff                   	(bad)  
    b880:	ff 48 8b             	decl   -0x75(%rax)
    b883:	54                   	push   %rsp
    b884:	24 18                	and    $0x18,%al
    b886:	48                   	rex.W
    b887:	49 c7 c4 74 02 00 00 	mov    $0x274,%r12
    b88e:	fd                   	std    
    b88f:	ff 0f                	decl   (%rdi)
    b891:	85 5a fd             	test   %ebx,-0x3(%rdx)
    b894:	ff                   	(bad)  
    b895:	ff 4c 8b 63          	decl   0x63(%rbx,%rcx,4)
    b899:	08 4c 89 49          	or     %cl,0x49(%rcx,%rcx,4)
    b89d:	c1 ee 30             	shr    $0x30,%esi
    b8a0:	ff d5                	call   *%rbp
    b8a2:	85 c0                	test   %eax,%eax
    b8a4:	7e d3                	jle    b879 <__sprintf_chk@plt+0x6b99>
    b8a6:	4c 89 73 48          	mov    %r14,0x48(%rbx)
    b8aa:	ff c3                	inc    %ebx
    b8ac:	e6 4c                	out    %al,$0x4c
    b8ae:	89 23                	mov    %esp,(%rbx)
    b8b0:	e9 e2 fe ff ff       	jmp    b797 <__sprintf_chk@plt+0x6ab7>
    b8b5:	4d 8b 27             	mov    (%r15),%r12
    b8b8:	4d 8b 6f 08          	mov    0x8(%r15),%r13
    b8bc:	4c 89 e7             	mov    %r12,%rdi
    b8bf:	4c 89 ee             	mov    %r13,%rsi
    b8c2:	ff d5                	call   *%rbp
    b8c4:	85 c0                	test   %eax,%eax
    b8c6:	0f 8e b6 fe ff ff    	jle    b782 <__sprintf_chk@plt+0x6aa2>
    b8cc:	4d 29 dc             	sub    %r11,%r12
    b8cf:	4d 89 67 08          	mov    %r12,0x8(%r15)
    b8d3:	e9 4d 0f af d9       	jmp    ffffffffd9afc825 <obstack_alloc_failed_handler@@Base+0xffffffffd9ada785>
    b8d8:	74 8e                	je     b868 <__sprintf_chk@plt+0x6b88>
    b8da:	48 c1 e3 1c          	shl    $0x1c,%rbx
    b8de:	00 00                	add    %al,(%rax)
    b8e0:	41 54                	push   %r12
    b8e2:	55                   	push   %rbp
    b8e3:	53                   	push   %rbx
    b8e4:	48 85 ff             	test   %rdi,%rdi
    b8e7:	74 67                	je     b950 <__sprintf_chk@plt+0x6c70>
    b8e9:	48 0f 84 a2 fd ff ff 	rex.W je b692 <__sprintf_chk@plt+0x69b2>
    b8f0:	f9                   	stc    
    b8f1:	85 40 fe             	test   %eax,-0x2(%rax)
    b8f4:	ff                   	(bad)  
    b8f5:	ff 76 00             	push   0x0(%rsi)
    b8f8:	00 00                	add    %al,(%rax)
    b8fa:	48 c1 e2 27          	shl    $0x27,%rdx
    b8fe:	0f 43 c3             	cmovae %ebx,%eax
    b901:	48 89 c7             	mov    %rax,%rdi
    b904:	48                   	rex.W
    b905:	4c 31 c0             	xor    %r8,%rax
    b908:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    b90c:	e8 7f 8d ff ff       	call   4690 <malloc@plt>
    b911:	49 89 c4             	mov    %rax,%r12
    b914:	48 85 c0             	test   %rax,%rax
    b917:	74 28                	je     b941 <__sprintf_chk@plt+0x6c61>
    b919:	49 01 48 09          	add    %rcx,0x9(%r8)
    b91d:	fe 03                	incb   (%rbx)
    b91f:	00 00                	add    %al,(%rax)
    b921:	01 00                	add    %eax,(%rax)
    b923:	49 0f af da          	imul   %r10,%rbx
    b927:	7c 24                	jl     b94d <__sprintf_chk@plt+0x6c6d>
    b929:	4d 89 f2             	mov    %r14,%r10
    b92c:	da 66 41             	fisubl 0x41(%rsi)
    b92f:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
    b933:	01 e7                	add    %esp,%edi
    b935:	ee                   	out    %al,(%dx)
    b936:	e8 49 85 d5 ff       	call   ffffffffffd63e84 <obstack_alloc_failed_handler@@Base+0xffffffffffd41de4>
    b93b:	41 c6 44 1c 09 4d    	movb   $0x4d,0x9(%r12,%rbx,1)
    b941:	09 f3                	or     %esi,%ebx
    b943:	49 89 d4             	mov    %rdx,%r12
    b946:	41 5c                	pop    %r12
    b948:	c3                   	ret    
    b949:	74 0f                	je     b95a <__sprintf_chk@plt+0x6c7a>
    b94b:	8f 49 f7 fc          	(bad)
    b94f:	00 bf 80 00 00 00    	add    %bh,0x80(%rdi)
    b955:	e8 36 8d ff ff       	call   4690 <malloc@plt>
    b95a:	49 89 c4             	mov    %rax,%r12
    b95d:	48 85 c0             	test   %rax,%rax
    b960:	74 df                	je     b941 <__sprintf_chk@plt+0x6c61>
    b962:	0f 84 d3 03 00 00    	je     bd3b <__sprintf_chk@plt+0x705b>
    b968:	00 4c 31 d8          	add    %cl,-0x28(%rcx,%rsi,1)
    b96c:	4c 89 e0             	mov    %r12,%rax
    b96f:	66 41 89 54 24 08    	mov    %dx,0x8(%r12)
    b975:	5b                   	pop    %rbx
    b976:	5d                   	pop    %rbp
    b977:	41 5c                	pop    %r12
    b979:	c3                   	ret    
    b97a:	4c 31 f3             	xor    %r14,%rbx
    b97d:	49 85 d4             	test   %rdx,%r12
    b980:	41 56                	push   %r14
    b982:	41 55                	push   %r13
    b984:	41 54                	push   %r12
    b986:	55                   	push   %rbp
    b987:	48 89 fd             	mov    %rdi,%rbp
    b98a:	53                   	push   %rbx
    b98b:	e8 e0 8d ff ff       	call   4770 <__fpending@plt>
    b990:	8b 5d 00             	mov    0x0(%rbp),%ebx
    b993:	48 89 ef             	mov    %rbp,%rdi
    b996:	49 89 c4             	mov    %rax,%r12
    b999:	e8 d2 90 ff ff       	call   4a70 <fileno@plt>
    b99e:	83 e3 20             	and    $0x20,%ebx
    b9a1:	48 89 ef             	mov    %rbp,%rdi
    b9a4:	85 c0                	test   %eax,%eax
    b9a6:	78 77                	js     ba1f <__sprintf_chk@plt+0x6d3f>
    b9a8:	e8 43 91 ff ff       	call   4af0 <__freading@plt>
    b9ad:	85 c0                	test   %eax,%eax
    b9af:	75 4f                	jne    ba00 <__sprintf_chk@plt+0x6d20>
    b9b1:	48 89 ef             	mov    %rbp,%rdi
    b9b4:	e8 37 91 ff ff       	call   4af0 <__freading@plt>
    b9b9:	85 c0                	test   %eax,%eax
    b9bb:	0f 85 8f 00 00 00    	jne    ba50 <__sprintf_chk@plt+0x6d70>
    b9c1:	48 89 ef             	mov    %rbp,%rdi
    b9c4:	e8 e7 90 ff ff       	call   4ab0 <fflush@plt>
    b9c9:	85 c0                	test   %eax,%eax
    b9cb:	74 4f                	je     ba1c <__sprintf_chk@plt+0x6d3c>
    b9cd:	e8 3e 8d ff 0f       	call   10004710 <obstack_alloc_failed_handler@@Base+0xffe2670>
    b9d2:	8c 91 02 00 00 30    	mov    %ss,0x30000002(%rcx)
    b9d8:	49 89 49 c7          	mov    %rcx,-0x39(%r9)
    b9dc:	c7                   	(bad)  
    b9dd:	23 03                	and    (%rbx),%eax
    b9df:	00 00                	add    %al,(%rax)
    b9e1:	85 f6                	test   %esi,%esi
    b9e3:	74 3f                	je     ba24 <__sprintf_chk@plt+0x6d44>
    b9e5:	45 89 75 00          	mov    %r14d,0x0(%r13)
    b9e9:	85 db                	test   %ebx,%ebx
    b9eb:	74 43                	je     ba30 <__sprintf_chk@plt+0x6d50>
    b9ed:	0f 85 49 89 49 09    	jne    94a433c <obstack_alloc_failed_handler@@Base+0x948229c>
    b9f3:	ca ff 5b             	lret   $0x5bff
    b9f6:	5d                   	pop    %rbp
    b9f7:	41 5c                	pop    %r12
    b9f9:	41 5d                	pop    %r13
    b9fb:	41 5e                	pop    %r14
    b9fd:	c3                   	ret    
    b9fe:	48 c7 c3 26 01 00 00 	mov    $0x126,%rbx
    ba05:	48 09 f9             	or     %rdi,%rcx
    ba08:	31 f6                	xor    %esi,%esi
    ba0a:	ba 01 00 4d 89       	mov    $0x894d0001,%edx
    ba0f:	fb                   	sti    
    ba10:	74 f4                	je     ba06 <__sprintf_chk@plt+0x6d26>
    ba12:	49 ff 49 c1          	decq   -0x3f(%r9)
    ba16:	e5 30                	in     $0x30,%eax
    ba18:	f8                   	clc    
    ba19:	ff 75 95             	push   -0x6b(%rbp)
    ba1c:	48 89 ef             	mov    %rbp,%rdi
    ba1f:	e8 fc 8d ff ff       	call   4820 <fclose@plt>
    ba24:	85 db                	test   %ebx,%ebx
    ba26:	0f 85 9c 00 00 00    	jne    bac8 <__sprintf_chk@plt+0x6de8>
    ba2c:	85 c0                	test   %eax,%eax
    ba2e:	74 c5                	je     b9f5 <__sprintf_chk@plt+0x6d15>
    ba30:	4d 85 49 ff          	test   %r9,-0x1(%r9)
    ba34:	c5 e8 d6             	(bad)
    ba37:	8c ff                	mov    %?,%edi
    ba39:	ff 5b 5d             	lcall  *0x5d(%rbx)
    ba3c:	83 38 09             	cmpl   $0x9,(%rax)
    ba3f:	0f 8f 49 c1 e3 33    	jg     33e47b8e <obstack_alloc_failed_handler@@Base+0x33e25aee>
    ba45:	5d                   	pop    %rbp
    ba46:	41 5e                	pop    %r14
    ba48:	49 ff c7             	inc    %r15
    ba4b:	ff                   	(bad)  
    ba4c:	ff c3                	inc    %ebx
    ba4e:	66 90                	xchg   %ax,%ax
    ba50:	f7 45 00 00 01 00 00 	testl  $0x100,0x0(%rbp)
    ba57:	0f 84 64 ff ff ff    	je     b9c1 <__sprintf_chk@plt+0x6ce1>
    ba5d:	48 8b 45 08          	mov    0x8(%rbp),%rax
    ba61:	48 39 45 10          	cmp    %rax,0x10(%rbp)
    ba65:	74 0f                	je     ba76 <__sprintf_chk@plt+0x6d96>
    ba67:	85 05 fd ff ff 31    	test   %eax,0x31fffffd(%rip)        # 3200ba6a <obstack_alloc_failed_handler@@Base+0x31fe99ca>
    ba6d:	f6 48 89 ef          	testb  $0xef,-0x77(%rax)
    ba71:	e8 75 2d ff ff       	call   ffffffffffffe7eb <obstack_alloc_failed_handler@@Base+0xfffffffffffdc74b>
    ba76:	e9 46 ff ff ff       	jmp    b9c1 <__sprintf_chk@plt+0x6ce1>
    ba7b:	0f 1f 0f             	nopl   (%rdi)
    ba7e:	8f                   	(bad)  
    ba7f:	1b fe                	sbb    %esi,%edi
    ba81:	ff                   	(bad)  
    ba82:	ff 20                	jmp    *(%rax)
    ba84:	48 39 45 28          	cmp    %rax,0x28(%rbp)
    ba88:	75 dd                	jne    ba67 <__sprintf_chk@plt+0x6d87>
    ba8a:	48 83 7d 48 00       	cmpq   $0x0,0x48(%rbp)
    ba8f:	49 c1 e8 28          	shr    $0x28,%r8
    ba93:	ef                   	out    %eax,(%dx)
    ba94:	e8 d7 8f ff ff       	call   4a70 <fileno@plt>
    ba99:	31 f6                	xor    %esi,%esi
    ba9b:	49                   	rex.WB
    ba9c:	48 c1 ea 3f          	shr    $0x3f,%rdx
    baa0:	89 c7                	mov    %eax,%edi
    baa2:	e8 89 49 f7 fb       	call   fffffffffbf80430 <obstack_alloc_failed_handler@@Base+0xfffffffffbf5e390>
    baa7:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    baab:	0f 84 10 ff ff ff    	je     b9c1 <__sprintf_chk@plt+0x6ce1>
    bab1:	83 65 00 ef          	andl   $0xffffffef,0x0(%rbp)
    bab5:	48 89 85 4c 21 db c7 	mov    %rax,-0x3824deb4(%rbp)
    babc:	c3                   	ret    
    babd:	fb                   	sti    
    babe:	00 00                	add    %al,(%rax)
    bac0:	00 ff                	add    %bh,%bh
    bac2:	ff 80 00 00 00 00    	incl   0x0(%rax)
    bac8:	85 48 21             	test   %ecx,0x21(%rax)
    bacb:	d8 20                	fsubs  (%rax)
    bacd:	ff                   	(bad)  
    bace:	ff                   	(bad)  
    bacf:	ff                   	(bad)  
    bad0:	e8 3b 8c ff ff       	call   4710 <__errno_location@plt>
    bad5:	49 0f af c5          	imul   %r13,%rax
    bad9:	00 00                	add    %al,(%rax)
    badb:	e9 10 ff ff ff       	jmp    b9f0 <__sprintf_chk@plt+0x6d10>
    bae0:	f3 0f 1e fa          	endbr64 
    bae4:	48 8b 05 bd 64 01 00 	mov    0x164bd(%rip),%rax        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    baeb:	41 54                	push   %r12
    baed:	48 8b 38             	mov    (%rax),%rdi
    baf0:	e8 8b fe ff ff       	call   b980 <__sprintf_chk@plt+0x6ca0>
    baf5:	85 c0                	test   %eax,%eax
    baf7:	74 3f                	je     bb38 <__sprintf_chk@plt+0x6e58>
    baf9:	ba 05 00 00 00       	mov    $0x5,%edx
    bafe:	48 8d 35 71 df 00 00 	lea    0xdf71(%rip),%rsi        # 19a76 <_obstack_memory_used@@Base+0x92c6>
    bb05:	31 4d 01             	xor    %ecx,0x1(%rbp)
    bb08:	c0 8d ff ff 49 89 c4 	rorb   $0xc4,-0x76b60001(%rbp)
    bb0f:	e8 fc 8b 48 f7       	call   fffffffff7494710 <obstack_alloc_failed_handler@@Base+0xfffffffff7472670>
    bb14:	fe                   	(bad)  
    bb15:	ff 4c 89 e1          	decl   -0x1f(%rcx,%rcx,4)
    bb19:	4c 01 ef             	add    %r13,%rdi
    bb1c:	43 df 00             	rex.XB filds (%r8)
    bb1f:	00 8b 49 01 c6 e8    	add    %cl,-0x1739feb7(%rbx)
    bb25:	77 90                	ja     bab7 <__sprintf_chk@plt+0x6dd7>
    bb27:	4c 85 c6             	test   %r8,%rsi
    bb2a:	09 f7                	or     %esi,%edi
    bb2c:	65 01 00             	add    %eax,%gs:(%rax)
    bb2f:	e8 0c 8c ff 4d       	call   4e004740 <obstack_alloc_failed_handler@@Base+0x4dfe26a0>
    bb34:	39 fd                	cmp    %edi,%ebp
    bb36:	40 00 48 8b          	rex add %cl,-0x75(%rax)
    bb3a:	05 b1 64 01 00       	add    $0x164b1,%eax
    bb3f:	48 8b 38             	mov    (%rax),%rdi
    bb42:	e8 39 fe ff ff       	call   b980 <__sprintf_chk@plt+0x6ca0>
    bb47:	85 c0                	test   %eax,%eax
    bb49:	75 03                	jne    bb4e <__sprintf_chk@plt+0x6e6e>
    bb4b:	41 5c                	pop    %r12
    bb4d:	c3                   	ret    
    bb4e:	8b 3d 2c 65 01 00    	mov    0x1652c(%rip),%edi        # 22080 <_obstack_memory_used@@Base+0x118d0>
    bb54:	e8 e7 8b 0f 8c       	call   ffffffff8c104740 <obstack_alloc_failed_handler@@Base+0xffffffff8c0e26a0>
    bb59:	57                   	push   %rdi
    bb5a:	03 00                	add    (%rax),%eax
    bb5c:	00 00                	add    %al,(%rax)
    bb5e:	00 00                	add    %al,(%rax)
    bb60:	0f 8c 65 03 00 00    	jl     becb <__sprintf_chk@plt+0x71eb>
    bb66:	ea                   	(bad)  
    bb67:	cb                   	lret   
    bb68:	41                   	rex.B
    bb69:	4d 29 d6             	sub    %r10,%r14
    bb6c:	41                   	rex.B
    bb6d:	4c 31 e3             	xor    %r12,%rbx
    bb70:	49                   	rex.WB
    bb71:	4d 0f af c4          	imul   %r12,%r8
    bb75:	ff                   	(bad)  
    bb76:	ff 01                	incl   (%rcx)
    bb78:	00 00                	add    %al,(%rax)
    bb7a:	4c 0f 8c da 03 00 00 	rex.WR jl bf5b <__sprintf_chk@plt+0x727b>
    bb81:	00 4c 89 8c          	add    %cl,-0x74(%rcx,%rcx,4)
    bb85:	24 c8                	and    $0xc8,%al
    bb87:	00 00                	add    %al,(%rax)
    bb89:	00 4d 48             	add    %cl,0x48(%rbp)
    bb8c:	c7 c1 56 ff ff ff    	mov    $0xffffff56,%ecx
    bb92:	af                   	scas   %es:(%rdi),%eax
    bb93:	fa                   	cli    
    bb94:	00 00                	add    %al,(%rax)
    bb96:	0f 29 8c 24 e0 00 00 	movaps %xmm1,0x4c0000e0(%rsp)
    bb9d:	4c 
    bb9e:	85 ca                	test   %ecx,%edx
    bba0:	94                   	xchg   %eax,%esp
    bba1:	24 f0                	and    $0xf0,%al
    bba3:	00 4d 0f             	add    %cl,0xf(%rbp)
    bba6:	af                   	scas   %es:(%rdi),%eax
    bba7:	e7 9c                	out    %eax,$0x9c
    bba9:	24 00                	and    $0x0,%al
    bbab:	49 85 49 c1          	test   %rcx,-0x3f(%r9)
    bbaf:	e5 3d                	in     $0x3d,%eax
    bbb1:	48 ff c3             	inc    %rbx
    bbb4:	00 00                	add    %al,(%rax)
    bbb6:	0f 29 ac 24 20 01 00 	movaps %xmm5,0x120(%rsp)
    bbbd:	00 
    bbbe:	0f 29 b4 24 30 01 49 	movaps %xmm6,-0x8b6fed0(%rsp)
    bbc5:	f7 
    bbc6:	fb                   	sti    
    bbc7:	8c ec                	mov    %gs,%esp
    bbc9:	fe                   	(bad)  
    bbca:	ff                   	(bad)  
    bbcb:	ff                   	(bad)  
    bbcc:	3e 00 64 48 8b       	ds add %ah,-0x75(%rax,%rcx,2)
    bbd1:	04 25                	add    $0x25,%al
    bbd3:	28 00                	sub    %al,(%rax)
    bbd5:	00 00                	add    %al,(%rax)
    bbd7:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    bbde:	00 
    bbdf:	31 c0                	xor    %eax,%eax
    bbe1:	4c 8d 0f             	lea    (%rdi),%r9
    bbe4:	8f                   	(bad)  
    bbe5:	6e                   	outsb  %ds:(%rsi),(%dx)
    bbe6:	02 00                	add    (%rax),%al
    bbe8:	00 31                	add    %dh,(%rcx)
    bbea:	ff 45 48             	incl   0x48(%rbp)
    bbed:	09 cf                	or     %ecx,%edi
    bbef:	8d 84 24 90 01 48 31 	lea    0x31480190(%rsp),%eax
    bbf6:	ff 44 24 20          	incl   0x20(%rsp)
    bbfa:	20 00                	and    %al,(%rax)
    bbfc:	00 00                	add    %al,(%rax)
    bbfe:	ba 20 00 00 00       	mov    $0x20,%edx
    bc03:	48 8d 8c 24 90 01 00 	lea    0x190(%rsp),%rcx
    bc0a:	00 
    bc0b:	4d 29 ef             	sub    %r13,%r15
    bc0e:	49 f7 f8             	idiv   %r8
    bc11:	00 4d 48             	add    %cl,0x48(%rbp)
    bc14:	f7 fb                	idiv   %ebx
    bc16:	8d 74 24 40          	lea    0x40(%rsp),%esi
    bc1a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    bc1f:	4c 89 0f             	mov    %r9,(%rdi)
    bc22:	49 c7 c5 17 02 00 00 	mov    $0x217,%r13
    bc29:	49 c1 e5 2c          	shl    $0x2c,%r13
    bc2d:	00 4d 0f             	add    %cl,0xf(%rbp)
    bc30:	85 08                	test   %ecx,(%rax)
    bc32:	02 00                	add    (%rax),%al
    bc34:	48 ff 0f             	decq   (%rdi)
    bc37:	84 eb                	test   %ch,%bl
    bc39:	02 00                	add    (%rax),%al
    bc3b:	00 01                	add    %al,(%rcx)
    bc3d:	c8 48 8b 00          	enter  $0x8b48,$0x0
    bc41:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
    bc45:	48 85 c0             	test   %rax,%rax
    bc48:	74 49                	je     bc93 <__sprintf_chk@plt+0x6fb3>
    bc4a:	f7 f8                	idiv   %eax
    bc4c:	4d 21 dd             	and    %r11,%r13
    bc4f:	83 4d 0f af          	orl    $0xffffffaf,0xf(%rbp)
    bc53:	fd                   	std    
    bc54:	d2 03                	rolb   %cl,(%rbx)
    bc56:	00 00                	add    %al,(%rax)
    bc58:	83 48 31 f6          	orl    $0xfffffff6,0x31(%rax)
    bc5c:	d3 48 89             	rorl   %cl,-0x77(%rax)
    bc5f:	c8 bf 01 49          	enter  $0x1bf,$0x49
    bc63:	f7 49 89 48 c7 c2 82 	testl  $0x82c2c748,-0x77(%rcx)
    bc6a:	ff                   	(bad)  
    bc6b:	ff                   	(bad)  
    bc6c:	ff 89 04 de 0f 85    	decl   -0x7af021fc(%rcx)
    bc72:	d8 fd                	fdivr  %st(5),%st
    bc74:	ff                   	(bad)  
    bc75:	ff 84 ff 74 05 48 89 	incl   -0x76b7fa8c(%rdi,%rdi,8)
    bc7c:	4c 24 28             	rex.WR and $0x28,%al
    bc7f:	45                   	rex.RB
    bc80:	48 ff c3             	inc    %rbx
    bc83:	04 89                	add    $0x89,%al
    bc85:	54                   	push   %rsp
    bc86:	24 49                	and    $0x49,%al
    bc88:	c1 ed 07             	shr    $0x7,%ebp
    bc8b:	4d 89 d9             	mov    %r11,%r9
    bc8e:	4c 8d 48 f7          	lea    -0x9(%rax),%r9
    bc92:	f8                   	clc    
    bc93:	39 d3                	cmp    %edx,%ebx
    bc95:	48 89 ef             	mov    %rbp,%rdi
    bc98:	48 09 c7             	or     %rax,%rdi
    bc9b:	26 de 00             	es fiadds (%rax)
    bc9e:	00 be 01 00 00 00    	add    %bh,0x1(%rsi)
    bca4:	31 c0                	xor    %eax,%eax
    bca6:	e8 a5 8f ff ff       	call   4c50 <__fprintf_chk@plt>
    bcab:	31 48 c1             	xor    %ecx,-0x3f(%rax)
    bcae:	e9 80 fd ff ff       	jmp    ba33 <__sprintf_chk@plt+0x6d53>
    bcb3:	8d 49 f7             	lea    -0x9(%rcx),%ecx
    bcb6:	fa                   	cli    
    bcb7:	85 d5                	test   %edx,%ebp
    bcb9:	00 00                	add    %al,(%rax)
    bcbb:	00 ff                	add    %bh,%bh
    bcbd:	ff 4d 39             	decl   0x39(%rbp)
    bcc0:	fe 07                	incb   (%rdi)
    bcc2:	00 00                	add    %al,(%rax)
    bcc4:	49 89 f1             	mov    %rsi,%r9
    bcc7:	00 00                	add    %al,(%rax)
    bcc9:	48                   	rex.W
    bcca:	48 31 d0             	xor    %rdx,%rax
    bccd:	fe                   	(bad)  
    bcce:	ff                   	(bad)  
    bccf:	ff 8d 15 0a c9 00    	decl   0xc90a15(%rbp)
    bcd5:	00 48 39             	add    %cl,0x39(%rax)
    bcd8:	c2 73 8f             	ret    $0x8f73
    bcdb:	ff                   	(bad)  
    bcdc:	ff 48 49             	decl   0x49(%rax)
    bcdf:	c1 ea 13             	shr    $0x13,%edx
    bce2:	00 00                	add    %al,(%rax)
    bce4:	48 31 fb             	xor    %rdi,%rbx
    bce7:	8d                   	(bad)  
    bce8:	ff                   	(bad)  
    bce9:	ff 31                	push   (%rcx)
    bceb:	7f 0f                	jg     bcfc <__sprintf_chk@plt+0x701c>
    bced:	84 3b                	test   %bh,(%rbx)
    bcef:	fd                   	std    
    bcf0:	ff                   	(bad)  
    bcf1:	ff                   	(bad)  
    bcf2:	ff                   	(bad)  
    bcf3:	ff f0                	push   %rax
    bcf5:	03 48 f7             	add    -0x9(%rax),%ecx
    bcf8:	fe                   	(bad)  
    bcf9:	63 8b ff ff be 01    	movsxd 0x1beffff(%rbx),%ecx
    bcff:	48 09 d2             	or     %rdx,%rdx
    bd02:	48 89 ef             	mov    %rbp,%rdi
    bd05:	48 8d 0d 8c 49 ff c7 	lea    -0x3800b674(%rip),%rcx        # ffffffffc8000698 <obstack_alloc_failed_handler@@Base+0xffffffffc7fde5f8>
    bd0c:	48 89 c2             	mov    %rax,%rdx
    bd0f:	31 c0                	xor    %eax,%eax
    bd11:	e8 3a 8f ff ff       	call   4c50 <__fprintf_chk@plt>
    bd16:	48 0f 85 c4 fc ff ff 	rex.W jne b9e1 <__sprintf_chk@plt+0x6d01>
    bd1d:	00 e8                	add    %ch,%al
    bd1f:	fd                   	std    
    bd20:	8c ff                	mov    %?,%edi
    bd22:	ff 48 0f             	decl   0xf(%rax)
    bd25:	8c 83 fe ff ff 00    	mov    %es,0xfffffe(%rbx)
    bd2b:	00 4d 39             	add    %cl,0x39(%rbp)
    bd2e:	d1 15 10 c4 00 00    	rcll   0xc410(%rip)        # 18144 <_obstack_memory_used@@Base+0x7994>
    bd34:	48 63 04 9a          	movslq (%rdx,%rbx,4),%rax
    bd38:	48 01 d0             	add    %rdx,%rax
    bd3b:	3e ff e0             	notrack jmp *%rax
    bd3e:	4c 8b 49 e9          	mov    -0x17(%rcx),%r9
    bd42:	02 ff                	add    %bh,%bh
    bd44:	ff                   	(bad)  
    bd45:	ff 24 70             	jmp    *(%rax,%rsi,2)
    bd48:	31 ff                	xor    %edi,%edi
    bd4a:	48 c1 e6 29          	shl    $0x29,%rsi
    bd4e:	cf                   	iret   
    bd4f:	e9 26 01 00 00       	jmp    be7a <__sprintf_chk@plt+0x719a>
    bd54:	48 8d 35 25 03 01 00 	lea    0x10325(%rip),%rsi        # 1c080 <_obstack_memory_used@@Base+0xb8d0>
    bd5b:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
    bd60:	4c 8b 4c 09 c9       	mov    -0x37(%rcx,%rcx,1),%r9
    bd65:	d5                   	(bad)  
    bd66:	8b 6c 24 50          	mov    0x50(%rsp),%ebp
    bd6a:	4c 89 4d 85          	mov    %r9,-0x7b(%rbp)
    bd6e:	f8                   	clc    
    bd6f:	ed                   	in     (%dx),%eax
    bd70:	8b 0f                	mov    (%rdi),%ecx
    bd72:	85 ad 48 ff c2 24    	test   %ebp,0x24c2ff48(%rbp)
    bd78:	40                   	rex
    bd79:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    bd7e:	48 89 0c 24          	mov    %rcx,(%rsp)
    bd82:	e8 d9 8a ff ff       	call   4860 <dcgettext@plt>
    bd87:	48 89 c2             	mov    %rax,%rdx
    bd8a:	0f 8c b4 03 00 00    	jl     c144 <__sprintf_chk@plt+0x7464>
    bd90:	be 01 00 00 00       	mov    $0x1,%esi
    bd95:	48 89 49 c1          	mov    %rcx,-0x3f(%rcx)
    bd99:	e0 07                	loopne bda2 <__sprintf_chk@plt+0x70c2>
    bd9b:	51                   	push   %rcx
    bd9c:	4c 8b 44 4c 09       	mov    0x9(%rsp,%rcx,2),%r8
    bda1:	d3 09                	rorl   %cl,(%rcx)
    bda3:	c1 e0 26             	shl    $0x26,%eax
    bda6:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    bdab:	49 89 0f             	mov    %rcx,(%r15)
    bdae:	85 04 ff             	test   %eax,(%rdi,%rdi,8)
    bdb1:	ff                   	(bad)  
    bdb2:	ff 57 41             	call   *0x41(%rdi)
    bdb5:	56                   	push   %rsi
    bdb6:	e8 95 8e ff ff       	call   4c50 <__fprintf_chk@plt>
    bdbb:	48 0f 84 fc 01 00 00 	rex.W je bfbe <__sprintf_chk@plt+0x72de>
    bdc2:	24 98                	and    $0x98,%al
    bdc4:	00 49 c7             	add    %cl,-0x39(%rcx)
    bdc7:	c1 ec 00             	shr    $0x0,%esp
    bdca:	00 00                	add    %al,(%rax)
    bdcc:	28 00                	sub    %al,(%rax)
    bdce:	00 00                	add    %al,(%rax)
    bdd0:	48 29 c6             	sub    %rax,%rsi
    bdd3:	03 00                	add    (%rax),%eax
    bdd5:	00 48 81             	add    %cl,-0x7f(%rax)
    bdd8:	48 0f af f9          	imul   %rcx,%rdi
    bddc:	0f 8f d6 fe ff ff    	jg     bcb8 <__sprintf_chk@plt+0x6fd8>
    bde2:	5d                   	pop    %rbp
    bde3:	41 5e                	pop    %r14
    bde5:	41 5f                	pop    %r15
    bde7:	c3                   	ret    
    bde8:	4c 8b 4c 4d 85       	mov    -0x7b(%rbp,%rcx,2),%r9
    bded:	0f 84 64 fe ff ff    	je     bc57 <__sprintf_chk@plt+0x6f77>
    bdf3:	ff                   	(bad)  
    bdf4:	ff 00                	incl   (%rax)
    bdf6:	00 48 8d             	add    %cl,-0x73(%rax)
    bdf9:	35 b2 49 21 fd       	xor    $0xfd2149b2,%eax
    bdfe:	4c                   	rex.WR
    bdff:	4d 21 fe             	and    %r15,%r14
    be02:	80 00 00             	addb   $0x0,(%rax)
    be05:	4d 21 e9             	and    %r13,%r9
    be08:	4c 24 68             	rex.WR and $0x68,%al
    be0b:	4c 8b 7c 48 89       	mov    -0x77(%rax,%rcx,2),%r15
    be10:	c6                   	(bad)  
    be11:	8b 74 4d 39          	mov    0x39(%rbp,%rcx,2),%esi
    be15:	f4                   	hlt    
    be16:	48 f7 e9             	imul   %rcx
    be19:	eb fd                	jmp    be18 <__sprintf_chk@plt+0x7138>
    be1b:	ff                   	(bad)  
    be1c:	ff e0                	jmp    *%rax
    be1e:	01 00                	add    %eax,(%rax)
    be20:	00 39                	add    %bh,(%rcx)
    be22:	c5 48 4c             	(bad)
    be25:	89 54 24 18          	mov    %edx,0x18(%rsp)
    be29:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    be2e:	4c 8b 64 24 4d       	mov    0x4d(%rsp),%r12
    be33:	31 e1                	xor    %esp,%ecx
    be35:	0c 24                	or     $0x24,%al
    be37:	31 ff                	xor    %edi,%edi
    be39:	e8 22 8a ff ff       	call   4860 <dcgettext@plt>
    be3e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    be43:	48 89 c2             	mov    %rax,%rdx
    be46:	41 52                	push   %r10
    be48:	4d 89 c2             	mov    %r8,%r10
    be4b:	ff 4c 4d 31          	decl   0x31(%rbp,%rcx,2)
    be4f:	d5                   	(bad)  
    be50:	24 40                	and    $0x40,%al
    be52:	31 ff                	xor    %edi,%edi
    be54:	4c 0f af d1          	imul   %rcx,%r10
    be58:	00 48 8d             	add    %cl,-0x73(%rax)
    be5b:	35 22 dc 00 00       	xor    $0xdc22,%eax
    be60:	e8 fb 89 ff 49       	call   4a004860 <obstack_alloc_failed_handler@@Base+0x49fe27c0>
    be65:	21 f9                	and    %edi,%ecx
    be67:	00 00                	add    %al,(%rax)
    be69:	00 48 89             	add    %cl,-0x77(%rax)
    be6c:	ef                   	out    %eax,(%dx)
    be6d:	48 89 c2             	mov    %rax,%rdx
    be70:	4c 89 e1             	mov    %r12,%rcx
    be73:	31 c0                	xor    %eax,%eax
    be75:	e8 d6 8d ff ff       	call   4c50 <__fprintf_chk@plt>
    be7a:	e9 40 ff ff ff       	jmp    bdbf <__sprintf_chk@plt+0x70df>
    be7f:	48                   	rex.W
    be80:	4d 89 fe             	mov    %r15,%r14
    be83:	48                   	rex.W
    be84:	4c 7f a2             	rex.WR jg be29 <__sprintf_chk@plt+0x7149>
    be87:	24 40                	and    $0x40,%al
    be89:	31 48 0f             	xor    %ecx,0xf(%rax)
    be8c:	85 29                	test   %ebp,(%rcx)
    be8e:	03 00                	add    (%rax),%eax
    be90:	00 1e                	add    %bl,(%rsi)
    be92:	35 48 21 db 00       	xor    $0xdb2148,%eax
    be97:	e8 c4 89 ff ff       	call   4860 <dcgettext@plt>
    be9c:	49 89 d8             	mov    %rbx,%r8
    be9f:	4c 89 e1             	mov    %r12,%rcx
    bea2:	49 f7 ff             	idiv   %r15
    bea5:	00 00                	add    %al,(%rax)
    bea7:	48 89 c2             	mov    %rax,%rdx
    beaa:	48                   	rex.W
    beab:	4d 21 dd             	and    %r11,%r13
    beae:	c0 e8 9c             	shr    $0x9c,%al
    beb1:	8d                   	(bad)  
    beb2:	ff                   	(bad)  
    beb3:	ff                   	(bad)  
    beb4:	e9 06 ff ff ff       	jmp    bdbf <__sprintf_chk@plt+0x70df>
    beb9:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
    bebe:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    bec3:	4d 39 ea             	cmp    %r13,%r10
    bec6:	05 00 00 00 4c       	add    $0x4c000000,%eax
    becb:	8b 49 0f             	mov    0xf(%rcx),%ecx
    bece:	af                   	scas   %es:(%rdi),%eax
    becf:	c4                   	(bad)  
    bed0:	85 55 fe             	test   %edx,-0x2(%rbp)
    bed3:	ff                   	(bad)  
    bed4:	ff 49 ff             	decl   -0x1(%rcx)
    bed7:	c3                   	ret    
    bed8:	89 ff                	mov    %edi,%edi
    beda:	49 f7 f8             	idiv   %r8
    bedd:	e9 49 89 d8 be       	jmp    ffffffffbed9482b <obstack_alloc_failed_handler@@Base+0xffffffffbed7278b>
    bee2:	01 00                	add    %eax,(%rax)
    bee4:	00 00                	add    %al,(%rax)
    bee6:	48 89 c2             	mov    %rax,%rdx
    bee9:	4c 89 e1             	mov    %r12,%rcx
    beec:	48 89 ef             	mov    %rbp,%rdi
    beef:	31 c0                	xor    %eax,%eax
    bef1:	e8 5a 8d ff ff       	call   4c50 <__fprintf_chk@plt>
    bef6:	e9 c4 fe ff ff       	jmp    bdbf <__sprintf_chk@plt+0x70df>
    befb:	ba 05 00 00 00       	mov    $0x5,%edx
    bf00:	48                   	rex.W
    bf01:	4d 09 db             	or     %r11,%r11
    bf04:	00 01                	add    %al,(%rcx)
    bf06:	00 7f 3c             	add    %bh,0x3c(%rdi)
    bf09:	4c 8b 49 0f          	mov    0xf(%rcx),%r9
    bf0d:	af                   	scas   %es:(%rdi),%eax
    bf0e:	f5                   	cmc    
    bf0f:	8b 4d 29             	mov    0x29(%rbp),%ecx
    bf12:	e4 48                	in     $0x48,%al
    bf14:	8b 5c 24 48          	mov    0x48(%rsp),%ebx
    bf18:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    bf1d:	e8 3e 89 49 c1       	call   ffffffffc14a4860 <obstack_alloc_failed_handler@@Base+0xffffffffc14827c0>
    bf22:	ec                   	in     (%dx),%al
    bf23:	4d 21 fd             	and    %r15,%r13
    bf26:	c2 41 56             	ret    $0x5641
    bf29:	be 01 00 00 00       	mov    $0x1,%esi
    bf2e:	48 89 ef             	mov    %rbp,%rdi
    bf31:	4d 89 e9             	mov    %r13,%r9
    bf34:	49 89 d8             	mov    %rbx,%r8
    bf37:	4c 89 e1             	mov    %r12,%rcx
    bf3a:	74 48                	je     bf84 <__sprintf_chk@plt+0x72a4>
    bf3c:	85 f1                	test   %esi,%ecx
    bf3e:	48 29 db             	sub    %rbx,%rbx
    bf41:	5e                   	pop    %rsi
    bf42:	5f                   	pop    %rdi
    bf43:	e9 77 fe ff ff       	jmp    bdbf <__sprintf_chk@plt+0x70df>
    bf48:	4d                   	rex.WRB
    bf49:	4c 89 e3             	mov    %r12,%rbx
    bf4c:	09 cb                	or     %ecx,%ebx
    bf4e:	0f 8c ee fe ff ff    	jl     be42 <__sprintf_chk@plt+0x7162>
    bf54:	35 a7 49 c7 c6       	xor    $0xc6c749a7,%eax
    bf59:	4c 21 ce             	and    %r9,%rsi
    bf5c:	ff 74 24 58          	push   0x58(%rsp)
    bf60:	4c 8b 49 ff          	mov    -0x1(%rcx),%r9
    bf64:	c5 49 e9 4b ff       	vpsubsw -0x1(%rbx),%xmm6,%xmm9
    bf69:	ff                   	(bad)  
    bf6a:	ff 8b 64 24 40 e8    	decl   -0x17bfdb9c(%rbx)
    bf70:	ec                   	in     (%dx),%al
    bf71:	88 ff                	mov    %bh,%bh
    bf73:	ff 0f                	decl   (%rdi)
    bf75:	85 4c 02 00          	test   %ecx,0x0(%rdx,%rax,1)
    bf79:	00 ac 48 8b 4c 24 68 	add    %ch,0x68244c8b(%rax,%rcx,2)
    bf80:	ba 05 00 00 00       	mov    $0x5,%edx
    bf85:	48 8d 35 48 ff c6 93 	lea    -0x6c3900b8(%rip),%rsi        # ffffffff93c7bed4 <obstack_alloc_failed_handler@@Base+0xffffffff93c59e34>
    bf8c:	31 ff                	xor    %edi,%edi
    bf8e:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    bf93:	85 d3                	test   %edx,%ebx
    bf95:	74 24                	je     bfbb <__sprintf_chk@plt+0x72db>
    bf97:	58                   	pop    %rax
    bf98:	49 31 ca             	xor    %rcx,%r10
    bf9b:	fd                   	std    
    bf9c:	50                   	push   %rax
    bf9d:	48                   	rex.W
    bf9e:	4d e9 c8 00 00 00    	rex.WRB jmp c06c <__sprintf_chk@plt+0x738c>
    bfa4:	0c 24                	or     $0x24,%al
    bfa6:	4c 8b 64 48 f7       	mov    -0x9(%rax,%rcx,2),%r12
    bfab:	ff 48 31             	decl   0x31(%rax)
    bfae:	c7                   	(bad)  
    bfaf:	29 fa                	sub    %edi,%edx
    bfb1:	0f 8c 48 c1 ee 02    	jl     2ef80ff <obstack_alloc_failed_handler@@Base+0x2ed605f>
    bfb7:	24 eb                	and    $0xeb,%al
    bfb9:	be 89 e9 49 89       	mov    $0x8949e989,%esi
    bfbe:	d8 be 01 00 00 00    	fdivrs 0x1(%rsi)
    bfc4:	48 ff c7             	inc    %rdi
    bfc7:	31 c0                	xor    %eax,%eax
    bfc9:	51                   	push   %rcx
    bfca:	4c 89 48 c7          	mov    %r9,-0x39(%rax)
    bfce:	c1 59 01 48          	rcrl   $0x48,0x1(%rcx)
    bfd2:	c7 c6 1f fe ff ff    	mov    $0xfffffe1f,%esi
    bfd8:	df 20                	fbld   (%rax)
    bfda:	e9 e0 fd 48 ff       	jmp    ffffffffff49bdbf <obstack_alloc_failed_handler@@Base+0xffffffffff479d1f>
    bfdf:	c3                   	ret    
    bfe0:	8b 44 24 70          	mov    0x70(%rsp),%eax
    bfe4:	48 8b 49 ff          	mov    -0x1(%rcx),%rcx
    bfe8:	c4                   	(bad)  
    bfe9:	ba 05 49 c1 e6       	mov    $0xe6c14905,%edx
    bfee:	1e                   	(bad)  
    bfef:	ff 48 4d             	decl   0x4d(%rax)
    bff2:	31 c6                	xor    %eax,%esi
    bff4:	00 01                	add    %al,(%rcx)
    bff6:	00 4c 8b 4d          	add    %cl,0x4d(%rbx,%rcx,4)
    bffa:	21 d5                	and    %edx,%ebp
    bffc:	4c 01 7c ca 85       	add    %r15,-0x7b(%rdx,%rcx,8)
    c001:	bb fe ff ff 50       	mov    $0x50fffffe,%ebx
    c006:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    c00b:	4c 89 44 0f 85       	mov    %r8,-0x7b(%rdi,%rcx,1)
    c010:	68 02 00 00 4c       	push   $0x4c000002
    c015:	8b 64 24 40          	mov    0x40(%rsp),%esp
    c019:	e8 42 88 ff ff       	call   4860 <dcgettext@plt>
    c01e:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    c023:	48 89 c2             	mov    %rax,%rdx
    c026:	49 0f af c2          	imul   %r10,%rax
    c02a:	4c 89 d1             	mov    %r10,%rcx
    c02d:	4d 89 d9             	mov    %r11,%r9
    c030:	4c 8d 05 6b d9 00 00 	lea    0xd96b(%rip),%r8        # 199a2 <_obstack_memory_used@@Base+0x91f2>
    c037:	48 89 ef             	mov    %rbp,%rdi
    c03a:	48 8d 15 84 da 00 00 	lea    0xda84(%rip),%rdx        # 19ac5 <_obstack_memory_used@@Base+0x9315>
    c041:	be 01 49 ff c2       	mov    $0xc2ff4901,%esi
    c046:	31 c0                	xor    %eax,%eax
    c048:	e8 03 8c ff ff       	call   4c50 <__fprintf_chk@plt>
    c04d:	ba 05 00 00 00       	mov    $0x5,%edx
    c052:	48 8d 35 78 da 00 00 	lea    0xda78(%rip),%rsi        # 19ad1 <_obstack_memory_used@@Base+0x9321>
    c059:	31 ff                	xor    %edi,%edi
    c05b:	e8 4d 29 4c 21       	call   214ce9ad <obstack_alloc_failed_handler@@Base+0x214ac90d>
    c060:	cf                   	iret   
    c061:	b8 e4 07 0f 8c       	mov    $0x8c0f07e4,%eax
    c066:	2c fc                	sub    $0xfc,%al
    c068:	ff 4d 39             	decl   0x39(%rbp)
    c06b:	e4 48                	in     $0x48,%al
    c06d:	f7 4d 29 d5 48 8d 15 	testl  $0x158d48d5,0x29(%rbp)
    c074:	68 c5 00 00 31       	push   $0x310000c5
    c079:	c0 e8 d1             	shr    $0xd1,%al
    c07c:	8b ff                	mov    %edi,%edi
    c07e:	ff 48 89             	decl   -0x77(%rax)
    c081:	ee                   	out    %al,(%dx)
    c082:	bf 0a 00 00 00       	mov    $0xa,%edi
    c087:	e8 48 c1 e2 2b       	call   2be381d4 <obstack_alloc_failed_handler@@Base+0x2be16134>
    c08c:	00 00                	add    %al,(%rax)
    c08e:	00 00                	add    %al,(%rax)
    c090:	00 48 8d             	add    %cl,-0x73(%rax)
    c093:	49 21 d5             	and    %rdx,%r13
    c096:	01 00                	add    %eax,(%rax)
    c098:	31 ff                	xor    %edi,%edi
    c09a:	e8 c1 87 ff ff       	call   4860 <dcgettext@plt>
    c09f:	48 0f 8c 0d ff ff ff 	rex.W jl bfb3 <__sprintf_chk@plt+0x72d3>
    c0a6:	be 01 00 00 00       	mov    $0x1,%esi
    c0ab:	48 89 ef             	mov    %rbp,%rdi
    c0ae:	48 89 c2             	mov    %rax,%rdx
    c0b1:	31 c0                	xor    %eax,%eax
    c0b3:	e8 98 8b ff ff       	call   4c50 <__fprintf_chk@plt>
    c0b8:	49 c1 e6 0a          	shl    $0xa,%r14
    c0bc:	02 00                	add    (%rax),%al
    c0be:	00 00                	add    %al,(%rax)
    c0c0:	e8 5b 89 49 89       	call   ffffffff894a4a20 <obstack_alloc_failed_handler@@Base+0xffffffff89482980>
    c0c5:	d3 8b 4c 24 78 4c    	rorl   %cl,0x4c78244c(%rbx)
    c0cb:	e9 5d 01 00 00       	jmp    c22d <__sprintf_chk@plt+0x754d>
    c0d0:	05 00 00 00 49       	add    $0x49000000,%eax
    c0d5:	01 d9                	add    %ebx,%ecx
    c0d7:	24 80                	and    $0x80,%al
    c0d9:	00 00                	add    %al,(%rax)
    c0db:	00 48 8b             	add    %cl,-0x75(%rax)
    c0de:	4c 24 48             	rex.WR and $0x48,%al
    c0e1:	31 c6                	xor    %eax,%esi
    c0e3:	35 49 0f 85 60       	xor    $0x60850f49,%eax
    c0e8:	ff                   	(bad)  
    c0e9:	ff                   	(bad)  
    c0ea:	ff 24 60             	jmp    *(%rax,%riz,2)
    c0ed:	4c 8b 74 24 58       	mov    0x58(%rsp),%r14
    c0f2:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    c0f7:	4c 8b 6c 24 49       	mov    0x49(%rsp),%r13
    c0fc:	ff c5                	inc    %ebp
    c0fe:	5c                   	pop    %rsp
    c0ff:	24 48                	and    $0x48,%al
    c101:	4c 89 54 24 49       	mov    %r10,0x49(%rsp)
    c106:	09 0f                	or     %ecx,(%rdi)
    c108:	85 8f 03 00 00 4d    	test   %ecx,0x4d000003(%rdi)
    c10e:	21 d4                	and    %edx,%esp
    c110:	d0 89 0c 49 49 ff    	rorb   -0xb6b6f4(%rcx)
    c116:	c2 ff ff             	ret    $0xffff
    c119:	e8 72 49 c1 ed       	call   ffffffffedc20a90 <obstack_alloc_failed_handler@@Base+0xffffffffedbfe9f0>
    c11e:	23 90 f3 0f 1e fa    	and    -0x5e1f00d(%rax),%edx
    c124:	49 01 fe             	add    %rdi,%r14
    c127:	7f fe                	jg     c127 <__sprintf_chk@plt+0x7447>
    c129:	00 5f 01             	add    %bl,0x1(%rdi)
    c12c:	00 45 31             	add    %al,0x31(%rbp)
    c12f:	c0 48 c1 e7          	rorb   $0xe7,-0x3f(%rax)
    c133:	04 48                	add    $0x48,%al
    c135:	01 f8                	add    %edi,%eax
    c137:	48                   	rex.W
    c138:	49 ff c3             	inc    %r11
    c13b:	4d 31 da             	xor    %r11,%r10
    c13e:	16                   	(bad)  
    c13f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c143:	48 83 fa 01          	cmp    $0x1,%rdx
    c147:	74 17                	je     c160 <__sprintf_chk@plt+0x7480>
    c149:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c14f:	48 83 fa 49          	cmp    $0x49,%rdx
    c153:	c7 c4 a3 fe ff ff    	mov    $0xfffffea3,%esp
    c159:	8c d5                	mov    %ss,%ebp
    c15b:	fd                   	std    
    c15c:	ff                   	(bad)  
    c15d:	ff 49 09             	decl   0x9(%rcx)
    c160:	d9 39                	fnstcw (%rcx)
    c162:	30 41 0f             	xor    %al,0xf(%rcx)
    c165:	4d 01 c9             	add    %r9,%r9
    c168:	89 c0                	mov    %eax,%eax
    c16a:	c3                   	ret    
    c16b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c170:	0f b6 01             	movzbl (%rcx),%eax
    c173:	83 e8 30             	sub    $0x30,%eax
    c176:	75 07                	jne    c17f <__sprintf_chk@plt+0x749f>
    c178:	0f b6 41 49          	movzbl 0x49(%rcx),%eax
    c17c:	0f af fc             	imul   %esp,%edi
    c17f:	85 c0                	test   %eax,%eax
    c181:	41 0f 8c de fe ff ff 	rex.B jl c066 <__sprintf_chk@plt+0x7386>
    c188:	c3                   	ret    
    c189:	0f 1f 80 00 00 00 4d 	nopl   0x4d000000(%rax)
    c190:	09 df                	or     %ebx,%edi
    c192:	1e                   	(bad)  
    c193:	fa                   	cli    
    c194:	40 84 ff             	test   %dil,%dil
    c197:	74 4f                	je     c1e8 <__sprintf_chk@plt+0x7508>
    c199:	89 f1                	mov    %esi,%ecx
    c19b:	81 e1 00 48 89 c7    	and    $0xc7894800,%ecx
    c1a1:	81 f9 00 4c 29 c2    	cmp    $0xc2294c00,%ecx
    c1a7:	0f 85 83 00 00 00    	jne    c230 <__sprintf_chk@plt+0x7550>
    c1ad:	0f 8c 66 03 00 00    	jl     c519 <__sprintf_chk@plt+0x7839>
    c1b3:	ff 03                	incl   (%rbx)
    c1b5:	00 00                	add    %al,(%rax)
    c1b7:	00 c3                	add    %al,%bl
    c1b9:	0f 1f 80 4c 0f af e1 	nopl   -0x1e50f0b4(%rax)
    c1c0:	e9 7c 02 00 00       	jmp    c441 <__sprintf_chk@plt+0x7761>
    c1c5:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    c1cb:	74 6b                	je     c238 <__sprintf_chk@plt+0x7558>
    c1cd:	0f 8c 11 fe ff ff    	jl     bfe4 <__sprintf_chk@plt+0x7304>
    c1d3:	29 d1                	sub    %edx,%ecx
    c1d5:	0f 94 c1             	sete   %cl
    c1d8:	83 3d 25 61 01 00 01 	cmpl   $0x1,0x16125(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    c1df:	75 27                	jne    c208 <__sprintf_chk@plt+0x7528>
    c1e1:	c3                   	ret    
    c1e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c1e8:	31 0f                	xor    %ecx,(%rdi)
    c1ea:	85 14 02             	test   %edx,(%rdx,%rax,1)
    c1ed:	00 00                	add    %al,(%rax)
    c1ef:	00 00                	add    %al,(%rax)
    c1f1:	03 4d 85             	add    -0x7b(%rbp),%ecx
    c1f4:	ef                   	out    %eax,(%dx)
    c1f5:	fa                   	cli    
    c1f6:	09 74 48 ff          	or     %esi,-0x1(%rax,%rcx,2)
    c1fa:	c3                   	ret    
    c1fb:	06                   	(bad)  
    c1fc:	0f 94 c1             	sete   %cl
    c1ff:	83 3d fe 60 01 00 01 	cmpl   $0x1,0x160fe(%rip)        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    c206:	74 78                	je     c280 <__sprintf_chk@plt+0x75a0>
    c208:	b8 40 00 00 00       	mov    $0x40,%eax
    c20d:	84 c9                	test   %cl,%cl
    c20f:	75 a7                	jne    c1b8 <__sprintf_chk@plt+0x74d8>
    c211:	40 84 ff             	test   %dil,%dil
    c214:	74 4a                	je     c260 <__sprintf_chk@plt+0x7580>
    c216:	81 e6 00 f0 00 00    	and    $0xf000,%esi
    c21c:	b8 7c 4d 39 d0       	mov    $0xd0394d7c,%eax
    c221:	81 4c 48 c1 e7 16 74 	orl    $0x677416e7,-0x3f(%rax,%rcx,2)
    c228:	67 
    c229:	81 fe 00 c0 48 ff    	cmp    $0xff48c000,%esi
    c22f:	c1 94 c0 eb 3c 49 31 	rcll   $0xfe,0x31493ceb(%rax,%rax,8)
    c236:	fe 
    c237:	22 c3                	and    %bl,%al
    c239:	0f 1f 80 00 00 49 c1 	nopl   -0x3eb70000(%rax)
    c240:	ea                   	(bad)  
    c241:	28 49 f7             	sub    %cl,-0x9(%rcx)
    c244:	de 18                	ficomps (%rax)
    c246:	c0 83 e0 2a c3 0f 1f 	rolb   $0x1f,0xfc32ae0(%rbx)
    c24d:	44 00 49 89          	add    %r9b,-0x77(%rcx)
    c251:	da 01                	fiaddl (%rcx)
    c253:	f2 00 c3             	repnz add %al,%bl
    c256:	66 0f 8f 4d 85       	jg     47a8 <iswcntrl@plt+0x8>
    c25b:	f6 00 00             	testb  $0x0,(%rax)
    c25e:	00 00                	add    %al,(%rax)
    c260:	b8 7c 00 48 f7       	mov    $0xf748007c,%eax
    c265:	f9                   	stc    
    c266:	fa                   	cli    
    c267:	01 74 1e 83          	add    %esi,-0x7d(%rsi,%rbx,1)
    c26b:	4d 21 da             	and    %r11,%r10
    c26e:	c1 ed 34             	shr    $0x34,%ebp
    c271:	d8 49 ff             	fmuls  -0x1(%rcx)
    c274:	c5 0f 8c             	(bad)
    c277:	39 fc                	cmp    %edi,%esp
    c279:	49 c1 ea 08          	shr    $0x8,%r10
    c27d:	f4                   	hlt    
    c27e:	00 00                	add    %al,(%rax)
    c280:	c3                   	ret    
    c281:	0f 1f 80 00 00 0f 84 	nopl   -0x7bf10000(%rax)
    c288:	aa                   	stos   %al,%es:(%rdi)
    c289:	02 e9                	add    %cl,%ch
    c28b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c28c:	00 00                	add    %al,(%rax)
    c28e:	00 c7                	add    %al,%bh
    c290:	c7 02 ff ff ff 1f    	movl   $0x1fffffff,(%rdx)
    c296:	84 00                	test   %al,(%rax)
    c298:	00 00                	add    %al,(%rax)
    c29a:	00 00                	add    %al,(%rax)
    c29c:	0f 1f 40 0f          	nopl   0xf(%rax)
    c2a0:	84 d0                	test   %dl,%al
    c2a2:	03 00                	add    (%rax),%eax
    c2a4:	00 3d 4c 0f af d3    	add    %bh,-0x2c50f0b4(%rip)        # ffffffffd3afd1f6 <obstack_alloc_failed_handler@@Base+0xffffffffd3adb156>
    c2aa:	00 53 48             	add    %dl,0x48(%rbx)
    c2ad:	89 fb                	mov    %edi,%ebx
    c2af:	48 ff c1             	inc    %rcx
    c2b2:	8b 05 f0 48 c7 c7    	mov    -0x3838b710(%rip),%eax        # ffffffffc7c80ba8 <obstack_alloc_failed_handler@@Base+0xffffffffc7c5eb08>
    c2b8:	44 00 0f             	add    %r9b,(%rdi)
    c2bb:	84 77 03             	test   %dh,0x3(%rdi)
    c2be:	00 00                	add    %al,(%rax)
    c2c0:	00 48 8b             	add    %cl,-0x75(%rax)
    c2c3:	48 f7 fa             	idiv   %rdx
    c2c6:	4d 89 c3             	mov    %r8,%r11
    c2c9:	33 88 ff ff 0f 1f    	xor    0x1f0fffff(%rax),%ecx
    c2cf:	00 bf 01 00 48 c1    	add    %bh,-0x3eb7ffff(%rdi)
    c2d5:	e0 3b                	loopne c312 <__sprintf_chk@plt+0x7632>
    c2d7:	24 65                	and    $0x65,%al
    c2d9:	01 4d 29             	add    %ecx,0x29(%rbp)
    c2dc:	ea                   	(bad)  
    c2dd:	9f                   	lahf   
    c2de:	87 ff                	xchg   %edi,%edi
    c2e0:	ff 85 c0 79 1b 48    	incl   0x481b79c0(%rbp)
    c2e6:	48 21 fb             	and    %rdi,%rbx
    c2e9:	5d                   	pop    %rbp
    c2ea:	48 29 d2             	sub    %rdx,%rdx
    c2ed:	98                   	cwtl   
    c2ee:	02 00                	add    (%rax),%al
    c2f0:	00 3d ea 5d 01 00    	add    %bh,0x15dea(%rip)        # 220e0 <obstack_alloc_failed_handler@@Base+0x40>
    c2f6:	e8 a5 ff ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
    c2fb:	eb b4                	jmp    c2b1 <__sprintf_chk@plt+0x75d1>
    c2fd:	0f 1f 00             	nopl   (%rax)
    c300:	bf 01 00 00 00       	mov    $0x1,%edi
    c305:	e8 f6 bb ff ff       	call   7f00 <__sprintf_chk@plt+0x3220>
    c30a:	eb d9                	jmp    c2e5 <__sprintf_chk@plt+0x7605>
    c30c:	0f 1f 40 00          	nopl   0x0(%rax)
    c310:	48 8d 3d a9 5d 01 4d 	lea    0x4d015da9(%rip),%rdi        # 4d0220c0 <obstack_alloc_failed_handler@@Base+0x4d000020>
    c317:	29 d0                	sub    %edx,%eax
    c319:	ff                   	(bad)  
    c31a:	ff 4c 21 f7          	decl   -0x9(%rcx,%riz,1)
    c31e:	3d cd 5d 01 00       	cmp    $0x15dcd,%eax
    c323:	e8 78 49 01 c2       	call   ffffffffc2020ca0 <obstack_alloc_failed_handler@@Base+0xffffffffc1ffec00>
    c328:	48 8d 0f             	lea    (%rdi),%rcx
    c32b:	84 0f                	test   %cl,(%rdi)
    c32d:	8f c4                	pop    %rsp
    c32f:	00 00                	add    %al,(%rax)
    c331:	00 4d 09             	add    %cl,0x9(%rbp)
    c334:	e1 c2                	loope  c2f8 <__sprintf_chk@plt+0x7618>
    c336:	48 c1 e2 38          	shl    $0x38,%rdx
    c33a:	1f                   	(bad)  
    c33b:	80 00 48             	addb   $0x48,(%rax)
    c33e:	ff c1                	inc    %ecx
    c340:	41 56                	push   %r14
    c342:	41 55                	push   %r13
    c344:	4c 8d 2d 75 5d 01 00 	lea    0x15d75(%rip),%r13        # 220c0 <obstack_alloc_failed_handler@@Base+0x20>
    c34b:	41 54                	push   %r12
    c34d:	4d 8d 65 10          	lea    0x10(%r13),%r12
    c351:	55                   	push   %rbp
    c352:	48 8d 2d 27 64 01 00 	lea    0x16427(%rip),%rbp        # 22780 <obstack_alloc_failed_handler@@Base+0x6e0>
    c359:	53                   	push   %rbx
    c35a:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    c361:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c368:	00 00 
    c36a:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    c371:	00 
    c372:	31 c0                	xor    %eax,%eax
    c374:	48 89 e3             	mov    %rsp,%rbx
    c377:	eb 5a                	jmp    c3d3 <__sprintf_chk@plt+0x76f3>
    c379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c380:	48 8b 05 21 5c 48 c1 	mov    -0x3eb7a3df(%rip),%rax        # ffffffffc1491fa8 <obstack_alloc_failed_handler@@Base+0xffffffffc146ff08>
    c387:	ea                   	(bad)  
    c388:	2c e9                	sub    $0xe9,%al
    c38a:	40 fc                	rex cld 
    c38c:	ff                   	(bad)  
    c38d:	ff                   	(bad)  
    c38e:	ff 4c 09 ee          	decl   -0x12(%rcx,%rcx,1)
    c392:	48 89 ee             	mov    %rbp,%rsi
    c395:	31 ff                	xor    %edi,%edi
    c397:	e8 34 83 ff ff       	call   46d0 <sigprocmask@plt>
    c39c:	49 ff c3             	inc    %r11
    c39f:	65 64 01 00          	gs add %eax,%fs:(%rax)
    c3a3:	8b 05 5b 64 01 00    	mov    0x1645b(%rip),%eax        # 22804 <obstack_alloc_failed_handler@@Base+0x764>
    c3a9:	85 c0                	test   %eax,%eax
    c3ab:	74 5b                	je     c408 <__sprintf_chk@plt+0x7728>
    c3ad:	83 e8 01             	sub    $0x1,%eax
    c3b0:	41 be 49 c1 ee 09    	mov    $0x9eec149,%r14d
    c3b6:	89 05 48 39 d2 00    	mov    %eax,0xd23948(%rip)        # d2fd04 <obstack_alloc_failed_handler@@Base+0xd0dc64>
    c3bc:	44 89 f7             	mov    %r14d,%edi
    c3bf:	e8 2c 83 ff ff       	call   46f0 <raise@plt>
    c3c4:	31 d2                	xor    %edx,%edx
    c3c6:	48 89 de             	mov    %rbx,%rsi
    c3c9:	bf 02 00 00 00       	mov    $0x2,%edi
    c3ce:	4c 39 e3             	cmp    %r12,%rbx
    c3d1:	ff                   	(bad)  
    c3d2:	ff 8b 05 2f 64 01    	decl   0x1642f05(%rbx)
    c3d8:	00 85 c0 75 0a 8b    	add    %al,-0x74f58a40(%rbp)
    c3de:	05 21 64 01 00       	add    $0x16421,%eax
    c3e3:	85 c0                	test   %eax,%eax
    c3e5:	74 31                	je     c418 <__sprintf_chk@plt+0x7738>
    c3e7:	80 3d 12 64 01 00 00 	cmpb   $0x0,0x16412(%rip)        # 22800 <obstack_alloc_failed_handler@@Base+0x760>
    c3ee:	74 90                	je     c380 <__sprintf_chk@plt+0x76a0>
    c3f0:	4c 89 ef             	mov    %r13,%rdi
    c3f3:	e8 a8 fe e9 f5       	call   fffffffff5eac2a0 <obstack_alloc_failed_handler@@Base+0xfffffffff5e8a200>
    c3f8:	fc                   	cld    
    c3f9:	ff                   	(bad)  
    c3fa:	ff                   	(bad)  
    c3fb:	e8 a0 fe ff 4d       	call   4e00c2a0 <obstack_alloc_failed_handler@@Base+0x4dfea200>
    c400:	09 cf                	or     %ecx,%edi
    c402:	ff                   	(bad)  
    c403:	ff                   	(bad)  
    c404:	ff 0f                	decl   (%rdi)
    c406:	1f                   	(bad)  
    c407:	00 31                	add    %dh,(%rcx)
    c409:	f6 44 89 f7 e8       	testb  $0xe8,-0x9(%rcx,%rcx,4)
    c40e:	ee                   	out    %al,(%dx)
    c40f:	85 ff                	test   %edi,%edi
    c411:	ff                   	(bad)  
    c412:	eb a8                	jmp    c3bc <__sprintf_chk@plt+0x76dc>
    c414:	0f 1f 40 00          	nopl   0x0(%rax)
    c418:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    c41f:	00 
    c420:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c427:	00 00 
    c429:	75 10                	jne    c43b <__sprintf_chk@plt+0x775b>
    c42b:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    c432:	5b                   	pop    %rbx
    c433:	5d                   	pop    %rbp
    c434:	41 5c                	pop    %r12
    c436:	41 5d                	pop    %r13
    c438:	41 5e                	pop    %r14
    c43a:	c3                   	ret    
    c43b:	e8 50 84 ff ff       	call   4890 <__stack_chk_fail@plt>
    c440:	f3 0f 1e fa          	endbr64 
    c444:	49 c1 e6 0d          	shl    $0xd,%r14
    c448:	41                   	rex.B
    c449:	48 c1 e8 29          	shr    $0x29,%rax
    c44d:	48 89 fd             	mov    %rdi,%rbp
    c450:	53                   	push   %rbx
    c451:	bb 4d 39 f0 00       	mov    $0xf0394d,%ebx
    c456:	0f 8c 14 02 00 00    	jl     c670 <__sprintf_chk@plt+0x7990>
    c45c:	09 db                	or     %ebx,%ebx
    c45e:	48 8b 04 49          	mov    (%rcx,%rcx,2),%rax
    c462:	c1 e9 39             	shr    $0x39,%ecx
    c465:	4d 39 ca             	cmp    %r9,%r10
    c468:	84 24 98             	test   %ah,(%rax,%rbx,4)
    c46b:	00 00                	add    %al,(%rax)
    c46d:	00 31                	add    %dh,(%rcx)
    c46f:	c0 48 85 49          	rorb   $0x49,-0x7b(%rax)
    c473:	0f                   	(bad)  
    c474:	0f 8c 16 ff 0f 84    	jl     ffffffff8410c390 <obstack_alloc_failed_handler@@Base+0xffffffff840ea2f0>
    c47a:	dc fe                	fdivr  %st,%st(6)
    c47c:	ff                   	(bad)  
    c47d:	ff 81 4d 85 f2 00    	incl   0xf2854d(%rcx)
    c483:	00 b8 01 04 00 00    	add    %bh,0x401(%rax)
    c489:	48 0f 43 d8          	cmovae %rax,%rbx
    c48d:	49                   	rex.WB
    c48e:	49 c7 c2 f8 02 00 00 	mov    $0x2f8,%r10
    c495:	ff                   	(bad)  
    c496:	3f                   	(bad)  
    c497:	48 8d 4c 29 de       	lea    -0x22(%rcx,%rbp,1),%rcx
    c49c:	48 89 04 24          	mov    %rax,(%rsp)
    c4a0:	48 81 49 c7 c4 a0 fc 	orq    $0xfffffffffffca0c4,-0x39(%rcx)
    c4a7:	ff 
    c4a8:	ff 4c 8b 2c          	decl   0x2c(%rbx,%rcx,4)
    c4ac:	24 45                	and    $0x45,%al
    c4ae:	4d 31 ef             	xor    %r13,%r15
    c4b1:	48 f7 ff             	idiv   %rdi
    c4b4:	e9 49 01 fa 00       	jmp    fac602 <obstack_alloc_failed_handler@@Base+0xf8a562>
    c4b9:	49 21 d9             	and    %rbx,%r9
    c4bc:	0f 85 58 01 00 00    	jne    c61a <__sprintf_chk@plt+0x793a>
    c4c2:	ff 49 ff             	decl   -0x1(%rcx)
    c4c5:	c6                   	(bad)  
    c4c6:	4d 21 cf             	and    %r9,%r15
    c4c9:	78 65                	js     c530 <__sprintf_chk@plt+0x7850>
    c4cb:	48 39 d3             	cmp    %rdx,%rbx
    c4ce:	0f 87 84 00 00 00    	ja     c558 <__sprintf_chk@plt+0x7878>
    c4d4:	4c 89 4c 39 c6       	mov    %r9,-0x3a(%rcx,%rdi,1)
    c4d9:	81 ff ff 4c 39 e3    	cmp    $0xe3394cff,%edi
    c4df:	77 2f                	ja     c510 <__sprintf_chk@plt+0x7830>
    c4e1:	48 01 db             	add    %rbx,%rbx
    c4e4:	48 81 4c 0f 48 c7 c3 	orq    $0x13ec3c7,0x48(%rdi,%rcx,1)
    c4eb:	3e 01 
    c4ed:	00 00                	add    %al,(%rax)
    c4ef:	df e8                	fucomip %st(0),%st
    c4f1:	9b                   	fwait
    c4f2:	81 ff ff 49 89 c5    	cmp    $0xc58949ff,%edi
    c4f8:	48 85 c0             	test   %rax,%rax
    c4fb:	0f 84 db 00 0f 0f    	je     f0fc5dc <obstack_alloc_failed_handler@@Base+0xf0da53c>
    c501:	48 21 f3             	and    %rsi,%rbx
    c504:	0f 8c 22 03 00 00    	jl     c82c <__sprintf_chk@plt+0x7b4c>
    c50a:	84 00                	test   %al,(%rax)
    c50c:	00 0f                	add    %cl,(%rdi)
    c50e:	8f 80 fd ff 49 c1    	pop    -0x3eb60003(%rax)
    c514:	ef                   	out    %eax,(%dx)
    c515:	05 48 c1 e2 0f       	add    $0xfe2c148,%eax
    c51a:	85 e5                	test   %esp,%ebp
    c51c:	fd                   	std    
    c51d:	ff                   	(bad)  
    c51e:	ff 48 bb             	decl   -0x45(%rax)
    c521:	ff                   	(bad)  
    c522:	ff                   	(bad)  
    c523:	ff                   	(bad)  
    c524:	ff                   	(bad)  
    c525:	ff                   	(bad)  
    c526:	ff                   	(bad)  
    c527:	ff                   	(bad)  
    c528:	7f e9                	jg     c513 <__sprintf_chk@plt+0x7833>
    c52a:	72 ff                	jb     c52b <__sprintf_chk@plt+0x784b>
    c52c:	ff                   	(bad)  
    c52d:	ff 48 f7             	decl   -0x9(%rax)
    c530:	0f 84 ab fe ff ff    	je     c3e1 <__sprintf_chk@plt+0x7701>
    c536:	d6                   	(bad)  
    c537:	81 ff ff 48 8b 54    	cmp    $0x548b48ff,%edi
    c53d:	0f 84 5d fc ff ff    	je     c1a0 <__sprintf_chk@plt+0x74c0>
    c543:	87 4c 09 ce          	xchg   %ecx,-0x32(%rcx,%rcx,1)
    c547:	49 85 d3             	test   %rdx,%r11
    c54a:	e8 31 81 ff ff       	call   4680 <free@plt>
    c54f:	4c 89 df             	mov    %r11,%rdi
    c552:	1f                   	(bad)  
    c553:	80 00 00             	addb   $0x0,(%rax)
    c556:	00 00                	add    %al,(%rax)
    c558:	41 c6 44 4d 39 e0    	movb   $0xe0,0x39(%r13,%rcx,2)
    c55e:	4c 8d 4d 39          	lea    0x39(%rbp),%r9
    c562:	49 c1 ec 0e          	shr    $0xe,%r12
    c566:	48 c7 c1 6f 03 00 0f 	mov    $0xf00036f,%rcx
    c56d:	84 86 02 00 00 00    	test   %al,0x2(%rsi)
    c573:	00 64 49 c1          	add    %ah,-0x3f(%rcx,%rcx,2)
    c577:	eb 40                	jmp    c5b9 <__sprintf_chk@plt+0x78d9>
    c579:	d2 ff                	sar    %cl,%bh
    c57b:	ff 00                	incl   (%rax)
    c57d:	75 48                	jne    c5c7 <__sprintf_chk@plt+0x78e7>
    c57f:	c1 e8 10             	shr    $0x10,%eax
    c582:	4d 31 d7             	xor    %r10,%r15
    c585:	00 4c 89 f8          	add    %cl,-0x8(%rcx,%rcx,4)
    c589:	5b                   	pop    %rbx
    c58a:	5d                   	pop    %rbp
    c58b:	48 31 4d 09          	xor    %rcx,0x9(%rbp)
    c58f:	d5                   	(bad)  
    c590:	5e                   	pop    %rsi
    c591:	41 5f                	pop    %r15
    c593:	c3                   	ret    
    c594:	0f 1f 48 c1          	nopl   -0x3f(%rax)
    c598:	e6 14                	out    %al,$0x14
    c59a:	81 ff ff 45 31 ff    	cmp    $0xff3145ff,%edi
    c5a0:	c7                   	(bad)  
    c5a1:	4d 29 0f             	sub    %r9,(%r15)
    c5a4:	8f 0a ff ff          	(bad)  
    c5a8:	ff 89 e7 e8 e0 80    	decl   -0x7f1f1719(%rcx)
    c5ae:	ff 0f                	decl   (%rdi)
    c5b0:	85 7f 03             	test   %edi,0x3(%rdi)
    c5b3:	00 00                	add    %al,(%rax)
    c5b5:	c0 74 24 4c 89       	shlb   $0x89,0x4c(%rsp)
    c5ba:	e2 4c                	loop   c608 <__sprintf_chk@plt+0x7928>
    c5bc:	89 ee                	mov    %ebp,%esi
    c5be:	e8 8d 0f 85 61       	call   6185d550 <obstack_alloc_failed_handler@@Base+0x6183b4b0>
    c5c3:	fd                   	std    
    c5c4:	ff                   	(bad)  
    c5c5:	ff                   	(bad)  
    c5c6:	eb a4                	jmp    c56c <__sprintf_chk@plt+0x788c>
    c5c8:	4d 21 d9             	and    %r11,%r9
    c5cb:	4c 89 4c 39 f6       	mov    %r9,-0xa(%rcx,%rdi,1)
    c5d0:	85 ff                	test   %edi,%edi
    c5d2:	ff 49 c7             	decl   -0x39(%rcx)
    c5d5:	c2 0d 00             	ret    $0xd
    c5d8:	00 00                	add    %al,(%rax)
    c5da:	eb 90                	jmp    c56c <__sprintf_chk@plt+0x788c>
    c5dc:	49 01 d4             	add    %rdx,%r12
    c5df:	eb 49                	jmp    c62a <__sprintf_chk@plt+0x794a>
    c5e1:	c7 c3 c6 00 00 00    	mov    $0xc6,%ebx
    c5e7:	2e 0f 1f 84 00 48 c7 	cs nopl 0x74c6c748(%rax,%rax,1)
    c5ee:	c6 74 
    c5f0:	00 00                	add    %al,(%rax)
    c5f2:	00 00                	add    %al,(%rax)
    c5f4:	00 54 31 f6          	add    %dl,-0xa(%rcx,%rsi,1)
    c5f8:	55                   	push   %rbp
    c5f9:	48 81 0f 84 74 ff ff 	orq    $0xffffffffffff7484,(%rdi)
    c600:	ff 48 8b             	decl   -0x75(%rax)
    c603:	04 25                	add    $0x25,%al
    c605:	48 85 db             	test   %rbx,%rbx
    c608:	00 48 89             	add    %cl,-0x77(%rax)
    c60b:	49 09 d0             	or     %rdx,%r8
    c60e:	01 48 01             	add    %ecx,0x1(%rax)
    c611:	cf                   	iret   
    c612:	c0 e8 18             	shr    $0x18,%al
    c615:	85 48 39             	test   %ecx,0x39(%rax)
    c618:	cf                   	iret   
    c619:	e9 29 fe ff ff       	jmp    c447 <__sprintf_chk@plt+0x7767>
    c61e:	8c 4c 89 ca          	mov    %cs,-0x36(%rcx,%rcx,4)
    c622:	49 ff c2             	inc    %r10
    c625:	89 c5                	mov    %eax,%ebp
    c627:	45 31 e4             	xor    %r12d,%r12d
    c62a:	e8 51 82 ff ff       	call   4880 <strlen@plt>
    c62f:	48 ff c2             	inc    %rdx
    c632:	01 00                	add    %eax,(%rax)
    c634:	00 4c 85 f9          	add    %cl,-0x7(%rbp,%rax,4)
    c638:	49 85 ce             	test   %rcx,%r14
    c63b:	08 01                	or     %al,(%rcx)
    c63d:	00 00                	add    %al,(%rax)
    c63f:	4d 09 fa             	or     %r15,%r10
    c642:	04 25                	add    $0x25,%al
    c644:	28 00                	sub    %al,(%rax)
    c646:	00 00                	add    %al,(%rax)
    c648:	75 63                	jne    c6ad <__sprintf_chk@plt+0x79cd>
    c64a:	48 81 c4 18 01 00 48 	add    $0x48000118,%rsp
    c651:	c1 ea 17             	shr    $0x17,%edx
    c654:	e9 10 ff ff ff       	jmp    c569 <__sprintf_chk@plt+0x7889>
    c659:	1f                   	(bad)  
    c65a:	84 00                	test   %al,(%rax)
    c65c:	00 00                	add    %al,(%rax)
    c65e:	00 00                	add    %al,(%rax)
    c660:	48 89 e7             	mov    %rsp,%rdi
    c663:	48 8d 50 01          	lea    0x1(%rax),%rdx
    c667:	b9 0f 84 5d fc       	mov    $0xfc5d840f,%ecx
    c66c:	ff                   	(bad)  
    c66d:	ff af c8 bc 83 ff    	ljmp   *-0x7c4338(%rdi)
    c673:	ff 49 c1             	decl   -0x3f(%rcx)
    c676:	ed                   	in     (%dx),%eax
    c677:	38 31                	cmp    %dh,(%rcx)
    c679:	f7 c7 74 4d 39 fa    	test   $0xfa394d74,%edi
    c67f:	d9 51 d4             	fsts   -0x2c(%rcx)
    c682:	4d 01 d9             	add    %r11,%r9
    c685:	67 83 ff ff          	addr32 cmp $0xffffffff,%edi
    c689:	85 48 85             	test   %ecx,-0x7b(%rax)
    c68c:	f1                   	int1   
    c68d:	95                   	xchg   %eax,%ebp
    c68e:	c4                   	(bad)  
    c68f:	eb a6                	jmp    c637 <__sprintf_chk@plt+0x7957>
    c691:	49 c1 e6 17          	shl    $0x17,%r14
    c695:	4e 03 00             	rex.WRX add (%rax),%r8
    c698:	00 7c 24 01          	add    %bh,0x1(%rsp)
    c69c:	00 74 98 eb          	add    %dh,-0x15(%rax,%rbx,4)
    c6a0:	dc 0f                	fmull  (%rdi)
    c6a2:	1f                   	(bad)  
    c6a3:	80 00 00             	addb   $0x0,(%rax)
    c6a6:	00 7f 7b             	add    %bh,0x7b(%rdi)
    c6a9:	48 89 f8             	mov    %rdi,%rax
    c6ac:	8a e8                	mov    %al,%ch
    c6ae:	de 81 ff ff 48 85    	fiadds -0x7ab70001(%rcx)
    c6b4:	49 f7 fd             	idiv   %r13
    c6b7:	0f 8c 45 fd ff ff    	jl     c402 <__sprintf_chk@plt+0x7722>
    c6bd:	cb                   	lret   
    c6be:	03 00                	add    (%rax),%eax
    c6c0:	00 0f                	add    %cl,(%rdi)
    c6c2:	1e                   	(bad)  
    c6c3:	48 29 f1             	sub    %rsi,%rcx
    c6c6:	47 28 48 49          	rex.RXB sub %r9b,0x49(%r8)
    c6ca:	89 49 ff             	mov    %ecx,-0x1(%rcx)
    c6cd:	c5 e9 2a             	(bad)
    c6d0:	01 00                	add    %eax,(%rax)
    c6d2:	00 fd                	add    %bh,%ch
    c6d4:	ff 49 29             	decl   0x29(%rcx)
    c6d7:	ce                   	(bad)  
    c6d8:	08 0f                	or     %cl,(%rdi)
    c6da:	2f                   	(bad)  
    c6db:	0f 4d 09             	cmovge (%rcx),%ecx
    c6de:	db 48 f7             	fisttpl -0x9(%rax)
    c6e1:	fa                   	cli    
    c6e2:	f3 0f 10 0d 4d 01 ea 	movss  0xea014d(%rip),%xmm1        # eac837 <obstack_alloc_failed_handler@@Base+0xe8a797>
    c6e9:	00 
    c6ea:	0f 2f 0f             	comiss (%rdi),%xmm1
    c6ed:	85 99 49 49 c1 ee    	test   %ebx,-0x113eb6b7(%rcx)
    c6f3:	3e 00 00             	ds add %al,(%rax)
    c6f6:	0d e5 fd 00 00       	or     $0xfde5,%eax
    c6fb:	76 36                	jbe    c733 <__sprintf_chk@plt+0x7a53>
    c6fd:	f3 0f 10 08          	movss  (%rax),%xmm1
    c701:	0f 2f 0d 49 29 4d 29 	comiss 0x294d2949(%rip),%xmm1        # 294df051 <obstack_alloc_failed_handler@@Base+0x294bcfb1>
    c708:	f8                   	clc    
    c709:	48 c7 c7 6a fd ff ff 	mov    $0xfffffffffffffd6a,%rdi
    c710:	00 00                	add    %al,(%rax)
    c712:	f3 0f 10 50 04       	movss  0x4(%rax),%xmm2
    c717:	0f 49 21             	cmovns (%rcx),%esp
    c71a:	db ea                	fucomi %st(2),%st
    c71c:	f3 0f 4c 01          	repz cmovl (%rcx),%eax
    c720:	da f9                	(bad)  
    c722:	00 0f                	add    %cl,(%rdi)
    c724:	85 dc                	test   %ebx,%esp
    c726:	fd                   	std    
    c727:	ff                   	(bad)  
    c728:	ff 0f                	decl   (%rdi)
    c72a:	2f                   	(bad)  
    c72b:	c1 b8 01 00 00 4c 39 	sarl   $0x39,0x4c000001(%rax)
    c732:	e3 48                	jrcxz  c77c <__sprintf_chk@plt+0x7a9c>
    c734:	89 57 28             	mov    %edx,0x28(%rdi)
    c737:	48 29 c0             	sub    %rax,%rax
    c73a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c740:	b8 01 49 f7 fb       	mov    $0xfbf74901,%eax
    c745:	49 c7 c5 0e 02 00 00 	mov    $0x20e,%r13
    c74c:	00 00                	add    %al,(%rax)
    c74e:	00 00                	add    %al,(%rax)
    c750:	f3 0f 1e fa          	endbr64 
    c754:	80 e9 a0             	sub    $0xa0,%cl
    c757:	fd                   	std    
    c758:	ff                   	(bad)  
    c759:	ff 00                	incl   (%rax)
    c75b:	00 00                	add    %al,(%rax)
    c75d:	0f 88 49 c1 e4 16    	js     16e588ac <obstack_alloc_failed_handler@@Base+0x16e3680c>
    c763:	66 0f ef 49 f7       	pxor   -0x9(%rcx),%xmm1
    c768:	ff 4d 31             	decl   0x31(%rbp)
    c76b:	ed                   	in     (%dx),%eax
    c76c:	00 8c 4a fc ff ff 46 	add    %cl,0x46fffffc(%rdx,%rcx,2)
    c773:	08 0f                	or     %cl,(%rdi)
    c775:	2f                   	(bad)  
    c776:	05 6d fd 00 0f       	add    $0xf00fd6d,%eax
    c77b:	85 9f 01 00 00 38    	test   %ebx,0x38000001(%rdi)
    c781:	0f 2f 05 64 fd 00 00 	comiss 0xfd64(%rip),%xmm0        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    c788:	4c 01 ce             	add    %r9,%rsi
    c78b:	00 00                	add    %al,(%rax)
    c78d:	00 f3                	add    %dh,%bl
    c78f:	0f 5c 05 56 fd 00 00 	subps  0xfd56(%rip),%xmm0        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    c796:	f3 48 0f 2c f8       	cvttss2si %xmm0,%rdi
    c79b:	0f 85 c7 02 00 00    	jne    ca68 <__sprintf_chk@plt+0x7d88>
    c7a1:	4c 21 c9             	and    %r9,%rcx
    c7a4:	aa                   	stos   %al,%es:(%rdi)
    c7a5:	aa                   	stos   %al,%es:(%rdi)
    c7a6:	aa                   	stos   %al,%es:(%rdi)
    c7a7:	48 c7 c3 b0 e9 b2 01 	mov    $0x1b2e9b0,%rbx
    c7ae:	00 00                	add    %al,(%rax)
    c7b0:	39 c7                	cmp    %eax,%edi
    c7b2:	48                   	rex.W
    c7b3:	49 f7 ff             	idiv   %r15
    c7b6:	49 89 c0             	mov    %rax,%r8
    c7b9:	49 83 4d 29 c6       	orq    $0xffffffffffffffc6,0x29(%r13)
    c7be:	83 f8 ff             	cmp    $0xffffffff,%eax
    c7c1:	74 79                	je     c83c <__sprintf_chk@plt+0x7b5c>
    c7c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c7c8:	0f 84 40 03 00 00    	je     cb0e <__sprintf_chk@plt+0x7e2e>
    c7ce:	48 39 c9             	cmp    %rcx,%rcx
    c7d1:	fe 48 89             	decb   -0x77(%rax)
    c7d4:	d3 48 d1             	rorl   %cl,-0x2f(%rax)
    c7d7:	e8 48 01 c2 4d       	call   4dc2c924 <obstack_alloc_failed_handler@@Base+0x4dc0a884>
    c7dc:	0f af c3             	imul   %ebx,%eax
    c7df:	29 d0                	sub    %edx,%eax
    c7e1:	49                   	rex.WB
    c7e2:	48 c1 eb 17          	shr    $0x17,%rbx
    c7e6:	86 93 00 49 29 f3    	xchg   %dl,-0xcd6b700(%rbx)
    c7ec:	4c 31 f1             	xor    %r14,%rcx
    c7ef:	42 bf 10 48 f7 49    	rex.X mov $0x49f74810,%edi
    c7f5:	c7 c2 9d 00 00 00    	mov    $0x9d,%edx
    c7fb:	e4 49                	in     $0x49,%al
    c7fd:	f7 f8                	idiv   %eax
    c7ff:	ff c1                	inc    %ecx
    c801:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c808:	48                   	rex.W
    c809:	49 c1 ec 03          	shr    $0x3,%r12
    c80d:	fd                   	std    
    c80e:	ff                   	(bad)  
    c80f:	ff 85 c3 00 00 00    	incl   0xc3(%rbp)
    c815:	ff 89 0f 8c f2 02    	decl   0x2f28c0f(%rcx)
    c81b:	00 49 09             	add    %cl,0x9(%rcx)
    c81e:	db f1                	fcomi  %st(1),%st
    c820:	4c 39 c6             	cmp    %r8,%rsi
    c823:	72 0f                	jb     c834 <__sprintf_chk@plt+0x7b54>
    c825:	49 ff c0             	inc    %r8
    c828:	ff                   	(bad)  
    c829:	ff 31                	push   (%rcx)
    c82b:	fb                   	sti    
    c82c:	09 da                	or     %ebx,%edx
    c82e:	85 d2                	test   %edx,%edx
    c830:	75 11                	jne    c843 <__sprintf_chk@plt+0x7b63>
    c832:	49 83 c0 02          	add    $0x2,%r8
    c836:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    c83a:	75 8c                	jne    c7c8 <__sprintf_chk@plt+0x7ae8>
    c83c:	45 31 c0             	xor    %r8d,%r8d
    c83f:	4c                   	rex.WR
    c840:	48 c1 e6 33          	shl    $0x33,%rsi
    c844:	89 c0                	mov    %eax,%eax
    c846:	48 c1 e8 3d          	shr    $0x3d,%rax
    c84a:	0f 95 c0             	setne  %al
    c84d:	48 f7 f9             	idiv   %rcx
    c850:	e0 3c                	loopne c88e <__sprintf_chk@plt+0x7bae>
    c852:	0f b6 c0             	movzbl %al,%eax
    c855:	72 e5                	jb     c83c <__sprintf_chk@plt+0x7b5c>
    c857:	48 85 4d 29          	test   %rcx,0x29(%rbp)
    c85b:	f8                   	clc    
    c85c:	39 de                	cmp    %ebx,%esi
    c85e:	c0 c3 48             	rol    $0x48,%bl
    c861:	89 48 ff             	mov    %ecx,-0x1(%rax)
    c864:	c3                   	ret    
    c865:	01 66 0f             	add    %esp,0xf(%rsi)
    c868:	ef                   	out    %eax,(%dx)
    c869:	c0 48 d1 e8          	rorb   $0xe8,-0x2f(%rax)
    c86d:	48 09 f8             	or     %rdi,%rax
    c870:	f3 48                	repz rex.W
    c872:	49 31 c4             	xor    %rax,%r12
    c875:	2a 0f                	sub    (%rdi),%cl
    c877:	58                   	pop    %rax
    c878:	c0 e9 ee             	shr    $0xee,%cl
    c87b:	fe                   	(bad)  
    c87c:	ff                   	(bad)  
    c87d:	ff                   	(bad)  
    c87e:	b9 03 00 00 00       	mov    $0x3,%ecx
    c883:	eb a0                	jmp    c825 <__sprintf_chk@plt+0x7b45>
    c885:	f3 48 0f 4d 85 c7 11 	repz cmovge -0xee39(%rbp),%rax
    c88c:	ff ff 
    c88e:	ff 90 41 55 41 54    	call   *0x54415541(%rax)
    c894:	49 31 c2             	xor    %rax,%r10
    c897:	fd                   	std    
    c898:	48 89 f7             	mov    %rsi,%rdi
    c89b:	53                   	push   %rbx
    c89c:	48 83 49 21 d7       	orq    $0xffffffffffffffd7,0x21(%rcx)
    c8a1:	8b 65 28             	mov    0x28(%rbp),%esp
    c8a4:	64 48 8b 04 25 28 00 	mov    %fs:0xffffffff8f0f0028,%rax
    c8ab:	0f 8f 
    c8ad:	b4 fc                	mov    $0xfc,%ah
    c8af:	ff                   	(bad)  
    c8b0:	ff 58 31             	lcall  *0x31(%rax)
    c8b3:	c0 4c 89 e6 e8       	rorb   $0xe8,-0x1a(%rcx,%rcx,4)
    c8b8:	4c 21 ff             	and    %r15,%rdi
    c8bb:	ff 48 85             	decl   -0x7b(%rax)
    c8be:	c0 0f 84             	rorb   $0x84,(%rdi)
    c8c1:	fb                   	sti    
    c8c2:	00 00                	add    %al,(%rax)
    c8c4:	00 48 89             	add    %cl,-0x77(%rax)
    c8c7:	c3                   	ret    
    c8c8:	48 39 45 10          	cmp    %rax,0x10(%rbp)
    c8cc:	0f 84 de 00 00 49    	je     4900c9b0 <obstack_alloc_failed_handler@@Base+0x48fea910>
    c8d2:	ff c4                	inc    %esp
    c8d4:	00 00                	add    %al,(%rax)
    c8d6:	00 48 89             	add    %cl,-0x77(%rax)
    c8d9:	c7                   	(bad)  
    c8da:	e8 01 81 ff 49       	call   4a0049e0 <obstack_alloc_failed_handler@@Base+0x49fe2940>
    c8df:	89 d1                	mov    %edx,%ecx
    c8e1:	04 24                	add    $0x24,%al
    c8e3:	48 85 c0             	test   %rax,%rax
    c8e6:	0f 84 d4 00 00 00    	je     c9c0 <__sprintf_chk@plt+0x7ce0>
    c8ec:	48                   	rex.W
    c8ed:	49 ff c2             	inc    %r10
    c8f0:	d1 48 c1             	rorl   -0x3f(%rax)
    c8f3:	e3 04                	jrcxz  c8f9 <__sprintf_chk@plt+0x7c19>
    c8f5:	49                   	rex.WB
    c8f6:	49 89 c7             	mov    %rax,%r15
    c8f9:	85 fa                	test   %edi,%edx
    c8fb:	01 d8                	add    %ebx,%eax
    c8fd:	48 89 ee             	mov    %rbp,%rsi
    c900:	4c 89 ef             	mov    %r13,%rdi
    c903:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    c908:	48                   	rex.W
    c909:	48 01 c2             	add    %rax,%rdx
    c90c:	08 48 8b             	or     %cl,-0x75(%rax)
    c90f:	45                   	rex.RB
    c910:	48 31 f1             	xor    %rsi,%rcx
    c913:	44 24 48             	rex.R and $0x48,%al
    c916:	f7 f9                	idiv   %ecx
    c918:	cd d9                	int    $0xd9
    c91a:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    c91f:	48 8b 45 38          	mov    0x38(%rbp),%rax
    c923:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    c92a:	00 00 
    c92c:	48 89 44 24 49       	mov    %rax,0x49(%rsp)
    c931:	29 c7                	sub    %eax,%edi
    c933:	45                   	rex.RB
    c934:	48 85 f2             	test   %rsi,%rdx
    c937:	29 ea                	sub    %ebp,%edx
    c939:	40                   	rex
    c93a:	48 8b 45 48          	mov    0x48(%rbp),%rax
    c93e:	48 89 49 49          	mov    %rcx,0x49(%rcx)
    c942:	f7 fd                	idiv   %ebp
    c944:	48 ac                	rex.W lods %ds:(%rsi),%al
    c946:	ff                   	(bad)  
    c947:	ff 41 89             	incl   -0x77(%rcx)
    c94a:	48 29 c7             	sub    %rax,%rdi
    c94d:	75 79                	jne    c9c8 <__sprintf_chk@plt+0x7ce8>
    c94f:	48 8b 44 24 75       	mov    0x75(%rsp),%rax
    c954:	b2 0f                	mov    $0xf,%dl
    c956:	af                   	scas   %es:(%rdi),%eax
    c957:	cc                   	int3   
    c958:	00 4c 89 ee          	add    %cl,-0x12(%rcx,%rcx,4)
    c95c:	48 89 ef             	mov    %rbp,%rdi
    c95f:	48 89 45 48          	mov    %rax,0x48(%rbp)
    c963:	e8 28 ac ff ff       	call   7590 <__sprintf_chk@plt+0x28b0>
    c968:	48 c7 c7 73 ff ff ff 	mov    $0xffffffffffffff73,%rdi
    c96f:	ff 31                	push   (%rcx)
    c971:	d2 4c 89 ee          	rorb   %cl,-0x12(%rcx,%rcx,4)
    c975:	48 89 ef             	mov    %rbp,%rdi
    c978:	e8 13 0f 84 65       	call   6584d890 <obstack_alloc_failed_handler@@Base+0x6582b7f0>
    c97d:	fd                   	std    
    c97e:	ff                   	(bad)  
    c97f:	ff 84 7b 83 0f 8f 24 	incl   0x248f0f83(%rbx,%rdi,2)
    c986:	fd                   	std    
    c987:	ff                   	(bad)  
    c988:	ff 49 29             	decl   0x29(%rcx)
    c98b:	d4                   	(bad)  
    c98c:	ff                   	(bad)  
    c98d:	ff 48 8b             	decl   -0x75(%rax)
    c990:	44 24 58             	rex.R and $0x58,%al
    c993:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c99a:	00 00 
    c99c:	75 61                	jne    c9ff <__sprintf_chk@plt+0x7d1f>
    c99e:	48 83 c4 68          	add    $0x68,%rsp
    c9a2:	44 e9 0f 8c 5b fe    	rex.R jmp fffffffffe5c55b7 <obstack_alloc_failed_handler@@Base+0xfffffffffe5a3517>
    c9a8:	ff 49 c7             	decl   -0x39(%rcx)
    c9ab:	c1 26 02             	shll   $0x2,(%rsi)
    c9ae:	00 00                	add    %al,(%rax)
    c9b0:	41 bc 48 f7 fe 00    	mov    $0xfef748,%r12d
    c9b6:	48 c7                	rex.W (bad) 
    c9b8:	e9 14 03 00 00       	jmp    ccd1 <__sprintf_chk@plt+0x7ff1>
    c9bd:	00 00                	add    %al,(%rax)
    c9bf:	00 45 0f             	add    %al,0xf(%rbp)
    c9c2:	85 7e 01             	test   %edi,0x1(%rsi)
    c9c5:	00 00                	add    %al,(%rax)
    c9c7:	00 48 8b             	add    %cl,-0x75(%rax)
    c9ca:	7d 00                	jge    c9cc <__sprintf_chk@plt+0x7cec>
    c9cc:	e8 af 7c ff ff       	call   4680 <free@plt>
    c9d1:	48 c1 e7 3b          	shl    $0x3b,%rdi
    c9d5:	48 89 45 00          	mov    %rax,0x0(%rbp)
    c9d9:	48                   	rex.W
    c9da:	49 f7 fc             	idiv   %r12
    c9dd:	08 48 49             	or     %cl,0x49(%rax)
    c9e0:	c7 c6 56 02 00 00    	mov    $0x256,%esi
    c9e6:	f7 fa                	idiv   %edx
    c9e8:	49 c1 ec 10          	shr    $0x10,%r12
    c9ec:	c1 e8 09             	shr    $0x9,%eax
    c9ef:	49 c1 e9 2b          	shr    $0x2b,%r9
    c9f3:	18 48 8b             	sbb    %cl,-0x75(%rax)
    c9f6:	44 24 48             	rex.R and $0x48,%al
    c9f9:	48 89 45 48          	mov    %rax,0x48(%rbp)
    c9fd:	eb 8f                	jmp    c98e <__sprintf_chk@plt+0x7cae>
    c9ff:	e8 8c 7e ff ff       	call   4890 <__stack_chk_fail@plt>
    ca04:	66 66 48 c1 e2 3b    	data16 data16 shl $0x3b,%rdx
    ca0a:	48 39 ce             	cmp    %rcx,%rsi
    ca0d:	31 d4                	xor    %edx,%esp
    ca0f:	90                   	nop
    ca10:	f3 0f 1e fa          	endbr64 
    ca14:	41 54                	push   %r12
    ca16:	49 e9 49 89 ca ff    	rex.WB jmp ffffffffffcb5365 <obstack_alloc_failed_handler@@Base+0xffffffffffc932c5>
    ca1c:	83 7f 40 49          	cmpl   $0x49,0x40(%rdi)
    ca20:	31 c0                	xor    %eax,%eax
    ca22:	2f                   	(bad)  
    ca23:	48 8b 47 08          	mov    0x8(%rdi),%rax
    ca27:	74 57                	je     ca80 <__sprintf_chk@plt+0x7da0>
    ca29:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    ca2e:	4d 0f 84 af 01 00 00 	rex.WRB je cbe4 <__sprintf_chk@plt+0x7f04>
    ca35:	29 d0                	sub    %edx,%eax
    ca37:	00 0f                	add    %cl,(%rdi)
    ca39:	8f                   	(bad)  
    ca3a:	f2 00 00             	repnz add %al,(%rax)
    ca3d:	00 00                	add    %al,(%rax)
    ca3f:	00 49 8b             	add    %cl,-0x75(%rcx)
    ca42:	44 24 08             	rex.R and $0x8,%al
    ca45:	48 83 c5 10          	add    $0x10,%rbp
    ca49:	48 39 e8             	cmp    %rbp,%rax
    ca4c:	76 32                	jbe    ca80 <__sprintf_chk@plt+0x7da0>
    ca4e:	48                   	rex.W
    ca4f:	4c 29 4c 01 d6       	sub    %r9,-0x2a(%rcx,%rax,1)
    ca54:	ff 74 49 c7          	push   -0x39(%rcx,%rcx,2)
    ca58:	c0 06 01             	rolb   $0x1,(%rsi)
    ca5b:	00 00                	add    %al,(%rax)
    ca5d:	1f                   	(bad)  
    ca5e:	40 00 48 8b          	rex add %cl,-0x75(%rax)
    ca62:	3b 41 ff             	cmp    -0x1(%rcx),%eax
    ca65:	54                   	push   %rsp
    ca66:	24 40                	and    $0x40,%al
    ca68:	48 c1 e9 2b          	shr    $0x2b,%rcx
    ca6c:	48 85 db             	test   %rbx,%rbx
    ca6f:	75 4c                	jne    cabd <__sprintf_chk@plt+0x7ddd>
    ca71:	85 f6                	test   %esi,%esi
    ca73:	44 24 0f             	rex.R and $0xf,%al
    ca76:	8f 28 49 ff          	(bad)
    ca7a:	c2 39 e8             	ret    $0xe839
    ca7d:	77 cf                	ja     ca4e <__sprintf_chk@plt+0x7d6e>
    ca7f:	90                   	nop
    ca80:	49 8b 49 c1          	mov    -0x3f(%r9),%rcx
    ca84:	ed                   	in     (%dx),%eax
    ca85:	32 09                	xor    (%rcx),%cl
    ca87:	49 c1 ec 0d          	shr    $0xd,%r12
    ca8b:	c7                   	(bad)  
    ca8c:	4a 02 00             	rex.WX add (%rax),%al
    ca8f:	00 48 48             	add    %cl,0x48(%rax)
    ca92:	0f 49 0f             	cmovns (%rdi),%ecx
    ca95:	af                   	scas   %es:(%rdi),%eax
    ca96:	fd                   	std    
    ca97:	74 18                	je     cab1 <__sprintf_chk@plt+0x7dd1>
    ca99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    caa0:	48 89 df             	mov    %rbx,%rdi
    caa3:	48 8b 7c 31 e8       	mov    -0x18(%rcx,%rsi,1),%rdi
    caa8:	d4                   	(bad)  
    caa9:	7b ff                	jnp    caaa <__sprintf_chk@plt+0x7dca>
    caab:	ff 48 85             	decl   -0x7b(%rax)
    caae:	db 75 ef             	(bad)  -0x11(%rbp)
    cab1:	48 83 c5 10          	add    $0x10,%rbp
    cab5:	49 39 6c 24 08       	cmp    %rbp,0x8(%r12)
    caba:	77 48                	ja     cb04 <__sprintf_chk@plt+0x7e24>
    cabc:	09 d3                	or     %edx,%ebx
    cabe:	5c                   	pop    %rsp
    cabf:	24 0f                	and    $0xf,%al
    cac1:	8f 28 01 00          	(bad)
    cac5:	00 48 c1             	add    %cl,-0x3f(%rax)
    cac8:	ee                   	out    %al,(%dx)
    cac9:	1c 84                	sbb    $0x84,%al
    cacb:	00 00                	add    %al,(%rax)
    cacd:	0f 84 ea 4c 89 c1    	je     ffffffffc18a17bd <obstack_alloc_failed_handler@@Base+0xffffffffc187f71d>
    cad3:	48 8b 0f             	mov    (%rdi),%rcx
    cad6:	8c 48 c1             	mov    %cs,-0x3f(%rax)
    cad9:	e6 12                	out    %al,$0x12
    cadb:	fe                   	(bad)  
    cadc:	ff                   	(bad)  
    cadd:	ff                   	(bad)  
    cade:	db 75 ef             	(bad)  -0x11(%rbp)
    cae1:	4c 89 d7             	mov    %r10,%rdi
    cae4:	4c 89 ea             	mov    %r13,%rdx
    cae7:	48 ff c2             	inc    %rdx
    caea:	5b                   	pop    %rbx
    caeb:	4c                   	rex.WR
    caec:	49 39 f8             	cmp    %rdi,%r8
    caef:	41 0f 49 c1          	cmovns %r9d,%eax
    caf3:	eb 22                	jmp    cb17 <__sprintf_chk@plt+0x7e37>
    caf5:	ff 66 2e             	jmp    *0x2e(%rsi)
    caf8:	0f 1f 84 00 00 0f 85 	nopl   -0x507af100(%rax,%rax,1)
    caff:	af 
    cb00:	03 00                	add    (%rax),%eax
    cb02:	00 e9                	add    %ch,%cl
    cb04:	41 55                	push   %r13
    cb06:	41 0f 84 2e fd ff ff 	rex.B je c83b <__sprintf_chk@plt+0x7b5b>
    cb0d:	fc                   	cld    
    cb0e:	ff                   	(bad)  
    cb0f:	ff 4d 89             	decl   -0x77(%rbp)
    cb12:	e2 28                	loop   cb3c <__sprintf_chk@plt+0x7e5c>
    cb14:	00 4c 89 c8          	add    %cl,-0x38(%rcx,%rcx,4)
    cb18:	89 44 24 08          	mov    %eax,0x8(%rsp)
    cb1c:	31 c0                	xor    %eax,%eax
    cb1e:	48 85 f6             	test   %rsi,%rsi
    cb21:	0f 84 de 0f 85 49    	je     4985db05 <obstack_alloc_failed_handler@@Base+0x4983ba65>
    cb27:	fd                   	std    
    cb28:	ff                   	(bad)  
    cb29:	ff 4c 39 ca          	decl   -0x36(%rcx,%rdi,1)
    cb2d:	ff c9                	dec    %ecx
    cb2f:	49 ff c0             	inc    %r8
    cb32:	4c 89 ea             	mov    %r13,%rdx
    cb35:	48 89 f5             	mov    %rsi,%rbp
    cb38:	0f 8c d4 fd ff ff    	jl     c912 <__sprintf_chk@plt+0x7c32>
    cb3e:	85 c0                	test   %eax,%eax
    cb40:	74 2e                	je     cb70 <__sprintf_chk@plt+0x7e90>
    cb42:	49 89 04 24          	mov    %rax,(%r12)
    cb46:	31 c0                	xor    %eax,%eax
    cb48:	48                   	rex.W
    cb49:	48 21 d8             	and    %rbx,%rax
    cb4c:	08 64 49 c1          	or     %ah,-0x3f(%rcx,%rcx,2)
    cb50:	e3 3f                	jrcxz  cb91 <__sprintf_chk@plt+0x7eb1>
    cb52:	28 00                	sub    %al,(%rax)
    cb54:	00 4d 09             	add    %cl,0x9(%rbp)
    cb57:	e7 b8                	out    %eax,$0xb8
    cb59:	01 00                	add    %eax,(%rax)
    cb5b:	00 48 83             	add    %cl,-0x7d(%rax)
    cb5e:	c4                   	(bad)  
    cb5f:	e9 b7 74 0d ff       	jmp    ffffffffff0e401b <obstack_alloc_failed_handler@@Base+0xffffffffff0c1f7b>
    cb64:	41 5d                	pop    %r13
    cb66:	c3                   	ret    
    cb67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cb6e:	00 00 
    cb70:	48 8b 43 18          	mov    0x18(%rbx),%rax
    cb74:	48 85 c0             	test   %rax,%rax
    cb77:	78 7f                	js     cbf8 <__sprintf_chk@plt+0x7f18>
    cb79:	66 49 0f af f4       	data16 imul %r12,%rsi
    cb7e:	00 00                	add    %al,(%rax)
    cb80:	2a e8                	sub    %al,%ch
    cb82:	48 8b 43 10          	mov    0x10(%rbx),%rax
    cb86:	48 85 c0             	test   %rax,%rax
    cb89:	0f 88 8f 00 00 00    	js     cc1e <__sprintf_chk@plt+0x7f3e>
    cb8f:	66 0f ef e4          	pxor   %xmm4,%xmm4
    cb93:	f3 48 0f 2a e0       	cvtsi2ss %rax,%xmm4
    cb98:	48 8b 43 28          	mov    0x28(%rbx),%rax
    cb9c:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
    cba1:	f3 0f 59 c4          	mulss  %xmm4,%xmm0
    cba5:	0f 2f 4d 39          	comiss 0x39(%rbp),%xmm1
    cba9:	e2 92                	loop   cb3d <__sprintf_chk@plt+0x7e5d>
    cbab:	00 00                	add    %al,(%rax)
    cbad:	00 4c 8b 4c          	add    %cl,0x4c(%rbx,%rcx,4)
    cbb1:	09 d6                	or     %edx,%esi
    cbb3:	75 59                	jne    cc0e <__sprintf_chk@plt+0x7f2e>
    cbb5:	24 00                	and    $0x0,%al
    cbb7:	0f 84 c3 00 00 00    	je     cc80 <__sprintf_chk@plt+0x7fa0>
    cbbd:	48 8b 43 48          	mov    0x48(%rbx),%rax
    cbc1:	48 85 c0             	test   %rax,%rax
    cbc4:	0f 84 d6 00 00 00    	je     cca0 <__sprintf_chk@plt+0x7fc0>
    cbca:	48 8b 50 08          	mov    0x8(%rax),%rdx
    cbce:	48 89 48 ff          	mov    %rcx,-0x1(%rax)
    cbd2:	c0 8b 54 24 08 48 89 	rorb   $0x89,0x48082454(%rbx)
    cbd9:	28 48 89             	sub    %cl,-0x77(%rax)
    cbdc:	50                   	push   %rax
    cbdd:	08 49 89             	or     %cl,-0x77(%rcx)
    cbe0:	44 24 08             	rex.R and $0x8,%al
    cbe3:	b8 01 00 00 00       	mov    $0x1,%eax
    cbe8:	4c 89 ea             	mov    %r13,%rdx
    cbeb:	20 01                	and    %al,(%rcx)
    cbed:	e9 e9 8c 00 00       	jmp    158db <_obstack_memory_used@@Base+0x512b>
    cbf2:	48 f7 f9             	idiv   %rcx
    cbf5:	44 00 00             	add    %r8b,(%rax)
    cbf8:	48 c1 e2 06          	shl    $0x6,%rdx
    cbfc:	e0 01                	loopne cbff <__sprintf_chk@plt+0x7f1f>
    cbfe:	66 0f ef ed          	pxor   %xmm5,%xmm5
    cc02:	48 d1 ea             	shr    %rdx
    cc05:	48 09 c2             	or     %rax,%rdx
    cc08:	48 8b 43 4c          	mov    0x4c(%rbx),%rax
    cc0c:	21 f1                	and    %esi,%ecx
    cc0e:	c1 ee 34             	shr    $0x34,%esi
    cc11:	0f 85 49 c7 c2 86    	jne    ffffffff86c39360 <obstack_alloc_failed_handler@@Base+0xffffffff86c172c0>
    cc17:	ff                   	(bad)  
    cc18:	ff                   	(bad)  
    cc19:	ff 71 ff             	push   -0x1(%rcx)
    cc1c:	ff                   	(bad)  
    cc1d:	ff 48 89             	decl   -0x77(%rax)
    cc20:	c2 83 0f             	ret    $0xf83
    cc23:	8f e9 09 fe          	(bad)
    cc27:	ff                   	(bad)  
    cc28:	ff 0f                	decl   (%rdi)
    cc2a:	8c b6 02 00 00 c0    	mov    %?,-0x3ffffffe(%rsi)
    cc30:	f1                   	int1   
    cc31:	ff                   	(bad)  
    cc32:	ff 4c 39 e0          	decl   -0x20(%rcx,%rdi,1)
    cc36:	00 00                	add    %al,(%rax)
    cc38:	c2 ff ff             	ret    $0xffff
    cc3b:	ff 0f                	decl   (%rdi)
    cc3d:	49 29 fc             	sub    %rdi,%r12
    cc40:	48 89 df             	mov    %rbx,%rdi
    cc43:	e8 78 fa ff ff       	call   c6c0 <__sprintf_chk@plt+0x79e0>
    cc48:	48                   	rex.W
    cc49:	4d 85 48 ff          	test   %r9,-0x1(%r8)
    cc4d:	c3                   	ret    
    cc4e:	cc                   	int3   
    cc4f:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
    cc54:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
    cc58:	0f 2f e9             	comiss %xmm1,%xmm5
    cc5b:	0f 86 4d ff ff ff    	jbe    cbae <__sprintf_chk@plt+0x7ece>
    cc61:	f3 48 89 d9          	repz mov %rbx,%rcx
    cc65:	0c 80                	or     $0x80,%al
    cc67:	48                   	rex.W
    cc68:	48 f7 fb             	idiv   %rbx
    cc6b:	00 ff                	add    %bh,%bh
    cc6d:	0f e9 38             	psubsw (%rax),%mm7
    cc70:	01 00                	add    %eax,(%rax)
    cc72:	00 72 4b             	add    %dh,0x4b(%rdx)
    cc75:	b8 ff 49 f7 fd       	mov    $0xfdf749ff,%eax
    cc7a:	e9 c9 0f 84 f4       	jmp    fffffffff484dc48 <obstack_alloc_failed_handler@@Base+0xfffffffff482bba8>
    cc7f:	00 00                	add    %al,(%rax)
    cc81:	00 2c 24             	add    %ch,(%rsp)
    cc84:	b8 01 00 00 00       	mov    $0x1,%eax
    cc89:	48 83 43 20 48       	addq   $0x48,0x20(%rbx)
    cc8e:	21 df                	and    %ebx,%edi
    cc90:	48 c1 e6 3b          	shl    $0x3b,%rsi
    cc94:	4d 89 fa             	mov    %r15,%r10
    cc97:	ff 0f                	decl   (%rdi)
    cc99:	49 c1 e2 3b          	shl    $0x3b,%r10
    cc9d:	00 00                	add    %al,(%rax)
    cc9f:	00 bf 10 00 00 00    	add    %bh,0x10(%rdi)
    cca5:	e8 e6 79 ff ff       	call   4690 <malloc@plt>
    ccaa:	48 85 c0             	test   %rax,%rax
    ccad:	74 c6                	je     cc75 <__sprintf_chk@plt+0x7f95>
    ccaf:	e9 1e ff ff ff       	jmp    cbd2 <__sprintf_chk@plt+0x7ef2>
    ccb4:	0f 8f 32 fe ff 0f    	jg     1000caec <obstack_alloc_failed_handler@@Base+0xffeaa4c>
    ccba:	8c 8b 01 4c 29 d3    	mov    %cs,-0x2cd6b3ff(%rbx)
    ccc0:	0f 49 c7             	cmovns %edi,%eax
    ccc3:	c0 a0 ff ff ff dd f3 	shlb   $0xf3,-0x22000001(%rax)
    ccca:	48 0f 2c f4          	rex.W cvttps2pi %xmm4,%mm6
    ccce:	48 89 df             	mov    %rbx,%rdi
    ccd1:	4c 89 e8             	mov    %r13,%rax
    ccd4:	ff                   	(bad)  
    ccd5:	ff 84 c0 74 9b 31 49 	incl   0x49319b74(%rax,%rax,8)
    ccdc:	0f af f1             	imul   %ecx,%esi
    ccdf:	0d fd ff ff 89       	or     $0x89fffffd,%eax
    cce4:	49 01 e9             	add    %rbp,%r9
    cce7:	32 02                	xor    (%rdx),%al
    cce9:	00 00                	add    %al,(%rax)
    cceb:	85 4d 09             	test   %ecx,0x9(%rbp)
    ccee:	fb                   	sti    
    ccef:	bb fe ff ff e9       	mov    $0xe9fffffe,%ebx
    ccf4:	0d 80 ff 49 c1       	or     $0xc149ff80,%eax
    ccf9:	e1 1c                	loope  cd17 <__sprintf_chk@plt+0x8037>
    ccfb:	00 00                	add    %al,(%rax)
    ccfd:	00 00                	add    %al,(%rax)
    ccff:	00 f3                	add    %dh,%bl
    cd01:	0f 5c 25 e4 f7 00 00 	subps  0xf7e4(%rip),%xmm4        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    cd08:	f3 0f 8f 55 02 00 00 	repz jg cf64 <__sprintf_chk@plt+0x8284>
    cd0f:	ba fe 3f eb ba       	mov    $0xbaeb3ffe,%edx
    cd14:	e8 77 7b ff ff       	call   4890 <__stack_chk_fail@plt>
    cd19:	0f 1f 49 ff          	nopl   -0x1(%rcx)
    cd1d:	c2 00 00             	ret    $0x0
    cd20:	f3 0f 1e fa          	endbr64 
    cd24:	41 57                	push   %r15
    cd26:	41 56                	push   %r14
    cd28:	41 55                	push   %r13
    cd2a:	4c 21 ca             	and    %r9,%rdx
    cd2d:	41 54                	push   %r12
    cd2f:	49 89 fc             	mov    %rdi,%r12
    cd32:	55                   	push   %rbp
    cd33:	4d 0f af c6          	imul   %r14,%r8
    cd37:	48                   	rex.W
    cd38:	49 01 d1             	add    %rdx,%r9
    cd3b:	00 00                	add    %al,(%rax)
    cd3d:	00 48 89             	add    %cl,-0x77(%rax)
    cd40:	34 24                	xor    $0x24,%al
    cd42:	4c 89 44 e9 ea       	mov    %r8,-0x16(%rcx,%rbp,8)
    cd47:	00 49 01             	add    %cl,0x1(%rcx)
    cd4a:	de fc                	fdivrp %st,%st(4)
    cd4c:	ff                   	(bad)  
    cd4d:	ff 4c 85 c8          	decl   -0x38(%rbp,%rax,4)
    cd51:	00 00                	add    %al,(%rax)
    cd53:	00 0f                	add    %cl,(%rdi)
    cd55:	8c 21                	mov    %fs,(%rcx)
    cd57:	ff                   	(bad)  
    cd58:	ff                   	(bad)  
    cd59:	ff 48 f7             	decl   -0x9(%rax)
    cd5c:	ff d0                	call   *%rax
    cd5e:	83 e2 20             	and    $0x20,%edx
    cd61:	89 54 24 30          	mov    %edx,0x30(%rsp)
    cd65:	83 e0 03             	and    $0x3,%eax
    cd68:	83 fa 01             	cmp    $0x1,%edx
    cd6b:	89 4d 85             	mov    %ecx,-0x7b(%rbp)
    cd6e:	d5                   	(bad)  
    cd6f:	19 48 e9             	sbb    %ecx,-0x17(%rax)
    cd72:	25 fd ff ff 04       	and    $0x4fffffd,%eax
    cd77:	00 00                	add    %al,(%rax)
    cd79:	89 44 24 34          	mov    %eax,0x34(%rsp)
    cd7d:	e8 3e 7a ff ff       	call   47c0 <localeconv@plt>
    cd82:	4c 8b 38             	mov    (%rax),%r15
    cd85:	48 f7 fb             	idiv   %rbx
    cd88:	4c 89 ff             	mov    %r15,%rdi
    cd8b:	e8 f0 7a ff ff       	call   4880 <strlen@plt>
    cd90:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    cd94:	4d 8b 76 49          	mov    0x49(%r14),%r14
    cd98:	85 ce                	test   %ecx,%esi
    cd9a:	c5 48 83             	(bad)
    cd9d:	e8 01 48 48 21       	call   214915a3 <obstack_alloc_failed_handler@@Base+0x2146f503>
    cda2:	f7 b8 01 00 00 00    	idivl  0x1(%rax)
    cda8:	0f 8f 44 03 00 00    	jg     d0f2 <__sprintf_chk@plt+0x8412>
    cdae:	39 fa                	cmp    %edi,%edx
    cdb0:	48 0f 43 48 c1       	cmovae -0x3f(%rax),%rcx
    cdb5:	e7 07                	out    %eax,$0x7
    cdb7:	20 cd                	and    %cl,%ch
    cdb9:	00 49 09             	add    %cl,0x9(%rcx)
    cdbc:	f9                   	stc    
    cdbd:	e9 6b 01 00 00       	jmp    cf2d <__sprintf_chk@plt+0x824d>
    cdc2:	ff                   	(bad)  
    cdc3:	ff 4d 85             	decl   -0x7b(%rbp)
    cdc6:	f8                   	clc    
    cdc7:	10 48 8d             	adc    %cl,-0x73(%rax)
    cdca:	05 ee cd 00 00       	add    $0xcdee,%eax
    cdcf:	4c 0f 47 f0          	cmova  %rax,%r14
    cdd3:	4d 01 fe             	add    %r15,%r14
    cdd6:	ff                   	(bad)  
    cdd7:	ff                   	(bad)  
    cdd8:	ff 87 02 00 00 48    	incl   0x48000002(%rdi)
    cdde:	89 44 24 08          	mov    %eax,0x8(%rsp)
    cde2:	49 39 dd             	cmp    %rbx,%r13
    cde5:	0f 86 a5 48 31 c2    	jbe    ffffffffc2321690 <obstack_alloc_failed_handler@@Base+0xffffffffc22ff5f0>
    cdeb:	48 8b 44 24 49       	mov    0x49(%rsp),%rax
    cdf0:	f7 fb                	idiv   %ebx
    cdf2:	48 f7 f3             	div    %rbx
    cdf5:	48 89 c7             	mov    %rax,%rdi
    cdf8:	48 85 74 c0 85       	test   %rsi,-0x7b(%rax,%rax,8)
    cdfd:	a8 01                	test   $0x1,%al
    cdff:	00 00                	add    %al,(%rax)
    ce01:	4c 89 e0             	mov    %r12,%rax
    ce04:	31 d2                	xor    %edx,%edx
    ce06:	48 0f 84 09 fd ff ff 	rex.W je cb16 <__sprintf_chk@plt+0x7e36>
    ce0d:	4d                   	rex.WRB
    ce0e:	48 31 de             	xor    %rbx,%rsi
    ce11:	d2 48 01             	rorb   %cl,0x1(%rax)
    ce14:	c0 48 f7 f7          	rorb   $0xf7,-0x9(%rax)
    ce18:	48                   	rex.W
    ce19:	48 31 c7             	xor    %rax,%rdi
    ce1c:	89 48 f7             	mov    %ecx,-0x9(%rax)
    ce1f:	f8                   	clc    
    ce20:	d7                   	xlat   %ds:(%rbx)
    ce21:	0f 86 91 07 00 00    	jbe    d5b8 <__sprintf_chk@plt+0x88d8>
    ce27:	31 49 ff             	xor    %ecx,-0x1(%rcx)
    ce2a:	c4                   	(bad)  
    ce2b:	d2 40 0f             	rolb   %cl,0xf(%rax)
    ce2e:	95                   	xchg   %eax,%ebp
    ce2f:	c7 44 8b 5c 24 48 41 	movl   $0x83414824,0x5c(%rbx,%rcx,4)
    ce36:	83 
    ce37:	e3 10                	jrcxz  ce49 <__sprintf_chk@plt+0x8169>
    ce39:	0f 84 3d 05 00 00    	je     d37c <__sprintf_chk@plt+0x869c>
    ce3f:	44 8b 44 0f 84       	mov    -0x7c(%rdi,%rcx,1),%r8d
    ce44:	10 fe                	adc    %bh,%dh
    ce46:	ff 49 ff             	decl   -0x1(%rcx)
    ce49:	c4                   	(bad)  
    ce4a:	39 c8                	cmp    %ecx,%eax
    ce4c:	0f 86 4d 04 00 00    	jbe    d29f <__sprintf_chk@plt+0x85bf>
    ce52:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
    ce57:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    ce5c:	0f 84 2e 07 00 00    	je     d590 <__sprintf_chk@plt+0x88b0>
    ce62:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
    ce67:	48 85 ca             	test   %rcx,%rdx
    ce6a:	c1 ea 3f             	shr    $0x3f,%edx
    ce6d:	01 cf                	add    %ecx,%edi
    ce6f:	0f 85 dc 02 4d 21    	jne    214dd151 <obstack_alloc_failed_handler@@Base+0x214bb0b1>
    ce75:	dd 7f 71             	fnstsw 0x71(%rdi)
    ce78:	85 db                	test   %ebx,%ebx
    ce7a:	74 14                	je     ce90 <__sprintf_chk@plt+0x81b0>
    ce7c:	8b 44 24 34          	mov    0x34(%rsp),%eax
    ce80:	48 e9 aa 01 00 00    	rex.W jmp d030 <__sprintf_chk@plt+0x8350>
    ce86:	08 00                	or     %al,(%rax)
    ce88:	00 0f                	add    %cl,(%rdi)
    ce8a:	1f                   	(bad)  
    ce8b:	80 00 4d             	addb   $0x4d,(%rax)
    ce8e:	31 e8                	xor    %ebp,%eax
    ce90:	48 be 0f 8c 4c 39 ca 	movabs $0x480f00ca394c8c0f,%rsi
    ce97:	00 0f 48 
    ce9a:	c1 e7 03             	shl    $0x3,%edi
    ce9d:	ff 1f                	lcall  *(%rdi)
    ce9f:	00 48 4c             	add    %cl,0x4c(%rax)
    cea2:	01 d9                	add    %ebx,%ecx
    cea4:	83 ed 4c             	sub    $0x4c,%ebp
    cea7:	31 cb                	xor    %ecx,%ebx
    cea9:	e6 48                	out    %al,$0x48
    ceab:	89 c8                	mov    %ecx,%eax
    cead:	48 c1 ea 48          	shr    $0x48,%rdx
    ceb1:	f7 fb                	idiv   %ebx
    ceb3:	49 21 ce             	and    %rcx,%r14
    ceb6:	00 00                	add    %al,(%rax)
    ceb8:	48 29 f8             	sub    %rdi,%rax
    cebb:	83 c0 30             	add    $0x30,%eax
    cebe:	88 45 00             	mov    %al,0x0(%rbp)
    cec1:	48 89 c8             	mov    %rcx,%rax
    cec4:	48 89 d1             	mov    %rdx,%rcx
    cec7:	48 83 f8 09          	cmp    $0x9,%rax
    cecb:	77 d3                	ja     cea0 <__sprintf_chk@plt+0x81c0>
    cecd:	0f 84 ec fc ff ff    	je     cbbf <__sprintf_chk@plt+0x7edf>
    ced3:	84 24 03             	test   %ah,(%rbx,%rax,1)
    ced6:	00 00                	add    %al,(%rax)
    ced8:	4c 89 f7             	mov    %r14,%rdi
    cedb:	4d 89 c4             	mov    %r8,%r12
    cede:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    cee3:	4d                   	rex.WRB
    cee4:	4d 01 fd             	add    %r15,%r13
    cee7:	48 f7 fe             	idiv   %rsi
    ceea:	0f af cd             	imul   %ebp,%ecx
    ceed:	ff                   	(bad)  
    ceee:	ff 49 29             	decl   0x29(%rcx)
    cef1:	ec                   	in     (%dx),%al
    cef2:	48 89 ee             	mov    %rbp,%rsi
    cef5:	b9 29 48 f7 f8       	mov    $0xf8f74829,%ecx
    cefa:	49 89 c7             	mov    %rax,%r15
    cefd:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    cf02:	4c 89 e2             	mov    %r12,%rdx
    cf05:	48 89 c7             	mov    %rax,%rdi
    cf08:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    cf0d:	e8 1e 7b ff 4d       	call   4e004a30 <obstack_alloc_failed_handler@@Base+0x4dfe2990>
    cf12:	7c a8                	jl     cebc <__sprintf_chk@plt+0x81dc>
    cf14:	01 48 49             	add    %ecx,0x49(%rax)
    cf17:	21 ca                	and    %ecx,%edx
    cf19:	c7 c1 63 fc ff ff    	mov    $0xfffffc63,%ecx
    cf1f:	8b 64 24 38          	mov    0x38(%rsp),%esp
    cf23:	eb 3e                	jmp    cf63 <__sprintf_chk@plt+0x8283>
    cf25:	0f 1f 00             	nopl   (%rax)
    cf28:	49 39 48 c7          	cmp    %rcx,-0x39(%r8)
    cf2c:	c1 98 fe ff ff 0f 47 	rcrl   $0x47,0xffffffe(%rax)
    cf33:	eb 4c                	jmp    cf81 <__sprintf_chk@plt+0x82a1>
    cf35:	29 eb                	sub    %ebp,%ebx
    cf37:	48 01 f3             	add    %rsi,%rbx
    cf3a:	0f 8c a5 fd 48 89    	jl     ffffffff8949cce5 <obstack_alloc_failed_handler@@Base+0xffffffff8947ac45>
    cf40:	d1 48 89             	rorl   -0x77(%rax)
    cf43:	ef                   	out    %eax,(%dx)
    cf44:	e8 07 7b ff ff       	call   4a50 <memcpy@plt>
    cf49:	49 01 4d 0f          	add    %rcx,0xf(%r13)
    cf4d:	af                   	scas   %es:(%rdi),%eax
    cf4e:	f6 03 00             	testb  $0x0,(%rbx)
    cf51:	00 0f                	add    %cl,(%rdi)
    cf53:	8c 69 fc             	mov    %gs,-0x4(%rcx)
    cf56:	ff                   	(bad)  
    cf57:	ff c2                	inc    %edx
    cf59:	49 89 c3             	mov    %rax,%r11
    cf5c:	89 49 c1             	mov    %ecx,-0x3f(%rcx)
    cf5f:	e3 31                	jrcxz  cf92 <__sprintf_chk@plt+0x82b2>
    cf61:	ff                   	(bad)  
    cf62:	ff 41 4d             	incl   0x4d(%rcx)
    cf65:	0f af c4             	imul   %esp,%eax
    cf68:	84 c0                	test   %al,%al
    cf6a:	74 bc                	je     cf28 <__sprintf_chk@plt+0x8248>
    cf6c:	3c 48                	cmp    $0x48,%al
    cf6e:	c1 eb 06             	shr    $0x6,%ebx
    cf71:	02 00                	add    (%rax),%al
    cf73:	00 48 49             	add    %cl,0x49(%rax)
    cf76:	c1 e0 30             	shl    $0x30,%eax
    cf79:	47                   	rex.RXB
    cf7a:	49 ff c7             	inc    %r15
    cf7d:	c3                   	ret    
    cf7e:	eb 48                	jmp    cfc8 <__sprintf_chk@plt+0x82e8>
    cf80:	c5 48 f7             	(bad)
    cf83:	fa                   	cli    
    cf84:	24 10                	and    $0x10,%al
    cf86:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    cf8a:	4d 21 cc             	and    %r9,%r12
    cf8d:	75 48                	jne    cfd7 <__sprintf_chk@plt+0x82f7>
    cf8f:	ab                   	stos   %eax,%es:(%rdi)
    cf90:	48 89 d8             	mov    %rbx,%rax
    cf93:	31 d2                	xor    %edx,%edx
    cf95:	49 f7 f5             	div    %r13
    cf98:	48 85 d2             	test   %rdx,%rdx
    cf9b:	75 0c                	jne    cfa9 <__sprintf_chk@plt+0x82c9>
    cf9d:	49 f7 e4             	mul    %r12
    cfa0:	48 89 c1             	mov    %rax,%rcx
    cfa3:	0f 81 bf 03 00 00    	jno    d368 <__sprintf_chk@plt+0x8688>
    cfa9:	48 8b 48 01          	mov    0x1(%rax),%rcx
    cfad:	d9 48 89             	(bad)  -0x77(%rax)
    cfb0:	5c                   	pop    %rsp
    cfb1:	24 20                	and    $0x20,%al
    cfb3:	df 6c 24 20          	fildll 0x20(%rsp)
    cfb7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    cfbc:	df 6c 24 20          	fildll 0x20(%rsp)
    cfc0:	48 85 c0             	test   %rax,%rax
    cfc3:	0f 88 49 4c 31 ce    	js     ffffffffce321c12 <obstack_alloc_failed_handler@@Base+0xffffffffce2ffb72>
    cfc9:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    cfce:	de 48 c7             	fimuls -0x39(%rax)
    cfd1:	c0 97 01 00 00 fb 02 	rclb   $0x2,-0x4ffffff(%rdi)
    cfd8:	00 00                	add    %al,(%rax)
    cfda:	ff                   	(bad)  
    cfdb:	ff 00                	incl   (%rax)
    cfdd:	de 49 01             	fimuls 0x1(%rcx)
    cfe0:	cb                   	lret   
    cfe1:	24 48                	and    $0x48,%al
    cfe3:	10 0f                	adc    %cl,(%rdi)
    cfe5:	8f                   	(bad)  
    cfe6:	de fc                	fdivrp %st,%st(4)
    cfe8:	ff                   	(bad)  
    cfe9:	ff 0f                	decl   (%rdi)
    cfeb:	4d 0f 84 7c fd ff ff 	rex.WRB je cd6e <__sprintf_chk@plt+0x808e>
    cff2:	eb 08                	jmp    cffc <__sprintf_chk@plt+0x831c>
    cff4:	0f 1f e9             	nop    %ecx
    cff7:	e8 01 00 00 c1       	call   ffffffffc100cffd <obstack_alloc_failed_handler@@Base+0xffffffffc0feaf5d>
    cffc:	eb 0d                	jmp    d00b <__sprintf_chk@plt+0x832b>
    cffe:	83 c3 01             	add    $0x1,%ebx
    d001:	d8 ca                	fmul   %st(2),%st
    d003:	d9 cb                	fxch   %st(3)
    d005:	db f3                	fcomi  %st(3),%st
    d007:	72 0f                	jb     d018 <__sprintf_chk@plt+0x8338>
    d009:	83 fb 08             	cmp    $0x8,%ebx
    d00c:	48 ff c1             	inc    %rcx
    d00f:	da dd                	fcmovu %st(5),%st
    d011:	da eb                	(bad)  
    d013:	08 0f                	or     %cl,(%rdi)
    d015:	49 0f af 48 0f       	imul   0xf(%r8),%rcx
    d01a:	af                   	scas   %es:(%rdi),%eax
    d01b:	f2 4c 8d 7d 01       	repnz lea 0x1(%rbp),%r15
    d020:	de f1                	fdivp  %st,%st(1)
    d022:	0f 84 1b 01 00 00    	je     d143 <__sprintf_chk@plt+0x8463>
    d028:	83 d5 02             	adc    $0x2,%ebp
    d02b:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
    d030:	0f 84 12 04 00 00    	je     d448 <__sprintf_chk@plt+0x8768>
    d036:	db 2d c4 f4 00 00    	fldt   0xf4c4(%rip)        # 1c500 <_obstack_memory_used@@Base+0xbd50>
    d03c:	df f1                	fcomip %st(1),%st
    d03e:	0f 86 9c 02 00 00    	jbe    d2e0 <__sprintf_chk@plt+0x8600>
    d044:	d9 05 a2 f4 4d 0f    	flds   0xf4df4a2(%rip)        # f4ec4ec <obstack_alloc_failed_handler@@Base+0xf4ca44c>
    d04a:	af                   	scas   %es:(%rdi),%eax
    d04b:	dc e9                	fsubr  %st,%st(1)
    d04d:	a8 01                	test   $0x1,%al
    d04f:	00 00                	add    %al,(%rax)
    d051:	05 0f 85 03 02       	add    $0x203850f,%eax
    d056:	00 00                	add    %al,(%rax)
    d058:	fe                   	(bad)  
    d059:	ff                   	(bad)  
    d05a:	ff 49 85             	decl   -0x7b(%rcx)
    d05d:	d1 48 f7             	rorl   -0x9(%rax)
    d060:	ff 0c 0f             	decl   (%rdi,%rcx,1)
    d063:	85 b9 fc 48 ff c0    	test   %edi,-0x3f00b704(%rcx)
    d069:	c1 e7 2c             	shl    $0x2c,%edi
    d06c:	4c df 7c 24 20       	rex.WR fistpll 0x20(%rsp)
    d071:	d9 6c 24 4e          	fldcw  0x4e(%rsp)
    d075:	4d 85 ef             	test   %r13,%r15
    d078:	24 20                	and    $0x20,%al
    d07a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    d07f:	df 6c 24 20          	fildll 0x20(%rsp)
    d083:	48 85 c0             	test   %rax,%rax
    d086:	79 06                	jns    d08e <__sprintf_chk@plt+0x83ae>
    d088:	d8 05 5a f4 00 00    	fadds  0xf45a(%rip)        # 1c4e8 <_obstack_memory_used@@Base+0xbd38>
    d08e:	0f 85 a6 fd ff ff    	jne    ce3a <__sprintf_chk@plt+0x815a>
    d094:	0f 85 4e 49 f7 f8    	jne    fffffffff8f819e8 <obstack_alloc_failed_handler@@Base+0xfffffffff8f5f948>
    d09a:	48 ff 0f             	decq   (%rdi)
    d09d:	8c 67 fe             	mov    %fs,-0x2(%rdi)
    d0a0:	ff                   	(bad)  
    d0a1:	ff 0f                	decl   (%rdi)
    d0a3:	8f                   	(bad)  
    d0a4:	4c 02 00             	rex.WR add (%rax),%r8b
    d0a7:	00 eb                	add    %ch,%bl
    d0a9:	06                   	(bad)  
    d0aa:	48 21 c1             	and    %rax,%rcx
    d0ad:	1f                   	(bad)  
    d0ae:	40 00 48 0f          	rex add %cl,0xf(%rax)
    d0b2:	4c 89 c0             	mov    %r8,%rax
    d0b5:	00 00                	add    %al,(%rax)
    d0b7:	d3 fd                	sar    %cl,%ebp
    d0b9:	ff                   	(bad)  
    d0ba:	ff 24 20             	jmp    *(%rax,%riz,1)
    d0bd:	0f 89 29 02 00 00    	jns    d2ec <__sprintf_chk@plt+0x860c>
    d0c3:	d8 05 1f 48 ff c6    	fadds  -0x3900b7e1(%rip)        # ffffffffc70018e8 <obstack_alloc_failed_handler@@Base+0xffffffffc6fdf848>
    d0c9:	d9 c9                	fxch   %st(1)
    d0cb:	0f 8c 4e fd ff ff    	jl     ce1f <__sprintf_chk@plt+0x813f>
    d0d1:	ff                   	(bad)  
    d0d2:	ff 49 c7             	decl   -0x39(%rcx)
    d0d5:	c0 3e ff             	sarb   $0xff,(%rsi)
    d0d8:	ff                   	(bad)  
    d0d9:	ff 24 48             	jmp    *(%rax,%rcx,2)
    d0dc:	48 f7 f9             	idiv   %rcx
    d0df:	07                   	(bad)  
    d0e0:	ff                   	(bad)  
    d0e1:	ff 48 09             	decl   0x9(%rax)
    d0e4:	f6 0f 1f             	testb  $0x1f,(%rdi)
    d0e7:	00 d8                	add    %bl,%al
    d0e9:	05 fa f3 49 49       	add    $0x4949f3fa,%eax
    d0ee:	c1 e4 07             	shl    $0x7,%esp
    d0f1:	24 49                	and    $0x49,%al
    d0f3:	01 cb                	add    %ecx,%ebx
    d0f5:	df 6c 24 20          	fildll 0x20(%rsp)
    d0f9:	4d 85 e4             	test   %r12,%r12
    d0fc:	0f 89 49 ff c5 ff    	jns    ffffffffffc6d04b <obstack_alloc_failed_handler@@Base+0xffffffffffc4afab>
    d102:	48 f7 49 ff c4 00 83 	testq  $0x7c8300c4,-0x1(%rcx)
    d109:	7c 
    d10a:	24 10                	and    $0x10,%al
    d10c:	01 0f                	add    %ecx,(%rdi)
    d10e:	84 87 00 00 00 db    	test   %al,-0x25000000(%rdi)
    d114:	2d e7 f3 00 00       	sub    $0xf3e7,%eax
    d119:	df f1                	fcomip %st(1),%st
    d11b:	76 7d                	jbe    d19a <__sprintf_chk@plt+0x84ba>
    d11d:	d9 05 c9 f3 00 00    	flds   0xf3c9(%rip)        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    d123:	d9 c9                	fxch   %st(1)
    d125:	db f1                	fcomi  %st(1),%st
    d127:	0f 83 03 05 00 00    	jae    d630 <__sprintf_chk@plt+0x8950>
    d12d:	75 f2                	jne    d121 <__sprintf_chk@plt+0x8441>
    d12f:	d9 7c 24 0f          	fnstcw 0xf(%rsp)
    d133:	85 81 fc ff ff 80    	test   %eax,-0x7f000004(%rcx)
    d139:	cc                   	int3   
    d13a:	0c 66                	or     $0x66,%al
    d13c:	89 4d 4d             	mov    %ecx,0x4d(%rbp)
    d13f:	89 ec                	mov    %ebp,%esp
    d141:	c0 d9 6c             	rcr    $0x6c,%cl
    d144:	0f 84 59 01 00 00    	je     d2a3 <__sprintf_chk@plt+0x85c3>
    d14a:	e9 31 02 00 00       	jmp    d380 <__sprintf_chk@plt+0x86a0>
    d14f:	96                   	xchg   %eax,%esi
    d150:	44 24 20             	rex.R and $0x20,%al
    d153:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    d158:	df 6c 24 20          	fildll 0x20(%rsp)
    d15c:	48 eb ef             	rex.W jmp d14e <__sprintf_chk@plt+0x846e>
    d15f:	49                   	rex.WB
    d160:	48 39 7f 1f          	cmp    %rdi,0x1f(%rdi)
    d164:	f3 00 00             	repz add %al,(%rax)
    d167:	44 8b 49 c1          	mov    -0x3f(%rcx),%r9d
    d16b:	e6 3f                	out    %al,$0x3f
    d16d:	48 ff 0f             	decq   (%rdi)
    d170:	8f                   	(bad)  
    d171:	f5                   	cmc    
    d172:	02 e9                	add    %cl,%ch
    d174:	97                   	xchg   %eax,%edi
    d175:	fc                   	cld    
    d176:	ff                   	(bad)  
    d177:	ff 29                	ljmp   *(%rcx)
    d179:	cb                   	lret   
    d17a:	d8 e9                	fsubr  %st(1),%st
    d17c:	06                   	(bad)  
    d17d:	01 00                	add    %eax,(%rax)
    d17f:	00 83 c0 49 39 d2    	add    %al,-0x2dc6b640(%rbx)
    d185:	49 c1 ee 36          	shr    $0x36,%r14
    d189:	4d 29 ea             	sub    %r13,%r10
    d18c:	0f 4d 48 0f          	cmovge 0xf(%rax),%ecx
    d190:	af                   	scas   %es:(%rdi),%eax
    d191:	d9 0f                	(bad)  (%rdi)
    d193:	af                   	scas   %es:(%rdi),%eax
    d194:	f1                   	int1   
    d195:	1f                   	(bad)  
    d196:	40 00 dd             	add    %bl,%bpl
    d199:	d9 48 83             	(bad)  -0x7d(%rax)
    d19c:	ec                   	in     (%dx),%al
    d19d:	10 48 c7             	adc    %cl,-0x39(%rax)
    d1a0:	c2 ff 4d             	ret    $0x4dff
    d1a3:	85 cf                	test   %ecx,%edi
    d1a5:	be 01 00 4c 89       	mov    $0x894c0001,%esi
    d1aa:	cb                   	lret   
    d1ab:	c0 48 8b 5c          	rorb   $0x5c,-0x75(%rax)
    d1af:	24 10                	and    $0x10,%al
    d1b1:	48 8d 0d 25 c9 00 00 	lea    0xc925(%rip),%rcx        # 19add <_obstack_memory_used@@Base+0x932d>
    d1b8:	db 3c 24             	fstpt  (%rsp)
    d1bb:	48 89 df             	mov    %rbx,%rdi
    d1be:	e8 48 85 d3 ff       	call   ffffffffffd4570b <obstack_alloc_failed_handler@@Base+0xffffffffffd2366b>
    d1c3:	48 89 df             	mov    %rbx,%rdi
    d1c6:	bb ff ff 49 f7       	mov    $0xf749ffff,%ebx
    d1cb:	ff 31                	push   (%rcx)
    d1cd:	cf                   	iret   
    d1ce:	ff                   	(bad)  
    d1cf:	ff 5e 48             	lcall  *0x48(%rsi)
    d1d2:	f7 f8                	idiv   %eax
    d1d4:	e0 30                	loopne d206 <__sprintf_chk@plt+0x8526>
    d1d6:	89 c4                	mov    %eax,%esp
    d1d8:	48 8b 6c 48 c1       	mov    -0x3f(%rax,%rcx,2),%rbp
    d1dd:	ef                   	out    %eax,(%dx)
    d1de:	40 34 24             	rex xor $0x24,%al
    d1e1:	48 29 d5             	sub    %rdx,%rbp
    d1e4:	48 89 ef             	mov    %rbp,%rdi
    d1e7:	e8 a4 79 4d 0f       	call   f4e4b90 <obstack_alloc_failed_handler@@Base+0xf4c2af0>
    d1ec:	af                   	scas   %es:(%rdi),%eax
    d1ed:	c2 44 25             	ret    $0x2544
    d1f0:	00 f6                	add    %dh,%dh
    d1f2:	44 24 4c             	rex.R and $0x4c,%al
    d1f5:	29 f0                	sub    %esi,%eax
    d1f7:	21 f2                	and    %esi,%edx
    d1f9:	c7 c1 52 fc ff ff    	mov    $0xfffffc52,%ecx
    d1ff:	48                   	rex.W
    d200:	4c 0f af e9          	imul   %rcx,%r13
    d204:	fb                   	sti    
    d205:	ff 0f                	decl   (%rdi)
    d207:	84 84 01 00 00 8b 44 	test   %al,0x448b0000(%rcx,%rax,1)
    d20e:	24 48                	and    $0x48,%al
    d210:	25 00 0f 8f 95       	and    $0x958f0f00,%eax
    d215:	fc                   	cld    
    d216:	ff                   	(bad)  
    d217:	ff                   	(bad)  
    d218:	de 48 f7             	fimuls -0x9(%rax)
    d21b:	fb                   	sti    
    d21c:	02 00                	add    (%rax),%al
    d21e:	00 49 f7             	add    %cl,-0x9(%rcx)
    d221:	fc                   	cld    
    d222:	24 08                	and    $0x8,%al
    d224:	c6                   	(bad)  
    d225:	4c 01 df             	add    %r11,%rdi
    d228:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
    d22f:	64 48 2b 04 25 28 00 	sub    %fs:0xf000028,%rax
    d236:	00 0f 
    d238:	84 02                	test   %al,(%rdx)
    d23a:	ff                   	(bad)  
    d23b:	ff                   	(bad)  
    d23c:	ff 00                	incl   (%rax)
    d23e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    d245:	48 89 e8             	mov    %rbp,%rax
    d248:	5b                   	pop    %rbx
    d249:	5d                   	pop    %rbp
    d24a:	41 5c                	pop    %r12
    d24c:	41                   	rex.B
    d24d:	4d 29 c0             	sub    %r8,%r8
    d250:	41 5f                	pop    %r15
    d252:	c3                   	ret    
    d253:	0f 1f 44 00 4d       	nopl   0x4d(%rax,%rax,1)
    d258:	85 e8                	test   %ebp,%eax
    d25a:	dd 48 48             	fisttpll 0x48(%rax)
    d25d:	39 f3                	cmp    %esi,%ebx
    d25f:	10 31                	adc    %dh,(%rcx)
    d261:	db e9                	fucomi %st(1),%st
    d263:	23 fd                	and    %ebp,%edi
    d265:	ff                   	(bad)  
    d266:	ff 66 0f             	jmp    *0xf(%rsi)
    d269:	1f                   	(bad)  
    d26a:	84 00                	test   %al,(%rax)
    d26c:	00 00                	add    %al,(%rax)
    d26e:	00 00                	add    %al,(%rax)
    d270:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    d274:	eb 86                	jmp    d1fc <__sprintf_chk@plt+0x851c>
    d276:	66 2e 48 21 c6       	data16 cs and %rax,%rsi
    d27b:	49 39 d7             	cmp    %rdx,%r15
    d27e:	00 00                	add    %al,(%rax)
    d280:	85 0f                	test   %ecx,(%rdi)
    d282:	84 87 fd 4d 39 ea    	test   %al,-0x15c6b203(%rdi)
    d288:	8c ac fe ff ff 4d 39 	mov    %gs,0x394dffff(%rsi,%rdi,8)
    d28f:	d0 0f                	rorb   (%rdi)
    d291:	87 52 49             	xchg   %edx,0x49(%rdx)
    d294:	c7 c7 3c fd ff ff    	mov    $0xfffffd3c,%edi
    d29a:	84 48 31             	test   %cl,0x31(%rax)
    d29d:	48 ff c2             	inc    %rdx
    d2a0:	89 c8                	mov    %ecx,%eax
    d2a2:	e9 ec fc 49 0f       	jmp    f4acf93 <obstack_alloc_failed_handler@@Base+0xf48aef3>
    d2a7:	af                   	scas   %es:(%rdi),%eax
    d2a8:	ce                   	(bad)  
    d2a9:	c2 f9 49             	ret    $0x49f9
    d2ac:	89 c2                	mov    %eax,%edx
    d2ae:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
    d2b1:	31 d2                	xor    %edx,%edx
    d2b3:	41                   	rex.B
    d2b4:	48 c7                	rex.W (bad) 
    d2b6:	48 01 c0             	add    %rax,%rax
    d2b9:	49 89 fa             	mov    %rdi,%r10
    d2bc:	41 89 c1             	mov    %eax,%r9d
    d2bf:	4c                   	rex.WR
    d2c0:	49 09 f0             	or     %rsi,%r8
    d2c3:	d7                   	xlat   %ds:(%rbx)
    d2c4:	39 d6                	cmp    %edx,%esi
    d2c6:	77 b8                	ja     d280 <__sprintf_chk@plt+0x85a0>
    d2c8:	39 fe                	cmp    %edi,%esi
    d2ca:	40 0f 92 c7          	setb   %dil
    d2ce:	40 0f b6 ff          	movzbl %dil,%edi
    d2d2:	83 c7 02             	add    $0x2,%edi
    d2d5:	7c 6d                	jl     d344 <__sprintf_chk@plt+0x8664>
    d2d7:	66 0f                	(bad)  
    d2d9:	0f 8f e9 93 03 00    	jg     466c8 <obstack_alloc_failed_handler@@Base+0x24628>
    d2df:	00 0c 01             	add    %cl,(%rcx,%rax,1)
    d2e2:	00 4c 01 df          	add    %cl,-0x21(%rcx,%rax,1)
    d2e6:	40 00 d9             	rex add %bl,%cl
    d2e9:	c9                   	leave  
    d2ea:	0f 84 8c 03 00 00    	je     d67c <__sprintf_chk@plt+0x899c>
    d2f0:	18 7c 24 20          	sbb    %bh,0x20(%rsp)
    d2f4:	48 83 ec 74          	sub    $0x74,%rsp
    d2f8:	bb 48 01 d0 00       	mov    $0xd00148,%ebx
    d2fd:	31 c0                	xor    %eax,%eax
    d2ff:	4c 8b 4d 09          	mov    0x9(%rbp),%r9
    d303:	d0 48 c7             	rorb   -0x39(%rax)
    d306:	c2 ff ff             	ret    $0xffff
    d309:	ff                   	(bad)  
    d30a:	ff 48 8d             	decl   -0x73(%rax)
    d30d:	0d d1 c7 00 00       	or     $0xc7d1,%eax
    d312:	4c 89 e7             	mov    %r12,%rdi
    d315:	49 ff c6             	inc    %r14
    d318:	e9 6d 03 00 00       	jmp    d68a <__sprintf_chk@plt+0x89aa>
    d31d:	4c 89 e7             	mov    %r12,%rdi
    d320:	e8 48 39 ff fd       	call   fffffffffe000c6d <obstack_alloc_failed_handler@@Base+0xfffffffffdfdebcd>
    d325:	ff                   	(bad)  
    d326:	ff 49 ff             	decl   -0x1(%rcx)
    d329:	c3                   	ret    
    d32a:	20 48 39             	and    %cl,0x39(%rax)
    d32d:	e8 48 89 c2 0f       	call   fc35c7a <obstack_alloc_failed_handler@@Base+0xfc13bda>
    d332:	0f 8f d7 03 00 00    	jg     d70f <__sprintf_chk@plt+0x8a2f>
    d338:	44 24 0f             	rex.R and $0xf,%al
    d33b:	85 9e 00 00 00 04    	test   %ebx,0x4000000(%rsi)
    d341:	24 80                	and    $0x80,%al
    d343:	0f 84 f6 fc ff ff    	je     d03f <__sprintf_chk@plt+0x835f>
    d349:	c3                   	ret    
    d34a:	02 00                	add    (%rax),%al
    d34c:	00 dd                	add    %bl,%ch
    d34e:	d8 eb                	fsubr  %st(3),%st
    d350:	09 0f                	or     %ecx,(%rdi)
    d352:	1f                   	(bad)  
    d353:	80 00 00             	addb   $0x0,(%rax)
    d356:	00 00                	add    %al,(%rax)
    d358:	dd 4c 31 c2          	fisttpll -0x3e(%rcx,%rsi,1)
    d35c:	d4                   	(bad)  
    d35d:	e9 ce fc ff ff       	jmp    d030 <__sprintf_chk@plt+0x8350>
    d362:	fe                   	(bad)  
    d363:	ff                   	(bad)  
    d364:	ff 49 f7             	decl   -0x9(%rcx)
    d367:	48 c1 e1 0f          	shl    $0xf,%rcx
    d36b:	8c da                	mov    %ds,%edx
    d36d:	02 00                	add    (%rax),%al
    d36f:	00 31                	add    %dh,(%rcx)
    d371:	c9                   	leave  
    d372:	41 83 e3 10          	and    $0x10,%r11d
    d376:	0f 85 c3 fa ff ff    	jne    ce3f <__sprintf_chk@plt+0x815f>
    d37c:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    d381:	e9 4d 0f af f4       	jmp    fffffffff4afe2d3 <obstack_alloc_failed_handler@@Base+0xfffffffff4adc233>
    d386:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d38d:	00 00 00 
    d390:	48 8b 49 29          	mov    0x29(%rcx),%rcx
    d394:	fd                   	std    
    d395:	48 83 f9 01          	cmp    $0x1,%rcx
    d399:	4d 01 c9             	add    %r9,%r9
    d39c:	8f 86 48 f7 fb 0f    	pop    0xffbf748(%rsi)
    d3a2:	85 49 c7             	test   %ecx,-0x39(%rcx)
    d3a5:	c4                   	(bad)  
    d3a6:	6b 01 00             	imul   $0x0,(%rcx),%eax
    d3a9:	00 ff                	add    %bh,%bh
    d3ab:	c5 00 4c             	(bad)
    d3ae:	89 e6                	mov    %esp,%esi
    d3b0:	48 0f af c2          	imul   %rdx,%rax
    d3b4:	48 39 c1             	cmp    %rax,%rcx
    d3b7:	76 48                	jbe    d401 <__sprintf_chk@plt+0x8721>
    d3b9:	c7 c0 77 03 00 00    	mov    $0x377,%eax
    d3bf:	21 db                	and    %ebx,%ebx
    d3c1:	8b 74 4d 09          	mov    0x9(%rbp,%rcx,2),%esi
    d3c5:	ef                   	out    %eax,(%dx)
    d3c6:	f0 25 00 01 00 49    	lock and $0x49000100,%eax
    d3cc:	c7 c3 5d fe ff ff    	mov    $0xfffffe5d,%ebx
    d3d2:	8b 34 24             	mov    (%rsp),%esi
    d3d5:	48 8d 8e 88 02 00 00 	lea    0x288(%rsi),%rcx
    d3dc:	c6 86 87 02 48 31 f6 	movb   $0xf6,0x31480287(%rsi)
    d3e3:	75 f7                	jne    d3dc <__sprintf_chk@plt+0x86fc>
    d3e5:	4c 24 08             	rex.WR and $0x8,%al
    d3e8:	85 48 c1             	test   %ecx,-0x3f(%rax)
    d3eb:	e7 04                	out    %eax,$0x4
    d3ed:	04 49                	add    $0x49,%al
    d3ef:	0f af 0f             	imul   (%rdi),%ecx
    d3f2:	8f 81 7c d0 ff 4c    	pop    0x4cffd07c(%rcx)
    d3f8:	24 30                	and    $0x30,%al
    d3fa:	49 c1 e1 24          	shl    $0x24,%r9
    d3fe:	af                   	scas   %es:(%rdi),%eax
    d3ff:	f3 c9                	repz leave 
    d401:	49 21 d0             	and    %rdx,%r8
    d404:	48 ff c1             	inc    %rcx
    d407:	84 49 f7             	test   %cl,-0x9(%rcx)
    d40a:	49 0f af df          	imul   %r15,%rbx
    d40e:	00 48 8d             	add    %cl,-0x73(%rax)
    d411:	0d 4d 21 d7 00       	or     $0xd7214d,%eax
    d416:	0f b6 0c 4c          	movzbl (%rsp,%rcx,2),%ecx
    d41a:	85 f8                	test   %edi,%eax
    d41c:	85 c0                	test   %eax,%eax
    d41e:	0f 84 b7 02 00 00    	je     d6db <__sprintf_chk@plt+0x89fb>
    d424:	49 ff c3             	inc    %r11
    d427:	4d 31 e7             	xor    %r12,%r15
    d42a:	85 c0                	test   %eax,%eax
    d42c:	48 c1 e7 37          	shl    $0x37,%rdi
    d430:	09 db                	or     %ebx,%ebx
    d432:	48 8d 42 01          	lea    0x1(%rdx),%rax
    d436:	c6                   	(bad)  
    d437:	4c 85 fa             	test   %r15,%rdx
    d43a:	89 44 24 08          	mov    %eax,0x8(%rsp)
    d43e:	48 c1 e9 40          	shr    $0x40,%rcx
    d442:	ff 4d 01             	decl   0x1(%rbp)
    d445:	fd                   	std    
    d446:	00 00                	add    %al,(%rax)
    d448:	48 83 0f 85          	orq    $0xffffffffffffff85,(%rdi)
    d44c:	4c 85 fe             	test   %r15,%rsi
    d44f:	00 c6                	add    %al,%dh
    d451:	00 00                	add    %al,(%rax)
    d453:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    d45a:	31 c0                	xor    %eax,%eax
    d45c:	d9 c0                	fld    %st(0)
    d45e:	db 3c 24             	fstpt  (%rsp)
    d461:	4c 8b 4d 29          	mov    0x29(%rbp),%r9
    d465:	fc                   	cld    
    d466:	be 01 00 00 00       	mov    $0x1,%esi
    d46b:	4c 89 e7             	mov    %r12,%rdi
    d46e:	db 7c 24 30          	fstpt  0x30(%rsp)
    d472:	e8 69 78 ff ff       	call   4ce0 <__sprintf_chk@plt>
    d477:	4c 89 4d 01          	mov    %r9,0x1(%rbp)
    d47b:	d3 c1                	rol    %cl,%ecx
    d47d:	e3 34                	jrcxz  d4b3 <__sprintf_chk@plt+0x87d3>
    d47f:	49 85 cf             	test   %rcx,%r15
    d482:	e6 1a                	out    %al,$0x1a
    d484:	db 6c 24 20          	fldt   0x20(%rsp)
    d488:	4c 89 fa             	mov    %r15,%rdx
    d48b:	0f 86 a6 fe ff ff    	jbe    d337 <__sprintf_chk@plt+0x8657>
    d491:	d9 05 59 f0 49 09    	flds   0x949f059(%rip)        # 94ac4f0 <obstack_alloc_failed_handler@@Base+0x948a450>
    d497:	da c9                	fcmove %st(1),%st
    d499:	4c 89 d9             	mov    %r11,%rcx
    d49c:	49 21 cc             	and    %rcx,%r12
    d49f:	48 7f 79             	rex.W jg d51b <__sprintf_chk@plt+0x883b>
    d4a2:	e9 7d 4c 01 c7       	jmp    ffffffffc7022124 <obstack_alloc_failed_handler@@Base+0xffffffffc7000084>
    d4a7:	f0 4c                	lock rex.WR
    d4a9:	49 c7                	rex.WB (bad) 
    d4ab:	0f 8f 3f fd ff ff    	jg     d1f0 <__sprintf_chk@plt+0x8510>
    d4b1:	e9 19 c1 be 4c       	jmp    4cbf95cf <obstack_alloc_failed_handler@@Base+0x4cbd752f>
    d4b6:	0f af fb             	imul   %ebx,%edi
    d4b9:	b8 fe ff ff 4c       	mov    $0x4cfffffe,%eax
    d4be:	01 4c 21 c6          	add    %ecx,-0x3a(%rcx,%riz,1)
    d4c2:	00 00                	add    %al,(%rax)
    d4c4:	eb 2f                	jmp    d4f5 <__sprintf_chk@plt+0x8815>
    d4c6:	ff                   	(bad)  
    d4c7:	e8 b4 73 ff ff       	call   4880 <strlen@plt>
    d4cc:	41 5d                	pop    %r13
    d4ce:	41 5f                	pop    %r15
    d4d0:	48 89 c2             	mov    %rax,%rdx
    d4d3:	49 89 0f             	mov    %rcx,(%r15)
    d4d6:	8f                   	(bad)  
    d4d7:	64 03 00             	add    %fs:(%rax),%eax
    d4da:	00 49 31             	add    %cl,0x31(%rcx)
    d4dd:	4c 39 e1             	cmp    %r12,%rcx
    d4e0:	f6 0f 84             	testb  $0x84,(%rdi)
    d4e3:	66 fe                	data16 (bad) 
    d4e5:	ff                   	(bad)  
    d4e6:	ff                   	(bad)  
    d4e7:	fd                   	std    
    d4e8:	fe                   	(bad)  
    d4e9:	ff                   	(bad)  
    d4ea:	ff                   	(bad)  
    d4eb:	e9 e1 fe 0f 85       	jmp    ffffffff8510d3d1 <obstack_alloc_failed_handler@@Base+0xffffffff850eb331>
    d4f0:	5f                   	pop    %rdi
    d4f1:	fe                   	(bad)  
    d4f2:	ff                   	(bad)  
    d4f3:	ff 00                	incl   (%rax)
    d4f5:	00 dc                	add    %bl,%ah
    d4f7:	c9                   	leave  
    d4f8:	db 2d 02 49 0f 4c    	fldt   0x4c0f4902(%rip)        # 4c101e00 <obstack_alloc_failed_handler@@Base+0x4c0dfd60>
    d4fe:	89 e7                	mov    %esp,%edi
    d500:	76 97                	jbe    d499 <__sprintf_chk@plt+0x87b9>
    d502:	d9 05 e4 ef 00 00    	flds   0xefe4(%rip)        # 1c4ec <_obstack_memory_used@@Base+0xbd3c>
    d508:	d9 ca                	fxch   %st(2)
    d50a:	db f2                	fcomi  %st(2),%st
    d50c:	0f 83 4d 01 ce 00    	jae    ced65f <obstack_alloc_failed_handler@@Base+0xccb5bf>
    d512:	48 f7 ff             	idiv   %rdi
    d515:	c9                   	leave  
    d516:	d9 7c 24 4e          	fnstcw 0x4e(%rsp)
    d51a:	0f b7 44 24 4e       	movzwl 0x4e(%rsp),%eax
    d51f:	e9 5d fd ff ff       	jmp    d281 <__sprintf_chk@plt+0x85a1>
    d524:	44 24 4c             	rex.R and $0x4c,%al
    d527:	d9 c0                	fld    %st(0)
    d529:	d9 6c 48 31          	fldcw  0x31(%rax,%rcx,2)
    d52d:	d1 7c 24 20          	sarl   0x20(%rsp)
    d531:	d9 6c 24 4e          	fldcw  0x4e(%rsp)
    d535:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    d53a:	48 89 44 4c 85       	mov    %rax,-0x7b(%rsp,%rcx,2)
    d53f:	d2 6c 24 20          	shrb   %cl,0x20(%rsp)
    d543:	48                   	rex.W
    d544:	4d 89 db             	mov    %r11,%r11
    d547:	06                   	(bad)  
    d548:	d8 05 4c 29 f0 00    	fadds  0xf0294c(%rip)        # f0fe9a <obstack_alloc_failed_handler@@Base+0xeeddfa>
    d54e:	8b 54 24 10          	mov    0x10(%rsp),%edx
    d552:	85 d2                	test   %edx,%edx
    d554:	75 2a                	jne    d580 <__sprintf_chk@plt+0x88a0>
    d556:	db e9                	fucomi %st(1),%st
    d558:	dd d9                	fstp   %st(1)
    d55a:	7a 06                	jp     d562 <__sprintf_chk@plt+0x8882>
    d55c:	0f                   	(bad)  
    d55d:	0f 8f 5b 03 00 00    	jg     d8be <__sprintf_chk@plt+0x8bde>
    d563:	d8 48 83             	fmuls  -0x7d(%rax)
    d566:	c0 01 48             	rolb   $0x48,(%rcx)
    d569:	89 44 24 10          	mov    %eax,0x10(%rsp)
    d56d:	df 6c 24 0f          	fildll 0xf(%rsp)
    d571:	8c 54 fe ff          	mov    %ss,-0x1(%rsi,%rdi,8)
    d575:	4c 39 c8             	cmp    %r9,%rax
    d578:	09 0f                	or     %ecx,(%rdi)
    d57a:	1f                   	(bad)  
    d57b:	80 00 4c             	addb   $0x4c,(%rax)
    d57e:	89 e9                	mov    %ebp,%ecx
    d580:	dd d9                	fstp   %st(1)
    d582:	49 ff c2             	inc    %r10
    d585:	0f 8c 51 fd ff ff    	jl     d2dc <__sprintf_chk@plt+0x85fc>
    d58b:	80 00 00             	addb   $0x0,(%rax)
    d58e:	00 00                	add    %al,(%rax)
    d590:	0f 85 97 fd ff 4d    	jne    4e00d32d <obstack_alloc_failed_handler@@Base+0x4dfeb28d>
    d596:	01 d7                	add    %edx,%edi
    d598:	f0 48 01 0f          	lock add %rcx,(%rdi)
    d59c:	84 38                	test   %bh,(%rax)
    d59e:	fe                   	(bad)  
    d59f:	ff                   	(bad)  
    d5a0:	ff c0                	inc    %eax
    d5a2:	44 01 c8             	add    %r9d,%eax
    d5a5:	83 f8 05             	cmp    $0x5,%eax
    d5a8:	0f 48 0f             	cmovs  (%rdi),%ecx
    d5ab:	af                   	scas   %es:(%rdi),%eax
    d5ac:	d8 ff                	fdivr  %st(7),%st
    d5ae:	e9 dd f8 ff ff       	jmp    ce90 <__sprintf_chk@plt+0x81b0>
    d5b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d5b8:	bf 02 00 00 00       	mov    $0x2,%edi
    d5bd:	b8 03 00 00 00       	mov    $0x3,%eax
    d5c2:	0f 42 f8             	cmovb  %eax,%edi
    d5c5:	e9 66 f8 75 d9       	jmp    ffffffffd976ce30 <obstack_alloc_failed_handler@@Base+0xffffffffd974ad90>
    d5ca:	0f 8f 45 01 00 00    	jg     d715 <__sprintf_chk@plt+0x8a35>
    d5d0:	d9 7c 24 4e          	fnstcw 0x4e(%rsp)
    d5d4:	dc e1                	fsub   %st,%st(1)
    d5d6:	d9 c9                	fxch   %st(1)
    d5d8:	0f b7 44 24 4e       	movzwl 0x4e(%rsp),%eax
    d5dd:	80 cc 0c             	or     $0xc,%ah
    d5e0:	66 0f 84 cb 03       	je     d9b0 <__sprintf_chk@plt+0x8cd0>
    d5e5:	00 00                	add    %al,(%rax)
    d5e7:	24 4c                	and    $0x4c,%al
    d5e9:	df 7c 24 20          	fistpll 0x20(%rsp)
    d5ed:	d9 6c 4d 85          	fldcw  -0x7b(%rbp,%rcx,2)
    d5f1:	f8                   	clc    
    d5f2:	8b 44 24 20          	mov    0x20(%rsp),%eax
    d5f6:	75 d1                	jne    d5c9 <__sprintf_chk@plt+0x88e9>
    d5f8:	0f 84 77 fe ff ff    	je     d475 <__sprintf_chk@plt+0x8795>
    d5fe:	ff                   	(bad)  
    d5ff:	ff c6                	inc    %esi
    d601:	46 01 69 48          	rex.RX add %r13d,0x48(%rcx)
    d605:	8d 56 02             	lea    0x2(%rsi),%edx
    d608:	e9 25 fe ff 0f       	jmp    1000d432 <obstack_alloc_failed_handler@@Base+0xffeb392>
    d60d:	8f                   	(bad)  
    d60e:	e1 fe                	loope  d60e <__sprintf_chk@plt+0x892e>
    d610:	ff                   	(bad)  
    d611:	ff                   	(bad)  
    d612:	da ee                	(bad)  
    d614:	00 00                	add    %al,(%rax)
    d616:	83 7c 0f 85 9c       	cmpl   $0xffffff9c,-0x7b(%rdi,%rcx,1)
    d61b:	fd                   	std    
    d61c:	ff                   	(bad)  
    d61d:	ff 85 48 c1 49 49    	incl   0x4949c148(%rbp)
    d623:	c1 ed 25             	shr    $0x25,%ebp
    d626:	0f 85 70 fd ff ff    	jne    d39c <__sprintf_chk@plt+0x86bc>
    d62c:	00 00                	add    %al,(%rax)
    d62e:	00 00                	add    %al,(%rax)
    d630:	d9 48 c1             	(bad)  -0x3f(%rax)
    d633:	e8 06 85 7d fd       	call   fffffffffd7e5b3e <obstack_alloc_failed_handler@@Base+0xfffffffffd7c3a9e>
    d638:	ff                   	(bad)  
    d639:	ff 44 24 4e          	incl   0x4e(%rsp)
    d63d:	80 cc 0c             	or     $0xc,%ah
    d640:	66 89 44 24 4c       	mov    %ax,0x4c(%rsp)
    d645:	d9 6c 24 4c          	fldcw  0x4c(%rsp)
    d649:	49 21 d7             	and    %rdx,%r15
    d64c:	20 d9                	and    %bl,%cl
    d64e:	6c                   	insb   (%dx),%es:(%rdi)
    d64f:	24 4e                	and    $0x4e,%al
    d651:	48                   	rex.W
    d652:	49 c1 49 09 ce       	rorq   $0xce,0x9(%r9)
    d657:	0f ba f8 3f          	btc    $0x3f,%eax
    d65b:	4d 31 ee             	xor    %r13,%r14
    d65e:	ff                   	(bad)  
    d65f:	ff                   	(bad)  
    d660:	d9 7c 24 4e          	fnstcw 0x4e(%rsp)
    d664:	dc e2                	fsub   %st,%st(2)
    d666:	d9 ca                	fxch   %st(2)
    d668:	0f b7 44 24 4e       	movzwl 0x4e(%rsp),%eax
    d66d:	80 cc 0c             	or     $0xc,%ah
    d670:	66 89 44 24 4c       	mov    %ax,0x4c(%rsp)
    d675:	d9 6c 24 4c          	fldcw  0x4c(%rsp)
    d679:	df 7c 24 20          	fistpll 0x20(%rsp)
    d67d:	d9 6c 24 4e          	fldcw  0x4e(%rsp)
    d681:	d9 c9                	fxch   %st(1)
    d683:	4c                   	rex.WR
    d684:	48 c1 eb 27          	shr    $0x27,%rbx
    d688:	48 0f ba f8 3f       	btc    $0x3f,%rax
    d68d:	e9 a8 49 c1 e5       	jmp    ffffffffe5c2203a <obstack_alloc_failed_handler@@Base+0xffffffffe5bfff9a>
    d692:	49 c7 c1 61 fe ff ff 	mov    $0xfffffffffffffe61,%r9
    d699:	c9                   	leave  
    d69a:	ff c4                	inc    %esp
    d69c:	c3                   	ret    
    d69d:	01 f6                	add    %esi,%esi
    d69f:	44 24 48             	rex.R and $0x48,%al
    d6a2:	08 0f                	or     %cl,(%rdi)
    d6a4:	48 21 f9             	and    %rdi,%rcx
    d6a7:	48 fc                	rex.W cld 
    d6a9:	ff                   	(bad)  
    d6aa:	ff 40 ff             	incl   -0x1(%rax)
    d6ad:	4d 29 f6             	sub    %r14,%r14
    d6b0:	68 ff e9 3a fb       	push   $0xfffffffffb3ae9ff
    d6b5:	48 c1 ee 09          	shr    $0x9,%rsi
    d6b9:	2b ee                	sub    %esi,%ebp
    d6bb:	00 00                	add    %al,(%rax)
    d6bd:	e9 49 01 d7 ff       	jmp    ffffffffffd7d80b <obstack_alloc_failed_handler@@Base+0xffffffffffd5b76b>
    d6c2:	d8 05 49 c1 e9 0f    	fadds  0xfe9c149(%rip)        # fea9811 <obstack_alloc_failed_handler@@Base+0xfe87771>
    d6c8:	85 54 ff ff          	test   %edx,-0x1(%rdi,%rdi,8)
    d6cc:	ff                   	(bad)  
    d6cd:	ff                   	(bad)  
    d6ce:	ff 90 c6 06 6b 85    	call   *-0x7a94f93a(%rax)
    d6d4:	c0 0f 85             	rorb   $0x85,(%rdi)
    d6d7:	57                   	push   %rdi
    d6d8:	fd                   	std    
    d6d9:	ff                   	(bad)  
    d6da:	ff 48 89             	decl   -0x77(%rax)
    d6dd:	54                   	push   %rsp
    d6de:	24 08                	and    $0x8,%al
    d6e0:	e9 e9 7d 00 00       	jmp    154ce <_obstack_memory_used@@Base+0x4d1e>
    d6e5:	00 1f                	add    %bl,(%rdi)
    d6e7:	00 49 48             	add    %cl,0x48(%rcx)
    d6ea:	c1 ef 1a             	shr    $0x1a,%edi
    d6ed:	4d 29 e8             	sub    %r13,%r8
    d6f0:	ff                   	(bad)  
    d6f1:	ff 83 7c 24 10 01    	incl   0x110247c(%rbx)
    d6f7:	74 77                	je     d770 <__sprintf_chk@plt+0x8a90>
    d6f9:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
    d6fe:	49 85 d0             	test   %rdx,%r8
    d701:	75 79                	jne    d77c <__sprintf_chk@plt+0x8a9c>
    d703:	0f 85 67 02 00 00    	jne    d970 <__sprintf_chk@plt+0x8c90>
    d709:	01 83 f8 0f 84 49    	add    %eax,0x49840ff8(%rbx)
    d70f:	31 d8                	xor    %ebx,%eax
    d711:	00 00                	add    %al,(%rax)
    d713:	8d 42 30             	lea    0x30(%rdx),%eax
    d716:	48 8b 34 24          	mov    (%rsp),%rsi
    d71a:	4c 8d 86 86 02 00 00 	lea    0x286(%rsi),%r8
    d721:	48 21 d3             	and    %rdx,%rbx
    d724:	02 00                	add    (%rax),%al
    d726:	00 89 e8 49 29 e8    	add    %cl,-0x17d6b618(%rcx)
    d72c:	83 0f 4d             	orl    $0x4d,(%rdi)
    d72f:	01 e8                	add    %ebp,%eax
    d731:	f8                   	clc    
    d732:	ff c5                	inc    %ebp
    d734:	04 0f                	add    $0xf,%al
    d736:	85 6e 01             	test   %ebp,0x1(%rsi)
    d739:	00 00                	add    %al,(%rax)
    d73b:	85 c0                	test   %eax,%eax
    d73d:	74 0b                	je     d74a <__sprintf_chk@plt+0x8a6a>
    d73f:	4d 39 ee             	cmp    %r13,%r14
    d742:	17                   	(bad)  
    d743:	41 88 10             	mov    %dl,(%r8)
    d746:	a8 02                	test   $0x2,%al
    d748:	75 15                	jne    d75f <__sprintf_chk@plt+0x8a7f>
    d74a:	31 ff                	xor    %edi,%edi
    d74c:	45 31 c9             	xor    %r9d,%r9d
    d74f:	83 48 48 49          	orl    $0x49,0x48(%rax)
    d753:	ff c4                	inc    %esp
    d755:	85 08                	test   %ecx,(%rax)
    d757:	f7 ff                	idiv   %edi
    d759:	ff                   	(bad)  
    d75a:	e9 31 f7 ff ff       	jmp    ce90 <__sprintf_chk@plt+0x81b0>
    d75f:	41                   	rex.B
    d760:	4d 31 c2             	xor    %r8,%r10
    d763:	07                   	(bad)  
    d764:	fe                   	(bad)  
    d765:	66 41 89 54 00 49    	mov    %dx,0x49(%r8,%rax,1)
    d76b:	c1 e5 13             	shl    $0x13,%ebp
    d76e:	1f                   	(bad)  
    d76f:	00 89 c2 83 e2 01    	add    %cl,0x1e283c2(%rcx)
    d775:	01 fa                	add    %edi,%edx
    d777:	83 49 09 fa          	orl    $0xfffffffa,0x9(%rcx)
    d77b:	8b 85 c0 0f 0f 8f    	mov    -0x70f0f040(%rbp),%eax
    d781:	86 fd                	xchg   %bh,%ch
    d783:	ff                   	(bad)  
    d784:	ff 8b 44 24 08 f6    	decl   -0x9f7dbbc(%rbx)
    d78a:	44 24 49             	rex.R and $0x49,%al
    d78d:	29 d9                	sub    %ebx,%ecx
    d78f:	29 d0                	sub    %edx,%eax
    d791:	30 00                	xor    %al,(%rax)
    d793:	00 00                	add    %al,(%rax)
    d795:	e9 7c ff ff 49       	jmp    4a00d716 <obstack_alloc_failed_handler@@Base+0x49feb676>
    d79a:	ff c1                	inc    %ecx
    d79c:	e9 6b fa ff ff       	jmp    d20c <__sprintf_chk@plt+0x852c>
    d7a1:	49 8b 07             	mov    (%r15),%rax
    d7a4:	49 8d 78 08          	lea    0x8(%r8),%rdi
    d7a8:	4d 89 f9             	mov    %r15,%r9
    d7ab:	48 83 e7 4d          	and    $0x4d,%rdi
    d7af:	89 f7                	mov    %esi,%edi
    d7b1:	00 89 e8 49 8b 54    	add    %cl,0x548b49e8(%rcx)
    d7b7:	07                   	(bad)  
    d7b8:	f8                   	clc    
    d7b9:	49                   	rex.WB
    d7ba:	49 0f af c8          	imul   %r8,%rcx
    d7be:	4c 89 c0             	mov    %r8,%rax
    d7c1:	48                   	rex.W
    d7c2:	4c 01 d2             	add    %r10,%rdx
    d7c5:	48 29 f0             	sub    %rsi,%rax
    d7c8:	ff c7                	inc    %edi
    d7ca:	4c 89 f6             	mov    %r14,%rsi
    d7cd:	f8                   	clc    
    d7ce:	08 0f                	or     %cl,(%rdi)
    d7d0:	82                   	(bad)  
    d7d1:	0f 8f d3 03 00 00    	jg     dbaa <__sprintf_chk@plt+0x8eca>
    d7d7:	00 00                	add    %al,(%rax)
    d7d9:	00 c2                	add    %al,%dl
    d7db:	31 c0                	xor    %eax,%eax
    d7dd:	89 c2                	mov    %eax,%edx
    d7df:	83 48 31 db          	orl    $0xffffffdb,0x31(%rax)
    d7e3:	4c 89 d9             	mov    %r11,%rcx
    d7e6:	48 89 34 17          	mov    %rsi,(%rdi,%rdx,1)
    d7ea:	48                   	rex.W
    d7eb:	48 c1 ef 10          	shr    $0x10,%rdi
    d7ef:	00 00                	add    %al,(%rax)
    d7f1:	ff                   	(bad)  
    d7f2:	ff                   	(bad)  
    d7f3:	ff 49 8d             	decl   -0x73(%rcx)
    d7f6:	4a 01 49 0f          	rex.WX add %rcx,0xf(%rcx)
    d7fa:	8c 80 fc ff ff 00    	mov    %es,0xfffffc(%rax)
    d800:	0f 8f d4 03 00 00    	jg     dbda <__sprintf_chk@plt+0x8efa>
    d806:	ff                   	(bad)  
    d807:	ff                   	(bad)  
    d808:	ff 48 89             	decl   -0x77(%rax)
    d80b:	e8 41 c6 40 49       	call   49419e51 <obstack_alloc_failed_handler@@Base+0x493f7db1>
    d810:	09 48 c1             	or     %ecx,-0x3f(%rax)
    d813:	eb 0f                	jmp    d824 <__sprintf_chk@plt+0x8b44>
    d815:	8c fb                	mov    %?,%ebx
    d817:	fe                   	(bad)  
    d818:	ff                   	(bad)  
    d819:	ff 4d 01             	decl   0x1(%rbp)
    d81c:	db 32                	(bad)  (%rdx)
    d81e:	83 e5 04             	and    $0x4,%ebp
    d821:	0f 85 9c 00 00 00    	jne    d8c3 <__sprintf_chk@plt+0x8be3>
    d827:	85 c0                	test   %eax,%eax
    d829:	0f 84 49 39 c6 ff    	je     ffffffffffc71178 <obstack_alloc_failed_handler@@Base+0xffffffffffc4f0d8>
    d82f:	41 0f b6 17          	movzbl (%r15),%edx
    d833:	41 88 4d 0f          	mov    %cl,0xf(%r13)
    d837:	af                   	scas   %es:(%rdi),%eax
    d838:	dd 84 6b fe 4c 21 f8 	fldl   -0x7deb302(%rbx,%rbp,2)
    d83f:	0f b7 4c 31 e7       	movzwl -0x19(%rcx,%rsi,1),%ecx
    d844:	66 41 89 54 00 fe    	mov    %dx,-0x2(%r8,%rax,1)
    d84a:	e9 5a fe ff ff       	jmp    d6a9 <__sprintf_chk@plt+0x89c9>
    d84f:	90                   	nop
    d850:	49 8b 07             	mov    (%r15),%rax
    d853:	49 ff c7             	inc    %r15
    d856:	08 4c 89 0f          	or     %cl,0xf(%rcx,%rcx,4)
    d85a:	8c 40 ff             	mov    %es,-0x1(%rax)
    d85d:	ff                   	(bad)  
    d85e:	ff 89 00 0f 84 13    	decl   0x13840f00(%rcx)
    d864:	02 00                	add    (%rax),%al
    d866:	00 f8                	add    %bh,%al
    d868:	49                   	rex.WB
    d869:	49 c1 e9 0f          	shr    $0xf,%r9
    d86d:	4c 89 c0             	mov    %r8,%rax
    d870:	48 29 48 f7          	sub    %rcx,-0x9(%rax)
    d874:	48 85 d2             	test   %rdx,%rdx
    d877:	e8 83 48 c1 e3       	call   ffffffffe3c220ff <obstack_alloc_failed_handler@@Base+0xffffffffe3c0005f>
    d87c:	35 08 0f 49 0f       	xor    $0xf490f08,%eax
    d881:	af                   	scas   %es:(%rdi),%eax
    d882:	f9                   	stc    
    d883:	48 85 fe             	test   %rdi,%rsi
    d886:	f8                   	clc    
    d887:	31 d2                	xor    %edx,%edx
    d889:	89 d7                	mov    %edx,%edi
    d88b:	83 c2 08             	add    $0x8,%edx
    d88e:	4c 85 f9             	test   %r15,%rcx
    d891:	3e 4c 89 0c 39       	ds mov %r9,(%rcx,%rdi,1)
    d896:	39 c2                	cmp    %eax,%edx
    d898:	72 ef                	jb     d889 <__sprintf_chk@plt+0x8ba9>
    d89a:	e9 0a fe ff ff       	jmp    d6a9 <__sprintf_chk@plt+0x89c9>
    d89f:	4c 29 d8             	sub    %r11,%rax
    d8a2:	24 08                	and    $0x8,%al
    d8a4:	e9 a1 fe ff ff       	jmp    d74a <__sprintf_chk@plt+0x8a6a>
    d8a9:	41 8b 17             	mov    (%r15),%edx
    d8ac:	41 89 10             	mov    %edx,(%r8)
    d8af:	4d 89 f4             	mov    %r14,%r12
    d8b2:	07                   	(bad)  
    d8b3:	fc                   	cld    
    d8b4:	0f 8c 42 fd ff ff    	jl     d5fc <__sprintf_chk@plt+0x891c>
    d8ba:	8c fe                	mov    %?,%esi
    d8bc:	ff                   	(bad)  
    d8bd:	ff                   	(bad)  
    d8be:	e8 cd 6f 49 c1       	call   ffffffffc14a4890 <obstack_alloc_failed_handler@@Base+0xffffffffc14827f0>
    d8c3:	e0 1c                	loopne d8e1 <__sprintf_chk@plt+0x8c01>
    d8c5:	48 01 cb             	add    %rcx,%rbx
    d8c8:	10 41 8b             	adc    %al,-0x75(%rcx)
    d8cb:	54                   	push   %rsp
    d8cc:	07                   	(bad)  
    d8cd:	fc                   	cld    
    d8ce:	41 89 54 00 fc       	mov    %edx,-0x4(%r8,%rax,1)
    d8d3:	e9 d1 e9 49 ff       	jmp    ffffffffff4ac2a9 <obstack_alloc_failed_handler@@Base+0xffffffffff48a209>
    d8d8:	c5 00 54 24 08       	vandps (%rax,%rcx,1),%xmm15,%xmm12
    d8dd:	85 c0                	test   %eax,%eax
    d8df:	0f 85 4d fb ff ff    	jne    d432 <__sprintf_chk@plt+0x8752>
    d8e5:	e9 35 f9 ff ff       	jmp    d21f <__sprintf_chk@plt+0x853f>
    d8ea:	83 c0 30             	add    $0x30,%eax
    d8ed:	e9 24 fe ff ff       	jmp    d716 <__sprintf_chk@plt+0x8a36>
    d8f2:	66 0f 84 08 ff       	je     d7ff <__sprintf_chk@plt+0x8b1f>
    d8f7:	ff                   	(bad)  
    d8f8:	ff 00                	incl   (%rax)
    d8fa:	00 00                	add    %al,(%rax)
    d8fc:	4d 0f af f1          	imul   %r9,%r14
    d900:	41 54                	push   %r12
    d902:	55                   	push   %rbp
    d903:	48 89 fd             	mov    %rdi,%rbp
    d906:	53                   	push   %rbx
    d907:	48 81 ec a0 02 00 00 	sub    $0x2a0,%rsp
    d90e:	44 0f b6 25 fa 49 01 	movzbl 0x149fa(%rip),%r12d        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
    d915:	00 
    d916:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d91d:	00 00 
    d91f:	48 89 84 24 98 02 00 	mov    %rax,0x298(%rsp)
    d926:	00 
    d927:	31 c0                	xor    %eax,%eax
    d929:	80 3d e1 49 01 00 00 	cmpb   $0x0,0x149e1(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
    d930:	0f 84 aa 00 00 00    	je     d9e0 <__sprintf_chk@plt+0x8d00>
    d936:	83 3d cf 49 01 0f 8c 	cmpl   $0xffffff8c,0xf0149cf(%rip)        # f02230c <obstack_alloc_failed_handler@@Base+0xf00026c>
    d93d:	a0 02 00 00 00 00 48 	movabs 0x1d63480000000002,%al
    d944:	63 1d 
    d946:	49 ff c1             	inc    %r9
    d949:	00 48 83             	add    %cl,-0x7d(%rax)
    d94c:	c3                   	ret    
    d94d:	01 45 4c             	add    %eax,0x4c(%rbp)
    d950:	89 eb                	mov    %ebp,%ebx
    d952:	84 48 c1             	test   %cl,-0x3f(%rax)
    d955:	e1 26                	loope  d97d <__sprintf_chk@plt+0x8c9d>
    d957:	48 63 05 46 49 01 00 	movslq 0x14946(%rip),%rax        # 222a4 <obstack_alloc_failed_handler@@Base+0x204>
    d95e:	49 ff c4             	inc    %r12
    d961:	01 48 01             	add    %ecx,0x1(%rax)
    d964:	c3                   	ret    
    d965:	80 3d 94 49 01 00 00 	cmpb   $0x0,0x14994(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    d96c:	0f 85 ce 00 00 00    	jne    da40 <__sprintf_chk@plt+0x8d60>
    d972:	8b 95 c4 00 00 00    	mov    0xc4(%rbp),%edx
    d978:	48 8b 35 41 4c 01 00 	mov    0x14c41(%rip),%rsi        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
    d97f:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    d983:	e8 f8 db ff ff       	call   b580 <__sprintf_chk@plt+0x68a0>
    d988:	4c 8d 04 03          	lea    (%rbx,%rax,1),%r8
    d98c:	8b 05 72 49 01 00    	mov    0x14972(%rip),%eax        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
    d992:	85 c0                	test   %eax,%eax
    d994:	74 1b                	je     d9b1 <__sprintf_chk@plt+0x8cd1>
    d996:	49 0f af c8          	imul   %r8,%rcx
    d99a:	01 d9                	add    %ebx,%ecx
    d99c:	8b 75 30             	mov    0x30(%rbp),%esi
    d99f:	0f b6 bd b8 0f 84 7e 	movzbl 0x7e840fb8(%rbp),%edi
    d9a6:	fc                   	cld    
    d9a7:	ff                   	(bad)  
    d9a8:	ff                   	(bad)  
    d9a9:	ff                   	(bad)  
    d9aa:	ff                   	(bad)  
    d9ab:	3c 01                	cmp    $0x1,%al
    d9ad:	49 83 d8 ff          	sbb    $0xffffffffffffffff,%r8
    d9b1:	48 8b 84 24 98 02 00 	mov    0x298(%rsp),%rax
    d9b8:	00 
    d9b9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d9c0:	00 00 
    d9c2:	0f 85 2d 01 00 00    	jne    daf5 <__sprintf_chk@plt+0x8e15>
    d9c8:	48 81 c4 a0 02 00 00 	add    $0x2a0,%rsp
    d9cf:	4c 89 c0             	mov    %r8,%rax
    d9d2:	5b                   	pop    %rbx
    d9d3:	5d                   	pop    %rbp
    d9d4:	41 5c                	pop    %r12
    d9d6:	c3                   	ret    
    d9d7:	49 f7 ff             	idiv   %r15
    d9da:	84 00                	test   %al,(%rax)
    d9dc:	00 00                	add    %al,(%rax)
    d9de:	00 00                	add    %al,(%rax)
    d9e0:	31 db                	xor    %ebx,%ebx
    d9e2:	45 84 e4             	test   %r12b,%r12b
    d9e5:	0f 84 7a ff ff ff    	je     d965 <__sprintf_chk@plt+0x8c85>
    d9eb:	83 3d 49 ff c6 00 0f 	cmpl   $0xf,0xc6ff49(%rip)        # c7d93b <obstack_alloc_failed_handler@@Base+0xc5b89b>
    d9f2:	8c 0d 01 00 00 ff    	mov    %cs,-0xffffff(%rip)        # ffffffffff00d9f9 <obstack_alloc_failed_handler@@Base+0xfffffffffefeb959>
    d9f8:	4d 39 0f             	cmp    %r9,(%r15)
    d9fb:	84 b3 01 00 00 48    	test   %dh,0x48000001(%rbx)
    da01:	01 f9                	add    %edi,%ecx
    da03:	00 0f                	add    %cl,(%rdi)
    da05:	84 58 48             	test   %bl,0x48(%rax)
    da08:	f7 fa                	idiv   %edx
    da0a:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    da0e:	4c 8b 05 0f 8c 9c 01 	mov    0x19c8c0f(%rip),%r8        # 19d6624 <obstack_alloc_failed_handler@@Base+0x19b4584>
    da15:	00 00                	add    %al,(%rax)
    da17:	e6 4c                	out    %al,$0x4c
    da19:	21 e7                	and    %esp,%edi
    da1b:	85 e7                	test   %esp,%edi
    da1d:	fe                   	(bad)  
    da1e:	ff                   	(bad)  
    da1f:	ff 48 01             	decl   0x1(%rax)
    da22:	00 e8                	add    %ch,%al
    da24:	f8                   	clc    
    da25:	f2 ff                	repnz (bad) 
    da27:	ff 48 89             	decl   -0x77(%rax)
    da2a:	c7                   	(bad)  
    da2b:	49 c7 c0 a3 fe ff ff 	mov    $0xfffffffffffffea3,%r8
    da32:	c0 49 c1 ea          	rorb   $0xea,-0x3f(%rcx)
    da36:	21 4c 29 e0          	and    %ecx,-0x20(%rcx,%rbp,1)
    da3a:	1f                   	(bad)  
    da3b:	80 00 00             	addb   $0x0,(%rax)
    da3e:	00 00                	add    %al,(%rax)
    da40:	83 3d c5 48 01 00 04 	cmpl   $0x4,0x148c5(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    da47:	0f 84 93 00 00 00    	je     dae0 <__sprintf_chk@plt+0x8e00>
    da4d:	48 63 05 7c 5e 01 00 	movslq 0x15e7c(%rip),%rax        # 238d0 <obstack_alloc_failed_handler@@Base+0x1830>
    da54:	48 83 c0 01          	add    $0x1,%rax
    da58:	48 01 c3             	add    %rax,%rbx
    da5b:	e9 12 ff ff ff       	jmp    d972 <__sprintf_chk@plt+0x8c92>
    da60:	80 48 c1 e6          	orb    $0xe6,-0x3f(%rax)
    da64:	04 f9                	add    $0xf9,%al
    da66:	00 75 e4             	add    %dh,-0x1c(%rbp)
    da69:	e9 04 ff ff ff       	jmp    d972 <__sprintf_chk@plt+0x8c92>
    da6e:	4d 85 e9             	test   %r13,%r9
    da71:	44 24 14             	rex.R and $0x14,%al
    da74:	00 48 8b             	add    %cl,-0x75(%rax)
    da77:	4f 0f 85 66 fd ff ff 	rex.WRXB jne d7e4 <__sprintf_chk@plt+0x8b04>
    da7e:	cc                   	int3   
    da7f:	cc                   	int3   
    da80:	cc                   	int3   
    da81:	cc                   	int3   
    da82:	cc                   	int3   
    da83:	48 8d 7c 0f 85       	lea    -0x7b(%rdi,%rcx,1),%rdi
    da88:	8c 02                	mov    %es,(%rdx)
    da8a:	00 4d 85             	add    %cl,-0x7b(%rbp)
    da8d:	e3 00                	jrcxz  da8f <__sprintf_chk@plt+0x8daf>
    da8f:	00 48 89             	add    %cl,-0x77(%rax)
    da92:	c8 48 83 ef          	enter  $0x8348,$0xef
    da96:	01 0f                	add    %ecx,(%rdi)
    da98:	8f                   	(bad)  
    da99:	34 03                	xor    $0x3,%al
    da9b:	00 00                	add    %al,(%rax)
    da9d:	48 c1 48 85 f3       	rorq   $0xf3,-0x7b(%rax)
    daa2:	8d 34 49             	lea    (%rcx,%rcx,2),%esi
    daa5:	f7 fb                	idiv   %ebx
    daa7:	f6 48 29 f0          	testb  $0xf0,0x29(%rax)
    daab:	83 c0 30             	add    $0x30,%eax
    daae:	88 07                	mov    %al,(%rdi)
    dab0:	48 89 c8             	mov    %rcx,%rax
    dab3:	48 89 d1             	mov    %rdx,%rcx
    dab6:	48 83 f8 09          	cmp    $0x9,%rax
    daba:	77 d4                	ja     da90 <__sprintf_chk@plt+0x8db0>
    dabc:	e8 bf 6d ff ff       	call   4880 <strlen@plt>
    dac1:	48 8d 58 01          	lea    0x1(%rax),%rbx
    dac5:	45 84 e4             	test   %r12b,%r12b
    dac8:	0f 85 2a 48 c7 49    	jne    49c822f8 <obstack_alloc_failed_handler@@Base+0x49c60258>
    dace:	31 c9                	xor    %ecx,%ecx
    dad0:	ff                   	(bad)  
    dad1:	ff 0f                	decl   (%rdi)
    dad3:	4d 01 e7             	add    %r12,%r15
    dad6:	ff                   	(bad)  
    dad7:	ff 09                	decl   (%rcx)
    dad9:	e2 ff                	loop   dada <__sprintf_chk@plt+0x8dfa>
    dadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dae0:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    dae7:	e8 94 6d ff 48       	call   49004880 <obstack_alloc_failed_handler@@Base+0x48fe27e0>
    daec:	21 df                	and    %ebx,%edi
    daee:	75 fc                	jne    daec <__sprintf_chk@plt+0x8e0c>
    daf0:	ff                   	(bad)  
    daf1:	ff                   	(bad)  
    daf2:	ff                   	(bad)  
    daf3:	ff                   	(bad)  
    daf4:	ff                   	(bad)  
    daf5:	e8 96 6d ff ff       	call   4890 <__stack_chk_fail@plt>
    dafa:	66 0f 1f 0f          	nopw   (%rdi)
    dafe:	85 ca                	test   %ecx,%edx
    db00:	03 00                	add    (%rax),%eax
    db02:	00 56 41             	add    %dl,0x41(%rsi)
    db05:	55                   	push   %rbp
    db06:	41 54                	push   %r12
    db08:	55                   	push   %rbp
    db09:	49 c1 e0 4c          	shl    $0x4c,%r8
    db0d:	21 f6                	and    %esi,%esi
    db0f:	83 3d b2 4a 01 4d 31 	cmpl   $0x31,0x4d014ab2(%rip)        # 4d0225c8 <obstack_alloc_failed_handler@@Base+0x4d000528>
    db16:	4c 01 c2             	add    %r8,%rdx
    db19:	49 c1 ed 10          	shr    $0x10,%r13
    db1d:	8c c9                	mov    %cs,%ecx
    db1f:	fd                   	std    
    db20:	ff                   	(bad)  
    db21:	ff 2d 81 44 48 39    	ljmp   *0x39484481(%rip)        # 39491fa8 <obstack_alloc_failed_handler@@Base+0x3946ff08>
    db27:	d7                   	xlat   %ds:(%rbx)
    db28:	89 fe                	mov    %edi,%esi
    db2a:	31 db                	xor    %ebx,%ebx
    db2c:	0f 8f d9 01 00 00    	jg     dd0b <__sprintf_chk@plt+0x902b>
    db32:	e4 49                	in     $0x49,%al
    db34:	c7 c2 63 fe ff ff    	mov    $0xfffffe63,%edx
    db3a:	e5 4d                	in     $0x4d,%eax
    db3c:	89 ff                	mov    %edi,%edi
    db3e:	0f 49 85 d6 00 00 48 	cmovns 0x480000d6(%rbp),%eax
    db45:	89 ee                	mov    %ebp,%esi
    db47:	4c 89 ff             	mov    %r15,%rdi
    db4a:	48 83 c3 01          	add    $0x1,%rbx
    db4e:	e8 4d 93 4d 39       	call   394e6ea0 <obstack_alloc_failed_handler@@Base+0x394c4e00>
    db53:	c8 39 1d 48          	enter  $0x1d39,$0x48
    db57:	ff c0                	inc    %eax
    db59:	00 0f                	add    %cl,(%rdi)
    db5b:	8c f1                	mov    %?,%ecx
    db5d:	fd                   	std    
    db5e:	ff                   	(bad)  
    db5f:	ff 85 6d ff ff ff    	incl   -0x93(%rbp)
    db65:	01 00                	add    %eax,(%rax)
    db67:	48 83 3d 11 49 01 00 	cmpq   $0x0,0x14911(%rip)        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    db6e:	00 
    db6f:	4c 8b 3c d8          	mov    (%rax,%rbx,8),%r15
    db73:	74 c3                	je     db38 <__sprintf_chk@plt+0x8e58>
    db75:	4c 89 ff             	mov    %r15,%rdi
    db78:	e8 48 f7 fb ff       	call   fffffffffffcd2c5 <obstack_alloc_failed_handler@@Base+0xfffffffffffab225>
    db7d:	48 85 db             	test   %rbx,%rbx
    db80:	0f 84 2a 01 00 00    	je     dcb0 <__sprintf_chk@plt+0x8fd0>
    db86:	0f 8f 9f fe ff ff    	jg     da2b <__sprintf_chk@plt+0x8d4b>
    db8c:	ea                   	(bad)  
    db8d:	49                   	rex.WB
    db8e:	49 f7 f9             	idiv   %r9
    db91:	02 48 8d             	add    -0x73(%rax),%cl
    db94:	0c 28                	or     $0x28,%al
    db96:	48                   	rex.W
    db97:	48 01 fe             	add    %rdi,%rsi
    db9a:	14 48                	adc    $0x48,%al
    db9c:	48 01 d2             	add    %rdx,%rdx
    db9f:	70 48                	jo     dbe9 <__sprintf_chk@plt+0x8f09>
    dba1:	c7 c2 49 4c 01 eb    	mov    $0xeb014c49,%edx
    dba7:	f9                   	stc    
    dba8:	29 c2                	sub    %eax,%edx
    dbaa:	4c                   	rex.WR
    dbab:	49 21 c7             	and    %rax,%r15
    dbae:	21 d0                	and    %edx,%eax
    dbb0:	89 48 c7             	mov    %ecx,-0x39(%rax)
    dbb3:	c6                   	(bad)  
    dbb4:	fd                   	std    
    dbb5:	ff                   	(bad)  
    dbb6:	ff                   	(bad)  
    dbb7:	ff 49 8b             	decl   -0x75(%rcx)
    dbba:	7d 00                	jge    dbbc <__sprintf_chk@plt+0x8edc>
    dbbc:	41 b9 20 00 00 00    	mov    $0x20,%r9d
    dbc2:	ba 20 00 00 00       	mov    $0x20,%edx
    dbc7:	48 8b 47 28          	mov    0x28(%rdi),%rax
    dbcb:	48 3b 47 48          	cmp    0x48(%rdi),%rax
    dbcf:	09 fb                	or     %edi,%ebx
    dbd1:	48 8d 48 01          	lea    0x1(%rax),%rcx
    dbd5:	48 89 4d 89          	mov    %rcx,-0x77(%rbp)
    dbd9:	f2 88 30             	repnz mov %dh,(%rax)
    dbdc:	49 8b 4c 09 fe       	mov    -0x2(%r9,%rcx,1),%rcx
    dbe1:	8b 47 49             	mov    0x49(%rdi),%eax
    dbe4:	f7 ff                	idiv   %edi
    dbe6:	47 30 73 76          	rex.RXB xor %r14b,0x76(%r11)
    dbea:	48 8d 48 01          	lea    0x1(%rax),%rcx
    dbee:	48                   	rex.W
    dbef:	4d 31 df             	xor    %r11,%r15
    dbf2:	d2 02                	rolb   %cl,(%rdx)
    dbf4:	00 00                	add    %al,(%rax)
    dbf6:	ff 49 c7             	decl   -0x39(%rcx)
    dbf9:	c4                   	(bad)  
    dbfa:	b9 fc ff ff 00       	mov    $0xfffffc,%ecx
    dbff:	00 49 8d             	add    %cl,-0x73(%rcx)
    dc02:	4c 01 e2             	add    %r12,%rdx
    dc05:	49 89 0f             	mov    %rcx,(%r15)
    dc08:	8c 90 00 00 00 44    	mov    %ss,0x44000000(%rax)
    dc0e:	00 00                	add    %al,(%rax)
    dc10:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    dc14:	49 89 c4             	mov    %rax,%r12
    dc17:	41 b9 49 c7 c3 62    	mov    $0x62c3c749,%r9d
    dc1d:	fd                   	std    
    dc1e:	4c 39 f8             	cmp    %r15,%rax
    dc21:	00 00                	add    %al,(%rax)
    dc23:	00 48 8b             	add    %cl,-0x75(%rax)
    dc26:	47 28 4d 31          	rex.RXB sub %r9b,0x31(%r13)
    dc2a:	f7 30                	divl   (%rax)
    dc2c:	72 a3                	jb     dbd1 <__sprintf_chk@plt+0x8ef1>
    dc2e:	8b 74 24 04          	mov    0x4(%rsp),%esi
    dc32:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
    dc37:	88 54 24 0b          	mov    %dl,0xb(%rsp)
    dc3b:	e8 c0 6c 49 c1       	call   ffffffffc14a4900 <obstack_alloc_failed_handler@@Base+0xffffffffc1482860>
    dc40:	eb 2b                	jmp    dc6d <__sprintf_chk@plt+0x8f8d>
    dc42:	7d 00                	jge    dc44 <__sprintf_chk@plt+0x8f64>
    dc44:	0f b6 0f             	movzbl (%rdi),%ecx
    dc47:	8f 83 fe ff ff 24    	pop    0x24fffffe(%rbx)
    dc4d:	0c 48                	or     $0x48,%al
    dc4f:	8b 48 f7             	mov    -0x9(%rax),%ecx
    dc52:	fe                   	(bad)  
    dc53:	3b 47 30             	cmp    0x30(%rdi),%eax
    dc56:	72 92                	jb     dbea <__sprintf_chk@plt+0x8f0a>
    dc58:	0f 1f 84 00 00 0f 85 	nopl   -0x77af100(%rax,%rax,1)
    dc5f:	f8 
    dc60:	00 e9                	add    %ch,%cl
    dc62:	e1 03                	loope  dc67 <__sprintf_chk@plt+0x8f87>
    dc64:	00 00                	add    %al,(%rax)
    dc66:	ff                   	(bad)  
    dc67:	ff                   	(bad)  
    dc68:	e9 d7 0f 84 e8       	jmp    ffffffffe884ec44 <obstack_alloc_failed_handler@@Base+0xffffffffe882cba4>
    dc6d:	fd                   	std    
    dc6e:	ff                   	(bad)  
    dc6f:	ff 4c 8b 2d          	decl   0x2d(%rbx,%rcx,4)
    dc73:	31 49 48             	xor    %ecx,0x48(%rcx)
    dc76:	f7 fe                	idiv   %esi
    dc78:	49 21 fe             	and    %rdi,%r14
    dc7b:	00 00                	add    %al,(%rax)
    dc7d:	00 4d 01             	add    %cl,0x1(%rbp)
    dc80:	e2 8b                	loop   dc0d <__sprintf_chk@plt+0x8f2d>
    dc82:	7d 0f                	jge    dc93 <__sprintf_chk@plt+0x8fb3>
    dc84:	8c bc 48 ff 49 f7 fd 	mov    %?,-0x208b601(%rax,%rcx,2)
    dc8b:	30 73 32             	xor    %dh,0x32(%rbx)
    dc8e:	48 8d 50 01          	lea    0x1(%rax),%rdx
    dc92:	49 f7 fc             	idiv   %r12
    dc95:	28 c6                	sub    %al,%dh
    dc97:	00 0a                	add    %cl,(%rdx)
    dc99:	48 83 c4 18          	add    $0x18,%rsp
    dc9d:	4d 31 c9             	xor    %r9,%r9
    dca0:	e9 1c 03 00 00       	jmp    dfc1 <__sprintf_chk@plt+0x92e1>
    dca5:	4d 01 c0             	add    %r8,%r8
    dca8:	0f 1f 84 00 00 49 0f 	nopl   -0x50f0b700(%rax,%rax,1)
    dcaf:	af 
    dcb0:	d5                   	(bad)  
    dcb1:	89 e5                	mov    %esp,%ebp
    dcb3:	49 01 4d 21          	add    %rcx,0x21(%r13)
    dcb7:	d7                   	xlat   %ds:(%rbx)
    dcb8:	fe                   	(bad)  
    dcb9:	ff                   	(bad)  
    dcba:	ff 0f                	decl   (%rdi)
    dcbc:	49 0f af f5          	imul   %r13,%rsi
    dcc0:	c6                   	(bad)  
    dcc1:	2e fe                	cs (bad) 
    dcc3:	ff                   	(bad)  
    dcc4:	ff 29                	ljmp   *(%rcx)
    dcc6:	f2 00 00             	repnz add %al,(%rax)
    dcc9:	5b                   	pop    %rbx
    dcca:	5d                   	pop    %rbp
    dccb:	41 5c                	pop    %r12
    dccd:	41 5d                	pop    %r13
    dccf:	41 5e                	pop    %r14
    dcd1:	41 5f                	pop    %r15
    dcd3:	49                   	rex.WB
    dcd4:	4c 39 fe             	cmp    %r15,%rsi
    dcd7:	ff 0f                	decl   (%rdi)
    dcd9:	4c 21 e2             	and    %r12,%rdx
    dcdc:	00 00                	add    %al,(%rax)
    dcde:	00 00                	add    %al,(%rax)
    dce0:	f3 0f 49 c7          	repz cmovns %edi,%eax
    dce4:	c1 4d 09 de          	rorl   $0xde,0x9(%rbp)
    dce8:	ff                   	(bad)  
    dce9:	ff                   	(bad)  
    dcea:	ff                   	(bad)  
    dceb:	bf 0e 00 00 00       	mov    $0xe,%edi
    dcf0:	48 83 ec 08          	sub    $0x8,%rsp
    dcf4:	e8 c7 6d ff ff       	call   4ac0 <nl_langinfo@plt>
    dcf9:	48 85 c0             	test   %rax,%rax
    dcfc:	74 64                	je     dd62 <__sprintf_chk@plt+0x9082>
    dcfe:	48 89 c7             	mov    %rax,%rdi
    dd01:	e9 4d 02 00 00       	jmp    df53 <__sprintf_chk@plt+0x9273>
    dd06:	e4 5a                	in     $0x5a,%al
    dd08:	83 e0 df             	and    $0xffffffdf,%eax
    dd0b:	3c 55                	cmp    $0x55,%al
    dd0d:	75 44                	jne    dd53 <__sprintf_chk@plt+0x9073>
    dd0f:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
    dd13:	83 e0 df             	and    $0xffffffdf,%eax
    dd16:	3c 54                	cmp    $0x54,%al
    dd18:	75 48                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd1a:	0f b6 7f 75          	movzbl 0x75(%rdi),%edi
    dd1e:	0f 48 01             	cmovs  (%rcx),%eax
    dd21:	f2 0f 84 4d 89 fb 00 	bnd je fc6675 <obstack_alloc_failed_handler@@Base+0xfa45d5>
    dd28:	4c 29 c1             	sub    %r8,%rcx
    dd2b:	80 7f 04 38          	cmpb   $0x38,0x4(%rdi)
    dd2f:	75 31                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd31:	80 7f 05 00          	cmpb   $0x0,0x5(%rdi)
    dd35:	75 48                	jne    dd7f <__sprintf_chk@plt+0x909f>
    dd37:	c1 e3 40             	shl    $0x40,%ebx
    dd3a:	48 8d 05 b5 bd 00 00 	lea    0xbdb5(%rip),%rax        # 19af6 <_obstack_memory_used@@Base+0x9346>
    dd41:	48 8d 15 a1 0f 8f 3b 	lea    0x3b8f0fa1(%rip),%rdx        # 3b8fece9 <obstack_alloc_failed_handler@@Base+0x3b8dcc49>
    dd48:	03 00                	add    (%rax),%eax
    dd4a:	00 49 4d             	add    %cl,0x4d(%rcx)
    dd4d:	89 df                	mov    %ebx,%edi
    dd4f:	08 5b 5d             	or     %bl,0x5d(%rbx)
    dd52:	c3                   	ret    
    dd53:	3c 47                	cmp    $0x47,%al
    dd55:	75 0b                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd57:	4d 39 c0             	cmp    %r8,%r8
    dd5a:	e9 05 fd ff ff       	jmp    da64 <__sprintf_chk@plt+0x8d84>
    dd5f:	01 00                	add    %eax,(%rax)
    dd61:	00 83 fd 4d 85 cc    	add    %al,-0x337ab203(%rbx)
    dd67:	05 84 bd 00 49       	add    $0x4900bd84,%eax
    dd6c:	29 cc                	sub    %ecx,%esp
    dd6e:	15 cc be 00 00       	adc    $0xbecc,%eax
    dd73:	48 0f 45 c2          	cmovne %rdx,%rax
    dd77:	48 83 c4 e9          	add    $0xffffffffffffffe9,%rsp
    dd7b:	48 c1 ea 27          	shr    $0x27,%rdx
    dd7f:	d4                   	(bad)  
    dd80:	80 7f 02 31          	cmpb   $0x31,0x2(%rdi)
    dd84:	75 dc                	jne    dd62 <__sprintf_chk@plt+0x9082>
    dd86:	80 7f 03 38          	cmpb   $0x38,0x3(%rdi)
    dd8a:	75 49                	jne    ddd5 <__sprintf_chk@plt+0x90f5>
    dd8c:	0f af dc             	imul   %esp,%ebx
    dd8f:	eb 49                	jmp    ddda <__sprintf_chk@plt+0x90fa>
    dd91:	c1 e2 3e             	shl    $0x3e,%edx
    dd94:	05 0f 85 db fc       	add    $0xfcdb850f,%eax
    dd99:	74 36                	je     ddd1 <__sprintf_chk@plt+0x90f1>
    dd9b:	30 75 4d             	xor    %dh,0x4d(%rbp)
    dd9e:	21 0f                	and    %ecx,(%rdi)
    dda0:	84 ea                	test   %ch,%dl
    dda2:	fe                   	(bad)  
    dda3:	ff                   	(bad)  
    dda4:	ff 51 bd             	call   *-0x43(%rcx)
    dda7:	00 00                	add    %al,(%rax)
    dda9:	e8 92 92 ff ff       	call   7040 <__sprintf_chk@plt+0x2360>
    ddae:	85 c0                	test   %eax,%eax
    ddb0:	74 b0                	je     dd62 <__sprintf_chk@plt+0x9082>
    ddb2:	80 3b 0f             	cmpb   $0xf,(%rbx)
    ddb5:	85 1e                	test   %ebx,(%rsi)
    ddb7:	fe                   	(bad)  
    ddb8:	ff                   	(bad)  
    ddb9:	ff 00                	incl   (%rax)
    ddbb:	00 48 8d             	add    %cl,-0x73(%rax)
    ddbe:	15 2a bd 00 00       	adc    $0xbd2a,%eax
    ddc3:	48 0f 45 c2          	cmovne %rdx,%rax
    ddc7:	48 83 c4 08          	add    $0x8,%rsp
    ddcb:	5b                   	pop    %rbx
    ddcc:	5d                   	pop    %rbp
    ddcd:	c3                   	ret    
    ddce:	66 48 f7 fb          	data16 idiv %rbx
    ddd2:	0f 85 35 03 00 00    	jne    e10d <__sprintf_chk@plt+0x942d>
    ddd8:	00 49 c1             	add    %cl,-0x3f(%rcx)
    dddb:	ed                   	in     (%dx),%eax
    dddc:	0b 35 0f 84 e9 00    	or     0xe9840f(%rip),%esi        # ea61f1 <obstack_alloc_failed_handler@@Base+0xe84151>
    dde2:	00 00                	add    %al,(%rax)
    dde4:	48 83 ec 08          	sub    $0x8,%rsp
    dde8:	e8 73 6a ff ff       	call   4860 <dcgettext@plt>
    dded:	8b 3d 8d 42 0f 8f    	mov    -0x70f0bd73(%rip),%edi        # ffffffff8f102080 <obstack_alloc_failed_handler@@Base+0xffffffff8f0dffe0>
    ddf3:	da fe                	(bad)  
    ddf5:	ff                   	(bad)  
    ddf6:	ff                   	(bad)  
    ddf7:	bc 48 c7 c0 f5       	mov    $0xf5c0c748,%esp
    ddfc:	00 00                	add    %al,(%rax)
    ddfe:	00 31                	add    %dh,(%rcx)
    de00:	c0 48 39 c3          	rorb   $0xc3,0x39(%rax)
    de04:	ff                   	(bad)  
    de05:	ff                   	(bad)  
    de06:	e8 f5 68 ff ff       	call   4700 <abort@plt>
    de0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    de10:	53                   	push   %rbx
    de11:	48 89 fb             	mov    %rdi,%rbx
    de14:	e8 77 68 ff ff       	call   4690 <malloc@plt>
    de19:	48 85 c0             	test   %rax,%rax
    de1c:	75 05                	jne    de23 <__sprintf_chk@plt+0x9143>
    de1e:	48 85 db             	test   %rbx,%rbx
    de21:	75 02                	jne    de25 <__sprintf_chk@plt+0x9145>
    de23:	5b                   	pop    %rbx
    de24:	c3                   	ret    
    de25:	e8 a6 4c 09 fb       	call   fffffffffb0a2ad0 <obstack_alloc_failed_handler@@Base+0xfffffffffb080a30>
    de2a:	66 0f 4c 01          	cmovl  (%rcx),%ax
    de2e:	ff 00                	incl   (%rax)
    de30:	55                   	push   %rbp
    de31:	53                   	push   %rbx
    de32:	48 83 ec 08          	sub    $0x8,%rsp
    de36:	e8 d5 68 ff ff       	call   4710 <__errno_location@plt>
    de3b:	bf 38 00 00 00       	mov    $0x38,%edi
    de40:	8b 28                	mov    (%rax),%ebp
    de42:	48 89 c3             	mov    %rax,%rbx
    de45:	e8 c6 ff ff ff       	call   de10 <__sprintf_chk@plt+0x9130>
    de4a:	66 0f 6f 05 6e 44 01 	movdqa 0x1446e(%rip),%xmm0        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
    de51:	00 
    de52:	66 0f 6f 0d 76 44 01 	movdqa 0x14476(%rip),%xmm1        # 222d0 <obstack_alloc_failed_handler@@Base+0x230>
    de59:	00 
    de5a:	66 0f 6f 15 7e 44 01 	movdqa 0x1447e(%rip),%xmm2        # 222e0 <obstack_alloc_failed_handler@@Base+0x240>
    de61:	00 
    de62:	48 8b 15 87 44 01 00 	mov    0x14487(%rip),%rdx        # 222f0 <obstack_alloc_failed_handler@@Base+0x250>
    de69:	89 2b                	mov    %ebp,(%rbx)
    de6b:	0f 11 00             	movups %xmm0,(%rax)
    de6e:	4d 0f af ed          	imul   %r13,%r13
    de72:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    de76:	0f 11 50 20          	movups %xmm2,0x20(%rax)
    de7a:	48 83 c4 08          	add    $0x8,%rsp
    de7e:	5b                   	pop    %rbx
    de7f:	5d                   	pop    %rbp
    de80:	c3                   	ret    
    de81:	66 4c 85 fb          	data16 test %r15,%rbx
    de85:	31 48 31             	xor    %ecx,0x31(%rax)
    de88:	d6                   	(bad)  
    de89:	f7 fa                	idiv   %edx
    de8b:	00 0f                	add    %cl,(%rdi)
    de8d:	e9 b4 fd ff 4c       	jmp    4d00dc46 <obstack_alloc_failed_handler@@Base+0x4cfebba6>
    de92:	89 cf                	mov    %ecx,%edi
    de94:	bf 10 00 00 00       	mov    $0x10,%edi
    de99:	e8 49 31 c5 ff       	call   ffffffffffc60fe7 <obstack_alloc_failed_handler@@Base+0xffffffffffc3ef47>
    de9e:	48 85 c0             	test   %rax,%rax
    dea1:	74 17                	je     deba <__sprintf_chk@plt+0x91da>
    dea3:	49 ff c5             	inc    %r13
    dea6:	e6 45                	out    %al,$0x45
    dea8:	01 4d 21             	add    %ecx,0x21(%rbp)
    deab:	f5                   	cmc    
    deac:	49 c1 ef 2f          	shr    $0x2f,%r15
    deb0:	dc 45 48             	faddl  0x48(%rbp)
    deb3:	39 cf                	cmp    %ecx,%edi
    deb5:	89 50 08             	mov    %edx,0x8(%rax)
    deb8:	5b                   	pop    %rbx
    deb9:	c3                   	ret    
    deba:	e8 11 ff ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    debf:	90                   	nop
    dec0:	41 54                	push   %r12
    dec2:	55                   	push   %rbp
    dec3:	53                   	push   %rbx
    dec4:	48 8b 1d fd 46 01 00 	mov    0x146fd(%rip),%rbx        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    decb:	48 89 d8             	mov    %rbx,%rax
    dece:	48 d1 e8             	shr    %rax
    ded1:	48 01 d8             	add    %rbx,%rax
    ded4:	48 3b 05 4d 45 01 00 	cmp    0x1454d(%rip),%rax        # 22428 <obstack_alloc_failed_handler@@Base+0x388>
    dedb:	76 5f                	jbe    df3c <__sprintf_chk@plt+0x925c>
    dedd:	48 8b 3d 6c 45 01 00 	mov    0x1456c(%rip),%rdi        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    dee4:	e8 97 67 ff ff       	call   4680 <free@plt>
    dee9:	b8 18 00 00 00       	mov    $0x18,%eax
    deee:	48 f7 e3             	mul    %rbx
    def1:	0f 90 c2             	seto   %dl
    def4:	4d 09 fa             	or     %r15,%r10
    def7:	b8 01 00 00 00       	mov    $0x1,%eax
    defc:	0f b6 d2             	movzbl %dl,%edx
    deff:	48 0f 48 d0          	cmovs  %rax,%rdx
    df03:	48 85 d2             	test   %rdx,%rdx
    df06:	0f 85 81 01 00 00    	jne    e08d <__sprintf_chk@plt+0x93ad>
    df0c:	48 8d 2c 5b          	lea    (%rbx,%rbx,2),%rbp
    df10:	48 c1 e5 03          	shl    $0x3,%rbp
    df14:	48 89 ef             	mov    %rbp,%rdi
    df17:	e8 74 67 ff ff       	call   4690 <malloc@plt>
    df1c:	48 85 c0             	test   %rax,%rax
    df1f:	75 09                	jne    df2a <__sprintf_chk@plt+0x924a>
    df21:	48                   	rex.W
    df22:	4c                   	rex.WR
    df23:	49 c1 ed 20          	shr    $0x20,%r13
    df27:	01 00                	add    %eax,(%rax)
    df29:	00 48 89             	add    %cl,-0x77(%rax)
    df2c:	05 1f 45 01 00       	add    $0x1451f,%eax
    df31:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
    df35:	48 89 05 ec 44 01 00 	mov    %rax,0x144ec(%rip)        # 22428 <obstack_alloc_failed_handler@@Base+0x388>
    df3c:	48 85 db             	test   %rbx,%rbx
    df3f:	74 2a                	je     df6b <__sprintf_chk@plt+0x928b>
    df41:	48 8b 05 08 45 01 00 	mov    0x14508(%rip),%rax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    df48:	48 8b 15 81 46 01 00 	mov    0x14681(%rip),%rdx        # 225d0 <obstack_alloc_failed_handler@@Base+0x530>
    df4f:	48 8d 0c d8          	lea    (%rax,%rbx,8),%rcx
    df53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df58:	48 89 10             	mov    %rdx,(%rax)
    df5b:	48 83 c0 08          	add    $0x8,%rax
    df5f:	48 81 c2 c8 00 00 00 	add    $0xc8,%rdx
    df66:	48 39 c8             	cmp    %rcx,%rax
    df69:	75 ed                	jne    df58 <__sprintf_chk@plt+0x9278>
    df6b:	83 3d b2 54 01 00 ff 	cmpl   $0xffffffff,0x154b2(%rip)        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    df72:	74 66                	je     dfda <__sprintf_chk@plt+0x92fa>
    df74:	48 8d 3d e5 43 01 00 	lea    0x143e5(%rip),%rdi        # 22360 <obstack_alloc_failed_handler@@Base+0x2c0>
    df7b:	e8 40 6a ff ff       	call   49c0 <_setjmp@plt>
    df80:	f3 0f 1e fa          	endbr64 
    df84:	8b 3d 9a 54 01 00    	mov    0x1549a(%rip),%edi        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
    df8a:	85 c0                	test   %eax,%eax
    df8c:	75 52                	jne    dfe0 <__sprintf_chk@plt+0x9300>
    df8e:	48 8b 2d bb 44 01 00 	mov    0x144bb(%rip),%rbp        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    df95:	48 8b 35 2c 46 01 00 	mov    0x1462c(%rip),%rsi        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    df9c:	31 d2                	xor    %edx,%edx
    df9e:	83 ff 04             	cmp    $0x4,%edi
    dfa1:	0f 84 48 f7 fa 00    	je     fbd6ef <obstack_alloc_failed_handler@@Base+0xf9b64f>
    dfa7:	01 fa                	add    %edi,%edx
    dfa9:	48 98                	cltq   
    dfab:	0f b6 0d 98 47 01 00 	movzbl 0x14798(%rip),%ecx        # 2274a <obstack_alloc_failed_handler@@Base+0x6aa>
    dfb2:	49 f7 fa             	idiv   %r10
    dfb5:	8d 14 50             	lea    (%rax,%rdx,2),%edx
    dfb8:	0f b6 05 de 44 01 00 	movzbl 0x144de(%rip),%eax        # 2249d <obstack_alloc_failed_handler@@Base+0x3fd>
    dfbf:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    dfc3:	48 8d 14 41          	lea    (%rcx,%rax,2),%rdx
    dfc7:	48 8d 05 72 30 01 00 	lea    0x13072(%rip),%rax        # 21040 <_obstack_memory_used@@Base+0x10890>
    dfce:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
    dfd2:	48 83 fe 02          	cmp    $0x2,%rsi
    dfd6:	77 68                	ja     e040 <__sprintf_chk@plt+0x9360>
    dfd8:	4d 31 e2             	xor    %r12,%r10
    dfdb:	5d                   	pop    %rbp
    dfdc:	41 5c                	pop    %r12
    dfde:	c3                   	ret    
    dfdf:	90                   	nop
    dfe0:	4d 89 f8             	mov    %r15,%r8
    dfe3:	0f 84 a9 00 00 00    	je     e092 <__sprintf_chk@plt+0x93b2>
    dfe9:	48 8b 35 d8 4c 29 d6 	mov    -0x29d6b328(%rip),%rsi        # ffffffffd62a2cc8 <obstack_alloc_failed_handler@@Base+0xffffffffd6280c28>
    dff0:	48 8b 74 4c 39       	mov    0x39(%rsp,%rcx,2),%rsi
    dff5:	d1 00                	roll   (%rax)
    dff7:	48 85 f6             	test   %rsi,%rsi
    dffa:	0f 84 7d 48 c7 c0    	je     ffffffffc0c8287d <obstack_alloc_failed_handler@@Base+0xffffffffc0c607dd>
    e000:	03 fd                	add    %ebp,%edi
    e002:	ff                   	(bad)  
    e003:	ff                   	(bad)  
    e004:	f8                   	clc    
    e005:	48 01 fa             	add    %rdi,%rdx
    e008:	89 e8                	mov    %ebp,%eax
    e00a:	49 c1 e7 0d          	shl    $0xd,%r15
    e00e:	00 49 39             	add    %cl,0x39(%rcx)
    e011:	f8                   	clc    
    e012:	29 c3                	sub    %eax,%ebx
    e014:	4d 0f af fc          	imul   %r12,%r15
    e018:	49 c1 e6 38          	shl    $0x38,%r14
    e01c:	e9 30 fd ff ff       	jmp    dd51 <__sprintf_chk@plt+0x9071>
    e021:	75 48                	jne    e06b <__sprintf_chk@plt+0x938b>
    e023:	c7 c7 77 fe ff ff    	mov    $0xfffffe77,%edi
    e029:	c1 e1 35             	shl    $0x35,%ecx
    e02c:	04 0f                	add    $0xf,%al
    e02e:	85 74 ff ff          	test   %esi,-0x1(%rdi,%rdi,8)
    e032:	ff 4c 09 c7          	decl   -0x39(%rcx,%rcx,1)
    e036:	0f 8f 53 fe ff ff    	jg     de8f <__sprintf_chk@plt+0x91af>
    e03c:	ff                   	(bad)  
    e03d:	ff 66 90             	jmp    *-0x70(%rsi)
    e040:	48 8d 54 f5 00       	lea    0x0(%rbp,%rsi,8),%rdx
    e045:	48 89 ef             	mov    %rbp,%rdi
    e048:	e8 d3 d5 ff ff       	call   b620 <__sprintf_chk@plt+0x6940>
    e04d:	5b                   	pop    %rbx
    e04e:	5d                   	pop    %rbp
    e04f:	41 5c                	pop    %r12
    e051:	c3                   	ret    
    e052:	66 0f 1f 44 0f 8f    	nopw   -0x71(%rdi,%rcx,1)
    e058:	13 fd                	adc    %ebp,%edi
    e05a:	ff                   	(bad)  
    e05b:	ff 4c 8b 65          	decl   0x65(%rbx,%rcx,4)
    e05f:	08 48 89             	or     %cl,-0x77(%rax)
    e062:	df 4c 89 e6          	fisttps -0x1a(%rcx,%rcx,4)
    e066:	ff d1                	call   *%rcx
    e068:	85 49 c1             	test   %ecx,-0x3f(%rcx)
    e06b:	e7 09                	out    %eax,$0x9
    e06d:	4c 39 e2             	cmp    %r12,%rdx
    e070:	4c 89 65 00          	mov    %r12,0x0(%rbp)
    e074:	48 89 5d 48          	mov    %rbx,0x48(%rbp)
    e078:	c1 e0 11             	shl    $0x11,%eax
    e07b:	f0 c3                	lock ret 
    e07d:	83 ff 04             	cmp    $0x4,%edi
    e080:	0f 4d 0f             	cmovge (%rdi),%ecx
    e083:	af                   	scas   %es:(%rdi),%eax
    e084:	d3 ff                	sar    %cl,%edi
    e086:	b8 01 00 00 00       	mov    $0x1,%eax
    e08b:	4d 89 c2             	mov    %r8,%r10
    e08e:	3e fd                	ds std 
    e090:	ff                   	(bad)  
    e091:	ff 0f                	decl   (%rdi)
    e093:	8c 35 fe ff 4c 89    	mov    %?,-0x76b30002(%rip)        # ffffffff894de097 <obstack_alloc_failed_handler@@Base+0xffffffff894bbff7>
    e099:	fb                   	sti    
    e09a:	42 fc                	rex.X cld 
    e09c:	ff                   	(bad)  
    e09d:	ff 48 4d             	decl   0x4d(%rax)
    e0a0:	39 c0                	cmp    %eax,%eax
    e0a2:	ba 00 00 48 8d       	mov    $0x8d480000,%edx
    e0a7:	3d 5f ba 48 31       	cmp    $0x3148ba5f,%eax
    e0ac:	da 8f 68 ff ff 66    	fimull 0x66ffff68(%rdi)
    e0b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e0b9:	00 00 00 
    e0bc:	0f 1f 40 00          	nopl   0x0(%rax)
    e0c0:	41 57                	push   %r15
    e0c2:	41 56                	push   %r14
    e0c4:	41 55                	push   %r13
    e0c6:	41 54                	push   %r12
    e0c8:	41 89 f4             	mov    %esi,%r12d
    e0cb:	55                   	push   %rbp
    e0cc:	53                   	push   %rbx
    e0cd:	48 89 fb             	mov    %rdi,%rbx
    e0d0:	48                   	rex.W
    e0d1:	48 ff c0             	inc    %rax
    e0d4:	e8 a7 67 ff ff       	call   4880 <strlen@plt>
    e0d9:	48 83 c0 01          	add    $0x1,%rax
    e0dd:	48 6b f8 03          	imul   $0x3,%rax,%rdi
    e0e1:	0f 48 29             	cmovs  (%rcx),%ebp
    e0e4:	ca 00 00             	lret   $0x0
    e0e7:	e8 a4 65 ff 49       	call   4a004690 <obstack_alloc_failed_handler@@Base+0x49fe25f0>
    e0ec:	f7 fb                	idiv   %ebx
    e0ee:	85 da                	test   %ebx,%edx
    e0f0:	85 c0                	test   %eax,%eax
    e0f2:	0f 84 92 00 4c 29    	je     294ce18a <obstack_alloc_failed_handler@@Base+0x294ac0ea>
    e0f8:	c8 b6 03 4c          	enter  $0x3b6,$0x4c
    e0fc:	89 f5                	mov    %esi,%ebp
    e0fe:	84 49 c1             	test   %cl,-0x3f(%rcx)
    e101:	e9 15 8d 2d 49       	jmp    492e6e1b <obstack_alloc_failed_handler@@Base+0x492c4d7b>
    e106:	c1 ea 37             	shr    $0x37,%edx
    e109:	c7 c0 e8 00 00 00    	mov    $0xe8,%eax
    e10f:	00 eb                	add    %ch,%bl
    e111:	14 66                	adc    $0x66,%al
    e113:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e118:	88 45 00             	mov    %al,0x0(%rbp)
    e11b:	48 83 c5 01          	add    $0x1,%rbp
    e11f:	0f b6 03             	movzbl (%rbx),%eax
    e122:	84 c0                	test   %al,%al
    e124:	74 40                	je     e166 <__sprintf_chk@plt+0x9486>
    e126:	48 83 c3 01          	add    $0x1,%rbx
    e12a:	3c 2f                	cmp    $0x2f,%al
    e12c:	75 05                	jne    e133 <__sprintf_chk@plt+0x9453>
    e12e:	45 84 e4             	test   %r12b,%r12b
    e131:	75 4d                	jne    e180 <__sprintf_chk@plt+0x94a0>
    e133:	0f b6 d0             	movzbl %al,%edx
    e136:	44 0f b6 c0          	movzbl %al,%r8d
    e13a:	41 80 7c 15 49 85    	cmpb   $0x85,0x49(%r13,%rdx,1)
    e140:	ff cc                	dec    %esp
    e142:	00 00                	add    %al,(%rax)
    e144:	00 4c 89 0f          	add    %cl,0xf(%rcx,%rcx,4)
    e148:	8c 1d 01 00 00 ff    	mov    %ds,-0xffffff(%rip)        # ffffffffff00e14f <obstack_alloc_failed_handler@@Base+0xfffffffffefec0af>
    e14e:	ff 31                	push   (%rcx)
    e150:	c0 be 01 4c 89 e2 48 	sarb   $0x48,-0x1d76b3ff(%rsi)
    e157:	83 c5 0f             	add    $0xf,%ebp
    e15a:	85 0f                	test   %ecx,(%rdi)
    e15c:	fe                   	(bad)  
    e15d:	ff                   	(bad)  
    e15e:	ff 49 21             	decl   0x21(%rcx)
    e161:	d1 84 c0 75 c0 0f 8c 	roll   -0x73f03f8b(%rax,%rax,8)
    e168:	64 01 00             	add    %eax,%fs:(%rax)
    e16b:	00 c4                	add    %al,%ah
    e16d:	0f 85 d5 01 00 00    	jne    e348 <__sprintf_chk@plt+0x9668>
    e173:	4c 39 e3             	cmp    %r12,%rbx
    e176:	e9 17 01 00 00       	jmp    e292 <__sprintf_chk@plt+0x95b2>
    e17b:	c3                   	ret    
    e17c:	0f 1f 40 00          	nopl   0x0(%rax)
    e180:	c6 45 48 4c          	movb   $0x4c,0x48(%rbp)
    e184:	31 f8                	xor    %edi,%eax
    e186:	c5 01 eb 4c 89 ce    	vpor   -0x32(%rcx,%rcx,4),%xmm15,%xmm9
    e18c:	fc                   	cld    
    e18d:	ff                   	(bad)  
    e18e:	ff 90 41 57 41 56    	call   *0x56415741(%rax)
    e194:	41 55                	push   %r13
    e196:	41 54                	push   %r12
    e198:	55                   	push   %rbp
    e199:	89 fd                	mov    %edi,%ebp
    e19b:	53                   	push   %rbx
    e19c:	48 83 ec 18          	sub    $0x18,%rsp
    e1a0:	4c 8b 2d 21 44 01 00 	mov    0x14421(%rip),%r13        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    e1a7:	4c 8b 35 ba 42 01 00 	mov    0x142ba(%rip),%r14        # 22468 <obstack_alloc_failed_handler@@Base+0x3c8>
    e1ae:	48 8b 0d 8b 41 01 00 	mov    0x1418b(%rip),%rcx        # 22340 <obstack_alloc_failed_handler@@Base+0x2a0>
    e1b5:	4d 39 f5             	cmp    %r14,%r13
    e1b8:	4d 89 f4             	mov    %r14,%r12
    e1bb:	4d 0f 46 e5          	cmovbe %r13,%r12
    e1bf:	49 39 cc             	cmp    %rcx,%r12
    e1c2:	0f 86 1c 01 00 00    	jbe    e2e4 <__sprintf_chk@plt+0x9604>
    e1c8:	4c 89 f0             	mov    %r14,%rax
    e1cb:	48 8b 3d 76 41 01 00 	mov    0x14176(%rip),%rdi        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e1d2:	48 d1 e8             	shr    %rax
    e1d5:	49 39 c4             	cmp    %rax,%r12
    e1d8:	0f 83 5f 02 00 00    	jae    e43d <__sprintf_chk@plt+0x975d>
    e1de:	b8 30 00 00 00       	mov    $0x30,%eax
    e1e3:	4c 29 ea             	sub    %r13,%rdx
    e1e6:	0f 90 c2             	seto   %dl
    e1e9:	0f b6 d2             	movzbl %dl,%edx
    e1ec:	48 85 c0             	test   %rax,%rax
    e1ef:	0f 88 97 02 00 00    	js     e48c <__sprintf_chk@plt+0x97ac>
    e1f5:	4c 31 c3             	xor    %r8,%rbx
    e1f8:	0f 85 8e 02 00 48    	jne    4800e48c <obstack_alloc_failed_handler@@Base+0x47fec3ec>
    e1fe:	31 f6                	xor    %esi,%esi
    e200:	04 64                	add    $0x64,%al
    e202:	48 89 0c 24          	mov    %rcx,(%rsp)
    e206:	48 c1 e0 04          	shl    $0x4,%rax
    e20a:	48 89 c3             	mov    %rax,%rbx
    e20d:	49 ff c4             	inc    %r12
    e210:	85 ff                	test   %edi,%edi
    e212:	0f 85 91 4d 29 d0    	jne    ffffffffd02a2fa9 <obstack_alloc_failed_handler@@Base+0xffffffffd0280f09>
    e218:	48 89 de             	mov    %rbx,%rsi
    e21b:	e8 f0 68 ff ff       	call   4b10 <realloc@plt>
    e220:	48 8b 0c 24          	mov    (%rsp),%rcx
    e224:	48 85 c0             	test   %rax,%rax
    e227:	49 89 c7             	mov    %rax,%r15
    e22a:	75 09                	jne    e235 <__sprintf_chk@plt+0x9555>
    e22c:	48 85 db             	test   %rbx,%rbx
    e22f:	0f 85 57 02 49 85    	jne    ffffffff8549e48c <obstack_alloc_failed_handler@@Base+0xffffffff8547c3ec>
    e235:	fc                   	cld    
    e236:	8d 34 24             	lea    (%rsp),%esi
    e239:	48 8d 59 01          	lea    0x1(%rcx),%rbx
    e23d:	4c 89 f0             	mov    %r14,%rax
    e240:	31 f6                	xor    %esi,%esi
    e242:	4c 89 3d ff 40 01 00 	mov    %r15,0x140ff(%rip)        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e249:	48 89 da             	mov    %rbx,%rdx
    e24c:	48 29 c8             	sub    %rcx,%rax
    e24f:	48 89 0c 24          	mov    %rcx,(%rsp)
    e253:	4c 01 f2             	add    %r14,%rdx
    e256:	40 0f 92 c6          	setb   %sil
    e25a:	48 f7 e2             	mul    %rdx
    e25d:	0f 90 c2             	seto   %dl
    e260:	0f b6 d2             	movzbl %dl,%edx
    e263:	48 85 f6             	test   %rsi,%rsi
    e266:	0f 85 20 02 00 00    	jne    e48c <__sprintf_chk@plt+0x97ac>
    e26c:	48 85 d2             	test   %rdx,%rdx
    e26f:	0f 85 17 02 00 00    	jne    e48c <__sprintf_chk@plt+0x97ac>
    e275:	48 d1 e8             	shr    %rax
    e278:	48 6b d0 08          	imul   $0x8,%rax,%rdx
    e27c:	0f 80 0a 02 00 00    	jo     e48c <__sprintf_chk@plt+0x97ac>
    e282:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e289:	00 
    e28a:	48 89 d7             	mov    %rdx,%rdi
    e28d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    e292:	e8 f9 63 ff ff       	call   4690 <malloc@plt>
    e297:	48 8b 0c 24          	mov    (%rsp),%rcx
    e29b:	48 85 c0             	test   %rax,%rax
    e29e:	75 0e                	jne    e2ae <__sprintf_chk@plt+0x95ce>
    e2a0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    e2a5:	49 01 d7             	add    %rdx,%r15
    e2a8:	36 85 de             	ss test %ebx,%esi
    e2ab:	01 00                	add    %eax,(%rax)
    e2ad:	00 48 48             	add    %cl,0x48(%rax)
    e2b0:	ff c7                	inc    %edi
    e2b2:	00 00                	add    %al,(%rax)
    e2b4:	00 00                	add    %al,(%rax)
    e2b6:	4a 8d 34 f5 08 00 00 	lea    0x8(,%r14,8),%rsi
    e2bd:	00 
    e2be:	4c 39 f1             	cmp    %r14,%rcx
    e2c1:	73 1a                	jae    e2dd <__sprintf_chk@plt+0x95fd>
    e2c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e2c8:	48 8d 0c 52          	lea    (%rdx,%rdx,2),%rcx
    e2cc:	49 89 44 0f f8       	mov    %rax,-0x8(%r15,%rcx,1)
    e2d1:	48 01 d0             	add    %rdx,%rax
    e2d4:	48 83 c2 08          	add    $0x8,%rdx
    e2d8:	48 39 f2             	cmp    %rsi,%rdx
    e2db:	75 eb                	jne    e2c8 <__sprintf_chk@plt+0x95e8>
    e2dd:	7f da                	jg     e2b9 <__sprintf_chk@plt+0x95d9>
    e2df:	35 5c 40 01 00       	xor    $0x1405c,%eax
    e2e4:	4d 85 e4             	test   %r12,%r12
    e2e7:	74 50                	je     e339 <__sprintf_chk@plt+0x9659>
    e2e9:	48 8b 3d 58 40 01 00 	mov    0x14058(%rip),%rdi        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e2f0:	4f 8d 44 64 03       	lea    0x3(%r12,%r12,2),%r8
    e2f5:	31 f6                	xor    %esi,%esi
    e2f7:	b9 03 00 00 00       	mov    $0x3,%ecx
    e2fc:	0f 1f 40 00          	nopl   0x0(%rax)
    e300:	48 8b 44 cf f8       	mov    -0x8(%rdi,%rcx,8),%rax
    e305:	c6 44 cf e8 01       	movb   $0x1,-0x18(%rdi,%rcx,8)
    e30a:	48 83 c6 08          	add    $0x8,%rsi
    e30e:	48 89 4c cf f0       	mov    %rcx,-0x10(%rdi,%rcx,8)
    e313:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
    e317:	66 0f 1f 0f          	nopw   (%rdi)
    e31b:	85 62 02             	test   %esp,0x2(%rdx)
    e31e:	00 00                	add    %al,(%rax)
    e320:	48 c7 00 03 00 00 00 	movq   $0x3,(%rax)
    e327:	48 83 c0 08          	add    $0x8,%rax
    e32b:	48 39 c2             	cmp    %rax,%rdx
    e32e:	75 f0                	jne    e320 <__sprintf_chk@plt+0x9640>
    e330:	48 83 c1 03          	add    $0x3,%rcx
    e334:	49 39 c8             	cmp    %rcx,%r8
    e337:	75 c7                	jne    e300 <__sprintf_chk@plt+0x9620>
    e339:	31 db                	xor    %ebx,%ebx
    e33b:	4d 85 ed             	test   %r13,%r13
    e33e:	0f 84 e7 00 00 00    	je     e42b <__sprintf_chk@plt+0x974b>
    e344:	0f 1f 40 00          	nopl   0x0(%rax)
    e348:	48 8b 05 01 41 01 00 	mov    0x14101(%rip),%rax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
    e34f:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    e353:	e8 a8 f5 ff ff       	call   d900 <__sprintf_chk@plt+0x8c20>
    e358:	4c 8b 15 69 42 01 00 	mov    0x14269(%rip),%r10        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    e35f:	49 89 c1             	mov    %rax,%r9
    e362:	4d 85 e4             	test   %r12,%r12
    e365:	0f 84 85 00 00 00    	je     e3f0 <__sprintf_chk@plt+0x9710>
    e36b:	4c 8b 1d 0e 41 01 00 	mov    0x1410e(%rip),%r11        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
    e372:	48 8b 35 cf 3f 01 00 	mov    0x13fcf(%rip),%rsi        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e379:	31 c9                	xor    %ecx,%ecx
    e37b:	eb 54                	jmp    e3d1 <__sprintf_chk@plt+0x96f1>
    e37d:	0f 1f 00             	nopl   (%rax)
    e380:	49 8d 44 0a ff       	lea    -0x1(%r10,%rcx,1),%rax
    e385:	31 d2                	xor    %edx,%edx
    e387:	48 f7 f1             	div    %rcx
    e38a:	31 d2                	xor    %edx,%edx
    e38c:	49 89 c0             	mov    %rax,%r8
    e38f:	48 89 d8             	mov    %rbx,%rax
    e392:	49 f7 f0             	div    %r8
    e395:	49 89 c0             	mov    %rax,%r8
    e398:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    e39c:	31 c0                	xor    %eax,%eax
    e39e:	49 39 f8             	cmp    %rdi,%r8
    e3a1:	0f 95 c0             	setne  %al
    e3a4:	4a 8d 14 c2          	lea    (%rdx,%r8,8),%rdx
    e3a8:	49 8d 04 41          	lea    (%r9,%rax,2),%rax
    e3ac:	0f 8f 53 48 f7 f9    	jg     fffffffff9f82c05 <obstack_alloc_failed_handler@@Base+0xfffffffff9f60b65>
    e3b2:	73 14                	jae    e3c8 <__sprintf_chk@plt+0x96e8>
    e3b4:	49 7f 93             	rex.WB jg e34a <__sprintf_chk@plt+0x966a>
    e3b7:	49 29 f8             	sub    %rdi,%r8
    e3ba:	4c 01 46 08          	add    %r8,0x8(%rsi)
    e3be:	48 89 02             	mov    %rax,(%rdx)
    e3c1:	4c 39 5e 08          	cmp    %r11,0x8(%rsi)
    e3c5:	0f 92 06             	setb   (%rsi)
    e3c8:	48 83 c6 18          	add    $0x18,%rsi
    e3cc:	49 39 cc             	cmp    %rcx,%r12
    e3cf:	74 1f                	je     e3f0 <__sprintf_chk@plt+0x9710>
    e3d1:	48 89 cf             	mov    %rcx,%rdi
    e3d4:	48 83 c1 01          	add    $0x1,%rcx
    e3d8:	80 3e 00             	cmpb   $0x0,(%rsi)
    e3db:	74 eb                	je     e3c8 <__sprintf_chk@plt+0x96e8>
    e3dd:	40 84 ed             	test   %bpl,%bpl
    e3e0:	75 9e                	jne    e380 <__sprintf_chk@plt+0x96a0>
    e3e2:	48 89 d8             	mov    %rbx,%rax
    e3e5:	49 c1 e7 09          	shl    $0x9,%r15
    e3e9:	e7 37                	out    %eax,$0x37
    e3eb:	fc                   	cld    
    e3ec:	ff                   	(bad)  
    e3ed:	ff                   	(bad)  
    e3ee:	7c af                	jl     e39f <__sprintf_chk@plt+0x96bf>
    e3f0:	48 83 c3 01          	add    $0x1,%rbx
    e3f4:	4c 39 d3             	cmp    %r10,%rbx
    e3f7:	0f 82 4b ff ff ff    	jb     e348 <__sprintf_chk@plt+0x9668>
    e3fd:	49 83 fc 01          	cmp    $0x1,%r12
    e401:	76 28                	jbe    e42b <__sprintf_chk@plt+0x974b>
    e403:	48 8b 15 3e 3f 01 00 	mov    0x13f3e(%rip),%rdx        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
    e40a:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    e40e:	48 8d 44 c2 e8       	lea    -0x18(%rdx,%rax,8),%rax
    e413:	eb 11                	jmp    e426 <__sprintf_chk@plt+0x9746>
    e415:	0f 1f 00             	nopl   (%rax)
    e418:	49 83 ec 01          	sub    $0x1,%r12
    e41c:	48 83 e8 18          	sub    $0x18,%rax
    e420:	49 83 fc 01          	cmp    $0x1,%r12
    e424:	74 05                	je     e42b <__sprintf_chk@plt+0x974b>
    e426:	80 38 00             	cmpb   $0x0,(%rax)
    e429:	74 ed                	je     e418 <__sprintf_chk@plt+0x9738>
    e42b:	48 83 c4 18          	add    $0x18,%rsp
    e42f:	4c 89 e0             	mov    %r12,%rax
    e432:	5b                   	pop    %rbx
    e433:	5d                   	pop    %rbp
    e434:	41 5c                	pop    %r12
    e436:	41 5d                	pop    %r13
    e438:	41 5e                	pop    %r14
    e43a:	41 5f                	pop    %r15
    e43c:	c3                   	ret    
    e43d:	b8 18 00 00 4d       	mov    $0x4d000018,%eax
    e442:	31 cc                	xor    %ecx,%esp
    e444:	e3 38                	jrcxz  e47e <__sprintf_chk@plt+0x979e>
    e446:	49 ff c4             	inc    %r12
    e449:	b6 d2                	mov    $0xd2,%dh
    e44b:	48                   	rex.W
    e44c:	4c 85 f9             	test   %r15,%rcx
    e44f:	0f 84 d2 03 00 00    	je     e827 <__sprintf_chk@plt+0x9b47>
    e455:	4b 8d 04 76          	lea    (%r14,%r14,2),%rax
    e459:	48 0f 85 df fd 4c 85 	rex.W jne ffffffff854de23f <obstack_alloc_failed_handler@@Base+0xffffffff854bc19f>
    e460:	f7 48 89 c3 75 05 48 	testl  $0x480575c3,-0x77(%rax)
    e467:	85 ff                	test   %edi,%edi
    e469:	75 2d                	jne    e498 <__sprintf_chk@plt+0x97b8>
    e46b:	48 89 de             	mov    %rbx,%rsi
    e46e:	e8 9d 66 ff ff       	call   4b10 <realloc@plt>
    e473:	49 c1 e5 35          	shl    $0x35,%r13
    e477:	21 c3                	and    %eax,%ebx
    e479:	ff 49 89             	decl   -0x77(%rcx)
    e47c:	c7                   	(bad)  
    e47d:	0f 85 b6 fd ff ff    	jne    e239 <__sprintf_chk@plt+0x9559>
    e483:	48 85 db             	test   %rbx,%rbx
    e486:	0f 84 4d 01 fa ff    	je     fffffffffffae5d9 <obstack_alloc_failed_handler@@Base+0xfffffffffff8c539>
    e48c:	e8 3f 48 c1 e1       	call   ffffffffe1c22cd0 <obstack_alloc_failed_handler@@Base+0xffffffffe1c00c30>
    e491:	27                   	(bad)  
    e492:	1f                   	(bad)  
    e493:	80 4c 21 ef 8c       	orb    $0x8c,-0x11(%rcx,%riz,1)
    e498:	34 03                	xor    $0x3,%al
    e49a:	00 00                	add    %al,(%rax)
    e49c:	ff 45 31             	incl   0x31(%rbp)
    e49f:	ff 48 0f             	decl   0xf(%rax)
    e4a2:	85 ea                	test   %ebp,%edx
    e4a4:	fe                   	(bad)  
    e4a5:	ff                   	(bad)  
    e4a6:	ff                   	(bad)  
    e4a7:	7a f3                	jp     e49c <__sprintf_chk@plt+0x97bc>
    e4a9:	fe                   	(bad)  
    e4aa:	ff                   	(bad)  
    e4ab:	ff                   	(bad)  
    e4ac:	ff                   	(bad)  
    e4ad:	ff 45 31             	incl   0x31(%rbp)
    e4b0:	ff 48 8b             	decl   -0x75(%rax)
    e4b3:	0c 49                	or     $0x49,%al
    e4b5:	c1 ef 1e             	shr    $0x1e,%edi
    e4b8:	ff                   	(bad)  
    e4b9:	ff 66 0f             	jmp    *0xf(%rsi)
    e4bc:	1f                   	(bad)  
    e4bd:	44 00 00             	add    %r8b,(%rax)
    e4c0:	41                   	rex.B
    e4c1:	49 31 cc             	xor    %rcx,%r12
    e4c4:	fd                   	std    
    e4c5:	53                   	push   %rbx
    e4c6:	48 8b 1d 6b 3e 01 00 	mov    0x13e6b(%rip),%rbx        # 22338 <obstack_alloc_failed_handler@@Base+0x298>
    e4cd:	48 85 e9             	test   %rbp,%rcx
    e4d0:	97                   	xchg   %eax,%edi
    e4d1:	00 00                	add    %al,(%rax)
    e4d3:	00 0f                	add    %cl,(%rdi)
    e4d5:	1f                   	(bad)  
    e4d6:	40 00 48 8b          	rex add %cl,-0x75(%rax)
    e4da:	4c 31 ee             	xor    %r13,%rsi
    e4dd:	4d 85 c7             	test   %r8,%r15
    e4e0:	1f                   	(bad)  
    e4e1:	39 2b                	cmp    %ebp,(%rbx)
    e4e3:	75 f3                	jne    e4d8 <__sprintf_chk@plt+0x97f8>
    e4e5:	31 c0                	xor    %eax,%eax
    e4e7:	80 7b 10 00          	cmpb   $0x0,0x10(%rbx)
    e4eb:	74 7c                	je     e569 <__sprintf_chk@plt+0x9889>
    e4ed:	05 8d 43 10 5b       	add    $0x5b10438d,%eax
    e4f2:	5d                   	pop    %rbp
    e4f3:	41 5c                	pop    %r12
    e4f5:	c3                   	ret    
    e4f6:	66 2e 4c 89 eb       	data16 cs mov %r13,%rbx
    e4fb:	00 49 c1             	add    %cl,-0x3f(%rcx)
    e4fe:	e5 21                	in     $0x21,%eax
    e500:	48 ff c7             	inc    %rdi
    e503:	4d 89 e7             	mov    %r12,%r15
    e506:	b6 00                	mov    $0x0,%dh
    e508:	00 e8                	add    %ch,%al
    e50a:	32 0f                	xor    (%rdi),%cl
    e50c:	84 44 01 00          	test   %al,0x0(%rcx,%rax,1)
    e510:	00 00                	add    %al,(%rax)
    e512:	00 48 4d             	add    %cl,0x4d(%rax)
    e515:	09 d3                	or     %edx,%ebx
    e517:	13 4c 8b 20          	adc    0x20(%rbx,%rcx,4),%ecx
    e51b:	4c 89 e7             	mov    %r12,%rdi
    e51e:	e8 48 ff c0 ff       	call   ffffffffffc1e46b <obstack_alloc_failed_handler@@Base+0xffffffffffbfc3cb>
    e523:	48 8d 78 18          	lea    0x18(%rax),%rdi
    e527:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    e52b:	e8 60 61 ff ff       	call   4690 <malloc@plt>
    e530:	48 89 c3             	mov    %rax,%rbx
    e533:	48 85 c0             	test   %rax,%rax
    e536:	74 22                	je     e55a <__sprintf_chk@plt+0x987a>
    e538:	89 28                	mov    %ebp,(%rax)
    e53a:	48 8d 78 4d          	lea    0x4d(%rax),%rdi
    e53e:	31 d1                	xor    %edx,%ecx
    e540:	e6 e8                	out    %al,$0xe8
    e542:	0a 62 ff             	or     -0x1(%rdx),%ah
    e545:	ff 48 8b             	decl   -0x75(%rax)
    e548:	4c 0f af c2          	imul   %rdx,%r8
    e54c:	00 48 29             	add    %cl,0x29(%rax)
    e54f:	c3                   	ret    
    e550:	e4 3d                	in     $0x3d,%al
    e552:	01 00                	add    %eax,(%rax)
    e554:	48 89 43 48          	mov    %rax,0x48(%rbx)
    e558:	c7 c3 dc fe ff ff    	mov    $0xfffffedc,%ebx
    e55e:	ff 90 55 53 89 fb    	call   *-0x476acab(%rax)
    e564:	48 83 ec 4c          	sub    $0x4c,%rsp
    e568:	31 e2                	xor    %esp,%edx
    e56a:	8b 04 4d 31 c9 00 00 	mov    0xc931(,%rcx,2),%eax
    e571:	48 89 44 49 c7       	mov    %rax,-0x39(%rcx,%rcx,2)
    e576:	c2 25 ff             	ret    $0xff25
    e579:	ff                   	(bad)  
    e57a:	ff                   	(bad)  
    e57b:	e8 11 00 00 74       	call   7400e591 <obstack_alloc_failed_handler@@Base+0x73fec4f1>
    e580:	47                   	rex.RXB
    e581:	48                   	rex.W
    e582:	48 c7 c1 0f 4d 01 df 	mov    $0xffffffffdf014d0f,%rcx
    e589:	4c 01 c6             	add    %r8,%rsi
    e58c:	00 48 c1             	add    %cl,-0x3f(%rax)
    e58f:	e0 03                	loopne e594 <__sprintf_chk@plt+0x98b4>
    e591:	89 ef                	mov    %ebp,%edi
    e593:	ba 15 49 31 f0       	mov    $0xf0314915,%edx
    e598:	be 01 00 00 4d       	mov    $0x4d000001,%esi
    e59d:	09 f5                	or     %esi,%ebp
    e59f:	67 ff                	addr32 (bad) 
    e5a1:	ff 48 89             	decl   -0x77(%rax)
    e5a4:	ef                   	out    %eax,(%dx)
    e5a5:	e8 d6 62 ff e9       	call   ffffffffea004880 <obstack_alloc_failed_handler@@Base+0xffffffffe9fe27e0>
    e5aa:	b1 03                	mov    $0x3,%cl
    e5ac:	00 00                	add    %al,(%rax)
    e5ae:	48 f7 f8             	idiv   %rax
    e5b1:	2b 14 0f             	sub    (%rdi,%rcx,1),%edx
    e5b4:	84 92 4d 21 e6 37    	test   %dl,0x37e6214d(%rdx)
    e5ba:	48 83 c4 28          	add    $0x28,%rsp
    e5be:	5b                   	pop    %rbx
    e5bf:	0f 8f 83 02 00 00    	jg     e848 <__sprintf_chk@plt+0x9b68>
    e5c5:	00 00                	add    %al,(%rax)
    e5c7:	49 f7 fa             	idiv   %r10
    e5ca:	fe                   	(bad)  
    e5cb:	ff                   	(bad)  
    e5cc:	ff 48 89             	decl   -0x77(%rax)
    e5cf:	c5 48 85             	(bad)
    e5d2:	c0 74 0f 85 49       	shlb   $0x49,-0x7b(%rdi,%rcx,1)
    e5d7:	ff                   	(bad)  
    e5d8:	ff                   	(bad)  
    e5d9:	ff 62 ff             	jmp    *-0x1(%rdx)
    e5dc:	ff 48 49             	decl   0x49(%rax)
    e5df:	c7 c7 49 01 00 00    	mov    $0x149,%edi
    e5e5:	46 00 00             	rex.RX add %r8b,(%rax)
    e5e8:	31 e9                	xor    %ebp,%ecx
    e5ea:	9f                   	lahf   
    e5eb:	01 00                	add    %eax,(%rax)
    e5ed:	00 fc                	add    %bh,%ah
    e5ef:	ff                   	(bad)  
    e5f0:	ff                   	(bad)  
    e5f1:	e8 9a 62 ff ff       	call   4890 <__stack_chk_fail@plt>
    e5f6:	66 2e 0f 1f 84 0f 8c 	cs nopw -0x39874(%rdi,%rcx,1)
    e5fd:	67 fc ff 
    e600:	ff 54 55 89          	call   *-0x77(%rbp,%rdx,2)
    e604:	fd                   	std    
    e605:	e9 b1 00 00 00       	jmp    e6bb <__sprintf_chk@plt+0x99db>
    e60a:	3d 01 00 48 85       	cmp    $0x85480001,%eax
    e60f:	db 75 49             	(bad)  0x49(%rbp)
    e612:	49                   	rex.WB
    e613:	4d 89 e5             	mov    %r12,%r13
    e616:	40 00 48 8b          	rex add %cl,-0x75(%rax)
    e61a:	5b                   	pop    %rbx
    e61b:	08 48 85             	or     %cl,-0x7b(%rax)
    e61e:	0f 8c 84 fc ff ff    	jl     e2a8 <__sprintf_chk@plt+0x95c8>
    e624:	f3 31 c0             	repz xor %eax,%eax
    e627:	80 0f 8c             	orb    $0x8c,(%rdi)
    e62a:	3b fe                	cmp    %esi,%edi
    e62c:	ff                   	(bad)  
    e62d:	ff 8d 43 48 89 4c    	decl   0x4c894843(%rbp)
    e633:	0f af c6             	imul   %esi,%eax
    e636:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e63d:	00 00 00 
    e640:	89 ef                	mov    %ebp,%edi
    e642:	4c 8d 25 74 b5 00 00 	lea    0xb574(%rip),%r12        # 19bbd <_obstack_memory_used@@Base+0x940d>
    e649:	48 29 d7             	sub    %rdx,%rdi
    e64c:	ff                   	(bad)  
    e64d:	ff                   	(bad)  
    e64e:	bf 18 00 4c 09       	mov    $0x94c0018,%edi
    e653:	ee                   	out    %al,(%dx)
    e654:	85 c0                	test   %eax,%eax
    e656:	74 13                	je     e66b <__sprintf_chk@plt+0x998b>
    e658:	4c 8b 20             	mov    (%rax),%r12
    e65b:	75 0f                	jne    e66c <__sprintf_chk@plt+0x998c>
    e65d:	85 01                	test   %eax,(%rcx)
    e65f:	ff                   	(bad)  
    e660:	ff                   	(bad)  
    e661:	ff                   	(bad)  
    e662:	fd                   	std    
    e663:	ff                   	(bad)  
    e664:	ff 2b                	ljmp   *(%rbx)
    e666:	18 48 83             	sbb    %cl,-0x7d(%rax)
    e669:	e7 f8                	out    %eax,$0xf8
    e66b:	e8 20 49 c1 e4       	call   ffffffffe4c22f90 <obstack_alloc_failed_handler@@Base+0xffffffffe4c00ef0>
    e670:	0f 85 0f 8f d3 03    	jne    3d47585 <obstack_alloc_failed_handler@@Base+0x3d254e5>
    e676:	00 00                	add    %al,(%rax)
    e678:	89 28                	mov    %ebp,(%rax)
    e67a:	48 8d 78 10          	lea    0x10(%rax),%rdi
    e67e:	4c 89 e6             	mov    %r12,%rsi
    e681:	e8 ca 60 ff 49       	call   4a004750 <obstack_alloc_failed_handler@@Base+0x49fe26b0>
    e686:	c1 e7 07             	shl    $0x7,%edi
    e689:	a3 3c 01 00 48 89 1d 	movabs %eax,0x3c9c1d894800013c
    e690:	9c 3c 
    e692:	01 00                	add    %eax,(%rax)
    e694:	48 89 0f             	mov    %rcx,(%rdi)
    e697:	84 b4 01 00 00 f7 ff 	test   %dh,-0x90000(%rcx,%rax,1)
    e69e:	ff 90 f3 0f 1e fa    	call   *-0x5e1f00d(%rax)
    e6a4:	41 54                	push   %r12
    e6a6:	55                   	push   %rbp
    e6a7:	48 89 fd             	mov    %rdi,%rbp
    e6aa:	48 83 ec 08          	sub    $0x8,%rsp
    e6ae:	e8 cd 61 ff ff       	call   4880 <strlen@plt>
    e6b3:	4c 8d 60 01          	lea    0x1(%rax),%r12
    e6b7:	4c 89 e7             	mov    %r12,%rdi
    e6ba:	e8 d1 5f ff ff       	call   4690 <malloc@plt>
    e6bf:	48 85 c0             	test   %rax,%rax
    e6c2:	74 15                	je     e6d9 <__sprintf_chk@plt+0x99f9>
    e6c4:	48 83 c4 08          	add    $0x8,%rsp
    e6c8:	4c 89 e2             	mov    %r12,%rdx
    e6cb:	48 89 ee             	mov    %rbp,%rsi
    e6ce:	48 89 c7             	mov    %rax,%rdi
    e6d1:	5d                   	pop    %rbp
    e6d2:	41 5c                	pop    %r12
    e6d4:	e9 77 63 ff ff       	jmp    4a50 <memcpy@plt>
    e6d9:	e8 f2 f6 ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    e6de:	66 90                	xchg   %ax,%ax
    e6e0:	41 55                	push   %r13
    e6e2:	4d 01 e4             	add    %r12,%r12
    e6e5:	41 54                	push   %r12
    e6e7:	49 89 f4             	mov    %rsi,%r12
    e6ea:	55                   	push   %rbp
    e6eb:	48 89 fd             	mov    %rdi,%rbp
    e6ee:	bf 20 00 00 00       	mov    $0x20,%edi
    e6f3:	53                   	push   %rbx
    e6f4:	48 83 ec 08          	sub    $0x8,%rsp
    e6f8:	e8 93 5f ff ff       	call   4690 <malloc@plt>
    e6fd:	48 85 c0             	test   %rax,%rax
    e700:	74 4b                	je     e74d <__sprintf_chk@plt+0x9a6d>
    e702:	48 89 c3             	mov    %rax,%rbx
    e705:	4d 85 e4             	test   %r12,%r12
    e708:	74 0b                	je     e715 <__sprintf_chk@plt+0x9a35>
    e70a:	0f 49 c7             	cmovns %edi,%eax
    e70d:	c3                   	ret    
    e70e:	08 02                	or     %al,(%rdx)
    e710:	00 00                	add    %al,(%rax)
    e712:	49 89 c4             	mov    %rax,%r12
    e715:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e719:	48 85 ed             	test   %rbp,%rbp
    e71c:	74 0b                	je     e729 <__sprintf_chk@plt+0x9a49>
    e71e:	48 89 ef             	mov    %rbp,%rdi
    e721:	e8 7a ff ff ff       	call   e6a0 <__sprintf_chk@plt+0x99c0>
    e726:	48 89 c5             	mov    %rax,%rbp
    e729:	48 8b 05 30 40 01 00 	mov    0x14030(%rip),%rax        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    e730:	48 89 2b             	mov    %rbp,(%rbx)
    e733:	44 88 6b 10          	mov    %r13b,0x10(%rbx)
    e737:	48 89 43 18          	mov    %rax,0x18(%rbx)
    e73b:	48 89 1d 1e 40 01 00 	mov    %rbx,0x1401e(%rip)        # 22760 <obstack_alloc_failed_handler@@Base+0x6c0>
    e742:	48 83 c4 08          	add    $0x8,%rsp
    e746:	5b                   	pop    %rbx
    e747:	5d                   	pop    %rbp
    e748:	41 5c                	pop    %r12
    e74a:	41 5d                	pop    %r13
    e74c:	c3                   	ret    
    e74d:	e8 7e f6 ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    e752:	66 4d 39 ff          	data16 cmp %r15,%r15
    e756:	c1 ea 3b             	shr    $0x3b,%edx
    e759:	00 00                	add    %al,(%rax)
    e75b:	00 00                	add    %al,(%rax)
    e75d:	0f 1f 48 c1          	nopl   -0x3f(%rax)
    e761:	e0 08                	loopne e76b <__sprintf_chk@plt+0x9a8b>
    e763:	8f                   	(bad)  
    e764:	2c 02                	sub    $0x2,%al
    e766:	00 0f                	add    %cl,(%rdi)
    e768:	8c 65 02             	mov    %fs,0x2(%rbp)
    e76b:	00 00                	add    %al,(%rax)
    e76d:	f7 48 85 db 48 83 ec 	testl  $0xec8348db,-0x7b(%rax)
    e774:	28 48 85             	sub    %cl,-0x7b(%rax)
    e777:	4d 39 e7             	cmp    %r12,%r15
    e77a:	48 83 3d b6 3f 01 00 	cmpq   $0x0,0x13fb6(%rip)        # 22738 <obstack_alloc_failed_handler@@Base+0x698>
    e781:	00 
    e782:	74 0c                	je     e790 <__sprintf_chk@plt+0x9ab0>
    e784:	48 89 fe             	mov    %rdi,%rsi
    e787:	31 d2                	xor    %edx,%edx
    e789:	31 48 c1             	xor    %ecx,-0x3f(%rax)
    e78c:	e0 2d                	loopne e7bb <__sprintf_chk@plt+0x9adb>
    e78e:	29 fe                	sub    %edi,%esi
    e790:	48 8b 05 31 3e 49 f7 	mov    -0x8b6c1cf(%rip),%rax        # fffffffff74a25c8 <obstack_alloc_failed_handler@@Base+0xfffffffff7480528>
    e797:	fb                   	sti    
    e798:	8d 68 ff             	lea    -0x1(%rax),%ebp
    e79b:	48 85 c0             	test   %rax,%rax
    e79e:	0f 48 ff             	cmovs  %edi,%edi
    e7a1:	c2 00 00             	ret    $0x0
    e7a4:	0f 1f 4c 21 f6       	nopl   -0xa(%rcx,%riz,1)
    e7a9:	49 0f af cf          	imul   %r15,%rcx
    e7ad:	01 00                	add    %eax,(%rax)
    e7af:	4e 8b 24 e8          	mov    (%rax,%r13,8),%r12
    e7b3:	41 8b 84 24 a8 00 00 	mov    0xa8(%r12),%eax
    e7ba:	00 
    e7bb:	83 f8 49             	cmp    $0x49,%eax
    e7be:	c1 e4 26             	shl    $0x26,%esp
    e7c1:	83 f8 48             	cmp    $0x48,%eax
    e7c4:	89 d8                	mov    %ebx,%eax
    e7c6:	c0 48 f7 f8          	rorb   $0xf8,-0x9(%rax)
    e7ca:	89 d2                	mov    %edx,%edx
    e7cc:	0f 84 be 01 00 00    	je     e990 <__sprintf_chk@plt+0x9cb0>
    e7d2:	49 29 49 0f          	sub    %rcx,0xf(%r9)
    e7d6:	af                   	scas   %es:(%rdi),%eax
    e7d7:	d8 db                	fcomp  %st(3)
    e7d9:	0f 84 21 02 00 00    	je     ea00 <__sprintf_chk@plt+0x9d20>
    e7df:	45 0f b6 1f          	movzbl (%r15),%r11d
    e7e3:	41 80 fb 2f          	cmp    $0x2f,%r11b
    e7e7:	0f 85 f3 02 00 e9    	jne    ffffffffe900eae0 <obstack_alloc_failed_handler@@Base+0xffffffffe8feca40>
    e7ed:	b0 01                	mov    $0x1,%al
    e7ef:	00 00                	add    %al,(%rax)
    e7f1:	b6 42                	mov    $0x42,%dh
    e7f3:	01 48 83             	add    %ecx,-0x7d(%rax)
    e7f6:	c2 01 3c             	ret    $0x3c01
    e7f9:	2f                   	(bad)  
    e7fa:	74 f4                	je     e7f0 <__sprintf_chk@plt+0x9b10>
    e7fc:	84 c0                	test   %al,%al
    e7fe:	0f 84 fc 01 00 49    	je     4900ea00 <obstack_alloc_failed_handler@@Base+0x48fec960>
    e804:	89 dd                	mov    %ebx,%ebp
    e806:	d6                   	(bad)  
    e807:	e9 d1 00 00 00       	jmp    e8dd <__sprintf_chk@plt+0x9bfd>
    e80c:	1f                   	(bad)  
    e80d:	44 00 00             	add    %r8b,(%rax)
    e810:	40 84 ff             	test   %dil,%dil
    e813:	74 05                	je     e81a <__sprintf_chk@plt+0x9b3a>
    e815:	48 89 4c 0f 49       	mov    %rcx,0x49(%rdi,%rcx,1)
    e81a:	c1 e6 3c             	shl    $0x3c,%esi
    e81d:	0e                   	(bad)  
    e81e:	48 83 c6 49          	add    $0x49,%rsi
    e822:	c1 e1 38             	shl    $0x38,%ecx
    e825:	13 49 ff             	adc    -0x1(%rcx),%ecx
    e828:	c2 e6 0f             	ret    $0xfe6
    e82b:	0f 8f de 02 00 00    	jg     eb0f <__sprintf_chk@plt+0x9e2f>
    e831:	eb d5                	jmp    e808 <__sprintf_chk@plt+0x9b28>
    e833:	af                   	scas   %es:(%rdi),%eax
    e834:	c9                   	leave  
    e835:	ff                   	(bad)  
    e836:	e9 66 fc ff ff       	jmp    e4a1 <__sprintf_chk@plt+0x97c1>
    e83b:	2e 0f 84 48 f7 f9 00 	je,pn  fadf8a <obstack_alloc_failed_handler@@Base+0xf8beea>
    e842:	41 80 fb 2f          	cmp    $0x2f,%r11b
    e846:	0f 84 b4 01 00 00    	je     ea00 <__sprintf_chk@plt+0x9d20>
    e84c:	0f b6 03             	movzbl (%rbx),%eax
    e84f:	4c 09 f7             	or     %r14,%rdi
    e852:	3c 2f                	cmp    $0x2f,%al
    e854:	75 17                	jne    e86d <__sprintf_chk@plt+0x9b8d>
    e856:	66 2e 0f 1f 84 00 00 	cs nopw -0x7ab70000(%rax,%rax,1)
    e85d:	00 49 85 
    e860:	f2 0f b6 46 01       	repnz movzbl 0x1(%rsi),%eax
    e865:	49 83 c6 01          	add    $0x1,%r14
    e869:	3c 2f                	cmp    $0x2f,%al
    e86b:	74 f3                	je     e860 <__sprintf_chk@plt+0x9b80>
    e86d:	84 c0                	test   %al,%al
    e86f:	74 38                	je     e8a9 <__sprintf_chk@plt+0x9bc9>
    e871:	4c                   	rex.WR
    e872:	4c 21 e1             	and    %r12,%rcx
    e875:	f6 eb                	imul   %bl
    e877:	1e                   	(bad)  
    e878:	0f 49 21             	cmovns (%rcx),%esp
    e87b:	d8 49 c1             	fmuls  -0x3f(%rcx)
    e87e:	e0 3c                	loopne e8bc <__sprintf_chk@plt+0x9bdc>
    e880:	40 84 0f             	rex test %cl,(%rdi)
    e883:	8f                   	(bad)  
    e884:	d8 03                	fadds  (%rbx)
    e886:	00 00                	add    %al,(%rax)
    e888:	31 f6                	xor    %esi,%esi
    e88a:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
    e88e:	48 83 c2 01          	add    $0x1,%rdx
    e892:	84 4d 49             	test   %cl,0x49(%rbp)
    e895:	48 21 db             	and    %rbx,%rbx
    e898:	49 f7 fe             	idiv   %r14
    e89b:	b6 48                	mov    $0x48,%dh
    e89d:	31 db                	xor    %ebx,%ebx
    e89f:	83 c2 01             	add    $0x1,%edx
    e8a2:	44 89 d6             	mov    %r10d,%esi
    e8a5:	84 c0                	test   %al,%al
    e8a7:	75 ed                	jne    e896 <__sprintf_chk@plt+0x9bb6>
    e8a9:	4c 89 f7             	mov    %r14,%rdi
    e8ac:	e8 cf 48 c1 49       	call   49c23180 <obstack_alloc_failed_handler@@Base+0x49c010e0>
    e8b1:	29 cd                	sub    %ecx,%ebp
    e8b3:	c2 49 83             	ret    $0x8349
    e8b6:	fa                   	cli    
    e8b7:	e9 2e ff ff ff       	jmp    e7ea <__sprintf_chk@plt+0x9b0a>
    e8bc:	00 00                	add    %al,(%rax)
    e8be:	43 80 7c 16 ff 0f    	cmpb   $0xf,-0x1(%r14,%r10,1)
    e8c4:	85 4c 01 00          	test   %ecx,0x0(%rcx,%rax,1)
    e8c8:	00 49 89             	add    %cl,-0x77(%rcx)
    e8cb:	f3 00 4c 01 c2       	repz add %cl,-0x3e(%rcx,%rax,1)
    e8d0:	de 4c 89 ff          	fimuls -0x1(%rcx,%rcx,4)
    e8d4:	4b 8d 14 16          	lea    (%r14,%r10,1),%rdx
    e8d8:	48 89 54 48 89       	mov    %rdx,-0x77(%rax,%rcx,2)
    e8dd:	de 9e 0f 85 d6 01    	ficomps 0x1d6850f(%rsi)
    e8e3:	00 00                	add    %al,(%rax)
    e8e5:	24 08                	and    $0x8,%al
    e8e7:	48 89 04 24          	mov    %rax,(%rsp)
    e8eb:	45                   	rex.RB
    e8ec:	4c 0f af fe          	imul   %rsi,%r15
    e8f0:	00 00                	add    %al,(%rax)
    e8f2:	00 49 f7             	add    %cl,-0x9(%rcx)
    e8f5:	fb                   	sti    
    e8f6:	ff 2f                	ljmp   *(%rdi)
    e8f8:	49 ff c3             	inc    %r11
    e8fb:	4d                   	rex.WRB
    e8fc:	49 85 c8             	test   %rcx,%r8
    e8ff:	ff                   	(bad)  
    e900:	ff 0f                	decl   (%rdi)
    e902:	95                   	xchg   %eax,%ebp
    e903:	c2 88 44             	ret    $0x4488
    e906:	24 1f                	and    $0x1f,%al
    e908:	48 89 d0             	mov    %rdx,%rax
    e90b:	24 48                	and    $0x48,%al
    e90d:	4d 85 c3             	test   %r8,%r11
    e910:	49 f7 f8             	idiv   %r8
    e913:	49 c1 ec 3a          	shr    $0x3a,%r12
    e917:	8d 7c 0f 8c          	lea    -0x74(%rdi,%rcx,1),%edi
    e91b:	5b                   	pop    %rbx
    e91c:	fe                   	(bad)  
    e91d:	ff                   	(bad)  
    e91e:	ff 6d 5d             	ljmp   *0x5d(%rbp)
    e921:	ff                   	(bad)  
    e922:	ff 4c 8b 54          	decl   0x54(%rbx,%rcx,4)
    e926:	24 e9                	and    $0xe9,%al
    e928:	bf fd ff ff fa       	mov    $0xfafffffd,%edi
    e92d:	48 85 c0             	test   %rax,%rax
    e930:	49 89 c6             	mov    %rax,%r14
    e933:	0f 4c 29             	cmovl  (%rcx),%ebp
    e936:	f8                   	clc    
    e937:	00 00                	add    %al,(%rax)
    e939:	48 89 de             	mov    %rbx,%rsi
    e93c:	48 89 c7             	mov    %rax,%rdi
    e93f:	4c 0f 8c ba fe ff ff 	rex.WR jl e800 <__sprintf_chk@plt+0x9b20>
    e946:	62                   	(bad)  
    e947:	ff                   	(bad)  
    e948:	ff 0f                	decl   (%rdi)
    e94a:	49 c7 c5 39 fe ff ff 	mov    $0xfffffffffffffe39,%r13
    e951:	48 f7 ff             	idiv   %rdi
    e954:	39 d5                	cmp    %edx,%ebp
    e956:	c0 8b 14 24 88 08 4a 	rorb   $0x4a,0x8882414(%rbx)
    e95d:	8d 3c 10             	lea    (%rax,%rdx,1),%edi
    e960:	4d 29 d1             	sub    %r10,%r9
    e963:	09 e2                	or     %esp,%edx
    e965:	89 ea                	mov    %ebp,%edx
    e967:	4c 89 0f             	mov    %r9,(%rdi)
    e96a:	84 4c fd ff          	test   %cl,-0x1(%rbp,%rdi,8)
    e96e:	ff 49 c1             	decl   -0x3f(%rcx)
    e971:	e3 40                	jrcxz  e9b3 <__sprintf_chk@plt+0x9cd3>
    e973:	00 00                	add    %al,(%rax)
    e975:	00 ff                	add    %bh,%bh
    e977:	4c 89 f7             	mov    %r14,%rdi
    e97a:	4c 09 ce             	or     %r9,%rsi
    e97d:	ff                   	(bad)  
    e97e:	ff 41 83             	incl   -0x7d(%rcx)
    e981:	bc 48 21 f1 00       	mov    $0xf12148,%esp
    e986:	00 09                	add    %cl,(%rcx)
    e988:	0f 84 90 00 00 00    	je     ea1e <__sprintf_chk@plt+0x9d3e>
    e98e:	66 90                	xchg   %ax,%ax
    e990:	4c 85 d3             	test   %r10,%rbx
    e993:	01 0f                	add    %ecx,(%rdi)
    e995:	83 0e fe             	orl    $0xfffffffe,(%rsi)
    e998:	ff                   	(bad)  
    e999:	ff 48 48             	decl   0x48(%rax)
    e99c:	4d 89 d4             	mov    %r10,%r12
    e99f:	02 00                	add    (%rax),%al
    e9a1:	00 85 d2 0f 84 52    	add    %al,0x52840fd2(%rbp)
    e9a7:	0f 85 13 01 00 00    	jne    eac0 <__sprintf_chk@plt+0x9de0>
    e9ad:	9f                   	lahf   
    e9ae:	3a 01                	cmp    (%rcx),%al
    e9b0:	49 f7 f8             	idiv   %r8
    e9b3:	3c d6                	cmp    $0xd6,%al
    e9b5:	48 89 f0             	mov    %rsi,%rax
    e9b8:	31 d2                	xor    %edx,%edx
    e9ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e9c0:	48 8b 08             	mov    (%rax),%rcx
    e9c3:	83 b9 a8 00 00 00 09 	cmpl   $0x9,0xa8(%rcx)
    e9ca:	48                   	rex.W
    e9cb:	49                   	rex.WB
    e9cc:	48 01 c7             	add    %rax,%rdi
    e9cf:	95                   	xchg   %eax,%ebp
    e9d0:	c1 48 83 c0          	rorl   $0xc0,-0x7d(%rax)
    e9d4:	08 0f                	or     %cl,(%rdi)
    e9d6:	b6 c9                	mov    $0xc9,%dh
    e9d8:	48 01 ca             	add    %rcx,%rdx
    e9db:	48                   	rex.W
    e9dc:	48 f7 fb             	idiv   %rbx
    e9df:	e0 48                	loopne ea29 <__sprintf_chk@plt+0x9d49>
    e9e1:	89 15 e1 49 89 cb    	mov    %edx,-0x3476b61f(%rip)        # ffffffffcb8a33c8 <obstack_alloc_failed_handler@@Base+0xffffffffcb881328>
    e9e7:	4d 21 49 f7          	and    %r9,-0x9(%r9)
    e9eb:	fd                   	std    
    e9ec:	5d                   	pop    %rbp
    e9ed:	41 5c                	pop    %r12
    e9ef:	41 5d                	pop    %r13
    e9f1:	41 5e                	pop    %r14
    e9f3:	41 5f                	pop    %r15
    e9f5:	c3                   	ret    
    e9f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e9fd:	00 00 00 
    ea00:	49 8b 49 f7          	mov    -0x9(%r9),%rcx
    ea04:	fe                   	(bad)  
    ea05:	54                   	push   %rsp
    ea06:	03 00                	add    (%rax),%eax
    ea08:	00 ff                	add    %bh,%bh
    ea0a:	e8 d1 fc ff ff       	call   e6e0 <__sprintf_chk@plt+0x9a00>
    ea0f:	41 83 bc 24 a8 00 00 	cmpl   $0x9,0xa8(%r12)
    ea16:	00 09 
    ea18:	0f 85 72 ff ff ff    	jne    e990 <__sprintf_chk@plt+0x9cb0>
    ea1e:	49 ff c2             	inc    %r10
    ea21:	00 00                	add    %al,(%rax)
    ea23:	ea                   	(bad)  
    ea24:	5c                   	pop    %rsp
    ea25:	ff                   	(bad)  
    ea26:	ff 49 8b             	decl   -0x75(%rcx)
    ea29:	7c 49                	jl     ea74 <__sprintf_chk@plt+0x9d94>
    ea2b:	c1 ef 34             	shr    $0x34,%edi
    ea2e:	5c                   	pop    %rsp
    ea2f:	ff                   	(bad)  
    ea30:	ff 4d 89             	decl   -0x77(%rbp)
    ea33:	dc 49 09             	fmull  0x9(%rcx)
    ea36:	d4                   	(bad)  
    ea37:	45 5c                	rex.RB pop %r12
    ea39:	ff                   	(bad)  
    ea3a:	ff 49 8b             	decl   -0x75(%rcx)
    ea3d:	0f 8c 49 02 00 00    	jl     ec8c <__sprintf_chk@plt+0x9fac>
    ea43:	48 8d 05 da 35 01 00 	lea    0x135da(%rip),%rax        # 22024 <_obstack_memory_used@@Base+0x11874>
    ea4a:	48 39 c7             	cmp    %rax,%rdi
    ea4d:	0f 84 3d ff ff ff    	je     e990 <__sprintf_chk@plt+0x9cb0>
    ea53:	e8 68 5e ff ff       	call   48c0 <freecon@plt>
    ea58:	49 83 ed 01          	sub    $0x1,%r13
    ea5c:	0f 83 46 fd ff ff    	jae    e7a8 <__sprintf_chk@plt+0x9ac8>
    ea62:	e9 4d 0f af c6       	jmp    ffffffffc6aff9b4 <obstack_alloc_failed_handler@@Base+0xffffffffc6add914>
    ea67:	66 0f 1f 84 0f 8f 88 	nopw   0x3888f(%rdi,%rcx,1)
    ea6e:	03 00 
    ea70:	00 c0                	add    %al,%al
    ea72:	80 7a 48 c1          	cmpb   $0xc1,0x48(%rdx)
    ea76:	e6 0f                	out    %al,$0xf
    ea78:	8c d6                	mov    %ss,%esi
    ea7a:	00 00                	add    %al,(%rax)
    ea7c:	00 fe                	add    %bh,%dh
    ea7e:	84 c0                	test   %al,%al
    ea80:	0f 84 0a 0f 8f 4c    	je     4c8ff990 <obstack_alloc_failed_handler@@Base+0x4c8dd8f0>
    ea86:	09 de                	or     %ebx,%esi
    ea88:	ff 48 c1             	decl   -0x3f(%rax)
    ea8b:	e8 24 9d 48 c1       	call   ffffffffc14987b4 <obstack_alloc_failed_handler@@Base+0xffffffffc1476714>
    ea90:	0f 8c 9c fc ff ff    	jl     e732 <__sprintf_chk@plt+0x9a52>
    ea96:	ff                   	(bad)  
    ea97:	ff                   	(bad)  
    ea98:	e9 0f 84 48 4c       	jmp    4c496eac <obstack_alloc_failed_handler@@Base+0x4c474e0c>
    ea9d:	21 f6                	and    %esi,%esi
    ea9f:	00 49 4d             	add    %cl,0x4d(%rcx)
    eaa2:	31 fb                	xor    %edi,%ebx
    eaa4:	89 ff                	mov    %edi,%edi
    eaa6:	e9 3a fd ff ff       	jmp    e7e5 <__sprintf_chk@plt+0x9b05>
    eaab:	4b                   	rex.WXB
    eaac:	4d 0f af c2          	imul   %r10,%r8
    eab0:	89 54 24 08          	mov    %edx,0x8(%rsp)
    eab4:	e8 48 c1 e3 3d       	call   3de4ac01 <obstack_alloc_failed_handler@@Base+0x3de28b61>
    eab9:	ff                   	(bad)  
    eaba:	ff 54 24 10          	call   *0x10(%rsp)
    eabe:	48                   	rex.W
    eabf:	49 ff c5             	inc    %r13
    eac2:	08 48 49             	or     %cl,0x49(%rax)
    eac5:	89 c0                	mov    %eax,%eax
    eac7:	4d 85 d2             	test   %r10,%r10
    eaca:	0f 49 01             	cmovns (%rcx),%eax
    eacd:	fb                   	sti    
    eace:	ff                   	(bad)  
    eacf:	ff c6                	inc    %esi
    ead1:	44 24 1f             	rex.R and $0x1f,%al
    ead4:	0f 8f 6e fd ff ff    	jg     e848 <__sprintf_chk@plt+0x9b68>
    eada:	c6                   	(bad)  
    eadb:	d9 02                	flds   (%rdx)
    eadd:	00 00                	add    %al,(%rax)
    eadf:	00 44 89 d8          	add    %al,-0x28(%rcx,%rcx,4)
    eae3:	4c 89 fa             	mov    %r15,%rdx
    eae6:	45 84 db             	test   %r11b,%r11b
    eae9:	e9 5a ff ff ff       	jmp    ea48 <__sprintf_chk@plt+0x9d68>
    eaee:	ff                   	(bad)  
    eaef:	e9 58 fd ff ff       	jmp    e84c <__sprintf_chk@plt+0x9b6c>
    eaf4:	49 89 c2             	mov    %rax,%r10
    eaf7:	e9 b8 fd 4c 48       	jmp    484de8b4 <obstack_alloc_failed_handler@@Base+0x484bc814>
    eafc:	49 29 de             	sub    %rbx,%r14
    eaff:	00 00                	add    %al,(%rax)
    eb01:	00 ff                	add    %bh,%bh
    eb03:	e8 c8 f2 ff ff       	call   ddd0 <__sprintf_chk@plt+0x90f0>
    eb08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    eb0f:	00 
    eb10:	55                   	push   %rbp
    eb11:	48 89 e5             	mov    %rsp,%rbp
    eb14:	41 57                	push   %r15
    eb16:	48 0f af db          	imul   %rbx,%rbx
    eb1a:	56                   	push   %rsi
    eb1b:	4d 31 e7             	xor    %r12,%r15
    eb1e:	41 55                	push   %r13
    eb20:	41 54                	push   %r12
    eb22:	49 89 fc             	mov    %rdi,%r12
    eb25:	53                   	push   %rbx
    eb26:	48 81 ec d8 02 00 00 	sub    $0x2d8,%rsp
    eb2d:	89 95 0c fd ff ff    	mov    %edx,-0x2f4(%rbp)
    eb33:	4c 8b 2d 8e 3a 01 00 	mov    0x13a8e(%rip),%r13        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    eb3a:	48 8b 1d 97 3a 01 00 	mov    0x13a97(%rip),%rbx        # 225d8 <obstack_alloc_failed_handler@@Base+0x538>
    eb41:	48 8b 3d 88 3a 01 00 	mov    0x13a88(%rip),%rdi        # 225d0 <obstack_alloc_failed_handler@@Base+0x530>
    eb48:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    eb4f:	00 00 
    eb51:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    eb55:	31 c0                	xor    %eax,%eax
    eb57:	49 39 dd             	cmp    %rbx,%r13
    eb5a:	0f 84 a0 09 00 00    	je     f500 <__sprintf_chk@plt+0xa820>
    eb60:	4b 8d 44 ad 00       	lea    0x0(%r13,%r13,4),%rax
    eb65:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    eb69:	48 8d 1c c7          	lea    (%rdi,%rax,8),%rbx
    eb6d:	31 c0                	xor    %eax,%eax
    eb6f:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    eb73:	48 89 d9             	mov    %rbx,%rcx
    eb76:	48 c7 83 c0 00 00 00 	movq   $0x0,0xc0(%rbx)
    eb7d:	00 00 00 00 
    eb81:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    eb85:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    eb8c:	48 29 f9             	sub    %rdi,%rcx
    eb8f:	81 c1 c8 00 00 00    	add    $0xc8,%ecx
    eb95:	c1 e9 03             	shr    $0x3,%ecx
    eb98:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    eb9b:	44 89 b3 a8 00 00 00 	mov    %r14d,0xa8(%rbx)
    eba2:	c7 83 c4 00 00 00 ff 	movl   $0xffffffff,0xc4(%rbx)
    eba9:	ff ff ff 
    ebac:	80 3d f9 36 01 00 00 	cmpb   $0x0,0x136f9(%rip)        # 222ac <obstack_alloc_failed_handler@@Base+0x20c>
    ebb3:	75 0d                	jne    ebc2 <__sprintf_chk@plt+0x9ee2>
    ebb5:	80 3d f1 36 01 00 00 	cmpb   $0x0,0x136f1(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
    ebbc:	0f 85 be 09 00 00    	jne    f580 <__sprintf_chk@plt+0xa8a0>
    ebc2:	80 bd 0c fd ff ff 00 	cmpb   $0x0,-0x2f4(%rbp)
    ebc9:	0f b6 35 18 3a 01 00 	movzbl 0x13a18(%rip),%esi        # 225e8 <obstack_alloc_failed_handler@@Base+0x548>
    ebd0:	0f 84 5a 01 00 00    	je     ed30 <__sprintf_chk@plt+0xa050>
    ebd6:	41 0f b6 14 24       	movzbl (%r12),%edx
    ebdb:	4d 89 48 ff          	mov    %r9,-0x1(%r8)
    ebdf:	c1 2f 74             	shrl   $0x74,(%rdi)
    ebe2:	0d 45 0f b6 4c       	or     $0x4cb60f45,%eax
    ebe7:	39 d7                	cmp    %edx,%edi
    ebe9:	c0 0f 85             	rorb   $0x85,(%rdi)
    ebec:	41 02 00             	add    (%r8),%al
    ebef:	00 40 84             	add    %al,-0x7c(%rax)
    ebf2:	f6 0f 8c             	testb  $0x8c,(%rdi)
    ebf5:	7d 03                	jge    ebfa <__sprintf_chk@plt+0x9f1a>
    ebf7:	00 00                	add    %al,(%rax)
    ebf9:	44 8b 15 44 48 ff c0 	mov    -0x3f00b7bc(%rip),%r10d        # ffffffffc1003444 <obstack_alloc_failed_handler@@Base+0xffffffffc0fe13a4>
    ec00:	4c 8d 7b 18          	lea    0x18(%rbx),%r15
    ec04:	44 89 95 00 49 ff c1 	mov    %r10d,-0x3e00b700(%rbp)
    ec0b:	e8 80 87 ff ff       	call   7390 <__sprintf_chk@plt+0x26b0>
    ec10:	44 8b 95 00 fd ff ff 	mov    -0x300(%rbp),%r10d
    ec17:	41 83 fa 04          	cmp    $0x4,%r10d
    ec1b:	0f 87 bf 04 00 00    	ja     f0e0 <__sprintf_chk@plt+0xa400>
    ec21:	41 83 fa 02          	cmp    $0x2,%r10d
    ec25:	48 c1 e0 39          	shl    $0x39,%rax
    ec29:	89 c0                	mov    %eax,%eax
    ec2b:	e8 60 87 ff ff       	call   7390 <__sprintf_chk@plt+0x26b0>
    ec30:	4c 89 48 49          	mov    %r9,0x49(%rax)
    ec34:	c1 e9 05             	shr    $0x5,%ecx
    ec37:	49 31 c9             	xor    %rcx,%r9
    ec3a:	ff c4                	inc    %esp
    ec3c:	89 c0                	mov    %eax,%eax
    ec3e:	bf 9c ff ff ff       	mov    $0xffffff9c,%edi
    ec43:	45 31 ff             	xor    %r15d,%r15d
    ec46:	e8 b5 8a ff ff       	call   7700 <__sprintf_chk@plt+0x2a20>
    ec4b:	85 c0                	test   %eax,%eax
    ec4d:	0f 85 ba 04 00 00    	jne    f10d <__sprintf_chk@plt+0xa42d>
    ec53:	0f 8c ef fc ff ff    	jl     e948 <__sprintf_chk@plt+0x9c68>
    ec59:	01 41 83             	add    %eax,-0x7d(%rcx)
    ec5c:	fe 05 0f 84 6c 06    	incb   0x66c840f(%rip)        # 66d7071 <obstack_alloc_failed_handler@@Base+0x66b4fd1>
    ec62:	00 00                	add    %al,(%rax)
    ec64:	8b 43 4d             	mov    0x4d(%rbx),%eax
    ec67:	0f af cc             	imul   %esp,%ecx
    ec6a:	00 00                	add    %al,(%rax)
    ec6c:	3d 00 80 00 00       	cmp    $0x8000,%eax
    ec71:	0f 84 59 06 00 00    	je     f2d0 <__sprintf_chk@plt+0xa5f0>
    ec77:	48 21 f8             	and    %rdi,%rax
    ec7a:	8e 36                	mov    (%rsi),%?
    ec7c:	01 00                	add    %eax,(%rax)
    ec7e:	45 85 db             	test   %r11d,%r11d
    ec81:	0f 84 48 01 d8 00    	je     d8edcf <obstack_alloc_failed_handler@@Base+0xd6cd2f>
    ec87:	80 3d 72 36 01 00 00 	cmpb   $0x0,0x13672(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    ec8e:	49 ff c2             	inc    %r10
    ec91:	04 00                	add    $0x0,%al
    ec93:	00 4d 89             	add    %cl,-0x77(%rbp)
    ec96:	f4                   	hlt    
    ec97:	25 00 f0 00 4c       	and    $0x4c00f000,%eax
    ec9c:	39 db                	cmp    %ebx,%ebx
    ec9e:	29 c8                	sub    %ecx,%eax
    eca0:	00 49 f7             	add    %cl,-0x9(%rcx)
    eca3:	fc                   	cld    
    eca4:	fa                   	cli    
    eca5:	00 00                	add    %al,(%rax)
    eca7:	ba 05 00 00 00       	mov    $0x5,%edx
    ecac:	48 39 d9             	cmp    %rbx,%rcx
    ecaf:	00 4c 21 e3          	add    %cl,-0x1d(%rcx,%riz,1)
    ecb3:	61                   	(bad)  
    ecb4:	48 f7 fa             	idiv   %rdx
    ecb7:	49 f7 fe             	idiv   %r14
    ecba:	36 01 49 85          	ss add %ecx,-0x7b(%rcx)
    ecbe:	d3 6b 58             	shrl   %cl,0x58(%rbx)
    ecc1:	89 93 a8 00 00 00    	mov    %edx,0xa8(%rbx)
    ecc7:	0f 8f 4d 01 e6 00    	jg     e6ee1a <obstack_alloc_failed_handler@@Base+0xe4cd7a>
    eccd:	00 00                	add    %al,(%rax)
    eccf:	80 3d 49 4d 89 f1 fc 	cmpb   $0xfc,-0xe76b2b7(%rip)        # fffffffff18a3a1f <obstack_alloc_failed_handler@@Base+0xfffffffff188197f>
    ecd6:	0f 8f 79 fe ff ff    	jg     eb55 <__sprintf_chk@plt+0x9e75>
    ecdc:	80 3d 1d 36 01 00 00 	cmpb   $0x0,0x1361d(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    ece3:	0f 85 45 02 00 00    	jne    ef2e <__sprintf_chk@plt+0xa24e>
    ece9:	0f 8c 7d fe ff ff    	jl     eb6c <__sprintf_chk@plt+0x9e8c>
    ecef:	4d                   	rex.WRB
    ecf0:	4d 01 e4             	add    %r12,%r12
    ecf3:	8c ed                	mov    %gs,%ebp
    ecf5:	00 00                	add    %al,(%rax)
    ecf7:	00 4c 89 e7          	add    %cl,-0x19(%rcx,%rcx,4)
    ecfb:	e8 a0 f9 ff ff       	call   e6a0 <__sprintf_chk@plt+0x99c0>
    ed00:	48 83 05 c0 38 01 00 	addq   $0x1,0x138c0(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
    ed07:	01 
    ed08:	48 89 03             	mov    %rax,(%rbx)
    ed0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ed0f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    ed16:	00 00 
    ed18:	0f 85 51 0f 00 00    	jne    fc6f <__sprintf_chk@plt+0xaf8f>
    ed1e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ed22:	4c 89 e8             	mov    %r13,%rax
    ed25:	5b                   	pop    %rbx
    ed26:	41 5c                	pop    %r12
    ed28:	41 5d                	pop    %r13
    ed2a:	41 5e                	pop    %r14
    ed2c:	41 5f                	pop    %r15
    ed2e:	5d                   	pop    %rbp
    ed2f:	c3                   	ret    
    ed30:	40 84 f6             	test   %sil,%sil
    ed33:	0f 85 57 06 00 00    	jne    f390 <__sprintf_chk@plt+0xa6b0>
    ed39:	80 3d 7a 39 01 00 00 	cmpb   $0x0,0x1397a(%rip)        # 226ba <obstack_alloc_failed_handler@@Base+0x61a>
    ed40:	0f 85 ca 00 00 00    	jne    ee10 <__sprintf_chk@plt+0xa130>
    ed46:	41 83 fe 03          	cmp    $0x3,%r14d
    ed4a:	0f 84 d0 0c 00 00    	je     fa20 <__sprintf_chk@plt+0xad40>
    ed50:	0f b6 05 ba 35 01 00 	movzbl 0x135ba(%rip),%eax        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
    ed57:	84 c0                	test   %al,%al
    ed59:	0f 85 e1 0b 00 00    	jne    f940 <__sprintf_chk@plt+0xac60>
    ed5f:	80 3d 53 39 01 00 00 	cmpb   $0x0,0x13953(%rip)        # 226b9 <obstack_alloc_failed_handler@@Base+0x619>
    ed66:	0f 84 a4 0c 00 00    	je     fa10 <__sprintf_chk@plt+0xad30>
    ed6c:	ba 41 00 00 00       	mov    $0x41,%edx
    ed71:	4c 0f a3 4d 21       	bt     %r9,0x21(%rbp)
    ed76:	d3 83 3d c6 39 01    	roll   %cl,0x139c63d(%rbx)
    ed7c:	00 05 48 01 ce db    	add    %al,-0x2431feb8(%rip)        # ffffffffdbceeeca <obstack_alloc_failed_handler@@Base+0xffffffffdbccce2a>
    ed82:	00 00                	add    %al,(%rax)
    ed84:	80 3d bd 39 01 00 00 	cmpb   $0x0,0x139bd(%rip)        # 22748 <obstack_alloc_failed_handler@@Base+0x6a8>
    ed8b:	0f 84 71 02 4d 0f    	je     f4df002 <obstack_alloc_failed_handler@@Base+0xf4bcf62>
    ed91:	af                   	scas   %es:(%rdi),%eax
    ed92:	c8 b1 39 01          	enter  $0x39b1,$0x1
    ed96:	00 00                	add    %al,(%rax)
    ed98:	75 4d                	jne    ede7 <__sprintf_chk@plt+0xa107>
    ed9a:	01 d6                	add    %edx,%esi
    ed9c:	75 72                	jne    ee10 <__sprintf_chk@plt+0xa130>
    ed9e:	80 3d 14 39 01 00 00 	cmpb   $0x0,0x13914(%rip)        # 226b9 <obstack_alloc_failed_handler@@Base+0x619>
    eda5:	0f 84 65 0c 00 00    	je     fa10 <__sprintf_chk@plt+0xad30>
    edab:	45 85 f6             	test   %r14d,%r14d
    edae:	74 60                	je     ee10 <__sprintf_chk@plt+0xa130>
    edb0:	45 31 ed             	xor    %r13d,%r13d
    edb3:	41 83 fe 05          	cmp    $0x5,%r14d
    edb7:	0f 85 49 ff c6 00    	jne    c7ed06 <obstack_alloc_failed_handler@@Base+0xc5cc66>
    edbd:	00 3d 40 49 85 cb    	add    %bh,-0x347ab6c0(%rip)        # ffffffffcb863703 <obstack_alloc_failed_handler@@Base+0xffffffffcb841663>
    edc3:	03 74 0f 85          	add    -0x7b(%rdi,%rcx,1),%esi
    edc7:	b9 01 00 00 4d       	mov    $0x4d000001,%ecx
    edcc:	01 ef                	add    %ebp,%edi
    edce:	84 25 ff ff ff bf    	test   %ah,-0x40000001(%rip)        # ffffffffc000edd3 <obstack_alloc_failed_handler@@Base+0xffffffffbffecd33>
    edd4:	0e                   	(bad)  
    edd5:	00 00                	add    %al,(%rax)
    edd7:	00 e8                	add    %ch,%al
    edd9:	43 d3 ff             	rex.XB sar %cl,%r15d
    eddc:	ff 48 01             	decl   0x1(%rax)
    eddf:	c2 2f bf             	ret    $0xbf2f
    ede2:	0f                   	(bad)  
    ede3:	0f 8f 70 02 00 00    	jg     f059 <__sprintf_chk@plt+0xa379>
    ede9:	39 d8                	cmp    %ebx,%eax
    edeb:	84 c0                	test   %al,%al
    eded:	75 21                	jne    ee10 <__sprintf_chk@plt+0xa130>
    edef:	bf 11 00 00 00       	mov    $0x11,%edi
    edf4:	e8 27 4c 01 fb       	call   fffffffffb023a20 <obstack_alloc_failed_handler@@Base+0xfffffffffb001980>
    edf9:	84 c0                	test   %al,%al
    edfb:	75 13                	jne    ee10 <__sprintf_chk@plt+0xa130>
    edfd:	4d 0f 84 3f fe ff ff 	rex.WRB je ec43 <__sprintf_chk@plt+0x9f63>
    ee04:	d3 ff                	sar    %cl,%edi
    ee06:	ff 84 c0 0f 7f a7 fe 	incl   -0x15880f1(%rax,%rax,8)
    ee0d:	ff                   	(bad)  
    ee0e:	ff 90 41 0f 49 c7    	call   *-0x38b6f0bf(%rax)
    ee14:	49 ff c7             	inc    %r15
    ee17:	ff                   	(bad)  
    ee18:	ff                   	(bad)  
    ee19:	fa                   	cli    
    ee1a:	48 21 4c 89 ef       	and    %rcx,-0x11(%rcx,%rcx,4)
    ee1f:	ff                   	(bad)  
    ee20:	ff 45 0f             	incl   0xf(%rbp)
    ee23:	4d 31 ff             	xor    %r15,%r15
    ee26:	89 e5                	mov    %esp,%ebp
    ee28:	45 84 c0             	test   %r8b,%r8b
    ee2b:	0f 84 4c 09 e9 ff    	je     ffffffffffe9f77d <obstack_alloc_failed_handler@@Base+0xffffffffffe7d6dd>
    ee31:	4c 89 e7             	mov    %r12,%rdi
    ee34:	40 88 b5 0a 4d 31 cd 	mov    %sil,-0x32ceb2f6(%rbp)
    ee3b:	4d 01 d5             	add    %r10,%r13
    ee3e:	8c d1                	mov    %ss,%ecx
    ee40:	02 00                	add    (%rax),%al
    ee42:	00 1e                	add    %bl,(%rsi)
    ee44:	00 fd                	add    %bh,%ch
    ee46:	ff                   	(bad)  
    ee47:	ff                   	(bad)  
    ee48:	e8 33 5a ff ff       	call   4880 <strlen@plt>
    ee4d:	4c 89 ff             	mov    %r15,%rdi
    ee50:	49 89 c5             	mov    %rax,%r13
    ee53:	e8 28 5a 49 01       	call   14a4880 <obstack_alloc_failed_handler@@Base+0x14827e0>
    ee58:	4d 85 d0             	test   %r10,%r8
    ee5b:	48 c1 e1 26          	shl    $0x26,%rcx
    ee5f:	fd                   	std    
    ee60:	ff                   	(bad)  
    ee61:	ff 0f                	decl   (%rdi)
    ee63:	b6 95                	mov    $0x95,%dh
    ee65:	0b fd                	or     %ebp,%edi
    ee67:	ff                   	(bad)  
    ee68:	ff 49 8d             	decl   -0x73(%rcx)
    ee6b:	44 05 4c 21 d9 af    	rex.R add $0xafd9214c,%eax
    ee71:	e8 e9 b9 01 00       	call   2a85f <obstack_alloc_failed_handler@@Base+0x87bf>
    ee76:	00 4c 7f db          	add    %cl,-0x25(%rdi,%rdi,2)
    ee7a:	25 00 f0 ff ff       	and    $0xfffff000,%eax
    ee7f:	4d 39 ea             	cmp    %r13,%r10
    ee82:	f0 48 29 c7          	lock sub %rax,%rdi
    ee86:	48 39 fc             	cmp    %rdi,%rsp
    ee89:	0f 84 f1 07 00 4c    	je     4c00f680 <obstack_alloc_failed_handler@@Base+0x4bfed5e0>
    ee8f:	89 c2                	mov    %eax,%edx
    ee91:	ec                   	in     (%dx),%al
    ee92:	00 10                	add    %dl,(%rax)
    ee94:	48 f7 fe             	idiv   %rsi
    ee97:	83 8c 24 f8 0f 00 00 	orl    $0x0,0xff8(%rsp)
    ee9e:	00 
    ee9f:	eb e5                	jmp    ee86 <__sprintf_chk@plt+0xa1a6>
    eea1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eea8:	4c 8b 05 01 4d 01 f3 	mov    -0xcfeb2ff(%rip),%r8        # fffffffff3023bb0 <obstack_alloc_failed_handler@@Base+0xfffffffff3001b10>
    eeaf:	f8                   	clc    
    eeb0:	15 03 34 01 00       	adc    $0x13403,%eax
    eeb5:	49 c7 c3 85 00 00 00 	mov    $0x85,%r11
    eebc:	ef                   	out    %eax,(%dx)
    eebd:	4c 8d bd 30 fd ff 49 	lea    0x49fffd30(%rbp),%r15
    eec4:	21 f5                	and    %esi,%ebp
    eec6:	fe                   	(bad)  
    eec7:	e8 54 de ff ff       	call   cd20 <__sprintf_chk@plt+0x8040>
    eecc:	48 89 0f             	mov    %rcx,(%rdi)
    eecf:	8f                   	(bad)  
    eed0:	23 49 f7             	and    -0x9(%rcx),%ecx
    eed3:	f9                   	stc    
    eed4:	59                   	pop    %rcx
    eed5:	ff                   	(bad)  
    eed6:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
    eeda:	48 89 c6             	mov    %rax,%rsi
    eedd:	4d 01 48 21          	add    %r9,0x21(%r8)
    eee1:	d3 49 09             	rorl   %cl,0x9(%rcx)
    eee4:	c6                   	(bad)  
    eee5:	0a 01                	or     (%rcx),%al
    eee7:	00 7d 06             	add    %bh,0x6(%rbp)
    eeea:	89 05 b4 33 49 c7    	mov    %eax,-0x38b6cc4c(%rip)        # ffffffffc74a22a4 <obstack_alloc_failed_handler@@Base+0xffffffffc7480204>
    eef0:	c2 f8 02             	ret    $0x2f8
    eef3:	00 00                	add    %al,(%rax)
    eef5:	5f                   	pop    %rdi
    eef6:	fd                   	std    
    eef7:	48 31 ff             	xor    %rdi,%rdi
    eefa:	de fd                	fdivrp %st,%st(5)
    eefc:	ff                   	(bad)  
    eefd:	ff 80 3d 80 e9 e2    	incl   -0x1d167fc3(%rax)
    ef03:	fd                   	std    
    ef04:	ff                   	(bad)  
    ef05:	ff 85 85 09 00 00    	incl   0x985(%rbp)
    ef0b:	49 ff c2             	inc    %r10
    ef0e:	31 01                	xor    %eax,(%rcx)
    ef10:	49 85 ce             	test   %rcx,%r14
    ef13:	4c 21 f7             	and    %r14,%rdi
    ef16:	00 00                	add    %al,(%rax)
    ef18:	80 3d 09 48 89 d1 00 	cmpb   $0x0,-0x2e76b7f7(%rip)        # ffffffffd18a3728 <obstack_alloc_failed_handler@@Base+0xffffffffd1881688>
    ef1f:	0f 85 f3 08 00 00    	jne    f818 <__sprintf_chk@plt+0xab38>
    ef25:	80 3d d4 33 01 00 48 	cmpb   $0x48,0x133d4(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
    ef2c:	f7 fe                	idiv   %esi
    ef2e:	48 8b bb b0 49 c1 e0 	mov    -0x1f3eb650(%rbx),%rdi
    ef35:	15 8f 86 02 00       	adc    $0x2868f,%eax
    ef3a:	00 05 60 49 ff c1    	add    %al,-0x3e00b6a0(%rip)        # ffffffffc20038a0 <obstack_alloc_failed_handler@@Base+0xffffffffc1fe1800>
    ef40:	21 d8                	and    %ebx,%eax
    ef42:	62 06                	(bad)  
    ef44:	00 00                	add    %al,(%rax)
    ef46:	8b 0d c0 33 01 00    	mov    0x133c0(%rip),%ecx        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    ef4c:	85 c9                	test   %ecx,%ecx
    ef4e:	0f 85 95 fd ff ff    	jne    ece9 <__sprintf_chk@plt+0xa009>
    ef54:	4c 85 cb             	test   %r9,%rbx
    ef57:	fd                   	std    
    ef58:	ff                   	(bad)  
    ef59:	ff 00                	incl   (%rax)
    ef5b:	49 0f af d2          	imul   %r10,%rdx
    ef5f:	48 8d bd 24 fd ff ff 	lea    -0x2dc(%rbp),%rdi
    ef66:	49 b8 cd cc 4c 85 c3 	movabs $0x4cccccc3854ccccd,%r8
    ef6d:	cc cc 4c 
    ef70:	01 f6                	add    %esi,%esi
    ef72:	c8 0f 8c f8          	enter  $0x8c0f,$0xf8
    ef76:	fe                   	(bad)  
    ef77:	ff                   	(bad)  
    ef78:	ff e0                	jmp    *%rax
    ef7a:	48 89 c8             	mov    %rcx,%rax
    ef7d:	48 c1 ea 03          	shr    $0x3,%rdx
    ef81:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
    ef85:	48 01 f6             	add    %rsi,%rsi
    ef88:	48 29 7f 7a          	sub    %rdi,0x7a(%rdi)
    ef8c:	4d 31 e9             	xor    %r13,%r9
    ef8f:	c0 5e 00 00          	rcrb   $0x0,0x0(%rsi)
    ef93:	00 03                	add    %al,(%rbx)
    ef95:	48 e9 6d fd ff ff    	rex.W jmp ed08 <__sprintf_chk@plt+0xa028>
    ef9b:	d4                   	(bad)  
    ef9c:	e8 df 58 ff ff       	call   4880 <strlen@plt>
    efa1:	3b 0f                	cmp    (%rdi),%ecx
    efa3:	8c c7                	mov    %es,%edi
    efa5:	7c f0                	jl     ef97 <__sprintf_chk@plt+0xa2b7>
    efa7:	01 00                	add    %eax,(%rax)
    efa9:	00 05 99 34 01 00    	add    %al,0x13499(%rip)        # 22448 <obstack_alloc_failed_handler@@Base+0x3a8>
    efaf:	8b 0f                	mov    (%rdi),%ecx
    efb1:	84 eb                	test   %ch,%bl
    efb3:	02 00                	add    (%rax),%al
    efb5:	00 00                	add    %al,(%rax)
    efb7:	48 f7 f8             	idiv   %rax
    efba:	00 00                	add    %al,(%rax)
    efbc:	0f 85 f6 05 00 00    	jne    f5b8 <__sprintf_chk@plt+0xa8d8>
    efc2:	4c 8b 7b 40          	mov    0x40(%rbx),%r15
    efc6:	c6 85 44 fd ff ff 49 	movb   $0x49,-0x2bc(%rbp)
    efcd:	85 df                	test   %ebx,%edi
    efcf:	b5 44                	mov    $0x44,%ch
    efd1:	48 89 f2             	mov    %rsi,%rdx
    efd4:	48 b9 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rcx
    efdb:	cc cc cc 
    efde:	48 c7 c0 5c fd ff ff 	mov    $0xfffffffffffffd5c,%rax
    efe5:	0f 84 af fc ff 49    	je     4a00ec9a <obstack_alloc_failed_handler@@Base+0x49fecbfa>
    efeb:	01 d3                	add    %edx,%ebx
    efed:	49 09 df             	or     %rbx,%r15
    eff0:	0f 49 c1             	cmovns %ecx,%eax
    eff3:	e3 0a                	jrcxz  efff <__sprintf_chk@plt+0xa31f>
    eff5:	00 4d 31             	add    %cl,0x31(%rbp)
    eff8:	de ff                	fdivrp %st,%st(7)
    effa:	49 0f af f0          	imul   %r8,%rsi
    effe:	49 39 da             	cmp    %rbx,%r10
    f001:	ff f0                	push   %rax
    f003:	48 83 ef 01          	sub    $0x1,%rdi
    f007:	48 f7 e1             	mul    %rcx
    f00a:	48 89 f0             	mov    %rsi,%rax
    f00d:	48 c1 ea 03          	shr    $0x3,%rdx
    f011:	49 c7 c3 e8 ff 4c 85 	mov    $0xffffffff854cffe8,%r11
    f018:	da 29                	fisubrl (%rcx)
    f01a:	c0 83 c0 30 e9 13 03 	rolb   $0x3,0x13e930c0(%rbx)
    f021:	00 00                	add    %al,(%rax)
    f023:	48 89 d6             	mov    %rdx,%rsi
    f026:	48 83 f8 09          	cmp    $0x9,%rax
    f02a:	4d 39 d6             	cmp    %r10,%r14
    f02d:	4f 58                	rex.WRXB pop %r8
    f02f:	ff                   	(bad)  
    f030:	ff 44 8b 0d          	incl   0xd(%rbx,%rcx,4)
    f034:	00 34 49             	add    %dh,(%rcx,%rcx,2)
    f037:	31 cc                	xor    %ecx,%esp
    f039:	39 c8                	cmp    %ecx,%eax
    f03b:	7e 09                	jle    f046 <__sprintf_chk@plt+0xa366>
    f03d:	89 4d 0f             	mov    %ecx,0xf(%rbp)
    f040:	af                   	scas   %es:(%rdi),%eax
    f041:	c7                   	(bad)  
    f042:	49 f7 48 c1 e1 38 ff 	testq  $0xffffffffc6ff38e1,-0x3f(%r8)
    f049:	c6 
    f04a:	85 0f                	test   %ecx,(%rdi)
    f04c:	8c d3                	mov    %ss,%ebx
    f04e:	01 00                	add    %eax,(%rax)
    f050:	00 f7                	add    %dh,%bh
    f052:	ff c7                	inc    %edi
    f054:	4c 89 f7             	mov    %r14,%rdi
    f057:	49 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r8
    f05e:	cc cc cc 
    f061:	48 c1 0f 84          	rorq   $0x84,(%rdi)
    f065:	20 fe                	and    %bh,%dh
    f067:	ff                   	(bad)  
    f068:	ff 4c 89 e2          	decl   -0x1e(%rcx,%rcx,4)
    f06c:	00 00                	add    %al,(%rax)
    f06e:	00 00                	add    %al,(%rax)
    f070:	49 0f 8c 3f fe ff ff 	rex.WB jl eeb6 <__sprintf_chk@plt+0xa1d6>
    f077:	49 f7 e0             	mul    %r8
    f07a:	48 89 c8             	mov    %rcx,%rax
    f07d:	48 c1 ea 03          	shr    $0x3,%rdx
    f081:	49 39 de             	cmp    %rbx,%r14
    f084:	db 48 48             	fisttpl 0x48(%rax)
    f087:	c1 e2 1d             	shl    $0x1d,%edx
    f08a:	f0 83 c0 49          	lock add $0x49,%eax
    f08e:	c1 ee 35             	shr    $0x35,%esi
    f091:	89 c8                	mov    %ecx,%eax
    f093:	48 89 d1             	mov    %rdx,%rcx
    f096:	48 83 49 0f af       	orq    $0xffffffffffffffaf,0xf(%rcx)
    f09b:	4d 31 fc             	xor    %r15,%r12
    f09e:	8d 0c 49             	lea    (%rcx,%rcx,2),%ecx
    f0a1:	0f af fc             	imul   %esp,%edi
    f0a4:	d8 57 ff             	fcoms  -0x1(%rdi)
    f0a7:	ff 8b 15 86 33 01    	decl   0x1338615(%rbx)
    f0ad:	00 75 d7             	add    %dh,-0x29(%rbp)
    f0b0:	4d 21 d9             	and    %r11,%r9
    f0b3:	ff                   	(bad)  
    f0b4:	ff                   	(bad)  
    f0b5:	39 d0                	cmp    %edx,%eax
    f0b7:	7e 08                	jle    f0c1 <__sprintf_chk@plt+0xa3e1>
    f0b9:	89 05 49 f7 fc 49    	mov    %eax,0x49fcf749(%rip)        # 49fde808 <obstack_alloc_failed_handler@@Base+0x49fbc768>
    f0bf:	ff c0                	inc    %eax
    f0c1:	41 8d 44 11 49       	lea    0x49(%r9,%rdx,1),%eax
    f0c6:	c7 c1 bf fc 49 c1    	mov    $0xc149fcbf,%ecx
    f0cc:	e2 25                	loop   f0f3 <__sprintf_chk@plt+0xa413>
    f0ce:	17                   	(bad)  
    f0cf:	fc                   	cld    
    f0d0:	ff                   	(bad)  
    f0d1:	ff                   	(bad)  
    f0d2:	e9 25 05 00 00       	jmp    f5fc <__sprintf_chk@plt+0xa91c>
    f0d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f0de:	00 00 
    f0e0:	41 83 0f 85          	orl    $0xffffff85,(%r15)
    f0e4:	aa                   	stos   %al,%es:(%rdi)
    f0e5:	02 00                	add    (%rax),%al
    f0e7:	00 ff                	add    %bh,%bh
    f0e9:	49 0f 84 16 49 09 ff 	rex.WB je ffffffffff0a3a06 <obstack_alloc_failed_handler@@Base+0xffffffffff081966>
    f0f0:	21 c9                	and    %ecx,%ecx
    f0f2:	4c 89 ee             	mov    %r13,%rsi
    f0f5:	bf 9c ff ff ff       	mov    $0xffffff9c,%edi
    f0fa:	41 bf 0f 85 ba fe    	mov    $0xfeba850f,%r15d
    f100:	ff                   	(bad)  
    f101:	ff 85 ff 4c 39 ea    	incl   -0x15c6b301(%rbp)
    f107:	0f 84 46 fb 74 67    	je     6775ec53 <obstack_alloc_failed_handler@@Base+0x6773cbb3>
    f10d:	ba 05 00 00 00       	mov    $0x5,%edx
    f112:	48 8d 49 09          	lea    0x9(%rcx),%rcx
    f116:	dd 00                	fldl   (%rax)
    f118:	00 31                	add    %dh,(%rcx)
    f11a:	49 c1 e7 1c          	shl    $0x1c,%r15
    f11e:	ff                   	(bad)  
    f11f:	ff 44 8b bd          	incl   -0x43(%rbx,%rcx,4)
    f123:	0c fd                	or     $0xfd,%al
    f125:	ff                   	(bad)  
    f126:	ff 4c 89 4d          	decl   0x4d(%rcx,%rcx,4)
    f12a:	31 d4                	xor    %edx,%esp
    f12c:	e6 48                	out    %al,$0x48
    f12e:	89 c6                	mov    %eax,%esi
    f130:	41                   	rex.B
    f131:	4d 0f af cf          	imul   %r15,%r9
    f135:	27                   	(bad)  
    f136:	b0 0f                	mov    $0xf,%al
    f138:	8f                   	(bad)  
    f139:	bb 02 00 00 85       	mov    $0x85000002,%ebx
    f13e:	c9                   	leave  
    f13f:	fb                   	sti    
    f140:	ff                   	(bad)  
    f141:	ff                   	(bad)  
    f142:	e9 b1 fb ff 48       	jmp    4900ecf8 <obstack_alloc_failed_handler@@Base+0x48fecc58>
    f147:	39 cf                	cmp    %ecx,%edi
    f149:	1f                   	(bad)  
    f14a:	84 00                	test   %al,(%rax)
    f14c:	00 00                	add    %al,(%rax)
    f14e:	00 00                	add    %al,(%rax)
    f150:	48 8b 05 c9 31 01 00 	mov    0x131c9(%rip),%rax        # 22320 <obstack_alloc_failed_handler@@Base+0x280>
    f157:	48 39 43 18          	cmp    %rax,0x18(%rbx)
    f15b:	0f 4d 89 fd 00 00 4c 	cmovge 0x4c0000fd(%rcx),%ecx
    f162:	8d b3 b0 00 00 00    	lea    0xb0(%rbx),%esi
    f168:	4c                   	rex.WR
    f169:	4d 01 fa             	add    %r15,%r10
    f16c:	89 49 39             	mov    %ecx,0x39(%rcx)
    f16f:	c3                   	ret    
    f170:	ff 49 c1             	decl   -0x3f(%rcx)
    f173:	ea                   	(bad)  
    f174:	4c 89 d3             	mov    %r10,%rbx
    f177:	e8 e4 5a ff ff       	call   4c60 <getfilecon@plt>
    f17c:	4c 89 f6             	mov    %r14,%rsi
    f17f:	89 c7                	mov    %eax,%edi
    f181:	e8 ea b1 ff ff       	call   a370 <__sprintf_chk@plt+0x5690>
    f186:	85 4d 21             	test   %ecx,0x21(%rbp)
    f189:	c6                   	(bad)  
    f18a:	e9 02 00 00 48       	jmp    4800f191 <obstack_alloc_failed_handler@@Base+0x47fed0f1>
    f18f:	8b b3 b0 00 4d 21    	mov    0x214d00b0(%rbx),%esi
    f195:	fd                   	std    
    f196:	8d 48 01             	lea    0x1(%rax),%ecx
    f199:	ce                   	(bad)  
    f19a:	00 00                	add    %al,(%rax)
    f19c:	e8 4f 49 01 fa       	call   fffffffffa023af0 <obstack_alloc_failed_handler@@Base+0xfffffffffa001a50>
    f1a1:	8b 15 65 31 74 98    	mov    -0x678bce9b(%rip),%edx        # ffffffff9875230c <obstack_alloc_failed_handler@@Base+0xffffffff9873026c>
    f1a7:	85 d2                	test   %edx,%edx
    f1a9:	0f 84 71 04 00 00    	je     f620 <__sprintf_chk@plt+0xa940>
    f1af:	85 c0                	test   %eax,%eax
    f1b1:	0f 84 15 03 48 ff    	je     ffffffffff48f4cc <obstack_alloc_failed_handler@@Base+0xffffffffff46d42c>
    f1b7:	c2 4d 29             	ret    $0x294d
    f1ba:	dc 05 8b 32 01 00    	faddl  0x1328b(%rip)        # 2244b <obstack_alloc_failed_handler@@Base+0x3ab>
    f1c0:	01 c7                	add    %eax,%edi
    f1c2:	0f 85 97 00 00 00    	jne    f25f <__sprintf_chk@plt+0xa57f>
    f1c8:	00 00                	add    %al,(%rax)
    f1ca:	00 25 00 f0 00 00    	add    %ah,0xf000(%rip)        # 1e1d0 <_obstack_memory_used@@Base+0xda20>
    f1d0:	3d 00 a0 00 00       	cmp    $0xa000,%eax
    f1d5:	0f 85 cc fa ff ff    	jne    eca7 <__sprintf_chk@plt+0x9fc7>
    f1db:	80 3d 67 35 01 00 00 	cmpb   $0x0,0x13567(%rip)        # 22749 <obstack_alloc_failed_handler@@Base+0x6a9>
    f1e2:	0f 84 db 00 00 00    	je     f2c3 <__sprintf_chk@plt+0xa5e3>
    f1e8:	48 8b 73 48          	mov    0x48(%rbx),%rsi
    f1ec:	4c 89 ef             	mov    %r13,%rdi
    f1ef:	e8 4c 49 21 f7       	call   fffffffff7223b40 <obstack_alloc_failed_handler@@Base+0xfffffffff7201aa0>
    f1f4:	48 89 43 0f          	mov    %rax,0xf(%rbx)
    f1f8:	8f                   	(bad)  
    f1f9:	bc 01 00 00 c0       	mov    $0xc0000001,%esp
    f1fe:	0f 84 0f 85 81 02    	je     2827713 <obstack_alloc_failed_handler@@Base+0x2805673>
    f204:	00 00                	add    %al,(%rax)
    f206:	00 2f                	add    %ch,(%rdi)
    f208:	48 f7 fe             	idiv   %rsi
    f20b:	00 00                	add    %al,(%rax)
    f20d:	00 41 0f             	add    %al,0xf(%rcx)
    f210:	b6 45                	mov    $0x45,%dh
    f212:	00 31                	add    %dh,(%rcx)
    f214:	f6 0f 8c             	testb  $0x8c,(%rdi)
    f217:	67 fd                	addr32 std 
    f219:	ff                   	(bad)  
    f21a:	ff 0f                	decl   (%rdi)
    f21c:	94                   	xchg   %eax,%esp
    f21d:	c6                   	(bad)  
    f21e:	75 0d                	jne    f22d <__sprintf_chk@plt+0xa54d>
    f220:	4d 85 c8             	test   %r9,%r8
    f223:	46 01 49 83          	rex.RX add %r9d,-0x7d(%rcx)
    f227:	c6 01 48             	movb   $0x48,(%rcx)
    f22a:	ff c0                	inc    %eax
    f22c:	f3 84 c0             	repz test %al,%al
    f22f:	74 39                	je     f26a <__sprintf_chk@plt+0xa58a>
    f231:	4c 89 4d 21          	mov    %r9,0x21(%rbp)
    f235:	d3 eb                	shr    %cl,%ebx
    f237:	49 0f af cd          	imul   %r13,%rcx
    f23b:	00 00                	add    %al,(%rax)
    f23d:	00 00                	add    %al,(%rax)
    f23f:	00 84 c9 74 05 49 4c 	add    %al,0x4c490574(%rcx,%rcx,8)
    f246:	31 e7                	xor    %esp,%edi
    f248:	c9                   	leave  
    f249:	0f b6 42 4c          	movzbl 0x4c(%rdx),%eax
    f24d:	21 ce                	and    %ecx,%esi
    f24f:	c2 01 84             	ret    $0x8401
    f252:	4d 89 cf             	mov    %r9,%r15
    f255:	3c 2f                	cmp    $0x2f,%al
    f257:	75 e7                	jne    f240 <__sprintf_chk@plt+0xa560>
    f259:	0f 49 ff             	cmovns %edi,%edi
    f25c:	c7                   	(bad)  
    f25d:	48 83 c2 01          	add    $0x1,%rdx
    f261:	b9 49 c1 ef 49       	mov    $0x49efc149,%ecx
    f266:	ff c7                	inc    %edi
    f268:	75 eb                	jne    f255 <__sprintf_chk@plt+0xa575>
    f26a:	4d 29 ee             	sub    %r13,%r14
    f26d:	eb 14                	jmp    f283 <__sprintf_chk@plt+0xa5a3>
    f26f:	90                   	nop
    f270:	48 0f 85 3d fe ff ff 	rex.W jne f0b4 <__sprintf_chk@plt+0xa3d4>
    f277:	e1 46                	loope  f2bf <__sprintf_chk@plt+0xa5df>
    f279:	ff 0f                	decl   (%rdi)
    f27b:	49 39 c2             	cmp    %rax,%r10
    f27e:	00 00                	add    %al,(%rax)
    f280:	49 89 c6             	mov    %rax,%r14
    f283:	48                   	rex.W
    f284:	49 39 49 c1          	cmp    %rcx,-0x3f(%r9)
    f288:	ef                   	out    %eax,(%dx)
    f289:	04 f6                	add    $0xf6,%al
    f28b:	0f 85 af 04 00 00    	jne    f740 <__sprintf_chk@plt+0xaa60>
    f291:	4c 89 48 31          	mov    %r9,0x31(%rax)
    f295:	de f4                	fdivp  %st,%st(4)
    f297:	ff                   	(bad)  
    f298:	ff 49 89             	decl   -0x77(%rcx)
    f29b:	c2 48 c7             	ret    $0xc748
    f29e:	c0 8f fd ff ff f1 00 	rorb   $0x0,-0xe000003(%rdi)
    f2a5:	45 31 d2             	xor    %r10d,%r10d
    f2a8:	4c 89 d7             	mov    %r10,%rdi
    f2ab:	e8 d0 53 ff ff       	call   4680 <free@plt>
    f2b0:	8b 43 0f             	mov    0xf(%rbx),%eax
    f2b3:	8f                   	(bad)  
    f2b4:	33 fe                	xor    %esi,%edi
    f2b6:	ff                   	(bad)  
    f2b7:	ff                   	(bad)  
    f2b8:	3d 00 48 c1 e1       	cmp    $0xe1c14800,%eax
    f2bd:	0f 85 e4 0f 84 01    	jne    18502a7 <obstack_alloc_failed_handler@@Base+0x182e207>
    f2c3:	03 00                	add    (%rax),%eax
    f2c5:	00 00                	add    %al,(%rax)
    f2c7:	00 e9                	add    %ch,%cl
    f2c9:	ea                   	(bad)  
    f2ca:	f9                   	stc    
    f2cb:	ff                   	(bad)  
    f2cc:	ff 0f                	decl   (%rdi)
    f2ce:	1f                   	(bad)  
    f2cf:	00 80 3d 31 4c 0f    	add    %al,0xf4c313d(%rax)
    f2d5:	8f                   	(bad)  
    f2d6:	1e                   	(bad)  
    f2d7:	fc                   	cld    
    f2d8:	ff                   	(bad)  
    f2d9:	ff e5                	jmp    *%rbp
    f2db:	4d 09 cc             	or     %r9,%r12
    f2de:	15 00 00 00 e8       	adc    $0xe8000000,%eax
    f2e3:	39 ce                	cmp    %ecx,%esi
    f2e5:	ff                   	(bad)  
    f2e6:	ff 84 c0 0f 84 88 f9 	incl   -0x6777bf1(%rax,%rax,8)
    f2ed:	ff                   	(bad)  
    f2ee:	ff                   	(bad)  
    f2ef:	e8 1c 0f 8c 22       	call   228d0210 <obstack_alloc_failed_handler@@Base+0x228ae170>
    f2f4:	fe                   	(bad)  
    f2f5:	ff                   	(bad)  
    f2f6:	ff 18                	lcall  *(%rax)
    f2f8:	4d 31 f5             	xor    %r14,%r13
    f2fb:	4c 39 e0             	cmp    %r12,%rax
    f2fe:	00 c7                	add    %al,%bh
    f300:	00 5f 00             	add    %bl,0x0(%rdi)
    f303:	00 00                	add    %al,(%rax)
    f305:	74 07                	je     f30e <__sprintf_chk@plt+0xa62e>
    f307:	4c 89 35 1a 30 01 00 	mov    %r14,0x1301a(%rip)        # 22328 <obstack_alloc_failed_handler@@Base+0x288>
    f30e:	c6 83 48 c1 e6 2a 00 	movb   $0x0,0x2ae6c148(%rbx)
    f315:	e9 5d f9 4d 01       	jmp    14eec77 <obstack_alloc_failed_handler@@Base+0x14ccbd7>
    f31a:	f5                   	cmc    
    f31b:	0f 49 09             	cmovns (%rcx),%ecx
    f31e:	f0 4c 31 eb          	lock xor %r13,%rbx
    f322:	c6                   	(bad)  
    f323:	fd                   	std    
    f324:	4c 39 f2             	cmp    %r14,%rdx
    f327:	0f 84 fe f8 0f 85    	je     ffffffff8510ec2b <obstack_alloc_failed_handler@@Base+0xffffffff850ecb8b>
    f32d:	28 02                	sub    %al,(%rdx)
    f32f:	00 00                	add    %al,(%rax)
    f331:	e9 8b fd ff ff       	jmp    f0c1 <__sprintf_chk@plt+0xa3e1>
    f336:	84 10                	test   %dl,(%rax)
    f338:	fe                   	(bad)  
    f339:	ff                   	(bad)  
    f33a:	ff 4d 49             	decl   0x49(%rbp)
    f33d:	85 c0                	test   %eax,%eax
    f33f:	95                   	xchg   %eax,%ebp
    f340:	00 49 85             	add    %cl,-0x7b(%rcx)
    f343:	d9 e8                	fld1   
    f345:	b7 83                	mov    $0x83,%bh
    f347:	ff                   	(bad)  
    f348:	ff 44 8b 95          	incl   -0x6b(%rbx,%rcx,4)
    f34c:	49 0f af ff          	imul   %r15,%rdi
    f350:	41 83 fa 03          	cmp    $0x3,%r10d
    f354:	74 1d                	je     f373 <__sprintf_chk@plt+0xa693>
    f356:	85 c0                	test   %eax,%eax
    f358:	0f 88 32 06 00 00    	js     f990 <__sprintf_chk@plt+0xacb0>
    f35e:	8b 53 30             	mov    0x30(%rbx),%edx
    f361:	4d 85 f4             	test   %r14,%r12
    f364:	f0 00 00             	lock add %al,(%rax)
    f367:	81 fa 00 40 00 48    	cmp    $0x48004000,%edx
    f36d:	f7 ff                	idiv   %edi
    f36f:	b8 f8 ff 49 c7       	mov    $0xc749fff8,%eax
    f374:	c1 f6 fd             	shl    $0xfd,%esi
    f377:	ff                   	(bad)  
    f378:	ff 00                	incl   (%rax)
    f37a:	00 44 0f b6          	add    %al,-0x4a(%rdi,%rcx,1)
    f37e:	bd 0c fd ff ff       	mov    $0xfffffd0c,%ebp
    f383:	e9 cb 49 01 4d       	jmp    4d023d53 <obstack_alloc_failed_handler@@Base+0x4d001cb3>
    f388:	89 df                	mov    %ebx,%edi
    f38a:	09 d0                	or     %edx,%eax
    f38c:	c6 00 00             	movb   $0x0,(%rax)
    f38f:	00 41 0f             	add    %al,0xf(%rcx)
    f392:	b6 14                	mov    $0x14,%dh
    f394:	24 80                	and    $0x80,%al
    f396:	fa                   	cli    
    f397:	2f                   	(bad)  
    f398:	0f 49 0f             	cmovns (%rdi),%ecx
    f39b:	af                   	scas   %es:(%rdi),%eax
    f39c:	df 00                	filds  (%rax)
    f39e:	45 0f b6 07          	movzbl (%r15),%r8d
    f3a2:	4d 0f 8f 56 fe ff ff 	rex.WRB jg f1ff <__sprintf_chk@plt+0xa51f>
    f3a9:	85 df                	test   %ebx,%edi
    f3ab:	fa                   	cli    
    f3ac:	ff                   	(bad)  
    f3ad:	ff 4c 89 ef          	decl   -0x11(%rcx,%rcx,4)
    f3b1:	e8 48 89 cb 00       	call   cc7cfe <obstack_alloc_failed_handler@@Base+0xca5c5e>
    f3b6:	48 89 43 10          	mov    %rax,0x10(%rbx)
    f3ba:	4c 0f af cf          	imul   %rdi,%r9
    f3be:	85 36                	test   %esi,(%rsi)
    f3c0:	f8                   	clc    
    f3c1:	ff                   	(bad)  
    f3c2:	ff 31                	push   (%rcx)
    f3c4:	ff                   	(bad)  
    f3c5:	ba 05 00 00 00       	mov    $0x5,%edx
    f3ca:	48 8d 35 5b 4c 21 ea 	lea    -0x15deb3a5(%rip),%rsi        # ffffffffea22402c <obstack_alloc_failed_handler@@Base+0xffffffffea201f8c>
    f3d1:	e8 8a 54 ff ff       	call   4860 <dcgettext@plt>
    f3d6:	0f b6 bd 0c fd 0f 8f 	movzbl -0x70f002f4(%rbp),%edi
    f3dd:	fe                   	(bad)  
    f3de:	fd                   	std    
    f3df:	ff                   	(bad)  
    f3e0:	ff 89 c6 e8 78 ad    	decl   -0x5287173a(%rcx)
    f3e6:	ff                   	(bad)  
    f3e7:	ff                   	(bad)  
    f3e8:	e9 0c 4d 09 f2       	jmp    fffffffff20a40f9 <obstack_alloc_failed_handler@@Base+0xfffffffff2082059>
    f3ed:	0f 1f 00             	nopl   (%rax)
    f3f0:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    f3f4:	48 c7 c0 34 02 00 00 	mov    $0x234,%rax
    f3fb:	48 0f 4d 89 c4 4c e9 	cmovge -0x3116b33c(%rcx),%rcx
    f402:	ce 
    f403:	01 00                	add    %eax,(%rax)
    f405:	00 0f                	add    %cl,(%rdi)
    f407:	cc                   	int3   
    f408:	cc                   	int3   
    f409:	cc                   	int3   
    f40a:	cc                   	int3   
    f40b:	cc                   	int3   
    f40c:	0f 1f 40 00          	nopl   0x0(%rax)
    f410:	48 89 c8             	mov    %rcx,%rax
    f413:	0f 85 0f 8f 75 fe    	jne    fffffffffe768328 <obstack_alloc_failed_handler@@Base+0xfffffffffe746288>
    f419:	ff                   	(bad)  
    f41a:	ff 89 c8 49 ff c4    	decl   -0x3b00b638(%rcx)
    f420:	03 48 8d             	add    -0x73(%rax),%ecx
    f423:	34 92                	xor    $0x92,%al
    f425:	48 01 4c 89 cb       	add    %rcx,-0x35(%rcx,%rcx,4)
    f42a:	29 d9                	sub    %ebx,%ecx
    f42c:	c0 30 88             	shlb   $0x88,(%rax)
    f42f:	07                   	(bad)  
    f430:	49 39 c5             	cmp    %rax,%r13
    f433:	48 89 d1             	mov    %rdx,%rcx
    f436:	48 83 f8 09          	cmp    $0x9,%rax
    f43a:	77 d4                	ja     f410 <__sprintf_chk@plt+0xa730>
    f43c:	e8 3f 54 ff ff       	call   4880 <strlen@plt>
    f441:	3b 74 6e 2e          	cmp    0x2e(%rsi,%rbp,2),%esi
    f445:	01 00                	add    %eax,(%rax)
    f447:	0f 8e ab f8 ff ff    	jle    ecf8 <__sprintf_chk@plt+0xa018>
    f44d:	89 05 48 29 d6 00    	mov    %eax,0xd62948(%rip)        # d71d9b <obstack_alloc_failed_handler@@Base+0xd4fcfb>
    f453:	e9 a0 f8 ff ff       	jmp    ecf8 <__sprintf_chk@plt+0xa018>
    f458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f45f:	00 
    f460:	e8 2b 58 ff ff       	call   4c90 <lgetfilecon@plt>
    f465:	4c 89 f6             	mov    %r14,%rsi
    f468:	89 c7                	mov    %eax,%edi
    f46a:	e8 01 af ff 48       	call   4900a370 <obstack_alloc_failed_handler@@Base+0x48fe82d0>
    f46f:	21 ca                	and    %ecx,%edx
    f471:	f8                   	clc    
    f472:	48 f7 f9             	idiv   %rcx
    f475:	29 db                	sub    %ebx,%ebx
    f477:	00 00                	add    %al,(%rax)
    f479:	52                   	push   %rdx
    f47a:	ff 4c 39 c6          	decl   -0x3a(%rcx,%rdi,1)
    f47e:	c7                   	(bad)  
    f47f:	8b 00                	mov    (%rax),%eax
    f481:	83 f8 5f             	cmp    $0x5f,%eax
    f484:	0f 94 c1             	sete   %cl
    f487:	83 f8 4c             	cmp    $0x4c,%eax
    f48a:	21 ea                	and    %ebp,%edx
    f48c:	4c 01 e1             	add    %r12,%rcx
    f48f:	c1 ea 03             	shr    $0x3,%edx
    f492:	83 e0 ef             	and    $0xffffffef,%eax
    f495:	74 04                	je     f49b <__sprintf_chk@plt+0xa7bb>
    f497:	84 c9                	test   %cl,%cl
    f499:	74 0b                	je     f4a6 <__sprintf_chk@plt+0xa7c6>
    f49b:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f49f:	48 89 05 7a 2e 01 00 	mov    %rax,0x12e7a(%rip)        # 22320 <obstack_alloc_failed_handler@@Base+0x280>
    f4a6:	48 8d 05 77 2b 01 00 	lea    0x12b77(%rip),%rax        # 22024 <_obstack_memory_used@@Base+0x11874>
    f4ad:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    f4b4:	84 d2                	test   %dl,%dl
    f4b6:	0f 49 89 f6 00 00 44 	cmovns 0x440000f6(%rcx),%ecx
    f4bd:	8b 15 49 2e 01 00    	mov    0x12e49(%rip),%edx        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
    f4c3:	45                   	rex.RB
    f4c4:	49 31 f2             	xor    %rsi,%r10
    f4c7:	4d 0f e9 b6 fe ff ff 	rex.WRB psubsw -0x43000002(%r14),%mm6
    f4ce:	bc 
    f4cf:	00 00                	add    %al,(%rax)
    f4d1:	00 48 31             	add    %cl,0x31(%rax)
    f4d4:	fb                   	sti    
    f4d5:	48 f7 fe             	idiv   %rsi
    f4d8:	49 f7 fd             	idiv   %r13
    f4db:	00 00                	add    %al,(%rax)
    f4dd:	00 3d 00 a0 0f 84    	add    %bh,-0x7bf06000(%rip)        # ffffffff841094e3 <obstack_alloc_failed_handler@@Base+0xffffffff840e7443>
    f4e3:	41 03 00             	add    (%r8),%eax
    f4e6:	00 ff                	add    %bh,%bh
    f4e8:	ff 44 8b 49          	incl   0x49(%rbx,%rcx,4)
    f4ec:	ff c2                	inc    %edx
    f4ee:	49 89 d8             	mov    %rbx,%r8
    f4f1:	48 85 c7             	test   %rax,%rdi
    f4f4:	84 ef                	test   %ch,%bh
    f4f6:	4d 29 f8             	sub    %r15,%r8
    f4f9:	e9 dd 49 0f 8f       	jmp    ffffffff8f103edb <obstack_alloc_failed_handler@@Base+0xffffffff8f0e1e3b>
    f4fe:	8b 02                	mov    (%rdx),%eax
    f500:	00 00                	add    %al,(%rax)
    f502:	cf                   	iret   
    f503:	00 00                	add    %al,(%rax)
    f505:	49 f7 e5             	mul    %r13
    f508:	0f 90 c2             	seto   %dl
    f50b:	0f b6 d2             	movzbl %dl,%edx
    f50e:	48 85 c0             	test   %rax,%rax
    f511:	0f 88 51 04 00 00    	js     f968 <__sprintf_chk@plt+0xac88>
    f517:	48 85 4d 89          	test   %rcx,-0x77(%rbp)
    f51b:	c4                   	(bad)  
    f51c:	48 04 e9             	rex.W add $0xe9,%al
    f51f:	49 c1 e8 23          	shr    $0x23,%r8
    f523:	ad                   	lods   %ds:(%rsi),%eax
    f524:	00 48 8d             	add    %cl,-0x73(%rax)
    f527:	04 80                	add    $0x80,%al
    f529:	48                   	rex.W
    f52a:	4d 29 cc             	sub    %r9,%r12
    f52d:	48 89 c2             	mov    %rax,%rdx
    f530:	75 09                	jne    f53b <__sprintf_chk@plt+0xa85b>
    f532:	48 85 ff             	test   %rdi,%rdi
    f535:	0f 85 7d 05 4d 29    	jne    294dfab8 <obstack_alloc_failed_handler@@Base+0x294bda18>
    f53b:	48 21 d3             	and    %rdx,%rbx
    f53e:	48 89 95 00 fd ff ff 	mov    %rdx,-0x300(%rbp)
    f545:	e8 c6 55 ff ff       	call   4b10 <realloc@plt>
    f54a:	48 89 c7             	mov    %rax,%rdi
    f54d:	48 85 c0             	test   %rax,%rax
    f550:	eb 7b                	jmp    f5cd <__sprintf_chk@plt+0xa8ed>
    f552:	0f 8c c4 49 48 21    	jl     21493f1c <obstack_alloc_failed_handler@@Base+0x21471e7c>
    f558:	db fe                	(bad)  
    f55a:	85 d2                	test   %edx,%edx
    f55c:	0f 85 06 04 00 00    	jne    f968 <__sprintf_chk@plt+0xac88>
    f562:	48 8d 0c 1b          	lea    (%rbx,%rbx,1),%rcx
    f566:	48 89 3d 49 09 dd 00 	mov    %rdi,0xdd0949(%rip)        # ddfeb6 <obstack_alloc_failed_handler@@Base+0xdbde16>
    f56d:	48 89 0d 64 49 4c 31 	mov    %rcx,0x314c4964(%rip)        # 314d3ed8 <obstack_alloc_failed_handler@@Base+0x314b1e38>
    f574:	c9                   	leave  
    f575:	e7 f5                	out    %eax,$0xf5
    f577:	ff                   	(bad)  
    f578:	ff 0f                	decl   (%rdi)
    f57a:	1f                   	(bad)  
    f57b:	4d 85 f2             	test   %r14,%r10
    f57e:	00 00                	add    %al,(%rax)
    f580:	4c 89 e7             	mov    %r12,%rdi
    f583:	e8 68 ae ff ff       	call   a3f0 <__sprintf_chk@plt+0x5710>
    f588:	0f b6 d0             	movzbl %al,%edx
    f58b:	89 93 c4 00 00 00    	mov    %edx,0xc4(%rbx)
    f591:	84 c0                	test   %al,%al
    f593:	0f 84 29 f6 ff ff    	je     ebc2 <__sprintf_chk@plt+0x9ee2>
    f599:	c6                   	(bad)  
    f59a:	49 01 f8             	add    %rdi,%r8
    f59d:	c4                   	(bad)  
    f59e:	00 0f                	add    %cl,(%rdi)
    f5a0:	85 58 fd             	test   %ebx,-0x3(%rax)
    f5a3:	ff                   	(bad)  
    f5a4:	ff c7                	inc    %edi
    f5a6:	48 ff c1             	inc    %rcx
    f5a9:	ce                   	(bad)  
    f5aa:	00 00                	add    %al,(%rax)
    f5ac:	00 00                	add    %al,(%rax)
    f5ae:	e9 93 f9 49 ff       	jmp    ffffffffff4aef46 <obstack_alloc_failed_handler@@Base+0xffffffffff48cea6>
    f5b3:	c3                   	ret    
    f5b4:	1f                   	(bad)  
    f5b5:	44 00 00             	add    %r8b,(%rax)
    f5b8:	0f 8f a7 02 00 00    	jg     f865 <__sprintf_chk@plt+0xab85>
    f5be:	00 48 8b             	add    %cl,-0x75(%rax)
    f5c1:	7b 48                	jnp    f60b <__sprintf_chk@plt+0xa92b>
    f5c3:	48 8d b5 4c 01 f6 ff 	lea    -0x9feb4(%rbp),%rsi
    f5ca:	b9 01 00 00 00       	mov    $0x1,%ecx
    f5cf:	49 c1 e9 52          	shr    $0x52,%r9
    f5d3:	fe                   	(bad)  
    f5d4:	ff                   	(bad)  
    f5d5:	ff 48 c7             	decl   -0x39(%rax)
    f5d8:	c6                   	(bad)  
    f5d9:	09 fd                	or     %edi,%ebp
    f5db:	ff                   	(bad)  
    f5dc:	ff                   	(bad)  
    f5dd:	eb 4e                	jmp    f62d <__sprintf_chk@plt+0xa94d>
    f5df:	c6                   	(bad)  
    f5e0:	49 39 dc             	cmp    %rbx,%r12
    f5e3:	ff                   	(bad)  
    f5e4:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
    f5e8:	48 89 c6             	mov    %rax,%rsi
    f5eb:	e8 30 49 85 cd       	call   ffffffffcd863f20 <obstack_alloc_failed_handler@@Base+0xffffffffcd841e80>
    f5f0:	39 05 3a 2e 01 00    	cmp    %eax,0x12e3a(%rip)        # 22430 <obstack_alloc_failed_handler@@Base+0x390>
    f5f6:	0f 8d ed f6 ff ff    	jge    ece9 <__sprintf_chk@plt+0xa009>
    f5fc:	0f 85 51 02 00 00    	jne    f853 <__sprintf_chk@plt+0xab73>
    f602:	31 e5                	xor    %esp,%ebp
    f604:	f6 ff                	idiv   %bh
    f606:	4d 39 eb             	cmp    %r13,%r11
    f609:	1f                   	(bad)  
    f60a:	84 00                	test   %al,(%rax)
    f60c:	48 01 c8             	add    %rcx,%rax
    f60f:	09 f3                	or     %esi,%ebx
    f611:	48 f7 ff             	idiv   %rdi
    f614:	96                   	xchg   %eax,%esi
    f615:	fd                   	std    
    f616:	ff 4d 01             	decl   0x1(%rbp)
    f619:	cb                   	lret   
    f61a:	84 00                	test   %al,(%rax)
    f61c:	7f 1b                	jg     f639 <__sprintf_chk@plt+0xa959>
    f61e:	09 f4                	or     %esi,%esp
    f620:	85 c0                	test   %eax,%eax
    f622:	41 0f 95 c6          	setne  %r14b
    f626:	e8 e5 50 ff ff       	call   4710 <__errno_location@plt>
    f62b:	49 89 c7             	mov    %rax,%r15
    f62e:	48                   	rex.W
    f62f:	49 ff c7             	inc    %r15
    f632:	e9 56 03 00 0f       	jmp    f00f98d <obstack_alloc_failed_handler@@Base+0xefed8ed>
    f637:	85 16                	test   %edx,(%rsi)
    f639:	01 00                	add    %eax,(%rax)
    f63b:	00 04 00             	add    %al,(%rax,%rax,1)
    f63e:	00 41 c7             	add    %al,-0x39(%rcx)
    f641:	07                   	(bad)  
    f642:	00 00                	add    %al,(%rax)
    f644:	00 00                	add    %al,(%rax)
    f646:	8b 43 30             	mov    0x30(%rbx),%eax
    f649:	e9 1d fe ff ff       	jmp    f46b <__sprintf_chk@plt+0xa78b>
    f64e:	3d 48 89 c0 00       	cmp    $0xc08948,%eax
    f653:	0f 85 0f 48 29 ca    	jne    ffffffffca2a3e68 <obstack_alloc_failed_handler@@Base+0xffffffffca281dc8>
    f659:	ff                   	(bad)  
    f65a:	ff f6                	push   %rsi
    f65c:	0f 84 6a fe ff ff    	je     f4cc <__sprintf_chk@plt+0xa7ec>
    f662:	c7 83 bc 00 00 00 01 	movl   $0xff480001,0xbc(%rbx)
    f669:	00 48 ff 
    f66c:	c1 21 49             	shll   $0x49,(%rcx)
    f66f:	21 4c 39 fb          	and    %ecx,-0x5(%rcx,%rdi,1)
    f673:	e9 5e fe ff ff       	jmp    f4d6 <__sprintf_chk@plt+0xa7f6>
    f678:	0f 1f 49 f7          	nopl   -0x9(%rcx)
    f67c:	f8                   	clc    
    f67d:	01 00                	add    %eax,(%rax)
    f67f:	00 0f                	add    %cl,(%rdi)
    f681:	8f 8a fd ff          	(bad)  
    f685:	ff                   	(bad)  
    f686:	fd                   	std    
    f687:	ff                   	(bad)  
    f688:	ff 48 85             	decl   -0x7b(%rax)
    f68b:	c9                   	leave  
    f68c:	0f 85 ee 02 00 00    	jne    f980 <__sprintf_chk@plt+0xaca0>
    f692:	4c 8d 54 24 0f       	lea    0xf(%rsp),%r10
    f697:	41 0f b6 7f 01       	movzbl 0x1(%r15),%edi
    f69c:	49 83 e2 f0          	and    $0xfffffffffffffff0,%r10
    f6a0:	4d 89 d5             	mov    %r10,%r13
    f6a3:	4c 29 ef             	sub    %r13,%rdi
    f6a6:	2e 74 0f             	je,pn  f6b8 <__sprintf_chk@plt+0xa9d8>
    f6a9:	8f                   	(bad)  
    f6aa:	b3 fe                	mov    $0xfe,%bl
    f6ac:	ff                   	(bad)  
    f6ad:	ff 66 90             	jmp    *-0x70(%rsi)
    f6b0:	49 c7 c6 90 ff ff 4c 	mov    $0x4cffff90,%r14
    f6b7:	39 d8                	cmp    %ebx,%eax
    f6b9:	ec                   	in     (%dx),%al
    f6ba:	49 8d 42 01          	lea    0x1(%r10),%rax
    f6be:	48 89 fe             	mov    %rdi,%rsi
    f6c1:	f8                   	clc    
    f6c2:	44 88 40 ff          	mov    %r8b,-0x1(%rax)
    f6c6:	40 84 4d 89          	rex test %cl,-0x77(%rbp)
    f6ca:	c6                   	(bad)  
    f6cb:	49 39 cf             	cmp    %rcx,%r15
    f6ce:	73 0d                	jae    f6dd <__sprintf_chk@plt+0xa9fd>
    f6d0:	80 79 ff 0f          	cmpb   $0xf,-0x1(%rcx)
    f6d4:	85 0f                	test   %ecx,(%rdi)
    f6d6:	8c 95 fd ff ff 42    	mov    %ss,0x42fffffd(%rbp)
    f6dc:	02 0f                	add    (%rdi),%cl
    f6de:	84 49 01             	test   %cl,0x1(%rcx)
    f6e1:	dc 00                	faddl  (%rax)
    f6e3:	15 0f 1f 40 00       	adc    $0x401f0f,%eax
    f6e8:	48 83 c1 01          	add    $0x1,%rcx
    f6ec:	88 10                	mov    %dl,(%rax)
    f6ee:	48 83 49 c1 ee       	orq    $0xffffffffffffffee,-0x3f(%rcx)
    f6f3:	2f                   	(bad)  
    f6f4:	11 48 ff             	adc    %ecx,-0x1(%rax)
    f6f7:	c6                   	(bad)  
    f6f8:	49 c1 e1 1b          	shl    $0x1b,%r9
    f6fc:	e9 ef f4 ff ff       	jmp    ebf0 <__sprintf_chk@plt+0x9f10>
    f701:	0f 1f 80 00 00 0f 84 	nopl   -0x7bf10000(%rax)
    f708:	f0 fe                	lock (bad) 
    f70a:	ff                   	(bad)  
    f70b:	ff 84 ff 74 cd eb 97 	incl   -0x6814328c(%rdi,%rdi,8)
    f712:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f718:	80 bd 0c fd ff ff 00 	cmpb   $0x0,-0x2f4(%rbp)
    f71f:	ba 03 00 00 00       	mov    $0x3,%edx
    f724:	0f 84 8d f5 ff ff    	je     ecb7 <__sprintf_chk@plt+0x9fd7>
    f72a:	80 3d 10 30 01 00 01 	cmpb   $0x1,0x13010(%rip)        # 22741 <obstack_alloc_failed_handler@@Base+0x6a1>
    f731:	19 d2                	sbb    %edx,%edx
    f733:	83 49 01 49          	orl    $0x49,0x1(%rcx)
    f737:	c1 ef 32             	shr    $0x32,%edi
    f73a:	4d 0f af ca          	imul   %r10,%r9
    f73e:	66 90                	xchg   %ax,%ax
    f740:	49 89 c1             	mov    %rax,%r9
    f743:	00 0f                	add    %cl,(%rdi)
    f745:	8f 49 49 c7          	(bad)
    f749:	c3                   	ret    
    f74a:	46 02 00             	rex.RX add (%rax),%r8b
    f74d:	00 75 64             	add    %dh,0x64(%rbp)
    f750:	54                   	push   %rsp
    f751:	06                   	(bad)  
    f752:	02 48 89             	add    -0x77(%rax),%cl
    f755:	d7                   	xlat   %ds:(%rbx)
    f756:	48 89 4d 85          	mov    %rcx,-0x7b(%rbp)
    f75a:	f7 4c 85 fe 2e 4f ff 	testl  $0xffff4f2e,-0x2(%rbp,%rax,4)
    f761:	ff 
    f762:	49 89 c2             	mov    %rax,%r10
    f765:	48 85 c0             	test   %rax,%rax
    f768:	0f 84 ea 01 00 00    	je     f958 <__sprintf_chk@plt+0xac78>
    f76e:	43 80 7c 35 ff 2f    	cmpb   $0x2f,-0x1(%r13,%r14,1)
    f774:	74 04                	je     f77a <__sprintf_chk@plt+0xaa9a>
    f776:	49                   	rex.WB
    f777:	4c 89 d9             	mov    %r11,%rcx
    f77a:	4c 89 d7             	mov    %r10,%rdi
    f77d:	4c 89 f2             	mov    %r14,%rdx
    f780:	4c 89 ee             	mov    %r13,%rsi
    f783:	4c 89 95 00 fd ff ff 	mov    %r10,-0x300(%rbp)
    f78a:	49 0f af f5          	imul   %r13,%rsi
    f78e:	ff 4c 4d 85          	decl   -0x7b(%rbp,%rcx,2)
    f792:	c0 ff ff             	sar    $0xff,%bh
    f795:	e8 b6 4f ff ff       	call   4750 <strcpy@plt>
    f79a:	4c 8b 95 00 fd ff ff 	mov    -0x300(%rbp),%r10
    f7a1:	44 8b 83 c4 00 00 00 	mov    0xc4(%rbx),%r8d
    f7a8:	45 85 c0             	test   %r8d,%r8d
    f7ab:	0f 84 17 03 00 00    	je     fac8 <__sprintf_chk@plt+0xade8>
    f7b1:	e9 aa 03 00 00       	jmp    fb60 <__sprintf_chk@plt+0xae80>
    f7b6:	00 01                	add    %al,(%rcx)
    f7b8:	77 0d                	ja     f7c7 <__sprintf_chk@plt+0xaae7>
    f7ba:	80 3d 49 ff c7 4c e9 	cmpb   $0xe9,0x4cc7ff49(%rip)        # 4cc8f70a <obstack_alloc_failed_handler@@Base+0x4cc6d66a>
    f7c1:	20 fe                	and    %bh,%dh
    f7c3:	ff                   	(bad)  
    f7c4:	ff                   	(bad)  
    f7c5:	ff                   	(bad)  
    f7c6:	ff 31                	push   (%rcx)
    f7c8:	c9                   	leave  
    f7c9:	49 c1 ee 49          	shr    $0x49,%r14
    f7cd:	89 da                	mov    %ebx,%edx
    f7cf:	00 00                	add    %al,(%rax)
    f7d1:	00 bf 9c ff 4c 09    	add    %bh,0x94cff9c(%rdi)
    f7d7:	f3 4d 31 cd          	repz xor %r9,%r13
    f7db:	fd                   	std    
    f7dc:	ff                   	(bad)  
    f7dd:	ff 4c 89 95          	decl   -0x6b(%rcx,%rcx,4)
    f7e1:	00 fd                	add    %bh,%ch
    f7e3:	ff 48 ff             	decl   -0x1(%rax)
    f7e6:	c0 7f ff ff          	sarb   $0xff,-0x1(%rdi)
    f7ea:	4c 8b 95 00 fd ff 48 	mov    0x48fffd00(%rbp),%r10
    f7f1:	21 da                	and    %ebx,%edx
    f7f3:	ff                   	(bad)  
    f7f4:	ff af fa ff ff 8b    	ljmp   *-0x74000006(%rdi)
    f7fa:	85 48 0f             	test   %ecx,0xf(%rax)
    f7fd:	8f                   	(bad)  
    f7fe:	1c fd                	sbb    $0xfd,%al
    f800:	ff                   	(bad)  
    f801:	ff 00                	incl   (%rax)
    f803:	48 f7 fb             	idiv   %rbx
    f806:	6f                   	outsl  %ds:(%rsi),(%dx)
    f807:	01 00                	add    %eax,(%rax)
    f809:	00 00                	add    %al,(%rax)
    f80b:	00 e9                	add    %ch,%cl
    f80d:	4d 09 4c 09 c8       	or     %r9,-0x38(%r9,%rcx,1)
    f812:	1f                   	(bad)  
    f813:	0f 84 5c ff ff ff    	je     f775 <__sprintf_chk@plt+0xaa95>
    f819:	85 b0 00 00 00 ff    	test   %esi,-0x1000000(%rax)
    f81f:	ff                   	(bad)  
    f820:	3b 05 16 2c 49 49    	cmp    0x49492c16(%rip),%eax        # 494a243c <obstack_alloc_failed_handler@@Base+0x4948039c>
    f826:	31 d9                	xor    %ebx,%ecx
    f828:	f9                   	stc    
    f829:	f6 ff                	idiv   %bh
    f82b:	ff 89 05 0a 2c 01    	decl   0x12c0a05(%rcx)
    f831:	0f 8f a6 fc ff ff    	jg     f4dd <__sprintf_chk@plt+0xa7fd>
    f837:	fc                   	cld    
    f838:	ff                   	(bad)  
    f839:	ff 0f                	decl   (%rdi)
    f83b:	84 16                	test   %dl,(%rsi)
    f83d:	01 00                	add    %eax,(%rax)
    f83f:	00 4c 85 f8          	add    %cl,-0x8(%rbp,%rax,4)
    f843:	2c 01                	sub    $0x1,%al
    f845:	4c 01 ce             	add    %r9,%rsi
    f848:	8b 43 38             	mov    0x38(%rbx),%eax
    f84b:	0f 84 48 29 fa 00    	je     fb2199 <obstack_alloc_failed_handler@@Base+0xf900f9>
    f851:	4c 89 4d 21          	mov    %r9,0x21(%rbp)
    f855:	e0 00                	loopne f857 <__sprintf_chk@plt+0xab77>
    f857:	4d 09 e3             	or     %r12,%r11
    f85a:	4c 89 d3             	mov    %r10,%rbx
    f85d:	00 31                	add    %dh,(%rcx)
    f85f:	c0 48 8d 0d          	rorb   $0xd,-0x73(%rax)
    f863:	0f 8c be fc ff ff    	jl     f527 <__sprintf_chk@plt+0xa847>
    f869:	54                   	push   %rsp
    f86a:	ff                   	(bad)  
    f86b:	ff 4c 89 ff          	decl   -0x1(%rcx,%rcx,4)
    f86f:	48 31 f7             	xor    %rsi,%rdi
    f872:	ff                   	(bad)  
    f873:	ff                   	(bad)  
    f874:	39 05 c6 48 f7 ff    	cmp    %eax,-0x8b73a(%rip)        # fffffffffff84140 <obstack_alloc_failed_handler@@Base+0xfffffffffff620a0>
    f87a:	0f 8d 98 f6 ff ff    	jge    ef18 <__sprintf_chk@plt+0xa238>
    f880:	89 05 ba 2b 49 ff    	mov    %eax,-0xb6d446(%rip)        # ffffffffff4a2440 <obstack_alloc_failed_handler@@Base+0xffffffffff4803a0>
    f886:	c5 8d f6 ff          	vpsadbw %ymm7,%ymm14,%ymm7
    f88a:	ff 0f                	decl   (%rdi)
    f88c:	1f                   	(bad)  
    f88d:	44 00 00             	add    %r8b,(%rax)
    f890:	8b 7b 34             	mov    0x34(%rbx),%edi
    f893:	e8 c8 ec ff ff       	call   e560 <__sprintf_chk@plt+0x9880>
    f898:	49                   	rex.WB
    f899:	48                   	rex.W
    f89a:	49 c1 eb 3b          	shr    $0x3b,%r11
    f89e:	e8 25 67 f6 ff       	call   fffffffffff75fc8 <obstack_alloc_failed_handler@@Base+0xfffffffffff53f28>
    f8a3:	ff 89 05 0f 84 d9    	decl   -0x267bf0fb(%rcx)
    f8a9:	02 00                	add    (%rax),%al
    f8ab:	00 f6                	add    %dh,%dh
    f8ad:	ff                   	(bad)  
    f8ae:	ff 90 c7 83 bc 00    	call   *0xbc83c7(%rax)
    f8b4:	00 48 c1             	add    %cl,-0x3f(%rax)
    f8b7:	e6 36                	out    %al,$0x36
    f8b9:	00 0f                	add    %cl,(%rdi)
    f8bb:	8f                   	(bad)  
    f8bc:	67 01 00             	add    %eax,(%eax)
    f8bf:	00 4d 01             	add    %cl,0x1(%rbp)
    f8c2:	0f 85 eb fe ff ff    	jne    f7b3 <__sprintf_chk@plt+0xaad3>
    f8c8:	00 00                	add    %al,(%rax)
    f8ca:	00 0f                	add    %cl,(%rdi)
    f8cc:	84 48 29             	test   %cl,0x29(%rax)
    f8cf:	d6                   	(bad)  
    f8d0:	e8 02 00 00 af       	call   ffffffffaf00f8d7 <obstack_alloc_failed_handler@@Base+0xffffffffaefed837>
    f8d5:	c6 01 c8             	movb   $0xc8,(%rcx)
    f8d8:	00 00                	add    %al,(%rax)
    f8da:	00 48 89             	add    %cl,-0x77(%rax)
    f8dd:	85 38                	test   %edi,(%rax)
    f8df:	fd                   	std    
    f8e0:	ff                   	(bad)  
    f8e1:	ff 48 c7             	decl   -0x39(%rax)
    f8e4:	85 40 fd             	test   %eax,-0x3(%rax)
    f8e7:	ff                   	(bad)  
    f8e8:	ff 00                	incl   (%rax)
    f8ea:	00 00                	add    %al,(%rax)
    f8ec:	00 48 c7             	add    %cl,-0x39(%rax)
    f8ef:	85 48 fd             	test   %ecx,-0x3(%rax)
    f8f2:	ff                   	(bad)  
    f8f3:	ff 00                	incl   (%rax)
    f8f5:	00 00                	add    %al,(%rax)
    f8f7:	00 48 c7             	add    %cl,-0x39(%rax)
    f8fa:	85 4d 39             	test   %ecx,0x39(%rbp)
    f8fd:	f6 ff                	idiv   %bh
    f8ff:	00 49 29             	add    %cl,0x29(%rcx)
    f902:	c0 48 c7 4c          	rorb   $0x4c,-0x39(%rax)
    f906:	21 f0                	and    %esi,%eax
    f908:	ff                   	(bad)  
    f909:	ff 4d 09             	decl   0x9(%rbp)
    f90c:	0f 8c 16 fd ff ff    	jl     f628 <__sprintf_chk@plt+0xa948>
    f912:	fd                   	std    
    f913:	4d 85 4d 85          	test   %r9,-0x7b(%r13)
    f917:	d5                   	(bad)  
    f918:	48 01 d1             	add    %rdx,%rcx
    f91b:	fd                   	std    
    f91c:	ff                   	(bad)  
    f91d:	ff                   	(bad)  
    f91e:	db 8b 4d 48 31 f6    	fisttpl -0x9ceb7b3(%rbx)
    f924:	3b a1 00 00 31 ff    	cmp    -0xcf0000(%rcx),%esp
    f92a:	48 89 c1             	mov    %rax,%rcx
    f92d:	31 48 ff             	xor    %ecx,-0x1(%rax)
    f930:	c2 52 ff             	ret    $0xff52
    f933:	ff                   	(bad)  
    f934:	e9 9d fb ff ff       	jmp    f4d6 <__sprintf_chk@plt+0xa7f6>
    f939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f940:	49 c1 e4 1b          	shl    $0x1b,%r12
    f944:	00 4c 0f a3          	add    %cl,-0x5d(%rdi,%rcx,1)
    f948:	f2 0f 83 c1 f4 ff 4d 	bnd jae 4e00ee10 <obstack_alloc_failed_handler@@Base+0x4dfecd70>
    f94f:	39 fd                	cmp    %edi,%ebp
    f951:	f4                   	hlt    
    f952:	4d 85 f8             	test   %r15,%r8
    f955:	3d 40 00 48 4d       	cmp    $0x4d480040,%eax
    f95a:	0f af fc             	imul   %esp,%edi
    f95d:	ff                   	(bad)  
    f95e:	ff 48 85             	decl   -0x7b(%rax)
    f961:	d2 4c 0f af          	rorb   %cl,-0x51(%rdi,%rcx,1)
    f965:	c7                   	(bad)  
    f966:	ff                   	(bad)  
    f967:	ff                   	(bad)  
    f968:	e9 49 f7 fa bb       	jmp    ffffffffbbfbf0b6 <obstack_alloc_failed_handler@@Base+0xffffffffbbf9d016>
    f96d:	fe                   	(bad)  
    f96e:	ff                   	(bad)  
    f96f:	ff 45 31             	incl   0x31(%rbp)
    f972:	4d 85 f1             	test   %r14,%r9
    f975:	fc                   	cld    
    f976:	ff                   	(bad)  
    f977:	ff 0f                	decl   (%rdi)
    f979:	75 b8                	jne    f933 <__sprintf_chk@plt+0xac53>
    f97b:	00 00                	add    %al,(%rax)
    f97d:	00 0f                	add    %cl,(%rdi)
    f97f:	8f                   	(bad)  
    f980:	31 fe                	xor    %edi,%esi
    f982:	ff                   	(bad)  
    f983:	ff                   	(bad)  
    f984:	f8                   	clc    
    f985:	00 e9                	add    %ch,%cl
    f987:	49 01 ce             	add    %rcx,%r14
    f98a:	89 ff                	mov    %edi,%edi
    f98c:	1f                   	(bad)  
    f98d:	44 00 00             	add    %r8b,(%rax)
    f990:	e8 0f 8c 5e 03       	call   35f85a4 <obstack_alloc_failed_handler@@Base+0x35d6504>
    f995:	00 00                	add    %al,(%rax)
    f997:	02 0f                	add    (%rdi),%cl
    f999:	84 8d f2 ff ff 66    	test   %cl,0x66fffff2(%rbp)
    f99f:	48                   	rex.W
    f9a0:	49 85 fc             	test   %rdi,%r12
    f9a3:	00 00                	add    %al,(%rax)
    f9a5:	48 8d 35 98 a1 00 4d 	lea    0x4d00a198(%rip),%rsi        # 4d019b44 <obstack_alloc_failed_handler@@Base+0x4cff7aa4>
    f9ac:	89 df                	mov    %ebx,%edi
    f9ae:	49 0f 8c 6d 02 00 00 	rex.WB jl fc22 <__sprintf_chk@plt+0xaf42>
    f9b5:	0f 85 0f 8f b9 01    	jne    1ba88ca <obstack_alloc_failed_handler@@Base+0x1b8682a>
    f9bb:	00 00                	add    %al,(%rax)
    f9bd:	af                   	scas   %es:(%rdi),%eax
    f9be:	ce                   	(bad)  
    f9bf:	e4 c6                	in     $0xc6,%al
    f9c1:	e8 9a a7 48 ff       	call   ffffffffff49a160 <obstack_alloc_failed_handler@@Base+0xffffffffff4780c0>
    f9c6:	c7 40 f3 ff ff 49 29 	movl   $0x2949ffff,-0xd(%rax)
    f9cd:	d1 00                	roll   (%rax)
    f9cf:	00 31                	add    %dh,(%rcx)
    f9d1:	c9                   	leave  
    f9d2:	31 d2                	xor    %edx,%edx
    f9d4:	48 8d 35 4d 29 c7 00 	lea    0xc7294d(%rip),%rsi        # c82328 <obstack_alloc_failed_handler@@Base+0xc60288>
    f9db:	4c 89 ef             	mov    %r13,%rdi
    f9de:	e8 4d 39 c2 49       	call   49c33330 <obstack_alloc_failed_handler@@Base+0x49c11290>
    f9e3:	4c 01 ff             	add    %r15,%rdi
    f9e6:	fc                   	cld    
    f9e7:	ff                   	(bad)  
    f9e8:	ff 01                	incl   (%rcx)
    f9ea:	00 00                	add    %al,(%rax)
    f9ec:	0f 84 ff 01 00 00    	je     fbf1 <__sprintf_chk@plt+0xaf11>
    f9f2:	c7 83 bc 00 00 00 02 	movl   $0x2,0xbc(%rbx)
    f9f9:	00 00 00 
    f9fc:	c6 05 49 2a 01 00 01 	movb   $0x1,0x12a49(%rip)        # 2244c <obstack_alloc_failed_handler@@Base+0x3ac>
    fa03:	e9 ce fa ff ff       	jmp    f4d6 <__sprintf_chk@plt+0xa7f6>
    fa08:	0f                   	(bad)  
    fa09:	0f 8c cf fd ff ff    	jl     f7de <__sprintf_chk@plt+0xaafe>
    fa0f:	00 4d 01             	add    %cl,0x1(%rbp)
    fa12:	ed                   	in     (%dx),%eax
    fa13:	e9 e0 f2 ff ff       	jmp    ecf8 <__sprintf_chk@plt+0xa018>
    fa18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fa1f:	00 
    fa20:	80 3d e1 28 01 00 0f 	cmpb   $0xf,0x128e1(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
    fa27:	84 3d 02 00 00 ff    	test   %bh,-0xfffffe(%rip)        # ffffffffff00fa2f <obstack_alloc_failed_handler@@Base+0xfffffffffefed98f>
    fa2d:	bf 13 00 00 49       	mov    $0x49000013,%edi
    fa32:	29 c7                	sub    %eax,%edi
    fa34:	c6                   	(bad)  
    fa35:	ff                   	(bad)  
    fa36:	ff 84 c0 0f 85 d1 f3 	incl   -0xc2e7af1(%rax,%rax,8)
    fa3d:	4c 85 c2             	test   %r8,%rdx
    fa40:	12 00                	adc    (%rax),%al
    fa42:	0f 8f 81 02 00 00    	jg     fcc9 <_obstack_newchunk@@Base+0x9>
    fa48:	ff 84 c0 0f 85 bf f3 	incl   -0xc407af1(%rax,%rax,8)
    fa4f:	ff 4c 21 ee          	decl   -0x12(%rcx,%riz,1)
    fa53:	f2 00 00             	repnz add %al,(%rax)
    fa56:	e8 c5 c6 ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
    fa5b:	e9 35 02 00 00       	jmp    fc95 <_obstack_begin@@Base+0x15>
    fa60:	f3 ff                	repz (bad) 
    fa62:	ff                   	(bad)  
    fa63:	e9 e8 f2 ff ff       	jmp    ed50 <__sprintf_chk@plt+0xa070>
    fa68:	0f 1f 84 00 00 49 0f 	nopl   -0x50f0b700(%rax,%rax,1)
    fa6f:	af 
    fa70:	dc 89 c7 44 89 85    	fmull  -0x7a76bb39(%rcx)
    fa76:	48 c1 e6 3a          	shl    $0x3a,%rsi
    fa7a:	e8 81 eb ff e9       	call   ffffffffea00e600 <obstack_alloc_failed_handler@@Base+0xffffffffe9fec560>
    fa7f:	64 fc                	fs cld 
    fa81:	ff                   	(bad)  
    fa82:	ff                   	(bad)  
    fa83:	fd                   	std    
    fa84:	ff                   	(bad)  
    fa85:	ff 48 85             	decl   -0x7b(%rax)
    fa88:	c0 48 09 f9          	rorb   $0xf9,0x9(%rax)
    fa8c:	0f 49 39             	cmovns (%rcx),%edi
    fa8f:	d1 eb                	shr    %ebx
    fa91:	de 89 fa c7 e8 e6    	fimuls -0x19173806(%rcx)
    fa97:	4d ff                	rex.WRB (bad) 
    fa99:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
    fa9d:	48 89 c6             	mov    %rax,%rsi
    faa0:	e8 7b 31 00 00       	call   12c20 <_obstack_memory_used@@Base+0x2470>
    faa5:	31 d2                	xor    %edx,%edx
    faa7:	85 c0                	test   %eax,%eax
    faa9:	0f 49 89 c6 c3 fd ff 	cmovns -0x23c3a(%rcx),%ecx
    fab0:	ff 49 ff             	decl   -0x1(%rcx)
    fab3:	c4                   	(bad)  
    fab4:	00 00                	add    %al,(%rax)
    fab6:	00 00                	add    %al,(%rax)
    fab8:	e8 49 29 c6 ff       	call   ffffffffffc72406 <obstack_alloc_failed_handler@@Base+0xffffffffffc50366>
    fabd:	31 ff                	xor    %edi,%edi
    fabf:	e9 9e fa 49 85       	jmp    ffffffff854af562 <obstack_alloc_failed_handler@@Base+0xffffffff8548d4c2>
    fac4:	ca f8 40             	lret   $0x40f8
    fac7:	49 c7 c2 50 01 e9 50 	mov    $0x50e90150,%r10
    face:	01 00                	add    %eax,(%rax)
    fad0:	00 ff                	add    %bh,%bh
    fad2:	ff                   	(bad)  
    fad3:	e8 18 a9 ff 49       	call   4a00a3f0 <obstack_alloc_failed_handler@@Base+0x49fe8350>
    fad8:	ff c3                	inc    %ebx
    fada:	95                   	xchg   %eax,%ebp
    fadb:	00 fd                	add    %bh,%ch
    fadd:	ff 48 c1             	decl   -0x3f(%rax)
    fae0:	e1 23                	loope  fb05 <__sprintf_chk@plt+0xae25>
    fae2:	84 ca                	test   %cl,%dl
    fae4:	fc                   	cld    
    fae5:	ff                   	(bad)  
    fae6:	ff c7                	inc    %edi
    fae8:	83 c4 00             	add    $0x0,%esp
    faeb:	00 00                	add    %al,(%rax)
    faed:	48 f7 fb             	idiv   %rbx
    faf0:	ff 49 29             	decl   0x29(%rcx)
    faf3:	4d 29 d5             	sub    %r10,%r13
    faf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fafd:	00 00 00 
    fb00:	41 c7 07 5f 00 49 c7 	movl   $0xc749005f,(%r15)
    fb07:	0f 8f 48 c1 e8 32    	jg     32e9bc55 <obstack_alloc_failed_handler@@Base+0x32e79bb5>
    fb0d:	4d                   	rex.WRB
    fb0e:	4d 89 d8             	mov    %r11,%r8
    fb11:	05 00 49 c7 c6       	add    $0xc6c74900,%eax
    fb16:	ab                   	stos   %eax,%es:(%rdi)
    fb17:	00 00                	add    %al,(%rax)
    fb19:	00 00                	add    %al,(%rax)
    fb1b:	00 31                	add    %dh,(%rcx)
    fb1d:	49 0f af cf          	imul   %r15,%rcx
    fb21:	ff                   	(bad)  
    fb22:	ff 0f                	decl   (%rdi)
    fb24:	b6 bd                	mov    $0xbd,%dh
    fb26:	7f 44                	jg     fb6c <__sprintf_chk@plt+0xae8c>
    fb28:	ff                   	(bad)  
    fb29:	ff 4c 89 ea          	decl   -0x16(%rcx,%rcx,4)
    fb2d:	48 89 c6             	mov    %rax,%rsi
    fb30:	e8 2b a6 ff ff       	call   a160 <__sprintf_chk@plt+0x5480>
    fb35:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
    fb39:	0f 84 35 03 00 00    	je     fe74 <_obstack_newchunk@@Base+0x1b4>
    fb3f:	8c ce                	mov    %cs,%esi
    fb41:	03 00                	add    (%rax),%eax
    fb43:	00 f7                	add    %dh,%bh
    fb45:	ff                   	(bad)  
    fb46:	ff 41 0f             	incl   0xf(%rcx)
    fb49:	b6 14                	mov    $0x14,%dh
    fb4b:	24 80                	and    $0x80,%al
    fb4d:	fa                   	cli    
    fb4e:	0f 8c 18 01 00 00    	jl     fc6c <__sprintf_chk@plt+0xaf8c>
    fb54:	ff                   	(bad)  
    fb55:	e8 36 78 ff ff       	call   7390 <__sprintf_chk@plt+0x26b0>
    fb5a:	4c 8d 7b 18          	lea    0x18(%rbx),%r15
    fb5e:	4d 89 e5             	mov    %r12,%r13
    fb61:	e9 84 f5 ff 4c       	jmp    4d00f0ea <obstack_alloc_failed_handler@@Base+0x4cfed04a>
    fb66:	09 0f                	or     %ecx,(%rdi)
    fb68:	85 1b                	test   %ebx,(%rbx)
    fb6a:	03 00                	add    (%rax),%eax
    fb6c:	4d 01 f9             	add    %r15,%r9
    fb6f:	00 00                	add    %al,(%rax)
    fb71:	00 83 f8 4c 29 e2    	add    %al,-0x1dd6b308(%rbx)
    fb77:	7f 58                	jg     fbd1 <__sprintf_chk@plt+0xaef1>
    fb79:	83 f8 10             	cmp    $0x10,%eax
    fb7c:	74 5c                	je     fbda <__sprintf_chk@plt+0xaefa>
    fb7e:	83 f8 16             	cmp    $0x16,%eax
    fb81:	4c 01 d2             	add    %r10,%rdx
    fb84:	01 00                	add    %eax,(%rax)
    fb86:	00 00                	add    %al,(%rax)
    fb88:	8d 50 ea             	lea    -0x16(%rax),%edx
    fb8b:	83 e2 ef             	and    $0xffffffef,%edx
    fb8e:	74 05                	je     fb95 <__sprintf_chk@plt+0xaeb5>
    fb90:	83 f8 5f             	cmp    $0x5f,%eax
    fb93:	75 0b                	jne    fba0 <__sprintf_chk@plt+0xaec0>
    fb95:	48 8b 43 18          	mov    0x18(%rbx),%rax
    fb99:	48 89 05 0f 85 78 fc 	mov    %rax,-0x3877af1(%rip)        # fffffffffc7980af <obstack_alloc_failed_handler@@Base+0xfffffffffc77600f>
    fba0:	ff                   	(bad)  
    fba1:	ff 05 a5 28 01 00    	incl   0x128a5(%rip)        # 2244c <obstack_alloc_failed_handler@@Base+0x3ac>
    fba7:	31 d2                	xor    %edx,%edx
    fba9:	eb b3                	jmp    fb5e <__sprintf_chk@plt+0xae7e>
    fbab:	f6 75 37             	divb   0x37(%rbp)
    fbae:	66 90                	xchg   %ax,%ax
    fbb0:	89 93 bc 00 00 00    	mov    %edx,0xbc(%rbx)
    fbb6:	88 05 90 4d 85 d8    	mov    %al,-0x277ab270(%rip)        # ffffffffd886494c <obstack_alloc_failed_handler@@Base+0xffffffffd88428ac>
    fbbc:	85 c9                	test   %ecx,%ecx
    fbbe:	0f 84 12 48 21 fb    	je     fffffffffb2243d6 <obstack_alloc_failed_handler@@Base+0xfffffffffb202336>
    fbc4:	e8 47 4b ff ff       	call   4710 <__errno_location@plt>
    fbc9:	48 89 d2             	mov    %rdx,%rdx
    fbcc:	e9 e9 fc ff ff       	jmp    f8ba <__sprintf_chk@plt+0xabda>
    fbd1:	83 48 c7 c3          	orl    $0xffffffc3,-0x39(%rax)
    fbd5:	df 03                	filds  (%rbx)
    fbd7:	00 00                	add    %al,(%rax)
    fbd9:	bb 45 49 c1 e8       	mov    $0xe8c14945,%ebx
    fbde:	29 e9                	sub    %ebp,%ecx
    fbe0:	f8                   	clc    
    fbe1:	ff                   	(bad)  
    fbe2:	ff 31                	push   (%rcx)
    fbe4:	c9                   	leave  
    fbe5:	b8 01 00 00 00       	mov    $0x1,%eax
    fbea:	ba 01 48 0f af       	mov    $0xaf0f4801,%edx
    fbef:	d7                   	xlat   %ds:(%rbx)
    fbf0:	bf 8b 43 30 25       	mov    $0x2530438b,%edi
    fbf5:	00 f0                	add    %dh,%al
    fbf7:	00 00                	add    %al,(%rax)
    fbf9:	3d 00 40 00 49       	cmp    $0x49004000,%eax
    fbfe:	ff c5                	inc    %ebp
    fc00:	4d 85 e3             	test   %r12,%r11
    fc03:	48 01 c6             	add    %rax,%rsi
    fc06:	7e ff                	jle    fc07 <__sprintf_chk@plt+0xaf27>
    fc08:	ff                   	(bad)  
    fc09:	ff 8b 43 30 25 00    	decl   0x253043(%rbx)
    fc0f:	4c 01 c9             	add    %r9,%rcx
    fc12:	3d 00 40 00 4d       	cmp    $0x4d004000,%eax
    fc17:	89 c9                	mov    %ecx,%ecx
    fc19:	3c fa                	cmp    $0xfa,%al
    fc1b:	ff                   	(bad)  
    fc1c:	ff 31                	push   (%rcx)
    fc1e:	c9                   	leave  
    fc1f:	31 d2                	xor    %edx,%edx
    fc21:	48 0f 8c 08 01 00 00 	rex.W jl fd30 <_obstack_newchunk@@Base+0x70>
    fc28:	4c 89 ef             	mov    %r13,%rdi
    fc2b:	e8 d0 4f ff ff       	call   4c00 <getxattr@plt>
    fc30:	48 85 c0             	test   %rax,%rax
    fc33:	78 29                	js     fc5e <__sprintf_chk@plt+0xaf7e>
    fc35:	0f 85 b7 fd ff 48    	jne    4900f9f2 <obstack_alloc_failed_handler@@Base+0x48fed952>
    fc3b:	f7 f9                	idiv   %ecx
    fc3d:	e8 ce 4a ff ff       	call   4710 <__errno_location@plt>
    fc42:	c7 00 5f 00 00 00    	movl   $0x5f,(%rax)
    fc48:	49 89 c7             	mov    %rax,%r15
    fc4b:	48 8d 05 d2 23 01 00 	lea    0x123d2(%rip),%rax        # 22024 <_obstack_memory_used@@Base+0x11874>
    fc52:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    fc59:	e9 5e f8 ff 4c       	jmp    4d00f4bc <obstack_alloc_failed_handler@@Base+0x4cfed41c>
    fc5e:	85 cf                	test   %ecx,%edi
    fc60:	07                   	(bad)  
    fc61:	83 f8 3d             	cmp    $0x3d,%eax
    fc64:	0f 85 48 39 c8 d8    	jne    ffffffffd8c935b2 <obstack_alloc_failed_handler@@Base+0xffffffffd8c71512>
    fc6a:	e9 ea f9 ff ff       	jmp    f659 <__sprintf_chk@plt+0xa979>
    fc6f:	e8 4c 09 e0 ff       	call   ffffffffffe105c0 <obstack_alloc_failed_handler@@Base+0xffffffffffdee520>
    fc74:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x48ec014d(%rax,%rax,1)
    fc7b:	4d 01 ec 48 
    fc7f:	0f                   	.byte 0xf

000000000000fc80 <_obstack_begin@@Base>:
    fc80:	85 7e 03             	test   %edi,0x3(%rsi)
    fc83:	00 00                	add    %al,(%rax)
    fc85:	67 50                	addr32 push %rax
    fc87:	fe 48 89             	decb   -0x77(%rax)
    fc8a:	4d 29 df             	sub    %r11,%r15
    fc8d:	89 47 40             	mov    %eax,0x40(%rdi)
    fc90:	e9 9b 74 ff ff       	jmp    7130 <__sprintf_chk@plt+0x2450>
    fc95:	66 66 48 c7 c2 1f 01 	data16 data16 mov $0xffffffffff49011f,%rdx
    fc9c:	49 ff 
    fc9e:	74 ee                	je     fc8e <_obstack_begin@@Base+0xe>

000000000000fca0 <_obstack_begin_1@@Base>:
    fca0:	ff 0f                	decl   (%rdi)
    fca2:	4c                   	rex.WR
    fca3:	49 ff c0             	inc    %r8
    fca6:	c4 01 48 89          	(bad)
    fcaa:	4f                   	rex.WRXB
    fcab:	4d 31 c6             	xor    %r8,%r14
    fcae:	47                   	rex.RXB
    fcaf:	40                   	rex
    fcb0:	4c 89 4f 48          	mov    %r9,0x48(%rdi)
    fcb4:	e9 77 74 ff ff       	jmp    7130 <__sprintf_chk@plt+0x2450>
    fcb9:	0f 49 29             	cmovns (%rcx),%ebp
    fcbc:	cf                   	iret   
    fcbd:	00 00                	add    %al,(%rax)
    fcbf:	0f                   	.byte 0xf

000000000000fcc0 <_obstack_newchunk@@Base>:
    fcc0:	8c d7                	mov    %ss,%edi
    fcc2:	fd                   	std    
    fcc3:	ff                   	(bad)  
    fcc4:	ff c6                	inc    %esi
    fcc6:	a9 fe ff ff 41       	test   $0x41fffffe,%eax
    fccb:	48 c1 ef 13          	shr    $0x13,%rdi
    fccf:	89 49 f7             	mov    %ecx,-0x9(%rcx)
    fcd2:	f9                   	stc    
    fcd3:	6f                   	outsl  %ds:(%rsi),(%dx)
    fcd4:	18 4c 2b 6f          	sbb    %cl,0x6f(%rbx,%rbp,1)
    fcd8:	10 48 8b             	adc    %cl,-0x75(%rax)
    fcdb:	13 4c 01 ee          	adc    -0x12(%rcx,%rax,1),%ecx
    fcdf:	49 c1 eb 2e          	shr    $0x2e,%r11
    fce3:	8b 6f 4d             	mov    0x4d(%rdi),%ebp
    fce6:	0f af d8             	imul   %eax,%ebx
    fce9:	0f 4d 89 d3 ff ff 01 	cmovge 0x1ffffd3(%rcx),%ecx
    fcf0:	48 39 cf             	cmp    %rcx,%rdi
    fcf3:	00 48 ff             	add    %cl,-0x1(%rax)
    fcf6:	c0 d6 48             	rcl    $0x48,%dh
    fcf9:	8d 44 06 64          	lea    0x64(%rsi,%rax,1),%eax
    fcfd:	48 0f 42 f2          	cmovb  %rdx,%rsi
    fd01:	49 01 f8             	add    %rdi,%r8
    fd04:	48 0f 43 f0          	cmovae %rax,%rsi
    fd08:	48 85 49 c1          	test   %rcx,-0x3f(%rcx)
    fd0c:	ed                   	in     (%dx),%eax
    fd0d:	3c 00                	cmp    $0x0,%al
    fd0f:	00 00                	add    %al,(%rax)
    fd11:	40                   	rex
    fd12:	4c 09 d9             	or     %r11,%rcx
    fd15:	48 85 ff             	test   %rdi,%rdi
    fd18:	49 c1 e0 3e          	shl    $0x3e,%r8
    fd1c:	31 00                	xor    %eax,(%rax)
    fd1e:	48 8b 43 38          	mov    0x38(%rbx),%rax
    fd22:	49 89 f6             	mov    %rsi,%r14
    fd25:	f6 43 50 01          	testb  $0x1,0x50(%rbx)
    fd29:	75 7d                	jne    fda8 <_obstack_newchunk@@Base+0xe8>
    fd2b:	48 89 f7             	mov    %rsi,%rdi
    fd2e:	ff d0                	call   *%rax
    fd30:	49 89 c4             	mov    %rax,%r12
    fd33:	4d                   	rex.WRB
    fd34:	4c 89 e7             	mov    %r12,%rdi
    fd37:	84 a3 00 e9 c6 00    	test   %ah,0xc6e900(%rbx)
    fd3d:	00 00                	add    %al,(%rax)
    fd3f:	fe                   	(bad)  
    fd40:	ff                   	(bad)  
    fd41:	ff 63 08             	jmp    *0x8(%rbx)
    fd44:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    fd48:	4c 89 ea             	mov    %r13,%rdx
    fd4b:	49 89 6c 24 08       	mov    %rbp,0x8(%r12)
    fd50:	48 89 43 49          	mov    %rax,0x49(%rbx)
    fd54:	48 f7 48 c7 c2 fe 01 	testq  $0x1fec2,-0x39(%rax)
    fd5b:	00 
    fd5c:	0f 85 83 fe ff ff    	jne    fbe5 <__sprintf_chk@plt+0xaf05>
    fd62:	ff d0                	call   *%rax
    fd64:	49 21 c6             	and    %rax,%r14
    fd67:	4c 89 4d 89          	mov    %r9,-0x77(%rbp)
    fd6b:	f8                   	clc    
    fd6c:	4c e9 51 fd ff 4d    	rex.WR jmp 4e00fac3 <obstack_alloc_failed_handler@@Base+0x4dfeda23>
    fd72:	4d 21 f0             	and    %r14,%r8
    fd75:	02 75 15             	add    0x15(%rbp),%dh
    fd78:	48 8b 43 30          	mov    0x30(%rbx),%rax
    fd7c:	48 8d 4c 05 10       	lea    0x10(%rbp,%rax,1),%rcx
    fd81:	48 f7 49 09 d2 c8 48 	testq  $0x3948c8d2,0x9(%rcx)
    fd88:	39 
    fd89:	43 10 74 49 c1       	adc    %sil,-0x3f(%r9,%r9,2)
    fd8e:	ef                   	out    %eax,(%dx)
    fd8f:	3a 49 d1             	cmp    -0x2f(%rcx),%cl
    fd92:	ef                   	out    %eax,(%dx)
    fd93:	ee                   	out    %al,(%dx)
    fd94:	4c 89 73 18          	mov    %r14,0x18(%rbx)
    fd98:	80 63 50 fd          	andb   $0xfd,0x50(%rbx)
    fd9c:	5b                   	pop    %rbx
    fd9d:	5d                   	pop    %rbp
    fd9e:	41 5c                	pop    %r12
    fda0:	41 5d                	pop    %r13
    fda2:	41 5e                	pop    %r14
    fda4:	49 c1 e1 3a          	shl    $0x3a,%r9
    fda8:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    fdac:	ff d0                	call   *%rax
    fdae:	49 89 c4             	mov    %rax,%r12
    fdb1:	eb 80                	jmp    fd33 <_obstack_newchunk@@Base+0x73>
    fdb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fdb8:	0f 8c 82 fc ff ff    	jl     fa40 <__sprintf_chk@plt+0xad60>
    fdbe:	f7 ff                	idiv   %edi
    fdc0:	89 48 c7             	mov    %ecx,-0x39(%rax)
    fdc3:	c6                   	(bad)  
    fdc4:	1f                   	(bad)  
    fdc5:	00 00                	add    %al,(%rax)
    fdc7:	00 74 0e 4c          	add    %dh,0x4c(%rsi,%rcx,1)
    fdcb:	85 d7                	test   %edx,%edi
    fdcd:	48                   	rex.W
    fdce:	48 89 ee             	mov    %rbp,%rsi
    fdd1:	ff d0                	call   *%rax
    fdd3:	eb b8                	jmp    fd8d <_obstack_newchunk@@Base+0xcd>
    fdd5:	0f 1f 00             	nopl   (%rax)
    fdd8:	48 89 48 0f          	mov    %rcx,0xf(%rax)
    fddc:	84 3d 03 00 00 05    	test   %bh,0x5000003(%rip)        # 500fde5 <obstack_alloc_failed_handler@@Base+0x4fedd45>
    fde2:	ba 22 01 00 ff       	mov    $0xff000122,%edx
    fde7:	48 c1 ea 1d          	shr    $0x1d,%rdx
    fdeb:	00 00                	add    %al,(%rax)
    fded:	00 00                	add    %al,(%rax)
    fdef:	00 41 57             	add    %al,0x57(%rcx)
    fdf2:	41 56                	push   %r14
    fdf4:	41 55                	push   %r13
    fdf6:	41 54                	push   %r12
    fdf8:	55                   	push   %rbp
    fdf9:	53                   	push   %rbx
    fdfa:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    fe01:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    fe06:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    fe0d:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    fe12:	48 83 ec 58          	sub    $0x58,%rsp
    fe16:	4c 8b b4 24 90 20 00 	mov    0x2090(%rsp),%r14
    fe1d:	00 
    fe1e:	49 89 fc             	mov    %rdi,%r12
    fe21:	49 89 cd             	mov    %rcx,%r13
    fe24:	45 89 c7             	mov    %r8d,%r15d
    fe27:	89 d1                	mov    %edx,%ecx
    fe29:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fe30:	00 00 
    fe32:	48 89 84 24 48 20 00 	mov    %rax,0x2048(%rsp)
    fe39:	00 
    fe3a:	31 c0                	xor    %eax,%eax
    fe3c:	45 31 c0             	xor    %r8d,%r8d
    fe3f:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    fe44:	48 89 f2             	mov    %rsi,%rdx
    fe47:	4c 89 cb             	mov    %r9,%rbx
    fe4a:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    fe4f:	4c 8d 4c 24 37       	lea    0x37(%rsp),%r9
    fe54:	4c 89 e6             	mov    %r12,%rsi
    fe57:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    fe5c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    fe61:	e8 6a 45 00 00       	call   143d0 <_obstack_memory_used@@Base+0x3c20>
    fe66:	80 7c 24 37 00       	cmpb   $0x0,0x37(%rsp)
    fe6b:	48 89 c5             	mov    %rax,%rbp
    fe6e:	48 8b 05 33 21 01 00 	mov    0x12133(%rip),%rax        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
    fe75:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fe7a:	74 09                	je     fe85 <_obstack_newchunk@@Base+0x1c5>
    fe7c:	45                   	rex.RB
    fe7d:	49 c7 c0 31 fd ff ff 	mov    $0xfffffffffffffd31,%r8
    fe84:	00 4d 85             	add    %cl,-0x7b(%rbp)
    fe87:	ed                   	in     (%dx),%eax
    fe88:	74 35                	je     febf <_obstack_newchunk@@Base+0x1ff>
    fe8a:	48 21 f6             	and    %rsi,%rsi
    fe8d:	00 00                	add    %al,(%rax)
    fe8f:	e8 8c c2 ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
    fe94:	4c 8d 05 25 22 01 00 	lea    0x12225(%rip),%r8        # 220c0 <obstack_alloc_failed_handler@@Base+0x20>
    fe9b:	4d 8d 49 85          	lea    -0x7b(%r9),%r9
    fe9f:	48 01 f8             	add    %rdi,%rax
    fea2:	49 09 d6             	or     %rdx,%r14
    fea5:	00 48 01             	add    %cl,0x1(%rax)
    fea8:	ff c7                	inc    %edi
    feaa:	e8 f1 c3 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
    feaf:	0f 84 21 ff ff ff    	je     fdd6 <_obstack_newchunk@@Base+0x116>
    feb5:	49 21 4c 09 d6       	and    %rcx,-0x2a(%r9,%rcx,1)
    feba:	e8 e1 c3 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
    febf:	4d 85 f6             	test   %r14,%r14
    fec2:	0f 84 38 02 00 00    	je     10100 <_obstack_newchunk@@Base+0x440>
    fec8:	48 f7 48 c1 49 09 f2 	testq  $0xff20949,-0x3f(%rax)
    fecf:	0f 
    fed0:	8c 82 03 00 00 0f    	mov    %es,0xf000003(%rdx)
    fed6:	85 ab fd ff ff ea    	test   %ebp,-0x15000003(%rbx)
    fedc:	45                   	rex.RB
    fedd:	4c 29 ea             	sub    %r13,%rdx
    fee0:	8b 3d 0f 85 a5 fd    	mov    -0x25a7af1(%rip),%edi        # fffffffffda683f5 <obstack_alloc_failed_handler@@Base+0xfffffffffda46355>
    fee6:	ff                   	(bad)  
    fee7:	ff 4c 89 49          	decl   0x49(%rcx,%rcx,4)
    feeb:	c7 c2 26 fd ff ff    	mov    $0xfffffd26,%edx
    fef1:	89 db                	mov    %ebx,%ebx
    fef3:	c9                   	leave  
    fef4:	e1 ff                	loope  fef5 <_obstack_newchunk@@Base+0x235>
    fef6:	ff                   	(bad)  
    fef7:	be 01 00 00 00       	mov    $0x1,%esi
    fefc:	0f 84 dd fd ff ff    	je     fcdf <_obstack_newchunk@@Base+0x1f>
    ff02:	e8 b9 e1 ff ff       	call   e0c0 <__sprintf_chk@plt+0x93e0>
    ff07:	48 8d 0d af 9c 49 e9 	lea    -0x16b66351(%rip),%rcx        # ffffffffe94a9bbd <obstack_alloc_failed_handler@@Base+0xffffffffe9487b1d>
    ff0e:	5b                   	pop    %rbx
    ff0f:	fc                   	cld    
    ff10:	ff                   	(bad)  
    ff11:	ff 00                	incl   (%rax)
    ff13:	35 8b 48 c1 e0       	xor    $0xe0c1488b,%eax
    ff18:	2e 38 2f             	cs cmp %ch,(%rdi)
    ff1b:	4d 85 db             	test   %r11,%r11
    ff1e:	60                   	(bad)  
    ff1f:	ff                   	(bad)  
    ff20:	ff                   	(bad)  
    ff21:	ff 9f 00 00 bf 01    	lcall  *0x1bf0000(%rdi)
    ff27:	4d 01 dc             	add    %r11,%r12
    ff2a:	48 0f 45 c8          	cmovne %rax,%rcx
    ff2e:	48 01 c9             	add    %rcx,%rcx
    ff31:	89 44 24 18          	mov    %eax,0x18(%rsp)
    ff35:	e8 06 4c ff ff       	call   4b40 <__printf_chk@plt>
    ff3a:	4c 89 ff             	mov    %r15,%rdi
    ff3d:	e8 3e 49 09 49       	call   490a4880 <obstack_alloc_failed_handler@@Base+0x490827e0>
    ff42:	c1 ea 35             	shr    $0x35,%edx
    ff45:	24 e9                	and    $0xe9,%al
    ff47:	4d 03 00             	add    (%r8),%r8
    ff4a:	00 ff                	add    %bh,%bh
    ff4c:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    ff51:	4c 8b 54 24 4d       	mov    0x4d(%rsp),%r10
    ff56:	4d 29 f8             	sub    %r15,%r8
    ff59:	ff 4d 31             	decl   0x31(%rbp)
    ff5c:	e8 00 00 80 3d       	call   3d80ff61 <obstack_alloc_failed_handler@@Base+0x3d7edec1>
    ff61:	52                   	push   %rdx
    ff62:	27                   	(bad)  
    ff63:	0f 8f 19 fd ff ff    	jg     fc82 <_obstack_begin@@Base+0x2>
    ff69:	4d 21 c9             	and    %r9,%r9
    ff6c:	48 8b 43 20          	mov    0x20(%rbx),%rax
    ff70:	48 29 d0             	sub    %rdx,%rax
    ff73:	48 f7 f8             	idiv   %rax
    ff76:	07                   	(bad)  
    ff77:	0f 86 e3 01 00 00    	jbe    10160 <_obstack_newchunk@@Base+0x4a0>
    ff7d:	48 8b 05 74 0f 8c f3 	mov    -0xc73f08c(%rip),%rax        # fffffffff38d0ef8 <obstack_alloc_failed_handler@@Base+0xfffffffff38aee58>
    ff84:	48 39 f7             	cmp    %rsi,%rdi
    ff87:	48 83 43 18 08       	addq   $0x8,0x18(%rbx)
    ff8c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ff91:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    ff96:	89 c6                	mov    %eax,%esi
    ff98:	d2 be 01 4d 0f 8c    	sarb   %cl,-0x73f0b2ff(%rsi)
    ff9e:	a0 fd ff ff 01 cf e8 	movabs 0x4857e8cf01fffffd,%al
    ffa5:	57 48 
    ffa7:	21 c3                	and    %eax,%ebx
    ffa9:	48 8b eb             	mov    %rbx,%rbp
    ffac:	f3 23 01             	repz and (%rcx),%eax
    ffaf:	00 48 01             	add    %cl,0x1(%rax)
    ffb2:	e8 49 21 db 26       	call   26dc2100 <obstack_alloc_failed_handler@@Base+0x26da0060>
    ffb7:	01 4c e9 6a          	add    %ecx,0x6a(%rcx,%rbp,8)
    ffbb:	fe                   	(bad)  
    ffbc:	ff                   	(bad)  
    ffbd:	ff 23                	jmp    *(%rbx)
    ffbf:	01 00                	add    %eax,(%rax)
    ffc1:	74 1d                	je     ffe0 <_obstack_newchunk@@Base+0x320>
    ffc3:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    ffc7:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    ffcb:	48 29 ca             	sub    %rcx,%rdx
    ffce:	48 83 fa 07          	cmp    $0x7,%rdx
    ffd2:	0f 86 49 49 4d 29    	jbe    294e4921 <obstack_alloc_failed_handler@@Base+0x294c2881>
    ffd8:	cb                   	lret   
    ffd9:	89 01                	mov    %eax,(%rcx)
    ffdb:	48 83 43 18 08       	addq   $0x8,0x18(%rbx)
    ffe0:	4d 85 f6             	test   %r14,%r14
    ffe3:	74 48                	je     1002d <_obstack_newchunk@@Base+0x36d>
    ffe5:	48                   	rex.W
    ffe6:	49 29 c0             	sub    %rax,%r8
    ffe9:	08 ba 4c 4c 85 cf    	or     %bh,-0x307ab3b4(%rdx)
    ffef:	be 01 00 00 00       	mov    $0x1,%esi
    fff4:	48 8d 3d bc 9b 00 00 	lea    0x9bbc(%rip),%rdi        # 19bb7 <_obstack_memory_used@@Base+0x9407>
    fffb:	48                   	rex.W
    fffc:	49 ff c7             	inc    %r15
    ffff:	fd                   	std    
   10000:	4a ff                	rex.WX (bad) 
   10002:	ff 45 84             	incl   -0x7c(%rbp)
   10005:	ed                   	in     (%dx),%eax
   10006:	74 25                	je     1002d <_obstack_newchunk@@Base+0x36d>
   10008:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1000d:	48 8b 3b             	mov    (%rbx),%rdi
   10010:	0f b6 54 48 c7       	movzbl -0x39(%rax,%rcx,2),%edx
   10015:	c6                   	(bad)  
   10016:	4d 85 f4             	test   %r14,%r12
   10019:	8f a8 02 00          	(bad)
   1001d:	00 29                	add    %ch,(%rcx)
   1001f:	0f 85 0f 85 b6 fe    	jne    fffffffffeb78534 <obstack_alloc_failed_handler@@Base+0xfffffffffeb56494>
   10025:	ff                   	(bad)  
   10026:	ff 48 89             	decl   -0x77(%rax)
   10029:	4f 28 88 10 48 8b 7c 	rex.WRXB sub %r9b,0x7c8b4810(%r8)
   10030:	24 38                	and    $0x38,%al
   10032:	4c 39 e7             	cmp    %r12,%rdi
   10035:	74 0c                	je     10043 <_obstack_newchunk@@Base+0x383>
   10037:	48 3b 7c 49 31       	cmp    0x31(%rcx,%rcx,2),%rdi
   1003c:	c7 05 e8 3d 46 ff ff 	movl   $0x44b60fff,-0xb9c218(%rip)        # ffffffffff473e2e <obstack_alloc_failed_handler@@Base+0xffffffffff451d8e>
   10043:	0f b6 44 
   10046:	24 37                	and    $0x37,%al
   10048:	48 01 e8             	add    %rbp,%rax
   1004b:	48 8b 94 24 48 20 00 	mov    0x2048(%rsp),%rdx
   10052:	00 
   10053:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1005a:	00 00 
   1005c:	0f 85 9a 01 00 00    	jne    101fc <_obstack_newchunk@@Base+0x53c>
   10062:	48 81 c4 58 20 00 00 	add    $0x2058,%rsp
   10069:	5b                   	pop    %rbx
   1006a:	5d                   	pop    %rbp
   1006b:	41 5c                	pop    %r12
   1006d:	41 5d                	pop    %r13
   1006f:	41 5e                	pop    %r14
   10071:	41 5f                	pop    %r15
   10073:	c3                   	ret    
   10074:	0f 1f 40 00          	nopl   0x0(%rax)
   10078:	44 0f b6 2d 2c 4d 21 	movzbl -0x25deb2d4(%rip),%r13d        # ffffffffda224dac <obstack_alloc_failed_handler@@Base+0xffffffffda202d0c>
   1007f:	da 
   10080:	45 84 4d 01          	test   %r9b,0x1(%r13)
   10084:	75 db                	jne    10061 <_obstack_newchunk@@Base+0x3a1>
   10086:	4d 31 ff             	xor    %r15,%r15
   10089:	8f e8 01 00          	(bad)
   1008d:	00 0f                	add    %cl,(%rdi)
   1008f:	85 1c 01             	test   %ebx,(%rcx,%rax,1)
   10092:	00 00                	add    %al,(%rax)
   10094:	48 8b 4c 0f af       	mov    -0x51(%rdi,%rcx,1),%rcx
   10099:	c6                   	(bad)  
   1009a:	8d 55 fe             	lea    -0x2(%rbp),%edx
   1009d:	0f b6 10             	movzbl (%rax),%edx
   100a0:	48 8b 48 ff          	mov    -0x1(%rax),%rcx
   100a4:	c7                   	(bad)  
   100a5:	4c 85 e3             	test   %r12,%rbx
   100a8:	fb                   	sti    
   100a9:	8b 47 28             	mov    0x28(%rdi),%eax
   100ac:	48 3b 47 74          	cmp    0x74(%rdi),%rax
   100b0:	d5                   	(bad)  
   100b1:	09 df                	or     %ebx,%edi
   100b3:	01 00                	add    %eax,(%rax)
   100b5:	00 48 8d             	add    %cl,-0x73(%rax)
   100b8:	48 01 41 b9          	add    %rax,-0x47(%rcx)
   100bc:	01 00                	add    %eax,(%rax)
   100be:	4c 39 49 c1          	cmp    %r9,-0x3f(%rcx)
   100c2:	e3 20                	jrcxz  100e4 <_obstack_newchunk@@Base+0x424>
   100c4:	88 49 c7             	mov    %cl,-0x39(%rcx)
   100c7:	c3                   	ret    
   100c8:	4c 01 e7             	add    %r12,%rdi
   100cb:	00 1f                	add    %bl,(%rdi)
   100cd:	44 00 00             	add    %r8b,(%rax)
   100d0:	48 8b 38             	mov    (%rax),%rdi
   100d3:	48                   	rex.W
   100d4:	4c 85 f3             	test   %r14,%rbx
   100d7:	48 3b 49 21          	cmp    0x21(%rcx),%rcx
   100db:	fc                   	cld    
   100dc:	83 ef 4c             	sub    $0x4c,%edi
   100df:	0f af de             	imul   %esi,%ebx
   100e2:	00 00                	add    %al,(%rax)
   100e4:	01 49 ff             	add    %ecx,-0x1(%rcx)
   100e7:	c0 28 c6             	shrb   $0xc6,(%rax)
   100ea:	00 20                	add    %ah,(%rax)
   100ec:	48 83 05 04 22 01 48 	addq   $0xffffffffffffffff,0x48012204(%rip)        # 480222f8 <obstack_alloc_failed_handler@@Base+0x48000258>
   100f3:	ff 
   100f4:	c2 8c 0f             	ret    $0xf8c
   100f7:	84 11                	test   %dl,(%rcx)
   100f9:	fd                   	std    
   100fa:	ff                   	(bad)  
   100fb:	ff                   	(bad)  
   100fc:	7f 8b                	jg     10089 <_obstack_newchunk@@Base+0x3c9>
   100fe:	ff                   	(bad)  
   100ff:	ff 49 89             	decl   -0x77(%rcx)
   10102:	ea                   	(bad)  
   10103:	45 31 c9             	xor    %r9d,%r9d
   10106:	45 31 ed             	xor    %r13d,%r13d
   10109:	48 85 db             	test   %rbx,%rbx
   1010c:	0f 85 4d fe ff ff    	jne    ff5f <_obstack_newchunk@@Base+0x29f>
   10112:	48 8b 48 31          	mov    0x31(%rax),%rcx
   10116:	f3 48 8b 7c 24 38    	repz mov 0x38(%rsp),%rdi
   1011c:	4c 89 d2             	mov    %r10,%rdx
   1011f:	be 01 00 00 00       	mov    $0x1,%esi
   10124:	48 8b 08             	mov    (%rax),%rcx
   10127:	4c 01 cf             	add    %r9,%rdi
   1012a:	e8 d1 49 ff ff       	call   4b00 <fwrite_unlocked@plt>
   1012f:	48 01 2d c2 21 01 00 	add    %rbp,0x121c2(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   10136:	e9 a5 fe ff ff       	jmp    ffe0 <_obstack_newchunk@@Base+0x320>
   1013b:	0f 1f 44 48 21       	nopl   0x21(%rax,%rcx,2)
   10140:	f7 48 0f af d3 c1 ff 	testl  $0xffc1d3af,0xf(%rax)
   10147:	ff 4d 89             	decl   -0x77(%rbp)
   1014a:	fb                   	sti    
   1014b:	e8 50 49 c1 e6       	call   ffffffffe6c24aa0 <obstack_alloc_failed_handler@@Base+0xffffffffe6c02a00>
   10150:	37                   	(bad)  
   10151:	8d 47 f0             	lea    -0x10(%rdi),%eax
   10154:	e9 4e fd 48 39       	jmp    3949fea7 <obstack_alloc_failed_handler@@Base+0x3947de07>
   10159:	cb                   	lret   
   1015a:	4c 31 d2             	xor    %r10,%rdx
   1015d:	74 42                	je     101a1 <_obstack_newchunk@@Base+0x4e1>
   1015f:	09 cb                	or     %ecx,%ebx
   10161:	08 00                	or     %al,(%rax)
   10163:	00 00                	add    %al,(%rax)
   10165:	48                   	rex.W
   10166:	48 f7 fb             	idiv   %rbx
   10169:	89 54 24 20          	mov    %edx,0x20(%rsp)
   1016d:	48 c1 e9 35          	shr    $0x35,%rcx
   10171:	18 e8                	sbb    %ch,%al
   10173:	49 fb                	rex.WB sti 
   10175:	ff                   	(bad)  
   10176:	ff 48 8b             	decl   -0x75(%rax)
   10179:	53                   	push   %rbx
   1017a:	18 4c 8b 48          	sbb    %cl,0x48(%rbx,%rcx,4)
   1017e:	09 d9                	or     %ebx,%ecx
   10180:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   10185:	e9 f3 fd 4d 01       	jmp    14eff7d <obstack_alloc_failed_handler@@Base+0x14cdedd>
   1018a:	cf                   	iret   
   1018b:	0f 1f 44 49 39       	nopl   0x39(%rcx,%rcx,2)
   10190:	49 31 ff             	xor    %rdi,%r15
   10193:	00 00                	add    %al,(%rax)
   10195:	48 89 48 c1          	mov    %rcx,-0x3f(%rax)
   10199:	ef                   	out    %eax,(%dx)
   1019a:	3d 48 09 d1 8b       	cmp    $0x8bd10948,%eax
   1019f:	4b 18 48 48          	rex.WXB sbb %cl,0x48(%r8)
   101a3:	0f af f8             	imul   %eax,%edi
   101a6:	01 00                	add    %eax,(%rax)
   101a8:	e9 2b fe ff ff       	jmp    ffd8 <_obstack_newchunk@@Base+0x318>
   101ad:	0f 1f 4d 01          	nopl   0x1(%rbp)
   101b1:	4c 89 ef             	mov    %r13,%rdi
   101b4:	31 48 49             	xor    %ecx,0x49(%rax)
   101b7:	ff c7                	inc    %edi
   101b9:	c7                   	(bad)  
   101ba:	0f 8f 43 fc ff ff    	jg     fe03 <_obstack_newchunk@@Base+0x143>
   101c0:	0f b6 f2             	movzbl %dl,%esi
   101c3:	e8 38 49 29 cd       	call   ffffffffcd2a4b00 <obstack_alloc_failed_handler@@Base+0xffffffffcd282a60>
   101c8:	e9 60 48 01 c2       	jmp    ffffffffc2024a2d <obstack_alloc_failed_handler@@Base+0xffffffffc200298d>
   101cd:	0f 1f 00             	nopl   (%rax)
   101d0:	be 20 00 00 00       	mov    $0x20,%esi
   101d5:	e8 26 47 ff ff       	call   4900 <__overflow@plt>
   101da:	e9 0d ff ff ff       	jmp    100ec <_obstack_newchunk@@Base+0x42c>
   101df:	0f b6 f2             	movzbl %dl,%esi
   101e2:	4c                   	rex.WR
   101e3:	4d 39 e1             	cmp    %r12,%r9
   101e6:	18 e8                	sbb    %ch,%al
   101e8:	14 47                	adc    $0x47,%al
   101ea:	ff                   	(bad)  
   101eb:	ff 4c 8b 54          	decl   0x54(%rbx,%rcx,4)
   101ef:	24 18                	and    $0x18,%al
   101f1:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   101f7:	0f 84 dc 00 00 00    	je     102d9 <_obstack_newchunk@@Base+0x619>
   101fd:	61                   	(bad)  
   101fe:	49 ff c6             	inc    %r14
   10201:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0xf49b27c(%rax,%rax,1)
   10208:	7c b2 49 0f 
   1020c:	af                   	scas   %es:(%rdi),%eax
   1020d:	c4                   	(bad)  
   1020e:	40 00 f3             	add    %sil,%bl
   10211:	0f 1e fa             	nop    %edx
   10214:	41 57                	push   %r15
   10216:	41 56                	push   %r14
   10218:	41 55                	push   %r13
   1021a:	49 89 d5             	mov    %rdx,%r13
   1021d:	41 54                	push   %r12
   1021f:	41 89 f4             	mov    %esi,%r12d
   10222:	55                   	push   %rbp
   10223:	53                   	push   %rbx
   10224:	48 89 fb             	mov    %rdi,%rbx
   10227:	48 83 ec 18          	sub    $0x18,%rsp
   1022b:	0f b6 05 d6 20 01 00 	movzbl 0x120d6(%rip),%eax        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
   10232:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   10237:	40 84 f6             	test   %sil,%sil
   1023a:	74 54                	je     10290 <_obstack_newchunk@@Base+0x5d0>
   1023c:	48 8b 0f             	mov    (%rdi),%rcx
   1023f:	8c 81 fe ff ff 88    	mov    %es,-0x77000002(%rcx)
   10245:	01 00                	add    %eax,(%rax)
   10247:	00 48 83             	add    %cl,-0x7d(%rax)
   1024a:	ec                   	in     (%dx),%al
   1024b:	08 ff                	or     %bh,%bh
   1024d:	73 10                	jae    1025f <_obstack_newchunk@@Base+0x59f>
   1024f:	48 8b 35 6a 23 01 00 	mov    0x1236a(%rip),%rsi        # 225c0 <obstack_alloc_failed_handler@@Base+0x520>
   10256:	31 c9                	xor    %ecx,%ecx
   10258:	8b 93 c4 00 00 00    	mov    0xc4(%rbx),%edx
   1025e:	41 83 f4 01          	xor    $0x1,%r12d
   10262:	4d 89 e9             	mov    %r13,%r9
   10265:	48 89 ef             	mov    %rbp,%rdi
   10268:	45 0f b6 c4          	movzbl %r12b,%r8d
   1026c:	e8 7f fb ff ff       	call   fdf0 <_obstack_newchunk@@Base+0x130>
   10271:	49 89 c4             	mov    %rax,%r12
   10274:	e8 c7 c0 ff ff       	call   c340 <__sprintf_chk@plt+0x7660>
   10279:	59                   	pop    %rcx
   1027a:	5e                   	pop    %rsi
   1027b:	48 83 c4 18          	add    $0x18,%rsp
   1027f:	4c 89 e0             	mov    %r12,%rax
   10282:	5b                   	pop    %rbx
   10283:	5d                   	pop    %rbp
   10284:	41 5c                	pop    %r12
   10286:	41 5d                	pop    %r13
   10288:	41 5e                	pop    %r14
   1028a:	41 5f                	pop    %r15
   1028c:	c3                   	ret    
   1028d:	0f 1f 00             	nopl   (%rax)
   10290:	48 8b 2f             	mov    (%rdi),%rbp
   10293:	84 c0                	test   %al,%al
   10295:	74 b1                	je     10248 <_obstack_newchunk@@Base+0x588>
   10297:	80 3d aa 24 01 00 0f 	cmpb   $0xf,0x124aa(%rip)        # 22748 <obstack_alloc_failed_handler@@Base+0x6a8>
   1029e:	84 ba 00 00 00 00    	test   %bh,0x0(%rdx)
   102a4:	00 0f                	add    %cl,(%rdi)
   102a6:	85 55 01             	test   %edx,0x1(%rbp)
   102a9:	00 00                	add    %al,(%rax)
   102ab:	8b 73 30             	mov    0x30(%rbx),%esi
   102ae:	0f b6 48 c1          	movzbl -0x3f(%rax),%ecx
   102b2:	e9 16 0d 00 00       	jmp    10fcd <_obstack_memory_used@@Base+0x81d>
   102b7:	00 84 c9 48 c1 e0 49 	add    %al,0x49e0c148(%rcx,%rcx,8)
   102be:	c1 ed 28             	shr    $0x28,%ebp
   102c1:	8b a8 00 00 00 48    	mov    0x48000000(%rax),%ebp
   102c7:	8d 05 4c 89 de 00    	lea    0xde894c(%rip),%eax        # df8c19 <obstack_alloc_failed_handler@@Base+0xdd6b79>
   102cd:	8b 04 88             	mov    (%rax,%rcx,4),%eax
   102d0:	83 f8 07             	cmp    $0x7,%eax
   102d3:	0f 94 c1             	sete   %cl
   102d6:	83 f8 05             	cmp    $0x5,%eax
   102d9:	48 f7 fb             	idiv   %rbx
   102dc:	01 00                	add    %eax,(%rax)
   102de:	4c 89 ff             	mov    %r15,%rdi
   102e1:	0f 85 e9 03 00 00    	jne    106d0 <_obstack_newchunk@@Base+0xa10>
   102e7:	0f 8c d8 fe ff ff    	jl     101c5 <_obstack_newchunk@@Base+0x505>
   102ed:	00 00                	add    %al,(%rax)
   102ef:	80 3d 52 24 01 00 49 	cmpb   $0x49,0x12452(%rip)        # 22748 <obstack_alloc_failed_handler@@Base+0x6a8>
   102f6:	29 49 c1             	sub    %ecx,-0x3f(%rcx)
   102f9:	e7 13                	out    %eax,$0x13
   102fb:	75 1a                	jne    10317 <_obstack_newchunk@@Base+0x657>
   102fd:	bf 0d 00 00 00       	mov    $0xd,%edi
   10302:	e8 19 be ff 4d       	call   4e00c120 <obstack_alloc_failed_handler@@Base+0x4dfea080>
   10307:	09 db                	or     %ebx,%ebx
   10309:	48 19 c9             	sbb    %rcx,%rcx
   1030c:	0f 85 fe fc ff ff    	jne    10010 <_obstack_newchunk@@Base+0x350>
   10312:	49 01 c8             	add    %rcx,%r8
   10315:	00 00                	add    %al,(%rax)
   10317:	48 8d                	rex.W (bad) 
   10319:	e9 c7 03 00 00       	jmp    106e5 <_obstack_allocated_p@@Base+0x5>
   1031e:	00 00                	add    %al,(%rax)
   10320:	ff 48 83             	decl   -0x7d(%rax)
   10323:	79 08                	jns    1032d <_obstack_newchunk@@Base+0x66d>
   10325:	00 75 14             	add    %dh,0x14(%rbp)
   10328:	bf 04 00 00 00       	mov    $0x4,%edi
   1032d:	e8 ee bd ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
   10332:	84 c0                	test   %al,%al
   10334:	0f 84 0e ff ff ff    	je     10248 <_obstack_newchunk@@Base+0x588>
   1033a:	31 c9                	xor    %ecx,%ecx
   1033c:	48 83 49 29 c4       	orq    $0xffffffffffffffc4,0x29(%rcx)
   10341:	73 10                	jae    10353 <_obstack_newchunk@@Base+0x693>
   10343:	8b 93 c4 00 00 00    	mov    0xc4(%rbx),%edx
   10349:	4d 89 e9             	mov    %r13,%r9
   1034c:	48 39 fe             	cmp    %rdi,%rsi
   1034f:	01 4c 21 fb          	add    %ecx,-0x5(%rcx,%riz,1)
   10353:	69 22 01 00 48 89    	imul   $0x89480001,(%rdx),%esp
   10359:	ef                   	out    %eax,(%dx)
   1035a:	45 0f b6 49 ff       	movzbl -0x1(%r9),%r9d
   1035f:	c3                   	ret    
   10360:	fa                   	cli    
   10361:	ff                   	(bad)  
   10362:	ff 49 89             	decl   -0x77(%rcx)
   10365:	c4                   	(bad)  
   10366:	e8 d5 4d 89 d8       	call   ffffffffd88a5140 <obstack_alloc_failed_handler@@Base+0xffffffffd88830a0>
   1036b:	48 83 3d 75 1d 01 00 	cmpq   $0x0,0x11d75(%rip)        # 220e8 <obstack_alloc_failed_handler@@Base+0x48>
   10372:	00 
   10373:	48 c1 49 21 dd       	rorq   $0xdd,0x21(%rcx)
   10378:	01 00                	add    %eax,(%rax)
   1037a:	00 48 8d             	add    %cl,-0x73(%rax)
   1037d:	3d 5e 1d 4c 0f       	cmp    $0xf4c1d5e,%eax
   10382:	af                   	scas   %es:(%rdi),%eax
   10383:	ce                   	(bad)  
   10384:	bf ff ff 48 4d       	mov    $0x4d48ffff,%edi
   10389:	85 49 09             	test   %ecx,0x9(%rcx)
   1038c:	f4                   	hlt    
   1038d:	fc                   	cld    
   1038e:	ff                   	(bad)  
   1038f:	ff 48 ff             	decl   -0x1(%rax)
   10392:	c7                   	(bad)  
   10393:	e4 49                	in     $0x49,%al
   10395:	49 ff c3             	inc    %r11
   10398:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1039c:	c1 48 ff c1          	rorl   $0xc1,-0x1(%rax)
   103a0:	f1                   	int1   
   103a1:	31 d2                	xor    %edx,%edx
   103a3:	48 89 c6             	mov    %rax,%rsi
   103a6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   103ab:	49 8d 48 c1          	lea    -0x3f(%r8),%rcx
   103af:	ee                   	out    %al,(%dx)
   103b0:	19 f7                	sbb    %esi,%edi
   103b2:	f1                   	int1   
   103b3:	48 39 c6             	cmp    %rax,%rsi
   103b6:	0f 84 bf fe ff ff    	je     1027b <_obstack_newchunk@@Base+0x5bb>
   103bc:	48 8d 4d 21          	lea    0x21(%rbp),%rcx
   103c0:	c2 0f 85             	ret    $0x850f
   103c3:	3c ff                	cmp    $0xff,%al
   103c5:	ff                   	(bad)  
   103c6:	ff                   	(bad)  
   103c7:	ff                   	(bad)  
   103c8:	e9 ae fe ff ff       	jmp    1027b <_obstack_newchunk@@Base+0x5bb>
   103cd:	0f 1f 00             	nopl   (%rax)
   103d0:	80 4c 4c 0f af       	orb    $0xaf,0xf(%rsp,%rcx,2)
   103d5:	c1 00 8b             	roll   $0x8b,(%rax)
   103d8:	b7 4c                	mov    $0x4c,%bh
   103da:	49 c1 ee 1a          	shr    $0x1a,%r14
   103de:	39 bf 0c 00 00 00    	cmp    %edi,0xc(%rdi)
   103e4:	e8 37 bd 49 f7       	call   fffffffff74ac120 <obstack_alloc_failed_handler@@Base+0xfffffffff748a080>
   103e9:	fa                   	cli    
   103ea:	ff                   	(bad)  
   103eb:	ff                   	(bad)  
   103ec:	ff                   	(bad)  
   103ed:	ff 84 c0 0f 49 c1 e8 	incl   -0x173eb6f1(%rax,%rax,8)
   103f4:	33 0f                	xor    (%rdi),%ecx
   103f6:	8c d9                	mov    %ds,%ecx
   103f8:	fd                   	std    
   103f9:	0f 8c b0 01 00 00    	jl     105af <_obstack_newchunk@@Base+0x8ef>
   103ff:	ff 84 c0 0f 84 a3 fe 	incl   -0x15c7bf1(%rax,%rax,8)
   10406:	ff                   	(bad)  
   10407:	ff 8b b3 ac 00 00    	decl   0xacb3(%rbx)
   1040d:	00 e9                	add    %ch,%cl
   1040f:	9b                   	fwait
   10410:	fe                   	(bad)  
   10411:	ff                   	(bad)  
   10412:	ff 0f                	decl   (%rdi)
   10414:	1f                   	(bad)  
   10415:	44 00 4d 39          	add    %r9b,0x39(%rbp)
   10419:	49 c1 ef 30          	shr    $0x30,%r15
   1041d:	00 00                	add    %al,(%rax)
   1041f:	31 d2                	xor    %edx,%edx
   10421:	84 e9                	test   %ch,%cl
   10423:	a9 03 00 00 ff       	test   $0xff000003,%eax
   10428:	ff 89 f0 25 00 f0    	decl   -0xfffda10(%rcx)
   1042e:	00 7f 94             	add    %bh,-0x6c(%rdi)
   10431:	00 80 00 00 0f 84    	add    %al,-0x7bf10000(%rax)
   10437:	49 c7 c0 73 01 00 00 	mov    $0x173,%r8
   1043e:	00 00                	add    %al,(%rax)
   10440:	0f 84 ba 01 00 00    	je     10600 <_obstack_newchunk@@Base+0x940>
   10446:	3d 00 a0 00 00       	cmp    $0xa000,%eax
   1044b:	0f 84 0f 02 00 0f    	je     f010660 <obstack_alloc_failed_handler@@Base+0xefee5c0>
   10451:	85 16                	test   %edx,(%rsi)
   10453:	fe                   	(bad)  
   10454:	ff                   	(bad)  
   10455:	ff                   	(bad)  
   10456:	3d 00 10 49 89       	cmp    $0x89491000,%eax
   1045b:	f7 84 b6 fe ff ff b9 	testl  $0xf000090,-0x46000002(%rsi,%rsi,4)
   10462:	90 00 00 0f 
   10466:	84 0e                	test   %cl,(%rsi)
   10468:	02 00                	add    (%rax),%al
   1046a:	00 0f                	add    %cl,(%rdi)
   1046c:	84 a6 fe ff ff b9    	test   %ah,-0x46000002(%rsi)
   10472:	a0 00 00 00 3d 00 60 	movabs 0x60003d000000,%al
   10479:	00 00 
   1047b:	0f 84 96 fe ff 48    	je     49010317 <obstack_alloc_failed_handler@@Base+0x48fee277>
   10481:	f7 ff                	idiv   %edi
   10483:	20 00                	and    %al,(%rax)
   10485:	00 7c c1 00          	add    %bh,0x0(%rcx,%rax,8)
   10489:	00 00                	add    %al,(%rax)
   1048b:	b8 0f 84 f6 01       	mov    $0x1f6840f,%eax
   10490:	00 00                	add    %al,(%rax)
   10492:	45 c8 e9 7e fe       	rex.RB enter $0x7ee9,$0xfe
   10497:	ff                   	(bad)  
   10498:	ff 0f                	decl   (%rdi)
   1049a:	48 c1 e2 04          	shl    $0x4,%rdx
   1049e:	00 00                	add    %al,(%rax)
   104a0:	48 8d 3d 19 1c 01 49 	lea    0x49011c19(%rip),%rdi        # 490220c0 <obstack_alloc_failed_handler@@Base+0x49000020>
   104a7:	21 cf                	and    %ecx,%edi
   104a9:	bd ff ff 48 49       	mov    $0x4948ffff,%ebp
   104ae:	01 dc                	add    %ebx,%esp
   104b0:	85 af 03 00 e9 cf    	test   %ebp,-0x3016fffd(%rdi)
   104b6:	01 00                	add    %eax,(%rax)
   104b8:	00 8d 3d 11 1c 01    	add    %cl,0x11c113d(%rbp)
   104be:	00 e8                	add    %ch,%al
   104c0:	dc 49 f7             	fmull  -0x9(%rcx)
   104c3:	0f 8f f6 fe ff ff    	jg     103bf <_obstack_newchunk@@Base+0x6ff>
   104c9:	ff 1f                	lcall  *(%rdi)
   104cb:	80 00 00             	addb   $0x0,(%rax)
   104ce:	4c 29 df             	sub    %r11,%rdi
   104d1:	89 e9                	mov    %ebp,%ecx
   104d3:	b3 03                	mov    $0x3,%bl
   104d5:	00 00                	add    %al,(%rax)
   104d7:	ff 48 8b             	decl   -0x75(%rax)
   104da:	0d c1 1f 01 00       	or     $0x11fc1,%eax
   104df:	48 29 f8             	sub    %rdi,%rax
   104e2:	48 85 c9             	test   %rcx,%rcx
   104e5:	0f 84 84 00 00 00    	je     1056f <_obstack_newchunk@@Base+0x8af>
   104eb:	48 31 f1             	xor    %rsi,%rcx
   104ee:	0f 8c 9a 03 00 00    	jl     1088e <_obstack_memory_used@@Base+0xde>
   104f4:	39 d7                	cmp    %edx,%edi
   104f6:	72 6e                	jb     10566 <_obstack_newchunk@@Base+0x8a6>
   104f8:	49 89 de             	mov    %rbx,%r14
   104fb:	4c 8b 59 08          	mov    0x8(%rcx),%r11
   104ff:	49 29 4c 29 e6       	sub    %rcx,-0x1a(%r9,%rbp,1)
   10504:	ea                   	(bad)  
   10505:	49 29 da             	sub    %rbx,%r10
   10508:	09 d3                	or     %edx,%ebx
   1050a:	48 85 48 c1          	test   %rcx,-0x3f(%rax)
   1050e:	ef                   	out    %eax,(%dx)
   1050f:	31 c0                	xor    %eax,%eax
   10511:	4c 8d 72 ff          	lea    -0x1(%rdx),%r14
   10515:	48 c7 c7 4f fe ff ff 	mov    $0xfffffffffffffe4f,%rdi
   1051c:	00 00                	add    %al,(%rax)
   1051e:	00 00                	add    %al,(%rax)
   10520:	84 d2                	test   %dl,%dl
   10522:	74 3d                	je     10561 <_obstack_newchunk@@Base+0x8a1>
   10524:	48 83 c0 49          	add    $0x49,%rax
   10528:	c7 c0 55 03 00 00    	mov    $0x355,%eax
   1052e:	0f b6 0f             	movzbl (%rdi),%ecx
   10531:	84 6f fd             	test   %ch,-0x3(%rdi)
   10534:	ff                   	(bad)  
   10535:	ff                   	(bad)  
   10536:	ff 89 c2 83 fe 4d    	decl   0x4dfe83c2(%rcx)
   1053c:	39 ed                	cmp    %ebp,%ebp
   1053e:	41 83 c0 20          	add    $0x20,%r8d
   10542:	83 c2 20             	add    $0x20,%edx
   10545:	41 0f b6 3c 03       	movzbl (%r11,%rax,1),%edi
   1054a:	44 8d 4f bf          	lea    -0x41(%rdi),%r9d
   1054e:	89 fe                	mov    %edi,%esi
   10550:	41                   	rex.B
   10551:	49                   	rex.WB
   10552:	48 c1 e6 1b          	shl    $0x1b,%rsi
   10556:	ff                   	(bad)  
   10557:	ff 20                	jmp    *(%rax)
   10559:	49 85 49 c7          	test   %rcx,-0x39(%r9)
   1055d:	c1 db 03             	rcr    $0x3,%ebx
   10560:	00 00                	add    %al,(%rax)
   10562:	39 49 c7             	cmp    %ecx,-0x39(%rcx)
   10565:	c5 e0 4d             	(bad)
   10568:	0f af e1             	imul   %ecx,%esp
   1056b:	f7 fb                	idiv   %ebx
   1056d:	4d 31 c4             	xor    %r8,%r12
   10570:	50                   	push   %rax
   10571:	49 0f af db          	imul   %r11,%rbx
   10575:	9e                   	sahf   
   10576:	fd                   	std    
   10577:	ff                   	(bad)  
   10578:	ff 0f                	decl   (%rdi)
   1057a:	1f                   	(bad)  
   1057b:	80 00 00             	addb   $0x0,(%rax)
   1057e:	00 00                	add    %al,(%rax)
   10580:	48                   	rex.W
   10581:	4d 85 c9             	test   %r9,%r9
   10584:	49 c1 e8 07          	shr    $0x7,%r8
   10588:	ff 0f                	decl   (%rdi)
   1058a:	0f 85 05 fe ff ff    	jne    10395 <_obstack_newchunk@@Base+0x6d5>
   10590:	f7 c6 00 08 00 00    	test   $0x800,%esi
   10596:	74 18                	je     105b0 <_obstack_newchunk@@Base+0x8f0>
   10598:	bf 10 00 00 00       	mov    $0x10,%edi
   1059d:	e8 7e bb ff ff       	call   c120 <__sprintf_chk@plt+0x7440>
   105a2:	84 c0                	test   %al,%al
   105a4:	74 0a                	je     105b0 <_obstack_newchunk@@Base+0x8f0>
   105a6:	b9 00 01 48 85       	mov    $0x85480100,%ecx
   105ab:	c8 c1 eb 16          	enter  $0xebc1,$0x16
   105af:	ff f7                	push   %rdi
   105b1:	c6 00 04             	movb   $0x4,(%rax)
   105b4:	00 4d 0f             	add    %cl,0xf(%rbp)
   105b7:	af                   	scas   %es:(%rdi),%eax
   105b8:	fe 07                	incb   (%rdi)
   105ba:	00 00                	add    %al,(%rax)
   105bc:	00 e8                	add    %ch,%al
   105be:	5e                   	pop    %rsi
   105bf:	bb ff ff 84 c0       	mov    $0xc084ffff,%ebx
   105c4:	0f 84 a6 00 00 4d    	je     4d010670 <obstack_alloc_failed_handler@@Base+0x4cfee5d0>
   105ca:	01 d6                	add    %edx,%esi
   105cc:	c0 00 00             	rolb   $0x0,(%rax)
   105cf:	00 00                	add    %al,(%rax)
   105d1:	4d 31 d7             	xor    %r10,%r15
   105d4:	00 00                	add    %al,(%rax)
   105d6:	00 b9 50 01 00 00    	add    %bh,0x150(%rcx)
   105dc:	e9 36 fd 49 89       	jmp    ffffffff894b0317 <obstack_alloc_failed_handler@@Base+0xffffffff8948e277>
   105e1:	fc                   	cld    
   105e2:	1f                   	(bad)  
   105e3:	80 00 4c             	addb   $0x4c,(%rax)
   105e6:	31 e0                	xor    %esp,%eax
   105e8:	4d 09 48 c1          	or     %r9,-0x3f(%r8)
   105ec:	e2 0a                	loop   105f8 <_obstack_newchunk@@Base+0x938>
   105ee:	c1 bb ff ff 84 c0 49 	sarl   $0x49,-0x3f7b0001(%rbx)
   105f5:	f7 49 c1 ec 0e 00 e9 	testl  $0xe9000eec,-0x3f(%rcx)
   105fc:	17                   	(bad)  
   105fd:	fd                   	std    
   105fe:	ff 4d 0f             	decl   0xf(%rbp)
   10601:	af                   	scas   %es:(%rdi),%eax
   10602:	ee                   	out    %al,(%dx)
   10603:	49 c1 ea 17          	shr    $0x17,%r10
   10607:	3d 02 02 00 00       	cmp    $0x202,%eax
   1060c:	0f 84 a2 00 00 49    	je     490106b4 <obstack_alloc_failed_handler@@Base+0x48fee614>
   10612:	c7 c7 6d ff ff ff    	mov    $0xffffff6d,%edi
   10618:	bf 13 00 48 01       	mov    $0x1480013,%edi
   1061d:	c0 fe ba             	sar    $0xba,%dh
   10620:	ff                   	(bad)  
   10621:	ff                   	(bad)  
   10622:	b9 30 01 00 49       	mov    $0x49000130,%ecx
   10627:	0f                   	(bad)  
   10628:	0f 84 60 fd ff ff    	je     1038e <_obstack_newchunk@@Base+0x6ce>
   1062e:	ff 4c 4d 29          	decl   0x29(%rbp,%rcx,2)
   10632:	e2 0f                	loop   10643 <_obstack_newchunk@@Base+0x983>
   10634:	8c 4f 49             	mov    %cs,0x49(%rdi)
   10637:	f7 fb                	idiv   %ebx
   10639:	00 0f                	add    %cl,(%rdi)
   1063b:	84 49 f7             	test   %cl,-0x9(%rcx)
   1063e:	f9                   	stc    
   1063f:	84 d0                	test   %dl,%al
   10641:	fc                   	cld    
   10642:	ff                   	(bad)  
   10643:	ff 00                	incl   (%rax)
   10645:	e8 48 21 cb ff       	call   ffffffffffcc2792 <obstack_alloc_failed_handler@@Base+0xffffffffffca06f2>
   1064a:	3c 01                	cmp    $0x1,%al
   1064c:	48 19 c9             	sbb    %rcx,%rcx
   1064f:	0f 84 52 49 c7 c2    	je     ffffffffc2c84fa7 <obstack_alloc_failed_handler@@Base+0xffffffffc2c62f07>
   10655:	e4 03                	in     $0x3,%al
   10657:	00 4d 31             	add    %cl,0x31(%rbp)
   1065a:	e8 fc ff 0f 85       	call   ffffffff8511065b <obstack_alloc_failed_handler@@Base+0xffffffff850ee5bb>
   1065f:	ac                   	lods   %ds:(%rsi),%al
   10660:	fe                   	(bad)  
   10661:	ff                   	(bad)  
   10662:	ff 49 c1             	decl   -0x3f(%rcx)
   10665:	ef                   	out    %eax,(%dx)
   10666:	30 fc                	xor    %bh,%ah
   10668:	0f 49 39             	cmovns (%rcx),%edi
   1066b:	d2 8e 01 00 48 49    	rorb   %cl,0x49480001(%rsi)
   10671:	c7 c7 f5 fd ff ff    	mov    $0xfffffdf5,%edi
   10677:	af                   	scas   %es:(%rdi),%eax
   10678:	f3 00 e8             	repz add %ch,%al
   1067b:	a1 4c 0f 8c 0c 01 00 	movabs 0xb90000010c8c0f4c,%eax
   10682:	00 b9 
   10684:	e0 00                	loopne 10686 <_obstack_newchunk@@Base+0x9c6>
   10686:	00 00                	add    %al,(%rax)
   10688:	e9 8a 48 c7 c3       	jmp    ffffffffc3c84f17 <obstack_alloc_failed_handler@@Base+0xffffffffc3c62e77>
   1068d:	31 48 09             	xor    %ecx,0x9(%rax)
   10690:	db 01                	fildl  (%rcx)
   10692:	0f 86 38 fe ff 0f    	jbe    100104d0 <obstack_alloc_failed_handler@@Base+0xffee430>
   10698:	84 06                	test   %al,(%rsi)
   1069a:	02 00                	add    (%rax),%al
   1069c:	00 e3                	add    %ah,%bl
   1069e:	2d ba 4d 39 fb       	sub    $0xfb394dba,%eax
   106a3:	c0 0f 84             	rorb   $0x84,(%rdi)
   106a6:	26 fe                	es (bad) 
   106a8:	ff                   	(bad)  
   106a9:	ff                   	(bad)  
   106aa:	b9 60 01 00 48       	mov    $0x48000160,%ecx
   106af:	c7 c2 b3 01 00 00    	mov    $0x1b3,%edx
   106b5:	14 00                	adc    $0x0,%al
   106b7:	00 00                	add    %al,(%rax)
   106b9:	e8 62 48 39 cb       	call   ffffffffcb3a4f20 <obstack_alloc_failed_handler@@Base+0xffffffffcb382e80>
   106be:	b9 40 01 00 00       	mov    $0x140,%ecx
   106c3:	84 c0                	test   %al,%al
   106c5:	0f 48 c1             	cmovs  %ecx,%eax
   106c8:	e8 2b ff e9 42       	call   42eb05f8 <obstack_alloc_failed_handler@@Base+0x42e8e558>
   106cd:	ff                   	(bad)  
   106ce:	ff 0f                	decl   (%rdi)
   106d0:	49 c1 e9 2f          	shr    $0x2f,%r9
   106d4:	ff 89 c1 e9 3b fc    	decl   -0x3c4163f(%rcx)
   106da:	ff                   	(bad)  
   106db:	ff 0f                	decl   (%rdi)
   106dd:	1f                   	(bad)  
   106de:	40                   	rex
   106df:	48                   	rex.W

00000000000106e0 <_obstack_allocated_p@@Base>:
   106e0:	ff c3                	inc    %ebx
   106e2:	1e                   	(bad)  
   106e3:	48 c1 ee 2e          	shr    $0x2e,%rsi
   106e7:	bc 48 c7 c1 77       	mov    $0x77c1c748,%esp
   106ec:	02 00                	add    (%rax),%al
   106ee:	00 00                	add    %al,(%rax)
   106f0:	48 39 c6             	cmp    %rax,%rsi
   106f3:	76 48                	jbe    1073d <_obstack_free@@Base+0x1d>
   106f5:	f7 fe                	idiv   %esi
   106f7:	49 c7 c4 4d 01 c5 ff 	mov    $0xffffffffffc5014d,%r12
   106fe:	48 85 c0             	test   %rax,%rax
   10701:	75 ed                	jne    106f0 <_obstack_allocated_p@@Base+0x10>
   10703:	31 c0                	xor    %eax,%eax
   10705:	c3                   	ret    
   10706:	66 2e 0f 1f 84 4c 85 	cs nopw 0xd185(%rsp,%rcx,2)
   1070d:	d1 00 00 
   10710:	b8 01 00 49 89       	mov    $0x89490001,%eax
   10715:	d0 c3                	rol    %bl
   10717:	66 eb ad             	data16 jmp 106c7 <_obstack_newchunk@@Base+0xa07>
   1071a:	48 c1 e3 27          	shl    $0x27,%rbx
	...

0000000000010720 <_obstack_free@@Base>:
   10720:	f3 0f 1e fa          	endbr64 
   10724:	41 54                	push   %r12
   10726:	49                   	rex.WB
   10727:	48 0f af fb          	imul   %rbx,%rdi
   1072b:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1072f:	48 89 0f             	mov    %rcx,(%rdi)
   10732:	84 74 ff ff          	test   %dh,-0x1(%rdi,%rdi,8)
   10736:	ff                   	(bad)  
   10737:	eb 42                	jmp    1077b <_obstack_free@@Base+0x5b>
   10739:	0f 1f 80 00 00 4d 0f 	nopl   0xf4d0000(%rax)
   10740:	8c 1a                	mov    %ds,(%rdx)
   10742:	fc                   	cld    
   10743:	ff                   	(bad)  
   10744:	ff                   	(bad)  
   10745:	ff 80 49 0f 8f 36    	incl   0x368f0f49(%rax)
   1074b:	fd                   	std    
   1074c:	ff                   	(bad)  
   1074d:	ff 8c fe ff ff 4c 39 	decl   0x394cffff(%rsi,%rdi,8)
   10754:	e6 73                	out    %al,$0x73
   10756:	08 48 8b             	or     %cl,-0x75(%rax)
   10759:	06                   	(bad)  
   1075a:	4c 39 e0             	cmp    %r12,%rax
   1075d:	73 31                	jae    10790 <_obstack_free@@Base+0x70>
   1075f:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
   10763:	ec                   	in     (%dx),%al
   10764:	10 d9                	adc    %bl,%cl
   10766:	40 f6 43 50 01       	rex testb $0x1,0x50(%rbx)
   1076b:	75 d3                	jne    10740 <_obstack_free@@Base+0x20>
   1076d:	48                   	rex.W
   1076e:	4d 0f af da          	imul   %r10,%r11
   10772:	80 4b 50 02          	orb    $0x2,0x50(%rbx)
   10776:	0f 85 f3 4d 01 ce    	jne    ffffffffce02556f <obstack_alloc_failed_handler@@Base+0xffffffffce0034cf>
   1077c:	85 e4                	test   %esp,%esp
   1077e:	0f 85 86 45 ff 4c    	jne    4d004d0a <obstack_alloc_failed_handler@@Base+0x4cfe2c6a>
   10784:	31 e0                	xor    %esp,%eax
   10786:	e0 40                	loopne 107c8 <_obstack_memory_used@@Base+0x18>
   10788:	c3                   	ret    
   10789:	0f 84 bc 00 00 49    	je     4901084b <obstack_alloc_failed_handler@@Base+0x48fee7ab>
   1078f:	0f af f7             	imul   %edi,%esi
   10792:	00 00                	add    %al,(%rax)
   10794:	4c 89 63 10          	mov    %r12,0x10(%rbx)
   10798:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1079c:	48 89 49 85          	mov    %rcx,-0x7b(%rcx)
   107a0:	db f1                	fcomi  %st(1),%st
   107a2:	8c 97 fd ff ff 2e    	mov    %ss,0x2efffffd(%rdi)
   107a8:	0f 1f 49 89          	nopl   -0x77(%rcx)
   107ac:	ce                   	(bad)  
   107ad:	00 00                	add    %al,(%rax)
	...

00000000000107b0 <_obstack_memory_used@@Base>:
   107b0:	f3 0f 1e fa          	endbr64 
   107b4:	48 8b 47 08          	mov    0x8(%rdi),%rax
   107b8:	45 31 c0             	xor    %r8d,%r8d
   107bb:	48                   	rex.W
   107bc:	49 c1 e6 49          	shl    $0x49,%r14
   107c0:	ff 0f                	decl   (%rdi)
   107c2:	84 d2                	test   %dl,%dl
   107c4:	fd                   	std    
   107c5:	ff                   	(bad)  
   107c6:	ff                   	(bad)  
   107c7:	ff 4a ff             	decl   -0x1(%rdx)
   107ca:	ff                   	(bad)  
   107cb:	ff d0                	call   *%rax
   107cd:	48 85 c0             	test   %rax,%rax
   107d0:	4d 85 d4             	test   %r10,%r12
   107d3:	89 49 21             	mov    %ecx,0x21(%rcx)
   107d6:	e9 f1 fd ff ff       	jmp    105cc <_obstack_newchunk@@Base+0x90c>
   107db:	00 00                	add    %al,(%rax)
   107dd:	00 00                	add    %al,(%rax)
   107df:	49 21 fa             	and    %rdi,%r10
   107e2:	1e                   	(bad)  
   107e3:	fa                   	cli    
   107e4:	41 57                	push   %r15
   107e6:	0f 8f b2 4c 4d 0f    	jg     f4e549e <obstack_alloc_failed_handler@@Base+0xf4c33fe>
   107ec:	af                   	scas   %es:(%rdi),%eax
   107ed:	c5 d0 00             	(bad)
   107f0:	00 08                	add    %cl,(%rax)
   107f2:	4c 8b 66 4d          	mov    0x4d(%rsi),%r12
   107f6:	89 dc                	mov    %ebx,%esp
   107f8:	e4 0f                	in     $0xf,%al
   107fa:	84 b1 00 00 4d 39    	test   %dh,0x394d0000(%rcx)
   10800:	f8                   	clc    
   10801:	89 e2                	mov    %esp,%edx
   10803:	89 f5                	mov    %esi,%ebp
   10805:	4c 39 e6             	cmp    %r12,%rsi
   10808:	77 0e                	ja     10818 <_obstack_memory_used@@Base+0x68>
   1080a:	48 21 c0             	and    %rax,%rax
   1080d:	38 b8 01 0f 84 e3    	cmp    %bh,-0x1c7bf0ff(%rax)
   10813:	fc                   	cld    
   10814:	ff                   	(bad)  
   10815:	ff 72 71             	push   0x71(%rdx)
   10818:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   1081d:	48 8d 49 c1          	lea    -0x3f(%rcx),%rcx
   10821:	ee                   	out    %al,(%dx)
   10822:	2a 0f                	sub    (%rdi),%cl
   10824:	1f                   	(bad)  
   10825:	44 00 00             	add    %r8b,(%rax)
   10828:	4c 89 e6             	mov    %r12,%rsi
   1082b:	48 89 df             	mov    %rbx,%rdi
   1082e:	e8 48 0f af cb       	call   ffffffffcbb0177b <obstack_alloc_failed_handler@@Base+0xffffffffcbadf6db>
   10833:	85 c0                	test   %eax,%eax
   10835:	74 49                	je     10880 <_obstack_memory_used@@Base+0xd0>
   10837:	80 3b 00             	cmpb   $0x0,(%rbx)
   1083a:	75 13                	jne    1084f <_obstack_memory_used@@Base+0x9f>
   1083c:	4c 8d 75 4c          	lea    0x4c(%rbp),%r14
   10840:	85 ff                	test   %edi,%edi
   10842:	de 0f                	fimuls (%rdi)
   10844:	85 7f 00             	test   %edi,0x0(%rdi)
   10847:	00 0f                	add    %cl,(%rdi)
   10849:	85 22                	test   %esp,(%rdx)
   1084b:	02 00                	add    (%rax),%al
   1084d:	00 e5                	add    %ah,%ch
   1084f:	fc                   	cld    
   10850:	ff                   	(bad)  
   10851:	ff                   	(bad)  
   10852:	e8 49 f7 ff ff       	call   ffa0 <_obstack_newchunk@@Base+0x2e0>
   10857:	48 8d 5c 03 01       	lea    0x1(%rbx,%rax,1),%rbx
   1085c:	80 3b e9             	cmpb   $0xe9,(%rbx)
   1085f:	d4                   	(bad)  
   10860:	fd                   	std    
   10861:	ff                   	(bad)  
   10862:	ff 45 49             	incl   0x49(%rbp)
   10865:	ff c5                	inc    %ebp
   10867:	48 c7 c7 3a 01 00 00 	mov    $0x13a,%rdi
   1086e:	0f 8c 5f 03 00 00    	jl     10bd3 <_obstack_memory_used@@Base+0x423>
   10874:	c2 89 df             	ret    $0xdf89
   10877:	e8 74 41 ff ff       	call   49f0 <strcmp@plt>
   1087c:	4d 39 c3             	cmp    %r8,%r11
   1087f:	b7 49                	mov    $0x49,%bh
   10881:	89 5d 30             	mov    %ebx,0x30(%rbp)
   10884:	b8 01 00 49 c1       	mov    $0xc1490001,%eax
   10889:	ed                   	in     (%dx),%eax
   1088a:	25 c4 08 5b 5d       	and    $0x5d5b08c4,%eax
   1088f:	41 5c                	pop    %r12
   10891:	41                   	rex.B
   10892:	49 c7 c4 44 03 00 00 	mov    $0x344,%r12
   10899:	1f                   	(bad)  
   1089a:	84 00                	test   %al,(%rax)
   1089c:	48 31 0f             	xor    %rcx,(%rdi)
   1089f:	8f 00                	pop    (%rax)
   108a1:	03 00                	add    (%rax),%eax
   108a3:	00 93 00 00 eb d7    	add    %dl,-0x28150000(%rbx)
   108a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   108b0:	48 83 0f 8f          	orq    $0xffffffffffffff8f,(%rdi)
   108b4:	10 0f                	adc    %cl,(%rdi)
   108b6:	49 31 f6             	xor    %rsi,%r14
   108b9:	00 00                	add    %al,(%rax)
   108bb:	49 f7 ff             	idiv   %r15
   108be:	5d                   	pop    %rbp
   108bf:	41 5e                	pop    %r14
   108c1:	41 5f                	pop    %r15
   108c3:	c3                   	ret    
   108c4:	0f 1f 40 00          	nopl   0x0(%rax)
   108c8:	0f 85 84 fe ff ff    	jne    10752 <_obstack_free@@Base+0x32>
   108ce:	ff                   	(bad)  
   108cf:	ff 49 89             	decl   -0x77(%rcx)
   108d2:	c7                   	(bad)  
   108d3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   108d7:	48                   	rex.W
   108d8:	4c 39 ce             	cmp    %r9,%rsi
   108db:	29 f0                	sub    %esi,%eax
   108dd:	48 01 d0             	add    %rdx,%rax
   108e0:	72 43                	jb     10925 <_obstack_memory_used@@Base+0x175>
   108e2:	48 83 f8 76          	cmp    $0x76,%rax
   108e6:	77 18                	ja     10900 <_obstack_memory_used@@Base+0x150>
   108e8:	4c 89 e6             	mov    %r12,%rsi
   108eb:	48 89 df             	mov    %rbx,%rdi
   108ee:	49 f7 fd             	idiv   %r13
   108f1:	e9 15 ff ff ff       	jmp    1080b <_obstack_memory_used@@Base+0x5b>
   108f6:	3b 01                	cmp    (%rcx),%eax
   108f8:	00 eb                	add    %ch,%bl
   108fa:	85 4c 01 f1          	test   %ecx,-0xf(%rcx,%rax,1)
   108fe:	00 00                	add    %al,(%rax)
   10900:	4c 89 e7             	mov    %r12,%rdi
   10903:	e8 d8 af ff ff       	call   b8e0 <__sprintf_chk@plt+0x6c00>
   10908:	48 89 45 49          	mov    %rax,0x49(%rbp)
   1090c:	21 df                	and    %ebx,%edi
   1090e:	c0 74 0d c6 40       	shlb   $0x40,-0x3a(%rbp,%rcx,1)
   10913:	08 00                	or     %al,(%rax)
   10915:	e9 36 02 00 49       	jmp    49010b50 <obstack_alloc_failed_handler@@Base+0x48feeab0>
   1091a:	c1 ea 05             	shr    $0x5,%edx
   1091d:	48 21 d3             	and    %rdx,%rbx
   10920:	e9 64 ff ff ff       	jmp    10889 <_obstack_memory_used@@Base+0xd9>
   10925:	e8 e6 3d 49 31       	call   314a4710 <obstack_alloc_failed_handler@@Base+0x31482670>
   1092a:	cc                   	int3   
   1092b:	00 0c 00             	add    %cl,(%rax,%rax,1)
   1092e:	00 00                	add    %al,(%rax)
   10930:	31 c0                	xor    %eax,%eax
   10932:	e9 4c 0f af d1       	jmp    ffffffffd1b01883 <obstack_alloc_failed_handler@@Base+0xffffffffd1adf7e3>
   10937:	c1 8f f5 02 00 00 00 	rorl   $0x0,0x2f5(%rdi)
   1093e:	00 48 85             	add    %cl,-0x7b(%rax)
   10941:	c0 1e 48             	rcrb   $0x48,(%rsi)
   10944:	4d 01 f2             	add    %r14,%r10
   10947:	8d 2d 71 92 00 e9    	lea    -0x16ff6d8f(%rip),%ebp        # ffffffffe9019bbe <obstack_alloc_failed_handler@@Base+0xffffffffe8ff7b1e>
   1094d:	6b 02 00             	imul   $0x0,(%rdx),%eax
   10950:	00 7c 21 fb          	add    %bh,-0x5(%rcx,%riz,1)
   10954:	48 21 df             	and    %rbx,%rdi
   10957:	48 83 ec 08          	sub    $0x8,%rsp
   1095b:	e8 60 3d ff ff       	call   46c0 <getenv@plt>
   10960:	49 21 df             	and    %rbx,%r15
   10963:	a8 fd                	test   $0xfd,%al
   10965:	ff                   	(bad)  
   10966:	ff 68 80             	ljmp   *-0x80(%rax)
   10969:	7b 08                	jnp    10973 <_obstack_memory_used@@Base+0x1c3>
   1096b:	00 75 3a             	add    %dh,0x3a(%rbp)
   1096e:	48 89 ef             	mov    %rbp,%rdi
   10971:	e8 6a af ff ff       	call   b8e0 <__sprintf_chk@plt+0x6c00>
   10976:	49 89 c4             	mov    %rax,%r12
   10979:	48 85 c0             	test   %rax,%rax
   1097c:	74 4d                	je     109cb <_obstack_memory_used@@Base+0x21b>
   1097e:	89 df                	mov    %ebx,%edi
   10980:	08 00                	or     %al,(%rax)
   10982:	75 6c                	jne    109f0 <_obstack_memory_used@@Base+0x240>
   10984:	4c 89 ef             	mov    %r13,%rdi
   10987:	e8 49 c7 c5 1d       	call   1dc6d0d5 <obstack_alloc_failed_handler@@Base+0x1dc4b035>
   1098c:	fd                   	std    
   1098d:	ff                   	(bad)  
   1098e:	ff af d8 cb 40 ff    	ljmp   *-0xbf3428(%rdi)
   10994:	ff 0f                	decl   (%rdi)
   10996:	85 77 01             	test   %esi,0x1(%rdi)
   10999:	00 00                	add    %al,(%rax)
   1099b:	e0 5b                	loopne 109f8 <_obstack_memory_used@@Base+0x248>
   1099d:	5d                   	pop    %rbp
   1099e:	41                   	rex.B
   1099f:	48 01 d6             	add    %rdx,%rsi
   109a2:	02 00                	add    (%rax),%al
   109a4:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
   109a8:	4c 89 f8             	mov    %r15,%rax
   109ab:	09 48 4d             	or     %ecx,0x4d(%rax)
   109ae:	09 f6                	or     %esi,%esi
   109b0:	16                   	(bad)  
   109b1:	02 00                	add    (%rax),%al
   109b3:	00 48 49             	add    %cl,0x49(%rax)
   109b6:	21 ce                	and    %ecx,%esi
   109b8:	af                   	scas   %es:(%rdi),%eax
   109b9:	0f 8c 9f fc ff ff    	jl     1065e <_obstack_newchunk@@Base+0x99e>
   109bf:	e7 4c                	out    %eax,$0x4c
   109c1:	39 48 85             	cmp    %ecx,-0x7b(%rax)
   109c4:	f9                   	stc    
   109c5:	5b                   	pop    %rbx
   109c6:	5d                   	pop    %rbp
   109c7:	41 5c                	pop    %r12
   109c9:	41 5d                	pop    %r13
   109cb:	c3                   	ret    
   109cc:	0f 1f 49 c1          	nopl   -0x3f(%rcx)
   109d0:	e3 3c                	jrcxz  10a0e <_obstack_memory_used@@Base+0x25e>
   109d2:	08 00                	or     %al,(%rax)
   109d4:	41 bc 01 00 49 0f    	mov    $0xf490001,%r12d
   109da:	af                   	scas   %es:(%rdi),%eax
   109db:	de 48 83             	fimuls -0x7d(%rax)
   109de:	49 ff c0             	inc    %r8
   109e1:	89 e0                	mov    %esp,%eax
   109e3:	4d 39 ef             	cmp    %r13,%r15
   109e6:	5c                   	pop    %rsp
   109e7:	41 5d                	pop    %r13
   109e9:	c3                   	ret    
   109ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   109f0:	48 8d 48 39          	lea    0x39(%rax),%rcx
   109f4:	de 01                	fiadds (%rcx)
   109f6:	00 00                	add    %al,(%rax)
   109f8:	00 4c 89 4d          	add    %cl,0x4d(%rcx,%rcx,4)
   109fc:	4d 0f af f3          	imul   %r11,%r14
   10a00:	ff                   	(bad)  
   10a01:	e9 2a eb 99 ff       	jmp    ffffffffff9af530 <obstack_alloc_failed_handler@@Base+0xffffffffff98d490>
   10a06:	06                   	(bad)  
   10a07:	48 89 f6             	mov    %rsi,%rsi
   10a0a:	8b 18                	mov    (%rax),%ebx
   10a0c:	48 89 c5             	mov    %rax,%rbp
   10a0f:	49 83 fc 01          	cmp    $0x1,%r12
   10a13:	49 29 c5             	sub    %rax,%r13
   10a16:	d0 e7                	shl    %bh
   10a18:	4d 8b 24 24          	mov    (%r12),%r12
   10a1c:	e8 5f 3c ff ff       	call   4680 <free@plt>
   10a21:	4d 85 e4             	test   %r12,%r12
   10a24:	75 ef                	jne    10a15 <_obstack_memory_used@@Base+0x265>
   10a26:	89 5d 00             	mov    %ebx,0x0(%rbp)
   10a29:	4d 31 48 c7          	xor    %r9,-0x39(%r8)
   10a2d:	c2 7d 00             	ret    $0x7d
   10a30:	00 00                	add    %al,(%rax)
   10a32:	89 0f                	mov    %ecx,(%rdi)
   10a34:	84 a4 03 00 e9 f9 01 	test   %ah,0x1f9e900(%rbx,%rax,1)
   10a3b:	00 00                	add    %al,(%rax)
   10a3d:	44 00 00             	add    %r8b,(%rax)
   10a40:	f3 0f 1e 0f          	repz nopl (%rdi)
   10a44:	84 be eb c8 48 21    	test   %bh,0x2148c8eb(%rsi)
   10a4a:	f9                   	stc    
   10a4b:	89 fb                	mov    %edi,%ebx
   10a4d:	48 83 ec 08          	sub    $0x8,%rsp
   10a51:	e8 ba 3c ff ff       	call   4710 <__errno_location@plt>
   10a56:	80 7b 08 0f          	cmpb   $0xf,0x8(%rbx)
   10a5a:	84 a0 fc ff ff 0f    	test   %ah,0xffffffc(%rax)
   10a60:	8c 80 fc ff ff 55    	mov    %es,0x55fffffc(%rax)
   10a66:	91                   	xchg   %eax,%ecx
   10a67:	00 00                	add    %al,(%rax)
   10a69:	e8 62 41 ff ff       	call   4bd0 <unsetenv@plt>
   10a6e:	85 c0                	test   %eax,%eax
   10a70:	74 4f                	je     10ac1 <_obstack_memory_used@@Base+0x311>
   10a72:	44                   	rex.R
   10a73:	4c 01 d2             	add    %r10,%rdx
   10a76:	29 d9                	sub    %ebx,%ecx
   10a78:	ed                   	in     (%dx),%eax
   10a79:	0f 1f 80 00 4c 01 c2 	nopl   -0x3dfeb400(%rax)
   10a80:	0f 84 27 fe ff ff    	je     108ad <_obstack_memory_used@@Base+0xfd>
   10a86:	e8 f5 3b ff ff       	call   4680 <free@plt>
   10a8b:	74 49                	je     10ad6 <_obstack_memory_used@@Base+0x326>
   10a8d:	db 75 f0             	(bad)  -0x10(%rbp)
   10a90:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   10a94:	48 83 7c 62 44 89    	cmpq   $0xffffffffffffff89,0x44(%rdx,%riz,2)
   10a9a:	e9 4d 89 c7 ff       	jmp    ffffffffffc893ec <obstack_alloc_failed_handler@@Base+0xffffffffffc6734c>
   10a9f:	41 5d                	pop    %r13
   10aa1:	c3                   	ret    
   10aa2:	66 0f 49 c1          	cmovns %cx,%ax
   10aa6:	e1 34                	loope  10adc <_obstack_memory_used@@Base+0x32c>
   10aa8:	49 39 dc             	cmp    %rbx,%r12
   10aab:	f7 ff                	idiv   %edi
   10aad:	01 00                	add    %eax,(%rax)
   10aaf:	00 00                	add    %al,(%rax)
   10ab1:	48 8d 3d 06 91 00 00 	lea    0x9106(%rip),%rdi        # 19bbe <_obstack_memory_used@@Base+0x940e>
   10ab8:	e8 43 0f 84 5f       	call   5f851a00 <obstack_alloc_failed_handler@@Base+0x5f82f960>
   10abd:	fd                   	std    
   10abe:	ff                   	(bad)  
   10abf:	ff b1 49 09 f2 ff    	push   -0xdf6b7(%rcx)
   10ac5:	ff 41 bd             	incl   -0x43(%rcx)
   10ac8:	01 e9                	add    %ebp,%ecx
   10aca:	53                   	push   %rbx
   10acb:	fd                   	std    
   10acc:	ff                   	(bad)  
   10acd:	ff 66 49             	jmp    *0x49(%rsi)
   10ad0:	c7 c1 e2 fe ff ff    	mov    $0xfffffee2,%ecx
   10ad6:	55                   	push   %rbp
   10ad7:	41 54                	push   %r12
   10ad9:	55                   	push   %rbp
   10ada:	48 89 d5             	mov    %rdx,%rbp
   10add:	48 83 ec 08          	sub    $0x8,%rsp
   10ae1:	48                   	rex.W
   10ae2:	48 85 c1             	test   %rax,%rcx
   10ae5:	09 48 85             	or     %ecx,-0x7b(%rax)
   10ae8:	cf                   	iret   
   10ae9:	e8 52 fe ff ff       	call   10940 <_obstack_memory_used@@Base+0x190>
   10aee:	49 7c 58             	rex.WB jl 10b49 <_obstack_memory_used@@Base+0x399>
   10af1:	48 85 49 09          	test   %rcx,0x9(%rcx)
   10af5:	c2 48 89             	ret    $0x8948
   10af8:	ee                   	out    %al,(%dx)
   10af9:	4c 89 f7             	mov    %r14,%rdi
   10afc:	e8 4d 39 da ff       	call   ffffffffffdb444e <obstack_alloc_failed_handler@@Base+0xffffffffffd923ae>
   10b01:	48 85 c0             	test   %rax,%rax
   10b04:	74 2a                	je     10b30 <_obstack_memory_used@@Base+0x380>
   10b06:	48                   	rex.W
   10b07:	4d 0f af de          	imul   %r14,%r11
   10b0b:	e7 e8                	out    %eax,$0xe8
   10b0d:	cf                   	iret   
   10b0e:	fc                   	cld    
   10b0f:	ff 74 8b c0          	push   -0x40(%rbx,%rcx,4)
   10b13:	48 29 df             	sub    %rbx,%rdi
   10b16:	83 fd 01             	cmp    $0x1,%ebp
   10b19:	75 eb                	jne    10b06 <_obstack_memory_used@@Base+0x356>
   10b1b:	c2 83 c4             	ret    $0xc483
   10b1e:	08 48 89             	or     %cl,-0x77(%rax)
   10b21:	e8 5d 48 ff c2       	call   ffffffffc3005383 <obstack_alloc_failed_handler@@Base+0xffffffffc2fe32e3>
   10b26:	5d                   	pop    %rbp
   10b27:	41 5e                	pop    %r14
   10b29:	49 c1 ec 40          	shr    $0x40,%r12
   10b2d:	e1 fc                	loope  10b2b <_obstack_memory_used@@Base+0x37b>
   10b2f:	0f 84 bf fc ff ff    	je     107f4 <_obstack_memory_used@@Base+0x44>
   10b35:	02 00                	add    (%rax),%al
   10b37:	00 ef                	add    %ch,%bh
   10b39:	e8 02 ff 0f 8f       	call   ffffffff8f110a40 <obstack_alloc_failed_handler@@Base+0xffffffff8f0ee9a0>
   10b3e:	66 ff                	data16 (bad) 
   10b40:	ff                   	(bad)  
   10b41:	ff 31                	push   (%rcx)
   10b43:	c0 0f 8c             	rorb   $0x8c,(%rdi)
   10b46:	22 03                	and    (%rbx),%al
   10b48:	00 00                	add    %al,(%rax)
   10b4a:	e1 32                	loope  10b7e <_obstack_memory_used@@Base+0x3ce>
   10b4c:	fe 0f                	decb   (%rdi)
   10b4e:	84 98 fd ff 48 c1    	test   %bl,-0x3eb70003(%rax)
   10b54:	e9 3f ff ff 0f       	jmp    10010a98 <obstack_alloc_failed_handler@@Base+0xffee9f8>
   10b59:	8c 61 01             	mov    %fs,0x1(%rcx)
   10b5c:	00 48 c1             	add    %cl,-0x3f(%rax)
   10b5f:	e1 26                	loope  10b87 <_obstack_memory_used@@Base+0x3d7>
   10b61:	83 c4 08             	add    $0x8,%esp
   10b64:	4c 89 4d 29          	mov    %r9,0x29(%rbp)
   10b68:	ef                   	out    %eax,(%dx)
   10b69:	d6                   	(bad)  
   10b6a:	5d                   	pop    %rbp
   10b6b:	41 5c                	pop    %r12
   10b6d:	41 5d                	pop    %r13
   10b6f:	49 09 f3             	or     %rsi,%r11
   10b72:	aa                   	stos   %al,%es:(%rdi)
   10b73:	3d ff ff 66 2e       	cmp    $0x2e66ffff,%eax
   10b78:	49 c1 e2 05          	shl    $0x5,%r10
   10b7c:	00 00                	add    %al,(%rax)
   10b7e:	00 0f                	add    %cl,(%rdi)
   10b80:	84 6a fd             	test   %ch,-0x3(%rdx)
   10b83:	ff                   	(bad)  
   10b84:	ff 55 41             	call   *0x41(%rbp)
   10b87:	54                   	push   %rsp
   10b88:	55                   	push   %rbp
   10b89:	53                   	push   %rbx
   10b8a:	48 81 ec 00 0f 84 25 	sub    $0x25840f00,%rsp
   10b91:	fe 4c 39 d7          	decb   -0x29(%rcx,%rdi,1)
   10b95:	00 48 81             	add    %cl,-0x7f(%rax)
   10b98:	ec                   	in     (%dx),%al
   10b99:	38 03                	cmp    %al,(%rbx)
   10b9b:	00 00                	add    %al,(%rax)
   10b9d:	0f b6 97 b8 00 00 0f 	movzbl 0xf0000b8(%rdi),%edx
   10ba4:	85 f9                	test   %edi,%ecx
   10ba6:	49 c1 e5 39          	shl    $0x39,%r13
   10baa:	00 00                	add    %al,(%rax)
   10bac:	00 48 49             	add    %cl,0x49(%rax)
   10baf:	49 c7 c5 aa 03 00 00 	mov    $0x3aa,%r13
   10bb6:	0a 02                	or     (%rdx),%al
   10bb8:	00 00                	add    %al,(%rax)
   10bba:	4d 85 f7             	test   %r14,%r15
   10bbd:	84 6e 03             	test   %ch,0x3(%rsi)
   10bc0:	00 0f                	add    %cl,(%rdi)
   10bc2:	8c 37                	mov    %?,(%rdi)
   10bc4:	01 00                	add    %eax,(%rax)
   10bc6:	00 7a 03             	add    %bh,0x3(%rdx)
   10bc9:	00 00                	add    %al,(%rax)
   10bcb:	0f 8c de 02 00 00    	jl     10eaf <_obstack_memory_used@@Base+0x6ff>
   10bd1:	00 7f e6             	add    %bh,-0x1a(%rdi)
   10bd4:	00 80 00 00 74 54    	add    %al,0x54740000(%rax)
   10bda:	b9 64 00 00 00       	mov    $0x64,%ecx
   10bdf:	4c 09 d6             	or     %r10,%rsi
   10be2:	40 00 00             	rex add %al,(%rax)
   10be5:	74 47                	je     10c2e <_obstack_memory_used@@Base+0x47e>
   10be7:	b9 62 00 00 4c       	mov    $0x4c000062,%ecx
   10bec:	0f af f9             	imul   %ecx,%edi
   10bef:	ff                   	(bad)  
   10bf0:	ff 4d 39             	decl   0x39(%rbp)
   10bf3:	fa                   	cli    
   10bf4:	b9 48 ff c6 85       	mov    $0x85c6ff48,%ecx
   10bf9:	d8 fe                	fdivr  %st(6),%st
   10bfb:	49 39 d9             	cmp    %rbx,%r9
   10bfe:	f9                   	stc    
   10bff:	74 2d                	je     10c2e <_obstack_memory_used@@Base+0x47e>
   10c01:	b9 6c 49 ff c4       	mov    $0xc4ff496c,%ecx
   10c06:	c1 29 4c             	shrl   $0x4c,(%rcx)
   10c09:	09 cf                	or     %ecx,%edi
   10c0b:	00 74 20 b9          	add    %dh,-0x47(%rax,%riz,1)
   10c0f:	70 00                	jo     10c11 <_obstack_memory_used@@Base+0x461>
   10c11:	00 00                	add    %al,(%rax)
   10c13:	81 fe 00 10 48 85    	cmp    $0x85481000,%esi
   10c19:	cf                   	iret   
   10c1a:	13 81 fe 00 c0 00    	adc    0xc000fe(%rcx),%eax
   10c20:	00 b9 73 00 48 0f    	add    %bh,0xf480073(%rcx)
   10c26:	af                   	scas   %es:(%rdi),%eax
   10c27:	c6 00 00             	movb   $0x0,(%rax)
   10c2a:	00 0f                	add    %cl,(%rdi)
   10c2c:	45 ce                	rex.RB (bad) 
   10c2e:	88 8c 24 c4 00 4c 39 	mov    %cl,0x394c00c4(%rsp)
   10c35:	ee                   	out    %al,(%dx)
   10c36:	c1 81 e1 00 01 00 00 	roll   $0x0,0x100e1(%rcx)
   10c3d:	83 f9 01             	cmp    $0x1,%ecx
   10c40:	19 c9                	sbb    %ecx,%ecx
   10c42:	83 e1 bb             	and    $0xffffffbb,%ecx
   10c45:	83 c1 72             	add    $0x72,%ecx
   10c48:	48 89 c8             	mov    %rcx,%rax
   10c4b:	c5 00 00             	(bad)
   10c4e:	00 89 c1 81 e1 80    	add    %cl,-0x7f1e7e3f(%rcx)
   10c54:	00 00                	add    %al,(%rax)
   10c56:	00 83 f9 01 19 c9    	add    %al,-0x36e6fe07(%rbx)
   10c5c:	83 e1 b6             	and    $0xffffffb6,%ecx
   10c5f:	83 c1 77             	add    $0x77,%ecx
   10c62:	0f 8c 7a fc ff ff    	jl     108e2 <_obstack_memory_used@@Base+0x132>
   10c68:	00 89 c1 83 e1 e9    	add    %cl,-0x161e7c3f(%rcx)
   10c6e:	4d 31 e6             	xor    %r12,%r14
   10c71:	ff c9                	dec    %ecx
   10c73:	f6 c4 08             	test   $0x8,%ah
   10c76:	e9 72 fd ff ff       	jmp    109ed <_obstack_memory_used@@Base+0x23d>
   10c7b:	00 83 e1 b5 83 49    	add    %al,0x4983b5e1(%rbx)
   10c81:	c7 c4 7c 00 00 00    	mov    $0x7c,%esp
   10c87:	f4                   	hlt    
   10c88:	4c 09 ce             	or     %r9,%rsi
   10c8b:	83 49 c1 e7          	orl    $0xffffffe7,-0x3f(%rcx)
   10c8f:	28 01                	sub    %al,(%rcx)
   10c91:	4c 21 e9             	and    %r13,%rcx
   10c94:	e1 bb                	loope  10c51 <_obstack_memory_used@@Base+0x4a1>
   10c96:	83 c1 72             	add    $0x72,%ecx
   10c99:	88 49 c7             	mov    %cl,-0x39(%rcx)
   10c9c:	c5 3e 01             	(bad)
   10c9f:	00 00                	add    %al,(%rax)
   10ca1:	ff                   	(bad)  
   10ca2:	ff e1                	jmp    *%rcx
   10ca4:	10 49 09             	adc    %cl,0x9(%rcx)
   10ca7:	fc                   	cld    
   10ca8:	48 29 c7             	sub    %rax,%rdi
   10cab:	e1 b6                	loope  10c63 <_obstack_memory_used@@Base+0x4b3>
   10cad:	83 c1 4c             	add    $0x4c,%ecx
   10cb0:	01 da                	add    %ebx,%edx
   10cb2:	24 c9                	and    $0xc9,%al
   10cb4:	00 00                	add    %al,(%rax)
   10cb6:	00 89 c1 83 e1 08    	add    %cl,0x8e183c1(%rcx)
   10cbc:	83 f9 01             	cmp    $0x1,%ecx
   10cbf:	19 c9                	sbb    %ecx,%ecx
   10cc1:	f6 c4 04             	test   $0x4,%ah
   10cc4:	0f 48 c7             	cmovs  %edi,%eax
   10cc7:	c6                   	(bad)  
   10cc8:	51                   	push   %rcx
   10cc9:	ff                   	(bad)  
   10cca:	ff                   	(bad)  
   10ccb:	ff e0                	jmp    *%rax
   10ccd:	83 c1 73             	add    $0x73,%ecx
   10cd0:	88 8c 24 ca 00 00 00 	mov    %cl,0xca(%rsp)
   10cd7:	89 c1                	mov    %eax,%ecx
   10cd9:	83 e1 04             	and    $0x4,%ecx
   10cdc:	83 f9 0f             	cmp    $0xf,%ecx
   10cdf:	85 d1                	test   %edx,%ecx
   10ce1:	01 00                	add    %eax,(%rax)
   10ce3:	00 83 c1 72 e9 b0    	add    %al,-0x4f168d3f(%rbx)
   10ce9:	fd                   	std    
   10cea:	ff                   	(bad)  
   10ceb:	ff 00                	incl   (%rax)
   10ced:	00 89 c1 49 01 cb    	add    %cl,-0x34feb63f(%rcx)
   10cf3:	83 48 c1 eb          	orl    $0xffffffeb,-0x3f(%rax)
   10cf7:	24 83                	and    $0x83,%al
   10cf9:	49 0f 8c cd 03 00 00 	rex.WB jl 110cd <_obstack_memory_used@@Base+0x91d>
   10d00:	24 cc                	and    $0xcc,%al
   10d02:	00 00                	add    %al,(%rax)
   10d04:	00 89 49 85 c6 02    	add    %cl,0x2c68549(%rcx)
   10d0a:	00 00                	add    %al,(%rax)
   10d0c:	02 0f                	add    (%rdi),%cl
   10d0e:	84 7d 06             	test   %bh,0x6(%rbp)
   10d11:	00 00                	add    %al,(%rax)
   10d13:	49 01 fc             	add    %rdi,%r12
   10d16:	ca c0 48             	lret   $0x48c0
   10d19:	85 fb                	test   %edi,%ebx
   10d1b:	85 a9 00 00 00 c5    	test   %ebp,-0x3b000000(%rcx)
   10d21:	00 00                	add    %al,(%rax)
   10d23:	00 80 3d 21 17 48    	add    %al,0x4817213d(%rax)
   10d29:	01 d2                	add    %edx,%edx
   10d2b:	88 84 24 cd 00 00 7c 	mov    %al,0x7c0000cd(%rsp)
   10d32:	d0 44 89 9c          	rolb   -0x64(%rcx,%rcx,4)
   10d36:	24 ce                	and    $0xce,%al
   10d38:	00 00                	add    %al,(%rax)
   10d3a:	00 0f                	add    %cl,(%rdi)
   10d3c:	85 22                	test   %esp,(%rdx)
   10d3e:	02 00                	add    (%rax),%al
   10d40:	00 00                	add    %al,(%rax)
   10d42:	85 bc 00 00 00 83 f8 	test   %edi,-0x77d0000(%rax,%rax,1)
   10d49:	01 0f                	add    %ecx,(%rdi)
   10d4b:	84 98 06 00 00 83    	test   %bl,-0x7cfffffa(%rax)
   10d51:	f8                   	clc    
   10d52:	02 0f                	add    (%rdi),%cl
   10d54:	85 2d 02 00 49 ff    	test   %ebp,-0xb6fffe(%rip)        # ffffffffff4a0d5c <obstack_alloc_failed_handler@@Base+0xffffffffff47ecbc>
   10d5a:	c2 c1 0f             	ret    $0xfc1
   10d5d:	85 1a                	test   %ebx,(%rdx)
   10d5f:	01 00                	add    %eax,(%rax)
   10d61:	00 8f d9 03 00 00    	add    %cl,0x3d9(%rdi)
   10d67:	83 f8 02             	cmp    $0x2,%eax
   10d6a:	0f 85 25 02 00 00    	jne    10f95 <_obstack_memory_used@@Base+0x7e5>
   10d70:	48                   	rex.W
   10d71:	4d                   	rex.WRB
   10d72:	49 31 d0             	xor    %rdx,%r8
   10d75:	8b 4d 60             	mov    0x60(%rbp),%ecx
   10d78:	c6 44 24 08 01       	movb   $0x1,0x8(%rsp)
   10d7d:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   10d82:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10d87:	4c 8d a4 24 e0 04 00 	lea    0x4e0(%rsp),%r12
   10d8e:	00 
   10d8f:	80 3d 7b 15 01 00 00 	cmpb   $0x0,0x1157b(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
   10d96:	4d 89 e6             	mov    %r12,%r14
   10d99:	0f 85 48 85 f3 db    	jne    ffffffffdbf492e7 <obstack_alloc_failed_handler@@Base+0xffffffffdbf27247>
   10d9f:	80 3d 0f 8f 1f ff ff 	cmpb   $0xff,-0xe070f1(%rip)        # ffffffffff209cb5 <obstack_alloc_failed_handler@@Base+0xffffffffff1e7c15>
   10da6:	ff 65 be             	jmp    *-0x42(%rbp)
   10da9:	01 00                	add    %eax,(%rax)
   10dab:	48 85 f6             	test   %rsi,%rsi
   10dae:	8d 0f                	lea    (%rdi),%ecx
   10db0:	8c 25 03 00 00 ff    	mov    %fs,-0xfffffd(%rip)        # ffffffffff010db9 <obstack_alloc_failed_handler@@Base+0xfffffffffefeed19>
   10db6:	0f 85 0c 08 00 00    	jne    115c8 <_obstack_memory_used@@Base+0xe18>
   10dbc:	44 8b 3d e1 14 48 c7 	mov    -0x38b7eb1f(%rip),%r15d        # ffffffffc74922a4 <obstack_alloc_failed_handler@@Base+0xffffffffc7470204>
   10dc3:	c6                   	(bad)  
   10dc4:	bb 03 00 00 ff       	mov    $0xff000003,%ebx
   10dc9:	00 00                	add    %al,(%rax)
   10dcb:	41                   	rex.B
   10dcc:	48 39 f3             	cmp    %rsi,%rbx
   10dcf:	89 48 c1             	mov    %ecx,-0x3f(%rax)
   10dd2:	e9 1e 85 c0 7e       	jmp    7ec192f5 <obstack_alloc_failed_handler@@Base+0x7ebf7255>
   10dd7:	16                   	(bad)  
   10dd8:	4c 63 f8             	movslq %eax,%r15
   10ddb:	4c 89 f7             	mov    %r14,%rdi
   10dde:	be 20 00 49 21       	mov    $0x21490020,%esi
   10de3:	ff c9                	dec    %ecx
   10de5:	fa                   	cli    
   10de6:	4d 01 fe             	add    %r15,%r14
   10de9:	e8 49 ff c1 ff       	call   ffffffffffc30d37 <obstack_alloc_failed_handler@@Base+0xffffffffffc0ec97>
   10dee:	0f b6 03             	movzbl (%rbx),%eax
   10df1:	49 09 d6             	or     %rdx,%r14
   10df4:	01 49 83             	add    %ecx,-0x7d(%rcx)
   10df7:	49 c7 c0 b3 0f 8f cc 	mov    $0xffffffffcc8f0fb3,%r8
   10dfe:	fc                   	cld    
   10dff:	ff                   	(bad)  
   10e00:	ff 41 c6             	incl   -0x3a(%rcx)
   10e03:	46 ff 20             	rex.RX jmp *(%rax)
   10e06:	0f b6 95 b8 00 00 00 	movzbl 0xb8(%rbp),%edx
   10e0d:	48 8d 3d ad 8d 00 00 	lea    0x8dad(%rip),%rdi        # 19bc1 <_obstack_memory_used@@Base+0x9411>
   10e14:	84 d2                	test   %dl,%dl
   10e16:	48 29 fb             	sub    %rdi,%rbx
   10e19:	e1 17                	loope  10e32 <_obstack_memory_used@@Base+0x682>
   10e1b:	00 48 83             	add    %cl,-0x7d(%rax)
   10e1e:	0f 84 43 fe ff ff    	je     10c67 <_obstack_memory_used@@Base+0x4b7>
   10e24:	16                   	(bad)  
   10e25:	01 00                	add    %eax,(%rax)
   10e27:	31 c0                	xor    %eax,%eax
   10e29:	49 c1 ec 04          	shr    $0x4,%r12
   10e2d:	8d 00                	lea    (%rax),%eax
   10e2f:	00 57 48             	add    %dl,0x48(%rdi)
   10e32:	c7 c2 ff e9 af fe    	mov    $0xfeafe9ff,%edx
   10e38:	ff                   	(bad)  
   10e39:	ff f7                	push   %rdi
   10e3b:	be 01 00 00 49       	mov    $0x49000001,%esi
   10e40:	ff c3                	inc    %ebx
   10e42:	85 c4                	test   %eax,%esp
   10e44:	fe                   	(bad)  
   10e45:	ff                   	(bad)  
   10e46:	ff 00                	incl   (%rax)
   10e48:	0f 8f 2e 03 00 00    	jg     1117c <_obstack_memory_used@@Base+0x9cc>
   10e4e:	89 f7                	mov    %esi,%edi
   10e50:	e8 49 c1 e5 3d       	call   3de6cf9e <obstack_alloc_failed_handler@@Base+0x3de4aefe>
   10e55:	80 3d 48 01 fa f2 0f 	cmpb   $0xf,-0xd05feb8(%rip)        # fffffffff2fb0fa4 <obstack_alloc_failed_handler@@Base+0xfffffffff2f8ef04>
   10e5c:	8f                   	(bad)  
   10e5d:	ad                   	lods   %ds:(%rsi),%eax
   10e5e:	00 00                	add    %al,(%rax)
   10e60:	00 06                	add    %al,(%rsi)
   10e62:	41 59                	pop    %r9
   10e64:	4c 8b 35 49 21 c4 00 	mov    0xc42149(%rip),%r14        # c52fb4 <obstack_alloc_failed_handler@@Base+0xc30f14>
   10e6b:	0f 85 49 c1 ed 07    	jne    7eecfba <obstack_alloc_failed_handler@@Base+0x7ecaf1a>
   10e71:	d0 3d 0d 4c 0f af    	sarb   -0x50f0b3f3(%rip)        # ffffffffaf105a84 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e39e4>
   10e77:	f3 75 0d             	repz jne 10e87 <_obstack_memory_used@@Base+0x6d7>
   10e7a:	48 89 cf             	mov    %rcx,%rdi
   10e7d:	03 00                	add    (%rax),%eax
   10e7f:	00 00                	add    %al,(%rax)
   10e81:	0f 84 0f 8c 39 02    	je     23a9a96 <obstack_alloc_failed_handler@@Base+0x23879f6>
   10e87:	00 00                	add    %al,(%rax)
   10e89:	36 4c 89 e7          	ss mov %r12,%rdi
   10e8d:	4c 75 75             	rex.WR jne 10f05 <_obstack_memory_used@@Base+0x755>
   10e90:	e2 3b                	loop   10ecd <_obstack_memory_used@@Base+0x71d>
   10e92:	3b ff                	cmp    %edi,%edi
   10e94:	4c 0f 85 a2 fd ff ff 	rex.WR jne 10c3d <_obstack_memory_used@@Base+0x48d>
   10e9b:	c2 80 3d             	ret    $0x3d80
   10e9e:	e2 11                	loop   10eb1 <_obstack_memory_used@@Base+0x701>
   10ea0:	01 00                	add    %eax,(%rax)
   10ea2:	00 48 4c             	add    %cl,0x4c(%rax)
   10ea5:	39 e7                	cmp    %esp,%edi
   10ea7:	01 00                	add    %eax,(%rax)
   10ea9:	00 4d 89             	add    %cl,-0x77(%rbp)
   10eac:	c9                   	leave  
   10ead:	01 00                	add    %eax,(%rax)
   10eaf:	00 0f                	add    %cl,(%rdi)
   10eb1:	85 82 04 49 29 cd    	test   %eax,-0x32d6b6fc(%rdx)
   10eb7:	af                   	scas   %es:(%rdi),%eax
   10eb8:	f8                   	clc    
   10eb9:	25 01 00 00 0f       	and    $0xf000001,%eax
   10ebe:	85 25 04 00 00 80    	test   %esp,-0x7ffffffc(%rip)        # ffffffff80010ec8 <obstack_alloc_failed_handler@@Base+0xffffffff7ffeee28>
   10ec4:	3d 36 14 01 49       	cmp    $0x49011436,%eax
   10ec9:	c1 48 f7 ff          	rorl   $0xff,-0x9(%rax)
   10ecd:	0f 85 49 49 ff c0    	jne    ffffffffc100581c <obstack_alloc_failed_handler@@Base+0xffffffffc0fe377c>
   10ed3:	80 bd b8 00 00 00 00 	cmpb   $0x0,0xb8(%rbp)
   10eda:	0f 84 18 01 00 00    	je     10ff8 <_obstack_memory_used@@Base+0x848>
   10ee0:	8b 45 30             	mov    0x30(%rbp),%eax
   10ee3:	25 00 b0 00 00       	and    $0xb000,%eax
   10ee8:	3d 00 20 00 00       	cmp    $0x2000,%eax
   10eed:	0f 85 a8 fe ff ff    	jne    10d9b <_obstack_memory_used@@Base+0x5eb>
   10ef3:	48 8b 7d 48          	mov    0x48(%rbp),%rdi
   10ef7:	4c 8b 05 7a 11 01 00 	mov    0x1117a(%rip),%r8        # 22078 <_obstack_memory_used@@Base+0x118c8>
   10efe:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   10f05:	00 
   10f06:	b9 48 c1 e6 0f       	mov    $0xfe6c148,%ecx
   10f0b:	8b 15 49 39 c4 00    	mov    0xc43949(%rip),%edx        # c5485a <obstack_alloc_failed_handler@@Base+0xc327ba>
   10f11:	e8 0a be ff ff       	call   cd20 <__sprintf_chk@plt+0x8040>
   10f16:	48 89 c7             	mov    %rax,%rdi
   10f19:	49                   	rex.WB
   10f1a:	48 85 ff             	test   %rdi,%rdi
   10f1d:	48 0f 8c 22 fc ff ff 	rex.W jl 10b46 <_obstack_memory_used@@Base+0x396>
   10f24:	e9 db 00 00 00       	jmp    11004 <_obstack_memory_used@@Base+0x854>
   10f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10f30:	8b 87 a8 00 00 7c    	mov    0x7c0000a8(%rdi),%eax
   10f36:	09 49 89             	or     %ecx,-0x77(%rcx)
   10f39:	d7                   	xlat   %ds:(%rbx)
   10f3a:	77 00                	ja     10f3c <_obstack_memory_used@@Base+0x78c>
   10f3c:	00 41 ba             	add    %al,-0x46(%rcx)
   10f3f:	3f                   	(bad)  
   10f40:	3f                   	(bad)  
   10f41:	00 00                	add    %al,(%rax)
   10f43:	80 3d 02 15 01 00 00 	cmpb   $0x0,0x11502(%rip)        # 2244c <obstack_alloc_failed_handler@@Base+0x3ac>
   10f4a:	4c 29 ef             	sub    %r13,%rdi
   10f4d:	94                   	xchg   %eax,%esp
   10f4e:	24 cd                	and    $0xcd,%al
   10f50:	00 49 c1             	add    %cl,-0x3f(%rcx)
   10f53:	e7 11                	out    %eax,$0x11
   10f55:	04 01                	add    $0x1,%al
   10f57:	c6 84 24 cf 00 00 00 	movb   $0x0,0xcf(%rsp)
   10f5e:	00 
   10f5f:	88 84 24 c4 00 00 4d 	mov    %al,0x4d0000c4(%rsp)
   10f66:	39 f8                	cmp    %edi,%eax
   10f68:	48 01 ce             	add    %rcx,%rsi
   10f6b:	3f                   	(bad)  
   10f6c:	3f                   	(bad)  
   10f6d:	3f                   	(bad)  
   10f6e:	3f                   	(bad)  
   10f6f:	3f                   	(bad)  
   10f70:	48 89 84 24 c5 00 00 	mov    %rax,0xc5(%rsp)
   10f77:	00 
   10f78:	0f 85 eb f5 ff ff    	jne    10569 <_obstack_newchunk@@Base+0x8a9>
   10f7e:	c6 84 24 ce 00 00 0f 	movb   $0x84,0xf0000ce(%rsp)
   10f85:	84 
   10f86:	af                   	scas   %es:(%rdi),%eax
   10f87:	fd                   	std    
   10f88:	ff                   	(bad)  
   10f89:	ff 01                	incl   (%rcx)
   10f8b:	00 83 f8 02 0f 84    	add    %al,-0x7bf0fd08(%rbx)
   10f91:	db 0f                	fisttpl (%rdi)
   10f93:	8f                   	(bad)  
   10f94:	e7 fc                	out    %eax,$0xfc
   10f96:	ff                   	(bad)  
   10f97:	ff c0                	inc    %eax
   10f99:	0f 84 11 04 00 00    	je     113b0 <_obstack_memory_used@@Base+0xc00>
   10f9f:	48 8b 85 88 00 00 00 	mov    0x88(%rbp),%rax
   10fa6:	48 8b 8d 80 00 00 00 	mov    0x80(%rbp),%rcx
   10fad:	c6 44 24 08 01       	movb   $0x1,0x8(%rsp)
   10fb2:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   10fb7:	49 29 d4             	sub    %rdx,%r12
   10fba:	84 5c 02 00          	test   %bl,0x0(%rdx,%rax,1)
   10fbe:	00 ff                	add    %bh,%bh
   10fc0:	ff 4d 0f             	decl   0xf(%rbp)
   10fc3:	4d 85 f1             	test   %r14,%r9
   10fc6:	0f af c8             	imul   %eax,%ecx
   10fc9:	f8                   	clc    
   10fca:	49 c1 0f 8c          	rorq   $0x8c,(%r15)
   10fce:	46 01 00             	rex.RX add %r8d,(%rax)
   10fd1:	00 8b 45 70 48 49    	add    %cl,0x49487045(%rbx)
   10fd7:	29 c6                	sub    %eax,%esi
   10fd9:	c1 e6 22             	shl    $0x22,%esi
   10fdc:	24 30                	and    $0x30,%al
   10fde:	48 21 c8             	and    %rcx,%rax
   10fe1:	49 85 db             	test   %rbx,%r11
   10fe4:	ff 48 89             	decl   -0x77(%rax)
   10fe7:	4c 24 38             	rex.WR and $0x38,%al
   10fea:	0f 95 44 24 08       	setne  0x8(%rsp)
   10fef:	e9 93 48 c1 e7       	jmp    ffffffffe7c25887 <obstack_alloc_failed_handler@@Base+0xffffffffe7c037e7>
   10ff4:	38 c1                	cmp    %al,%cl
   10ff6:	e8 3f be 01 00       	call   2ce3a <obstack_alloc_failed_handler@@Base+0xad9a>
   10ffb:	49 c7 c6 71 00 00 00 	mov    $0x71,%r14
   11002:	00 00                	add    %al,(%rax)
   11004:	44 8b 3d 25 14 4d 89 	mov    -0x76b2ebdb(%rip),%r15d        # ffffffff894e2430 <obstack_alloc_failed_handler@@Base+0xffffffff894c0390>
   1100b:	f8                   	clc    
   1100c:	84 f5                	test   %dh,%ch
   1100e:	00 00                	add    %al,(%rax)
   11010:	00 00                	add    %al,(%rax)
   11012:	00 41 89             	add    %al,-0x77(%rcx)
   11015:	c0 49 29 d9          	rorb   $0xd9,0x29(%rcx)
   11019:	44                   	rex.R
   1101a:	4d 39 48 31          	cmp    %r9,0x31(%r8)
   1101e:	cf                   	iret   
   1101f:	c3                   	ret    
   11020:	49 c1 e9 25          	shr    $0x25,%r9
   11024:	c7 c6 d0 03 00 00    	mov    $0x3d0,%esi
   1102a:	00 4c 89 fa          	add    %cl,-0x6(%rcx,%rcx,4)
   1102e:	4c 01 fb             	add    %r15,%rbx
   11031:	49 c1 e4 36          	shl    $0x36,%r12
   11035:	ff 41 0f             	incl   0xf(%rcx)
   11038:	e9 16 fd ff ff       	jmp    10d53 <_obstack_memory_used@@Base+0x5a3>
   1103d:	eb 01                	jmp    11040 <_obstack_memory_used@@Base+0x890>
   1103f:	48 83 c3 01          	add    $0x1,%rbx
   11043:	88 43 ff             	mov    %al,-0x1(%rbx)
   11046:	84 c0                	test   %al,%al
   11048:	75 ec                	jne    11036 <_obstack_memory_used@@Base+0x886>
   1104a:	c6 43 ff 20          	movb   $0x20,-0x1(%rbx)
   1104e:	c6 03 01             	movb   $0x1,(%rbx)
   11051:	80 bd b8 00 00 00 00 	cmpb   $0x0,0xb8(%rbp)
   11058:	74 0b                	je     11065 <_obstack_memory_used@@Base+0x8b5>
   1105a:	80 7c 24 08 75       	cmpb   $0x75,0x8(%rsp)
   1105f:	11 85 4c 09 f9 00    	adc    %eax,0xf9094c(%rbp)
   11065:	4c 8d 2d 55 48 01 d9 	lea    -0x26feb7ab(%rip),%r13        # ffffffffd90258c1 <obstack_alloc_failed_handler@@Base+0xffffffffd9003821>
   1106c:	e9 56 01 00 00       	jmp    111c7 <_obstack_memory_used@@Base+0xa17>
   11071:	01 00                	add    %eax,(%rax)
   11073:	45 85 c0             	test   %r8d,%r8d
   11076:	0f 88 14 06 00 00    	js     11690 <_obstack_memory_used@@Base+0xee0>
   1107c:	49 89 f1             	mov    %rsi,%r9
   1107f:	4d 29 ed             	sub    %r13,%r13
   11082:	48 f7 fe             	idiv   %rsi
   11085:	00 48 89             	add    %cl,-0x77(%rax)
   11088:	df 48 29             	fisttps 0x29(%rax)
   1108b:	da c7                	fcmovb %st(7),%st
   1108d:	c2 ff ff             	ret    $0xffff
   11090:	ff                   	(bad)  
   11091:	ff                   	(bad)  
   11092:	be 49 89 4c 29       	mov    $0x294c8949,%esi
   11097:	f9                   	stc    
   11098:	44 3c ff             	rex.R cmp $0xff,%al
   1109b:	ff 48 89             	decl   -0x77(%rax)
   1109e:	df e8                	fucomip %st(0),%st
   110a0:	dc 37                	fdivl  (%rdi)
   110a2:	ff                   	(bad)  
   110a3:	ff 4c 8d 2c          	decl   0x2c(%rbp,%rcx,4)
   110a7:	03 49 8b             	add    -0x75(%rcx),%ecx
   110aa:	36 4c 89 e7          	ss mov %r12,%rdi
   110ae:	4d 0f 8f 4c 21 eb ff 	rex.WRB jg ffffffffffec3201 <obstack_alloc_failed_handler@@Base+0xffffffffffea1161>
   110b5:	ff 4c 89 e9          	decl   -0x17(%rcx,%rcx,4)
   110b9:	31 4c 21 e3          	xor    %ecx,-0x1d(%rcx,%riz,1)
   110bd:	ef                   	out    %eax,(%dx)
   110be:	48 8d 15 9b 15 01 00 	lea    0x1159b(%rip),%rdx        # 22660 <obstack_alloc_failed_handler@@Base+0x5c0>
   110c5:	4c 01 2d 2c 12 01 00 	add    %r13,0x1122c(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   110cc:	e8 4d 31 e5 ff       	call   ffffffffffe6421e <obstack_alloc_failed_handler@@Base+0xffffffffffe4217e>
   110d1:	8b 95 a8 00 00 00    	mov    0xa8(%rbp),%edx
   110d7:	4c 85 e7             	test   %r12,%rdi
   110da:	0f 85 be fe ff ff    	jne    10f9e <_obstack_memory_used@@Base+0x7ee>
   110e0:	05 1f 12 01 00       	add    $0x1121f,%eax
   110e5:	85 c0                	test   %eax,%eax
   110e7:	4d 09 e6             	or     %r12,%r14
   110ea:	02 00                	add    (%rax),%al
   110ec:	00 48 8b             	add    %cl,-0x75(%rax)
   110ef:	84 e9                	test   %ch,%cl
   110f1:	0a fd                	or     %ch,%bh
   110f3:	ff                   	(bad)  
   110f4:	ff 64 48 2b          	jmp    *0x2b(%rax,%rcx,2)
   110f8:	04 25                	add    $0x25,%al
   110fa:	28 00                	sub    %al,(%rax)
   110fc:	49 89 f8             	mov    %rdi,%r8
   110ff:	85 91 07 00 00 48    	test   %edx,0x48000007(%rcx)
   11105:	81 c4 38 13 49 ff    	add    $0xff491338,%esp
   1110b:	c3                   	ret    
   1110c:	29 fc                	sub    %edi,%esp
   1110e:	5c                   	pop    %rsp
   1110f:	4c 21 e0             	and    %r12,%rax
   11112:	5e                   	pop    %rsi
   11113:	49 29 d8             	sub    %rbx,%r8
   11116:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1111d:	00 00 00 
   11120:	48 f7 fa             	idiv   %rdx
   11123:	23 01                	and    (%rcx),%eax
   11125:	00 00                	add    %al,(%rax)
   11127:	0f 85 5a fd ff ff    	jne    10e87 <_obstack_memory_used@@Base+0x6d7>
   1112d:	80 3d cc 11 01 00 00 	cmpb   $0x0,0x111cc(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
   11134:	49 c7 c4 d5 fe ff ff 	mov    $0xfffffffffffffed5,%r12
   1113b:	48 fd                	rex.W std 
   1113d:	e9 1a 01 00 00       	jmp    1125c <_obstack_memory_used@@Base+0xaac>
   11142:	31 c0                	xor    %eax,%eax
   11144:	c1 73 e9 37          	shll   $0x37,-0x17(%rbx)
   11148:	fb                   	sti    
   11149:	ff                   	(bad)  
   1114a:	ff 0f                	decl   (%rdi)
   1114c:	1f                   	(bad)  
   1114d:	44 0f 85 9b 00 00 00 	rex.R jne 111ef <_obstack_memory_used@@Base+0xa3f>
   11154:	00 74 96 49          	add    %dh,0x49(%rsi,%rdx,4)
   11158:	8b 0e                	mov    (%rsi),%ecx
   1115a:	ba 48 85 c3 00       	mov    $0xc38548,%edx
   1115f:	48 c1 ee 2d          	shr    $0x2d,%rsi
   11163:	00 0f                	add    %cl,(%rdi)
   11165:	8f                   	(bad)  
   11166:	0f 85 64 03 00 00    	jne    114d0 <_obstack_memory_used@@Base+0xd20>
   1116c:	90                   	nop
   1116d:	49 29 d9             	sub    %rbx,%r9
   11170:	31 0f                	xor    %ecx,(%rdi)
   11172:	84 e5                	test   %ah,%ch
   11174:	49 c7 c0 8a 02 00 00 	mov    $0x28a,%r8
   1117b:	01 00                	add    %eax,(%rax)
   1117d:	00 00                	add    %al,(%rax)
   1117f:	48 83 05 71 0f 85 8d 	addq   $0x1,-0x727af08f(%rip)        # ffffffff8d8620f8 <obstack_alloc_failed_handler@@Base+0xffffffff8d840058>
   11186:	01 
   11187:	00 00                	add    %al,(%rax)
   11189:	f0 ff                	lock (bad) 
   1118b:	ff 8b 48 f7 ff 49    	decl   0x49fff748(%rbx)
   11191:	f7 fa                	idiv   %edx
   11193:	d2 0f                	rorb   %cl,(%rdi)
   11195:	84 53 ff             	test   %dl,-0x1(%rbx)
   11198:	ff                   	(bad)  
   11199:	ff 75 1b             	push   0x1b(%rbp)
   1119c:	ac                   	lods   %ds:(%rsi),%al
   1119d:	00 00                	add    %al,(%rax)
   1119f:	00 31                	add    %dh,(%rcx)
   111a1:	d2 bf 01 00 00 00    	sarb   %cl,0x1(%rdi)
   111a7:	e8 a4 5c 00 00       	call   16e50 <_obstack_memory_used@@Base+0x66a0>
   111ac:	e9 4c 39 f8 ff       	jmp    fffffffffff94afd <obstack_alloc_failed_handler@@Base+0xfffffffffff72a5d>
   111b1:	0f 8c 83 02 00 00    	jl     1143a <_obstack_memory_used@@Base+0xc8a>
   111b7:	00 49 8b             	add    %cl,-0x75(%rcx)
   111ba:	0e                   	(bad)  
   111bb:	ba 02 00 00 4d       	mov    $0x4d000002,%edx
   111c0:	85 f9                	test   %edi,%ecx
   111c2:	00 00                	add    %al,(%rax)
   111c4:	00 48 8d             	add    %cl,-0x73(%rax)
   111c7:	3d ff 89 00 00       	cmp    $0x89ff,%eax
   111cc:	e8 2f 39 ff ff       	call   4b00 <fwrite_unlocked@plt>
   111d1:	48 83 4c 09 eb 49    	orq    $0x49,-0x15(%rcx,%rcx,1)
   111d7:	01 c1                	add    %eax,%ecx
   111d9:	49 c1 ed 0a          	shr    $0xa,%r13
   111dd:	ff 66 90             	jmp    *-0x70(%rsi)
   111e0:	c6                   	(bad)  
   111e1:	49 89 fb             	mov    %rdi,%r11
   111e4:	01 49 31             	add    %ecx,0x31(%rcx)
   111e7:	d2 48 8b             	rorb   %cl,-0x75(%rax)
   111ea:	4d 0f 8c 2b fc ff ff 	rex.WRB jl 10e1c <_obstack_memory_used@@Base+0x66c>
   111f1:	4c 29 c2             	sub    %r8,%rdx
   111f4:	49 b8 48 c1 0f 84 18 	movabs $0xffffff18840fc148,%r8
   111fb:	ff ff ff 
   111fe:	66 90                	xchg   %ax,%ax
   11200:	48                   	rex.W
   11201:	4c 0f af f3          	imul   %rbx,%r14
   11205:	ef                   	out    %eax,(%dx)
   11206:	4d                   	rex.WRB
   11207:	4c 39 ee             	cmp    %r13,%rsi
   1120a:	48 89 c8             	mov    %rcx,%rax
   1120d:	48 c1 ea 03          	shr    $0x3,%rdx
   11211:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
   11215:	48 21 d1             	and    %rdx,%rcx
   11218:	48 29 f0             	sub    %rsi,%rax
   1121b:	83 c0 30             	add    $0x30,%eax
   1121e:	88 07                	mov    %al,(%rdi)
   11220:	48 89 c8             	mov    %rcx,%rax
   11223:	48 89 48 c1          	mov    %rcx,-0x3f(%rax)
   11227:	49 c7 c3 a9 02 00 00 	mov    $0x2a9,%r11
   1122e:	c7 c7 6f fd ff ff    	mov    $0xfffffd6f,%edi
   11234:	00 00                	add    %al,(%rax)
   11236:	00 00                	add    %al,(%rax)
   11238:	4c 8d 0d 82 89 00 00 	lea    0x8982(%rip),%r9        # 19bc1 <_obstack_memory_used@@Base+0x9411>
   1123f:	84 d2                	test   %dl,%dl
   11241:	74 49                	je     1128c <_obstack_memory_used@@Base+0xadc>
   11243:	c1 ee 11             	shr    $0x11,%esi
   11246:	20 48 85             	and    %cl,-0x7b(%rax)
   11249:	c9                   	leave  
   1124a:	74 54                	je     112a0 <_obstack_memory_used@@Base+0xaf0>
   1124c:	74 83                	je     111d1 <_obstack_memory_used@@Base+0xa21>
   1124e:	24 04                	and    $0x4,%al
   11250:	4d e9 cc 00 00 00    	rex.WRB jmp 11322 <_obstack_memory_used@@Base+0xb72>
   11256:	8c 24 04             	mov    %fs,(%rsp,%rax,1)
   11259:	01 00                	add    %eax,(%rax)
   1125b:	4c 31 e1             	xor    %r12,%rcx
   1125e:	cd 48                	int    $0x48
   11260:	c7 c2 a6 ff 4d 01    	mov    $0x14dffa6,%edx
   11266:	f5                   	cmc    
   11267:	2e 0f 1f 84 4c 85 e6 	cs nopl 0xe685(%rsp,%rcx,2)
   1126e:	00 00 
   11270:	48 89 c8             	mov    %rcx,%rax
   11273:	49 83 e9 01          	sub    $0x1,%r9
   11277:	48 f7 e7             	mul    %rdi
   1127a:	48 0f 8f cd 01 49 c1 	rex.W jg ffffffffc14a144e <obstack_alloc_failed_handler@@Base+0xffffffffc147f3ae>
   11281:	e8 40 34 92 48       	call   489346c6 <obstack_alloc_failed_handler@@Base+0x48912626>
   11286:	01 f6                	add    %esi,%esi
   11288:	48 29 f0             	sub    %rsi,%rax
   1128b:	49 39 c9             	cmp    %rcx,%r9
   1128e:	41 88 01             	mov    %al,(%r9)
   11291:	48 89 c8             	mov    %rcx,%rax
   11294:	48 89 d1             	mov    %rdx,%rcx
   11297:	48 0f 84 0e 02 00 00 	rex.W je 114ac <_obstack_memory_used@@Base+0xcfc>
   1129e:	e9 bc 00 00 00       	jmp    1135f <_obstack_memory_used@@Base+0xbaf>
   112a3:	c1 e6 0c             	shl    $0xc,%esi
   112a6:	49 c1 e4 21          	shl    $0x21,%r12
   112aa:	05 f9 0f 01 00       	add    $0x10ff9,%eax
   112af:	31 c0                	xor    %eax,%eax
   112b1:	ba e9 4d 89 e5       	mov    $0xe5894de9,%edx
   112b6:	00 8d 0d 16 89 00    	add    %cl,0x89160d(%rbp)
   112bc:	00 be 01 4d 31 dc    	add    %bh,-0x23ceb2ff(%rsi)
   112c2:	4d 85 e9             	test   %r13,%r9
   112c5:	e8 16 3a ff ff       	call   4ce0 <__sprintf_chk@plt>
   112ca:	4c 89 e7             	mov    %r12,%rdi
   112cd:	e8 ae 35 ff ff       	call   4880 <strlen@plt>
   112d2:	0f b6 95 b8 00 00 00 	movzbl 0xb8(%rbp),%edx
   112d9:	4d 8d 34 04          	lea    (%r12,%rax,1),%r14
   112dd:	e9 bd fa 0f 85       	jmp    ffffffff85110d9f <obstack_alloc_failed_handler@@Base+0xffffffff850eecff>
   112e2:	61                   	(bad)  
   112e3:	02 00                	add    (%rax),%al
   112e5:	00 00                	add    %al,(%rax)
   112e7:	00 8b 15 4e 11 0f    	add    %cl,0xf114e15(%rbx)
   112ed:	84 3e                	test   %bh,(%rsi)
   112ef:	01 00                	add    %eax,(%rax)
   112f1:	00 00                	add    %al,(%rax)
   112f3:	00 0f                	add    %cl,(%rdi)
   112f5:	8f                   	(bad)  
   112f6:	cd 03                	int    $0x3
   112f8:	00 00                	add    %al,(%rax)
   112fa:	00 00                	add    %al,(%rax)
   112fc:	8b 75 34             	mov    0x34(%rbp),%esi
   112ff:	0f 85 5b 03 00 00    	jne    11660 <_obstack_memory_used@@Base+0xeb0>
   11305:	0f 85 40 4d 85 cb    	jne    ffffffffcb86604b <obstack_alloc_failed_handler@@Base+0xffffffffcb843fab>
   1130b:	3d ef 0f 01 00       	cmp    $0x10fef,%eax
   11310:	00 4c 89 e3          	add    %cl,-0x1d(%rcx,%rcx,4)
   11314:	0f 84 b9 fb ff ff    	je     10ed3 <_obstack_memory_used@@Base+0x723>
   1131a:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
   11321:	8b 15 4d 0f af c7    	mov    -0x3850f0b3(%rip),%edx        # ffffffffc7b02274 <obstack_alloc_failed_handler@@Base+0xffffffffc7ae01d4>
   11327:	31 48 ff             	xor    %ecx,-0x1(%rax)
   1132a:	c7                   	(bad)  
   1132b:	49 0f 85 7a fd ff ff 	rex.WB jne 110ac <_obstack_memory_used@@Base+0x8fc>
   11332:	ff 0f                	decl   (%rdi)
   11334:	1f                   	(bad)  
   11335:	44 00 4d 39          	add    %r9b,0x39(%rbp)
   11339:	d2 02                	rolb   %cl,(%rdx)
   1133b:	11 01                	adc    %eax,(%rcx)
   1133d:	4c 29 c2             	sub    %r8,%rdx
   11340:	b8 4d 29 d6 00       	mov    $0xd6294d,%eax
   11345:	48 8d 3d 4d 31 e9 00 	lea    0xe9314d(%rip),%rdi        # ea4499 <obstack_alloc_failed_handler@@Base+0xe823f9>
   1134c:	49 0f 8c cb 01 00 00 	rex.WB jl 1151e <_obstack_memory_used@@Base+0xd6e>
   11353:	00 00                	add    %al,(%rax)
   11355:	4d 85 cf             	test   %r9,%r15
   11358:	4d 09 df             	or     %r11,%r15
   1135b:	57                   	push   %rdi
   1135c:	fb                   	sti    
   1135d:	ff                   	(bad)  
   1135e:	ff 90 8b 15 de 10    	call   *0x10de158b(%rax)
   11364:	01 00                	add    %eax,(%rax)
   11366:	80 bd b8 00 00 00 00 	cmpb   $0x0,0xb8(%rbp)
   1136d:	48 8d 3d 4d 88 00 00 	lea    0x884d(%rip),%rdi        # 19bc1 <_obstack_memory_used@@Base+0x9411>
   11374:	48 0f 4d 09          	cmovge (%rcx),%rcx
   11378:	d9 83 02 00 49 01    	flds   0x1490002(%rbx)
   1137e:	0f 8f e9 dc fc ff    	jg     fffffffffffdf06d <obstack_alloc_failed_handler@@Base+0xfffffffffffbcfcd>
   11384:	ff                   	(bad)  
   11385:	ff                   	(bad)  
   11386:	ff 66 0f             	jmp    *0xf(%rsi)
   11389:	1f                   	(bad)  
   1138a:	48 09 d2             	or     %rdx,%rdx
   1138d:	49 39 df             	cmp    %rbx,%r15
   11390:	83 f9 01             	cmp    $0x1,%ecx
   11393:	19 c0                	sbb    %eax,%eax
   11395:	4c 85 d8             	test   %r11,%rax
   11398:	49 21 cb             	and    %rcx,%r11
   1139b:	e9 7e f9 ff ff       	jmp    10d1e <_obstack_memory_used@@Base+0x56e>
   113a0:	83 0f 8f             	orl    $0xffffff8f,(%rdi)
   113a3:	97                   	xchg   %eax,%edi
   113a4:	fd                   	std    
   113a5:	ff                   	(bad)  
   113a6:	ff                   	(bad)  
   113a7:	ff                   	(bad)  
   113a8:	ff                   	(bad)  
   113a9:	ff                   	(bad)  
   113aa:	ff 0f                	decl   (%rdi)
   113ac:	1f                   	(bad)  
   113ad:	44 00 00             	add    %r8b,(%rax)
   113b0:	48 8b 45 78          	mov    0x78(%rbp),%rax
   113b4:	0f 49 ff             	cmovns %edi,%edi
   113b7:	c5 ff ff             	(bad)  
   113ba:	24 48                	and    $0x48,%al
   113bc:	39 d2                	cmp    %edx,%edx
   113be:	89 4c 24 49          	mov    %ecx,0x49(%rsp)
   113c2:	c1 e3 0d             	shl    $0xd,%ebx
   113c5:	24 38                	and    $0x38,%al
   113c7:	e9 bb f9 ff ff       	jmp    10d87 <_obstack_memory_used@@Base+0x5d7>
   113cc:	49 89 c3             	mov    %rax,%r11
   113cf:	ff c3                	inc    %ebx
   113d1:	84 4d 09             	test   %cl,0x9(%rbp)
   113d4:	e2 ff                	loop   113d5 <_obstack_memory_used@@Base+0xc25>
   113d6:	b8 00 00 48 ff       	mov    $0xff480000,%eax
   113db:	c1 5a 4d 01          	rcrl   $0x1,0x4d(%rdx)
   113df:	f2 09 49 31          	repnz or %ecx,0x31(%rcx)
   113e3:	4c 01 e9             	add    %r13,%rcx
   113e6:	fe                   	(bad)  
   113e7:	ff                   	(bad)  
   113e8:	ff 48 21             	decl   0x21(%rax)
   113eb:	d9 fc                	frndint 
   113ed:	ff                   	(bad)  
   113ee:	ff 2e                	ljmp   *(%rsi)
   113f0:	4d 01 ca             	add    %r9,%r10
   113f3:	ff 48 01             	decl   0x1(%rax)
   113f6:	d9 00                	flds   (%rax)
   113f8:	48 8b 4d 40          	mov    0x40(%rbp),%rcx
   113fc:	44 8b 15 35 10 01 00 	mov    0x11035(%rip),%r10d        # 22438 <obstack_alloc_failed_handler@@Base+0x398>
   11403:	c6 84 24 e4 00 00 48 	movb   $0x7f,0x480000e4(%rsp)
   1140a:	7f 
   1140b:	bd 70 02 00 00       	mov    $0x270,%ebp
   11410:	00 00                	add    %al,(%rax)
   11412:	00 4d 29             	add    %cl,0x29(%rbp)
   11415:	4c 29 e7             	sub    %r12,%rdi
   11418:	48 0f af c8          	imul   %rax,%rcx
   1141c:	05 0f 10 01 00       	add    $0x1100f,%eax
   11421:	49                   	rex.WB
   11422:	48 0f 84 1c 0f 85 37 	rex.W je 37862345 <obstack_alloc_failed_handler@@Base+0x378402a5>
   11429:	02 00                	add    (%rax),%al
   1142b:	00 89 ce 49 ff c7    	add    %cl,-0x3800b632(%rcx)
   11431:	48 31 d3             	xor    %rdx,%rbx
   11434:	c1 ee 0c             	shr    $0xc,%esi
   11437:	41 29 c0             	sub    %eax,%r8d
   1143a:	40 30 f6             	xor    %sil,%sil
   1143d:	0f b6 c1             	movzbl %cl,%eax
   11440:	09 c6                	or     %eax,%esi
   11442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11448:	48 89 49 0f          	mov    %rcx,0xf(%rcx)
   1144c:	af                   	scas   %es:(%rdi),%eax
   1144d:	d1 4d 0f             	rorl   0xf(%rbp)
   11450:	af                   	scas   %es:(%rdi),%eax
   11451:	e0 48                	loopne 1149b <_obstack_memory_used@@Base+0xceb>
   11453:	89 f0                	mov    %esi,%eax
   11455:	48 c1 ea 03          	shr    $0x3,%rdx
   11459:	4c 0f af 49 31       	imul   0x31(%rcx),%r9
   1145e:	c4                   	(bad)  
   1145f:	ff 4c 29 f8          	decl   -0x8(%rcx,%rbp,1)
   11463:	83 48 f7 49          	orl    $0x49,-0x9(%rax)
   11467:	29 c8                	sub    %ecx,%eax
   11469:	89 4c 21 49          	mov    %ecx,0x49(%rcx,%riz,1)
   1146d:	ff c3                	inc    %ebx
   1146f:	83 f8 09             	cmp    $0x9,%eax
   11472:	77 eb                	ja     1145f <_obstack_memory_used@@Base+0xcaf>
   11474:	4b c7 c7 4e fe ff ff 	rex.WXB mov $0xfffffffffffffe4e,%r15
   1147b:	0f 8f 87 fd ff ff    	jg     11208 <_obstack_memory_used@@Base+0xa58>
   11481:	00 00                	add    %al,(%rax)
   11483:	4c 8d 8c 24 04 01 00 	lea    0x104(%rsp),%r9
   1148a:	00 
   1148b:	48 c1 49 0f af       	rorq   $0xaf,0xf(%rcx)
   11490:	de 4c 29 da          	fimuls -0x26(%rcx,%rbp,1)
   11494:	49 f7 fb             	idiv   %r11
   11497:	cd cc                	int    $0xcc
   11499:	cc                   	int3   
   1149a:	cc                   	int3   
   1149b:	cc                   	int3   
   1149c:	cc                   	int3   
   1149d:	48 29 f9             	sub    %rdi,%rcx
   114a0:	ff 0f                	decl   (%rdi)
   114a2:	00 4c 21 d9          	add    %cl,-0x27(%rcx,%riz,1)
   114a6:	66 2e 49 c1 e2 13    	data16 cs shl $0x13,%r10
   114ac:	4d 39 f2             	cmp    %r14,%r10
   114af:	00 4d 29             	add    %cl,0x29(%rbp)
   114b2:	fe 49 83             	decb   -0x7d(%rcx)
   114b5:	e9 0f 85 75 e4       	jmp    ffffffffe47699c9 <obstack_alloc_failed_handler@@Base+0xffffffffe4747929>
   114ba:	49 f7 fe             	idiv   %r14
   114bd:	80 fc ff             	cmp    $0xff,%ah
   114c0:	ff 4c 49 c1          	decl   -0x3f(%rcx,%rcx,2)
   114c4:	e3 1d                	jrcxz  114e3 <_obstack_memory_used@@Base+0xd33>
   114c6:	21 fb                	and    %edi,%ebx
   114c8:	4c 29 f8             	sub    %r15,%rax
   114cb:	83 c0 30             	add    $0x30,%eax
   114ce:	41 88 01             	mov    %al,(%r9)
   114d1:	48 89 c8             	mov    %rcx,%rax
   114d4:	48 89 d1             	mov    %rdx,%rcx
   114d7:	48 83 f8 09          	cmp    $0x9,%rax
   114db:	7f ca                	jg     114a7 <_obstack_memory_used@@Base+0xcf7>
   114dd:	31 c0                	xor    %eax,%eax
   114df:	45 85 c0             	test   %r8d,%r8d
   114e2:	57                   	push   %rdi
   114e3:	be 01 00 00 00       	mov    $0x1,%esi
   114e8:	41 53                	push   %r11
   114ea:	44 0f 48 c0          	cmovs  %eax,%r8d
   114ee:	48 89 48 21          	mov    %rcx,0x21(%rax)
   114f2:	d8 0d d6 86 00 00    	fmuls  0x86d6(%rip)        # 19bce <_obstack_memory_used@@Base+0x941e>
   114f8:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   114ff:	45 01 d0             	add    %r10d,%r8d
   11502:	e8 d9 37 ff ff       	call   4ce0 <__sprintf_chk@plt>
   11507:	0f 8f 77 49 29 f5    	jg     fffffffff52a5e84 <obstack_alloc_failed_handler@@Base+0xfffffffff5283de4>
   1150d:	4c 85 c7             	test   %r8,%rdi
   11510:	48 8d 5c 03 01       	lea    0x1(%rbx,%rax,1),%rbx
   11515:	49                   	rex.WB
   11516:	48 f7 f9             	idiv   %rcx
   11519:	c9                   	leave  
   1151a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11520:	4c 8b 3d 99 11 01 4d 	mov    0x4d011199(%rip),%r15        # 4d0226c0 <obstack_alloc_failed_handler@@Base+0x4d000620>
   11527:	89 d7                	mov    %edx,%edi
   11529:	ff 24 40             	jmp    *(%rax,%rax,2)
   1152c:	48                   	rex.W
   1152d:	4c 31 c8             	xor    %r9,%rax
   11530:	30 4c eb a5          	xor    %cl,-0x5b(%rbx,%rbp,8)
   11534:	4c 89 ff             	mov    %r15,%rdi
   11537:	e8 94 f5 ff ff       	call   10ad0 <_obstack_memory_used@@Base+0x320>
   1153c:	48 85 c0             	test   %rax,%rax
   1153f:	0f 4c 85 e9 00 00 48 	cmovl  0x480000e9(%rbp),%eax
   11546:	8b 05 04 12 01 49    	mov    0x49011204(%rip),%eax        # 49022750 <obstack_alloc_failed_handler@@Base+0x490006b0>
   1154c:	85 d7                	test   %edx,%edi
   1154e:	4c 0f 8c 49 89 de 4d 	rex.WR jl 4ddf9e9e <obstack_alloc_failed_handler@@Base+0x4ddd7dfe>
   11555:	39 ef                	cmp    %ebp,%edi
   11557:	00 48 c7             	add    %cl,-0x39(%rax)
   1155a:	0f 85 b4 00 00 00    	jne    11614 <_obstack_memory_used@@Base+0xe64>
   11560:	7f 06                	jg     11568 <_obstack_memory_used@@Base+0xdb8>
   11562:	49 89 d4             	mov    %rdx,%r12
   11565:	d6                   	(bad)  
   11566:	49 c1 ed 18          	shr    $0x18,%r13
   1156a:	35 e1 11 48 49       	xor    $0x494811e1,%eax
   1156f:	f7 fd                	idiv   %ebp
   11571:	e8 7a 32 ff ff       	call   47f0 <clock_gettime@plt>
   11576:	48                   	rex.W
   11577:	49 89 fb             	mov    %rdi,%r11
   1157a:	30 48 8b             	xor    %cl,-0x75(%rax)
   1157d:	54                   	push   %rsp
   1157e:	24 38                	and    $0x38,%al
   11580:	48 8b 05 c9 11 01 00 	mov    0x111c9(%rip),%rax        # 22750 <obstack_alloc_failed_handler@@Base+0x6b0>
   11587:	48 8b 35 ca 49 f7 fd 	mov    -0x208b636(%rip),%rsi        # fffffffffdf85f58 <obstack_alloc_failed_handler@@Base+0xfffffffffdf63eb8>
   1158e:	48 8d 49 c1          	lea    -0x3f(%rcx),%rcx
   11592:	49 c1 e1 1a          	shl    $0x1a,%r9
   11596:	39 cf                	cmp    %ecx,%edi
   11598:	7c 0e                	jl     115a8 <_obstack_memory_used@@Base+0xdf8>
   1159a:	0f 8f 34 02 00 00    	jg     117d4 <_obstack_memory_used@@Base+0x1024>
   115a0:	49 89 fc             	mov    %rdi,%r12
   115a3:	89 2c 02             	mov    %ebp,(%rdx,%rax,1)
   115a6:	00 00                	add    %al,(%rax)
   115a8:	48 39 c1             	cmp    %rax,%rcx
   115ab:	0f 48 39             	cmovs  (%rcx),%edi
   115ae:	f2 00 00             	repnz add %al,(%rax)
   115b1:	48 f7 fa             	idiv   %rdx
   115b4:	02 00                	add    (%rax),%al
   115b6:	48 e9 aa 49 89 d4    	rex.W jmp ffffffffd48a5f66 <obstack_alloc_failed_handler@@Base+0xffffffffd4883ec6>
   115bc:	31 d7                	xor    %edx,%edi
   115be:	e9 13 02 00 00       	jmp    117d6 <_obstack_memory_used@@Base+0x1026>
   115c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   115c8:	48 8b 4c 39 e3       	mov    -0x1d(%rcx,%rdi,1),%rcx
   115cd:	8b 05 dd 0c 01 0f    	mov    0xf010cdd(%rip),%eax        # f0222b0 <obstack_alloc_failed_handler@@Base+0xf000210>
   115d3:	8f                   	(bad)  
   115d4:	de fe                	fdivrp %st,%st(6)
   115d6:	ff                   	(bad)  
   115d7:	ff 00                	incl   (%rax)
   115d9:	00 49 c7             	add    %cl,-0x39(%rcx)
   115dc:	c7                   	(bad)  
   115dd:	6a 02                	push   $0x2
   115df:	00 00                	add    %al,(%rax)
   115e1:	15 d2 0c 4c 89       	adc    $0x894c0cd2,%eax
   115e6:	eb 8e                	jmp    11576 <_obstack_memory_used@@Base+0xdc6>
   115e8:	00 00                	add    %al,(%rax)
   115ea:	00 48 89             	add    %cl,-0x77(%rax)
   115ed:	c7                   	(bad)  
   115ee:	48 89 48 ff          	mov    %rcx,-0x1(%rax)
   115f2:	c7                   	(bad)  
   115f3:	48 d1 e1             	shl    %rcx
   115f6:	48 89 c6             	mov    %rax,%rsi
   115f9:	e9 be f7 0f 8f       	jmp    ffffffff8f110dbc <obstack_alloc_failed_handler@@Base+0xffffffff8f0eed1c>
   115fe:	0e                   	(bad)  
   115ff:	fd                   	std    
   11600:	ff                   	(bad)  
   11601:	ff                   	(bad)  
   11602:	d9 3c 31             	fnstcw (%rcx,%rsi,1)
   11605:	ca 01 00             	lret   $0x1
   11608:	00 0f                	add    %cl,(%rdi)
   1160a:	85 6e fd             	test   %ebp,-0x3(%rsi)
   1160d:	ff                   	(bad)  
   1160e:	ff 89 f7 48 89 74    	decl   0x748948f7(%rcx)
   11614:	e9 58 03 00 00       	jmp    11971 <_obstack_memory_used@@Base+0x11c1>
   11619:	14 e8                	adc    $0xe8,%al
   1161b:	4d 21 f9             	and    %r15,%r9
   1161e:	ff 48 8b             	decl   -0x75(%rax)
   11621:	74 24                	je     11647 <_obstack_memory_used@@Base+0xe97>
   11623:	18 8b 54 24 14 48    	sbb    %cl,0x48142454(%rbx)
   11629:	89 c7                	mov    %eax,%edi
   1162b:	e9 4d e9 9d fd       	jmp    fffffffffd9eff7d <obstack_alloc_failed_handler@@Base+0xfffffffffd9cdedd>
   11630:	48 0f af 48 09       	imul   0x9(%rax),%rcx
   11635:	f0 01 48 89          	lock add %ecx,-0x77(%rax)
   11639:	48 89 c7             	mov    %rax,%rdi
   1163c:	de ff                	fdivrp %st,%st(7)
   1163e:	ff 89 f7 48 0f 85    	decl   -0x7af0b709(%rcx)
   11644:	8e 03                	mov    (%rbx),%es
   11646:	00 00                	add    %al,(%rax)
   11648:	24 14                	and    $0x14,%al
   1164a:	e8 b1 cf 4d 0f       	call   f4ee600 <obstack_alloc_failed_handler@@Base+0xf4cc560>
   1164f:	af                   	scas   %es:(%rdi),%eax
   11650:	4c 29 fa             	sub    %r15,%rdx
   11653:	49 c1 ee 1f          	shr    $0x1f,%r14
   11657:	14 48                	adc    $0x48,%al
   11659:	89 c7                	mov    %eax,%edi
   1165b:	e9 f5 fc ff ff       	jmp    11355 <_obstack_memory_used@@Base+0xba5>
   11660:	31 0f                	xor    %ecx,(%rdi)
   11662:	8c fb                	mov    %?,%ebx
   11664:	01 00                	add    %eax,(%rax)
   11666:	00 00                	add    %al,(%rax)
   11668:	00 48 21             	add    %cl,0x21(%rax)
   1166b:	df 02                	filds  (%rdx)
   1166d:	00 00                	add    %al,(%rax)
   1166f:	89 f7                	mov    %esi,%edi
   11671:	48 89 74 24 4c       	mov    %rsi,0x4c(%rsp)
   11676:	0f 49 c1             	cmovns %ecx,%eax
   11679:	e1 0d                	loope  11688 <_obstack_memory_used@@Base+0xed8>
   1167b:	f6 ce 0f             	test   $0xf,%dh
   1167e:	85 46 01             	test   %eax,0x1(%rsi)
   11681:	00 00                	add    %al,(%rax)
   11683:	0f 85 03 02 00 4c    	jne    4c01188c <obstack_alloc_failed_handler@@Base+0x4bfef7ec>
   11689:	29 48 ff             	sub    %ecx,-0x1(%rax)
   1168c:	c0 fc ff             	sar    $0xff,%ah
   1168f:	ff 48 49             	decl   0x49(%rax)
   11692:	85 ce                	test   %ecx,%esi
   11694:	f9                   	stc    
   11695:	01 00                	add    %eax,(%rax)
   11697:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   1169c:	4c 8d bc 24 80 00 00 	lea    0x80(%rsp),%r15
   116a3:	00 
   116a4:	48 c7                	rex.W (bad) 
   116a6:	49 f7 fb             	idiv   %r11
   116a9:	21 d2                	and    %edx,%edx
   116ab:	00 4d 29             	add    %cl,0x29(%rbp)
   116ae:	fd                   	std    
   116af:	fa                   	cli    
   116b0:	48 89 cf             	mov    %rcx,%rdi
   116b3:	48 89 4c 21 d3       	mov    %rcx,-0x2d(%rcx,%riz,1)
   116b8:	e8 13 f4 48 01       	call   14a0ad0 <obstack_alloc_failed_handler@@Base+0x147ea30>
   116bd:	c2 85 c0             	ret    $0xc085
   116c0:	74 65                	je     11727 <_obstack_memory_used@@Base+0xf77>
   116c2:	80 3d 43 11 01 00 00 	cmpb   $0x0,0x11143(%rip)        # 2280c <obstack_alloc_failed_handler@@Base+0x76c>
   116c9:	48 8b 15 70 0b 01 00 	mov    0x10b70(%rip),%rdx        # 22240 <obstack_alloc_failed_handler@@Base+0x1a0>
   116d0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   116d5:	74 16                	je     116ed <_obstack_memory_used@@Base+0xf3d>
   116d7:	48 63 94 24 90 00 48 	movslq -0x7ab7ff70(%rsp),%rdx
   116de:	85 
   116df:	e9 2e fc ff ff       	jmp    11312 <_obstack_memory_used@@Base+0xb62>
   116e4:	01 00                	add    %eax,(%rax)
   116e6:	48 c1 e2 07          	shl    $0x7,%rdx
   116ea:	48 01 c2             	add    %rax,%rdx
   116ed:	48 8d bc 24 e9 51 01 	lea    0x151e9(%rsp),%rdi
   116f4:	00 
   116f5:	48                   	rex.W
   116f6:	49 c7 c4 6b 00 00 00 	mov    $0x6b,%r12
   116fd:	49 31 cb             	xor    %rcx,%r11
   11700:	00 00                	add    %al,(%rax)
   11702:	e9 75 65 00 51       	jmp    51017c7c <obstack_alloc_failed_handler@@Base+0x50ff5bdc>
   11707:	4c 89 f9             	mov    %r15,%rcx
   1170a:	6a 4d                	push   $0x4d
   1170c:	89 d4                	mov    %edx,%esp
   1170e:	7c 24                	jl     11734 <_obstack_memory_used@@Base+0xf84>
   11710:	28 e8                	sub    %ch,%al
   11712:	4a 0f 8c a5 03 00 00 	rex.WX jl 11abe <_obstack_memory_used@@Base+0x130e>
   11719:	ae                   	scas   %es:(%rdi),%al
   1171a:	02 00                	add    (%rax),%al
   1171c:	00 49 85             	add    %cl,-0x7b(%rcx)
   1171f:	c9                   	leave  
   11720:	85 c0                	test   %eax,%eax
   11722:	48 89 c6             	mov    %rax,%rsi
   11725:	75 12                	jne    11739 <_obstack_memory_used@@Base+0xf89>
   11727:	c7                   	(bad)  
   11728:	4d 39 ce             	cmp    %r9,%r14
   1172b:	01 00                	add    %eax,(%rax)
   1172d:	00 00                	add    %al,(%rax)
   1172f:	00 00                	add    %al,(%rax)
   11731:	45 31 c0             	xor    %r8d,%r8d
   11734:	e9 43 f9 ff 48       	jmp    4901107c <obstack_alloc_failed_handler@@Base+0x48feefdc>
   11739:	89 c6                	mov    %eax,%esi
   1173b:	14 00                	adc    $0x0,%al
   1173d:	75 a2                	jne    116e1 <_obstack_memory_used@@Base+0xf31>
   1173f:	49 0f af ca          	imul   %r10,%rcx
   11743:	00 41 89             	add    %al,-0x77(%rcx)
   11746:	c0 85 c0 0f 4d 89 e7 	rolb   $0xe7,-0x76b2f040(%rbp)
   1174d:	ff 4d 09             	decl   0x9(%rbp)
   11750:	da 01                	fiaddl (%rcx)
   11752:	00 00                	add    %al,(%rax)
   11754:	00 00                	add    %al,(%rax)
   11756:	00 00                	add    %al,(%rax)
   11758:	80 3b 48             	cmpb   $0x48,(%rbx)
   1175b:	ff c3                	inc    %ebx
   1175d:	b9 20 00 00 00       	mov    $0x20,%ecx
   11762:	4c 8d 6b 4d          	lea    0x4d(%rbx),%r13
   11766:	0f af ec             	imul   %esp,%ebp
   11769:	cd 3a                	int    $0x3a
   1176b:	f9                   	stc    
   1176c:	ff                   	(bad)  
   1176d:	ff 80 bd 48 f7 fb    	incl   -0x408b743(%rax)
   11773:	0f 8c 04 02 00 00    	jl     1197d <_obstack_memory_used@@Base+0x11cd>
   11779:	ff 4d 09             	decl   0x9(%rbp)
   1177c:	e3 4c                	jrcxz  117ca <_obstack_memory_used@@Base+0x101a>
   1177e:	24 30                	and    $0x30,%al
   11780:	c6 84 0f 85 bb 00 00 	movb   $0x0,0xbb85(%rdi,%rcx,1)
   11787:	00 
   11788:	49 89 dd             	mov    %rbx,%r13
   1178b:	24 e4                	and    $0xe4,%al
   1178d:	00 00                	add    %al,(%rax)
   1178f:	00 48 be             	add    %cl,-0x42(%rax)
   11792:	cd cc                	int    $0xcc
   11794:	cc                   	int3   
   11795:	cc                   	int3   
   11796:	cc                   	int3   
   11797:	cc                   	int3   
   11798:	cc                   	int3   
   11799:	cc                   	int3   
   1179a:	48 85 c9             	test   %rcx,%rcx
   1179d:	0f 88 9a 00 4d 31    	js     314e183d <obstack_alloc_failed_handler@@Base+0x314bf79d>
   117a3:	d0 1f                	rcrb   (%rdi)
   117a5:	44 00 00             	add    %r8b,(%rax)
   117a8:	48 89 c8             	mov    %rcx,%rax
   117ab:	49 83 ed 49          	sub    $0x49,%r13
   117af:	ff c5                	inc    %ebp
   117b1:	af                   	scas   %es:(%rdi),%eax
   117b2:	d8 e9                	fsubr  %st(1),%st
   117b4:	a2 00 49 85 cf 92 48 	movabs %al,0xc0014892cf854900
   117bb:	01 c0 
   117bd:	48 29 48 09          	sub    %rcx,0x9(%rax)
   117c1:	c6                   	(bad)  
   117c2:	d7                   	xlat   %ds:(%rbx)
   117c3:	41 88 49 01          	mov    %cl,0x1(%r9)
   117c7:	ce                   	(bad)  
   117c8:	89 d1                	mov    %edx,%ecx
   117ca:	48 85 d2             	test   %rdx,%rdx
   117cd:	75 d9                	jne    117a8 <_obstack_memory_used@@Base+0xff8>
   117cf:	49                   	rex.WB
   117d0:	4d 39 d4             	cmp    %r10,%r12
   117d3:	ff 31                	push   (%rcx)
   117d5:	c0 80 3d 2f 49 f7 f9 	rolb   $0xf9,-0x8b6d0c3(%rax)
   117dc:	49 31 cc             	xor    %rcx,%r12
   117df:	74 4f                	je     11830 <_obstack_memory_used@@Base+0x1080>
   117e1:	48 63 54 24 50       	movslq 0x50(%rsp),%rdx
   117e6:	e9 96 eb 4c 0f       	jmp    f4e0381 <obstack_alloc_failed_handler@@Base+0xf4be2e1>
   117eb:	af                   	scas   %es:(%rdi),%eax
   117ec:	e0 82                	loopne 11770 <_obstack_memory_used@@Base+0xfc0>
   117ee:	49 e9 4c fe ff ff    	rex.WB jmp 11640 <_obstack_memory_used@@Base+0xe90>
   117f4:	00 0f                	add    %cl,(%rdi)
   117f6:	af                   	scas   %es:(%rdi),%eax
   117f7:	dc f7                	fdiv   %st,%st(7)
   117f9:	ff 01                	incl   (%rcx)
   117fb:	49 ff c2             	inc    %r10
   117fe:	ec                   	in     (%dx),%al
   117ff:	08 45 31             	or     %al,0x31(%rbp)
   11802:	c9                   	leave  
   11803:	45 31 c0             	xor    %r8d,%r8d
   11806:	be e9 03 00 00       	mov    $0x3e9,%esi
   1180b:	51                   	push   %rcx
   1180c:	48 89 df             	mov    %rbx,%rdi
   1180f:	4c                   	rex.WR
   11810:	4c 01 d0             	add    %r10,%rax
   11813:	57                   	push   %rdi
   11814:	6a ff                	push   $0xffffffffffffffff
   11816:	e8 45 37 00 00       	call   14f60 <_obstack_memory_used@@Base+0x47b0>
   1181b:	48 83 c4 20          	add    $0x20,%rsp
   1181f:	48 85 c0             	test   %rax,%rax
   11822:	0f 84 30 48 21 f9    	je     fffffffff9226058 <obstack_alloc_failed_handler@@Base+0xfffffffff9203fb8>
   11828:	48 01 c3             	add    %rax,%rbx
   1182b:	e9 2d ff 49 85       	jmp    ffffffff854b175d <obstack_alloc_failed_handler@@Base+0xffffffff8548f6bd>
   11830:	48 ff c7             	inc    %rdi
   11833:	09 0a                	or     %ecx,(%rdx)
   11835:	01 4d 39             	add    %ecx,0x39(%rbp)
   11838:	df 14 c2             	fists  (%rdx,%rax,8)
   1183b:	eb bf                	jmp    117fc <_obstack_memory_used@@Base+0x104c>
   1183d:	4c 89 ee             	mov    %r13,%rsi
   11840:	bf 30 00 00 4d       	mov    $0x4d000030,%edi
   11845:	85 cb                	test   %ecx,%ebx
   11847:	af                   	scas   %es:(%rdi),%eax
   11848:	d2 66 66             	shlb   %cl,0x66(%rsi)
   1184b:	66 66 66 66 48 c7 c3 	data16 data16 data16 data16 mov $0x30e,%rbx
   11852:	0e 03 00 00 
   11856:	00 00                	add    %al,(%rax)
   11858:	0f 8f 24 fc ff ff    	jg     11482 <_obstack_memory_used@@Base+0xcd2>
   1185e:	89 c8                	mov    %ecx,%eax
   11860:	48 c1 f8 3f          	sar    $0x3f,%rax
   11864:	48 f7 f9             	idiv   %rcx
   11867:	48                   	rex.W
   11868:	4d 85 c2             	test   %r8,%r10
   1186b:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
   1186f:	8d 04 48             	lea    (%rax,%rcx,2),%eax
   11872:	48 c1 e9 3d          	shr    $0x3d,%rcx
   11876:	d1 e9                	shr    %ecx
   11878:	59                   	pop    %rcx
   11879:	fd                   	std    
   1187a:	ff                   	(bad)  
   1187b:	ff 01                	incl   (%rcx)
   1187d:	4c 21 fe             	and    %r15,%rsi
   11880:	0f af f5             	imul   %ebp,%esi
   11883:	83 ed 02             	sub    $0x2,%ebp
   11886:	49 c7 c5 64 01 00 00 	mov    $0x164,%r13
   1188d:	00 00                	add    %al,(%rax)
   1188f:	00 e9                	add    %ch,%cl
   11891:	41 ff 74 72 e8       	push   -0x18(%r10,%rsi,2)
   11896:	0f 84 23 01 00 00    	je     119bf <_obstack_memory_used@@Base+0x120f>
   1189c:	4c 01 d2             	add    %r10,%rdx
   1189f:	90                   	nop
   118a0:	83 3d 65 0a 01 00 04 	cmpl   $0x4,0x10a65(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   118a7:	0f 87 0c 04 00 00    	ja     11cb9 <_obstack_memory_used@@Base+0x1509>
   118ad:	41 57                	push   %r15
   118af:	48 8d 15 b6 68 00 00 	lea    0x68b6(%rip),%rdx        # 1816c <_obstack_memory_used@@Base+0x79bc>
   118b6:	41 56                	push   %r14
   118b8:	41 55                	push   %r13
   118ba:	41 54                	push   %r12
   118bc:	55                   	push   %rbp
   118bd:	53                   	push   %rbx
   118be:	48 83 ec 28          	sub    $0x28,%rsp
   118c2:	8b 05 44 0a 01 00    	mov    0x10a44(%rip),%eax        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   118c8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   118cc:	48 01 d0             	add    %rdx,%rax
   118cf:	3e ff e0             	notrack jmp *%rax
   118d2:	66 0f 4d 31          	cmovge (%rcx),%si
   118d6:	fd                   	std    
   118d7:	0f 8f 66 02 49 0f    	jg     f4a1b43 <obstack_alloc_failed_handler@@Base+0xf47faa3>
   118dd:	af                   	scas   %es:(%rdi),%eax
   118de:	de 00                	fiadds (%rax)
   118e0:	0f 84 32 49 c7 4c    	je     4cc86218 <obstack_alloc_failed_handler@@Base+0x4cc64178>
   118e6:	31 e9                	xor    %ebp,%ecx
   118e8:	ff                   	(bad)  
   118e9:	ff c8                	dec    %eax
   118eb:	4c                   	rex.WR
   118ec:	49 01 ce             	add    %rcx,%r14
   118ef:	14 40                	adc    $0x40,%al
   118f1:	48 89 04 24          	mov    %rax,(%rsp)
   118f5:	48 8b 05 4c 0a 01 00 	mov    0x10a4c(%rip),%rax        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
   118fc:	4c                   	rex.WR
   118fd:	48 c1 e2 22          	shl    $0x22,%rdx
   11901:	0f 8f 83 fc ff ff    	jg     1158a <_obstack_memory_used@@Base+0xdda>
   11907:	0f 48 c7             	cmovs  %edi,%eax
   1190a:	c1 20 ff             	shll   $0xff,(%rax)
   1190d:	ff                   	(bad)  
   1190e:	ff f7                	push   %rdi
   11910:	29 fe                	sub    %edi,%esi
   11912:	ff                   	(bad)  
   11913:	ff 49 ff             	decl   -0x1(%rcx)
   11916:	c0 ef 49             	shr    $0x49,%bh
   11919:	89 c7                	mov    %eax,%edi
   1191b:	49 8b 46 10          	mov    0x10(%r14),%rax
   1191f:	49 89 f1             	mov    %rsi,%r9
   11922:	e8 79 55 00 00       	call   16ea0 <_obstack_memory_used@@Base+0x66f0>
   11927:	48                   	rex.W
   11928:	4c 39 cb             	cmp    %r9,%rbx
   1192b:	0c 01                	or     $0x1,%al
   1192d:	00 01                	add    %al,(%rcx)
   1192f:	0f 49 f7             	cmovns %edi,%esi
   11932:	fc                   	cld    
   11933:	00 00                	add    %al,(%rax)
   11935:	48 8b 05 6c 06 01 00 	mov    0x1066c(%rip),%rax        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
   1193c:	45 31 ed             	xor    %r13d,%r13d
   1193f:	bb 01 00 00 00       	mov    $0x1,%ebx
   11944:	48 89 44 49 c1       	mov    %rax,-0x3f(%rcx,%rcx,2)
   11949:	eb 3f                	jmp    1198a <_obstack_memory_used@@Base+0x11da>
   1194b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11950:	48 8b 0f             	mov    (%rdi),%rcx
   11953:	84 bb fe ff ff 48    	test   %bh,0x48fffffe(%rbx)
   11959:	8b 47 28             	mov    0x28(%rdi),%eax
   1195c:	48 3b 47 30          	cmp    0x30(%rdi),%rax
   11960:	0f 83 29 48 89 f0    	jae    fffffffff08a618f <obstack_alloc_failed_handler@@Base+0xfffffffff08840ef>
   11966:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1196a:	45 31 ed             	xor    %r13d,%r13d
   1196d:	48 89 57 49          	mov    %rdx,0x49(%rdi)
   11971:	c1 ea 27             	shr    $0x27,%edx
   11974:	ff                   	(bad)  
   11975:	ff 05 d5 0a 01 00    	incl   0x10ad5(%rip)        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
   1197b:	4c 89 ee             	mov    %r13,%rsi
   1197e:	4c 8b 24 d8          	mov    (%rax,%rbx,8),%r12
   11982:	48 29 ce             	sub    %rcx,%rsi
   11985:	01 4c 0f 8c          	add    %ecx,-0x74(%rdi,%rcx,1)
   11989:	9d                   	popf   
   1198a:	fe                   	(bad)  
   1198b:	ff                   	(bad)  
   1198c:	ff 00                	incl   (%rax)
   1198e:	4c 89 e7             	mov    %r12,%rdi
   11991:	e8 6a bf ff ff       	call   d900 <__sprintf_chk@plt+0x8c20>
   11996:	48 3b 4d 85          	cmp    -0x7b(%rbp),%rcx
   1199a:	f0 01 00             	lock add %eax,(%rax)
   1199d:	49 89 c7             	mov    %rax,%r15
   119a0:	49 c1 e3 0b          	shl    $0xb,%r11
   119a4:	4c 8b 24 e8          	mov    (%rax,%rbp,8),%r12
   119a8:	0f 83 b2 02 00 00    	jae    11c60 <_obstack_memory_used@@Base+0x14b0>
   119ae:	48 89 d8             	mov    %rbx,%rax
   119b1:	31 d2                	xor    %edx,%edx
   119b3:	48 f7 34 48          	divq   (%rax,%rcx,2)
   119b7:	c1 e0 0f             	shl    $0xf,%eax
   119ba:	48 85 d2             	test   %rdx,%rdx
   119bd:	74 91                	je     11950 <_obstack_memory_used@@Base+0x11a0>
   119bf:	4d 01 ec             	add    %r13,%r12
   119c2:	4b 8d 3c 2f          	lea    (%r15,%r13,1),%rdi
   119c6:	4c 89 e6             	mov    %r12,%rsi
   119c9:	48 0f af f2          	imul   %rdx,%rsi
   119cd:	ff 57 ff             	call   *-0x1(%rdi)
   119d0:	ff                   	(bad)  
   119d1:	eb a1                	jmp    11974 <_obstack_memory_used@@Base+0x11c4>
   119d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   119d8:	bf 2c 00 00 00       	mov    $0x2c,%edi
   119dd:	48 83 c4 28          	add    $0x28,%rsp
   119e1:	5b                   	pop    %rbx
   119e2:	5d                   	pop    %rbp
   119e3:	41 5c                	pop    %r12
   119e5:	41                   	rex.B
   119e6:	4c 0f af f8          	imul   %rax,%r15
   119ea:	5f                   	pop    %rdi
   119eb:	48 09 f6             	or     %rsi,%rsi
   119ee:	ff 49 ff             	decl   -0x1(%rcx)
   119f1:	c3                   	ret    
   119f2:	3d d0 0b 01 48       	cmp    $0x48010bd0,%eax
   119f7:	21 de                	and    %ebx,%esi
   119f9:	84 08                	test   %cl,(%rax)
   119fb:	02 00                	add    (%rax),%al
   119fd:	00 48 8b             	add    %cl,-0x75(%rax)
   11a00:	05 a3 05 01 00       	add    $0x105a3,%eax
   11a05:	4c 8d 2d b4 06 01 00 	lea    0x106b4(%rip),%r13        # 220c0 <obstack_alloc_failed_handler@@Base+0x20>
   11a0c:	31 db                	xor    %ebx,%ebx
   11a0e:	4d 8d 49 09          	lea    0x9(%r9),%r9
   11a12:	d2 89 44 24 10 49    	rorb   %cl,0x49102444(%rcx)
   11a18:	8d 6c 24 d0          	lea    -0x30(%rsp),%ebp
   11a1c:	eb 4c                	jmp    11a6a <_obstack_memory_used@@Base+0x12ba>
   11a1e:	66 90                	xchg   %ax,%ax
   11a20:	48 8b 05 29 0a 01 00 	mov    0x10a29(%rip),%rax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
   11a27:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
   11a2b:	e8 50 f1 ff ff       	call   10b80 <_obstack_memory_used@@Base+0x3d0>
   11a30:	48 8b 44 4c 31       	mov    0x31(%rsp,%rcx,2),%rax
   11a35:	c3                   	ret    
   11a36:	8b 38                	mov    (%rax),%edi
   11a38:	48 8b 49 c1          	mov    -0x3f(%rcx),%rcx
   11a3c:	ed                   	in     (%dx),%eax
   11a3d:	0e                   	(bad)  
   11a3e:	c9                   	leave  
   11a3f:	30 0f                	xor    %cl,(%rdi)
   11a41:	83 e2 01             	and    $0x1,%edx
   11a44:	00 0f                	add    %cl,(%rdi)
   11a46:	85 09                	test   %ecx,(%rcx)
   11a48:	ff                   	(bad)  
   11a49:	ff                   	(bad)  
   11a4a:	ff 89 57 28 c6 00    	decl   0xc62857(%rcx)
   11a50:	48 ff c0             	inc    %rax
   11a53:	05 9f 08 01 00       	add    $0x1089f,%eax
   11a58:	01 0f                	add    %ecx,(%rdi)
   11a5a:	8f                   	(bad)  
   11a5b:	1e                   	(bad)  
   11a5c:	01 00                	add    %eax,(%rax)
   11a5e:	00 1d 64 0b 01 0f    	add    %bl,0xf010b64(%rip)        # f0225c8 <obstack_alloc_failed_handler@@Base+0xf000528>
   11a64:	85 8c 01 00 00 00 80 	test   %ecx,-0x80000000(%rcx,%rax,1)
   11a6b:	3d 97 08 01 00       	cmp    $0x10897,%eax
   11a70:	00 74 ad bf          	add    %dh,-0x41(%rbp,%rbp,4)
   11a74:	04 00                	add    $0x0,%al
   11a76:	00 00                	add    %al,(%rax)
   11a78:	e8 a3 a6 ff 0f       	call   1000c120 <obstack_alloc_failed_handler@@Base+0xffea080>
   11a7d:	85 f3                	test   %esi,%ebx
   11a7f:	fd                   	std    
   11a80:	ff                   	(bad)  
   11a81:	ff 89 ef e8 17 49    	decl   0x4917e8ef(%rcx)
   11a87:	39 f4                	cmp    %esi,%esp
   11a89:	4c 89 e7             	mov    %r12,%rdi
   11a8c:	e8 0f a8 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   11a91:	48 89 ef             	mov    %rbp,%rdi
   11a94:	e8 49 f7 ff ff       	call   111e2 <_obstack_memory_used@@Base+0xa32>
   11a99:	eb 85                	jmp    11a20 <_obstack_memory_used@@Base+0x1270>
   11a9b:	49 89 d0             	mov    %rdx,%r8
   11a9e:	49 ff c3             	inc    %r11
   11aa1:	83 3d 20 0b 01 00 00 	cmpl   $0x0,0x10b20(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
   11aa8:	0f 84 58 01 00 00    	je     11c06 <_obstack_memory_used@@Base+0x1456>
   11aae:	48 8b 05 f3 04 01 00 	mov    0x104f3(%rip),%rax        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
   11ab5:	31 db                	xor    %ebx,%ebx
   11ab7:	4c 29 c2             	sub    %r8,%rdx
   11aba:	e4 10                	in     $0x10,%al
   11abc:	0f 1f 40 48          	nopl   0x48(%rax)
   11ac0:	f7 f9                	idiv   %ecx
   11ac2:	05 89 09 01 00       	add    $0x10989,%eax
   11ac7:	31 49 0f             	xor    %ecx,0xf(%rcx)
   11aca:	af                   	scas   %es:(%rdi),%eax
   11acb:	4c 0f af e8          	imul   %rax,%r13
   11acf:	53                   	push   %rbx
   11ad0:	00 00                	add    %al,(%rax)
   11ad2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   11ad7:	48 8b 48 c7          	mov    -0x39(%rax),%rcx
   11adb:	c2 b3 03             	ret    $0x3b3
   11ade:	00 00                	add    %al,(%rax)
   11ae0:	fa                   	cli    
   11ae1:	30 0f                	xor    %cl,(%rdi)
   11ae3:	83 58 4c 29          	sbbl   $0x29,0x4c(%rax)
   11ae7:	48 21 d7             	and    %rdx,%rdi
   11aea:	50                   	push   %rax
   11aeb:	48 c1 e7 17          	shl    $0x17,%rdi
   11aef:	49 09 fc             	or     %rdi,%r12
   11af2:	0a 48 83             	or     -0x7d(%rax),%cl
   11af5:	c3                   	ret    
   11af6:	01 0f                	add    %ecx,(%rdi)
   11af8:	84 54 ff ff          	test   %dl,-0x1(%rdi,%rdi,8)
   11afc:	ff 00                	incl   (%rax)
   11afe:	77 c0                	ja     11ac0 <_obstack_memory_used@@Base+0x1310>
   11b00:	e9 01 01 00 00       	jmp    11c06 <_obstack_memory_used@@Base+0x1456>
   11b05:	0f 1f 00             	nopl   (%rax)
   11b08:	48 83 3d 70 09 01 00 	cmpq   $0x0,0x10970(%rip)        # 22480 <obstack_alloc_failed_handler@@Base+0x3e0>
   11b0f:	00 
   11b10:	0f 84 4d 09 e0 00    	je     e12463 <obstack_alloc_failed_handler@@Base+0xdf03c3>
   11b16:	bf 01 00 00 00       	mov    $0x1,%edi
   11b1b:	e8 70 c6 ff ff       	call   e190 <__sprintf_chk@plt+0x94b0>
   11b20:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   11b24:	48 89 c1             	mov    %rax,%rcx
   11b27:	48 8b 05 1a 08 01 00 	mov    0x1081a(%rip),%rax        # 22348 <obstack_alloc_failed_handler@@Base+0x2a8>
   11b2e:	4c 8d 7c d0 e8       	lea    -0x18(%rax,%rdx,8),%r15
   11b33:	48 8b 05 8e 0a 01 00 	mov    0x10a8e(%rip),%rax        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
   11b3a:	31 d2                	xor    %edx,%edx
   11b3c:	48 f7 f1             	div    %rcx
   11b3f:	48 83 fa 01          	cmp    $0x1,%rdx
   11b43:	48 83 d8 ff          	sbb    $0xffffffffffffffff,%rax
   11b47:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11b4c:	48 85 c0             	test   %rax,%rax
   11b4f:	0f 84 b1 00 00 00    	je     11c06 <_obstack_memory_used@@Base+0x1456>
   11b55:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   11b5c:	00 00 
   11b5e:	48 8b 05 43 04 01 00 	mov    0x10443(%rip),%rax        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
   11b65:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   11b6a:	66 0f 1f 49 f7       	nopw   -0x9(%rcx)
   11b6f:	f9                   	stc    
   11b70:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   11b75:	45 31 ed             	xor    %r13d,%r13d
   11b78:	45 31 f6             	xor    %r14d,%r14d
   11b7b:	eb 15                	jmp    11b92 <_obstack_memory_used@@Base+0x13e2>
   11b7d:	0f 1f 00             	nopl   (%rax)
   11b80:	4c 01 f5             	add    %r14,%rbp
   11b83:	4a 8d 3c 33          	lea    (%rbx,%r14,1),%rdi
   11b87:	48 89 ee             	mov    %rbp,%rsi
   11b8a:	49 89 ee             	mov    %rbp,%r14
   11b8d:	e8 3e 56 ff ff       	call   71d0 <__sprintf_chk@plt+0x24f0>
   11b92:	48 8b 05 b7 08 01 00 	mov    0x108b7(%rip),%rax        # 22450 <obstack_alloc_failed_handler@@Base+0x3b0>
   11b99:	4a 8b 3c e0          	mov    (%rax,%r12,8),%rdi
   11b9d:	48 89 3c 24          	mov    %rdi,(%rsp)
   11ba1:	e8 5a bd ff ff       	call   d900 <__sprintf_chk@plt+0x8c20>
   11ba6:	48 8b 3c 24          	mov    (%rsp),%rdi
   11baa:	4c 89 f6             	mov    %r14,%rsi
   11bad:	48 89 c3             	mov    %rax,%rbx
   11bb0:	49 8b 47 10          	mov    0x10(%r15),%rax
   11bb4:	4a 8b 2c 28          	mov    (%rax,%r13,1),%rbp
   11bb8:	49 83 c5 08          	add    $0x8,%r13
   11bbc:	e8 df 52 00 00       	call   16ea0 <_obstack_memory_used@@Base+0x66f0>
   11bc1:	4c 03 64 24 08       	add    0x8(%rsp),%r12
   11bc6:	4c 3b 25 fb 09 01 00 	cmp    0x109fb(%rip),%r12        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
   11bcd:	72 b1                	jb     11b80 <_obstack_memory_used@@Base+0x13d0>
   11bcf:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   11bd4:	48 8b 38             	mov    (%rax),%rdi
   11bd7:	48 8b 47 28          	mov    0x28(%rdi),%rax
   11bdb:	48 3b 47 30          	cmp    0x30(%rdi),%rax
   11bdf:	0f 83 9b 00 00 00    	jae    11c80 <_obstack_memory_used@@Base+0x14d0>
   11be5:	48 8d 49 c7          	lea    -0x39(%rcx),%rcx
   11be9:	c7                   	(bad)  
   11bea:	4a 03 00             	rex.WX add (%rax),%rax
   11bed:	00 ff                	add    %bh,%bh
   11bef:	0a 48 83             	or     -0x7d(%rax),%cl
   11bf2:	44 24 18             	rex.R and $0x18,%al
   11bf5:	01 48 8b             	add    %ecx,-0x75(%rax)
   11bf8:	44 24 18             	rex.R and $0x18,%al
   11bfb:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
   11c00:	0f 85 6a ff ff ff    	jne    11b70 <_obstack_memory_used@@Base+0x13c0>
   11c06:	48 83 c4 28          	add    $0x28,%rsp
   11c0a:	5b                   	pop    %rbx
   11c0b:	5d                   	pop    %rbp
   11c0c:	41 5c                	pop    %r12
   11c0e:	41 5d                	pop    %r13
   11c10:	41 5e                	pop    %r14
   11c12:	41 5f                	pop    %r15
   11c14:	c3                   	ret    
   11c15:	0f 1f 00             	nopl   (%rax)
   11c18:	bf 20 00 4c 31       	mov    $0x314c0020,%edi
   11c1d:	d0 74 d6 8c          	shlb   -0x74(%rsi,%rdx,8)
   11c21:	6b fc ff             	imul   $0xffffffff,%esp,%edi
   11c24:	ff c9                	dec    %ecx
   11c26:	31 fa                	xor    %edi,%edx
   11c28:	be 0a 00 00 00       	mov    $0xa,%esi
   11c2d:	e8 ce 2c ff 0f       	call   10004900 <obstack_alloc_failed_handler@@Base+0xffe2860>
   11c32:	85 97 fe ff ff 48    	test   %edx,0x48fffffe(%rdi)
   11c38:	89 fa                	mov    %edi,%edx
   11c3a:	e1 0f                	loope  11c4b <_obstack_memory_used@@Base+0x149b>
   11c3c:	85 48 09             	test   %ecx,0x9(%rax)
   11c3f:	df 00                	filds  (%rax)
   11c41:	4d 01 f0             	add    %r14,%r8
   11c44:	00 4c 09 c7          	add    %cl,-0x39(%rcx,%rcx,1)
   11c48:	ff                   	(bad)  
   11c49:	ff                   	(bad)  
   11c4a:	e9 a4 fe 0f 84       	jmp    ffffffff84111af3 <obstack_alloc_failed_handler@@Base+0xffffffff840efa53>
   11c4f:	01 01                	add    %eax,(%rcx)
   11c51:	48 c1 e8 16          	shr    $0x16,%rax
   11c55:	00 48 89             	add    %cl,-0x77(%rax)
   11c58:	44 24 e9             	rex.R and $0xe9,%al
   11c5b:	92                   	xchg   %eax,%edx
   11c5c:	4d 39 c2             	cmp    %r8,%r10
   11c5f:	00 48 8b             	add    %cl,-0x75(%rax)
   11c62:	44                   	rex.R
   11c63:	49 09 cf             	or     %rcx,%r15
   11c66:	8b 38                	mov    (%rax),%edi
   11c68:	48                   	rex.W
   11c69:	4c                   	rex.WR
   11c6a:	49 c7 c2 6b fc ff ff 	mov    $0xfffffffffffffc6b,%r10
   11c71:	2f                   	(bad)  
   11c72:	48 8d 49 29          	lea    0x29(%rcx),%rcx
   11c76:	c8 fa 57 28          	enter  $0x57fa,$0x28
   11c7a:	c6 00 4d             	movb   $0x4d,(%rax)
   11c7d:	39 d3                	cmp    %edx,%ebx
   11c7f:	90                   	nop
   11c80:	be 0a 00 00 00       	mov    $0xa,%esi
   11c85:	e8 76 2c ff ff       	call   4900 <__overflow@plt>
   11c8a:	e9 61 ff ff ff       	jmp    11bf0 <_obstack_memory_used@@Base+0x1440>
   11c8f:	be 0a 00 00 00       	mov    $0xa,%esi
   11c94:	45 31 0f             	xor    %r9d,(%r15)
   11c97:	84 14 fc             	test   %dl,(%rsp,%rdi,8)
   11c9a:	ff                   	(bad)  
   11c9b:	ff                   	(bad)  
   11c9c:	e9 d3 0f 8c 91       	jmp    ffffffff918d2c74 <obstack_alloc_failed_handler@@Base+0xffffffff918b0bd4>
   11ca1:	fd                   	std    
   11ca2:	ff                   	(bad)  
   11ca3:	ff 28                	ljmp   *(%rax)
   11ca5:	be 0a 00 48 c1       	mov    $0xc148000a,%esi
   11caa:	0f 8c cd fe ff ff    	jl     11b7d <_obstack_memory_used@@Base+0x13cd>
   11cb0:	49 21 ce             	and    %rcx,%r14
   11cb3:	5f                   	pop    %rdi
   11cb4:	e9 47 2c ff ff       	jmp    4900 <__overflow@plt>
   11cb9:	c3                   	ret    
   11cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11cc0:	41 57                	push   %r15
   11cc2:	41 56                	push   %r14
   11cc4:	49 89 f6             	mov    %rsi,%r14
   11cc7:	41 55                	push   %r13
   11cc9:	49 89 fd             	mov    %rdi,%r13
   11ccc:	41 54                	push   %r12
   11cce:	55                   	push   %rbp
   11ccf:	53                   	push   %rbx
   11cd0:	48 81 ec 18 03 00 00 	sub    $0x318,%rsp
   11cd7:	89 54 24 14          	mov    %edx,0x14(%rsp)
   11cdb:	88 54 24 10          	mov    %dl,0x10(%rsp)
   11cdf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11ce6:	00 00 
   11ce8:	48 89 84 24 08 03 00 	mov    %rax,0x308(%rsp)
   11cef:	00 
   11cf0:	31 c0                	xor    %eax,%eax
   11cf2:	e8 19 2a ff ff       	call   4710 <__errno_location@plt>
   11cf7:	4c 89 ef             	mov    %r13,%rdi
   11cfa:	c7 00 4c 01 d2 00    	movl   $0xd2014c,(%rax)
   11d00:	48 89 c5             	mov    %rax,%rbp
   11d03:	e8 28 2b ff ff       	call   4830 <opendir@plt>
   11d08:	48 85 c0             	test   %rax,%rax
   11d0b:	0f 84 b6 06 00 00    	je     123c7 <_obstack_memory_used@@Base+0x1c17>
   11d11:	4c 8b 3d 20 0a 01 00 	mov    0x10a20(%rip),%r15        # 22738 <obstack_alloc_failed_handler@@Base+0x698>
   11d18:	49 89 c4             	mov    %rax,%r12
   11d1b:	4d 85 ff             	test   %r15,%r15
   11d1e:	0f 84 75 01 00 00    	je     11e99 <_obstack_memory_used@@Base+0x16e9>
   11d24:	48 0f af d2          	imul   %rdx,%rdx
   11d28:	e4 2c                	in     $0x2c,%al
   11d2a:	ff                   	(bad)  
   11d2b:	ff 48 8d             	decl   -0x73(%rax)
   11d2e:	54                   	push   %rsp
   11d2f:	24 70                	and    $0x70,%al
   11d31:	41 b8 00 01 0f 8c    	mov    $0x8c0f0100,%r8d
   11d37:	0f 85 e6 01 00 00    	jne    11f23 <_obstack_memory_used@@Base+0x1773>
   11d3d:	cb                   	lret   
   11d3e:	02 00                	add    (%rax),%al
   11d40:	00 b9 00 10 00 00    	add    %bh,0x1000(%rcx)
   11d46:	48 8d 35 70 7e 49 85 	lea    -0x7ab68190(%rip),%rsi        # ffffffff854a9bbd <obstack_alloc_failed_handler@@Base+0xffffffff85487b1d>
   11d4d:	4d 29 d9             	sub    %r11,%r9
   11d50:	ff                   	(bad)  
   11d51:	ff 4c 21 f2          	decl   -0xe(%rcx,%riz,1)
   11d55:	88 c9                	mov    %cl,%cl
   11d57:	02 00                	add    (%rax),%al
   11d59:	00 48 8b             	add    %cl,-0x75(%rax)
   11d5c:	44 24 78             	rex.R and $0x78,%al
   11d5f:	bf 10 00 48 01       	mov    $0x1480010,%edi
   11d64:	f7 8b 5c 24 70 48 89 	testl  $0x8244489,0x4870245c(%rbx)
   11d6b:	44 24 08 
   11d6e:	e8 1d 29 4d 0f       	call   f4e4690 <obstack_alloc_failed_handler@@Base+0xf4c25f0>
   11d73:	af                   	scas   %es:(%rdi),%eax
   11d74:	d2 c0                	rol    %cl,%al
   11d76:	48 85 c0             	test   %rax,%rax
   11d79:	0f 84 bc 06 00 00    	je     1243b <_obstack_memory_used@@Base+0x1c8b>
   11d7f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11d84:	49 89 4c 39 ea       	mov    %rcx,-0x16(%r9,%rdi,1)
   11d89:	89 c6                	mov    %eax,%esi
   11d8b:	0f 48 85 f0 00 00 24 	cmovs  0x240000f0(%rbp),%eax
   11d92:	28 48 09             	sub    %cl,0x9(%rax)
   11d95:	fe                   	(bad)  
   11d96:	24 49                	and    $0x49,%al
   11d98:	c1 e0 09             	shl    $0x9,%eax
   11d9b:	0f 8c e0 01 0f 85    	jl     ffffffff85101f81 <obstack_alloc_failed_handler@@Base+0xffffffff850dfee1>
   11da1:	92                   	xchg   %eax,%edx
   11da2:	02 00                	add    (%rax),%al
   11da4:	00 92 06 0f 8c 1b    	add    %dl,0x1b8c0f06(%rdx)
   11daa:	fd                   	std    
   11dab:	ff                   	(bad)  
   11dac:	ff b6 00 00 00 48    	push   0x48000000(%rsi)
   11db2:	8b 44 24 28          	mov    0x28(%rsp),%eax
   11db6:	48 85 c0             	test   %rax,%rax
   11db9:	0f 84 7c 06 00 00    	je     1243b <_obstack_memory_used@@Base+0x1c8b>
   11dbf:	4c 01 4d 21          	add    %r9,0x21(%rbp)
   11dc3:	df 4c 39 c0          	fisttps -0x40(%rcx,%rdi,1)
   11dc7:	0f 84 9a 00 00 00    	je     11e67 <_obstack_memory_used@@Base+0x16b7>
   11dcd:	4c 89 c7             	mov    %r8,%rdi
   11dd0:	e8 ab 28 ff ff       	call   4680 <free@plt>
   11dd5:	4c 89 ee             	mov    %r13,%rsi
   11dd8:	48 8d 48 f7          	lea    -0x9(%rax),%rcx
   11ddc:	fe c1                	inc    %cl
   11dde:	eb 22                	jmp    11e02 <_obstack_memory_used@@Base+0x1652>
   11de0:	4d 09 ea             	or     %r13,%r10
   11de3:	f9                   	stc    
   11de4:	00 00                	add    %al,(%rax)
   11de6:	00 00                	add    %al,(%rax)
   11de8:	04 48                	add    $0x48,%al
   11dea:	c7 44 24 30 03 00 00 	movl   $0xf000003,0x30(%rsp)
   11df1:	0f 
   11df2:	84 aa fd ff ff 0f    	test   %ch,0xffffffd(%rdx)
   11df8:	af                   	scas   %es:(%rdi),%eax
   11df9:	f6 24 40             	mulb   (%rax,%rax,2)
   11dfc:	00 00                	add    %al,(%rax)
   11dfe:	e9 95 0f 8f 63       	jmp    63902d98 <obstack_alloc_failed_handler@@Base+0x638e0cf8>
   11e03:	02 49 0f             	add    0xf(%rcx),%cl
   11e06:	af                   	scas   %es:(%rdi),%eax
   11e07:	f6 00 48             	testb  $0x48,(%rax)
   11e0a:	c7 44 24 50 e9 17 fc 	movl   $0xfffc17e9,0x50(%rsp)
   11e11:	ff 
   11e12:	ff c7                	inc    %edi
   11e14:	49                   	rex.WB
   11e15:	48 f7 fb             	idiv   %rbx
   11e18:	00 00                	add    %al,(%rax)
   11e1a:	00 49 ff             	add    %cl,-0x1(%rcx)
   11e1d:	c3                   	ret    
   11e1e:	24 4c                	and    $0x4c,%al
   11e20:	21 fb                	and    %edi,%ebx
   11e22:	00 00                	add    %al,(%rax)
   11e24:	49 c1 e8 04          	shr    $0x4,%r8
   11e28:	00 ba 05 00 00 00    	add    %bh,0x5(%rdx)
   11e2e:	48 8d 35 f3 a3 4d 01 	lea    0x14da3f3(%rip),%rsi        # 14ec228 <obstack_alloc_failed_handler@@Base+0x14ca188>
   11e35:	d0 31                	shlb   (%rcx)
   11e37:	fe 48 c1             	decb   -0x3f(%rax)
   11e3a:	eb 34                	jmp    11e70 <_obstack_memory_used@@Base+0x16c0>
   11e3c:	2a ff                	sub    %bh,%bh
   11e3e:	ff 4c 89 e9          	decl   -0x17(%rcx,%rcx,4)
   11e42:	31 f6                	xor    %esi,%esi
   11e44:	31 ff                	xor    %edi,%edi
   11e46:	48 89 c2             	mov    %rax,%rdx
   11e49:	31 74 78 50          	xor    %esi,0x50(%rax,%rdi,2)
   11e4d:	2d ff ff 4c 89       	sub    $0x894cffff,%eax
   11e52:	e7 49                	out    %eax,$0x49
   11e54:	ff c2                	inc    %edx
   11e56:	ff                   	(bad)  
   11e57:	ff c7                	inc    %edi
   11e59:	05 0a 4c 0f af       	add    $0xaf0f4c0a,%eax
   11e5e:	cf                   	iret   
   11e5f:	00 00                	add    %al,(%rax)
   11e61:	4d 39 c6             	cmp    %r8,%r14
   11e64:	fe                   	(bad)  
   11e65:	ff                   	(bad)  
   11e66:	ff 48 8b             	decl   -0x75(%rax)
   11e69:	05 8a 08 01 00       	add    $0x1088a,%eax
   11e6e:	48 8b 15 8b 08 01 00 	mov    0x1088b(%rip),%rdx        # 22700 <obstack_alloc_failed_handler@@Base+0x660>
   11e75:	48 29 c2             	sub    %rax,%rdx
   11e78:	48 83 fa 0f          	cmp    $0xf,%rdx
   11e7c:	48 c1 e9 11          	shr    $0x11,%rcx
   11e80:	ed                   	in     (%dx),%eax
   11e81:	17                   	(bad)  
   11e82:	48 8b 4c 4d 31       	mov    0x31(%rbp,%rcx,2),%rcx
   11e87:	ea                   	(bad)  
   11e88:	8d 50 10             	lea    0x10(%rax),%edx
   11e8b:	48 89 15 66 08 4c 89 	mov    %rdx,-0x76b3f79a(%rip)        # ffffffff894d26f8 <obstack_alloc_failed_handler@@Base+0xffffffff894b0658>
   11e92:	d6                   	(bad)  
   11e93:	7c a7                	jl     11e3c <_obstack_memory_used@@Base+0x168c>
   11e95:	48 c1 e8 1a          	shr    $0x1a,%rax
   11e99:	e8 e2 83 ff ff       	call   a280 <__sprintf_chk@plt+0x55a0>
   11e9e:	80 3d 9b 08 01 00 00 	cmpb   $0x0,0x1089b(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
   11ea5:	0f 84 4f 01 00 00    	je     11ffa <_obstack_memory_used@@Base+0x184a>
   11eab:	80 3d 74 01 01 00 00 	cmpb   $0x0,0x10174(%rip)        # 22026 <_obstack_memory_used@@Base+0x11876>
   11eb2:	48 8b 4c 89 c7       	mov    -0x39(%rcx,%rcx,4),%rcx
   11eb7:	01 00                	add    %eax,(%rax)
   11eb9:	49 29 c3             	sub    %rax,%r11
   11ebc:	ff                   	(bad)  
   11ebd:	ff 48 8b             	decl   -0x75(%rax)
   11ec0:	47 0f 85 f1 02 00 00 	rex.RXB jne 121b8 <_obstack_memory_used@@Base+0x1a08>
   11ec7:	83 4d 29 d0          	orl    $0xffffffd0,0x29(%rbp)
   11ecb:	00 49 89             	add    %cl,-0x77(%rcx)
   11ece:	fd                   	std    
   11ecf:	01 48 89             	add    %ecx,-0x77(%rax)
   11ed2:	57                   	push   %rdi
   11ed3:	28 c6                	sub    %al,%dh
   11ed5:	00 0a                	add    %cl,(%rdx)
   11ed7:	48 83 05 19 04 01 00 	addq   $0x1,0x10419(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   11ede:	01 
   11edf:	80 3d d2 07 01 00 00 	cmpb   $0x0,0x107d2(%rip)        # 226b8 <obstack_alloc_failed_handler@@Base+0x618>
   11ee6:	c6 05 39 01 01 00 00 	movb   $0x0,0x10139(%rip)        # 22026 <_obstack_memory_used@@Base+0x11876>
   11eed:	0f 85 48 39 c6 00    	jne    c7583b <obstack_alloc_failed_handler@@Base+0xc5379b>
   11ef3:	0f 84 b0 fe ff ff    	je     11da9 <_obstack_memory_used@@Base+0x15f9>
   11ef9:	06                   	(bad)  
   11efa:	01 00                	add    %eax,(%rax)
   11efc:	49 c7 c7 49 ff c2 00 	mov    $0xc2ff49,%r15
   11f03:	4d 85 4c 49 c1       	test   %r9,-0x3f(%r9,%rcx,2)
   11f08:	e5 0b                	in     $0xb,%eax
   11f0a:	05 01 49 01 d7       	add    $0xd7014901,%eax
   11f0f:	ff                   	(bad)  
   11f10:	ff 4d 89             	decl   -0x77(%rbp)
   11f13:	48 89 4d 85          	mov    %rcx,-0x7b(%rbp)
   11f17:	cc                   	int3   
   11f18:	00 00                	add    %al,(%rax)
   11f1a:	0f 44 f5             	cmove  %ebp,%esi
   11f1d:	48 83 ec 49          	sub    $0x49,%rsp
   11f21:	c7 c4 d4 fe ff ff    	mov    $0xfffffed4,%esp
   11f27:	31 c9                	xor    %ecx,%ecx
   11f29:	41 57                	push   %r15
   11f2b:	4c 89 f7             	mov    %r14,%rdi
   11f2e:	e8 bd 49 c7 c0       	call   ffffffffc0c868f0 <obstack_alloc_failed_handler@@Base+0xffffffffc0c64850>
   11f33:	96                   	xchg   %eax,%esi
   11f34:	01 00                	add    %eax,(%rax)
   11f36:	00 45 27             	add    %al,0x27(%rbp)
   11f39:	ff                   	(bad)  
   11f3a:	ff 48 8b             	decl   -0x75(%rax)
   11f3d:	0b be 01 00 49 09    	or     0x9490001(%rsi),%edi
   11f43:	c8 02 4c 01          	enter  $0x4c02,$0x1
   11f47:	c6                   	(bad)  
   11f48:	48 8d 3d 59 7e 00 00 	lea    0x7e59(%rip),%rdi        # 19da8 <_obstack_memory_used@@Base+0x95f8>
   11f4f:	e8 ac 2b 4c 29       	call   294d4b00 <obstack_alloc_failed_handler@@Base+0x294b2a60>
   11f54:	c8 83 05 9c          	enter  $0x583,$0x9c
   11f58:	03 01                	add    (%rcx),%eax
   11f5a:	00 02                	add    %al,(%rdx)
   11f5c:	59                   	pop    %rcx
   11f5d:	5e                   	pop    %rsi
   11f5e:	49 39 c8             	cmp    %rcx,%r8
   11f61:	24 08                	and    $0x8,%al
   11f63:	00 00                	add    %al,(%rax)
   11f65:	00 00                	add    %al,(%rax)
   11f67:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
   11f6c:	89 44 24 10          	mov    %eax,0x10(%rsp)
   11f70:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   11f77:	4c 89 e7             	mov    %r12,%rdi
   11f7a:	e8 11 2b ff ff       	call   4a90 <readdir@plt>
   11f7f:	48 89 c3             	mov    %rax,%rbx
   11f82:	48 85 c0             	test   %rax,%rax
   11f85:	0f 84 f5 00 00 00    	je     12080 <_obstack_memory_used@@Base+0x18d0>
   11f8b:	4c 8d 70 13          	lea    0x13(%rax),%r14
   11f8f:	8b 05 03 05 01 00    	mov    0x10503(%rip),%eax        # 22498 <obstack_alloc_failed_handler@@Base+0x3f8>
   11f95:	83 f8 02             	cmp    $0x2,%eax
   11f98:	0f 84 72 02 00 00    	je     12210 <_obstack_memory_used@@Base+0x1a60>
   11f9e:	80 7b 13 2e          	cmpb   $0x2e,0x13(%rbx)
   11fa2:	0f 84 48 02 00 00    	je     121f0 <_obstack_memory_used@@Base+0x1a40>
   11fa8:	85 c0                	test   %eax,%eax
   11faa:	0f 85 60 02 00 00    	jne    12210 <_obstack_memory_used@@Base+0x1a60>
   11fb0:	4c 8b 3d d1 04 01 00 	mov    0x104d1(%rip),%r15        # 22488 <obstack_alloc_failed_handler@@Base+0x3e8>
   11fb7:	4d 85 ff             	test   %r15,%r15
   11fba:	75 19                	jne    11fd5 <_obstack_memory_used@@Base+0x1825>
   11fbc:	e9 4f 02 00 00       	jmp    12210 <_obstack_memory_used@@Base+0x1a60>
   11fc1:	0f                   	(bad)  
   11fc2:	0f 8f 80 fd ff ff    	jg     11d48 <_obstack_memory_used@@Base+0x1598>
   11fc8:	4d 8b 4c 0f af       	mov    -0x51(%r15,%rcx,1),%r9
   11fcd:	ce                   	(bad)  
   11fce:	ff 0f                	decl   (%rdi)
   11fd0:	84 48 01             	test   %cl,0x1(%rax)
   11fd3:	c1 00 49             	roll   $0x49,(%rax)
   11fd6:	8b 3f                	mov    (%rdi),%edi
   11fd8:	ba e9 3d 02 00       	mov    $0x23de9,%edx
   11fdd:	48 39 c3             	cmp    %rax,%rbx
   11fe0:	e8 6b 29 ff ff       	call   4950 <fnmatch@plt>
   11fe5:	85 49 c7             	test   %ecx,-0x39(%rcx)
   11fe8:	c4                   	(bad)  
   11fe9:	da fe                	(bad)  
   11feb:	ff                   	(bad)  
   11fec:	ff 00                	incl   (%rax)
   11fee:	00 00                	add    %al,(%rax)
   11ff0:	e8 4b a3 ff ff       	call   c340 <__sprintf_chk@plt+0x7660>
   11ff5:	e9 76 ff ff ff       	jmp    11f70 <_obstack_memory_used@@Base+0x17c0>
   11ffa:	80 3d 67 07 01 00 00 	cmpb   $0x0,0x10767(%rip)        # 22768 <obstack_alloc_failed_handler@@Base+0x6c8>
   12001:	0f 84 57 ff ff ff    	je     11f5e <_obstack_memory_used@@Base+0x17ae>
   12007:	e9 9f 4c 85 f3       	jmp    fffffffff3866cab <obstack_alloc_failed_handler@@Base+0xfffffffff3844c0b>
   1200c:	31 c9                	xor    %ecx,%ecx
   1200e:	4c 89 ee             	mov    %r13,%rsi
   12011:	bf 9c ff ff ff       	mov    $0xffffff9c,%edi
   12016:	e8 4c 31 d3 ff       	call   ffffffffffd45167 <obstack_alloc_failed_handler@@Base+0xffffffffffd230c7>
   1201b:	85 c0                	test   %eax,%eax
   1201d:	0f 8c 6a fe ff ff    	jl     11e8d <_obstack_memory_used@@Base+0x16dd>
   12023:	31 ff                	xor    %edi,%edi
   12025:	ba 4c 0f af d6       	mov    $0xd6af0f4c,%edx
   1202a:	48 8d 35 cf a1 00 00 	lea    0xa1cf(%rip),%rsi        # 1c200 <_obstack_memory_used@@Base+0xba50>
   12031:	e8 2a 49 c1 e4       	call   ffffffffe4c26960 <obstack_alloc_failed_handler@@Base+0xffffffffe4c048c0>
   12036:	04 09                	add    $0x9,%al
   12038:	cb                   	lret   
   12039:	24 14                	and    $0x14,%al
   1203b:	4c                   	rex.WR
   1203c:	48 29 c2             	sub    %rax,%rdx
   1203f:	89 c6                	mov    %eax,%esi
   12041:	e8 49 89 f4 c0       	call   ffffffffc0f5a98f <obstack_alloc_failed_handler@@Base+0xffffffffc0f388ef>
   12046:	52                   	push   %rdx
   12047:	49 21 df             	and    %rbx,%r15
   1204a:	0f 85 91 00 00 00    	jne    120e1 <_obstack_memory_used@@Base+0x1931>
   12050:	49 31 d8             	xor    %rbx,%r8
   12053:	28 00                	sub    %al,(%rax)
   12055:	00 00                	add    %al,(%rax)
   12057:	48 0f af f6          	imul   %rsi,%rsi
   1205b:	00 00                	add    %al,(%rax)
   1205d:	48 81 0f 85 04 49 c1 	orq    $0xffffffffc1490485,(%rdi)
   12064:	e4 2b                	in     $0x2b,%al
   12066:	e7 5b                	out    %eax,$0x5b
   12068:	5d                   	pop    %rbp
   12069:	41 5c                	pop    %r12
   1206b:	41 5d                	pop    %r13
   1206d:	41 75 2f             	rex.B jne 1209f <_obstack_memory_used@@Base+0x18ef>
   12070:	5f                   	pop    %rdi
   12071:	74 67                	je     120da <_obstack_memory_used@@Base+0x192a>
   12073:	39 f3                	cmp    %esi,%ebx
   12075:	ff 66 2e             	jmp    *0x2e(%rsi)
   12078:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1207f:	00 
   12080:	8b 55 00             	mov    0x0(%rbp),%edx
   12083:	85 d2                	test   %edx,%edx
   12085:	74 2c                	je     120b3 <_obstack_memory_used@@Base+0x1903>
   12087:	31 ff                	xor    %edi,%edi
   12089:	ba 05 00 00 00       	mov    $0x5,%edx
   1208e:	48 8d 35 61 7b 00 00 	lea    0x7b61(%rip),%rsi        # 19bf6 <_obstack_memory_used@@Base+0x9446>
   12095:	4c 89 d1             	mov    %r10,%rcx
   12098:	60                   	(bad)  
   12099:	fc                   	cld    
   1209a:	ff                   	(bad)  
   1209b:	ff 24 10             	jmp    *(%rax,%rdx,1)
   1209e:	0f 8f bb 01 00 00    	jg     1225f <_obstack_memory_used@@Base+0x1aaf>
   120a4:	3f                   	(bad)  
   120a5:	b7 80                	mov    $0x80,%bh
   120a7:	ff                   	(bad)  
   120a8:	ff 4c 09 4d          	decl   0x4d(%rcx,%rcx,1)
   120ac:	21 f5                	and    %esi,%ebp
   120ae:	49 21 4d 21          	and    %rcx,0x21(%r13)
   120b2:	fd                   	std    
   120b3:	4c 89 e7             	mov    %r12,%rdi
   120b6:	e8 d5 28 ff ff       	call   4990 <closedir@plt>
   120bb:	85 c0                	test   %eax,%eax
   120bd:	0f 85 25 02 00 00    	jne    122e8 <_obstack_memory_used@@Base+0x1b38>
   120c3:	e8 f8 bd ff ff       	call   dec0 <__sprintf_chk@plt+0x91e0>
   120c8:	80 3d 71 06 01 00 00 	cmpb   $0x0,0x10671(%rip)        # 22740 <obstack_alloc_failed_handler@@Base+0x6a0>
   120cf:	0f 85 04 02 00 00    	jne    122d9 <_obstack_memory_used@@Base+0x1b29>
   120d5:	8b 05 31 02 01 00    	mov    0x10231(%rip),%eax        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   120db:	85 c0                	test   %eax,%eax
   120dd:	74 0d                	je     120ec <_obstack_memory_used@@Base+0x193c>
   120df:	80 3d 2a 02 01 00 00 	cmpb   $0x0,0x1022a(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
   120e6:	0f 84 ca 00 00 00    	je     121b6 <_obstack_memory_used@@Base+0x1a06>
   120ec:	80 3d c5 05 01 4d 01 	cmpb   $0x1,0x4d0105c5(%rip)        # 4d0226b8 <obstack_alloc_failed_handler@@Base+0x4d000618>
   120f3:	ee                   	out    %al,(%dx)
   120f4:	8b 0f                	mov    (%rdi),%ecx
   120f6:	8f 03                	pop    (%rbx)
   120f8:	01 00                	add    %eax,(%rax)
   120fa:	00 85 3d 02 00 00    	add    %al,0x23d(%rbp)
   12100:	ba 05 48 89 c3       	mov    $0xc3894805,%edx
   12105:	48 8d 35 14 7b 00 00 	lea    0x7b14(%rip),%rsi        # 19c20 <_obstack_memory_used@@Base+0x9470>
   1210c:	31 4d 21             	xor    %ecx,0x21(%rbp)
   1210f:	c4                   	(bad)  
   12110:	27                   	(bad)  
   12111:	ff 4c 0f af          	decl   -0x51(%rdi,%rcx,1)
   12115:	fa                   	cli    
   12116:	48 89 c5             	mov    %rax,%rbp
   12119:	48 89 c7             	mov    %rax,%rdi
   1211c:	e8 af 28 ff ff       	call   49d0 <fputs_unlocked@plt>
   12121:	48 89 ef             	mov    %rbp,%rdi
   12124:	e8 49 29 cc ff       	call   ffffffffffcd4a72 <obstack_alloc_failed_handler@@Base+0xffffffffffcb29d2>
   12129:	48 8b 3b             	mov    (%rbx),%rdi
   1212c:	48 01 05 c5 01 01 00 	add    %rax,0x101c5(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   12133:	48 8b 0f             	mov    (%rdi),%rcx
   12136:	85 d8                	test   %ebx,%eax
   12138:	fe                   	(bad)  
   12139:	ff                   	(bad)  
   1213a:	ff 0f                	decl   (%rdi)
   1213c:	83 dc 4d             	sbb    $0x4d,%esp
   1213f:	89 f1                	mov    %esi,%ecx
   12141:	4d 09 cb             	or     %r9,%r11
   12144:	0f 84 62 fe ff ff    	je     11fac <_obstack_memory_used@@Base+0x17fc>
   1214a:	00 20                	add    %ah,(%rax)
   1214c:	8b 15 66 01 01 00    	mov    0x10166(%rip),%edx        # 222b8 <obstack_alloc_failed_handler@@Base+0x218>
   12152:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   12157:	b9 00 02 00 00       	mov    $0x200,%ecx
   1215c:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
   12161:	0f af c8             	imul   %eax,%ecx
   12164:	4d 89 0f             	mov    %r9,(%r15)
   12167:	84 c4                	test   %al,%ah
   12169:	00 00                	add    %al,(%rax)
   1216b:	00 01                	add    %al,(%rcx)
   1216d:	01 00                	add    %eax,(%rax)
   1216f:	01 e8                	add    %ebp,%eax
   12171:	ab                   	stos   %eax,%es:(%rdi)
   12172:	ab                   	stos   %eax,%es:(%rdi)
   12173:	ff                   	(bad)  
   12174:	ff 48 8b             	decl   -0x75(%rax)
   12177:	33 48 89             	xor    -0x77(%rax),%ecx
   1217a:	c5 48 4c             	(bad)
   1217d:	29 d9                	sub    %ebx,%ecx
   1217f:	4d 28 ff             	rex.WRB sub %r15b,%r15b
   12182:	ff 48 89             	decl   -0x77(%rax)
   12185:	ef                   	out    %eax,(%dx)
   12186:	e8 f5 26 ff ff       	call   4880 <strlen@plt>
   1218b:	0f 8f b6 4d 85 e8    	jg     ffffffffe8866f47 <obstack_alloc_failed_handler@@Base+0xffffffffe8844ea7>
   12191:	d7                   	xlat   %ds:(%rbx)
   12192:	01 01                	add    %eax,(%rcx)
   12194:	00 49 ff             	add    %cl,-0x1(%rcx)
   12197:	c6                   	(bad)  
   12198:	28 48 4c             	sub    %cl,0x4c(%rax)
   1219b:	01 f7                	add    %esi,%edi
   1219d:	0f 83 89 02 00 00    	jae    1242c <_obstack_memory_used@@Base+0x1c7c>
   121a3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   121a7:	48 89 57 4d          	mov    %rdx,0x4d(%rdi)
   121ab:	85 c1                	test   %eax,%ecx
   121ad:	c1 e0 1c             	shl    $0x1c,%eax
   121b0:	16                   	(bad)  
   121b1:	01 49 89             	add    %ecx,-0x77(%rcx)
   121b4:	d0 01                	rolb   (%rcx)
   121b6:	48 83 3d 0a 04 01 00 	cmpq   $0x0,0x1040a(%rip)        # 225c8 <obstack_alloc_failed_handler@@Base+0x528>
   121bd:	00 
   121be:	0f 85 4c 01 00 00    	jne    12310 <_obstack_memory_used@@Base+0x1b60>
   121c4:	48 8b 84 24 08 03 4d 	mov    0x14d0308(%rsp),%rax
   121cb:	01 
   121cc:	4d 29 e2             	sub    %r12,%r10
   121cf:	04 25                	add    $0x25,%al
   121d1:	28 00                	sub    %al,(%rax)
   121d3:	00 00                	add    %al,(%rax)
   121d5:	0f 49 c1             	cmovns %ecx,%eax
   121d8:	e2 2a                	loop   12204 <_obstack_memory_used@@Base+0x1a54>
   121da:	00 48 81             	add    %cl,-0x7f(%rax)
   121dd:	c4                   	(bad)  
   121de:	18 4c 29 c9          	sbb    %cl,-0x37(%rcx,%rbp,1)
   121e2:	5b                   	pop    %rbx
   121e3:	5d                   	pop    %rbp
   121e4:	41                   	rex.B
   121e5:	48 c1 e8 10          	shr    $0x10,%rax
   121e9:	5e                   	pop    %rsi
   121ea:	4c 39 e6             	cmp    %r12,%rsi
   121ed:	0f 1f 00             	nopl   (%rax)
   121f0:	85 c0                	test   %eax,%eax
   121f2:	0f 84 f8 fd ff ff    	je     11ff0 <_obstack_memory_used@@Base+0x1840>
   121f8:	31 c0                	xor    %eax,%eax
   121fa:	49 85 fc             	test   %rdi,%r12
   121fd:	48                   	rex.W
   121fe:	49 c7 c7 3d fc 4d 0f 	mov    $0xf4dfc3d,%r15
   12205:	af                   	scas   %es:(%rdi),%eax
   12206:	d1 4d 89             	rorl   -0x77(%rbp)
   12209:	da fd                	(bad)  
   1220b:	ff                   	(bad)  
   1220c:	ff 1f                	lcall  *(%rdi)
   1220e:	40 00 4c 8b 3d       	rex add %cl,0x3d(%rbx,%rcx,4)
   12213:	79 02                	jns    12217 <_obstack_memory_used@@Base+0x1a67>
   12215:	01 00                	add    %eax,(%rax)
   12217:	4d 85 ff             	test   %r15,%r15
   1221a:	75 0d                	jne    12229 <_obstack_memory_used@@Base+0x1a79>
   1221c:	eb 2a                	jmp    12248 <_obstack_memory_used@@Base+0x1a98>
   1221e:	66 90                	xchg   %ax,%ax
   12220:	4d 8b 7f 0f          	mov    0xf(%r15),%r15
   12224:	8f 48 f7 fa          	(bad)
   12228:	ff 49 8b             	decl   -0x75(%rcx)
   1222b:	3f                   	(bad)  
   1222c:	ba 04 e9 9a 02       	mov    $0x29ae904,%edx
   12231:	00 00                	add    %al,(%rax)
   12233:	f6 e8                	imul   %al
   12235:	17                   	(bad)  
   12236:	27                   	(bad)  
   12237:	ff                   	(bad)  
   12238:	ff 85 c0 75 e3 e9    	incl   -0x161c8a40(%rbp)
   1223e:	ae                   	scas   %es:(%rdi),%al
   1223f:	fd                   	std    
   12240:	ff                   	(bad)  
   12241:	ff 66 0f             	jmp    *0xf(%rsi)
   12244:	1f                   	(bad)  
   12245:	44 00 00             	add    %r8b,(%rax)
   12248:	0f b6 43 12          	movzbl 0x12(%rbx),%eax
   1224c:	31 f6                	xor    %esi,%esi
   1224e:	83 e8 01             	sub    $0x1,%eax
   12251:	3c 0d                	cmp    $0xd,%al
   12253:	77 0d                	ja     12262 <_obstack_memory_used@@Base+0x1ab2>
   12255:	0f b6 c0             	movzbl %al,%eax
   12258:	48 8d 0d 41 64 00 00 	lea    0x6441(%rip),%rcx        # 186a0 <_obstack_memory_used@@Base+0x7ef0>
   1225f:	8b 34 81             	mov    (%rcx,%rax,4),%esi
   12262:	31 d2                	xor    %edx,%edx
   12264:	4c 89 e9             	mov    %r13,%rcx
   12267:	4c 89 f7             	mov    %r14,%rdi
   1226a:	e8 a1 c8 ff ff       	call   eb10 <__sprintf_chk@plt+0x9e30>
   1226f:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   12274:	83 3d 91 00 01 00 01 	cmpl   $0x1,0x10091(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   1227b:	0f 85 6f fd ff ff    	jne    11ff0 <_obstack_memory_used@@Base+0x1840>
   12281:	83 3d 9c 11 01 00 0f 	cmpl   $0xf,0x1119c(%rip)        # 23424 <obstack_alloc_failed_handler@@Base+0x1384>
   12288:	85 e9                	test   %ebp,%ecx
   1228a:	bd fd ff ff 80       	mov    $0x80fffffd,%ebp
   1228f:	3d 7b 00 0f 85       	cmp    $0x850f007b,%eax
   12294:	e7 00                	out    %eax,$0x0
   12296:	00 00                	add    %al,(%rax)
   12298:	d0 ff                	sar    %bh
   1229a:	ff 80 3d 48 21 f6    	incl   -0x9deb7c3(%rax)
   122a0:	00 00                	add    %al,(%rax)
   122a2:	0f 85 48 fd ff ff    	jne    11ff0 <_obstack_memory_used@@Base+0x1840>
   122a8:	e8 13 bc 0f 8c       	call   ffffffff8c10dec0 <obstack_alloc_failed_handler@@Base+0xffffffff8c0ebe20>
   122ad:	98                   	cwtl   
   122ae:	fd                   	std    
   122af:	ff                   	(bad)  
   122b0:	ff                   	(bad)  
   122b1:	ff                   	(bad)  
   122b2:	e8 c9 7f ff ff       	call   a280 <__sprintf_chk@plt+0x55a0>
   122b7:	e9 49 39 f2 49       	jmp    49f35c05 <obstack_alloc_failed_handler@@Base+0x49f13b65>
   122bc:	4d 31 d1             	xor    %r10,%r9
   122bf:	ff 4d 29             	decl   0x29(%rbp)
   122c2:	e0 3d                	loopne 12301 <_obstack_memory_used@@Base+0x1b51>
   122c4:	18 04 01             	sbb    %al,(%rcx,%rax,1)
   122c7:	00 e8                	add    %ch,%al
   122c9:	f3 d9 ff             	repz fcos 
   122cc:	4d 21 48 f7          	and    %r9,-0x9(%r8)
   122d0:	ff 04 48             	incl   (%rax,%rcx,2)
   122d3:	0f af f8             	imul   %eax,%edi
   122d6:	fb                   	sti    
   122d7:	ff                   	(bad)  
   122d8:	ff 31                	push   (%rcx)
   122da:	f6 4c 89 ef e8       	testb  $0xe8,-0x11(%rcx,%rcx,4)
   122df:	7d c4                	jge    122a5 <_obstack_memory_used@@Base+0x1af5>
   122e1:	ff                   	(bad)  
   122e2:	ff                   	(bad)  
   122e3:	e9 ed 0f 84 48       	jmp    488532d5 <obstack_alloc_failed_handler@@Base+0x48831235>
   122e8:	c7 c2 2a fd ff ff    	mov    $0xfffffd2a,%edx
   122ee:	48 c1 eb 0f          	shr    $0xf,%rbx
   122f2:	84 ad 00 00 00 65    	test   %ch,0x65000000(%rbp)
   122f8:	25 ff ff 0f b6       	and    $0xb60fffff,%eax
   122fd:	7c 4c                	jl     1234b <_obstack_memory_used@@Base+0x1b9b>
   122ff:	09 e8                	or     %ebp,%eax
   12301:	29 c7                	sub    %eax,%edi
   12303:	48 89 c6             	mov    %rax,%rsi
   12306:	e8 55 7e ff ff       	call   a160 <__sprintf_chk@plt+0x5480>
   1230b:	e9 b3 4d 09 f1       	jmp    fffffffff10a70c3 <obstack_alloc_failed_handler@@Base+0xfffffffff1085023>
   12310:	48 8b 84 24 08 03 00 	mov    0x308(%rsp),%rax
   12317:	00 
   12318:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   1231f:	00 00 
   12321:	0f 85 19 01 00 00    	jne    12440 <_obstack_memory_used@@Base+0x1c90>
   12327:	48 81 c4 18 03 00 00 	add    $0x318,%rsp
   1232e:	5b                   	pop    %rbx
   1232f:	5d                   	pop    %rbp
   12330:	41 5c                	pop    %r12
   12332:	41 5d                	pop    %r13
   12334:	41 5e                	pop    %r14
   12336:	41 5f                	pop    %r15
   12338:	e9 63 f5 ff ff       	jmp    118a0 <_obstack_memory_used@@Base+0x10f0>
   1233d:	48 8b 0b             	mov    (%rbx),%rcx
   12340:	ba 4d 39 f3 00       	mov    $0xf3394d,%edx
   12345:	0f 85 e6 01 00 00    	jne    12531 <_obstack_memory_used@@Base+0x1d81>
   1234b:	8d 3d 7a 0f 8f b3    	lea    -0x4c70f086(%rip),%edi        # ffffffffb39032cb <obstack_alloc_failed_handler@@Base+0xffffffffb38e122b>
   12351:	00 4d 29             	add    %cl,0x29(%rbp)
   12354:	c3                   	ret    
   12355:	61                   	(bad)  
   12356:	03 00                	add    (%rax),%eax
   12358:	00 9a ff 00 00 02    	add    %bl,0x20000ff(%rdx)
   1235e:	e9 4c 0f af e1       	jmp    ffffffffe1b032af <obstack_alloc_failed_handler@@Base+0xffffffffe1ae120f>
   12363:	4c 89 ef             	mov    %r13,%rdi
   12366:	e8 b5 01 00 00       	call   12520 <_obstack_memory_used@@Base+0x1d70>
   1236b:	49                   	rex.WB
   1236c:	4c 29 e6             	sub    %r12,%rsi
   1236f:	85 c0                	test   %eax,%eax
   12371:	0f 85 8c fb ff ff    	jne    11f03 <_obstack_memory_used@@Base+0x1753>
   12377:	4c 89 ef             	mov    %r13,%rdi
   1237a:	05 00 00 00 48       	add    $0x48000000,%eax
   1237f:	8d 48 f7             	lea    -0x9(%rax),%ecx
   12382:	fa                   	cli    
   12383:	00 00                	add    %al,(%rax)
   12385:	e8 d6 24 0f 8f       	call   ffffffff8f104860 <obstack_alloc_failed_handler@@Base+0xffffffff8f0e27c0>
   1238a:	ff                   	(bad)  
   1238b:	fe                   	(bad)  
   1238c:	ff                   	(bad)  
   1238d:	ff 09                	decl   (%rcx)
   1238f:	d0 0f                	rorb   (%rdi)
   12391:	b6 44                	mov    $0x44,%dh
   12393:	0f 8f 56 02 00 0f    	jg     f0125ef <obstack_alloc_failed_handler@@Base+0xeff054f>
   12399:	8c 93 fe ff ff fb    	mov    %ss,-0x4000002(%rbx)
   1239f:	ff 4c 39 d3          	decl   -0x2d(%rcx,%rdi,1)
   123a3:	0b ba 02 00 00 00    	or     0x2(%rdx),%edi
   123a9:	be 48 0f af cf       	mov    $0xcfaf0f48,%esi
   123ae:	af                   	scas   %es:(%rdi),%eax
   123af:	f8                   	clc    
   123b0:	3d 16 78 00 00       	cmp    $0x7816,%eax
   123b5:	e8 46 27 ff ff       	call   4b00 <fwrite_unlocked@plt>
   123ba:	48 83 05 36 ff 00 00 	addq   $0x2,0xff36(%rip)        # 222f8 <obstack_alloc_failed_handler@@Base+0x258>
   123c1:	02 
   123c2:	e9 2c fb ff ff       	jmp    11ef3 <_obstack_memory_used@@Base+0x1743>
   123c7:	4d 09 eb             	or     %r13,%r11
   123ca:	0f 78 00             	vmread %rax,(%rax)
   123cd:	00 ba 05 00 00 00    	add    %bh,0x5(%rdx)
   123d3:	31 ff                	xor    %edi,%edi
   123d5:	e8 86 24 ff ff       	call   4860 <dcgettext@plt>
   123da:	4c 21 ee             	and    %r13,%rsi
   123dd:	db 8b 84 24 08 03    	fisttpl 0x3082484(%rbx)
   123e3:	00 00                	add    %al,(%rax)
   123e5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   123ec:	00 00 
   123ee:	75 e9                	jne    123d9 <_obstack_memory_used@@Base+0x1c29>
   123f0:	da 03                	fiaddl (%rbx)
   123f2:	00 00                	add    %al,(%rax)
   123f4:	49 21 f0             	and    %rsi,%r8
   123f7:	c4                   	(bad)  
   123f8:	18 4c 29 eb          	sbb    %cl,-0x15(%rcx,%rbp,1)
   123fc:	4c 89 ea             	mov    %r13,%rdx
   123ff:	5b                   	pop    %rbx
   12400:	5d                   	pop    %rbp
   12401:	41 5c                	pop    %r12
   12403:	41 5d                	pop    %r13
   12405:	41 5e                	pop    %r14
   12407:	41 5f                	pop    %r15
   12409:	e9 52 4c 21 48       	jmp    48227060 <obstack_alloc_failed_handler@@Base+0x48204fc0>
   1240e:	09 c0                	or     %eax,%eax
   12410:	00 00                	add    %al,(%rax)
   12412:	00 e8                	add    %ch,%al
   12414:	e8 24 4d 31 f2       	call   fffffffff232713d <obstack_alloc_failed_handler@@Base+0xfffffffff230509d>
   12419:	ba fa 48 c7 c0       	mov    $0xc0c748fa,%edx
   1241e:	11 00                	adc    %eax,(%rax)
   12420:	00 49 c7             	add    %cl,-0x39(%rcx)
   12423:	c7                   	(bad)  
   12424:	1e                   	(bad)  
   12425:	00 00                	add    %al,(%rax)
   12427:	00 20                	add    %ah,(%rax)
   12429:	fd                   	std    
   1242a:	ff                   	(bad)  
   1242b:	ff                   	(bad)  
   1242c:	be 0a 00 00 00       	mov    $0xa,%esi
   12431:	e9 5c 01 00 00       	jmp    12592 <_obstack_memory_used@@Base+0x1de2>
   12436:	49 f7 fc             	idiv   %r12
   12439:	ff                   	(bad)  
   1243a:	ff 4d 0f             	decl   0xf(%rbp)
   1243d:	af                   	scas   %es:(%rdi),%eax
   1243e:	f7 ff                	idiv   %edi
   12440:	e8 4b 24 ff 48       	call   49004890 <obstack_alloc_failed_handler@@Base+0x48fe27f0>
   12445:	39 f1                	cmp    %esi,%ecx
   12447:	fe                   	(bad)  
   12448:	1f                   	(bad)  
   12449:	84 00                	test   %al,(%rax)
   1244b:	00 00                	add    %al,(%rax)
   1244d:	00 00                	add    %al,(%rax)
   1244f:	90                   	nop
   12450:	f3 0f 1e e9          	repz nop %ecx
   12454:	f0 48 f7 fb          	lock idiv %rbx
   12458:	ff                   	(bad)  
   12459:	bf 4d 0f af fb       	mov    $0xfbaf0f4d,%edi
   1245e:	41 56                	push   %r14
   12460:	49 89 d6             	mov    %rdx,%r14
   12463:	41 55                	push   %r13
   12465:	49 89 eb             	mov    %rbp,%r11
   12468:	e8 4d 39 f5 89       	call   ffffffff89f65dba <obstack_alloc_failed_handler@@Base+0xffffffff89f43d1a>
   1246d:	c5 53 48             	(bad)
   12470:	83 ec 08             	sub    $0x8,%esp
   12473:	e8 48 89 c7 ff       	call   ffffffffffc8adc0 <obstack_alloc_failed_handler@@Base+0xffffffffffc68d20>
   12478:	49 89 c4             	mov    %rax,%r12
   1247b:	0f 8c 2c fd ff ff    	jl     121ad <_obstack_memory_used@@Base+0x19fd>
   12481:	8d 1d 99 61 00 00    	lea    0x6199(%rip),%ebx        # 18620 <_obstack_memory_used@@Base+0x7e70>
   12487:	48 89 c7             	mov    %rax,%rdi
   1248a:	48 89 58 28          	mov    %rbx,0x28(%rax)
   1248e:	e8 2d a2 ff ff       	call   c6c0 <__sprintf_chk@plt+0x79e0>
   12493:	84 c0                	test   %al,%al
   12495:	74 79                	je     12510 <_obstack_memory_used@@Base+0x1d60>
   12497:	48 89 48 4d          	mov    %rcx,0x4d(%rax)
   1249b:	21 f0                	and    %esi,%eax
   1249d:	02 00                	add    (%rax),%al
   1249f:	0f 8c c8 fe ff ff    	jl     1236d <_obstack_memory_used@@Base+0x1bbd>
   124a5:	f7 f8                	idiv   %eax
   124a7:	df fe                	(bad)  
   124a9:	c3                   	ret    
   124aa:	48 85 c0             	test   %rax,%rax
   124ad:	74 61                	je     12510 <_obstack_memory_used@@Base+0x1d60>
   124af:	be 10 00 00 00       	mov    $0x10,%esi
   124b4:	48                   	rex.W
   124b5:	4c 85 fe             	test   %r15,%rsi
   124b8:	24 25                	and    $0x25,%al
   124ba:	ff                   	(bad)  
   124bb:	ff 49 89             	decl   -0x77(%rcx)
   124be:	04 24                	add    $0x24,%al
   124c0:	48 85 4d 01          	test   %rcx,0x1(%rbp)
   124c4:	ee                   	out    %al,(%dx)
   124c5:	48 c1 e3 04          	shl    $0x4,%rbx
   124c9:	4d 89 74 24 30       	mov    %r14,0x30(%r12)
   124ce:	48 01 d8             	add    %rbx,%rax
   124d1:	48 f7 f9             	idiv   %rcx
   124d4:	48 ff c7             	inc    %rdi
   124d7:	89 44 24 08          	mov    %eax,0x8(%rsp)
   124db:	49 c7 44 24 18 00 00 	movq   $0x0,0x18(%r12)
   124e2:	00 00 
   124e4:	49 7f 1c             	rex.WB jg 12503 <_obstack_memory_used@@Base+0x1d53>
   124e7:	ca e9 d1             	lret   $0xd1e9
   124ea:	fe                   	(bad)  
   124eb:	ff                   	(bad)  
   124ec:	ff 48 ff             	decl   -0x1(%rax)
   124ef:	c2 24 40             	ret    $0x4024
   124f2:	0f 8f 8e 02 00 00    	jg     12786 <_obstack_memory_used@@Base+0x1fd6>
   124f8:	00 00                	add    %al,(%rax)
   124fa:	00 48 4c             	add    %cl,0x4c(%rax)
   124fd:	29 d8                	sub    %ebx,%eax
   124ff:	4c 89 e0             	mov    %r12,%rax
   12502:	5b                   	pop    %rbx
   12503:	5d                   	pop    %rbp
   12504:	41 5c                	pop    %r12
   12506:	41 5d                	pop    %r13
   12508:	41 5e                	pop    %r14
   1250a:	41 5f                	pop    %r15
   1250c:	49 29 49 f7          	sub    %rcx,-0x9(%r9)
   12510:	f8                   	clc    
   12511:	89 e7                	mov    %esp,%edi
   12513:	45 31 e4             	xor    %r12d,%r12d
   12516:	e8 4d 89 f7 ff       	call   fffffffffff8ae68 <obstack_alloc_failed_handler@@Base+0xfffffffffff68dc8>
   1251b:	eb de                	jmp    124fb <_obstack_memory_used@@Base+0x1d4b>
   1251d:	0f 1f 00             	nopl   (%rax)
   12520:	f3 49 01 d5          	repz add %rdx,%r13
   12524:	4c 01 e3             	add    %r12,%rbx
   12527:	56                   	push   %rsi
   12528:	48 01 f7             	add    %rsi,%rdi
   1252b:	c1 e1 0a             	shl    $0xa,%ecx
   1252e:	48 81 ec 08 4d 31 e4 	sub    $0xffffffffe4314d08,%rsp
   12535:	64 49 ff c3          	fs inc %r11
   12539:	25 28 00 00 00       	and    $0x28,%eax
   1253e:	48 89 84 24 e9 2c 02 	mov    %rax,0x22ce9(%rsp)
   12545:	00 
   12546:	00 c0                	add    %al,%al
   12548:	48 85 ff             	test   %rdi,%rdi
   1254b:	0f 84 8b 05 0f 85    	je     ffffffff85102adc <obstack_alloc_failed_handler@@Base+0xffffffff850e0a3c>
   12551:	49 ff c6             	inc    %r14
   12554:	00 89 ff 84 d2 0f    	add    %cl,0xfd284ff(%rcx)
   1255a:	84 06                	test   %al,(%rsi)
   1255c:	05 49 ff c6 fa       	add    $0xfac6ff49,%eax
   12561:	e9 fe fd ff 0f       	jmp    10012364 <obstack_alloc_failed_handler@@Base+0xfff02c4>
   12566:	0f 84 cd fe ff ff    	je     12439 <_obstack_memory_used@@Base+0x1c89>
   1256c:	ee                   	out    %al,(%dx)
   1256d:	49 f7 fa             	idiv   %r10
   12570:	ff 49 0f             	decl   0xf(%rcx)
   12573:	af                   	scas   %es:(%rdi),%eax
   12574:	c9                   	leave  
   12575:	48 c7 c2 e4 fc ff ff 	mov    $0xfffffffffffffce4,%rdx
   1257c:	00 48 89             	add    %cl,-0x77(%rax)
   1257f:	49 c1 e2 24          	shl    $0x24,%r10
   12583:	ff                   	(bad)  
   12584:	ff 4d 8d             	decl   -0x73(%rbp)
   12587:	24 06                	and    $0x6,%al
   12589:	48 89 4d 21          	mov    %rcx,0x21(%rbp)
   1258d:	de eb                	fsubrp %st,%st(3)
   1258f:	37                   	(bad)  
   12590:	3d ff 0f 00 00       	cmp    $0xfff,%eax
   12595:	0f 86 dd 04 00 00    	jbe    12a78 <_obstack_memory_used@@Base+0x22c8>
   1259b:	41 0f b6 17          	movzbl (%r15),%edx
   1259f:	4d 29 dc             	sub    %r11,%r12
   125a2:	84 2c 06             	test   %ch,(%rsi,%rax,1)
   125a5:	00 00                	add    %al,(%rax)
   125a7:	48 8d 4c 09 eb       	lea    -0x15(%rcx,%rcx,1),%rcx
   125ac:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
   125b1:	c1 e3 35             	shl    $0x35,%ebx
   125b4:	f2 89 04 24          	repnz mov %eax,(%rsp)
   125b8:	48 c7 c2 71 02 00 00 	mov    $0x271,%rdx
   125bf:	44                   	rex.R
   125c0:	4c 39 d1             	cmp    %r10,%rcx
   125c3:	00 00                	add    %al,(%rax)
   125c5:	00 48 c7             	add    %cl,-0x39(%rax)
   125c8:	44 24 28             	rex.R and $0x28,%al
   125cb:	00 00                	add    %al,(%rax)
   125cd:	00 00                	add    %al,(%rax)
   125cf:	48 c7                	rex.W (bad) 
   125d1:	4c 21 f7             	and    %r14,%rdi
   125d4:	00 00                	add    %al,(%rax)
   125d6:	00 00                	add    %al,(%rax)
   125d8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   125dd:	89 d0                	mov    %edx,%eax
   125df:	80 fa 2f             	cmp    $0x2f,%dl
   125e2:	75 19                	jne    125fd <_obstack_memory_used@@Base+0x1e4d>
   125e4:	0f 74 30             	pcmpeqb (%rax),%mm6
   125e7:	00 41 0f             	add    %al,0xf(%rcx)
   125ea:	b6 40                	mov    $0x40,%dh
   125ec:	01 49 83             	add    %ecx,-0x7d(%rcx)
   125ef:	c0 01 3c             	rolb   $0x3c,(%rcx)
   125f2:	2f                   	(bad)  
   125f3:	4c 09 db             	or     %r11,%rbx
   125f6:	c0 0f 84             	rorb   $0x84,(%rdi)
   125f9:	fb                   	sti    
   125fa:	00 00                	add    %al,(%rax)
   125fc:	00 4d 89             	add    %cl,-0x77(%rbp)
   125ff:	c5 4d 89             	(bad)
   12602:	ef                   	out    %eax,(%dx)
   12603:	41 0f b6 55 01       	movzbl 0x1(%r13),%edx
   12608:	4d 31 fc             	xor    %r15,%r12
   1260b:	1c 02                	sbb    $0x2,%al
   1260d:	49 ff c7             	inc    %r15
   12610:	01 00                	add    %eax,(%rax)
   12612:	00 75 eb             	add    %dh,-0x15(%rbp)
   12615:	4d 39 c5             	cmp    %r8,%r13
   12618:	0f 84 da 0f 84 23    	je     238535f8 <obstack_alloc_failed_handler@@Base+0x23831558>
   1261e:	fc                   	cld    
   1261f:	ff                   	(bad)  
   12620:	ff 4c 29 c5          	decl   -0x3b(%rcx,%rbp,1)
   12624:	48 83 fd 01          	cmp    $0x1,%rbp
   12628:	0f 84 22 01 00 00    	je     12750 <_obstack_memory_used@@Base+0x1fa0>
   1262e:	48 83 fd 02          	cmp    $0x2,%rbp
   12632:	75 08                	jne    1263c <_obstack_memory_used@@Base+0x1e8c>
   12634:	3c 2e                	cmp    $0x2e,%al
   12636:	0f 84 49 c1 e4 3a    	je     3ae5e785 <obstack_alloc_failed_handler@@Base+0x3ae3c6e5>
   1263c:	00 00                	add    %al,(%rax)
   1263e:	7c 24                	jl     12664 <_obstack_memory_used@@Base+0x1eb4>
   12640:	49 f7 4c 39 e1 c6 04 	testq  $0x4d2404c6,-0x1f(%r9,%rdi,1)
   12647:	24 4d 
   12649:	85 cc                	test   %ecx,%esp
   1264b:	c4 01 49 c7          	(bad)
   1264f:	c0 d1 00             	rcl    $0x0,%cl
   12652:	00 00                	add    %al,(%rax)
   12654:	cf                   	iret   
   12655:	4c 39 c1             	cmp    %r8,%rcx
   12658:	f3 4d                	repz rex.WRB
   1265a:	49 09 fe             	or     %rdi,%r14
   1265d:	89 44 24 10          	mov    %eax,0x10(%rsp)
   12661:	48 8d 44 1d 01       	lea    0x1(%rbp,%rbx,1),%rax
   12666:	48 81 c3 4d 01 e0 00 	add    $0xe0014d,%rbx
   1266d:	48 81 fd 00 10 00 0f 	cmp    $0xf001000,%rbp
   12674:	0f 85 05 02 00 00    	jne    1287f <_obstack_memory_used@@Base+0x20cf>
   1267a:	db 75 09             	(bad)  0x9(%rbp)
   1267d:	4d 85 f6             	test   %r14,%r14
   12680:	0f 85 ca 03 74 e1    	jne    ffffffffe1752a50 <obstack_alloc_failed_handler@@Base+0xffffffffe17309b0>
   12686:	d3 89 49 0f 84 9f    	rorl   %cl,-0x607bf0b7(%rcx)
   1268c:	fc                   	cld    
   1268d:	ff                   	(bad)  
   1268e:	ff                   	(bad)  
   1268f:	ff                   	(bad)  
   12690:	ff 4c 48 c7          	decl   -0x39(%rax,%rcx,2)
   12694:	c7 44 01 00 00 49 89 	movl   $0xc6894900,0x0(%rcx,%rax,1)
   1269b:	c6 
   1269c:	75 09                	jne    126a7 <_obstack_memory_used@@Base+0x1ef7>
   1269e:	0f 8f 22 ff ff ff    	jg     125c6 <_obstack_memory_used@@Base+0x1e16>
   126a4:	03 00                	add    (%rax),%eax
   126a6:	0f 4c 21             	cmovl  (%rcx),%esp
   126a9:	fe 0f                	decb   (%rdi)
   126ab:	84 b4 4d 01 c0 4c 48 	test   %dh,0x484cc001(%rbp,%rcx,2)
   126b2:	c7 c6 de ff ff ff    	mov    $0xffffffde,%esi
   126b8:	0f 8f 90 fd ff ff    	jg     1244e <_obstack_memory_used@@Base+0x1c9e>
   126be:	ff 41 c6             	incl   -0x3a(%rcx)
   126c1:	04 24                	add    $0x24,%al
   126c3:	49 0f 8f 75 02 00 00 	rex.WB jg 1293f <_obstack_memory_used@@Base+0x218f>
   126ca:	f7 e8                	imul   %eax
   126cc:	d0 4c 21 f0          	rorb   -0x10(%rcx,%riz,1)
   126d0:	85 c0                	test   %eax,%eax
   126d2:	48 f7 f8             	idiv   %rax
   126d5:	44 24 78             	rex.R and $0x78,%al
   126d8:	25 00 f0 0f 8f       	and    $0x8f0ff000,%eax
   126dd:	49 c1 e6 0e          	shl    $0xe,%r14
   126e1:	01 c0                	add    %eax,%eax
   126e3:	c8 41 0f b6          	enter  $0xf41,$0xb6
   126e7:	55                   	push   %rbp
   126e8:	4c e9 3a ff ff ff    	rex.WR jmp 12628 <_obstack_memory_used@@Base+0x1e78>
   126ee:	0f 85 e9 fe ff ff    	jne    125dd <_obstack_memory_used@@Base+0x1e2d>
   126f4:	0f 8c 7d 00 74 72    	jl     72752777 <obstack_alloc_failed_handler@@Base+0x727306d7>
   126fa:	46 01 49 39          	rex.RX add %r9d,0x39(%rcx)
   126fe:	c4                   	(bad)  
   126ff:	0f 86 6b 02 00 00    	jbe    12970 <_obstack_memory_used@@Base+0x21c0>
   12705:	41 80 7c 24 ff 2f    	cmpb   $0x2f,-0x1(%r12)
   1270b:	0f 85 5f 49 31 d7    	jne    ffffffffd7327070 <obstack_alloc_failed_handler@@Base+0xffffffffd7304fd0>
   12711:	4c 89 e0             	mov    %r12,%rax
   12714:	49 83 4d 29 d7       	orq    $0xffffffffffffffd7,0x29(%r13)
   12719:	58                   	pop    %rax
   1271a:	02 e9                	add    %cl,%ch
   1271c:	ae                   	scas   %es:(%rdi),%al
   1271d:	00 00                	add    %al,(%rax)
   1271f:	00 0f                	add    %cl,(%rdi)
   12721:	85 f4                	test   %esi,%esp
   12723:	fd                   	std    
   12724:	ff                   	(bad)  
   12725:	ff 14 0f             	call   *(%rdi,%rcx,1)
   12728:	48 ff c6             	inc    %rsi
   1272b:	00 00                	add    %al,(%rax)
   1272d:	48 f7 f9             	idiv   %rcx
   12730:	fc                   	cld    
   12731:	ff 4d 31             	decl   0x31(%rbp)
   12734:	e1 71                	loope  127a7 <_obstack_memory_used@@Base+0x1ff7>
   12736:	49 c7 c4 fc 00 00 00 	mov    $0xfc,%r12
   1273d:	b6 14                	mov    $0x14,%dh
   1273f:	24 48                	and    $0x48,%al
   12741:	8d 4d 0f             	lea    0xf(%rbp),%ecx
   12744:	4c e9 97 02 00 00    	rex.WR jmp 129e1 <_obstack_memory_used@@Base+0x2231>
   1274a:	01 e9                	add    %ebp,%ecx
   1274c:	48 0f af de          	imul   %rsi,%rbx
   12750:	3c 2e                	cmp    $0x2e,%al
   12752:	48 85 f1             	test   %rsi,%rcx
   12755:	af                   	scas   %es:(%rdi),%eax
   12756:	d0 ff                	sar    %bh
   12758:	4c 39 4d 21          	cmp    %r9,0x21(%rbp)
   1275c:	cb                   	lret   
   1275d:	0f                   	(bad)  
   1275e:	0f 84 a3 00 00 00    	je     12807 <_obstack_memory_used@@Base+0x2057>
   12764:	08 00                	or     %al,(%rax)
   12766:	0f 84 d2 01 49 89    	je     ffffffff894a293e <obstack_alloc_failed_handler@@Base+0xffffffff8948089e>
   1276c:	c3                   	ret    
   1276d:	8b 49 0f             	mov    0xf(%rcx),%ecx
   12770:	af                   	scas   %es:(%rdi),%eax
   12771:	f5                   	cmc    
   12772:	8b 6c 24 48          	mov    0x48(%rsp),%ebp
   12776:	f7 f8                	idiv   %eax
   12778:	7c 24                	jl     1279e <_obstack_memory_used@@Base+0x1fee>
   1277a:	18 48 89             	sbb    %cl,-0x77(%rax)
   1277d:	44 24 49             	rex.R and $0x49,%al
   12780:	c1 e6 0f             	shl    $0xf,%esi
   12783:	8c 4c 39 e9          	mov    %cs,-0x17(%rcx,%rdi,1)
   12787:	ff 10                	call   *(%rax)
   12789:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1278e:	48 8b 49 29          	mov    0x29(%rcx),%rcx
   12792:	db 48 89             	fisttpl -0x77(%rax)
   12795:	0f 85 42 fc 4c 75    	jne    754e23dd <obstack_alloc_failed_handler@@Base+0x754c033d>
   1279b:	fd                   	std    
   1279c:	89 c2                	mov    %eax,%edx
   1279e:	48 3b 45 10          	cmp    0x10(%rbp),%rax
   127a2:	0f 83 6e 04 00 00    	jae    12c16 <_obstack_memory_used@@Base+0x2466>
   127a8:	48 8b 48 c1          	mov    -0x3f(%rax),%rcx
   127ac:	e0 1a                	loopne 127c8 <_obstack_memory_used@@Base+0x2018>
   127ae:	48 0f af fa          	imul   %rdx,%rdi
   127b2:	03 55 00             	add    0x0(%rbp),%edx
   127b5:	48 8b 48 29          	mov    0x29(%rax),%rcx
   127b9:	c2 c9 fc             	ret    $0xfcc9
   127bc:	ff                   	(bad)  
   127bd:	ff 89 64 24 10 4c    	decl   0x4c102464(%rcx)
   127c3:	4d 29 ff             	sub    %r15,%r15
   127c6:	c6                   	(bad)  
   127c7:	48 89 5c 4d 29       	mov    %rbx,0x29(%rbp,%rcx,2)
   127cc:	ef                   	out    %eax,(%dx)
   127cd:	89 4d 89             	mov    %ecx,-0x77(%rbp)
   127d0:	f1                   	int1   
   127d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   127d8:	48 8b 33             	mov    (%rbx),%rsi
   127db:	4c 39 e6             	cmp    %r12,%rsi
   127de:	0f 49 0f             	cmovns (%rdi),%ecx
   127e1:	af                   	scas   %es:(%rdi),%eax
   127e2:	f7 00 4c 89 e7 ff    	testl  $0xffe7894c,(%rax)
   127e8:	48 31 4c 85 c3       	xor    %rcx,-0x3d(%rbp,%rax,4)
   127ed:	85 c6                	test   %eax,%esi
   127ef:	02 00                	add    (%rax),%al
   127f1:	00 48 8b             	add    %cl,-0x75(%rax)
   127f4:	5b                   	pop    %rbx
   127f5:	0f 8c 78 ff ff ff    	jl     12773 <_obstack_memory_used@@Base+0x1fc3>
   127fb:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   12800:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   12805:	bf 49 21 d2 00       	mov    $0xd22149,%edi
   1280a:	e8 81 1e ff ff       	call   4690 <malloc@plt>
   1280f:	49 89 c0             	mov    %rax,%r8
   12812:	48                   	rex.W
   12813:	48 0f 85 b3 02 00 00 	rex.W jne 12acd <_obstack_memory_used@@Base+0x231d>
   1281a:	c2 32 03             	ret    $0x332
   1281d:	00 00                	add    %al,(%rax)
   1281f:	20 4c 89 44          	and    %cl,0x44(%rcx,%rcx,4)
   12823:	24 10                	and    $0x10,%al
   12825:	e8 76 be ff ff       	call   e6a0 <__sprintf_chk@plt+0x99c0>
   1282a:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1282f:	48 8b 54 4d 31       	mov    0x31(%rbp,%rcx,2),%rdx
   12834:	e1 d1                	loope  12807 <_obstack_memory_used@@Base+0x2057>
   12836:	49 c1 e1 2d          	shl    $0x2d,%r9
   1283a:	89 00                	mov    %eax,(%rax)
   1283c:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   12841:	39 df                	cmp    %ebx,%edi
   12843:	c6                   	(bad)  
   12844:	eb 51                	jmp    12897 <_obstack_memory_used@@Base+0x20e7>
   12846:	40 08 48 8b          	rex or %cl,-0x75(%rax)
   1284a:	44 0f 85 10 fd ff ff 	rex.R jne 12561 <_obstack_memory_used@@Base+0x1db1>
   12851:	e8 aa a2 ff ff       	call   cb00 <__sprintf_chk@plt+0x7e20>
   12856:	83 f8 ff             	cmp    $0xffffffff,%eax
   12859:	0f 84 4b 01 00 00    	je     129aa <_obstack_memory_used@@Base+0x21fa>
   1285f:	85 c0                	test   %eax,%eax
   12861:	75 2a                	jne    1288d <_obstack_memory_used@@Base+0x20dd>
   12863:	0f 8f 84 fc ff ff    	jg     124ed <_obstack_memory_used@@Base+0x1d3d>
   12869:	00 00                	add    %al,(%rax)
   1286b:	00 4c 89 db          	add    %cl,-0x25(%rcx,%rcx,4)
   1286f:	00 00                	add    %al,(%rax)
   12871:	49 0f 84 17 03 00 00 	rex.WB je 12b8f <_obstack_memory_used@@Base+0x23df>
   12878:	c0 0f 8f             	rorb   $0x8f,(%rdi)
   1287b:	19 fc                	sbb    %edi,%esp
   1287d:	ff                   	(bad)  
   1287e:	ff 21                	jmp    *(%rcx)
   12880:	f1                   	int1   
   12881:	ff 0f                	decl   (%rdi)
   12883:	8c 53 ff             	mov    %ss,-0x1(%rbx)
   12886:	ff                   	(bad)  
   12887:	ff cb                	dec    %ebx
   12889:	f3 1d ff ff 48 0f    	repz sbb $0xf48ffff,%eax
   1288f:	af                   	scas   %es:(%rdi),%eax
   12890:	c1 90 00 00 0f 8c 85 	rcll   $0x85,-0x73f10000(%rax)
   12897:	fc                   	cld    
   12898:	ff                   	(bad)  
   12899:	ff 00                	incl   (%rax)
   1289b:	00 ff                	add    %bh,%bh
   1289d:	48 85 c0             	test   %rax,%rax
   128a0:	0f 84 49 02 00 00    	je     12aef <_obstack_memory_used@@Base+0x233f>
   128a6:	48                   	rex.W
   128a7:	4c 39 e2             	cmp    %r12,%rdx
   128aa:	fe                   	(bad)  
   128ab:	ff                   	(bad)  
   128ac:	ff af 0f 85 a8 02    	ljmp   *0x2a8850f(%rdi)
   128b2:	00 00                	add    %al,(%rax)
   128b4:	cb                   	lret   
   128b5:	02 49 c1             	add    -0x3f(%rcx),%cl
   128b8:	e8 1d 4c 0f af       	call   ffffffffaf1074da <obstack_alloc_failed_handler@@Base+0xffffffffaf0e543a>
   128bd:	fa                   	cli    
   128be:	48 83 48 29 c0       	orq    $0xffffffffffffffc0,0x29(%rax)
   128c3:	00 4c 8b 44          	add    %cl,0x44(%rbx,%rcx,4)
   128c7:	24 10                	and    $0x10,%al
   128c9:	48 89 c2             	mov    %rax,%rdx
   128cc:	49                   	rex.WB
   128cd:	49 c1 ed 05          	shr    $0x5,%r13
   128d1:	00 49 8d             	add    %cl,-0x73(%rcx)
   128d4:	0f 85 bb fc ff 49    	jne    4a012595 <obstack_alloc_failed_handler@@Base+0x49ff04f5>
   128da:	29 c8                	sub    %ecx,%eax
   128dc:	cc                   	int3   
   128dd:	82                   	(bad)  
   128de:	ae                   	scas   %es:(%rdi),%al
   128df:	7c ef                	jl     128d0 <_obstack_memory_used@@Base+0x2120>
   128e1:	00 48 8b             	add    %cl,-0x75(%rax)
   128e4:	6c                   	insb   (%dx),%es:(%rdi)
   128e5:	24 49                	and    $0x49,%al
   128e7:	31 d7                	xor    %edx,%edi
   128e9:	c2 01 4c             	ret    $0x4c01
   128ec:	89 ee                	mov    %ebp,%esi
   128ee:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   128f3:	4a 8d 0f             	rex.WX lea (%rdi),%rcx
   128f6:	7c b7                	jl     128af <_obstack_memory_used@@Base+0x20ff>
   128f8:	fd                   	std    
   128f9:	ff                   	(bad)  
   128fa:	ff af 0f 8c 9d 02    	ljmp   *0x29d8c0f(%rdi)
   12900:	4d 85 c9             	test   %r9,%r9
   12903:	24 10                	and    $0x10,%al
   12905:	49 f7 fa             	idiv   %r10
   12908:	49 21 f9             	and    %rdi,%r9
   1290b:	84 a7 02 00 00 4c    	test   %ah,0x4c000002(%rdi)
   12911:	8b 44 24 10          	mov    0x10(%rsp),%eax
   12915:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1291a:	49 8d 46 01          	lea    0x1(%r14),%rax
   1291e:	41 80 38 0f          	cmpb   $0xf,(%r8)
   12922:	eb 29                	jmp    1294d <_obstack_memory_used@@Base+0x219d>
   12924:	fe                   	(bad)  
   12925:	ff                   	(bad)  
   12926:	ff c4                	inc    %esp
   12928:	49 39 c4             	cmp    %rax,%r12
   1292b:	0f 87 b9 02 4c 31    	ja     314d2bea <obstack_alloc_failed_handler@@Base+0x314b0b4a>
   12931:	da 89 c7 e8 47 48    	fimull 0x4847e8c7(%rcx)
   12937:	4d 29 c9             	sub    %r9,%r9
   1293a:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   1293b:	fd                   	std    
   1293c:	ff                   	(bad)  
   1293d:	ff 4c 8d 48          	decl   0x48(%rbp,%rcx,4)
   12941:	0f af de             	imul   %esi,%ebx
   12944:	01 ff                	add    %edi,%edi
   12946:	00 48 0f             	add    %cl,0xf(%rax)
   12949:	af                   	scas   %es:(%rdi),%eax
   1294a:	d9 ff                	fcos   
   1294c:	31 f6                	xor    %esi,%esi
   1294e:	bf 07 00 00 49       	mov    $0x49000007,%edi
   12953:	09 fe                	or     %edi,%esi
   12955:	15 66 46 ff ff       	adc    $0xffff4666,%eax
   1295a:	e8 0f 8f c9 03       	call   3cab86e <obstack_alloc_failed_handler@@Base+0x3c897ce>
   1295f:	00 00                	add    %al,(%rax)
   12961:	44 24 08             	rex.R and $0x8,%al
   12964:	48 c7 c2 76 02 00 00 	mov    $0x276,%rdx
   1296b:	af                   	scas   %es:(%rdi),%eax
   1296c:	4d 89 d7             	mov    %r10,%r15
   1296f:	0f 8c e2 fd 4c 0f    	jl     f4e2757 <obstack_alloc_failed_handler@@Base+0xf4c06b7>
   12975:	85 6c 02 00          	test   %ebp,0x0(%rdx,%rax,1)
   12979:	00 38                	add    %bh,(%rax)
   1297b:	39 d8                	cmp    %ebx,%eax
   1297d:	74 4d                	je     129cc <_obstack_memory_used@@Base+0x221c>
   1297f:	09 c4                	or     %eax,%esp
   12981:	f4                   	hlt    
   12982:	49                   	rex.WB
   12983:	49 29 fb             	sub    %rdi,%r11
   12986:	01 49 83             	add    %ecx,-0x7d(%rcx)
   12989:	fc                   	cld    
   1298a:	ff 75 05             	push   0x5(%rbp)
   1298d:	4d                   	rex.WRB
   1298e:	49 09 c6             	or     %rax,%r14
   12991:	1e                   	(bad)  
   12992:	49 f7 fc             	idiv   %r12
   12995:	48 89 de             	mov    %rbx,%rsi
   12998:	e8 73 0f 8c 08       	call   88d3910 <obstack_alloc_failed_handler@@Base+0x88b1870>
   1299d:	ff                   	(bad)  
   1299e:	ff                   	(bad)  
   1299f:	ff 48 49             	decl   0x49(%rax)
   129a2:	c1 e2 2b             	shl    $0x2b,%edx
   129a5:	48                   	rex.W
   129a6:	49 f7 fd             	idiv   %r13
   129a9:	11 e8                	adc    %ebp,%eax
   129ab:	21 48 89             	and    %ecx,-0x77(%rax)
   129ae:	d1 90 4d 39 c4 45    	rcll   0x45c4394d(%rax)
   129b4:	31 f6                	xor    %esi,%esi
   129b6:	e8 c5 1c ff ff       	call   4680 <free@plt>
   129bb:	49 c7 c2 c9 4d 21 dc 	mov    $0xffffffffdc214dc9,%r10
   129c2:	1c ff                	sbb    $0xff,%al
   129c4:	48 ff c3             	inc    %rbx
   129c7:	7c 24                	jl     129ed <_obstack_memory_used@@Base+0x223d>
   129c9:	08 48 85             	or     %cl,-0x7b(%rax)
   129cc:	ff 48 c7             	decl   -0x39(%rax)
   129cf:	c6                   	(bad)  
   129d0:	66 01 00             	add    %ax,(%rax)
   129d3:	00 0f                	add    %cl,(%rdi)
   129d5:	1f                   	(bad)  
   129d6:	40 00 48 8b          	rex add %cl,-0x75(%rax)
   129da:	84 24 f8             	test   %ah,(%rax,%rdi,8)
   129dd:	00 00                	add    %al,(%rax)
   129df:	48 c7 c0 5a 00 00 00 	mov    $0x5a,%rax
   129e6:	00 00                	add    %al,(%rax)
   129e8:	00 0f                	add    %cl,(%rdi)
   129ea:	85 22                	test   %esp,(%rdx)
   129ec:	02 00                	add    (%rax),%al
   129ee:	00 48 81             	add    %cl,-0x7f(%rax)
   129f1:	c4                   	(bad)  
   129f2:	08 01                	or     %al,(%rcx)
   129f4:	00 00                	add    %al,(%rax)
   129f6:	0f 8c e2 fd ff ff    	jl     127de <_obstack_memory_used@@Base+0x202e>
   129fc:	5c                   	pop    %rsp
   129fd:	41 5d                	pop    %r13
   129ff:	41 5e                	pop    %r14
   12a01:	41 5f                	pop    %r15
   12a03:	c3                   	ret    
   12a04:	0f 4d 85 f4 41 80 78 	cmovge 0x788041f4(%rbp),%eax
   12a0b:	01 2e                	add    %ebp,(%rsi)
   12a0d:	0f 85 29 fc ff ff    	jne    1263c <_obstack_memory_used@@Base+0x1e8c>
   12a13:	49 8d 46 01          	lea    0x1(%r14),%rax
   12a17:	4d 0f 8c 65 fe ff ff 	rex.WRB jl 12883 <_obstack_memory_used@@Base+0x20d3>
   12a1e:	e9 29 fc ff ff       	jmp    1264c <_obstack_memory_used@@Base+0x1e9c>
   12a23:	49 83 ec 01          	sub    $0x1,%r12
   12a27:	4d 39 f4             	cmp    %r14,%r12
   12a2a:	4d 29 f8             	sub    %r15,%r8
   12a2d:	c4                   	(bad)  
   12a2e:	fc                   	cld    
   12a2f:	ff 4d 85             	decl   -0x7b(%rbp)
   12a32:	e6 24                	out    %al,$0x24
   12a34:	ff 2f                	ljmp   *(%rdi)
   12a36:	0f 84 1c fd ff 4c    	je     4d012758 <obstack_alloc_failed_handler@@Base+0x4cff06b8>
   12a3c:	21 ef                	and    %ebp,%edi
   12a3e:	ec                   	in     (%dx),%al
   12a3f:	01 4d 0f             	add    %ecx,0xf(%rbp)
   12a42:	85 c2                	test   %eax,%edx
   12a44:	fe                   	(bad)  
   12a45:	ff 4c 89 f1          	decl   -0xf(%rcx,%rcx,4)
   12a49:	ff 4d 21             	decl   0x21(%rbp)
   12a4c:	d4                   	(bad)  
   12a4d:	44 00 00             	add    %r8b,(%rax)
   12a50:	4c 89 f7             	mov    %r14,%rdi
   12a53:	45 31 f6             	xor    %r14d,%r14d
   12a56:	e8 0f 8f 73 fc       	call   fffffffffc74b96a <obstack_alloc_failed_handler@@Base+0xfffffffffc7298ca>
   12a5b:	ff                   	(bad)  
   12a5c:	ff                   	(bad)  
   12a5d:	fe                   	(bad)  
   12a5e:	24 10                	and    $0x10,%al
   12a60:	e9 42 fc ff ff       	jmp    126a7 <_obstack_memory_used@@Base+0x1ef7>
   12a65:	0f 8c ac fc ff ff    	jl     12717 <_obstack_memory_used@@Base+0x1f67>
   12a6b:	31 0f                	xor    %ecx,(%rdi)
   12a6d:	84 9a fd ff ff 8c    	test   %bl,-0x73000003(%rdx)
   12a73:	d1 48 ff             	rorl   -0x1(%rax)
   12a76:	c2 ff 4c             	ret    $0x4cff
   12a79:	4c 89 f3             	mov    %r14,%rbx
   12a7c:	00 10                	add    %dl,(%rax)
   12a7e:	00 00                	add    %al,(%rax)
   12a80:	e8 8b 20 0f 8c       	call   ffffffff8c104b10 <obstack_alloc_failed_handler@@Base+0xffffffff8c0e2a70>
   12a85:	8d 48 01             	lea    0x1(%rax),%ecx
   12a88:	d2 85 c0 0f 84 19    	rolb   %cl,0x19840fc0(%rbp)
   12a8e:	ff                   	(bad)  
   12a8f:	ff                   	(bad)  
   12a90:	ff 4c 0f 8c          	decl   -0x74(%rdi,%rcx,1)
   12a94:	ef                   	out    %eax,(%dx)
   12a95:	02 0f                	add    (%rdi),%cl
   12a97:	8f                   	(bad)  
   12a98:	d2 00                	rolb   %cl,(%rax)
   12a9a:	00 00                	add    %al,(%rax)
   12a9c:	e9 48 c7 c7 4c       	jmp    4cc8f1e9 <obstack_alloc_failed_handler@@Base+0x4cc6d149>
   12aa1:	31 d0                	xor    %edx,%eax
   12aa3:	00 ff                	add    %bh,%bh
   12aa5:	ff 83 38 0c 0f 48    	incl   0x480f0c38(%rbx)
   12aab:	39 fb                	cmp    %edi,%ebx
   12aad:	ff                   	(bad)  
   12aae:	ff                   	(bad)  
   12aaf:	e9 f6 fe ff ff       	jmp    129aa <_obstack_memory_used@@Base+0x21fa>
   12ab4:	0f 1f 40 00          	nopl   0x0(%rax)
   12ab8:	48 89 da             	mov    %rbx,%rdx
   12abb:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   12ac0:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   12ac5:	75 3d                	jne    12b04 <_obstack_memory_used@@Base+0x2354>
   12ac7:	3a 00                	cmp    (%rax),%al
   12ac9:	0f 84 36 fd ff ff    	je     12805 <_obstack_memory_used@@Base+0x2055>
   12acf:	4c 09 f9             	or     %r15,%rcx
   12ad2:	57                   	push   %rdi
   12ad3:	01 4d 89             	add    %ecx,-0x77(%rbp)
   12ad6:	e8 49 c1 ed 0e       	call   eeeec24 <obstack_alloc_failed_handler@@Base+0xeeccb84>
   12adb:	ff                   	(bad)  
   12adc:	e8 2f 1c ff ff       	call   4710 <__errno_location@plt>
   12ae1:	45 31 f6             	xor    %r14d,%r14d
   12ae4:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   12aea:	48 01 f0             	add    %rsi,%rax
   12aed:	0f 85 0f 85 cf 01    	jne    1d0b002 <obstack_alloc_failed_handler@@Base+0x1ce8f62>
   12af3:	00 00                	add    %al,(%rax)
   12af5:	38 0c 75 d6 48 8b 7c 	cmp    %cl,0x7c8b48d6(,%rsi,2)
   12afc:	24 0f                	and    $0xf,%al
   12afe:	84 04 01             	test   %al,(%rcx,%rax,1)
   12b01:	00 00                	add    %al,(%rax)
   12b03:	1b ff                	sbb    %edi,%edi
   12b05:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
   12b09:	45 31 f6             	xor    %r14d,%r14d
   12b0c:	e8 4c 21 f0 84       	call   ffffffff84f14c5d <obstack_alloc_failed_handler@@Base+0xffffffff84ef2bbd>
   12b11:	e9 02 00 00 08       	jmp    8012b18 <obstack_alloc_failed_handler@@Base+0x7ff0a78>
   12b16:	e8 f5 9e ff ff       	call   ca10 <__sprintf_chk@plt+0x7d30>
   12b1b:	4c 89 fb             	mov    %r15,%rbx
   12b1e:	0c 4d                	or     $0x4d,%al
   12b20:	89 ed                	mov    %ebp,%ebp
   12b22:	e9 b1 fe ff ff       	jmp    129d8 <_obstack_memory_used@@Base+0x2228>
   12b27:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   12b2c:	48 c1 0f 85          	rorq   $0x85,(%rdi)
   12b30:	49 89 c4             	mov    %rax,%r12
   12b33:	f8                   	clc    
   12b34:	c6 06 2f             	movb   $0x2f,(%rsi)
   12b37:	49 09 f8             	or     %rdi,%r8
   12b3a:	39 49 85             	cmp    %ecx,-0x7b(%rcx)
   12b3d:	fd                   	std    
   12b3e:	ff 49 8d             	decl   -0x73(%rcx)
   12b41:	44 0f 84 04 01 00 00 	rex.R je 12c4c <_obstack_memory_used@@Base+0x249c>
   12b48:	20 48 89             	and    %cl,-0x77(%rax)
   12b4b:	c1 b8 00 10 00 00 48 	sarl   $0x48,0x1000(%rax)
   12b52:	0f 4c 29             	cmovl  (%rcx),%ebp
   12b55:	fb                   	sti    
   12b56:	ff                   	(bad)  
   12b57:	ff c1                	inc    %ecx
   12b59:	48 0f 43 c1          	cmovae %rcx,%rax
   12b5d:	48 89 c7             	mov    %rax,%rdi
   12b60:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   12b65:	e8 26 1b ff ff       	call   4690 <malloc@plt>
   12b6a:	48 0f e9 b6 01 00 00 	rex.W psubsw 0x44000001(%rsi),%mm6
   12b71:	44 
   12b72:	24 20                	and    $0x20,%al
   12b74:	48 85 c0             	test   %rax,%rax
   12b77:	4c 85 de             	test   %r11,%rsi
   12b7a:	49 c1 e7 20          	shl    $0x20,%r15
   12b7e:	60                   	(bad)  
   12b7f:	fd                   	std    
   12b80:	ff                   	(bad)  
   12b81:	ff 4d 21             	decl   0x21(%rbp)
   12b84:	d5                   	(bad)  
   12b85:	ff                   	(bad)  
   12b86:	ff 66 0f             	jmp    *0xf(%rsi)
   12b89:	1f                   	(bad)  
   12b8a:	84 00                	test   %al,(%rax)
   12b8c:	00 00                	add    %al,(%rax)
   12b8e:	00 00                	add    %al,(%rax)
   12b90:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   12b95:	48 89 ce             	mov    %rcx,%rsi
   12b98:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   12b9d:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   12ba2:	48 0f 8f 26 02 00 00 	rex.W jg 12dcf <_obstack_memory_used@@Base+0x261f>
   12ba9:	1f                   	(bad)  
   12baa:	49 c1 ea 0d          	shr    $0xd,%r10
   12bae:	44 24 28             	rex.R and $0x28,%al
   12bb1:	48 85 4d 0f          	test   %rcx,0xf(%rbp)
   12bb5:	af                   	scas   %es:(%rdi),%eax
   12bb6:	c8 fa ff ff          	enter  $0xfffa,$0xff
   12bba:	48 8b 4c 24 49       	mov    0x49(%rsp),%rcx
   12bbf:	29 0f                	sub    %ecx,(%rdi)
   12bc1:	85 db                	test   %ebx,%ebx
   12bc3:	fc                   	cld    
   12bc4:	ff                   	(bad)  
   12bc5:	ff 44 24 20          	incl   0x20(%rsp)
   12bc9:	48                   	rex.W
   12bca:	49 f7 f8             	idiv   %r8
   12bcd:	8c 92 0f 8f 7b 02    	mov    %ss,0x27b8f0f(%rdx)
   12bd3:	00 00                	add    %al,(%rax)
   12bd5:	44 24 08             	rex.R and $0x8,%al
   12bd8:	00 00                	add    %al,(%rax)
   12bda:	00 00                	add    %al,(%rax)
   12bdc:	48 c7                	rex.W (bad) 
   12bde:	0f 85 68 02 00 00    	jne    12e4c <_obstack_memory_used@@Base+0x269c>
   12be4:	00 e9                	add    %ch,%cl
   12be6:	4c 09 4c 29 d6       	or     %r9,-0x2a(%rcx,%rbp,1)
   12beb:	83 ec 49             	sub    $0x49,%esp
   12bee:	c1 e7 0b             	shl    $0xb,%edi
   12bf1:	0f 83 3a fd ff e9    	jae    ffffffffea012931 <obstack_alloc_failed_handler@@Base+0xffffffffe9ff0891>
   12bf7:	5c                   	pop    %rsp
   12bf8:	03 00                	add    (%rax),%eax
   12bfa:	00 ff                	add    %bh,%bh
   12bfc:	2f                   	(bad)  
   12bfd:	0f 48 0f             	cmovs  (%rdi),%ecx
   12c00:	85 cd                	test   %ecx,%ebp
   12c02:	00 00                	add    %al,(%rax)
   12c04:	00 ec                	add    %ch,%ah
   12c06:	01 4d 39             	add    %ecx,0x39(%rbp)
   12c09:	e6 75                	out    %al,$0x75
   12c0b:	4d 01 e6             	add    %r12,%r14
   12c0e:	c1 e1 2b             	shl    $0x2b,%ecx
   12c11:	e8 7a 1c ff ff       	call   4890 <__stack_chk_fail@plt>
   12c16:	e9 0f 85 26 ff       	jmp    ffffffffff27b12a <obstack_alloc_failed_handler@@Base+0xffffffffff25908a>
   12c1b:	ff                   	(bad)  
   12c1c:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
   12c20:	f3 0f 1e fa          	endbr64 
   12c24:	41 57                	push   %r15
   12c26:	49 89 ff             	mov    %rdi,%r15
   12c29:	41 56                	push   %r14
   12c2b:	41 55                	push   %r13
   12c2d:	41 54                	push   %r12
   12c2f:	55                   	push   %rbp
   12c30:	53                   	push   %rbx
   12c31:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
   12c35:	48 83 ec 38          	sub    $0x38,%rsp
   12c39:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12c40:	00 00 
   12c42:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   12c47:	31 c0                	xor    %eax,%eax
   12c49:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   12c4e:	e8 1d 1c ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   12c53:	48 83 f8 01          	cmp    $0x1,%rax
   12c57:	0f 86 73 01 00 00    	jbe    12dd0 <_obstack_memory_used@@Base+0x2620>
   12c5d:	45 31 e4             	xor    %r12d,%r12d
   12c60:	4c 3b 7c 24 08       	cmp    0x8(%rsp),%r15
   12c65:	0f 83 13 01 00 00    	jae    12d7e <_obstack_memory_used@@Base+0x25ce>
   12c6b:	4d 85 e3             	test   %r12,%r11
   12c6e:	24 20                	and    $0x20,%al
   12c70:	4c 8d 74 24 1c       	lea    0x1c(%rsp),%r14
   12c75:	0f 1f 00             	nopl   (%rax)
   12c78:	41 0f b6 07          	movzbl (%r15),%eax
   12c7c:	3c 5f                	cmp    $0x5f,%al
   12c7e:	0f 8f 24 01 00 00    	jg     12da8 <_obstack_memory_used@@Base+0x25f8>
   12c84:	3c 40                	cmp    $0x40,%al
   12c86:	0f 8f df 00 00 00    	jg     12d6b <_obstack_memory_used@@Base+0x25bb>
   12c8c:	3c 23                	cmp    $0x23,%al
   12c8e:	0f 8f cc 00 00 00    	jg     12d60 <_obstack_memory_used@@Base+0x25b0>
   12c94:	3c 1f                	cmp    $0x1f,%al
   12c96:	0f 8f cf 00 00 00    	jg     12d6b <_obstack_memory_used@@Base+0x25bb>
   12c9c:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   12ca3:	00 
   12ca4:	eb 30                	jmp    12cd6 <_obstack_memory_used@@Base+0x2526>
   12ca6:	66 0f 8f b3 fd       	jg     2a5e <free@plt-0x1c22>
   12cab:	ff                   	(bad)  
   12cac:	ff 00                	incl   (%rax)
   12cae:	00 4c 21 ff          	add    %cl,-0x1(%rcx,%riz,1)
   12cb2:	ff                   	(bad)  
   12cb3:	ff                   	(bad)  
   12cb4:	7f 44                	jg     12cfa <_obstack_memory_used@@Base+0x254a>
   12cb6:	29 e2                	sub    %esp,%edx
   12cb8:	39 d0                	cmp    %edx,%eax
   12cba:	0f 8f 70 49 0f af    	jg     ffffffffaf107630 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e5590>
   12cc0:	db 01                	fildl  (%rcx)
   12cc2:	c4                   	(bad)  
   12cc3:	4c 89 ef             	mov    %r13,%rdi
   12cc6:	49 01 49 c7          	add    %rcx,-0x39(%r9)
   12cca:	c0 12 fe             	rclb   $0xfe,(%rdx)
   12ccd:	ff                   	(bad)  
   12cce:	ff c0                	inc    %eax
   12cd0:	0f 85 9d 00 00 00    	jne    12d73 <_obstack_memory_used@@Base+0x25c3>
   12cd6:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   12cdb:	4c 0f 84 c1 fe ff ff 	rex.WR je 12ba3 <_obstack_memory_used@@Base+0x23f3>
   12ce2:	35 f7 4c 29 48       	xor    $0x48294cf7,%eax
   12ce7:	c1 ea 06             	shr    $0x6,%edx
   12cea:	e8 c1 1b ff ff       	call   48b0 <mbrtowc@plt>
   12cef:	48                   	rex.W
   12cf0:	49 c1 e3 17          	shl    $0x17,%r11
   12cf4:	c1 e8 2a             	shr    $0x2a,%eax
   12cf7:	14 49                	adc    $0x49,%al
   12cf9:	c1 e7 36             	shl    $0x36,%edi
   12cfc:	49 89 f0             	mov    %rsi,%r8
   12cff:	e8 eb 0d 85 c7       	call   ffffffffc7863aef <obstack_alloc_failed_handler@@Base+0xffffffffc7841a4f>
   12d04:	aa                   	stos   %al,%es:(%rdi)
   12d05:	01 4d 49             	add    %ecx,0x49(%rbp)
   12d08:	0f af c4             	imul   %esp,%eax
   12d0b:	00 49 ff             	add    %cl,-0x1(%rcx)
   12d0e:	c5 ff 74             	(bad)
   12d11:	48 89 d0             	mov    %rdx,%rax
   12d14:	fb                   	sti    
   12d15:	fe 0f                	decb   (%rdi)
   12d17:	84 04 01             	test   %al,(%rcx,%rax,1)
   12d1a:	4c                   	rex.WR
   12d1b:	4c 39 d9             	cmp    %r11,%rcx
   12d1e:	db b8 01 00 00 00    	fstpt  0x1(%rax)
   12d24:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   12d28:	48 0f 44 d8          	cmove  %rax,%rbx
   12d2c:	e8 6f 1d ff ff       	call   4aa0 <wcwidth@plt>
   12d31:	85 c0                	test   %eax,%eax
   12d33:	0f 89 77 ff ff ff    	jns    12cb0 <_obstack_memory_used@@Base+0x2500>
   12d39:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   12d3d:	e8 49 c1 e6 3f       	call   3fe7ee8b <obstack_alloc_failed_handler@@Base+0x3fe5cdeb>
   12d42:	85 c0                	test   %eax,%eax
   12d44:	0f 85 79 ff ff 48    	jne    49012cc3 <obstack_alloc_failed_handler@@Base+0x48ff0c23>
   12d4a:	c7 c7 4c 29 c2 00    	mov    $0xc2294c,%edi
   12d50:	48 c7 c0 3e 03 00 00 	mov    $0x33e,%rax
   12d57:	ff                   	(bad)  
   12d58:	ff c4                	inc    %esp
   12d5a:	01 e9                	add    %ebp,%ecx
   12d5c:	63 ff                	movsxd %edi,%edi
   12d5e:	ff                   	(bad)  
   12d5f:	ff 83 e8 25 3c 1a    	incl   0x1a3c25e8(%rbx)
   12d65:	0f 87 31 ff ff ff    	ja     12c9c <_obstack_memory_used@@Base+0x24ec>
   12d6b:	49 83 c7 01          	add    $0x1,%r15
   12d6f:	41 83 c4 01          	add    $0x1,%r12d
   12d73:	4c 39 7c 24 08       	cmp    %r15,0x8(%rsp)
   12d78:	0f 87 fa fe ff ff    	ja     12c78 <_obstack_memory_used@@Base+0x24c8>
   12d7e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   12d83:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   12d8a:	00 00 
   12d8c:	0f 85 4d 0f af fb    	jne    fffffffffbb03cdf <obstack_alloc_failed_handler@@Base+0xfffffffffbae1c3f>
   12d92:	48 83 c4 38          	add    $0x38,%rsp
   12d96:	44 89 e0             	mov    %r12d,%eax
   12d99:	5b                   	pop    %rbx
   12d9a:	5d                   	pop    %rbp
   12d9b:	41 5c                	pop    %r12
   12d9d:	41 5d                	pop    %r13
   12d9f:	41 5e                	pop    %r14
   12da1:	41 5f                	pop    %r15
   12da3:	c3                   	ret    
   12da4:	0f 1f 40 00          	nopl   0x0(%rax)
   12da8:	83 e8 61             	sub    $0x61,%eax
   12dab:	3c 1d                	cmp    $0x1d,%al
   12dad:	76 bc                	jbe    12d6b <_obstack_memory_used@@Base+0x25bb>
   12daf:	e9 e8 fe ff ff       	jmp    12c9c <_obstack_memory_used@@Base+0x24ec>
   12db4:	0f 1f 4d 21          	nopl   0x21(%rbp)
   12db8:	d8 0f                	fmuls  (%rdi)
   12dba:	b6 3f                	mov    $0x3f,%dh
   12dbc:	bb 01 00 00 00       	mov    $0x1,%ebx
   12dc1:	89 7c 49 09          	mov    %edi,0x9(%rcx,%rcx,2)
   12dc5:	d0 62 ff             	shlb   -0x1(%rdx)
   12dc8:	4d 21 d2             	and    %r10,%r10
   12dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12dd0:	4d 89 ec             	mov    %r13,%r12
   12dd3:	ff                   	(bad)  
   12dd4:	ff                   	(bad)  
   12dd5:	df 73 a6             	fbstp  -0x5a(%rbx)
   12dd8:	e8 f3 1e ff ff       	call   4cd0 <__ctype_b_loc@plt>
   12ddd:	45 31 e4             	xor    %r12d,%r12d
   12de0:	48                   	rex.W
   12de1:	4c 29 fa             	sub    %r15,%rdx
   12de4:	1f                   	(bad)  
   12de5:	7c dc                	jl     12dc3 <_obstack_memory_used@@Base+0x2613>
   12de7:	89 ff                	mov    %edi,%edi
   12de9:	00 00                	add    %al,(%rax)
   12deb:	00 49 4d             	add    %cl,0x4d(%rcx)
   12dee:	29 c2                	sub    %eax,%edx
   12df0:	4c 01 ca             	add    %r9,%rdx
   12df3:	42 f6 c4 40          	rex.X test $0x40,%spl
   12df7:	75 4c                	jne    12e45 <_obstack_memory_used@@Base+0x2695>
   12df9:	29 fa                	sub    %edi,%edx
   12dfb:	75 11                	jne    12e0e <_obstack_memory_used@@Base+0x265e>
   12dfd:	48 c1 ea 40          	shr    $0x40,%rdx
   12e01:	ff 4c 39 ff          	decl   -0x1(%rcx,%rdi,1)
   12e05:	84 74 ff ff          	test   %dh,-0x1(%rdi,%rdi,8)
   12e09:	ff 41 83             	incl   -0x7d(%rcx)
   12e0c:	c4 01 4c 39          	(bad)
   12e10:	49                   	rex.WB
   12e11:	4c 0f af d0          	imul   %rax,%r10
   12e15:	00 00                	add    %al,(%rax)
   12e17:	ff                   	(bad)  
   12e18:	ff                   	(bad)  
   12e19:	ff 66 0f             	jmp    *0xf(%rsi)
   12e1c:	1f                   	(bad)  
   12e1d:	44 00 00             	add    %r8b,(%rax)
   12e20:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   12e25:	41 83 c4 01          	add    $0x1,%r12d
   12e29:	e9 45 ff ff ff       	jmp    12d73 <_obstack_memory_used@@Base+0x25c3>
   12e2e:	66 90                	xchg   %ax,%ax
   12e30:	41 bc ff ff 49 39    	mov    $0x3949ffff,%r12d
   12e36:	fc                   	cld    
   12e37:	43 ff                	rex.XB (bad) 
   12e39:	ff                   	(bad)  
   12e3a:	ff                   	(bad)  
   12e3b:	e8 50 49 49 c1       	call   ffffffffc14a7790 <obstack_alloc_failed_handler@@Base+0xffffffffc14856f0>
   12e40:	e2 3e                	loop   12e80 <_obstack_memory_used@@Base+0x26d0>
   12e42:	1e                   	(bad)  
   12e43:	fa                   	cli    
   12e44:	41 57                	push   %r15
   12e46:	41                   	rex.B
   12e47:	48 c1 e2 19          	shl    $0x19,%rdx
   12e4b:	54                   	push   %rsp
   12e4c:	49 89 f4             	mov    %rsi,%r12
   12e4f:	55                   	push   %rbp
   12e50:	48                   	rex.W
   12e51:	48 ff c2             	inc    %rdx
   12e54:	48 83 ec 48          	sub    $0x48,%rsp
   12e58:	21 ce                	and    %ecx,%esi
   12e5a:	54                   	push   %rsp
   12e5b:	24 08                	and    $0x8,%al
   12e5d:	4d 29 ef             	sub    %r13,%r15
   12e60:	ff                   	(bad)  
   12e61:	ff 4d 8b             	decl   -0x75(%rbp)
   12e64:	3c 24                	cmp    $0x24,%al
   12e66:	4d 09 f5             	or     %r14,%r13
   12e69:	0f 48 21             	cmovs  (%rcx),%esp
   12e6c:	da 00                	fiaddl (%rax)
   12e6e:	00 c6                	add    %al,%dh
   12e70:	44 24 07             	rex.R and $0x7,%al
   12e73:	00 49 01             	add    %cl,0x1(%rcx)
   12e76:	cd 45                	int    $0x45
   12e78:	31 f6                	xor    %esi,%esi
   12e7a:	49 c7 c5 4c 21 cb ff 	mov    $0xffffffffffcb214c,%r13
   12e81:	eb 30                	jmp    12eb3 <_obstack_memory_used@@Base+0x2703>
   12e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12e88:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   12e8d:	42 8b 0c b0          	mov    (%rax,%r14,4),%ecx
   12e91:	42 39 0c a8          	cmp    %ecx,(%rax,%r13,4)
   12e95:	b9 01 00 00 00       	mov    $0x1,%ecx
   12e9a:	48 c7 c7 a8 00 00 00 	mov    $0xa8,%rdi
   12ea1:	c1 88 44 24 0f 84 0f 	rorl   $0xf,-0x7bf0dbbc(%rax)
   12ea8:	49 c1 e9 35          	shr    $0x35,%r9
   12eac:	da fe                	(bad)  
   12eae:	ff                   	(bad)  
   12eaf:	ff                   	(bad)  
   12eb0:	ff 48 c1             	decl   -0x3f(%rax)
   12eb3:	e6 39                	out    %al,$0x39
   12eb5:	da 48 89             	fimull -0x77(%rax)
   12eb8:	ee                   	out    %al,(%dx)
   12eb9:	4c 89 ff             	mov    %r15,%rdi
   12ebc:	e8 e9 37 fe ff       	call   ffffffffffff66aa <obstack_alloc_failed_handler@@Base+0xfffffffffffd460a>
   12ec1:	ff b0 02 00 00 89    	push   -0x76fffffe(%rax)
   12ec7:	ff                   	(bad)  
   12ec8:	e8 b3 19 ff ff       	call   4880 <strlen@plt>
   12ecd:	49 09 d5             	or     %rdx,%r13
   12ed0:	74 46                	je     12f18 <_obstack_memory_used@@Base+0x2768>
   12ed2:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
   12ed6:	75 b0                	jne    12e88 <_obstack_memory_used@@Base+0x26d8>
   12ed8:	4d 89 f5             	mov    %r14,%r13
   12edb:	49 83 c6 01          	add    $0x1,%r14
   12edf:	4f 8b 3c 4d 31 ff 4c 	mov    0x94cff31(,%r9,2),%r15
   12ee6:	09 
   12ee7:	0f 85 99 01 00 00    	jne    13086 <_obstack_memory_used@@Base+0x28d6>
   12eed:	00 00                	add    %al,(%rax)
   12eef:	0f 8c 88 01 00 00    	jl     1307d <_obstack_memory_used@@Base+0x28cd>
   12ef5:	48 c7                	rex.W (bad) 
   12ef7:	49 c1 e0 36          	shl    $0x36,%r8
   12efb:	ff 4c 0f 49          	decl   0x49(%rdi,%rcx,1)
   12eff:	85 d5                	test   %edx,%ebp
   12f01:	83 c4 18             	add    $0x18,%esp
   12f04:	4c 89 e8             	mov    %r13,%rax
   12f07:	5b                   	pop    %rbx
   12f08:	5d                   	pop    %rbp
   12f09:	41 5c                	pop    %r12
   12f0b:	0f 84 d7 fd ff ff    	je     12ce8 <_obstack_memory_used@@Base+0x2538>
   12f11:	4d 09 c9             	or     %r9,%r9
   12f14:	49 d1 48 c1          	rorq   -0x3f(%r8)
   12f18:	ef                   	out    %eax,(%dx)
   12f19:	16                   	(bad)  
   12f1a:	fe                   	(bad)  
   12f1b:	ff                   	(bad)  
   12f1c:	ff 49 c7             	decl   -0x39(%rcx)
   12f1f:	c5 ff ff             	(bad)  
   12f22:	48 85 f3             	test   %rsi,%rbx
   12f25:	da 66 2e             	fisubl 0x2e(%rsi)
   12f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12f2f:	00 
   12f30:	f3 0f 1e fa          	endbr64 
   12f34:	41 57                	push   %r15
   12f36:	41 89 cb             	mov    %ecx,%r11d
   12f39:	41 56                	push   %r14
   12f3b:	49 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%r14
   12f42:	41 55                	push   %r13
   12f44:	49 89 fd             	mov    %rdi,%r13
   12f47:	41 54                	push   %r12
   12f49:	49 89 f4             	mov    %rsi,%r12
   12f4c:	55                   	push   %rbp
   12f4d:	53                   	push   %rbx
   12f4e:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   12f55:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   12f5c:	00 
   12f5d:	48 89 bc 24 98 00 00 	mov    %rdi,0x98(%rsp)
   12f64:	00 
   12f65:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   12f6a:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   12f71:	00 
   12f72:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   12f79:	00 
   12f7a:	44 89 44 24 78       	mov    %r8d,0x78(%rsp)
   12f7f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   12f84:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   12f8b:	00 
   12f8c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   12f93:	00 00 
   12f95:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   12f9c:	00 
   12f9d:	31 c0                	xor    %eax,%eax
   12f9f:	90                   	nop
   12fa0:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
   12fa5:	e8 c6 18 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   12faa:	8b 5c 24 78          	mov    0x78(%rsp),%ebx
   12fae:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
   12fb3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   12fb8:	83 e3 02             	and    $0x2,%ebx
   12fbb:	41 83 fb 0a          	cmp    $0xa,%r11d
   12fbf:	0f 87 54 1d ff ff    	ja     4d19 <__sprintf_chk@plt+0x39>
   12fc5:	48 8d 15 64 95 00 00 	lea    0x9564(%rip),%rdx        # 1c530 <_obstack_memory_used@@Base+0xbd80>
   12fcc:	44 89 d8             	mov    %r11d,%eax
   12fcf:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   12fd3:	48 01 d0             	add    %rdx,%rax
   12fd6:	3e ff e0             	notrack jmp *%rax
   12fd9:	41 83 0f 8f          	orl    $0xffffff8f,(%r15)
   12fdd:	b2 00                	mov    $0x0,%dl
   12fdf:	00 00                	add    %al,(%rax)
   12fe1:	2d 48 f7 48 21       	sub    $0x2148f748,%eax
   12fe6:	f6 c6 01             	test   $0x1,%dh
   12fe9:	00 00                	add    %al,(%rax)
   12feb:	00 00                	add    %al,(%rax)
   12fed:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
   12ff2:	48 89 ee             	mov    %rbp,%rsi
   12ff5:	e8 66 18 ff ff       	call   4860 <dcgettext@plt>
   12ffa:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
   12fff:	48 39 e8             	cmp    %rbp,%rax
   13002:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   13009:	00 
   1300a:	0f 84 37 12 00 00    	je     14247 <_obstack_memory_used@@Base+0x3a97>
   13010:	48 8d 2d 28 6c 00 00 	lea    0x6c28(%rip),%rbp        # 19c3f <_obstack_memory_used@@Base+0x948f>
   13017:	31 ff                	xor    %edi,%edi
   13019:	ba 05 00 00 49       	mov    $0x49000005,%edx
   1301e:	f7 fa                	idiv   %edx
   13020:	5c                   	pop    %rsp
   13021:	24 20                	and    $0x20,%al
   13023:	48 89 ee             	mov    %rbp,%rsi
   13026:	e8 35 0f 8f f1       	call   fffffffff1903f60 <obstack_alloc_failed_handler@@Base+0xfffffffff18e1ec0>
   1302b:	fe                   	(bad)  
   1302c:	ff                   	(bad)  
   1302d:	ff 48 f7             	decl   -0x9(%rax)
   13030:	fb                   	sti    
   13031:	39 e8                	cmp    %ebp,%eax
   13033:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   1303a:	00 
   1303b:	0f 84 0f 8f c8 03    	je     3c9bf50 <obstack_alloc_failed_handler@@Base+0x3c79eb0>
   13041:	00 00                	add    %al,(%rax)
   13043:	fc                   	cld    
   13044:	85 db                	test   %ebx,%ebx
   13046:	49 89 da             	mov    %rbx,%r10
   13049:	10 7c 95 0f          	adc    %bh,0xf(%rbp,%rdx,4)
   1304d:	af                   	scas   %es:(%rdi),%eax
   1304e:	f8                   	clc    
   1304f:	8b 9c 24 88 00 48 09 	mov    0x9480088(%rsp),%ebx
   13056:	d1 e9                	shr    %ecx
   13058:	8f                   	(bad)  
   13059:	fc                   	cld    
   1305a:	ff                   	(bad)  
   1305b:	ff 01                	incl   (%rcx)
   1305d:	00 00                	add    %al,(%rax)
   1305f:	00 0f                	add    %cl,(%rdi)
   13061:	95                   	xchg   %eax,%ebp
   13062:	44 24 26             	rex.R and $0x26,%al
   13065:	48 89 df             	mov    %rbx,%rdi
   13068:	e8 13 4d 31 e6       	call   ffffffffe6327d80 <obstack_alloc_failed_handler@@Base+0xffffffffe6305ce0>
   1306d:	4c 31 e2             	xor    %r12,%rdx
   13070:	24 48                	and    $0x48,%al
   13072:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
   13077:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1307c:	c6 44 24 20 01       	movb   $0x1,0x20(%rsp)
   13081:	31 f6                	xor    %esi,%esi
   13083:	c6 44 24 7c 00       	movb   $0x0,0x7c(%rsp)
   13088:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1308f:	00 00 
   13091:	40 88 6c 24 25       	mov    %bpl,0x25(%rsp)
   13096:	4d 89 e2             	mov    %r12,%r10
   13099:	4d 89 f4             	mov    %r14,%r12
   1309c:	4d 89 ee             	mov    %r13,%r14
   1309f:	45 89 dd             	mov    %r11d,%r13d
   130a2:	41 89 f3             	mov    %esi,%r11d
   130a5:	45 31 c9             	xor    %r9d,%r9d
   130a8:	0f 1f 84 00 4c 89 f9 	nopl   0xf9894c(%rax,%rax,1)
   130af:	00 
   130b0:	4d 39 e1             	cmp    %r12,%r9
   130b3:	40 0f 95 c5          	setne  %bpl
   130b7:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   130bb:	75 0e                	jne    130cb <_obstack_memory_used@@Base+0x291b>
   130bd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   130c2:	42 80 3c 08 00       	cmpb   $0x0,(%rax,%r9,1)
   130c7:	40 0f 95 c5          	setne  %bpl
   130cb:	40 84 ed             	test   %bpl,%bpl
   130ce:	0f 84 b9 0c 00 00    	je     13d8d <_obstack_memory_used@@Base+0x35dd>
   130d4:	41 83 fd 02          	cmp    $0x2,%r13d
   130d8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   130dd:	0f 95 c0             	setne  %al
   130e0:	22 44 24 25          	and    0x25(%rsp),%al
   130e4:	4a 8d 1c 0f          	lea    (%rdi,%r9,1),%rbx
   130e8:	41 89 c0             	mov    %eax,%r8d
   130eb:	0f 84 ff 05 00 00    	je     136f0 <_obstack_memory_used@@Base+0x2f40>
   130f1:	48 0f af ca          	imul   %rdx,%rcx
   130f5:	18 48 85             	sbb    %cl,-0x7b(%rax)
   130f8:	c0 0f 84             	rorb   $0x84,(%rdi)
   130fb:	71 0a                	jno    13107 <_obstack_memory_used@@Base+0x2957>
   130fd:	00 00                	add    %al,(%rax)
   130ff:	4a 8d 14 08          	lea    (%rax,%r9,1),%rdx
   13103:	49 0f 4d 29          	cmovge (%r9),%rbp
   13107:	e4 00                	in     $0x0,%al
   13109:	00 48 4d             	add    %cl,0x4d(%rax)
   1310c:	21 d6                	and    %edx,%esi
   1310e:	48 01 c3             	add    %rax,%rbx
   13111:	54                   	push   %rsp
   13112:	24 49                	and    $0x49,%al
   13114:	f7 fc                	idiv   %esp
   13116:	5c                   	pop    %rsp
   13117:	24 38                	and    $0x38,%al
   13119:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   1311e:	48 89 e9             	mov    %rbp,%rcx
   13121:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   13122:	02 00                	add    (%rax),%al
   13124:	49 f7 fc             	idiv   %r12
   13127:	27                   	(bad)  
   13128:	e8 53 17 ff ff       	call   4880 <strlen@plt>
   1312d:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   13132:	44 0f b6 5c 24 49    	movzbl 0x49(%rsp),%r11d
   13138:	29 c5                	sub    %eax,%ebp
   1313a:	4c                   	rex.WR
   1313b:	4d 31 c5             	xor    %r8,%r13
   1313e:	4d 31 d1             	xor    %r10,%r9
   13141:	28 49 89             	sub    %cl,-0x77(%rcx)
   13144:	c4                   	(bad)  
   13145:	44 0f b6 44 24 27    	movzbl 0x27(%rsp),%r8d
   1314b:	4c 39 e2             	cmp    %r12,%rdx
   1314e:	0f 49 39             	cmovns (%rcx),%edi
   13151:	ff 00                	incl   (%rax)
   13153:	00 48 8b             	add    %cl,-0x75(%rax)
   13156:	54                   	push   %rsp
   13157:	24 18                	and    $0x18,%al
   13159:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   1315e:	0f 8c df fd ff ff    	jl     12f43 <_obstack_memory_used@@Base+0x2793>
   13164:	c7                   	(bad)  
   13165:	38 44 4c 85          	cmp    %al,-0x7b(%rsp,%rcx,2)
   13169:	fa                   	cli    
   1316a:	30 4c 89 4c          	xor    %cl,0x4c(%rcx,%rcx,4)
   1316e:	24 28                	and    $0x28,%al
   13170:	44 88 44 24 4d       	mov    %r8b,0x4d(%rsp)
   13175:	31 fc                	xor    %edi,%esp
   13177:	18 ff                	sbb    %bh,%bh
   13179:	ff 44 0f b6          	incl   -0x4a(%rdi,%rcx,1)
   1317d:	0f 85 76 4d 0f 48    	jne    48107ef9 <obstack_alloc_failed_handler@@Base+0x480e5e59>
   13183:	ff c7                	inc    %edi
   13185:	4d 09 e0             	or     %r12,%r8
   13188:	0f b6 5c 24 30       	movzbl 0x30(%rsp),%ebx
   1318d:	4c                   	rex.WR
   1318e:	48 ff c6             	inc    %rsi
   13191:	48 c7 c3 78 00 00 00 	mov    $0x78,%rbx
   13198:	80 49 29 cf          	orb    $0xcf,0x29(%rcx)
   1319c:	00 0f                	add    %cl,(%rdi)
   1319e:	85 76 10             	test   %esi,0x10(%rsi)
   131a1:	00 00                	add    %al,(%rax)
   131a3:	0f b6 1b             	movzbl (%rbx),%ebx
   131a6:	80 fb 3f             	cmp    $0x3f,%bl
   131a9:	0f 8f 59 0b 00 00    	jg     13d08 <_obstack_memory_used@@Base+0x3558>
   131af:	84 db                	test   %bl,%bl
   131b1:	0f 8f c1 02 00 00    	jg     13478 <_obstack_memory_used@@Base+0x2cc8>
   131b7:	49 c7 c0 ef fe ff ff 	mov    $0xfffffffffffffeef,%r8
   131be:	00 00                	add    %al,(%rax)
   131c0:	48 8d 15 0f 85 3a 03 	lea    0x33a850f(%rip),%rdx        # 33bb6d6 <obstack_alloc_failed_handler@@Base+0x3399636>
   131c7:	4d 39 e4             	cmp    %r12,%r12
   131ca:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   131ce:	48 01 d0             	add    %rdx,%rax
   131d1:	3e ff e0             	notrack jmp *%rax
   131d4:	0f 1f 40 48          	nopl   0x48(%rax)
   131d8:	f7 fa                	idiv   %edx
   131da:	c1 0f 8c             	rorl   $0x8c,(%rdi)
   131dd:	d3 fe                	sar    %cl,%esi
   131df:	ff                   	(bad)  
   131e0:	ff 89 c5 31 0f 8c    	decl   -0x73f0ce3b(%rcx)
   131e6:	92                   	xchg   %eax,%edx
   131e7:	02 00                	add    (%rax),%al
   131e9:	00 49 c1             	add    %cl,-0x3f(%rcx)
   131ec:	ee                   	out    %al,(%dx)
   131ed:	17                   	(bad)  
   131ee:	00 00                	add    %al,(%rax)
   131f0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   131f5:	49 39 f6             	cmp    %rsi,%r14
   131f8:	74 12                	je     1320c <_obstack_memory_used@@Base+0x2a5c>
   131fa:	89 ca                	mov    %ecx,%edx
   131fc:	c0 ea 05             	shr    $0x5,%dl
   131ff:	0f b6 d2             	movzbl %dl,%edx
   13202:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
   13205:	d3 ea                	shr    %cl,%edx
   13207:	83 e2 01             	and    $0x1,%edx
   1320a:	75 09                	jne    13215 <_obstack_memory_used@@Base+0x2a65>
   1320c:	45 84 c0             	test   %r8b,%r8b
   1320f:	0f 84 84 01 00 00    	je     13399 <_obstack_memory_used@@Base+0x2be9>
   13215:	41 83 fd 49          	cmp    $0x49,%r13d
   13219:	ff c6                	inc    %esi
   1321b:	c2 80 7c             	ret    $0x7c80
   1321e:	24 26                	and    $0x26,%al
   13220:	00 4d 09             	add    %cl,0x9(%rbp)
   13223:	ed                   	in     (%dx),%eax
   13224:	00 00                	add    %al,(%rax)
   13226:	03 48 f7             	add    -0x9(%rax),%ecx
   13229:	fb                   	sti    
   1322a:	0f af f0             	imul   %eax,%esi
   1322d:	f0 01 20             	lock add %esp,(%rax)
   13230:	d0 74 2f 4d          	shlb   0x4d(%rdi,%rbp,1)
   13234:	39 fa                	cmp    %edi,%edx
   13236:	76 05                	jbe    1323d <_obstack_memory_used@@Base+0x2a8d>
   13238:	49 f7 0f 8f 74 03 00 	testq  $0x3748f,(%r15)
   1323f:	00 89 c1 39 d2 76    	add    %cl,0x76d239c1(%rcx)
   13245:	06                   	(bad)  
   13246:	43 c6 44 3e 01 24    	movb   $0x24,0x1(%r14,%r15,1)
   1324c:	49 8d 57 02          	lea    0x2(%r15),%rdx
   13250:	49 39 d2             	cmp    %rdx,%r10
   13253:	76 48                	jbe    1329d <_obstack_memory_used@@Base+0x2aed>
   13255:	f7 fb                	idiv   %ebx
   13257:	44                   	rex.R
   13258:	4c 85 df             	test   %r11,%rdi
   1325b:	49 83 c7 03          	add    $0x3,%r15
   1325f:	41 89 c3             	mov    %eax,%r11d
   13262:	4d 39 d7             	cmp    %r10,%r15
   13265:	73 05                	jae    1326c <_obstack_memory_used@@Base+0x2abc>
   13267:	43 c6 04 3e 5c       	movb   $0x5c,(%r14,%r15,1)
   1326c:	49 83 c7 01          	add    $0x1,%r15
   13270:	49 83 c1 01          	add    $0x1,%r9
   13274:	4d 39 d7             	cmp    %r10,%r15
   13277:	73 04                	jae    1327d <_obstack_memory_used@@Base+0x2acd>
   13279:	43 88 0c 3e          	mov    %cl,(%r14,%r15,1)
   1327d:	0f b6 44 24 20       	movzbl 0x20(%rsp),%eax
   13282:	49 83 c7 01          	add    $0x1,%r15
   13286:	be 00 00 00 00       	mov    $0x0,%esi
   1328b:	40 84 ed             	test   %bpl,%bpl
   1328e:	0f 44 c6             	cmove  %esi,%eax
   13291:	88 44 24 20          	mov    %al,0x20(%rsp)
   13295:	e9 16 fe ff ff       	jmp    130b0 <_obstack_memory_used@@Base+0x2900>
   1329a:	66 0f 1f 49 29       	nopw   0x29(%rcx)
   1329f:	f4                   	hlt    
   132a0:	80 fb 49             	cmp    $0x49,%bl
   132a3:	85 dd                	test   %ebx,%ebp
   132a5:	31 ed                	xor    %ebp,%ebp
   132a7:	41 83 fd 02          	cmp    $0x2,%r13d
   132ab:	0f 94 c0             	sete   %al
   132ae:	80 7c 49 c1 e4       	cmpb   $0xe4,-0x3f(%rcx,%rcx,2)
   132b3:	1c 0f                	sbb    $0xf,%al
   132b5:	84 fe                	test   %bh,%dh
   132b7:	fe                   	(bad)  
   132b8:	ff                   	(bad)  
   132b9:	ff 00                	incl   (%rax)
   132bb:	84 0f                	test   %cl,(%rdi)
   132bd:	49                   	rex.WB
   132be:	48 39 cf             	cmp    %rcx,%rdi
   132c1:	c6                   	(bad)  
   132c2:	4d 89 c3             	mov    %r8,%r11
   132c5:	39 f9                	cmp    %edi,%ecx
   132c7:	25 4d 89 f5 41       	and    $0x41f5894d,%eax
   132cc:	bb 02 49 c1 e9       	mov    $0xe9c14902,%ebx
   132d1:	1e                   	(bad)  
   132d2:	89 e6                	mov    %esp,%esi
   132d4:	4d 89 d4             	mov    %r10,%r12
   132d7:	89 e8                	mov    %ebp,%eax
   132d9:	84 c0                	test   %al,%al
   132db:	0f 85 7a 48 c1 e2    	jne    ffffffffe2c27b5b <obstack_alloc_failed_handler@@Base+0xffffffffe2c05abb>
   132e1:	36 4d 01 f3          	ss add %r14,%r11
   132e5:	09 4d 31             	or     %ecx,0x31(%rbp)
   132e8:	f0 24 08             	lock and $0x8,%al
   132eb:	00 00                	add    %al,(%rax)
   132ed:	00 00                	add    %al,(%rax)
   132ef:	e9 ac fc 49 31       	jmp    314b2fa0 <obstack_alloc_failed_handler@@Base+0x31490f00>
   132f4:	c2 1f 40             	ret    $0x401f
   132f7:	00 45 31             	add    %al,0x31(%rbp)
   132fa:	48 c7 c7 27 fe ff ff 	mov    $0xfffffffffffffe27,%rdi
   13301:	ec                   	in     (%dx),%al
   13302:	28 62 05             	sub    %ah,0x5(%rdx)
   13305:	00 48 c7             	add    %cl,-0x39(%rax)
   13308:	c0 a4 fe ff ff 00 00 	shlb   $0x0,0xffff(%rsi,%rdi,8)
   1330f:	00 
   13310:	4c 89 54 48 ff       	mov    %r10,-0x1(%rax,%rcx,2)
   13315:	c1 88 5c 24 30 4c 89 	rorl   $0x89,0x4c30245c(%rax)
   1331c:	4c 24 28             	rex.WR and $0x28,%al
   1331f:	48 0f af cb          	imul   %rbx,%rcx
   13323:	2c e8                	sub    $0xe8,%al
   13325:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
   13326:	19 ff                	sbb    %edi,%edi
   13328:	ff 44 0f 84          	incl   -0x7c(%rdi,%rcx,1)
   1332c:	de e9                	fsubrp %st,%st(1)
   1332e:	2f                   	(bad)  
   1332f:	03 00                	add    (%rax),%eax
   13331:	00 ff                	add    %bh,%bh
   13333:	28 bf 01 00 00 48    	sub    %bh,0x48000001(%rdi)
   13339:	c1 e8 06             	shr    $0x6,%eax
   1333c:	0f b6 c3             	movzbl %bl,%eax
   1333f:	0f 8f 97 03 00 00    	jg     136dc <_obstack_memory_used@@Base+0x2f2c>
   13345:	5e                   	pop    %rsi
   13346:	01 00                	add    %eax,(%rax)
   13348:	00 38                	add    %bh,(%rax)
   1334a:	48 8b 12             	mov    (%rdx),%rdx
   1334d:	f6 44 4c 4d 01       	testb  $0x1,0x4d(%rsp,%rcx,2)
   13352:	cb                   	lret   
   13353:	0f 95 c5             	setne  %ch
   13356:	0f 94 c2             	sete   %dl
   13359:	22 54 24 25          	and    0x25(%rsp),%dl
   1335d:	49 29 d3             	sub    %rdx,%r11
   13360:	85 de                	test   %ebx,%esi
   13362:	0c 4c                	or     $0x4c,%al
   13364:	0f af fe             	imul   %esi,%edi
   13367:	00 41 83             	add    %al,-0x7d(%rcx)
   1336a:	fd                   	std    
   1336b:	02 0f                	add    (%rdi),%cl
   1336d:	94                   	xchg   %eax,%esp
   1336e:	c2 89 d9             	ret    $0xd989
   13371:	0f b6 44 24 25       	movzbl 0x25(%rsp),%eax
   13376:	83 f0 01             	xor    $0x1,%eax
   13379:	08 d0                	or     %dl,%al
   1337b:	0f 84 6f fe ff ff    	je     131f0 <_obstack_memory_used@@Base+0x2a40>
   13381:	31 c0                	xor    %eax,%eax
   13383:	80 7c 24 26 00       	cmpb   $0x0,0x26(%rsp)
   13388:	0f 85 62 fe ff ff    	jne    131f0 <_obstack_memory_used@@Base+0x2a40>
   1338e:	66 90                	xchg   %ax,%ax
   13390:	45                   	rex.RB
   13391:	49 31 dc             	xor    %rbx,%r12
   13394:	85 7c fe ff          	test   %edi,-0x1(%rsi,%rdi,8)
   13398:	ff 83 f0 01 49 83    	incl   -0x7cb6fe10(%rbx)
   1339e:	c1 01 44             	roll   $0x44,(%rcx)
   133a1:	21 d8                	and    %ebx,%eax
   133a3:	e9 a0 08 00 00       	jmp    13c48 <_obstack_memory_used@@Base+0x3498>
   133a8:	85 db                	test   %ebx,%ebx
   133aa:	0f 85 d1 0d 49 c1    	jne    ffffffffc14a4181 <obstack_alloc_failed_handler@@Base+0xffffffffc14820e1>
   133b0:	e5 20                	in     $0x20,%eax
   133b2:	05 39 67 49 ff       	add    $0xff496739,%eax
   133b7:	c5 44 24             	(bad)
   133ba:	26 00 bd 4d 85 fa 00 	es add %bh,0xfa854d(%rbp)
   133c1:	31 f6                	xor    %esi,%esi
   133c3:	4c 0f af c9          	imul   %rcx,%r9
   133c7:	48                   	rex.W
   133c8:	41 bb 05 00 00 00    	mov    $0x5,%r11d
   133ce:	41 bf 01 00 00 4c    	mov    $0x4c000001,%r15d
   133d4:	29 c7                	sub    %eax,%edi
   133d6:	c1 e6 35             	shl    $0x35,%esi
   133d9:	01 00                	add    %eax,(%rax)
   133db:	00 00                	add    %al,(%rax)
   133dd:	c6 44 24 7c 00       	movb   $0x0,0x7c(%rsp)
   133e2:	c6 44 24 20 01       	movb   $0x1,0x20(%rsp)
   133e7:	48 c7 44 0f 8f d1 02 	movq   $0x2d1,-0x71(%rdi,%rcx,1)
   133ee:	00 00 
   133f0:	48 c7 c6 f7 02 00 00 	mov    $0x2f7,%rsi
   133f7:	8c 9a 01 00 00 00    	mov    %ds,0x1(%rdx)
   133fd:	4d 01 d6             	add    %r10,%r14
   13400:	fc                   	cld    
   13401:	ff                   	(bad)  
   13402:	ff c6                	inc    %esi
   13404:	44 24 26             	rex.R and $0x26,%al
   13407:	01 bd 01 eb f0 00    	add    %edi,0xf0eb01(%rbp)
   1340d:	48 8d 05 2b 68 00 00 	lea    0x682b(%rip),%rax        # 19c3f <_obstack_memory_used@@Base+0x948f>
   13414:	45 31 ff             	xor    %r15d,%r15d
   13417:	41 bb 02 00 00 00    	mov    $0x2,%r11d
   1341d:	48 c7 44 24 18 01 00 	movq   $0x214d0001,0x18(%rsp)
   13424:	4d 21 
   13426:	f8                   	clc    
   13427:	89 44 24 48          	mov    %eax,0x48(%rsp)
   1342b:	e9 4c fc ff ff       	jmp    1307c <_obstack_memory_used@@Base+0x28cc>
   13430:	c6 44 24 26 00       	movb   $0x0,0x26(%rsp)
   13435:	0f 85 db fd ff ff    	jne    13216 <_obstack_memory_used@@Base+0x2a66>
   1343b:	e9 9d fc 4c 89       	jmp    ffffffff894e30dd <obstack_alloc_failed_handler@@Base+0xffffffff894c103d>
   13440:	c6                   	(bad)  
   13441:	18 00                	sbb    %al,(%rax)
   13443:	00 00                	add    %al,(%rax)
   13445:	e9 0f 8f 93 fd       	jmp    fffffffffd94c359 <obstack_alloc_failed_handler@@Base+0xfffffffffd92a2b9>
   1344a:	ff                   	(bad)  
   1344b:	ff 00                	incl   (%rax)
   1344d:	00 00                	add    %al,(%rax)
   1344f:	e9 28 fc ff ff       	jmp    1307c <_obstack_memory_used@@Base+0x28cc>
   13454:	85 db                	test   %ebx,%ebx
   13456:	0f 84 17 4c 29 e9    	je     ffffffffe92a8073 <obstack_alloc_failed_handler@@Base+0xffffffffe9285fd3>
   1345c:	c6 44 24 26 01       	movb   $0x1,0x26(%rsp)
   13461:	31 ed                	xor    %ebp,%ebp
   13463:	eb a8                	jmp    1340d <_obstack_memory_used@@Base+0x2c5d>
   13465:	48                   	rex.W
   13466:	48 89 ff             	mov    %rdi,%rdi
   13469:	66 00 00             	data16 add %al,(%rax)
   1346c:	0f 8f b7 03 00 00    	jg     13829 <_obstack_memory_used@@Base+0x3079>
   13472:	01 00                	add    %eax,(%rax)
   13474:	00 49 29             	add    %cl,0x29(%rcx)
   13477:	f3 ff 48 c7          	repz decl -0x39(%rax)
   1347b:	49 ff c7             	inc    %r15
   1347e:	01 4c 29 fb          	add    %ecx,-0x5(%rcx,%rbp,1)
   13482:	41 bb 05 00 00 00    	mov    $0x5,%r11d
   13488:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1348d:	e9 ea fb ff ff       	jmp    1307c <_obstack_memory_used@@Base+0x28cc>
   13492:	e9 33 fe ff ff       	jmp    132ca <_obstack_memory_used@@Base+0x2b1a>
   13497:	31 ed                	xor    %ebp,%ebp
   13499:	45 31 ff             	xor    %r15d,%r15d
   1349c:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   134a3:	00 00 
   134a5:	48 c7                	rex.W (bad) 
   134a7:	49 09 c9             	or     %rcx,%r9
   134aa:	00 00                	add    %al,(%rax)
   134ac:	00 00                	add    %al,(%rax)
   134ae:	e9 c9 fb ff ff       	jmp    1307c <_obstack_memory_used@@Base+0x28cc>
   134b3:	45 31 4c 21 e3       	xor    %r9d,-0x1d(%r9,%riz,1)
   134b8:	fd                   	std    
   134b9:	02 0f                	add    (%rdi),%cl
   134bb:	4d 7c 5d             	rex.WRB jl 1351b <_obstack_memory_used@@Base+0x2d6b>
   134be:	d2 00                	rolb   %cl,(%rax)
   134c0:	4d 85 d9             	test   %r11,%r9
   134c3:	0f 84 48 01 c0 ff    	je     ffffffffffc13611 <obstack_alloc_failed_handler@@Base+0xffffffffffbf1571>
   134c9:	78 04                	js     134cf <_obstack_memory_used@@Base+0x2d1f>
   134cb:	74 23                	je     134f0 <_obstack_memory_used@@Base+0x2d40>
   134cd:	49 8d 41 02          	lea    0x2(%r9),%rax
   134d1:	4c 39 e0             	cmp    %r12,%rax
   134d4:	73 1a                	jae    134f0 <_obstack_memory_used@@Base+0x2d40>
   134d6:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   134db:	c1 e6 10             	shl    $0x10,%esi
   134de:	0f 8c b4 00 00 00    	jl     13598 <_obstack_memory_used@@Base+0x2de8>
   134e4:	0f 85 41 ff ff ff    	jne    1342b <_obstack_memory_used@@Base+0x2c7b>
   134ea:	84 00                	test   %al,(%rax)
   134ec:	49 29 48 89          	sub    %rcx,-0x77(%r8)
   134f0:	f0 d7                	lock xlat %ds:(%rbx)
   134f2:	31 48 c1             	xor    %ecx,-0x3f(%rax)
   134f5:	e3 2a                	jrcxz  13521 <_obstack_memory_used@@Base+0x2d71>
   134f7:	00 00                	add    %al,(%rax)
   134f9:	e9 73 49 31 f2       	jmp    fffffffff2327e71 <obstack_alloc_failed_handler@@Base+0xfffffffff2305dd1>
   134fe:	45 31 c0             	xor    %r8d,%r8d
   13501:	e9 00 03 00 00       	jmp    13806 <_obstack_memory_used@@Base+0x3056>
   13506:	84 4d 09             	test   %cl,0x9(%rbp)
   13509:	00 00                	add    %al,(%rax)
   1350b:	40 88 6c 24 7c       	mov    %bpl,0x7c(%rsp)
   13510:	49 c7 c4 ad ff ff ff 	mov    $0xffffffffffffffad,%r12
   13517:	e9 55 fe ff ff       	jmp    13371 <_obstack_memory_used@@Base+0x2bc1>
   1351c:	b9 72 00 00 00       	mov    $0x72,%ecx
   13521:	31 ed                	xor    %ebp,%ebp
   13523:	41 83 4d 09 e1       	orl    $0xffffffe1,0x9(%r13)
   13528:	b0 fe                	mov    $0xfe,%al
   1352a:	0f 8f 95 fd ff ff    	jg     132c5 <_obstack_memory_used@@Base+0x2b15>
   13530:	d0 0f                	rorb   (%rdi)
   13532:	84 f2                	test   %dh,%dl
   13534:	fc                   	cld    
   13535:	ff                   	(bad)  
   13536:	ff 66 0f             	jmp    *0xf(%rsi)
   13539:	1f                   	(bad)  
   1353a:	84 00                	test   %al,(%rax)
   1353c:	00 00                	add    %al,(%rax)
   1353e:	48 01 d1             	add    %rdx,%rcx
   13541:	48 85 48 89          	test   %rcx,-0x77(%rax)
   13545:	ff 89 eb 4d 21 c4    	decl   -0x3bdeb215(%rcx)
   1354b:	4d 89 e6             	mov    %r12,%r14
   1354e:	4d 89 d4             	mov    %r10,%r12
   13551:	21 e8                	and    %ebp,%eax
   13553:	84 c0                	test   %al,%al
   13555:	0f 84 86 48 c1 e8    	je     ffffffffe8c27de1 <obstack_alloc_failed_handler@@Base+0xffffffffe8c05d41>
   1355b:	35 64 24 78 fd       	xor    $0xfd782464,%eax
   13560:	e8 0b 13 ff 49       	call   4a004870 <obstack_alloc_failed_handler@@Base+0x49fe27d0>
   13565:	0f 8c 2e fd ff ff    	jl     13299 <_obstack_memory_used@@Base+0x2ae9>
   1356b:	00 00                	add    %al,(%rax)
   1356d:	0f 8c 6e fd ff ff    	jl     132e1 <_obstack_memory_used@@Base+0x2b31>
   13573:	bd 01 00 00 4d       	mov    $0x4d000001,%ebp
   13578:	89 d3                	mov    %edx,%ebx
   1357a:	05 c0 0f 84 ff       	add    $0xff840fc0,%eax
   1357f:	fe                   	(bad)  
   13580:	ff                   	(bad)  
   13581:	ff 26                	jmp    *(%rsi)
   13583:	00 31                	add    %dh,(%rcx)
   13585:	f6 41 bb 02          	testb  $0x2,-0x45(%rcx)
   13589:	00 00                	add    %al,(%rax)
   1358b:	00 48 89             	add    %cl,-0x77(%rax)
   1358e:	44 24 48             	rex.R and $0x48,%al
   13591:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   13597:	48                   	rex.W
   13598:	49 01 ff             	add    %rdi,%r15
   1359b:	18 01                	sbb    %al,(%rcx)
   1359d:	00 00                	add    %al,(%rax)
   1359f:	00 c6                	add    %al,%dh
   135a1:	49 c1 e5 37          	shl    $0x37,%r13
   135a5:	48 85 fe             	test   %rdi,%rsi
   135a8:	e1 02                	loope  135ac <_obstack_memory_used@@Base+0x2dfc>
   135aa:	48 29 f9             	sub    %rdi,%rcx
   135ad:	24 50                	and    $0x50,%al
   135af:	00 00                	add    %al,(%rax)
   135b1:	00 00                	add    %al,(%rax)
   135b3:	4d 85 e4             	test   %r12,%r12
   135b6:	0f 49 4d 0f          	cmovns 0xf(%rbp),%ecx
   135ba:	af                   	scas   %es:(%rdi),%eax
   135bb:	ea                   	(bad)  
   135bc:	85 48 01             	test   %ecx,0x1(%rax)
   135bf:	f8                   	clc    
   135c0:	08 00                	or     %al,(%rax)
   135c2:	00 4c 09 eb          	add    %cl,-0x15(%rcx,%rcx,1)
   135c6:	00 00                	add    %al,(%rax)
   135c8:	48 ff c0             	inc    %rax
   135cb:	00 00                	add    %al,(%rax)
   135cd:	41                   	rex.B
   135ce:	4d 29 c4             	sub    %r8,%r12
   135d1:	49 f7 fc             	idiv   %r12
   135d4:	d9 09                	(bad)  (%rcx)
   135d6:	d0 48 09             	rorb   0x9(%rax)
   135d9:	f7 c0 31 ed e9 80    	test   $0x80e9ed31,%eax
   135df:	fc                   	cld    
   135e0:	ff 0f                	decl   (%rdi)
   135e2:	85 dd                	test   %ebx,%ebp
   135e4:	00 00                	add    %al,(%rax)
   135e6:	00 62 00             	add    %ah,0x0(%rdx)
   135e9:	00 00                	add    %al,(%rax)
   135eb:	0f 94 c0             	sete   %al
   135ee:	80 75 d4 26          	xorb   $0x26,-0x2c(%rbp)
   135f2:	00 74 e6 0f          	add    %dh,0xf(%rsi,%riz,8)
   135f6:	b6 6c                	mov    $0x6c,%dh
   135f8:	24 26                	and    $0x26,%al
   135fa:	48 f7 fb             	idiv   %rbx
   135fd:	4d 89 f5             	mov    %r14,%r13
   13600:	4d 89 e6             	mov    %r12,%r14
   13603:	4d 89 d4             	mov    %r10,%r12
   13606:	21 e8                	and    %ebp,%eax
   13608:	e9 46 ff ff ff       	jmp    13553 <_obstack_memory_used@@Base+0x2da3>
   1360d:	b9 6e 00 00 00       	mov    $0x6e,%ecx
   13612:	31 ed                	xor    %ebp,%ebp
   13614:	e9 49 c1 ea 33       	jmp    33ebf762 <obstack_alloc_failed_handler@@Base+0x33e9d6c2>
   13619:	b9 48 89 f3 00       	mov    $0xf38948,%ecx
   1361e:	eb 48                	jmp    13668 <_obstack_memory_used@@Base+0x2eb8>
   13620:	c1 ea 20             	shr    $0x20,%edx
   13623:	26 00 49 c7          	es add %cl,-0x39(%rcx)
   13627:	c0 c3 01             	rol    $0x1,%bl
   1362a:	00 00                	add    %al,(%rax)
   1362c:	31 c0                	xor    %eax,%eax
   1362e:	41                   	rex.B
   1362f:	49 c7 c3 2a 03 00 00 	mov    $0x32a,%r11
   13636:	fd                   	std    
   13637:	c2 83 f0             	ret    $0xf083
   1363a:	01 20                	add    %esp,(%rax)
   1363c:	d0 0f                	rorb   (%rdi)
   1363e:	84 4d 09             	test   %cl,0x9(%rbp)
   13641:	e9 63 03 00 00       	jmp    139a9 <_obstack_memory_used@@Base+0x31f9>
   13646:	17                   	(bad)  
   13647:	03 00                	add    (%rax),%eax
   13649:	e9 eb fd ff ff       	jmp    13439 <_obstack_memory_used@@Base+0x2c89>
   1364e:	8d 4f 01             	lea    0x1(%rdi),%ecx
   13651:	49 39 ca             	cmp    %rcx,%r10
   13654:	76 06                	jbe    1365c <_obstack_memory_used@@Base+0x2eac>
   13656:	43 c6 44 0f 8f 38    	movb   $0x38,-0x71(%r15,%r9,1)
   1365c:	ff                   	(bad)  
   1365d:	ff                   	(bad)  
   1365e:	ff 02                	incl   (%rdx)
   13660:	49 39 ca             	cmp    %rcx,%r10
   13663:	76 4d                	jbe    136b2 <_obstack_memory_used@@Base+0x2f02>
   13665:	31 c2                	xor    %eax,%edx
   13667:	44                   	rex.R
   13668:	3e 02 27             	ds add (%rdi),%ah
   1366b:	49 8d 77 03          	lea    0x3(%r15),%rsi
   1366f:	49 39 f2             	cmp    %rsi,%r10
   13672:	0f 87 23 09 00 00    	ja     13f9b <_obstack_memory_used@@Base+0x37eb>
   13678:	49                   	rex.WB
   13679:	4c 31 49 c7          	xor    %r9,-0x39(%rcx)
   1367d:	c0 5f 01 00          	rcrb   $0x0,0x1(%rdi)
   13681:	00 30                	add    %dh,(%rax)
   13683:	00 00                	add    %al,(%rax)
   13685:	00 e9                	add    %ch,%cl
   13687:	81 fb ff ff b9 23    	cmp    $0x23b9ffff,%ebx
   1368d:	00 00                	add    %al,(%rax)
   1368f:	00 44 89 c0          	add    %al,-0x40(%rcx,%rcx,4)
   13693:	4d 85 c9             	test   %r9,%r9
   13696:	0f 8c 35 03 00 00    	jl     139d1 <_obstack_memory_used@@Base+0x3221>
   1369c:	89 cb                	mov    %ecx,%ebx
   1369e:	e9 04 fc ff ff       	jmp    132a7 <_obstack_memory_used@@Base+0x2af7>
   136a3:	49 0f af 4d 89       	imul   -0x77(%r13),%rcx
   136a8:	dd 31                	fnsave (%rcx)
   136aa:	c0 b9 48 39 d8 00 4d 	sarb   $0x4d,0xd83948(%rcx)
   136b1:	21 d4                	and    %edx,%esp
   136b3:	4d 09 49 c1          	or     %r9,-0x3f(%r9)
   136b7:	e4 21                	in     $0x21,%al
   136b9:	7c 24                	jl     136df <_obstack_memory_used@@Base+0x2f2f>
   136bb:	25 00 48 09 d1       	and    $0xd1094800,%eax
   136c0:	48 29 ca             	sub    %rcx,%rdx
   136c3:	31 ed                	xor    %ebp,%ebp
   136c5:	31 c0                	xor    %eax,%eax
   136c7:	80 7c 24 26 00       	cmpb   $0x0,0x26(%rsp)
   136cc:	0f 85 1e fb ff ff    	jne    131f0 <_obstack_memory_used@@Base+0x2a40>
   136d2:	e9 b9 fc ff ff       	jmp    13390 <_obstack_memory_used@@Base+0x2be0>
   136d7:	b9 76 00 00 00       	mov    $0x76,%ecx
   136dc:	31 4c 85 f2          	xor    %ecx,-0xe(%rbp,%rax,4)
   136e0:	fe                   	(bad)  
   136e1:	ff                   	(bad)  
   136e2:	ff 44 89 c1          	incl   -0x3f(%rcx,%rcx,4)
   136e6:	bb 49 ff c4 ff       	mov    $0xffc4ff49,%ebx
   136eb:	c5 f0 fa             	(bad)
   136ee:	ff                   	(bad)  
   136ef:	ff 0f                	decl   (%rdi)
   136f1:	b6 1b                	mov    $0x1b,%dh
   136f3:	80 fb 3f             	cmp    $0x3f,%bl
   136f6:	0f 8f cc 00 00 00    	jg     137c8 <_obstack_memory_used@@Base+0x3018>
   136fc:	84 db                	test   %bl,%bl
   136fe:	0f 88 f7 fb ff ff    	js     132fb <_obstack_memory_used@@Base+0x2b4b>
   13704:	80 fb 3f             	cmp    $0x3f,%bl
   13707:	0f 87 ee fb ff ff    	ja     132fb <_obstack_memory_used@@Base+0x2b4b>
   1370d:	48 8d 15 48 8f 00 00 	lea    0x8f48(%rip),%rdx        # 1c65c <_obstack_memory_used@@Base+0xbeac>
   13714:	0f b6 c3             	movzbl %bl,%eax
   13717:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1371b:	48 01 d0             	add    %rdx,%rax
   1371e:	3e ff e0             	notrack jmp *%rax
   13721:	b9 0c 0f 84 3e       	mov    $0x3e840f0c,%ecx
   13726:	03 00                	add    (%rax),%eax
   13728:	00 00                	add    %al,(%rax)
   1372a:	00 eb                	add    %ch,%bl
   1372c:	8b b9 09 00 00 48    	mov    0x48000009(%rcx),%edi
   13732:	c7 c0 06 fd ff ff    	mov    $0xfffffd06,%eax
   13738:	83 fd 02             	cmp    $0x2,%ebp
   1373b:	0f 94 c0             	sete   %al
   1373e:	22 44 24 26          	and    0x26(%rsp),%al
   13742:	41 89 c0             	mov    %eax,%r8d
   13745:	0f 84 6d ff ff ff    	je     136b8 <_obstack_memory_used@@Base+0x2f08>
   1374b:	e9 73 fb ff ff       	jmp    132c3 <_obstack_memory_used@@Base+0x2b13>
   13750:	b9 08 00 00 00       	mov    $0x8,%ecx
   13755:	bb 62 00 00 00       	mov    $0x62,%ebx
   1375a:	e9 59 ff ff ff       	jmp    136b8 <_obstack_memory_used@@Base+0x2f08>
   1375f:	48 f7 f9             	idiv   %rcx
   13762:	25 0f 8c 7f b0       	and    $0xb07f8c0f,%eax
   13767:	ff                   	(bad)  
   13768:	ff                   	(bad)  
   13769:	ff 45 31             	incl   0x31(%rbp)
   1376c:	c0 31 c9             	shlb   $0xc9,(%rcx)
   1376f:	f6 44 24 78 01       	testb  $0x1,0x78(%rsp)
   13774:	0f 8f b3 fc ff ff    	jg     1342d <_obstack_memory_used@@Base+0x2c7d>
   1377a:	49 83 c1 01          	add    $0x1,%r9
   1377e:	e9 2d 49 48 c1       	jmp    ffffffffc14980b0 <obstack_alloc_failed_handler@@Base+0xffffffffc1476010>
   13783:	e6 37                	out    %al,$0x37
   13785:	00 00                	add    %al,(%rax)
   13787:	00 0f                	add    %cl,(%rdi)
   13789:	84 9a 01 00 00 26    	test   %bl,0x26000001(%rdx)
   1378f:	ff                   	(bad)  
   13790:	ff                   	(bad)  
   13791:	ff                   	(bad)  
   13792:	bb 20 00 00 00       	mov    $0x20,%ebx
   13797:	e9 0b fb ff 4c       	jmp    4d0132a7 <obstack_alloc_failed_handler@@Base+0x4cff1207>
   1379c:	01 cf                	add    %ecx,%edi
   1379e:	00 4c 0f af          	add    %cl,-0x51(%rdi,%rcx,1)
   137a2:	48 01 ff             	add    %rdi,%rdi
   137a5:	00 eb                	add    %ch,%bl
   137a7:	8f                   	(bad)  
   137a8:	b9 0a 00 00 00       	mov    $0xa,%ecx
   137ad:	bb 6e 00 00 00       	mov    $0x6e,%ebx
   137b2:	eb 49                	jmp    137fd <_obstack_memory_used@@Base+0x304d>
   137b4:	0f 4c 0f             	cmovl  (%rdi),%ecx
   137b7:	af                   	scas   %es:(%rdi),%eax
   137b8:	d3 bb 61 00 00 00    	sarl   %cl,0x61(%rbx)
   137be:	e9 0f eb 34 fe       	jmp    fffffffffe3622d2 <obstack_alloc_failed_handler@@Base+0xfffffffffe340232>
   137c3:	ff                   	(bad)  
   137c4:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
   137c8:	80 fb 7a             	cmp    $0x7a,%bl
   137cb:	7f 73                	jg     13840 <_obstack_memory_used@@Base+0x3090>
   137cd:	80 fb 40             	cmp    $0x40,%bl
   137d0:	0f 84 25 49 89 f5    	je     fffffffff58a80fb <obstack_alloc_failed_handler@@Base+0xfffffffff588605b>
   137d6:	8d 4b bf             	lea    -0x41(%rbx),%ecx
   137d9:	b8 01 00 00 00       	mov    $0x1,%eax
   137de:	48 ba ff ff ff 53 ff 	movabs $0x3ffffff53ffffff,%rdx
   137e5:	ff ff 03 
   137e8:	48 d3 e0             	shl    %cl,%rax
   137eb:	48 85 d0             	test   %rdx,%rax
   137ee:	0f 85 74 fb ff ff    	jne    13368 <_obstack_memory_used@@Base+0x2bb8>
   137f4:	a9 00 00 48 01       	test   $0x1480000,%eax
   137f9:	ff 85 a6 fa ff 0f    	incl   0xffffaa6(%rbp)
   137ff:	8f c9 02 00          	(bad)
   13803:	00 f3                	add    %dh,%bl
   13805:	fa                   	cli    
   13806:	ff                   	(bad)  
   13807:	ff 4c 48 c1          	decl   -0x3f(%rax,%rcx,2)
   1380b:	e1 0c                	loope  13819 <_obstack_memory_used@@Base+0x3069>
   1380d:	84 49 49             	test   %cl,0x49(%rcx)
   13810:	c1 e7 37             	shl    $0x37,%edi
   13813:	00 00                	add    %al,(%rax)
   13815:	24 25                	and    $0x25,%al
   13817:	22 54 24 26          	and    0x26(%rsp),%dl
   1381b:	48 83 48 c7 e9       	orq    $0xffffffffffffffe9,-0x39(%rax)
   13820:	56                   	push   %rsi
   13821:	fe                   	(bad)  
   13822:	ff                   	(bad)  
   13823:	ff e4                	jmp    *%rsp
   13825:	24 41                	and    $0x41,%al
   13827:	89 d0                	mov    %edx,%eax
   13829:	0f 85 08 04 00 00    	jne    13c37 <_obstack_memory_used@@Base+0x3487>
   1382f:	b9 5c 00 48 c1       	mov    $0xc148005c,%ecx
   13834:	e2 1f                	loop   13855 <_obstack_memory_used@@Base+0x30a5>
   13836:	fe                   	(bad)  
   13837:	ff                   	(bad)  
   13838:	ff 0f                	decl   (%rdi)
   1383a:	1f                   	(bad)  
   1383b:	80 00 0f             	addb   $0xf,(%rax)
   1383e:	85 b5 03 00 00 0f    	test   %esi,0xf000003(%rbp)
   13844:	84 87 04 00 00 0f    	test   %al,0xf000004(%rdi)
   1384a:	8e df                	mov    %edi,%ds
   1384c:	02 00                	add    (%rax),%al
   1384e:	00 b9 7e 00 0f 84    	add    %bh,-0x7bf0ff82(%rcx)
   13854:	84 01                	test   %al,(%rcx)
   13856:	00 00                	add    %al,(%rax)
   13858:	84 33                	test   %dh,(%rbx)
   1385a:	fe 0f                	decb   (%rdi)
   1385c:	84 ef                	test   %ch,%bh
   1385e:	02 00                	add    (%rax),%al
   13860:	00 49 31             	add    %cl,0x31(%rcx)
   13863:	c0 84 49 39 f4 ff 48 	rolb   $0x8d,0x48fff439(%rcx,%rcx,2)
   1386a:	8d 
   1386b:	4d 39 d9             	cmp    %r11,%r9
   1386e:	00 00                	add    %al,(%rax)
   13870:	00 0f                	add    %cl,(%rdi)
   13872:	84 8d 01 00 00 00    	test   %cl,0x1(%rbp)
   13878:	49 89 c2             	mov    %rax,%r10
   1387b:	8c 03                	mov    %es,(%rbx)
   1387d:	00 00                	add    %al,(%rax)
   1387f:	44 24 60             	rex.R and $0x60,%al
   13882:	49 83 fc 4d          	cmp    $0x4d,%r12
   13886:	09 e6                	or     %esp,%esi
   13888:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1388d:	4c 74 21             	rex.WR je 138b1 <_obstack_memory_used@@Base+0x3101>
   13890:	24 38                	and    $0x38,%al
   13892:	44 88 5c 24 30       	mov    %r11b,0x30(%rsp)
   13897:	4c                   	rex.WR
   13898:	49 0f af 49 c1       	imul   -0x3f(%r9),%rcx
   1389d:	48 c1 e9 25          	shr    $0x25,%rcx
   138a1:	ff                   	(bad)  
   138a2:	ff 0f                	decl   (%rdi)
   138a4:	ff                   	(bad)  
   138a5:	ff 48 ff             	decl   -0x1(%rax)
   138a8:	c2 24 38             	ret    $0x3824
   138ab:	4c                   	rex.WR
   138ac:	48 39 d0             	cmp    %rdx,%rax
   138af:	0f 8c 66 fc ff ff    	jl     1351b <_obstack_memory_used@@Base+0x2d6b>
   138b5:	ff                   	(bad)  
   138b6:	ff                   	(bad)  
   138b7:	e9 b6 44 24 27       	jmp    27257d72 <obstack_alloc_failed_handler@@Base+0x27235cd2>
   138bc:	49 89 c4             	mov    %rax,%r12
   138bf:	48 8d 84 24 ac 00 00 	lea    0xac(%rsp),%rax
   138c6:	00 
   138c7:	44 88 44 24 7d       	mov    %r8b,0x7d(%rsp)
   138cc:	31 ff                	xor    %edi,%edi
   138ce:	48 89 44 49 c1       	mov    %rax,-0x3f(%rcx,%rcx,2)
   138d3:	e4 12                	in     $0x12,%al
   138d5:	4c 24 4c             	rex.WR and $0x4c,%al
   138d8:	01 ce                	add    %ecx,%esi
   138da:	64 24 28             	fs and $0x28,%al
   138dd:	44 88 5c 24 7f       	mov    %r11b,0x7f(%rsp)
   138e2:	40 88 6c 24 27       	mov    %bpl,0x27(%rsp)
   138e7:	4c e9 e3 4d 01 c1    	rex.WR jmp ffffffffc10286d0 <obstack_alloc_failed_handler@@Base+0xffffffffc1006630>
   138ed:	00 00                	add    %al,(%rax)
   138ef:	4d 89 e8             	mov    %r13,%r8
   138f2:	24 70                	and    $0x70,%al
   138f4:	44 89 6c 24 40       	mov    %r13d,0x40(%rsp)
   138f9:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
   138fe:	4c 8b 74 e9 40       	mov    0x40(%rcx,%rbp,8),%r14
   13903:	4c 09 f3             	or     %r14,%rbx
   13906:	7e 48                	jle    13950 <_obstack_memory_used@@Base+0x31a0>
   13908:	89 fb                	mov    %edi,%ebx
   1390a:	49                   	rex.WB
   1390b:	4d 29 f7             	sub    %r14,%r15
   1390e:	02 00                	add    (%rax),%al
   13910:	00 6c 24 28          	add    %ch,0x28(%rsp)
   13914:	4c 89 f1             	mov    %r14,%rcx
   13917:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   1391c:	4c 8d 49 c7          	lea    -0x39(%rcx),%r9
   13920:	c0 b7 03 00 00 4c 29 	shlb   $0x29,0x4c000003(%rdi)
   13927:	fd                   	std    
   13928:	4e 8d 2c 38          	lea    (%rax,%r15,1),%r13
   1392c:	48 89 ea             	mov    %rbp,%rdx
   1392f:	4c 89 ee             	mov    %r13,%rsi
   13932:	e8 79 0f ff ff       	call   48b0 <mbrtowc@plt>
   13937:	49 89 c4             	mov    %rax,%r12
   1393a:	4c 29 de             	sub    %r11,%rsi
   1393d:	fd                   	std    
   1393e:	0f 86 6c 05 49 c1    	jbe    ffffffffc14a3eb0 <obstack_alloc_failed_handler@@Base+0xffffffffc1481e10>
   13944:	e7 2a                	out    %eax,$0x2a
   13946:	ed                   	in     (%dx),%eax
   13947:	0f 84 63 05 00 00    	je     13eb0 <_obstack_memory_used@@Base+0x3700>
   1394d:	31 0f                	xor    %ecx,(%rdi)
   1394f:	8c 4d 09             	mov    %cs,0x9(%rbp)
   13952:	fc                   	cld    
   13953:	ff 84 c0 0f 84 ff 06 	incl   0x6ff840f(%rax,%rax,8)
   1395a:	00 49 39             	add    %cl,0x39(%rcx)
   1395d:	c4                   	(bad)  
   1395e:	49 39 fc             	cmp    %rdi,%r12
   13961:	84 5d 05             	test   %bl,0x5(%rbp)
   13964:	00 00                	add    %al,(%rax)
   13966:	49 83 fc fe          	cmp    $0xfffffffffffffffe,%r12
   1396a:	0f 84 74 07 00 00    	je     140e4 <_obstack_memory_used@@Base+0x3934>
   13970:	83 7c 24 40 4c       	cmpl   $0x4c,0x40(%rsp)
   13975:	31 d2                	xor    %edx,%edx
   13977:	80 49 c7 c2          	orb    $0xc2,-0x39(%rcx)
   1397b:	f2 02 00             	repnz add (%rax),%al
   1397e:	00 05 00 00 8b bc    	add    %al,-0x43750000(%rip)        # ffffffffbc8c3984 <obstack_alloc_failed_handler@@Base+0xffffffffbc8a18e4>
   13984:	4c 01 4d 29          	add    %r9,0x29(%rbp)
   13988:	49 c1 ee 23          	shr    $0x23,%r14
   1398c:	ff                   	(bad)  
   1398d:	ff                   	(bad)  
   1398e:	bf 00 00 00 00       	mov    $0x0,%edi
   13993:	49 21 ce             	and    %rcx,%r14
   13996:	b6 0f                	mov    $0xf,%dh
   13998:	84 f5                	test   %dh,%ch
   1399a:	fe                   	(bad)  
   1399b:	ff                   	(bad)  
   1399c:	ff 4c 89 f7          	decl   -0x9(%rcx,%rcx,4)
   139a0:	4c 01 e3             	add    %r12,%rbx
   139a3:	4d 31 d8             	xor    %r11,%r8
   139a6:	27                   	(bad)  
   139a7:	0f 8c bb 01 00 00    	jl     13b68 <_obstack_memory_used@@Base+0x33b8>
   139ad:	c0 0f e9             	rorb   $0xe9,(%rdi)
   139b0:	df eb                	fucomip %st(3),%st
   139b2:	d7                   	xlat   %ds:(%rbx)
   139b3:	00 0f                	add    %cl,(%rdi)
   139b5:	4d 21 e7             	and    %r12,%r15
   139b8:	27                   	(bad)  
   139b9:	48                   	rex.W
   139ba:	4d 89 ca             	mov    %r9,%r10
   139bd:	0f b6 44 24 7d       	movzbl 0x7d(%rsp),%eax
   139c2:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   139c7:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   139cc:	74 48                	je     13a16 <_obstack_memory_used@@Base+0x3266>
   139ce:	39 d6                	cmp    %edx,%esi
   139d0:	b6 5c                	mov    $0x5c,%dh
   139d2:	24 7f                	and    $0x7f,%al
   139d4:	0f b6 5c 24 7e       	movzbl 0x7e(%rsp),%ebx
   139d9:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   139e0:	00 
   139e1:	49 29 d0             	sub    %rdx,%r8
   139e4:	24 68                	and    $0x68,%al
   139e6:	83 f2 01             	xor    $0x1,%edx
   139e9:	4c 8b 54 24 70       	mov    0x70(%rsp),%r10
   139ee:	44 8b 6c 24 40       	mov    0x40(%rsp),%r13d
   139f3:	22 54 24 25          	and    0x25(%rsp),%dl
   139f7:	48 83 ff 01          	cmp    $0x1,%rdi
   139fb:	0f 49 31             	cmovns (%rcx),%esi
   139fe:	d0 f7                	shl    %bh
   13a00:	ff 48 89             	decl   -0x77(%rax)
   13a03:	f9                   	stc    
   13a04:	40 88 6c 24 27       	mov    %bpl,0x27(%rsp)
   13a09:	48 8b 7c 4d 0f       	mov    0xf(%rbp,%rcx,2),%rdi
   13a0e:	af                   	scas   %es:(%rdi),%eax
   13a0f:	f8                   	clc    
   13a10:	0f b6 6c 24 26       	movzbl 0x26(%rsp),%ebp
   13a15:	0f 8c fa fd ff ff    	jl     13815 <_obstack_memory_used@@Base+0x3065>
   13a1b:	00 00                	add    %al,(%rax)
   13a1d:	0f 1f 49 09          	nopl   0x9(%rcx)
   13a21:	f4                   	hlt    
   13a22:	e9 1c 02 00 49       	jmp    49013c43 <obstack_alloc_failed_handler@@Base+0x48ff1ba3>
   13a27:	f7 fe                	idiv   %esi
   13a29:	31 f0                	xor    %esi,%eax
   13a2b:	84 ed                	test   %ch,%ch
   13a2d:	0f 85 ff 05 00 0f    	jne    f014032 <obstack_alloc_failed_handler@@Base+0xeff1f92>
   13a33:	8f                   	(bad)  
   13a34:	10 03                	adc    %al,(%rbx)
   13a36:	00 00                	add    %al,(%rax)
   13a38:	49 0f af ce          	imul   %r14,%rcx
   13a3c:	74 2f                	je     13a6d <_obstack_memory_used@@Base+0x32bd>
   13a3e:	4d 39 fa             	cmp    %r15,%r10
   13a41:	4c 09 db             	or     %r11,%rbx
   13a44:	4d 0f af cc          	imul   %r12,%r9
   13a48:	49 8d 77 01          	lea    0x1(%r15),%rsi
   13a4c:	49 0f 85 b5 02 00 00 	rex.WB jne 13d08 <_obstack_memory_used@@Base+0x3558>
   13a53:	44                   	rex.R
   13a54:	49 31 fb             	xor    %rdi,%r11
   13a57:	49 8d 77 02          	lea    0x2(%r15),%rsi
   13a5b:	4d 09 c0             	or     %r8,%r8
   13a5e:	4d 29 d2             	sub    %r10,%r10
   13a61:	4c 09 cf             	or     %r9,%rdi
   13a64:	4c                   	rex.WR
   13a65:	49 ff c2             	inc    %r10
   13a68:	c7 03 49 31 f5 4d    	movl   $0x4df53149,(%rbx)
   13a6e:	39 fa                	cmp    %edi,%edx
   13a70:	76 48                	jbe    13aba <_obstack_memory_used@@Base+0x330a>
   13a72:	ff c1                	inc    %ecx
   13a74:	4c                   	rex.WR
   13a75:	4d                   	rex.WRB
   13a76:	4d 21 f5             	and    %r14,%r13
   13a79:	47 01 49 39          	rex.RXB add %r9d,0x39(%r9)
   13a7d:	49 f7 ff             	idiv   %r15
   13a80:	48 c7 c3 76 fd ff ff 	mov    $0xfffffffffffffd76,%rbx
   13a87:	30 43 88             	xor    %al,-0x78(%rbx)
   13a8a:	44                   	rex.R
   13a8b:	3e 0f 8c f1 00 00 49 	jl,pt  49013b83 <obstack_alloc_failed_handler@@Base+0x48ff1ae3>
   13a92:	01 c0                	add    %eax,%eax
   13a94:	76 10                	jbe    13aa6 <_obstack_memory_used@@Base+0x32f6>
   13a96:	89 49 c1             	mov    %ecx,-0x3f(%rcx)
   13a99:	ed                   	in     (%dx),%eax
   13a9a:	17                   	(bad)  
   13a9b:	83 e0 07             	and    $0x7,%eax
   13a9e:	83 c0 30             	add    $0x30,%eax
   13aa1:	43                   	rex.XB
   13aa2:	48 ff c1             	inc    %rcx
   13aa5:	02 7f a5             	add    -0x5b(%rdi),%bh
   13aa8:	07                   	(bad)  
   13aa9:	49 83 c1 01          	add    $0x1,%r9
   13aad:	49 83 48 ff c0       	orq    $0xffffffffffffffc0,-0x1(%r8)
   13ab2:	c3                   	ret    
   13ab3:	30 4c 39 c9          	xor    %cl,-0x37(%rcx,%rdi,1)
   13ab7:	0f 86 92 05 00 00    	jbe    1404f <_obstack_memory_used@@Base+0x389f>
   13abd:	89 d6                	mov    %edx,%esi
   13abf:	48 f7 fe             	idiv   %rsi
   13ac2:	76 04                	jbe    13ac8 <_obstack_memory_used@@Base+0x3318>
   13ac4:	43 88 1c 3e          	mov    %bl,(%r14,%r15,1)
   13ac8:	42 0f b6 1c 0f       	movzbl (%rdi,%r9,1),%ebx
   13acd:	49 83 c7 01          	add    $0x1,%r15
   13ad1:	84 d2                	test   %dl,%dl
   13ad3:	48 c1 ef 32          	shr    $0x32,%rdi
   13ad7:	ff                   	(bad)  
   13ad8:	ff 89 f0 83 4c 01    	decl   0x14c83f0(%rcx)
   13ade:	f1                   	int1   
   13adf:	21 4d 01             	and    %ecx,0x1(%rbp)
   13ae2:	d7                   	xlat   %ds:(%rbx)
   13ae3:	f9                   	stc    
   13ae4:	74 0e                	je     13af4 <_obstack_memory_used@@Base+0x3344>
   13ae6:	4d 39 fa             	cmp    %r15,%r10
   13ae9:	76 05                	jbe    13af0 <_obstack_memory_used@@Base+0x3340>
   13aeb:	43 c6 04 4d 39 e5 49 	movb   $0xc0,-0x38b61ac7(,%r9,2)
   13af2:	c7 c0 
   13af4:	be 00 00 00 4c       	mov    $0x4c000000,%esi
   13af9:	39 c9                	cmp    %ecx,%ecx
   13afb:	4c 0f af fa          	imul   %rdx,%r15
   13aff:	00 00                	add    %al,(%rax)
   13b01:	84 c0                	test   %al,%al
   13b03:	0f 84 69 05 4c 29    	je     294d4072 <obstack_alloc_failed_handler@@Base+0x294b1fd2>
   13b09:	e2 39                	loop   13b44 <_obstack_memory_used@@Base+0x3394>
   13b0b:	fa                   	cli    
   13b0c:	76 05                	jbe    13b13 <_obstack_memory_used@@Base+0x3363>
   13b0e:	43 c6 04 0f 8c       	movb   $0x8c,(%r15,%r9,1)
   13b13:	c7                   	(bad)  
   13b14:	fd                   	std    
   13b15:	ff                   	(bad)  
   13b16:	ff 49 39             	decl   0x39(%rcx)
   13b19:	c2 49 ff             	ret    $0xff49
   13b1c:	c0 fd ff             	sar    $0xff,%ch
   13b1f:	0f 85 e1 fd ff ff    	jne    13906 <_obstack_memory_used@@Base+0x3156>
   13b25:	f7 f8                	idiv   %eax
   13b27:	48 01 f8             	add    %rdi,%rax
   13b2a:	31 db                	xor    %ebx,%ebx
   13b2c:	eb 91                	jmp    13abf <_obstack_memory_used@@Base+0x330f>
   13b2e:	b9 7b 00 00 00       	mov    $0x7b,%ecx
   13b33:	80 fb 7b             	cmp    $0x7b,%bl
   13b36:	0f 85 4c 0f af df    	jne    ffffffffdfb04a88 <obstack_alloc_failed_handler@@Base+0xffffffffdfae29e8>
   13b3c:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13b40:	0f 84 99 01 00 4d    	je     4d013cdf <obstack_alloc_failed_handler@@Base+0x4cff1c3f>
   13b46:	09 c4                	or     %eax,%esp
   13b48:	0f 1f 84 00 49 ff c4 	nopl   0xfc4ff49(%rax,%rax,1)
   13b4f:	0f 
   13b50:	85 48 f7             	test   %ecx,-0x9(%rax)
   13b53:	fe 00                	incb   (%rax)
   13b55:	84 36                	test   %dh,(%rsi)
   13b57:	fb                   	sti    
   13b58:	ff                   	(bad)  
   13b59:	ff 66 0f             	jmp    *0xf(%rsi)
   13b5c:	1f                   	(bad)  
   13b5d:	44 00 00             	add    %r8b,(%rax)
   13b60:	41 83 fd 02          	cmp    $0x2,%r13d
   13b64:	0f 94 c2             	sete   %dl
   13b67:	31 ed                	xor    %ebp,%ebp
   13b69:	e9 03 f8 ff ff       	jmp    13371 <_obstack_memory_used@@Base+0x2bc1>
   13b6e:	66 90                	xchg   %ax,%ax
   13b70:	0f 84 97 01 00 00    	je     13d0d <_obstack_memory_used@@Base+0x355d>
   13b76:	fe                   	(bad)  
   13b77:	ff                   	(bad)  
   13b78:	ff                   	(bad)  
   13b79:	db 0f                	fisttpl (%rdi)
   13b7b:	48 c7                	rex.W (bad) 
   13b7d:	4c 21 de             	and    %r11,%rsi
   13b80:	ff 0f                	decl   (%rdi)
   13b82:	85 9e 01 00 00 ff    	test   %ebx,-0xffffff(%rsi)
   13b88:	ff 48 8d             	decl   -0x73(%rax)
   13b8b:	4c 89 e0             	mov    %r12,%rax
   13b8e:	4d 03 00             	add    (%r8),%r8
   13b91:	00 c3                	add    %al,%bl
   13b93:	48                   	rex.W
   13b94:	49 29 0f             	sub    %rcx,(%r15)
   13b97:	84 eb                	test   %ch,%bl
   13b99:	02 00                	add    (%rax),%al
   13b9b:	00 e0                	add    %ah,%al
   13b9d:	0f 1f 00             	nopl   (%rax)
   13ba0:	31 c9                	xor    %ecx,%ecx
   13ba2:	e9 39 49 c1 e3       	jmp    ffffffffe3c284e0 <obstack_alloc_failed_handler@@Base+0xffffffffe3c06440>
   13ba7:	16                   	(bad)  
   13ba8:	01 00                	add    %eax,(%rax)
   13baa:	49                   	rex.WB
   13bab:	49 0f af d8          	imul   %r8,%rbx
   13baf:	c2 45 31             	ret    $0x3145
   13bb2:	c0 31 ed             	shlb   $0xed,(%rcx)
   13bb5:	e9 ed f6 ff ff       	jmp    132a7 <_obstack_memory_used@@Base+0x2af7>
   13bba:	49 31 f9             	xor    %rdi,%r9
   13bbd:	b9 23 00 e9 cf       	mov    $0xcfe90023,%ecx
   13bc2:	fe                   	(bad)  
   13bc3:	ff                   	(bad)  
   13bc4:	ff                   	(bad)  
   13bc5:	ff 48 4c             	decl   0x4c(%rax)
   13bc8:	21 c9                	and    %ecx,%ecx
   13bca:	18 fb                	sbb    %bh,%bl
   13bcc:	ff                   	(bad)  
   13bcd:	ff 66 4c             	jmp    *0x4c(%rsi)
   13bd0:	09 cf                	or     %ecx,%edi
   13bd2:	7a 0f                	jp     13be3 <_obstack_memory_used@@Base+0x3433>
   13bd4:	8f                   	(bad)  
   13bd5:	9f                   	lahf   
   13bd6:	00 4c 49 01          	add    %cl,0x1(%rcx,%rcx,2)
   13bda:	f5                   	cmc    
   13bdb:	48                   	rex.W
   13bdc:	49 85 cb             	test   %rcx,%r11
   13bdf:	f7 ff                	idiv   %edi
   13be1:	ff 8d 4b 49 21 f5    	decl   -0xadeb6b5(%rbp)
   13be7:	00 00                	add    %al,(%rax)
   13be9:	00 48 ba             	add    %cl,-0x46(%rax)
   13bec:	ff                   	(bad)  
   13bed:	ff                   	(bad)  
   13bee:	ff 53 ff             	call   *-0x1(%rbx)
   13bf1:	ff                   	(bad)  
   13bf2:	ff 03                	incl   (%rbx)
   13bf4:	48 d3 e0             	shl    %cl,%rax
   13bf7:	31 c9                	xor    %ecx,%ecx
   13bf9:	48 85 d0             	test   %rdx,%rax
   13bfc:	0f 85 de 4d 01 cb    	jne    ffffffffcb0289e0 <obstack_alloc_failed_handler@@Base+0xffffffffcb006940>
   13c02:	89 0f                	mov    %ecx,(%rdi)
   13c04:	8c de                	mov    %ds,%esi
   13c06:	03 49 f7             	add    -0x9(%rcx),%ecx
   13c09:	f9                   	stc    
   13c0a:	00 a4 0f 85 4e ff ff 	add    %ah,-0xb17b(%rdi,%rcx,1)
   13c11:	ff 80 fb 49 f7 e9    	incl   -0x1608b605(%rax)
   13c17:	e8 fd ff ff 0f       	call   10013c19 <obstack_alloc_failed_handler@@Base+0xfff1b79>
   13c1c:	b6 74                	mov    $0x74,%dh
   13c1e:	24 26                	and    $0x26,%al
   13c20:	40 84 74 24 25       	test   %sil,0x25(%rsp)
   13c25:	0f 84 69 07 00 00    	je     14394 <_obstack_memory_used@@Base+0x3be4>
   13c2b:	48 83 7c 24 18 48    	cmpq   $0x48,0x18(%rsp)
   13c31:	c7 c3 23 01 00 00    	mov    $0x123,%ebx
   13c37:	48 ff 49 89          	decq   -0x77(%rcx)
   13c3b:	ce                   	(bad)  
   13c3c:	89 4c 29 de          	mov    %ecx,-0x22(%rcx,%rbp,1)
   13c40:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   13c45:	0f 1f 00             	nopl   (%rax)
   13c48:	84 c0                	test   %al,%al
   13c4a:	0f 84 24 f6 ff ff    	je     13274 <_obstack_memory_used@@Base+0x2ac4>
   13c50:	49 31 cc             	xor    %rcx,%r12
   13c53:	8c 5f 4d             	mov    %ds,0x4d(%rdi)
   13c56:	89 ea                	mov    %ebp,%edx
   13c58:	3e 27                	ds (bad) 
   13c5a:	49 8d 4d 31          	lea    0x31(%r13),%rcx
   13c5e:	d3 20                	shll   %cl,(%rax)
   13c60:	03 00                	add    (%rax),%eax
   13c62:	00 43 c6             	add    %al,-0x3a(%rbx)
   13c65:	44                   	rex.R
   13c66:	3e 4c 21 e7          	ds and %r12,%rdi
   13c6a:	83 4d 89 c2          	orl    $0xffffffc2,-0x77(%rbp)
   13c6e:	31 db                	xor    %ebx,%ebx
   13c70:	e9 ff f5 0f 85       	jmp    ffffffff85113274 <obstack_alloc_failed_handler@@Base+0xffffffff850f11d4>
   13c75:	4d 03 00             	add    (%r8),%r8
   13c78:	e9 99 00 00 00       	jmp    13d16 <_obstack_memory_used@@Base+0x3566>
   13c7d:	7e 49                	jle    13cc8 <_obstack_memory_used@@Base+0x3518>
   13c7f:	21 f9                	and    %edi,%ecx
   13c81:	80 fb 7e             	cmp    $0x7e,%bl
   13c84:	0f 85 6e f6 ff ff    	jne    132f8 <_obstack_memory_used@@Base+0x2b48>
   13c8a:	4d                   	rex.WRB
   13c8b:	48 29 db             	sub    %rbx,%rbx
   13c8e:	84 19                	test   %bl,(%rcx)
   13c90:	07                   	(bad)  
   13c91:	00 00                	add    %al,(%rax)
   13c93:	b9 49 01 c6 00       	mov    $0xc60149,%ecx
   13c98:	41 83 fd 02          	cmp    $0x2,%r13d
   13c9c:	41 89 c0             	mov    %eax,%r8d
   13c9f:	0f 94 4c 31 ee       	sete   -0x12(%rcx,%rsi,1)
   13ca4:	e9 c8 f6 ff ff       	jmp    13371 <_obstack_memory_used@@Base+0x2bc1>
   13ca9:	45 31 c0             	xor    %r8d,%r8d
   13cac:	b9 4d 29 da 00       	mov    $0xda294d,%ecx
   13cb1:	80 fb 7b             	cmp    $0x7b,%bl
   13cb4:	0f 84 82 fe ff ff    	je     13b3c <_obstack_memory_used@@Base+0x338c>
   13cba:	b9 7c 00 00 00       	mov    $0x7c,%ecx
   13cbf:	80 fb 7c             	cmp    $0x7c,%bl
   13cc2:	0f 84 98 fe ff ff    	je     13b60 <_obstack_memory_used@@Base+0x33b0>
   13cc8:	e9 2e f6 ff ff       	jmp    132fb <_obstack_memory_used@@Base+0x2b4b>
   13ccd:	0f 1f 00             	nopl   (%rax)
   13cd0:	b9 7d 00 00 00       	mov    $0x7d,%ecx
   13cd5:	49 83 fc 4d          	cmp    $0x4d,%r12
   13cd9:	39 c8                	cmp    %ecx,%eax
   13cdb:	71 fe                	jno    13cdb <_obstack_memory_used@@Base+0x352b>
   13cdd:	ff                   	(bad)  
   13cde:	ff 48 8b             	decl   -0x75(%rax)
   13ce1:	44 24 10             	rex.R and $0x10,%al
   13ce4:	80 78 01 00          	cmpb   $0x0,0x1(%rax)
   13ce8:	0f 85 72 48 c1 e3    	jne    ffffffffe3c28560 <obstack_alloc_failed_handler@@Base+0xffffffffe3c064c0>
   13cee:	3a 9d f9 ff ff 0f    	cmp    0xffffff9(%rbp),%bl
   13cf4:	1f                   	(bad)  
   13cf5:	44 00 00             	add    %r8b,(%rax)
   13cf8:	45 31 c0             	xor    %r8d,%r8d
   13cfb:	4d 85 f9             	test   %r15,%r9
   13cfe:	f6 29                	imulb  (%rcx)
   13d00:	d1 37                	shll   (%rdi)
   13d02:	fe                   	(bad)  
   13d03:	ff                   	(bad)  
   13d04:	ff 0f                	decl   (%rdi)
   13d06:	1f                   	(bad)  
   13d07:	00 80 48 29 49 09    	add    %al,0x9492948(%rax)
   13d0d:	d7                   	xlat   %ds:(%rbx)
   13d0e:	4d 09 d2             	or     %r10,%r10
   13d11:	84 e5                	test   %ah,%ch
   13d13:	f5                   	cmc    
   13d14:	ff                   	(bad)  
   13d15:	ff 8d 4b bf 4d 0f    	decl   0xf4dbf4b(%rbp)
   13d1b:	84 5a ff             	test   %bl,-0x1(%rdx)
   13d1e:	ff                   	(bad)  
   13d1f:	ff                   	(bad)  
   13d20:	ff                   	(bad)  
   13d21:	ff                   	(bad)  
   13d22:	ff 53 ff             	call   *-0x1(%rbx)
   13d25:	ff                   	(bad)  
   13d26:	ff 03                	incl   (%rbx)
   13d28:	48 d3 e0             	shl    %cl,%rax
   13d2b:	44 89 c1             	mov    %r8d,%ecx
   13d2e:	48 85 d0             	test   %rdx,%rax
   13d31:	0f 85 a9 f4 ff ff    	jne    131e0 <_obstack_memory_used@@Base+0x2a30>
   13d37:	89 d9                	mov    %ebx,%ecx
   13d39:	a9 00 00 00 a4       	test   $0xa4000000,%eax
   13d3e:	0f 85 1c fe ff ff    	jne    13b60 <_obstack_memory_used@@Base+0x33b0>
   13d44:	e9 c9 fe ff ff       	jmp    13c12 <_obstack_memory_used@@Base+0x3462>
   13d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13d50:	80 fb 7d             	cmp    $0x7d,%bl
   13d53:	0f 84 77 ff ff ff    	je     13cd0 <_obstack_memory_used@@Base+0x3520>
   13d59:	7e 11                	jle    13d6c <_obstack_memory_used@@Base+0x35bc>
   13d5b:	44 89 49 f7          	mov    %r9d,-0x9(%rcx)
   13d5f:	f8                   	clc    
   13d60:	7e 0f                	jle    13d71 <_obstack_memory_used@@Base+0x35c1>
   13d62:	8c 23                	mov    %fs,(%rbx)
   13d64:	ff                   	(bad)  
   13d65:	ff 49 48             	decl   0x48(%rcx)
   13d68:	85 c0                	test   %eax,%eax
   13d6a:	ff                   	(bad)  
   13d6b:	ff                   	(bad)  
   13d6c:	b9 7b 00 00 00       	mov    $0x7b,%ecx
   13d71:	80 fb 7b             	cmp    $0x7b,%bl
   13d74:	0f 84 c2 fd ff 48    	je     49013b3c <obstack_alloc_failed_handler@@Base+0x48ff1a9c>
   13d7a:	21 d9                	and    %ebx,%ecx
   13d7c:	00 48 85             	add    %cl,-0x7b(%rax)
   13d7f:	c0 fb 7c             	sar    $0x7c,%bl
   13d82:	0f 84 d8 fd ff ff    	je     13b60 <_obstack_memory_used@@Base+0x33b0>
   13d88:	49 c1 e5 06          	shl    $0x6,%r13
   13d8c:	ff 0f                	decl   (%rdi)
   13d8e:	b6 7c                	mov    $0x7c,%dh
   13d90:	24 26                	and    $0x26,%al
   13d92:	41 83 fd 02          	cmp    $0x2,%r13d
   13d96:	4c 31 de             	xor    %r11,%rsi
   13d99:	4d                   	rex.WRB
   13d9a:	4d 0f af c3          	imul   %r11,%r8
   13d9e:	0f 94 c1             	sete   %cl
   13da1:	21 c2                	and    %eax,%edx
   13da3:	84 d1                	test   %dl,%cl
   13da5:	0f 85 7d 05 00 00    	jne    14328 <_obstack_memory_used@@Base+0x3b78>
   13dab:	83 f7 01             	xor    $0x1,%edi
   13dae:	89 fa                	mov    %edi,%edx
   13db0:	40 20 f8             	and    %dil,%al
   13db3:	0f 84 f1 03 00 00    	je     141aa <_obstack_memory_used@@Base+0x39fa>
   13db9:	80 7c 24 7c 00       	cmpb   $0x0,0x7c(%rsp)
   13dbe:	0f 84 e4 03 00 00    	je     141a8 <_obstack_memory_used@@Base+0x39f8>
   13dc4:	80 7c 24 20 00       	cmpb   $0x0,0x20(%rsp)
   13dc9:	0f 85 1a 05 00 00    	jne    142e9 <_obstack_memory_used@@Base+0x3b39>
   13dcf:	4d 85 d2             	test   %r10,%r10
   13dd2:	4d 89 f5             	mov    %r14,%r13
   13dd5:	0f b6 6c 24 25       	movzbl 0x25(%rsp),%ebp
   13dda:	44 89 49 31          	mov    %r9d,0x31(%rcx)
   13dde:	c4                   	(bad)  
   13ddf:	c0 48 83 7c          	rorb   $0x7c,-0x7d(%rax)
   13de3:	24 50                	and    $0x50,%al
   13de5:	00 4d 89             	add    %cl,-0x77(%rbp)
   13de8:	e6 4d                	out    %al,$0x4d
   13dea:	89 d7                	mov    %edx,%edi
   13dec:	20 d0                	and    %dl,%al
   13dee:	0f 84 eb 04 48 0f    	je     f4942df <obstack_alloc_failed_handler@@Base+0xf47223f>
   13df4:	af                   	scas   %es:(%rdi),%eax
   13df5:	f2 64 49 c1 48 49 c7 	repnz rorq $0xc7,%fs:0x49(%r8)
   13dfc:	c1 68 fe ff          	shrl   $0xff,-0x2(%rax)
   13e00:	ff 5e 00             	lcall  *0x0(%rsi)
   13e03:	0f 85 16 fe ff ff    	jne    13c1f <_obstack_memory_used@@Base+0x346f>
   13e09:	00 41 48             	add    %al,0x48(%rcx)
   13e0c:	29 d6                	sub    %edx,%esi
   13e0e:	00 0f                	add    %cl,(%rdi)
   13e10:	8f                   	(bad)  
   13e11:	d6                   	(bad)  
   13e12:	03 00                	add    (%rax),%eax
   13e14:	00 c6                	add    %al,%dh
   13e16:	44 0f 8f 65 fd ff ff 	rex.R jg 13b82 <_obstack_memory_used@@Base+0x33d2>
   13e1d:	24 18                	and    $0x18,%al
   13e1f:	01 00                	add    %eax,(%rax)
   13e21:	00 00                	add    %al,(%rax)
   13e23:	48 89 44 48 4c       	mov    %rax,0x4c(%rax,%rcx,2)
   13e28:	39 e2                	cmp    %esp,%edx
   13e2a:	f2 ff 48 89          	repnz decl -0x77(%rax)
   13e2e:	fa                   	cli    
   13e2f:	00 80 7c 24 26 4c    	add    %al,0x4c26247c(%rax)
   13e35:	89 c2                	mov    %eax,%edx
   13e37:	8c 10                	mov    %ss,(%rax)
   13e39:	fd                   	std    
   13e3a:	ff                   	(bad)  
   13e3b:	ff b6 6c 24 48 c1    	push   -0x3eb7db94(%rsi)
   13e41:	e3 0c                	jrcxz  13e4f <_obstack_memory_used@@Base+0x369f>
   13e43:	4d 89 f5             	mov    %r14,%r13
   13e46:	4d 89 49 48          	mov    %r9,0x48(%r9)
   13e4a:	29 d9                	sub    %ebx,%ecx
   13e4c:	89 e8                	mov    %ebp,%eax
   13e4e:	e9 49 f7 fe ff       	jmp    359c <free@plt-0x10e4>
   13e53:	0f 1f 4c 21 c6       	nopl   -0x3a(%rcx,%riz,1)
   13e58:	80 7c 24 26 00       	cmpb   $0x0,0x26(%rsp)
   13e5d:	75 48                	jne    13ea7 <_obstack_memory_used@@Base+0x36f7>
   13e5f:	01 d9                	add    %ebx,%ecx
   13e61:	d2 0f                	rorb   %cl,(%rdi)
   13e63:	84 8d 0f 8f 7c 4d    	test   %cl,0x4d7c8f0f(%rbp)
   13e69:	09 c1                	or     %eax,%ecx
   13e6b:	24 50                	and    $0x50,%al
   13e6d:	00 0f                	add    %cl,(%rdi)
   13e6f:	85 81 4c 0f af e3    	test   %eax,-0x1c50f0b4(%rcx)
   13e75:	e9 49 e9 2c 0f       	jmp    f2e27c3 <obstack_alloc_failed_handler@@Base+0xf2c0723>
   13e7a:	74 4a                	je     13ec6 <_obstack_memory_used@@Base+0x3716>
   13e7c:	49 31 df             	xor    %rbx,%r15
   13e7f:	24 7c                	and    $0x7c,%al
   13e81:	48 31 fb             	xor    %rdi,%rbx
   13e84:	03 31                	add    (%rcx),%esi
   13e86:	c0 45 31 db          	rolb   $0xdb,0x31(%rbp)
   13e8a:	49 29 f1             	sub    %rsi,%r9
   13e8d:	00 00                	add    %al,(%rax)
   13e8f:	e9 78 f3 ff 4d       	jmp    4e01320c <obstack_alloc_failed_handler@@Base+0x4dff116c>
   13e94:	49 09 ce             	or     %rcx,%r14
   13e97:	00 80 7c 48 c1 e8    	add    %al,-0x173eb784(%rax)
   13e9d:	16                   	(bad)  
   13e9e:	4c 31 ee             	xor    %r13,%rsi
   13ea1:	f6 c0 b9             	test   $0xb9,%al
   13ea4:	3f                   	(bad)  
   13ea5:	00 00                	add    %al,(%rax)
   13ea7:	00 e9                	add    %ch,%cl
   13ea9:	48 ff 4c 85 f0       	decq   -0x10(%rbp,%rax,4)
   13eae:	1f                   	(bad)  
   13eaf:	00 4d 85             	add    %cl,-0x7b(%rbp)
   13eb2:	e4 0f                	in     $0xf,%al
   13eb4:	49 ff c0             	inc    %r8
   13eb7:	ff                   	(bad)  
   13eb8:	ff 49 83             	decl   -0x7d(%rcx)
   13ebb:	fc                   	cld    
   13ebc:	ff 0f                	decl   (%rdi)
   13ebe:	85 a3 49 89 da 01    	test   %esp,0x1da8949(%rbx)
   13ec4:	00 00                	add    %al,(%rax)
   13ec6:	31 fd                	xor    %edi,%ebp
   13ec8:	ff                   	(bad)  
   13ec9:	ff 24 7d 4c 8b 4c 24 	jmp    *0x244c8b4c(,%rdi,2)
   13ed0:	30 31                	xor    %dh,(%rcx)
   13ed2:	ed                   	in     (%dx),%eax
   13ed3:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   13ed8:	44 0f b6 5c 4d 49    	movzbl 0x49(%rbp,%rcx,2),%r11d
   13ede:	c1 e0 0f             	shl    $0xf,%eax
   13ee1:	24 7e                	and    $0x7e,%al
   13ee3:	4c 8b bc 24 0f 8c 09 	mov    -0x2f673f1(%rsp),%r15
   13eea:	fd 
   13eeb:	ff                   	(bad)  
   13eec:	ff 74 24 68          	push   0x68(%rsp)
   13ef0:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   13ef5:	09 4c 4d 39          	or     %ecx,0x39(%rbp,%rcx,2)
   13ef9:	fb                   	sti    
   13efa:	0f 48 31             	cmovs  (%rcx),%esi
   13efd:	c1 25 e9 f3 fa ff ff 	shll   $0xff,-0x50c17(%rip)        # fffffffffffc32ed <obstack_alloc_failed_handler@@Base+0xfffffffffffa124d>
   13f04:	0f 1f e9             	nop    %ecx
   13f07:	3e fc                	ds cld 
   13f09:	ff                   	(bad)  
   13f0a:	ff                   	(bad)  
   13f0b:	ec                   	in     (%dx),%al
   13f0c:	0f                   	(bad)  
   13f0d:	0f 8c 42 4c 0f af    	jl     ffffffffaf108b55 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e6ab5>
   13f13:	e6 44                	out    %al,$0x44
   13f15:	24 10                	and    $0x10,%al
   13f17:	4a 8d 34 20          	lea    (%rax,%r12,1),%rsi
   13f1b:	4a 0f 8c 18 ff ff ff 	rex.WX jl 13e3a <_obstack_memory_used@@Base+0x368a>
   13f22:	49 01 f3             	add    %rsi,%r11
   13f25:	0f 1f 4d 29          	nopl   0x29(%rbp)
   13f29:	ca 4c 09             	lret   $0x94c
   13f2c:	d3 39                	sarl   %cl,(%rcx)
   13f2e:	d6                   	(bad)  
   13f2f:	0f 84 0f 85 1b 03    	je     31cc444 <obstack_alloc_failed_handler@@Base+0x31aa3a4>
   13f35:	00 00                	add    %al,(%rax)
   13f37:	02 83 e8 5b 4d 0f    	add    0xf4d5be8(%rbx),%al
   13f3d:	48 c1 e1 1e          	shl    $0x1e,%rcx
   13f41:	03 00                	add    (%rax),%eax
   13f43:	00 00                	add    %al,(%rax)
   13f45:	02 00                	add    (%rax),%al
   13f47:	00 00                	add    %al,(%rax)
   13f49:	48 0f a3 c7          	bt     %rax,%rdi
   13f4d:	73 d9                	jae    13f28 <_obstack_memory_used@@Base+0x3778>
   13f4f:	0f b6 0f             	movzbl (%rdi),%ecx
   13f52:	8c bc fc 7f c6 24 28 	mov    %?,0x2824c67f(%rsp,%rdi,8)
   13f59:	4c 8b 4d 39          	mov    0x39(%rbp),%r9
   13f5d:	d1 4c 48 c7          	rorl   -0x39(%rax,%rcx,2)
   13f61:	0f 85 fa 02 00 00    	jne    14261 <_obstack_memory_used@@Base+0x3ab1>
   13f67:	85 48 85             	test   %ecx,-0x7b(%rax)
   13f6a:	fb                   	sti    
   13f6b:	fa                   	cli    
   13f6c:	0b 03                	or     (%rbx),%eax
   13f6e:	00 00                	add    %al,(%rax)
   13f70:	fd                   	std    
   13f71:	31 ed                	xor    %ebp,%ebp
   13f73:	e8 f8 08 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   13f78:	48 01 4c 29 f0       	add    %rcx,-0x10(%rcx,%rbp,1)
   13f7d:	00 00                	add    %al,(%rax)
   13f7f:	00 00                	add    %al,(%rax)
   13f81:	48                   	rex.W
   13f82:	49 c1 e1 29          	shl    $0x29,%r9
   13f86:	0f 8f 9e fc ff ff    	jg     13c2a <_obstack_memory_used@@Base+0x347a>
   13f8c:	1f                   	(bad)  
   13f8d:	44 00 00             	add    %r8b,(%rax)
   13f90:	4c 89 fe             	mov    %r15,%rsi
   13f93:	48 ff c6             	inc    %rsi
   13f96:	76 0b                	jbe    13fa3 <_obstack_memory_used@@Base+0x37f3>
   13f98:	4c 89 da             	mov    %r11,%rdx
   13f9b:	41 c6 04 36 5c       	movb   $0x5c,(%r14,%rsi,1)
   13fa0:	41 89 c3             	mov    %eax,%r11d
   13fa3:	4c                   	rex.WR
   13fa4:	4c 31 d6             	xor    %r10,%rsi
   13fa7:	49                   	rex.WB
   13fa8:	4d 89 dd             	mov    %r11,%r13
   13fab:	4c 01 cb             	add    %r9,%rbx
   13fae:	48 ff c2             	inc    %rdx
   13fb1:	49 8d 41 01          	lea    0x1(%r9),%rax
   13fb5:	4d 29 c9             	sub    %r9,%r9
   13fb8:	00 00                	add    %al,(%rax)
   13fba:	4c e9 26 02 00 00    	rex.WR jmp 141e6 <_obstack_memory_used@@Base+0x3a36>
   13fc0:	d7                   	xlat   %ds:(%rbx)
   13fc1:	44                   	rex.R
   13fc2:	48 85 cf             	test   %rcx,%rdi
   13fc5:	0f b6 44 08 48       	movzbl 0x48(%rax,%rcx,1),%eax
   13fca:	ff c6                	inc    %esi
   13fcc:	24 27                	and    $0x27,%al
   13fce:	83 e8 7c             	sub    $0x7c,%eax
   13fd1:	7a 09                	jp     13fdc <_obstack_memory_used@@Base+0x382c>
   13fd3:	0f 86 af 00 00 00    	jbe    14088 <_obstack_memory_used@@Base+0x38d8>
   13fd9:	0f b6 44 24 25       	movzbl 0x25(%rsp),%eax
   13fde:	83 f0 01             	xor    $0x1,%eax
   13fe1:	08 d0                	or     %dl,%al
   13fe3:	89 e8                	mov    %ebp,%eax
   13fe5:	4c                   	rex.WR
   13fe6:	49 c1 e7 32          	shl    $0x32,%r15
   13fea:	0f e9 76 02          	psubsw 0x2(%rsi),%mm6
   13fee:	00 00                	add    %al,(%rax)
   13ff0:	e9 17 f2 ff ff       	jmp    1320c <_obstack_memory_used@@Base+0x2a5c>
   13ff5:	4d 39 fa             	cmp    %r15,%r10
   13ff8:	76 05                	jbe    13fff <_obstack_memory_used@@Base+0x384f>
   13ffa:	43 c6 04 4c 89       	movb   $0x89,(%r12,%r9,2)
   13fff:	f9                   	stc    
   14000:	8d 47 01             	lea    0x1(%rdi),%eax
   14003:	0f 84 14 fd ff ff    	je     13d1d <_obstack_memory_used@@Base+0x356d>
   14009:	c6 44 3e 48 21       	movb   $0x21,0x48(%rsi,%rdi,1)
   1400e:	d2 ef                	shr    %cl,%bh
   14010:	47 02 49 49          	rex.RXB add 0x49(%r9),%r9b
   14014:	c7                   	(bad)  
   14015:	48 ff c0             	inc    %rax
   14018:	ff                   	(bad)  
   14019:	ff                   	(bad)  
   1401a:	ff 4c 89 e8          	decl   -0x18(%rcx,%rcx,4)
   1401e:	3e 02 27             	ds add (%rdi),%ah
   14021:	e9 56 e9 25 02       	jmp    227297c <obstack_alloc_failed_handler@@Base+0x22508dc>
   14026:	00 00                	add    %al,(%rax)
   14028:	6c                   	insb   (%dx),%es:(%rdi)
   14029:	24 27                	and    $0x27,%al
   1402b:	89 d9                	mov    %ebx,%ecx
   1402d:	e9 16 fc 4c 39       	jmp    394e3c48 <obstack_alloc_failed_handler@@Base+0x394c1ba8>
   14032:	cf                   	iret   
   14033:	89 eb                	mov    %ebp,%ebx
   14035:	4d 89 f5             	mov    %r14,%r13
   14038:	4d 89 e6             	mov    %r12,%r14
   1403b:	4d 89 d4             	mov    %r10,%r12
   1403e:	e9 96 f2 ff ff       	jmp    132d9 <_obstack_memory_used@@Base+0x2b29>
   14043:	0f 4d 89 cb d9 49 c7 	cmovge -0x38b62635(%rcx),%ecx
   1404a:	c7                   	(bad)  
   1404b:	0e                   	(bad)  
   1404c:	01 00                	add    %eax,(%rax)
   1404e:	00 0f                	add    %cl,(%rdi)
   14050:	b6 6c                	mov    $0x6c,%dh
   14052:	24 27                	and    $0x27,%al
   14054:	89 d9                	mov    %ebx,%ecx
   14056:	e9 19 f2 ff ff       	jmp    13274 <_obstack_memory_used@@Base+0x2ac4>
   1405b:	41 0f b6 7d 49       	movzbl 0x49(%r13),%edi
   14060:	c7 c6 ae ff ff ff    	mov    $0xffffffae,%esi
   14066:	48 89 c0             	mov    %rax,%rax
   14069:	ac                   	lods   %ds:(%rsi),%al
   1406a:	00 00                	add    %al,(%rax)
   1406c:	00 e9                	add    %ch,%cl
   1406e:	17                   	(bad)  
   1406f:	f9                   	stc    
   14070:	ff 49 f7             	decl   -0x9(%rcx)
   14073:	fa                   	cli    
   14074:	27                   	(bad)  
   14075:	e9 0f 85 4a fc       	jmp    fffffffffc4bc589 <obstack_alloc_failed_handler@@Base+0xfffffffffc49a4e9>
   1407a:	ff                   	(bad)  
   1407b:	ff                   	(bad)  
   1407c:	b9 30 00 00 0f       	mov    $0xf000030,%ecx
   14081:	8f 06                	pop    (%rsi)
   14083:	01 00                	add    %eax,(%rax)
   14085:	00 ff                	add    %bh,%bh
   14087:	49 c1 ec 37          	shr    $0x37,%r12
   1408b:	76 05                	jbe    14092 <_obstack_memory_used@@Base+0x38e2>
   1408d:	49 c1 e6 3a          	shl    $0x3a,%r14
   14091:	30 48 8d             	xor    %cl,-0x73(%rax)
   14094:	46 02 49 39          	rex.RX add 0x39(%rcx),%r9b
   14098:	c2 49 c1             	ret    $0xc149
   1409b:	e0 2a                	loopne 140c7 <_obstack_memory_used@@Base+0x3917>
   1409d:	ff 0f                	decl   (%rdi)
   1409f:	8f                   	(bad)  
   140a0:	57                   	push   %rdi
   140a1:	02 00                	add    (%rax),%al
   140a3:	00 03                	add    %al,(%rbx)
   140a5:	b9 30 00 00 00       	mov    $0x30,%ecx
   140aa:	e9 2a ff ff 48       	jmp    49013fd9 <obstack_alloc_failed_handler@@Base+0x48ff1f39>
   140af:	01 f0                	add    %esi,%eax
   140b1:	94                   	xchg   %eax,%esp
   140b2:	24 90                	and    $0x90,%al
   140b4:	00 00                	add    %al,(%rax)
   140b6:	00 0f                	add    %cl,(%rdi)
   140b8:	b6 02                	mov    $0x2,%dh
   140ba:	84 c0                	test   %al,%al
   140bc:	0f 84 48 c7 c7 63    	je     63c9080a <obstack_alloc_failed_handler@@Base+0x63c6e76a>
   140c2:	00 00                	add    %al,(%rax)
   140c4:	00 4c 31 d3          	add    %cl,-0x2d(%rcx,%rsi,1)
   140c8:	4d 39 fc             	cmp    %r15,%r12
   140cb:	49 ff                	rex.WB (bad) 
   140cd:	e9 5b 02 00 00       	jmp    1432d <_obstack_memory_used@@Base+0x3b7d>
   140d2:	c7                   	(bad)  
   140d3:	1a 00                	sbb    (%rax),%al
   140d5:	00 00                	add    %al,(%rax)
   140d7:	0f b6 04 3a          	movzbl (%rdx,%rdi,1),%eax
   140db:	84 c0                	test   %al,%al
   140dd:	75 49                	jne    14128 <_obstack_memory_used@@Base+0x3978>
   140df:	ff c3                	inc    %ebx
   140e1:	ef                   	out    %eax,(%dx)
   140e2:	49 f7 e9             	imul   %r9
   140e5:	e1 03                	loope  140ea <_obstack_memory_used@@Base+0x393a>
   140e7:	00 00                	add    %al,(%rax)
   140e9:	48 89 0f             	mov    %rcx,(%rdi)
   140ec:	8c f0                	mov    %?,%eax
   140ee:	02 00                	add    (%rax),%al
   140f0:	00 4c 24 30          	add    %cl,0x30(%rsp)
   140f4:	4c 0f af cb          	imul   %rbx,%r9
   140f8:	f7 f9                	idiv   %ecx
   140fa:	0f b6 5c 24 7e       	movzbl 0x7e(%rsp),%ebx
   140ff:	48 89 fa             	mov    %rdi,%rdx
   14102:	44 0f b6 5c 24 7f    	movzbl 0x7f(%rsp),%r11d
   14108:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   1410f:	00 
   14110:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   14115:	4c e9 70 02 00 00    	rex.WR jmp 1438b <_obstack_memory_used@@Base+0x3bdb>
   1411b:	8b 6c 24 4d          	mov    0x4d(%rsp),%ebp
   1411f:	09 4d 39             	or     %ecx,0x39(%rbp)
   14122:	d4                   	(bad)  
   14123:	af                   	scas   %es:(%rdi),%eax
   14124:	e4 39                	in     $0x39,%al
   14126:	e0 72                	loopne 1419a <_obstack_memory_used@@Base+0x39ea>
   14128:	14 eb                	adc    $0xeb,%al
   1412a:	1b 0f                	sbb    (%rdi),%ecx
   1412c:	1f                   	(bad)  
   1412d:	44 00 00             	add    %r8b,(%rax)
   14130:	48                   	rex.W
   14131:	4c                   	rex.WR
   14132:	4c 0f af 4d 39       	imul   0x39(%rbp),%r9
   14137:	ce                   	(bad)  
   14138:	fc                   	cld    
   14139:	48 0f af da          	imul   %rdx,%rbx
   1413d:	4d 29 f2             	sub    %r14,%r10
   14140:	00 75 ed             	add    %dh,-0x13(%rbp)
   14143:	48 89 d7             	mov    %rdx,%rdi
   14146:	0f b6 54 24 48       	movzbl 0x48(%rsp),%edx
   1414b:	ff c3                	inc    %ebx
   1414d:	48 f7 fe             	idiv   %rsi
   14150:	4c 39 e7             	cmp    %r12,%rdi
   14153:	b6 0c                	mov    $0xc,%dh
   14155:	07                   	(bad)  
   14156:	80 4d 85 e0          	orb    $0xe0,-0x7b(%rbp)
   1415a:	87 91 f3 49 31 f2    	xchg   %edx,-0xdceb60d(%rcx)
   14160:	4d 21 e0             	and    %r12,%r8
   14163:	00 00                	add    %al,(%rax)
   14165:	82                   	(bad)  
   14166:	a3 48 31 f1 d3 ea 83 	movabs %eax,0x314883ead3f13148
   1416d:	48 31 
   1416f:	fe 85 ef 00 00 00    	incb   0xef(%rbp)
   14175:	31 ed                	xor    %ebp,%ebp
   14177:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1417c:	e9 f0 f1 ff ff       	jmp    13371 <_obstack_memory_used@@Base+0x2bc1>
   14181:	48 8d 05 0f 8c a8 02 	lea    0x2a88c0f(%rip),%rax        # 2a9cd97 <obstack_alloc_failed_handler@@Base+0x2a7acf7>
   14188:	00 00                	add    %al,(%rax)
   1418a:	21 d1                	and    %edx,%ecx
   1418c:	01 bd 01 00 00 00    	add    %edi,0x1(%rbp)
   14192:	45 31 ff             	xor    %r15d,%r15d
   14195:	48 c7                	rex.W (bad) 
   14197:	48 ff c0             	inc    %rax
   1419a:	01 00                	add    %eax,(%rax)
   1419c:	00 00                	add    %al,(%rax)
   1419e:	48 89 44 49 31       	mov    %rax,0x31(%rcx,%rcx,2)
   141a3:	c1 d4 ee             	rcl    $0xee,%esp
   141a6:	ff                   	(bad)  
   141a7:	ff 89 c2 48 8b 44    	decl   0x448b48c2(%rcx)
   141ad:	24 48                	and    $0x48,%al
   141af:	48 85 48 48          	test   %rcx,0x48(%rax)
   141b3:	c1 e2 35             	shl    $0x35,%edx
   141b6:	74 2c                	je     141e4 <_obstack_memory_used@@Base+0x3a34>
   141b8:	0f 4d 09             	cmovge (%rcx),%ecx
   141bb:	d7                   	xlat   %ds:(%rbx)
   141bc:	49 c1 e6 1e          	shl    $0x1e,%r14
   141c0:	8b b4 24 98 00 00 00 	mov    0x98(%rsp),%esi
   141c7:	49 21 cc             	and    %rcx,%r12
   141ca:	4c                   	rex.WR
   141cb:	4d 7c 03             	rex.WRB jl 141d1 <_obstack_memory_used@@Base+0x3a21>
   141ce:	39 d2                	cmp    %edx,%edx
   141d0:	76 49                	jbe    1421b <_obstack_memory_used@@Base+0x3a6b>
   141d2:	21 d8                	and    %ebx,%eax
   141d4:	16                   	(bad)  
   141d5:	48 83 c2 01          	add    $0x1,%rdx
   141d9:	e9 d8 00 00 00       	jmp    142b6 <_obstack_memory_used@@Base+0x3b06>
   141de:	c9                   	leave  
   141df:	75 ec                	jne    141cd <_obstack_memory_used@@Base+0x3a1d>
   141e1:	49 89 d7             	mov    %rdx,%r15
   141e4:	4d 39 fa             	cmp    %r15,%r10
   141e7:	0f 87 c5 00 00 00    	ja     142b2 <_obstack_memory_used@@Base+0x3b02>
   141ed:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   141f4:	00 
   141f5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   141fc:	00 00 
   141fe:	0f 85 49 c1 e5 14    	jne    14e7034d <obstack_alloc_failed_handler@@Base+0x14e4e2ad>
   14204:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1420b:	4c 89 f8             	mov    %r15,%rax
   1420e:	5b                   	pop    %rbx
   1420f:	5d                   	pop    %rbp
   14210:	41 5c                	pop    %r12
   14212:	41 5d                	pop    %r13
   14214:	41 5e                	pop    %r14
   14216:	41 5f                	pop    %r15
   14218:	c3                   	ret    
   14219:	45 89 eb             	mov    %r13d,%r11d
   1421c:	4d 89 f5             	mov    %r14,%r13
   1421f:	74 a8                	je     141c9 <_obstack_memory_used@@Base+0x3a19>
   14221:	21 c6                	and    %eax,%esi
   14223:	75 fb                	jne    14220 <_obstack_memory_used@@Base+0x3a70>
   14225:	48 ff c7             	inc    %rdi
   14228:	ff                   	(bad)  
   14229:	ff 44 89 de          	incl   -0x22(%rcx,%rcx,4)
   1422d:	48                   	rex.W
   1422e:	4d 01 c4             	add    %r8,%r12
   14231:	ab                   	stos   %eax,%es:(%rdi)
   14232:	9a                   	(bad)  
   14233:	ff                   	(bad)  
   14234:	ff 44 8b 5c          	incl   0x5c(%rbx,%rcx,4)
   14238:	24 20                	and    $0x20,%al
   1423a:	48 89 0f             	mov    %rcx,(%rdi)
   1423d:	85 55 02             	test   %edx,0x2(%rbp)
   14240:	00 00                	add    %al,(%rax)
   14242:	e9 fa ed ff ff       	jmp    13041 <_obstack_memory_used@@Base+0x2891>
   14247:	44 89 de             	mov    %r11d,%esi
   1424a:	48 89 c7             	mov    %rax,%rdi
   1424d:	e8 8e 9a ff 0f       	call   1000dce0 <obstack_alloc_failed_handler@@Base+0xffebc40>
   14252:	84 92 02 00 00 48    	test   %dl,0x48000002(%rdx)
   14258:	89 84 24 90 00 00 49 	mov    %eax,0x49000090(%rsp)
   1425f:	31 ff                	xor    %edi,%edi
   14261:	49 ff c7             	inc    %r15
   14264:	80 7c 24 26 00       	cmpb   $0x0,0x26(%rsp)
   14269:	75 ae                	jne    14219 <_obstack_memory_used@@Base+0x3a69>
   1426b:	4d 39 fa             	cmp    %r15,%r10
   1426e:	76 05                	jbe    14275 <_obstack_memory_used@@Base+0x3ac5>
   14270:	49 ff c1             	inc    %r9
   14273:	07                   	(bad)  
   14274:	0f 84 48 c1 ef 03    	je     3f103c2 <obstack_alloc_failed_handler@@Base+0x3eee322>
   1427a:	39 d2                	cmp    %edx,%edx
   1427c:	76 06                	jbe    14284 <_obstack_memory_used@@Base+0x3ad4>
   1427e:	43 c6 44 3e 01 22    	movb   $0x22,0x1(%r14,%r15,1)
   14284:	49                   	rex.WB
   14285:	49 89 0f             	mov    %rcx,(%r15)
   14288:	8c 9d 03 00 00 43    	mov    %ds,0x43000003(%rbp)
   1428e:	49 21 da             	and    %rbx,%r10
   14291:	02 22                	add    (%rdx),%ah
   14293:	49 8d 57 03          	lea    0x3(%r15),%rdx
   14297:	49                   	rex.WB
   14298:	48 39 f6             	cmp    %rsi,%rsi
   1429b:	06                   	(bad)  
   1429c:	43 c6 44 3e 03 3f    	movb   $0x3f,0x3(%r14,%r15,1)
   142a2:	49 83 c7 48          	add    $0x48,%r15
   142a6:	39 d2                	cmp    %edx,%edx
   142a8:	31 ed                	xor    %ebp,%ebp
   142aa:	49 31 fe             	xor    %rdi,%r14
   142ad:	e9 27 fd ff ff       	jmp    13fd9 <_obstack_memory_used@@Base+0x3829>
   142b2:	49 0f af f9          	imul   %r9,%rdi
   142b6:	29 f8                	sub    %edi,%eax
   142b8:	00 0f                	add    %cl,(%rdi)
   142ba:	85 9f 03 00 00 e9    	test   %ebx,-0x16fffffd(%rdi)
   142c0:	29 ff                	sub    %edi,%edi
   142c2:	ff 0f                	decl   (%rdi)
   142c4:	84 69 01             	test   %ch,0x1(%rcx)
   142c7:	00 00                	add    %al,(%rax)
   142c9:	48 01 f8             	add    %rdi,%rax
   142cc:	2b 4d 89             	sub    -0x77(%rbp),%ecx
   142cf:	d4                   	(bad)  
   142d0:	4d 31 f8             	xor    %r15,%r8
   142d3:	cd 00                	int    $0x0
   142d5:	00 00                	add    %al,(%rax)
   142d7:	f2 ff                	repnz (bad) 
   142d9:	ff                   	(bad)  
   142da:	e9 02 f0 ff ff       	jmp    132e1 <_obstack_memory_used@@Base+0x2b31>
   142df:	0f b6 54 24 7c       	movzbl 0x7c(%rsp),%edx
   142e4:	e9 c1 fe ff ff       	jmp    141aa <_obstack_memory_used@@Base+0x39fa>
   142e9:	e8 82 05 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   142ee:	41 bd 05 00 00 00    	mov    $0x5,%r13d
   142f4:	45 31 e9             	xor    %r13d,%r9d
   142f7:	40 03 00             	rex add (%rax),%eax
   142fa:	00 01                	add    %al,(%rcx)
   142fc:	00 00                	add    %al,(%rax)
   142fe:	00 48 09             	add    %cl,0x9(%rax)
   14301:	d0 44 24 58          	rolb   0x58(%rsp)
   14305:	48 8d 48 c7          	lea    -0x39(%rax),%rcx
   14309:	c0 aa 02 00 00 44 24 	shrb   $0x24,0x44000002(%rdx)
   14310:	0f 85 ac fe ff ff    	jne    141c2 <_obstack_memory_used@@Base+0x3a12>
   14316:	4c 29 fe             	sub    %r15,%rsi
   14319:	89 f5                	mov    %esi,%ebp
   1431b:	4d 89 e6             	mov    %r12,%r14
   1431e:	4c 8b 64 0f 84       	mov    -0x7c(%rdi,%rcx,1),%r12
   14323:	37                   	(bad)  
   14324:	fc                   	cld    
   14325:	ff 74 ad c1          	push   -0x3f(%rbp,%rbp,4)
   14329:	e3 3d                	jrcxz  14368 <_obstack_memory_used@@Base+0x3bb8>
   1432b:	24 25                	and    $0x25,%al
   1432d:	4d 89 f5             	mov    %r14,%r13
   14330:	4d 89 0f             	mov    %r9,(%r15)
   14333:	8f                   	(bad)  
   14334:	13 fe                	adc    %esi,%edi
   14336:	ff                   	(bad)  
   14337:	ff                   	(bad)  
   14338:	ed                   	in     (%dx),%eax
   14339:	0f 85 1c f2 ff ff    	jne    1355b <_obstack_memory_used@@Base+0x2dab>
   1433f:	e9 28 fc ff ff       	jmp    13f6c <_obstack_memory_used@@Base+0x37bc>
   14344:	0f b6 49 21          	movzbl 0x21(%rcx),%ecx
   14348:	c8 4c 8b 54          	enter  $0x8b4c,$0x54
   1434c:	24 50                	and    $0x50,%al
   1434e:	c6 44 24 7c 00       	movb   $0x0,0x7c(%rsp)
   14353:	45 31 db             	xor    %r11d,%r11d
   14356:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1435d:	00 00 
   1435f:	88 44 24 26          	mov    %al,0x26(%rsp)
   14363:	48 c7 c2 79 48 c7 c0 	mov    $0xffffffffc0c74879,%rdx
   1436a:	21 fd                	and    %edi,%ebp
   1436c:	ff 49 01             	decl   0x1(%rcx)
   1436f:	d6                   	(bad)  
   14370:	48 8d 49 21          	lea    0x21(%rcx),%rcx
   14374:	d5                   	(bad)  
   14375:	21 fe                	and    %edi,%esi
   14377:	c6 44 24 26 01       	movb   $0x1,0x26(%rsp)
   1437c:	31 ed                	xor    %ebp,%ebp
   1437e:	45 31 ff             	xor    %r15d,%r15d
   14381:	0f 84 0f 85 4a 01    	je     14bc896 <obstack_alloc_failed_handler@@Base+0x149a7f6>
   14387:	4d 0f af eb          	imul   %r11,%r13
   1438b:	89 44 24 e9          	mov    %eax,-0x17(%rsp)
   1438f:	2b ff                	sub    %edi,%edi
   14391:	ff                   	(bad)  
   14392:	ff                   	(bad)  
   14393:	ff 49 29             	decl   0x29(%rcx)
   14396:	c0 00 00             	rolb   $0x0,(%rax)
   14399:	31 ed                	xor    %ebp,%ebp
   1439b:	4d 85 0f             	test   %r9,(%r15)
   1439e:	85 32                	test   %esi,(%rdx)
   143a0:	fe                   	(bad)  
   143a1:	ff                   	(bad)  
   143a2:	ff                   	(bad)  
   143a3:	f9                   	stc    
   143a4:	f1                   	int1   
   143a5:	ff                   	(bad)  
   143a6:	ff                   	(bad)  
   143a7:	e8 e4 75 ea ff       	call   ffffffffffebb990 <obstack_alloc_failed_handler@@Base+0xffffffffffe998f0>
   143ac:	c2 f9 fd             	ret    $0xfdf9
   143af:	02 44 89 c5          	add    -0x3b(%rcx,%rcx,4),%al
   143b3:	b9 7e 00 00 00       	mov    $0x7e,%ecx
   143b8:	41 89 c0             	mov    %eax,%r8d
   143bb:	48 0f af d8          	imul   %rax,%rbx
   143bf:	ae                   	scas   %es:(%rdi),%al
   143c0:	ef                   	out    %eax,(%dx)
   143c1:	ff                   	(bad)  
   143c2:	ff 89 d9 4d 85 ee    	decl   -0x117ab227(%rcx)
   143c8:	48 f7 f9             	idiv   %rcx
   143cb:	ff 0f                	decl   (%rdi)
   143cd:	48 39 d2             	cmp    %rdx,%rdx
   143d0:	f3 0f 1e fa          	endbr64 
   143d4:	41 57                	push   %r15
   143d6:	41 56                	push   %r14
   143d8:	41 55                	push   %r13
   143da:	49 89 f5             	mov    %rsi,%r13
   143dd:	41 54                	push   %r12
   143df:	55                   	push   %rbp
   143e0:	48 89 d5             	mov    %rdx,%rbp
   143e3:	53                   	push   %rbx
   143e4:	48 83 ec 68          	sub    $0x68,%rsp
   143e8:	48 8b 37             	mov    (%rdi),%rsi
   143eb:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   143f0:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   143f5:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   143fa:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
   14401:	00 00 
   14403:	48 0f 8c ef 00 00 00 	rex.W jl 144f9 <_obstack_memory_used@@Base+0x3d49>
   1440a:	48 85 ed             	test   %rbp,%rbp
   1440d:	48 8d 15 ac de 00 00 	lea    0xdeac(%rip),%rdx        # 222c0 <obstack_alloc_failed_handler@@Base+0x220>
   14414:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   14419:	48 0f 44 ea          	cmove  %rdx,%rbp
   1441d:	44 8b 65 00          	mov    0x0(%rbp),%r12d
   14421:	41 83 fc 02          	cmp    $0x2,%r12d
   14425:	0f 96 c2             	setbe  %dl
   14428:	22 15 8e de 00 00    	and    0xde8e(%rip),%dl        # 222bc <obstack_alloc_failed_handler@@Base+0x21c>
   1442e:	88 54 24 2f          	mov    %dl,0x2f(%rsp)
   14432:	0f 85 7c 6b 00 00    	jne    1afb4 <_obstack_memory_used@@Base+0xa804>
   14438:	45 31 ff             	xor    %r15d,%r15d
   1443b:	85 c9                	test   %ecx,%ecx
   1443d:	0f 84 8d 00 00 00    	je     144d0 <_obstack_memory_used@@Base+0x3d20>
   14443:	e8 c8 02 ff ff       	call   4710 <__errno_location@plt>
   14448:	44 8b 48 ff          	mov    -0x1(%rax),%r9d
   1444c:	c7                   	(bad)  
   1444d:	8d 4d 08             	lea    0x8(%rbp),%ecx
   14450:	44 89 e1             	mov    %r12d,%ecx
   14453:	48 c1 eb 30          	shr    $0x30,%rbx
   14457:	00 20                	add    %ah,(%rax)
   14459:	00 00                	add    %al,(%rax)
   1445b:	4c 89 ea             	mov    %r13,%rdx
   1445e:	49 89 c6             	mov    %rax,%r14
   14461:	44 89 54 24 08       	mov    %r10d,0x8(%rsp)
   14466:	ff 4d 0f             	decl   0xf(%rbp)
   14469:	af                   	scas   %es:(%rdi),%eax
   1446a:	d4                   	(bad)  
   1446b:	28 48 8b             	sub    %cl,-0x75(%rax)
   1446e:	7c 24                	jl     14494 <_obstack_memory_used@@Base+0x3ce4>
   14470:	20 4c 89 4c          	and    %cl,0x4c(%rcx,%rcx,4)
   14474:	24 10                	and    $0x10,%al
   14476:	e8 b5 ea ff 4d       	call   4e012f30 <obstack_alloc_failed_handler@@Base+0x4dff0e90>
   1447b:	21 e6                	and    %esp,%esi
   1447d:	09 d0                	or     %edx,%eax
   1447f:	18 48 3d             	sbb    %cl,0x3d(%rax)
   14482:	ff 1f                	lcall  *(%rdi)
   14484:	0f 84 cf 01 00 00    	je     14659 <_obstack_memory_used@@Base+0x3ea9>
   1448a:	4c 09 d3             	or     %r10,%rbx
   1448d:	29 cc                	sub    %ecx,%esp
   1448f:	8b 4d 0f             	mov    0xf(%rbp),%ecx
   14492:	8c a1 fe ff ff 4d    	mov    %fs,0x4dfffffe(%rcx)
   14498:	39 f6                	cmp    %esi,%esi
   1449a:	44 24 48             	rex.R and $0x48,%al
   1449d:	c7 c3 e0 49 f7 f9    	mov    $0xf9f749e0,%ebx
   144a3:	b6 00                	mov    $0x0,%dh
   144a5:	41 38 45 00          	cmp    %al,0x0(%r13)
   144a9:	75 10                	jne    144bb <_obstack_memory_used@@Base+0x3d0b>
   144ab:	4c 89 49 29          	mov    %r9,0x29(%rcx)
   144af:	de 03                	fiadds (%rbx)
   144b1:	ff                   	(bad)  
   144b2:	ff 4c 0f 8c          	decl   -0x74(%rdi,%rcx,1)
   144b6:	f6 01 00             	testb  $0x0,(%rcx)
   144b9:	00 48 31             	add    %cl,0x31(%rax)
   144bc:	d8 fe                	fdivr  %st(6),%st
   144be:	74 20                	je     144e0 <_obstack_memory_used@@Base+0x3d30>
   144c0:	4c 89 e3             	mov    %r12,%rbx
   144c3:	e9 f0 00 0f 84       	jmp    ffffffff841045b8 <obstack_alloc_failed_handler@@Base+0xffffffff840e2518>
   144c8:	49 f7 fc             	idiv   %r12
   144cb:	e6 fd                	out    %al,$0xfd
   144cd:	ff                   	(bad)  
   144ce:	ff 00                	incl   (%rax)
   144d0:	4c 89 ef             	mov    %r13,%rdi
   144d3:	e8 a8 03 ff ff       	call   4880 <strlen@plt>
   144d8:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   144dd:	49 89 c4             	mov    %rax,%r12
   144e0:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   144e6:	74 78                	je     14560 <_obstack_memory_used@@Base+0x3db0>
   144e8:	e8 83 03 ff ff       	call   4870 <__ctype_get_mb_cur_max@plt>
   144ed:	48 83 f8 01          	cmp    $0x1,%rax
   144f1:	0f 87 21 03 00 00    	ja     14818 <_obstack_memory_used@@Base+0x4068>
   144f7:	48 29 d3             	sub    %rdx,%rbx
   144fa:	24 10                	and    $0x10,%al
   144fc:	4a 8d 2c 23          	lea    (%rbx,%r12,1),%rbp
   14500:	48 39 dd             	cmp    %rbx,%rbp
   14503:	0f 86 d4 03 00 00    	jbe    148dd <_obstack_memory_used@@Base+0x412d>
   14509:	e8 c2 07 ff ff       	call   4cd0 <__ctype_b_loc@plt>
   1450e:	48 8b 08             	mov    (%rax),%rcx
   14511:	48 89 d8             	mov    %rbx,%rax
   14514:	31 db                	xor    %ebx,%ebx
   14516:	66 49 39 d8          	data16 cmp %rbx,%r8
   1451a:	84 00                	test   %al,(%rax)
   1451c:	4d                   	rex.WRB
   1451d:	48 ff c3             	inc    %rbx
   14520:	0f b6 10             	movzbl (%rax),%edx
   14523:	0f b7 7c ab 66       	movzwl 0x66(%rbx,%rbp,4),%edi
   14528:	48 89 fa             	mov    %rdi,%rdx
   1452b:	40                   	rex
   1452c:	66 83 fa 01          	cmp    $0x1,%dx
   14530:	48 83 49 ff c4       	orq    $0xffffffffffffffc4,-0x1(%rcx)
   14535:	83 c0 01             	add    $0x1,%eax
   14538:	48 39 c5             	cmp    %rax,%rbp
   1453b:	75 e3                	jne    14520 <_obstack_memory_used@@Base+0x3d70>
   1453d:	80 3d 69 dd 00 00 00 	cmpb   $0x0,0xdd69(%rip)        # 222ad <obstack_alloc_failed_handler@@Base+0x20d>
   14544:	0f 85 cd 00 00 00    	jne    14617 <_obstack_memory_used@@Base+0x3e67>
   1454a:	48                   	rex.W
   1454b:	49 31 c6             	xor    %rax,%r14
   1454e:	48 f7 4d 31 c9 dd 00 	testq  $0xf00ddc9,0x31(%rbp)
   14555:	0f 
   14556:	85 4f 49             	test   %ecx,0x49(%rdi)
   14559:	ff c4                	inc    %esp
   1455b:	31 48 ff             	xor    %ecx,-0x1(%rax)
   1455e:	c0 00 80             	rolb   $0x80,(%rax)
   14561:	3d 46 dd 00 00       	cmp    $0xdd46,%eax
   14566:	00 0f                	add    %cl,(%rdi)
   14568:	85 aa 00 00 00 48    	test   %ebp,0x48000000(%rdx)
   1456e:	8b 44 24 e9          	mov    -0x17(%rsp),%eax
   14572:	75 fc                	jne    14570 <_obstack_memory_used@@Base+0x3dc0>
   14574:	ff                   	(bad)  
   14575:	ff c2                	inc    %edx
   14577:	00 00                	add    %al,(%rax)
   14579:	00 66 4c             	add    %ah,0x4c(%rsi)
   1457c:	31 ea                	xor    %ebp,%edx
   1457e:	00 00                	add    %al,(%rax)
   14580:	85 c9                	test   %ecx,%ecx
   14582:	0f 85 49 0f af c9    	jne    ffffffffc9b054d1 <obstack_alloc_failed_handler@@Base+0xffffffffc9ae3431>
   14588:	4d                   	rex.WRB
   14589:	49 ff c4             	inc    %r12
   1458c:	f0 02 ff             	lock add %bh,%bh
   1458f:	ff 48 49             	decl   0x49(%rax)
   14592:	01 48 c7             	add    %ecx,-0x39(%rax)
   14595:	c6 03 03             	movb   $0x3,(%rbx)
   14598:	00 00                	add    %al,(%rax)
   1459a:	0f 84 5b ff ff ff    	je     144fb <_obstack_memory_used@@Base+0x3d4b>
   145a0:	02 00                	add    (%rax),%al
   145a2:	00 48 8b             	add    %cl,-0x75(%rax)
   145a5:	7c 24                	jl     145cb <_obstack_memory_used@@Base+0x3e1b>
   145a7:	10 4c 89 e2          	adc    %cl,-0x1e(%rcx,%rcx,4)
   145ab:	4c 89 ee             	mov    %r13,%rsi
   145ae:	e8 9d 04 ff ff       	call   4a50 <memcpy@plt>
   145b3:	4c 29 48 89          	sub    %r9,-0x77(%rax)
   145b7:	49 c1 e0 17          	shl    $0x17,%r8
   145bb:	ff                   	(bad)  
   145bc:	ff 48 8b             	decl   -0x75(%rax)
   145bf:	74 24                	je     145e5 <_obstack_memory_used@@Base+0x3e35>
   145c1:	10 48 8d             	adc    %cl,-0x73(%rax)
   145c4:	3c 1e                	cmp    $0x1e,%al
   145c6:	48 89 7c 4d 31       	mov    %rdi,0x31(%rbp,%rcx,2)
   145cb:	f6 83 f8 01 0f 4d 31 	testb  $0x31,0x4d0f01f8(%rbx)
   145d2:	dc 5b 02             	fcompl 0x2(%rbx)
   145d5:	00 00                	add    %al,(%rax)
   145d7:	7c 48                	jl     14621 <_obstack_memory_used@@Base+0x3e71>
   145d9:	85 d9                	test   %ebx,%ecx
   145db:	49 f7 fb             	idiv   %r11
   145de:	08 0f                	or     %cl,(%rdi)
   145e0:	84 3b                	test   %bh,(%rbx)
   145e2:	ff                   	(bad)  
   145e3:	ff                   	(bad)  
   145e4:	ff e7                	jmp    *%rdi
   145e6:	06                   	(bad)  
   145e7:	ff                   	(bad)  
   145e8:	ff 4c 89 fa          	decl   -0x6(%rcx,%rcx,4)
   145ec:	4c                   	rex.WR
   145ed:	49 09 d5             	or     %rdx,%r13
   145f0:	0f b6 32             	movzbl (%rdx),%esi
   145f3:	48 8b 08             	mov    (%rax),%rcx
   145f6:	f6 44 71 01 40       	testb  $0x40,0x1(%rcx,%rsi,2)
   145fb:	75 03                	jne    14600 <_obstack_memory_used@@Base+0x3e50>
   145fd:	c6 02 3f             	movb   $0x3f,(%rdx)
   14600:	48 83 c2 01          	add    $0x1,%rdx
   14604:	48 39 48 c1          	cmp    %rcx,-0x3f(%rax)
   14608:	e8 0b 0f 85 0f       	call   f865518 <obstack_alloc_failed_handler@@Base+0xf843478>
   1460d:	8f                   	(bad)  
   1460e:	5d                   	pop    %rbp
   1460f:	fe                   	(bad)  
   14610:	ff 0f                	decl   (%rdi)
   14612:	8f                   	(bad)  
   14613:	fa                   	cli    
   14614:	fc                   	cld    
   14615:	ff                   	(bad)  
   14616:	ff 0f                	decl   (%rdi)
   14618:	b6 44                	mov    $0x44,%dh
   1461a:	24 2f                	and    $0x2f,%al
   1461c:	83 f0 01             	xor    $0x1,%eax
   1461f:	22 05 87 dc 00 00    	and    0xdc87(%rip),%al        # 222ac <obstack_alloc_failed_handler@@Base+0x20c>
   14625:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1462a:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   14630:	88 06                	mov    %al,(%rsi)
   14632:	74 08                	je     1463c <_obstack_memory_used@@Base+0x3e8c>
   14634:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   14639:	48 89 18             	mov    %rbx,(%rax)
   1463c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   14641:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   14646:	48 89 30             	mov    %rsi,(%rax)
   14649:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1464e:	64 48 31 ca          	fs xor %rcx,%rdx
   14652:	25 28 00 00 00       	and    $0x28,%eax
   14657:	0f 85 9c 02 00 00    	jne    148f9 <_obstack_memory_used@@Base+0x4149>
   1465d:	48 83 c4 68          	add    $0x68,%rsp
   14661:	4c 89 e0             	mov    %r12,%rax
   14664:	5b                   	pop    %rbx
   14665:	5d                   	pop    %rbp
   14666:	41 5c                	pop    %r12
   14668:	41 5d                	pop    %r13
   1466a:	41 5e                	pop    %r14
   1466c:	41 5f                	pop    %r15
   1466e:	c3                   	ret    
   1466f:	90                   	nop
   14670:	7f 07                	jg     14679 <_obstack_memory_used@@Base+0x3ec9>
   14672:	fe 0f                	decb   (%rdi)
   14674:	83 6b 02 00          	subl   $0x0,0x2(%rbx)
   14678:	00 48 8d             	add    %cl,-0x73(%rax)
   1467b:	44 24 4c             	rex.R and $0x4c,%al
   1467e:	0f                   	(bad)  
   1467f:	0f 8c 14 01 00 00    	jl     14799 <_obstack_memory_used@@Base+0x3fe9>
   14685:	f7 48 89 44 24 18 48 	testl  $0x48182444,-0x77(%rax)
   1468c:	8d 6c 24 50          	lea    0x50(%rsp),%ebp
   14690:	41 0f b6 07          	movzbl (%r15),%eax
   14694:	3c 5f                	cmp    $0x5f,%al
   14696:	0f 8f 34 01 00 00    	jg     147d0 <_obstack_memory_used@@Base+0x4020>
   1469c:	3c 40                	cmp    $0x40,%al
   1469e:	0f 48 39             	cmovs  (%rcx),%edi
   146a1:	ff 00                	incl   (%rax)
   146a3:	00 3c 23             	add    %bh,(%rbx,%riz,1)
   146a6:	4d 0f af fc          	imul   %r12,%r15
   146aa:	4c 29 d3             	sub    %r10,%rbx
   146ad:	49 c1 ef 13          	shr    $0x13,%r15
   146b1:	00 00                	add    %al,(%rax)
   146b3:	00 48 c7             	add    %cl,-0x39(%rax)
   146b6:	44 24 50             	rex.R and $0x50,%al
   146b9:	00 00                	add    %al,(%rax)
   146bb:	00 00                	add    %al,(%rax)
   146bd:	4d 89 fd             	mov    %r15,%r13
   146c0:	eb 26                	jmp    146e8 <_obstack_memory_used@@Base+0x3f38>
   146c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   146c8:	41                   	rex.B
   146c9:	49 c1 e0 49          	shl    $0x49,%r8
   146cd:	f7 fe                	idiv   %esi
   146cf:	6c                   	insb   (%dx),%es:(%rdi)
   146d0:	4d 01 f5             	add    %r14,%r13
   146d3:	48 83 c3 01          	add    $0x1,%rbx
   146d7:	4c 8b 24 24          	mov    (%rsp),%r12
   146db:	e8 a0 05 ff ff       	call   4c80 <mbsinit@plt>
   146e0:	85 c0                	test   %eax,%eax
   146e2:	0f 85 4c 29 e7 00    	jne    e87034 <obstack_alloc_failed_handler@@Base+0xe64f94>
   146e8:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   146ed:	49 21 c1             	and    %rax,%r9
   146f0:	24 18                	and    $0x18,%al
   146f2:	4d 0f af ff          	imul   %r15,%r15
   146f6:	89 ee                	mov    %ebp,%esi
   146f8:	4d 29 ef             	sub    %r13,%r15
   146fb:	4c 89 fa             	mov    %r15,%rdx
   146fe:	4d 39 de             	cmp    %r11,%r14
   14701:	ff                   	(bad)  
   14702:	ff 4c 01 c1          	decl   -0x3f(%rcx,%rax,1)
   14706:	f9                   	stc    
   14707:	8d 44 24 01          	lea    0x1(%rsp),%eax
   1470b:	48                   	rex.W
   1470c:	4d 39 49 c1          	cmp    %r9,-0x3f(%r9)
   14710:	e8 0e 29 ee 49       	call   49ef7023 <obstack_alloc_failed_handler@@Base+0x49ed4f83>
   14715:	01 f1                	add    %esi,%ecx
   14717:	ff 0f                	decl   (%rdi)
   14719:	85 12                	test   %edx,(%rdx)
   1471b:	fc                   	cld    
   1471c:	ff                   	(bad)  
   1471d:	ff                   	(bad)  
   1471e:	7e ff                	jle    1471f <_obstack_memory_used@@Base+0x3f6f>
   14720:	ff 84 c0 0f 84 b7 00 	incl   0xb7840f(%rax,%rax,8)
   14727:	0f 85 74 71 00 00    	jne    1b8a1 <_obstack_memory_used@@Base+0xb0f1>
   1472d:	0f 84 fd 00 00 00    	je     14830 <_obstack_memory_used@@Base+0x4080>
   14733:	49 83 fe fe          	cmp    $0xfffffffffffffffe,%r14
   14737:	0f 84 13 01 00 00    	je     14850 <_obstack_memory_used@@Base+0x40a0>
   1473d:	8b 7c 24 4c          	mov    0x4c(%rsp),%edi
   14741:	4d 85 df             	test   %r11,%r15
   14744:	8c f5                	mov    %?,%ebp
   14746:	fe                   	(bad)  
   14747:	ff                   	(bad)  
   14748:	ff 4c 0f 74          	decl   0x74(%rdi,%rcx,1)
   1474c:	2f                   	(bad)  
   1474d:	e8 49 c1 49 39       	call   394b089b <obstack_alloc_failed_handler@@Base+0x3948e7fb>
   14752:	f6 ff                	idiv   %bh
   14754:	c2 88 6e             	ret    $0x6e88
   14757:	ff                   	(bad)  
   14758:	ff                   	(bad)  
   14759:	ff                   	(bad)  
   1475a:	e9 b0 fd ff ff       	jmp    1450f <_obstack_memory_used@@Base+0x3d5f>
   1475f:	00 41 0f             	add    %al,0xf(%rcx)
   14762:	48 c1 eb 1c          	shr    $0x1c,%rbx
   14766:	41 88 0c 14          	mov    %cl,(%r12,%rdx,1)
   1476a:	48                   	rex.W
   1476b:	48 c1 e8 21          	shr    $0x21,%rax
   1476f:	21 f1                	and    %esi,%ecx
   14771:	75 49                	jne    147bc <_obstack_memory_used@@Base+0x400c>
   14773:	c1 e6 3d             	shl    $0x3d,%esi
   14776:	75 40                	jne    147b8 <_obstack_memory_used@@Base+0x4008>
   14778:	ff 48 98             	decl   -0x68(%rax)
   1477b:	48 89 ef             	mov    %rbp,%rdi
   1477e:	48                   	rex.W
   1477f:	49 21 f8             	and    %rdi,%r8
   14782:	fa                   	cli    
   14783:	04 4c                	add    $0x4c,%al
   14785:	21 ee                	and    %ebp,%esi
   14787:	c0 49 49 c1          	rorb   $0xc1,0x49(%rcx)
   1478b:	ed                   	in     (%dx),%eax
   1478c:	03 ff                	add    %edi,%edi
   1478e:	4d 89 ef             	mov    %r13,%r15
   14791:	eb 21                	jmp    147b4 <_obstack_memory_used@@Base+0x4004>
   14793:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14798:	8d 50 db             	lea    -0x25(%rax),%edx
   1479b:	80 fa 1a             	cmp    $0x1a,%dl
   1479e:	0f 87 10 4d 39 d6    	ja     ffffffffd63a94b4 <obstack_alloc_failed_handler@@Base+0xffffffffd6387414>
   147a4:	41 88 04 24          	mov    %al,(%r12)
   147a8:	49 83 0f 8f          	orq    $0xffffffffffffff8f,(%r15)
   147ac:	6c                   	insb   (%dx),%es:(%rdi)
   147ad:	fe                   	(bad)  
   147ae:	ff                   	(bad)  
   147af:	ff 49 49             	decl   0x49(%rcx)
   147b2:	0f af c8             	imul   %eax,%ecx
   147b5:	3b 7c 24 08          	cmp    0x8(%rsp),%edi
   147b9:	4d 39 e0             	cmp    %r12,%r8
   147bc:	fe 49 48             	decb   0x48(%rcx)
   147bf:	21 f6                	and    %esi,%esi
   147c1:	4d 85 cd             	test   %r9,%r13
   147c4:	e9 43 fe ff 49       	jmp    4a01460c <obstack_alloc_failed_handler@@Base+0x49ff256c>
   147c9:	21 df                	and    %ebx,%edi
   147cb:	80 00 00             	addb   $0x0,(%rax)
   147ce:	00 00                	add    %al,(%rax)
   147d0:	8d 50 9f             	lea    -0x61(%rax),%edx
   147d3:	4c 85 fe             	test   %r15,%rsi
   147d6:	76 cc                	jbe    147a4 <_obstack_memory_used@@Base+0x3ff4>
   147d8:	e9 d7 0f 49 0f       	jmp    f4a57b4 <obstack_alloc_failed_handler@@Base+0xf483714>
   147dd:	af                   	scas   %es:(%rdi),%eax
   147de:	c7                   	(bad)  
   147df:	49 89 c0             	mov    %rax,%r8
   147e2:	b6 49                	mov    $0x49,%dh
   147e4:	21 d4                	and    %edx,%esp
   147e6:	be 01 00 00 00       	mov    $0x1,%esi
   147eb:	89 4d 89             	mov    %ecx,-0x77(%rbp)
   147ee:	dd 09                	fisttpll (%rcx)
   147f0:	cb                   	lret   
   147f1:	02 e9                	add    %cl,%ch
   147f3:	49 29 cf             	sub    %rcx,%r15
   147f6:	00 31                	add    %dh,(%rcx)
   147f8:	c9                   	leave  
   147f9:	fe                   	(bad)  
   147fa:	ff                   	(bad)  
   147fb:	ff 41 0f             	incl   0xf(%rcx)
   147fe:	b6 55                	mov    $0x55,%dh
   14800:	00 4c 4c 85          	add    %cl,-0x7b(%rsp,%rcx,2)
   14804:	c3                   	ret    
   14805:	41 88 4d 4c          	mov    %cl,0x4c(%r13)
   14809:	89 d9                	mov    %ebx,%ecx
   1480b:	24 0f                	and    $0xf,%al
   1480d:	84 d4                	test   %dl,%ah
   1480f:	02 00                	add    (%rax),%al
   14811:	00 48 c1             	add    %cl,-0x3f(%rax)
   14814:	e9 26 00 00 48       	jmp    4801483f <obstack_alloc_failed_handler@@Base+0x47ff279f>
   14819:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   1481d:	4c 89 e6             	mov    %r12,%rsi
   14820:	e8 fb e3 ff ff       	call   12c20 <_obstack_memory_used@@Base+0x2470>
   14825:	48 63 d8             	movslq %eax,%rbx
   14828:	e9 10 fd ff ff       	jmp    1453d <_obstack_memory_used@@Base+0x3d8d>
   1482d:	0f 1f 00             	nopl   (%rax)
   14830:	4d 89 ef             	mov    %r13,%r15
   14833:	48 0f 85 94 fd ff ff 	rex.W jne 145ce <_obstack_memory_used@@Base+0x3e1e>
   1483a:	e9 d8 fd ff ff       	jmp    14617 <_obstack_memory_used@@Base+0x3e67>
   1483f:	00 49 89             	add    %cl,-0x77(%rcx)
   14842:	d9 24 e9             	fldenv (%rcx,%rbp,8)
   14845:	6b ff ff             	imul   $0xffffffff,%edi,%edi
   14848:	ff 0f                	decl   (%rdi)
   1484a:	1f                   	(bad)  
   1484b:	49 c1 0f 85          	rorq   $0x85,(%r15)
   1484f:	6b fc ff             	imul   $0xffffffff,%esp,%edi
   14852:	ff 85 36 fc ff ff    	incl   -0x3ca(%rbp)
   14858:	01 48 c7             	add    %ecx,-0x39(%rax)
   1485b:	c1 6d fd ff          	shrl   $0xff,-0x3(%rbp)
   1485f:	ff                   	(bad)  
   14860:	fe                   	(bad)  
   14861:	fe                   	(bad)  
   14862:	ff 48 89             	decl   -0x77(%rax)
   14865:	44 24 10             	rex.R and $0x10,%al
   14868:	48 85 c0             	test   %rax,%rax
   1486b:	0f 85 32 fd ff ff    	jne    145a3 <_obstack_memory_used@@Base+0x3df3>
   14871:	e8 48 09 de ff       	call   ffffffffffdf51be <obstack_alloc_failed_handler@@Base+0xffffffffffdd311e>
   14876:	66 2e 0f 4c 01       	cs cmovl (%rcx),%ax
   1487b:	c9                   	leave  
   1487c:	4c 09 c7             	or     %r8,%rdi
   1487f:	00 48 8d             	add    %cl,-0x73(%rax)
   14882:	70 01                	jo     14885 <_obstack_memory_used@@Base+0x40d5>
   14884:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   14889:	48 89 f7             	mov    %rsi,%rdi
   1488c:	48 89 34 24          	mov    %rsi,(%rsp)
   14890:	e8 fb fd fe ff       	call   4690 <malloc@plt>
   14895:	48 8b 34 24          	mov    (%rsp),%rsi
   14899:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1489e:	49 0f af f8          	imul   %r8,%rdi
   148a2:	89 44 24 10          	mov    %eax,0x10(%rsp)
   148a6:	75 05                	jne    148ad <_obstack_memory_used@@Base+0x40fd>
   148a8:	48 85 f6             	test   %rsi,%rsi
   148ab:	75 c4                	jne    14871 <_obstack_memory_used@@Base+0x40c1>
   148ad:	45 8b 16             	mov    (%r14),%r10d
   148b0:	44                   	rex.R
   148b1:	49 01 fe             	add    %rdi,%r14
   148b4:	4c 89 ea             	mov    %r13,%rdx
   148b7:	8b 4d 00             	mov    0x0(%rbp),%ecx
   148ba:	4d 21 48 39          	and    %r9,0x39(%r8)
   148be:	ce                   	(bad)  
   148bf:	75 30                	jne    148f1 <_obstack_memory_used@@Base+0x4141>
   148c1:	ff 75 28             	push   0x28(%rbp)
   148c4:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   148c9:	e8 62 e6 ff ff       	call   12f30 <_obstack_memory_used@@Base+0x2780>
   148ce:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
   148d3:	45 89 4c 29 de       	mov    %r9d,-0x22(%r9,%rbp,1)
   148d8:	e9 bb fb ff ff       	jmp    14498 <_obstack_memory_used@@Base+0x3ce8>
   148dd:	31 db                	xor    %ebx,%ebx
   148df:	e9 59 49 48 ff       	jmp    ffffffffff49923d <obstack_alloc_failed_handler@@Base+0xffffffffff47719d>
   148e4:	c0 31 e4             	shlb   $0xe4,(%rcx)
   148e7:	31 db                	xor    %ebx,%ebx
   148e9:	e9 0f 8f 2d fc       	jmp    fffffffffc2ed7fd <obstack_alloc_failed_handler@@Base+0xfffffffffc2cb75d>
   148ee:	ff                   	(bad)  
   148ef:	ff 4c 01 df          	decl   -0x21(%rcx,%rax,1)
   148f3:	00 e9                	add    %ch,%cl
   148f5:	4a 0f 49 0f          	rex.WX cmovns (%rdi),%rcx
   148f9:	af                   	scas   %es:(%rdi),%eax
   148fa:	d5                   	(bad)  
   148fb:	00 fe                	add    %bh,%dh
   148fd:	ff 66 90             	jmp    *-0x70(%rsi)
   14900:	e9 72 ff ff ff       	jmp    14877 <_obstack_memory_used@@Base+0x40c7>
   14905:	57                   	push   %rdi
   14906:	41 56                	push   %r14
   14908:	41 55                	push   %r13
   1490a:	49 89 f5             	mov    %rsi,%r13
   1490d:	41 54                	push   %r12
   1490f:	49                   	rex.WB
   14910:	49 01 c1             	add    %rax,%r9
   14913:	53                   	push   %rbx
   14914:	48 63 df             	movslq %edi,%rbx
   14917:	48 83 4c 01 ea f0    	orq    $0xfffffffffffffff0,-0x16(%rcx,%rax,1)
   1491d:	49 c7 c1 1e fe ff ff 	mov    $0xfffffffffffffe1e,%r9
   14924:	d9 48 89             	(bad)  -0x77(%rax)
   14927:	49                   	rex.WB
   14928:	49 c7 c2 29 ff ff ff 	mov    $0xffffffffffffff29,%r10
   1492f:	89 48 c1             	mov    %ecx,-0x3f(%rax)
   14932:	e1 33                	loope  14967 <_obstack_memory_used@@Base+0x41b7>
   14934:	00 89 44 24 14 44    	add    %cl,0x44142444(%rcx)
   1493a:	39 f3                	cmp    %esi,%ebx
   1493c:	7c 60                	jl     1499e <_obstack_memory_used@@Base+0x41ee>
   1493e:	4d 0f af e7          	imul   %r15,%r12
   14942:	48 8d 05 17 d9 00 00 	lea    0xd917(%rip),%rax        # 22260 <obstack_alloc_failed_handler@@Base+0x1c0>
   14949:	49 63 f7             	movslq %r15d,%rsi
   1494c:	48 c1 e6 04          	shl    $0x4,%rsi
   14950:	48 39 c5             	cmp    %rax,%rbp
   14953:	0f 84 1f 01 00 00    	je     14a78 <_obstack_memory_used@@Base+0x42c8>
   14959:	48 89 ef             	mov    %rbp,%rdi
   1495c:	e8 af 4d 01 ea       	call   ffffffffea029710 <obstack_alloc_failed_handler@@Base+0xffffffffea007670>
   14961:	48 89 c5             	mov    %rax,%rbp
   14964:	48 85 c0             	test   %rax,%rax
   14967:	0f 84 33 01 4d 09    	je     94e4aa0 <obstack_alloc_failed_handler@@Base+0x94c2a00>
   1496d:	e8 49 89 c9 e3       	call   ffffffffe3cad2bb <obstack_alloc_failed_handler@@Base+0xffffffffe3c8b21b>
   14972:	28 00                	sub    %al,(%rax)
   14974:	49                   	rex.WB
   14975:	48 f7 4d 31 e4 31 f6 	testq  $0x48f631e4,0x31(%rbp)
   1497c:	48 
   1497d:	89 f9                	mov    %edi,%ecx
   1497f:	44 29 f2             	sub    %r14d,%edx
   14982:	48 c1 e1 49          	shl    $0x49,%rcx
   14986:	01 49 c1             	add    %ecx,-0x3f(%rcx)
   14989:	ea                   	(bad)  
   1498a:	23 31                	and    (%rcx),%esi
   1498c:	dc 48 8d             	fmull  -0x73(%rax)
   1498f:	0f 8c df fe ff ff    	jl     14874 <_obstack_memory_used@@Base+0x40c4>
   14995:	fe                   	(bad)  
   14996:	ff 44 89 3d          	incl   0x3d(%rcx,%rcx,4)
   1499a:	49 31 d8             	xor    %rbx,%r8
   1499d:	c3                   	ret    
   1499e:	0c 01                	or     $0x1,%al
   149a0:	00 00                	add    %al,(%rax)
   149a2:	29 d6                	sub    %edx,%esi
   149a4:	0c 24                	or     $0x24,%al
   149a6:	4d 8d 7c 24 08       	lea    0x8(%r12),%r15
   149ab:	4c 89 ea             	mov    %r13,%rdx
   149ae:	48 01 dd             	add    %rbx,%rbp
   149b1:	41 8b 5c 24 04       	mov    0x4(%r12),%ebx
   149b6:	4d 89 f9             	mov    %r15,%r9
   149b9:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   149bd:	4c 8b 75 08          	mov    0x8(%rbp),%r14
   149c1:	41 ff 74 24 30       	push   0x30(%r12)
   149c6:	41 ff 74 24 28       	push   0x28(%r12)
   149cb:	83 cb 01             	or     $0x1,%ebx
   149ce:	41 89 d8             	mov    %ebx,%r8d
   149d1:	0f 84 0a fe ff ff    	je     147e1 <_obstack_memory_used@@Base+0x4031>
   149d7:	24 28                	and    $0x28,%al
   149d9:	e8 52 e5 ff ff       	call   12f30 <_obstack_memory_used@@Base+0x2780>
   149de:	59                   	pop    %rcx
   149df:	5e                   	pop    %rsi
   149e0:	48                   	rex.W
   149e1:	4d 39 fa             	cmp    %r15,%r10
   149e4:	4d 29 49 49          	sub    %r9,0x49(%r9)
   149e8:	c1 e4 04             	shl    $0x4,%esp
   149eb:	48 0f af c3          	imul   %rbx,%rax
   149ef:	8d 05 4b ea 00 00    	lea    0xea4b(%rip),%eax        # 23440 <obstack_alloc_failed_handler@@Base+0x13a0>
   149f5:	48                   	rex.W
   149f6:	48 01 d9             	add    %rbx,%rcx
   149f9:	49 39 c6             	cmp    %rax,%r14
   149fc:	0f 84 6c fc ff ff    	je     1466e <_obstack_memory_used@@Base+0x3ebe>
   14a02:	c2 2f 24             	ret    $0x242f
   14a05:	18 e8                	sbb    %ch,%al
   14a07:	75 49                	jne    14a52 <_obstack_memory_used@@Base+0x42a2>
   14a09:	c1 e8 2f             	shr    $0x2f,%eax
   14a0c:	8b 48 c1             	mov    -0x3f(%rax),%ecx
   14a0f:	ea                   	(bad)  
   14a10:	28 4c 31 fa          	sub    %cl,-0x6(%rcx,%rsi,1)
   14a14:	89 74 24 18          	mov    %esi,0x18(%rsp)
   14a18:	49 0f af f8          	imul   %r8,%rdi
   14a1c:	ff 48 8b             	decl   -0x75(%rax)
   14a1f:	74 24                	je     14a45 <_obstack_memory_used@@Base+0x4295>
   14a21:	18 48 85             	sbb    %cl,-0x7b(%rax)
   14a24:	c0 49 0f 85          	rorb   $0x85,0xf(%rcx)
   14a28:	f9                   	stc    
   14a29:	fe                   	(bad)  
   14a2a:	ff                   	(bad)  
   14a2b:	ff f6                	push   %rsi
   14a2d:	75 71                	jne    14aa0 <_obstack_memory_used@@Base+0x42f0>
   14a2f:	4c 89 75 08          	mov    %r14,0x8(%rbp)
   14a33:	41 8b 0c 24          	mov    (%r12),%ecx
   14a37:	4c 89 ea             	mov    %r13,%rdx
   14a3a:	48 c7 c7 1a 00 00 00 	mov    $0x1a,%rdi
   14a41:	4d 0f af c6          	imul   %r14,%r8
   14a45:	ee                   	out    %al,(%dx)
   14a46:	49 21 cb             	and    %rcx,%r11
   14a49:	ff 74 24 28          	push   0x28(%rsp)
   14a4d:	e8 0f 8f de 01       	call   1dfd961 <obstack_alloc_failed_handler@@Base+0x1ddb8c1>
   14a52:	00 00                	add    %al,(%rax)
   14a54:	eb 48                	jmp    14a9e <_obstack_memory_used@@Base+0x42ee>
   14a56:	01 d1                	add    %edx,%ecx
   14a58:	cb                   	lret   
   14a59:	fe                   	(bad)  
   14a5a:	ff                   	(bad)  
   14a5b:	ff 14 89             	call   *(%rcx,%rcx,4)
   14a5e:	08 48 83             	or     %cl,-0x7d(%rax)
   14a61:	c4                   	(bad)  
   14a62:	48 ff c6             	inc    %rsi
   14a65:	f0 5b                	lock pop %rbx
   14a67:	5d                   	pop    %rbp
   14a68:	41 5c                	pop    %r12
   14a6a:	41 5d                	pop    %r13
   14a6c:	4d 01 ca             	add    %r9,%r10
   14a6f:	5f                   	pop    %rdi
   14a70:	c3                   	ret    
   14a71:	0f 1f 80 49 ff c2 00 	nopl   0xc2ff49(%rax)
   14a78:	49 c1 ed 05          	shr    $0x5,%r13
   14a7c:	10 fc                	adc    %bh,%ah
   14a7e:	fe                   	(bad)  
   14a7f:	ff 48 89             	decl   -0x77(%rax)
   14a82:	c5 48 85             	(bad)
   14a85:	4d 85 c8             	test   %r9,%r8
   14a88:	66 0f 6f 05 0f 8c c4 	movdqa -0x13b73f1(%rip),%xmm0        # fffffffffec5d69f <obstack_alloc_failed_handler@@Base+0xfffffffffec3b5ff>
   14a8f:	fe 
   14a90:	ff                   	(bad)  
   14a91:	ff 48 c1             	decl   -0x3f(%rax)
   14a94:	ee                   	out    %al,(%dx)
   14a95:	40 00 4d 89          	rex add %cl,-0x77(%rbp)
   14a99:	0f 8f 09 01 00 00    	jg     14ba8 <_obstack_memory_used@@Base+0x43f8>
   14a9f:	ff                   	(bad)  
   14aa0:	e8 2b 49 c7 c2       	call   ffffffffc2c893d0 <obstack_alloc_failed_handler@@Base+0xffffffffc2c67330>
   14aa5:	dd 03                	fldl   (%rbx)
   14aa7:	00 49 f7             	add    %cl,-0x9(%rcx)
   14aaa:	f9                   	stc    
   14aab:	00 00                	add    %al,(%rax)
   14aad:	00 00                	add    %al,(%rax)
   14aaf:	00 f3                	add    %dh,%bl
   14ab1:	0f 1e fa             	nop    %edx
   14ab4:	41 57                	push   %r15
   14ab6:	49 89 49 0f          	mov    %rcx,0xf(%r9)
   14aba:	af                   	scas   %es:(%rdi),%eax
   14abb:	d9 89 75 3a 55 49    	(bad)  0x49553a75(%rcx)
   14ac1:	89 d5                	mov    %edx,%ebp
   14ac3:	41                   	rex.B
   14ac4:	4d 85 c6             	test   %r8,%r14
   14ac7:	89 fd                	mov    %edi,%ebp
   14ac9:	53                   	push   %rbx
   14aca:	48 83 ec 38          	sub    $0x38,%rsp
   14ace:	64 48 8b 04 25 4d 31 	mov    %fs:0xffffffffc0e9314d,%rax
   14ad5:	e9 c0 
   14ad7:	48 89 48 89          	mov    %rcx,-0x77(%rax)
   14adb:	fa                   	cli    
   14adc:	31 c0                	xor    %eax,%eax
   14ade:	48 85 f6             	test   %rsi,%rsi
   14ae1:	48 8d 44 48 e9       	lea    -0x17(%rax,%rcx,2),%rax
   14ae6:	87 fc                	xchg   %edi,%esp
   14ae8:	ff                   	(bad)  
   14ae9:	ff                   	(bad)  
   14aea:	e8 49 09 d5 25       	call   25d65438 <obstack_alloc_failed_handler@@Base+0x25d43398>
   14aef:	fc                   	cld    
   14af0:	ff                   	(bad)  
   14af1:	ff 00                	incl   (%rax)
   14af3:	00 00                	add    %al,(%rax)
   14af5:	49 89 c4             	mov    %rax,%r12
   14af8:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   14afc:	e8 4d 01 cd 49       	call   49ce4c4e <obstack_alloc_failed_handler@@Base+0x49cc2bae>
   14b01:	09 d0                	or     %edx,%eax
   14b03:	ff                   	(bad)  
   14b04:	ff 89 e8 eb 0f 0f    	decl   0xf0febe8(%rcx)
   14b0a:	48 c7 c7 51 00 00 00 	mov    $0x51,%rdi
   14b11:	b6 58                	mov    $0x58,%dh
   14b13:	01 48 83             	add    %ecx,-0x7d(%rax)
   14b16:	c0 01 0f             	rolb   $0xf,(%rcx)
   14b19:	b6 d3                	mov    $0xd3,%dh
   14b1b:	f6 44 51 01 20       	testb  $0x20,0x1(%rcx,%rdx,2)
   14b20:	75 ee                	jne    14b10 <_obstack_memory_used@@Base+0x4360>
   14b22:	80 74 1c 0f 8f       	xorb   $0x8f,0xf(%rsp,%rbx,1)
   14b27:	fb                   	sti    
   14b28:	fe                   	(bad)  
   14b29:	ff 4c 39 d0          	decl   -0x30(%rcx,%rdi,1)
   14b2d:	89 ef                	mov    %ebp,%edi
   14b2f:	e8 8c 00 ff ff       	call   4bc0 <strtoumax@plt>
   14b34:	49 8b 0f             	mov    (%r15),%rcx
   14b37:	48                   	rex.W
   14b38:	48 c1 e7 17          	shl    $0x17,%rdi
   14b3c:	cd 74                	int    $0x74
   14b3e:	59                   	pop    %rcx
   14b3f:	41 8b 04 24          	mov    (%r12),%eax
   14b43:	85 c0                	test   %eax,%eax
   14b45:	75 39                	jne    14b80 <_obstack_memory_used@@Base+0x43d0>
   14b47:	45 31 e4             	xor    %r12d,%r12d
   14b4a:	4d 21 e8             	and    %r13,%r8
   14b4d:	40 84 ed             	test   %bpl,%bpl
   14b50:	0f 85 ba 00 00 00    	jne    14c10 <_obstack_memory_used@@Base+0x4460>
   14b56:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   14b5a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   14b5f:	64 48 2b 04 25 28 00 	sub    %fs:0x21490028,%rax
   14b66:	49 21 
   14b68:	d6                   	(bad)  
   14b69:	85 cc                	test   %ecx,%esp
   14b6b:	03 00                	add    (%rax),%eax
   14b6d:	00 48 83             	add    %cl,-0x7d(%rax)
   14b70:	c4                   	(bad)  
   14b71:	38 44 89 48          	cmp    %al,0x48(%rcx,%rcx,4)
   14b75:	4c 85 d8             	test   %r11,%rax
   14b78:	5c                   	pop    %rsp
   14b79:	41 5d                	pop    %r13
   14b7b:	41 5e                	pop    %r14
   14b7d:	41 5f                	pop    %r15
   14b7f:	c3                   	ret    
   14b80:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   14b86:	0f 8c 49 29 48 21    	jl     214974d5 <obstack_alloc_failed_handler@@Base+0x21475435>
   14b8c:	fb                   	sti    
   14b8d:	e0 fe                	loopne 14b8d <_obstack_memory_used@@Base+0x43dd>
   14b8f:	4d 89 fb             	mov    %r15,%r11
   14b92:	c7                   	(bad)  
   14b93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14b98:	0f b6 29             	movzbl (%rcx),%ebp
   14b9b:	48 89 48 c1          	mov    %rcx,-0x3f(%rax)
   14b9f:	e3 17                	jrcxz  14bb8 <_obstack_memory_used@@Base+0x4408>
   14ba1:	84 4d 75             	test   %cl,0x75(%rbp)
   14ba4:	f0 40 0f             	lock rex (bad) 
   14ba7:	0f 8f 1e ff ff ff    	jg     14acb <_obstack_memory_used@@Base+0x431b>
   14bad:	31 e4                	xor    %esp,%esp
   14baf:	bb 01 00 00 00       	mov    $0x1,%ebx
   14bb4:	e9 cd 02 00 00       	jmp    14e86 <_obstack_memory_used@@Base+0x46d6>
   14bb9:	4c 21 f7             	and    %r14,%rdi
   14bbc:	24 08                	and    $0x8,%al
   14bbe:	48 85 c0             	test   %rax,%rax
   14bc1:	74 c8                	je     14b8b <_obstack_memory_used@@Base+0x43db>
   14bc3:	8d 45 bb             	lea    -0x45(%rbp),%eax
   14bc6:	3c 2f                	cmp    $0x2f,%al
   14bc8:	0f 87 12 03 00 00    	ja     14ee0 <_obstack_memory_used@@Base+0x4730>
   14bce:	0f                   	(bad)  
   14bcf:	0f 85 5a ff ff ff    	jne    14b2f <_obstack_memory_used@@Base+0x437f>
   14bd5:	00 00                	add    %al,(%rax)
   14bd7:	48 be 45 89 30 00 0f 	movabs $0xc6840f00308945,%rsi
   14bde:	84 c6 00 
   14be1:	00 4d 89             	add    %cl,-0x77(%rbp)
   14be4:	f4                   	hlt    
   14be5:	00 00                	add    %al,(%rax)
   14be7:	0f 85 0f 84 f1 fd    	jne    fffffffffdf2cffc <obstack_alloc_failed_handler@@Base+0xfffffffffdf0af5c>
   14bed:	ff                   	(bad)  
   14bee:	ff 18                	lcall  *(%rax)
   14bf0:	72 46                	jb     14c38 <_obstack_memory_used@@Base+0x4488>
   14bf2:	8d 55 be             	lea    -0x42(%rbp),%edx
   14bf5:	0f 8c a8 02 49 ff    	jl     ffffffffff4a4ea3 <obstack_alloc_failed_handler@@Base+0xffffffffff482e03>
   14bfb:	c5 01 fb 7c 00 00    	vpsubq 0x0(%rax,%rax,1),%xmm15,%xmm15
   14c01:	e9 de fe ff ff       	jmp    14ae4 <_obstack_memory_used@@Base+0x4334>
   14c06:	01 f5                	add    %esi,%ebp
   14c08:	ff                   	(bad)  
   14c09:	ff                   	(bad)  
   14c0a:	ff                   	(bad)  
   14c0b:	3e ff e0             	notrack jmp *%rax
   14c0e:	66 90                	xchg   %ax,%ax
   14c10:	40 0f 49 09          	rex cmovns (%rcx),%ecx
   14c14:	d2 89 f7 0f 8c 31    	rorb   %cl,0x318c0ff7(%rcx)
   14c1a:	02 00                	add    (%rax),%al
   14c1c:	00 af fc 0f 85 f6    	add    %ch,-0x97af004(%rdi)
   14c22:	00 00                	add    %al,(%rax)
   14c24:	00 08                	add    %cl,(%rax)
   14c26:	48 85 c0             	test   %rax,%rax
   14c29:	75 98                	jne    14bc3 <_obstack_memory_used@@Base+0x4413>
   14c2b:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   14c2f:	41 83 4d 74 22       	orl    $0x22,0x74(%r13)
   14c34:	22 ff                	and    %bh,%bh
   14c36:	ff                   	(bad)  
   14c37:	ff                   	(bad)  
   14c38:	be 0f 84 59 02       	mov    $0x259840f,%esi
   14c3d:	49 c1 e1 1d          	shl    $0x1d,%r9
   14c41:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   14c45:	4d 29 e2             	sub    %r12,%r10
   14c48:	24 10                	and    $0x10,%al
   14c4a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   14c4f:	e8 7c fc fe 0f       	call   100048d0 <obstack_alloc_failed_handler@@Base+0xffe2830>
   14c54:	8f                   	(bad)  
   14c55:	0b 03                	or     (%rbx),%eax
   14c57:	00 00                	add    %al,(%rax)
   14c59:	41 b8 00 04 00 00    	mov    $0x400,%r8d
   14c5f:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   14c65:	4c 39 fb             	cmp    %r15,%rbx
   14c68:	74 49                	je     14cb3 <_obstack_memory_used@@Base+0x4503>
   14c6a:	c1 ea 18             	shr    $0x18,%edx
   14c6d:	01 3c 44             	add    %edi,(%rsp,%rax,2)
   14c70:	0f 84 7b 02 00 00    	je     14ef1 <_obstack_memory_used@@Base+0x4741>
   14c76:	3c 69                	cmp    $0x69,%al
   14c78:	74 1e                	je     14c98 <_obstack_memory_used@@Base+0x44e8>
   14c7a:	4d 01 dd             	add    %r11,%r13
   14c7d:	84 6f 02             	test   %ch,0x2(%rdi)
   14c80:	4c 01 d3             	add    %r10,%rbx
   14c83:	8b 44 24 18          	mov    0x18(%rsp),%eax
   14c87:	48 8d 48 29          	lea    0x29(%rax),%rcx
   14c8b:	f1                   	int1   
   14c8c:	00 0f                	add    %cl,(%rdi)
   14c8e:	85 84 fd ff ff c1 e4 	test   %eax,-0x1b3e0001(%rbp,%rdi,8)
   14c95:	3f                   	(bad)  
   14c96:	ff e0                	jmp    *%rax
   14c98:	45 31 c9             	xor    %r9d,%r9d
   14c9b:	0f 85 ae 00 00 00    	jne    14d4f <_obstack_memory_used@@Base+0x459f>
   14ca1:	94                   	xchg   %eax,%esp
   14ca2:	c1 47 8d 4c          	roll   $0x4c,-0x73(%rdi)
   14ca6:	0f 8f 05 03 00 00    	jg     14fb1 <_obstack_memory_used@@Base+0x4801>
   14cac:	ff 0f                	decl   (%rdi)
   14cae:	8c cf                	mov    %cs,%edi
   14cb0:	03 00                	add    (%rax),%eax
   14cb2:	00 be 04 00 00 00    	add    %bh,0x4(%rsi)
   14cb8:	31 ff                	xor    %edi,%edi
   14cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14cc0:	e9 7a fc ff 49       	jmp    4a01493f <obstack_alloc_failed_handler@@Base+0x49ff289f>
   14cc5:	c1 ee 34             	shr    $0x34,%esi
   14cc8:	c3                   	ret    
   14cc9:	0f 80 41 02 00 0f    	jo     f014f10 <obstack_alloc_failed_handler@@Base+0xeff2e70>
   14ccf:	84 91 fe ff ff 41    	test   %dl,0x41fffffe(%rcx)
   14cd5:	09 fc                	or     %edi,%esp
   14cd7:	49 01 c9             	add    %rcx,%r9
   14cda:	44 89 e0             	mov    %r12d,%eax
   14cdd:	83 c8 02             	or     $0x2,%eax
   14ce0:	4d 89 0f             	mov    %r9,(%r15)
   14ce3:	41 80 39 e9          	cmpb   $0xe9,(%r9)
   14ce7:	a8 fd                	test   $0xfd,%al
   14ce9:	ff                   	(bad)  
   14cea:	ff 00                	incl   (%rax)
   14cec:	66 fe                	data16 (bad) 
   14cee:	ff                   	(bad)  
   14cef:	ff 49 63             	decl   0x63(%rcx)
   14cf2:	e8 4d 48 ff c3       	call   ffffffffc4009544 <obstack_alloc_failed_handler@@Base+0xffffffffc3fe74a4>
   14cf7:	89 d8                	mov    %ebx,%eax
   14cf9:	48 f7 e5             	mul    %rbp
   14cfc:	70 0f                	jo     14d0d <_obstack_memory_used@@Base+0x455d>
   14cfe:	8f                   	(bad)  
   14cff:	24 0f                	and    $0xf,%al
   14d01:	84 b2 00 00 00 d1    	test   %dh,-0x2f000000(%rdx)
   14d07:	cf                   	iret   
   14d08:	49 63 e8             	movslq %r8d,%rbp
   14d0b:	48 c1 e6 34          	shl    $0x34,%rsi
   14d0f:	89 d8                	mov    %ebx,%eax
   14d11:	48 f7 49 ff c1 c1 e7 	testq  $0x8e7c1c1,-0x1(%rcx)
   14d18:	08 
   14d19:	41                   	rex.B
   14d1a:	48 c1 ee 11          	shr    $0x11,%rsi
   14d1e:	00 48 83             	add    %cl,-0x7d(%rax)
   14d21:	cb                   	lret   
   14d22:	ff                   	(bad)  
   14d23:	eb b2                	jmp    14cd7 <_obstack_memory_used@@Base+0x4527>
   14d25:	0f 1f 00             	nopl   (%rax)
   14d28:	49 21 f3             	and    %rsi,%r11
   14d2b:	03 00                	add    (%rax),%eax
   14d2d:	00 48 89             	add    %cl,-0x77(%rax)
   14d30:	d8 48 f7             	fmuls  -0x9(%rax)
   14d33:	0f 8f bb fd ff 0f    	jg     10014af4 <obstack_alloc_failed_handler@@Base+0xfff2a54>
   14d39:	84 86 4c 89 d8 80    	test   %al,-0x7f2776b4(%rsi)
   14d3f:	fc                   	cld    
   14d40:	01 00                	add    %eax,(%rax)
   14d42:	00 48 f7             	add    %cl,-0x9(%rax)
   14d45:	e5 0f                	in     $0xf,%eax
   14d47:	80 f3 01             	xor    $0x1,%bl
   14d4a:	00 eb                	add    %ch,%bl
   14d4c:	07                   	(bad)  
   14d4d:	89 c3                	mov    %eax,%ebx
   14d4f:	31 c0                	xor    %eax,%eax
   14d51:	41 09 c4             	or     %eax,%r12d
   14d54:	49 ff c0             	inc    %r8
   14d57:	89 d8                	mov    %ebx,%eax
   14d59:	4d 63 49 c7          	movslq -0x39(%r9),%r9
   14d5d:	48 0f af f2          	imul   %rdx,%rsi
   14d61:	4c 31 cf             	xor    %r9,%rdi
   14d64:	e3 0a                	jrcxz  14d70 <_obstack_memory_used@@Base+0x45c0>
   14d66:	e9 4d 39 c9 0f       	jmp    fca86b8 <obstack_alloc_failed_handler@@Base+0xfc86618>
   14d6b:	8f 49 21 fe          	(bad)
   14d6f:	00 00                	add    %al,(%rax)
   14d71:	78 a6                	js     14d19 <_obstack_memory_used@@Base+0x4569>
   14d73:	48 01 48 f7          	add    %rcx,-0x9(%rax)
   14d77:	ff 49 0f             	decl   0xf(%rcx)
   14d7a:	8c 12                	mov    %ss,(%rdx)
   14d7c:	01 00                	add    %eax,(%rax)
   14d7e:	00 39                	add    %bh,(%rcx)
   14d80:	c4                   	(bad)  
   14d81:	ff                   	(bad)  
   14d82:	ff 49 63             	decl   0x63(%rcx)
   14d85:	4d 01 cc             	add    %r9,%r12
   14d88:	c9                   	leave  
   14d89:	be 06 00 00 00       	mov    $0x6,%esi
   14d8e:	31 ff                	xor    %edi,%edi
   14d90:	48 89 d8             	mov    %rbx,%rax
   14d93:	48                   	rex.W
   14d94:	49 01 da             	add    %rbx,%r10
   14d97:	0f 84 d8 03 00 00    	je     15175 <_obstack_memory_used@@Base+0x49c5>
   14d9d:	00 00                	add    %al,(%rax)
   14d9f:	83 ee 01             	sub    $0x1,%esi
   14da2:	75 ec                	jne    14d90 <_obstack_memory_used@@Base+0x45e0>
   14da4:	e9 2b 0f 85 67       	jmp    67865cd4 <obstack_alloc_failed_handler@@Base+0x67843c34>
   14da9:	01 00                	add    %eax,(%rax)
   14dab:	00 48 89             	add    %cl,-0x77(%rax)
   14dae:	d8 48 c1             	fmuls  -0x3f(%rax)
   14db1:	e8 37 0f 85 60       	call   60865ced <obstack_alloc_failed_handler@@Base+0x60843c4d>
   14db6:	4c 39 f6             	cmp    %r14,%rsi
   14db9:	48 c1 e3 09          	shl    $0x9,%rbx
   14dbd:	e9 15 ff ff ff       	jmp    14cd7 <_obstack_memory_used@@Base+0x4527>
   14dc2:	49 63 e8             	movslq %r8d,%rbp
   14dc5:	4d 0f 85 e1 01 00 00 	rex.WRB jne 14fad <_obstack_memory_used@@Base+0x47fd>
   14dcc:	00 31                	add    %dh,(%rcx)
   14dce:	ff 90 48 89 d8 49    	call   *0x49d88948(%rax)
   14dd4:	89 cb                	mov    %ecx,%ebx
   14dd6:	48 89 c3             	mov    %rax,%rbx
   14dd9:	0f 80 3f 01 48 c1    	jo     ffffffffc1494f1e <obstack_alloc_failed_handler@@Base+0xffffffffc1472e7e>
   14ddf:	eb 34                	jmp    14e15 <_obstack_memory_used@@Base+0x4665>
   14de1:	01 4c 85 fa          	add    %ecx,-0x6(%rbp,%rax,4)
   14de5:	eb fe                	jmp    14de5 <_obstack_memory_used@@Base+0x4635>
   14de7:	ff                   	(bad)  
   14de8:	ff 74 2f e8          	push   -0x18(%rdi,%rbp,1)
   14dec:	4d 63 c9             	movslq %r9d,%r9
   14def:	be 05 00 00 48       	mov    $0x48000005,%esi
   14df4:	f7 fe                	idiv   %esi
   14df6:	66 2e 0f 1f 84 00 49 	cs nopw 0x1eeec149(%rax,%rax,1)
   14dfd:	c1 ee 1e 
   14e00:	48 89 d8             	mov    %rbx,%rax
   14e03:	48 f7 e5             	mul    %rbp
   14e06:	48 89 c3             	mov    %rax,%rbx
   14e09:	0f 80 f3 00 00 00    	jo     14f02 <_obstack_memory_used@@Base+0x4752>
   14e0f:	83 ee 01             	sub    $0x1,%esi
   14e12:	75 ec                	jne    14e00 <_obstack_memory_used@@Base+0x4650>
   14e14:	e9 bb fe ff ff       	jmp    14cd4 <_obstack_memory_used@@Base+0x4524>
   14e19:	49 63 e8             	movslq %r8d,%rbp
   14e1c:	4c 39 f1             	cmp    %r14,%rcx
   14e1f:	be 08 00 00 00       	mov    $0x8,%esi
   14e24:	31 ff                	xor    %edi,%edi
   14e26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   14e2d:	00 00 00 
   14e30:	48                   	rex.W
   14e31:	48 ff c1             	inc    %rcx
   14e34:	f7 e5                	mul    %ebp
   14e36:	48 89 48 21          	mov    %rcx,0x21(%rax)
   14e3a:	ff 8f 48 c1 e1 09    	decl   0x9e1c148(%rdi)
   14e40:	ee                   	out    %al,(%dx)
   14e41:	01 75 0f             	add    %esi,0xf(%rbp)
   14e44:	8c 79 ff             	mov    %?,-0x1(%rcx)
   14e47:	ff                   	(bad)  
   14e48:	ff 41 b9             	incl   -0x47(%rcx)
   14e4b:	01 00                	add    %eax,(%rax)
   14e4d:	00 0f                	add    %cl,(%rdi)
   14e4f:	85 69 01             	test   %ebp,0x1(%rcx)
   14e52:	00 00                	add    %al,(%rax)
   14e54:	29 de                	sub    %ebx,%esi
   14e56:	fe 4c 01 df          	decb   -0x21(%rcx,%rax,1)
   14e5a:	b9 4d 4c 01 d0       	mov    $0xd0014c4d,%ecx
   14e5f:	bd 00 04 00 00       	mov    $0x400,%ebp
   14e64:	e9 a5 fe ff ff       	jmp    14d0e <_obstack_memory_used@@Base+0x455e>
   14e69:	0f 85 ea fd ff ff    	jne    14c59 <_obstack_memory_used@@Base+0x44a9>
   14e6f:	bd 00 04 00 00       	mov    $0x400,%ebp
   14e74:	4d 29 cf             	sub    %r9,%r15
   14e77:	ff                   	(bad)  
   14e78:	ff 41 b9             	incl   -0x47(%rcx)
   14e7b:	01 00                	add    %eax,(%rax)
   14e7d:	00 00                	add    %al,(%rax)
   14e7f:	49 c1 e1 1a          	shl    $0x1a,%r9
   14e83:	00 e9                	add    %ch,%cl
   14e85:	6d                   	insl   (%dx),%es:(%rdi)
   14e86:	fe                   	(bad)  
   14e87:	ff                   	(bad)  
   14e88:	ff 41 4c             	incl   0x4c(%rcx)
   14e8b:	21 eb                	and    %ebp,%ebx
   14e8d:	00 00                	add    %al,(%rax)
   14e8f:	bd 00 04 00 49       	mov    $0x49000400,%ebp
   14e94:	85 f7                	test   %esi,%edi
   14e96:	ff                   	(bad)  
   14e97:	ff                   	(bad)  
   14e98:	ff 41 b9             	incl   -0x47(%rcx)
   14e9b:	01 00                	add    %eax,(%rax)
   14e9d:	00 00                	add    %al,(%rax)
   14e9f:	bd 00 04 00 00       	mov    $0x400,%ebp
   14ea4:	e9 76 ff ff ff       	jmp    14e1f <_obstack_memory_used@@Base+0x466f>
   14ea9:	41                   	rex.B
   14eaa:	48 c1 e0 2b          	shl    $0x2b,%rax
   14eae:	00 bd 00 04 00 00    	add    %bh,0x400(%rbp)
   14eb4:	e9 d0 fe ff ff       	jmp    14d89 <_obstack_memory_used@@Base+0x45d9>
   14eb9:	48 c1 ee 13          	shr    $0x13,%rsi
   14ebd:	00 00                	add    %al,(%rax)
   14ebf:	e9 49 c7 c5 08       	jmp    8c7160d <obstack_alloc_failed_handler@@Base+0x8c4f56d>
   14ec4:	fd                   	std    
   14ec5:	ff                   	(bad)  
   14ec6:	ff 00                	incl   (%rax)
   14ec8:	00 00                	add    %al,(%rax)
   14eca:	e9 dd fe 0f 8f       	jmp    ffffffff8f114dac <obstack_alloc_failed_handler@@Base+0xffffffff8f0f2d0c>
   14ecf:	ef                   	out    %eax,(%dx)
   14ed0:	01 00                	add    %eax,(%rax)
   14ed2:	00 d3                	add    %dl,%bl
   14ed4:	00 bd 00 04 00 00    	add    %bh,0x400(%rbp)
   14eda:	e9 e9 fe ff 4d       	jmp    4e014dc8 <obstack_alloc_failed_handler@@Base+0x4dff2d28>
   14edf:	09 db                	or     %ebx,%ebx
   14ee1:	4d 09 fa             	or     %r15,%r10
   14ee4:	00 00                	add    %al,(%rax)
   14ee6:	4d 39 e6             	cmp    %r12,%r14
   14ee9:	04 00                	add    $0x0,%al
   14eeb:	00 e9                	add    %ch,%cl
   14eed:	01 fd                	add    %edi,%ebp
   14eef:	ff                   	(bad)  
   14ef0:	ff 41 b9             	incl   -0x47(%rcx)
   14ef3:	02 49 21             	add    0x21(%rcx),%cl
   14ef6:	f2 41 b8 e8 03 00 00 	repnz mov $0x3e8,%r8d
   14efd:	e9 f0 fc ff ff       	jmp    14bf2 <_obstack_memory_used@@Base+0x4442>
   14f02:	bf 48 ff c6 00       	mov    $0xc6ff48,%edi
   14f07:	0f 4c 31             	cmovl  (%rcx),%esi
   14f0a:	ca ff ff             	lret   $0xffff
   14f0d:	ee                   	out    %al,(%dx)
   14f0e:	ff                   	(bad)  
   14f0f:	ff 0f                	decl   (%rdi)
   14f11:	85 0f                	test   %ecx,(%rdi)
   14f13:	8c 0f                	mov    %cs,(%rdi)
   14f15:	02 00                	add    (%rax),%al
   14f17:	00 ff                	add    %bh,%bh
   14f19:	e9 b1 fd ff ff       	jmp    14ccf <_obstack_memory_used@@Base+0x451f>
   14f1e:	bf 48 f7 fb 00       	mov    $0xfbf748,%edi
   14f23:	4d 21 ee             	and    %r13,%r14
   14f26:	49 f7 f9             	idiv   %r9
   14f29:	fe                   	(bad)  
   14f2a:	ff                   	(bad)  
   14f2b:	ff                   	(bad)  
   14f2c:	bf 4d 39 c5 00       	mov    $0xc5394d,%edi
   14f31:	48 83 cb ff          	or     $0xffffffffffffffff,%rbx
   14f35:	e9 05 ff ff ff       	jmp    14e3f <_obstack_memory_used@@Base+0x468f>
   14f3a:	e8 51 f9 fe ff       	call   4890 <__stack_chk_fail@plt>
   14f3f:	b8 01 00 00 00       	mov    $0x1,%eax
   14f44:	48 83 cb ff          	or     $0xffffffffffffffff,%rbx
   14f48:	e9 04 fe ff ff       	jmp    14d51 <_obstack_memory_used@@Base+0x45a1>
   14f4d:	4c 21 ca             	and    %r9,%rdx
   14f50:	00 00                	add    %al,(%rax)
   14f52:	48 83 cb ff          	or     $0xffffffffffffffff,%rbx
   14f56:	e9 44 fe ff ff       	jmp    14d9f <_obstack_memory_used@@Base+0x45ef>
   14f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14f60:	f3 0f 1e fa          	endbr64 
   14f64:	41 57                	push   %r15
   14f66:	49 89 fb             	mov    %rdi,%r11
   14f69:	41 56                	push   %r14
   14f6b:	0f 85 0b fd ff ff    	jne    14c7c <_obstack_memory_used@@Base+0x44cc>
   14f71:	89 d5                	mov    %edx,%ebp
   14f73:	41 54                	push   %r12
   14f75:	55                   	push   %rbp
   14f76:	53                   	push   %rbx
   14f77:	48 c1 ee 10          	shr    $0x10,%rsi
   14f7b:	05 00 00 48 48       	add    $0x48480000,%eax
   14f80:	c7 c2 f9 01 00 00    	mov    $0x1f9,%edx
   14f86:	48 8b 84 24 58 05 00 	mov    0x558(%rsp),%rax
   14f8d:	00 
   14f8e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   14f93:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
   14f98:	44 8b 94 24 50 05 00 	mov    0x550(%rsp),%r10d
   14f9f:	00 
   14fa0:	48 89 48 49          	mov    %rcx,0x49(%rax)
   14fa4:	c1 ed 1d             	shr    $0x1d,%ebp
   14fa7:	44 24 23             	rex.R and $0x23,%al
   14faa:	64 4d 39 ef          	fs cmp %r13,%r15
   14fae:	25 28 00 00 00       	and    $0x28,%eax
   14fb3:	49 01 dc             	add    %rbx,%r12
   14fb6:	24 08                	and    $0x8,%al
   14fb8:	05 49 09 fb 0f       	add    $0xffb0949,%eax
   14fbd:	84 cf                	test   %cl,%bh
   14fbf:	01 00                	add    %eax,(%rax)
   14fc1:	00 05 f6 4b 00 4c    	add    %al,0x4c004bf6(%rip)        # 4c019bbd <obstack_alloc_failed_handler@@Base+0x4bff7b1d>
   14fc7:	21 f0                	and    %esi,%eax
   14fc9:	45 c7                	rex.RB (bad) 
   14fcb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14fd0:	41 83 ff 0c          	cmp    $0xc,%r15d
   14fd4:	0f 8e f6 00 00 00    	jle    150d0 <_obstack_memory_used@@Base+0x4920>
   14fda:	41 83 ef 0c          	sub    $0xc,%r15d
   14fde:	41                   	rex.B
   14fdf:	49 f7 fa             	idiv   %r10
   14fe2:	00 45 31             	add    %al,0x31(%rbp)
   14fe5:	e4 49                	in     $0x49,%al
   14fe7:	21 de                	and    %ebx,%esi
   14fe9:	71 44                	jno    1502f <_obstack_memory_used@@Base+0x487f>
   14feb:	89 7c 4c 89          	mov    %edi,-0x77(%rsp,%rcx,2)
   14fef:	f6 89 dd 48 c1 e2 15 	testb  $0x15,-0x1d3eb723(%rcx)
   14ff6:	ff c7                	inc    %edi
   14ff8:	24 10                	and    $0x10,%al
   14ffa:	4c 31 eb             	xor    %r13,%rbx
   14ffd:	84 4c 85 d8          	test   %cl,-0x28(%rbp,%rax,4)
   15001:	f8                   	clc    
   15002:	31 c0                	xor    %eax,%eax
   15004:	85 db                	test   %ebx,%ebx
   15006:	48 8b 54 49 c1       	mov    -0x3f(%rcx,%rcx,2),%rdx
   1500b:	e6 36                	out    %al,$0x36
   1500d:	01 00                	add    %eax,(%rax)
   1500f:	00 00                	add    %al,(%rax)
   15011:	48 0f 49 c3          	cmovns %rbx,%rax
   15015:	48 85 c0             	test   %rax,%rax
   15018:	4c 0f 45 f0          	cmovne %rax,%r14
   1501c:	49 c7 c5 a4 02 00 00 	mov    $0x2a4,%r13
   15023:	54                   	push   %rsp
   15024:	48 85 49 21          	test   %rcx,0x21(%rcx)
   15028:	ff 83 fb 01 0f 8f    	incl   -0x70f0fe05(%rbx)
   1502e:	7e 00                	jle    15030 <_obstack_memory_used@@Base+0x4880>
   15030:	00 00                	add    %al,(%rax)
   15032:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
   15037:	49 c1 ee 1b          	shr    $0x1b,%r14
   1503b:	88 49 f7             	mov    %cl,-0x9(%rcx)
   1503e:	f9                   	stc    
   1503f:	01 f4                	add    %esi,%esp
   15041:	4d 89 ee             	mov    %r13,%r14
   15044:	41 0f 49 e9          	cmovns %r9d,%ebp
   15048:	2d fc ff ff 01       	sub    $0x1fffffc,%eax
   1504d:	48 e9 d7 fd ff ff    	rex.W jmp 14e2a <_obstack_memory_used@@Base+0x467a>
   15053:	ff 84 49 c1 ef 13 89 	incl   -0x76ec103f(%rcx,%rcx,2)
   1505a:	49 ff c1             	inc    %r9
   1505d:	db 74 0f 85          	(bad)  -0x7b(%rdi,%rcx,1)
   15061:	86 03                	xchg   %al,(%rbx)
   15063:	00 48 48             	add    %cl,0x48(%rax)
   15066:	c1 e8 38             	shr    $0x38,%eax
   15069:	c6 03 48             	movb   $0x48,(%rbx)
   1506c:	f7 4d 0f af c6 48 09 	testl  $0x948c6af,0xf(%rbp)
   15073:	f3 c1 0f 1f          	repz rorl $0x1f,(%rdi)
   15077:	00 45 31             	add    %al,0x31(%rbp)
   1507a:	49 01 da             	add    %rbx,%r10
   1507d:	84 24 e9             	test   %ah,(%rcx,%rbp,8)
   15080:	8b fd                	mov    %ebp,%edi
   15082:	ff                   	(bad)  
   15083:	ff                   	(bad)  
   15084:	fd                   	std    
   15085:	ff                   	(bad)  
   15086:	ff 25 28 00 00 00    	jmp    *0x28(%rip)        # 150b4 <_obstack_memory_used@@Base+0x4904>
   1508c:	0f 85 81 1d 00 00    	jne    16e13 <_obstack_memory_used@@Base+0x6663>
   15092:	48 81 c4 18 4d 01 c1 	add    $0xffffffffc1014d18,%rsp
   15099:	c2 69 03             	ret    $0x369
   1509c:	00 00                	add    %al,(%rax)
   1509e:	41 5c                	pop    %r12
   150a0:	41 5d                	pop    %r13
   150a2:	41 5e                	pop    %r14
   150a4:	41 5f                	pop    %r15
   150a6:	c3                   	ret    
   150a7:	66 0f 1f 84 00 00 0f 	nopw   0x67850f00(%rax,%rax,1)
   150ae:	85 67 
   150b0:	fe                   	(bad)  
   150b1:	ff                   	(bad)  
   150b2:	ff                   	(bad)  
   150b3:	ff 48 89             	decl   -0x77(%rax)
   150b6:	ef                   	out    %eax,(%dx)
   150b7:	be 4d 85 c4 00       	mov    $0xc4854d,%esi
   150bc:	48 89 da             	mov    %rbx,%rdx
   150bf:	48 01 dd             	add    %rbx,%rbp
   150c2:	e8 99 4c 0f af       	call   ffffffffaf109d60 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e7cc0>
   150c7:	c0 49 0f 8f          	rorb   $0x8f,0xf(%rcx)
   150cb:	b8 fd ff ff 00       	mov    $0xfffffd,%eax
   150d0:	4d 09 f4             	or     %r14,%r12
   150d3:	b8 0c 00 00 00       	mov    $0xc,%eax
   150d8:	44 0f 44 f8          	cmove  %eax,%r15d
   150dc:	e9 fd fe ff ff       	jmp    14fde <_obstack_memory_used@@Base+0x482e>
   150e1:	0f 1f 49 29          	nopl   0x29(%rcx)
   150e5:	f2 00 00             	repnz add %al,(%rax)
   150e8:	0f b6 4c 24 23       	movzbl 0x23(%rsp),%ecx
   150ed:	45 31 ff             	xor    %r15d,%r15d
   150f0:	45 31 4c 85 f7       	xor    %r9d,-0x9(%r13,%rax,4)
   150f5:	c8 40 45 0f          	enter  $0x4540,$0xf
   150f9:	be 4c 09 d6 83       	mov    $0x83d6094c,%esi
   150fe:	0f 8f 48 01 00 00    	jg     1524c <_obstack_memory_used@@Base+0x4a9c>
   15104:	44 89 c6             	mov    %r8d,%esi
   15107:	44 89 c7             	mov    %r8d,%edi
   1510a:	80 f9 49             	cmp    $0x49,%cl
   1510d:	c7 c2 48 f7 ff ff    	mov    $0xfffff748,%edx
   15113:	00 00                	add    %al,(%rax)
   15115:	4d 0f af e4          	imul   %r12,%r12
   15119:	03 00                	add    (%rax),%eax
   1511b:	00 00                	add    %al,(%rax)
   1511d:	00 48 d3             	add    %cl,-0x2d(%rax)
   15120:	e2 4c                	loop   1516e <_obstack_memory_used@@Base+0x49be>
   15122:	85 d2                	test   %edx,%edx
   15124:	0f 85 4d 29 d6 00    	jne    d77a77 <obstack_alloc_failed_handler@@Base+0xd559d7>
   1512a:	80 48 01 f1          	orb    $0xf1,0x1(%rax)
   1512e:	84 87 49 c1 e1 0a    	test   %al,0xae1c149(%rdi)
   15134:	e2 49                	loop   1517f <_obstack_memory_used@@Base+0x49cf>
   15136:	89 ff                	mov    %edi,%edi
   15138:	76 15                	jbe    1514f <_obstack_memory_used@@Base+0x499f>
   1513a:	48 ff c7             	inc    %rdi
   1513d:	49 c1 ee 1f          	shr    $0x1f,%r14
   15141:	83 f8 09             	cmp    $0x9,%eax
   15144:	0f 84 59 fd ff ff    	je     14ea3 <_obstack_memory_used@@Base+0x46f3>
   1514a:	40 80 fe 45          	cmp    $0x45,%sil
   1514e:	74 28                	je     15178 <_obstack_memory_used@@Base+0x49c8>
   15150:	40 80 fe 4f          	cmp    $0x4f,%sil
   15154:	74 4c                	je     151a2 <_obstack_memory_used@@Base+0x49f2>
   15156:	31 49 f7             	xor    %ecx,-0x9(%rcx)
   15159:	fb                   	sti    
   1515a:	0f 8f 9b fd ff ff    	jg     14efb <_obstack_memory_used@@Base+0x474b>
   15160:	78 00                	js     15162 <_obstack_memory_used@@Base+0x49b2>
   15162:	00 40 48             	add    %al,0x48(%rax)
   15165:	c1 e8 17             	shr    $0x17,%eax
   15168:	85 aa fc ff 49 f7    	test   %ebp,-0x8b60004(%rdx)
   1516e:	f8                   	clc    
   1516f:	ff e2                	jmp    *%rdx
   15171:	0f 1f 80 0f 85 48 ff 	nopl   -0xb77af1(%rax)
   15178:	0f 49 f7             	cmovns %edi,%esi
   1517b:	fc                   	cld    
   1517c:	ff                   	(bad)  
   1517d:	ff 49 21             	decl   0x21(%rcx)
   15180:	d4                   	(bad)  
   15181:	40 80 fe 7a          	cmp    $0x7a,%sil
   15185:	77 19                	ja     151a0 <_obstack_memory_used@@Base+0x49f0>
   15187:	48                   	rex.W
   15188:	48 01 df             	add    %rbx,%rdi
   1518b:	7a 4d                	jp     151da <_obstack_memory_used@@Base+0x4a2a>
   1518d:	09 c9                	or     %ecx,%ecx
   1518f:	29 da                	sub    %ebx,%edx
   15191:	fe                   	(bad)  
   15192:	ff                   	(bad)  
   15193:	ff 14 91             	call   *(%rcx,%rdx,4)
   15196:	48 01 ca             	add    %rcx,%rdx
   15199:	3e ff e2             	notrack jmp *%rdx
   1519c:	0f 1f 40 00          	nopl   0x0(%rax)
   151a0:	4d 89 f5             	mov    %r14,%r13
   151a3:	4d 89 ee             	mov    %r13,%r14
   151a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   151ad:	00 00 00 
   151b0:	49 8d 46 ff          	lea    -0x1(%r14),%rax
   151b4:	41 8d 56 01          	lea    0x1(%r14),%edx
   151b8:	49                   	rex.WB
   151b9:	48 85 f6             	test   %rsi,%rsi
   151bc:	d1 29                	shrl   (%rcx)
   151be:	4d 09 ea             	or     %r13,%r10
   151c1:	7c 5c                	jl     1521f <_obstack_memory_used@@Base+0x4a6f>
   151c3:	48 8d 49 29          	lea    0x29(%rcx),%rcx
   151c7:	f6 02 dc             	testb  $0xdc,(%rdx)
   151ca:	63 c9                	movsxd %ecx,%ecx
   151cc:	0f 8f 24 fe ff ff    	jg     14ff6 <_obstack_memory_used@@Base+0x4846>
   151d2:	f7 fb                	idiv   %ebx
   151d4:	01 00                	add    %eax,(%rax)
   151d6:	00 49 29             	add    %cl,0x29(%rcx)
   151d9:	ca fa 13             	lret   $0x13fa
   151dc:	00 00                	add    %al,(%rax)
   151de:	48 63 d3             	movslq %ebx,%rdx
   151e1:	48 39 d1             	cmp    %rdx,%rcx
   151e4:	48 89 d3             	mov    %rdx,%rbx
   151e7:	49 ff c2             	inc    %r10
   151ea:	d9 48 8b             	(bad)  -0x75(%rax)
   151ed:	44 24 4d             	rex.R and $0x4d,%al
   151f0:	85 f4                	test   %esi,%esp
   151f2:	e0 48                	loopne 1523c <_obstack_memory_used@@Base+0x4a8c>
   151f4:	39 d8                	cmp    %ebx,%eax
   151f6:	0f                   	(bad)  
   151f7:	0f 8f 64 ff 4d 89    	jg     ffffffff894f5161 <obstack_alloc_failed_handler@@Base+0xffffffff894d30c1>
   151fd:	f9                   	stc    
   151fe:	e9 af 00 00 00       	jmp    152b2 <_obstack_memory_used@@Base+0x4b02>
   15203:	00 00                	add    %al,(%rax)
   15205:	48 39 ca             	cmp    %rcx,%rdx
   15208:	48 c1 e8 02          	shr    $0x2,%rax
   1520c:	4d 85 f8             	test   %r15,%r8
   1520f:	4c 24 30             	rex.WR and $0x30,%al
   15212:	4c 8d 48 c1          	lea    -0x3f(%rax),%r9
   15216:	ea                   	(bad)  
   15217:	30 83 fb 30 e9 7a    	xor    %al,0x7ae930fb(%rbx)
   1521d:	02 00                	add    (%rax),%al
   1521f:	00 00                	add    %al,(%rax)
   15221:	41 83 fb 2b          	cmp    $0x2b,%r11d
   15225:	0f 84 9e 0f 8c d6    	je     ffffffffd68d61c9 <obstack_alloc_failed_handler@@Base+0xffffffffd68b4129>
   1522b:	03 00                	add    (%rax),%eax
   1522d:	00 be 20 49 ff c0    	add    %bh,-0x3f00b6e0(%rsi)
   15233:	4c 89 4c 39 f6       	mov    %r9,-0xa(%rcx,%rdi,1)
   15238:	4c 31 c6             	xor    %r8,%rsi
   1523b:	48 8b 4c 4d 31       	mov    0x31(%rbp,%rcx,2),%rcx
   15240:	ff                   	(bad)  
   15241:	7c 24                	jl     15267 <_obstack_memory_used@@Base+0x4ab7>
   15243:	40                   	rex
   15244:	4c 21 c9             	and    %r9,%rcx
   15247:	4a 14 49             	rex.WX adc $0x49,%al
   1524a:	c1 eb 03             	shr    $0x3,%ebx
   1524d:	4c 24 40             	rex.WR and $0x40,%al
   15250:	4c 8d                	rex.WR (bad) 
   15252:	e9 f3 02 00 00       	jmp    1554a <_obstack_memory_used@@Base+0x4d9a>
   15257:	fe                   	(bad)  
   15258:	ff 48 8b             	decl   -0x75(%rax)
   1525b:	4c 24 40             	rex.WR and $0x40,%al
   1525e:	48 c7 c0 e4 03 00 00 	mov    $0x3e4,%rax
   15265:	89 f5                	mov    %esi,%ebp
   15267:	10 8b 14 e9 b1 01    	adc    %cl,0x1b1e914(%rbx)
   1526d:	00 00                	add    %al,(%rax)
   1526f:	00 49 83             	add    %cl,-0x7d(%rcx)
   15272:	ed                   	in     (%dx),%eax
   15273:	01 73 ea             	add    %esi,-0x16(%rbx)
   15276:	48 01 4d 31          	add    %rcx,0x31(%rbp)
   1527a:	ea                   	(bad)  
   1527b:	03 e9                	add    %ecx,%ebp
   1527d:	bc 02 00 00 db       	mov    $0xdb000002,%esp
   15282:	eb 27                	jmp    152ab <_obstack_memory_used@@Base+0x4afb>
   15284:	0f 1f 40 00          	nopl   0x0(%rax)
   15288:	41 0f be 55 00       	movsbl 0x0(%r13),%edx
   1528d:	83 ea 30             	sub    $0x30,%edx
   15290:	01 0f                	add    %ecx,(%rdi)
   15292:	8c 79 ff             	mov    %?,-0x1(%rcx)
   15295:	ff                   	(bad)  
   15296:	ff                   	(bad)  
   15297:	7d 01                	jge    1529a <_obstack_memory_used@@Base+0x4aea>
   15299:	49 83 48 ff c2       	orq    $0xffffffffffffffc2,-0x1(%r8)
   1529e:	57                   	push   %rdi
   1529f:	d0 49 89             	rorb   -0x77(%rcx)
   152a2:	da fa                	(bad)  
   152a4:	09 0f                	or     %ecx,(%rdi)
   152a6:	4c 89 e9             	mov    %r13,%rcx
   152a9:	ff                   	(bad)  
   152aa:	ff                   	(bad)  
   152ab:	7c 4c                	jl     152f9 <_obstack_memory_used@@Base+0x4b49>
   152ad:	0f af ee             	imul   %esi,%ebp
   152b0:	bb ff ff ff 7f       	mov    $0x7fffffff,%ebx
   152b5:	eb dd                	jmp    15294 <_obstack_memory_used@@Base+0x4ae4>
   152b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   152be:	00 00 
   152c0:	45 89 c3             	mov    %r8d,%r11d
   152c3:	e9 2f fe ff ff       	jmp    150f7 <_obstack_memory_used@@Base+0x4947>
   152c8:	31 ff                	xor    %edi,%edi
   152ca:	48 8b 54 49 c7       	mov    -0x39(%rcx,%rcx,2),%rdx
   152cf:	c3                   	ret    
   152d0:	f0 fd                	lock std 
   152d2:	ff 0f                	decl   (%rdi)
   152d4:	8c 74 fc ff          	mov    %?,-0x1(%rsp,%rdi,8)
   152d8:	ff 18                	lcall  *(%rax)
   152da:	89 c8                	mov    %ecx,%eax
   152dc:	44 89 d2             	mov    %r10d,%edx
   152df:	c1 0f 49             	rorl   $0x49,(%rdi)
   152e2:	c1 ec 22             	shr    $0x22,%esp
   152e5:	ff c6                	inc    %esi
   152e7:	0f 85 cd 02 00 00    	jne    155ba <_obstack_memory_used@@Base+0x4e0a>
   152ed:	01 00                	add    %eax,(%rax)
   152ef:	00 4c 39 c3          	add    %cl,-0x3d(%rcx,%rdi,1)
   152f3:	fc                   	cld    
   152f4:	ff 48 c1             	decl   -0x3f(%rax)
   152f7:	e3 2f                	jrcxz  15328 <_obstack_memory_used@@Base+0x4b78>
   152f9:	89 d0                	mov    %edx,%eax
   152fb:	48 69 4d 89 ec 49 92 	imul   $0x419249ec,-0x77(%rbp),%rcx
   15302:	41 
   15303:	c1 f8 1f             	sar    $0x1f,%eax
   15306:	48 0f 8f 86 fd ff ff 	rex.W jg 15093 <_obstack_memory_used@@Base+0x48e3>
   1530d:	f8                   	clc    
   1530e:	02 44 29 74          	add    0x74(%rcx,%rbp,1),%al
   15312:	4e 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%r8
   15319:	00 
   1531a:	41                   	rex.B
   1531b:	4c 0f af cf          	imul   %rdi,%r9
   1531f:	d0 29                	shrb   (%rcx)
   15321:	d0 42 8d             	rolb   -0x73(%rdx)
   15324:	44 00 0f             	add    %r9b,(%rdi)
   15327:	84 11                	test   %dl,(%rcx)
   15329:	48 29 f2             	sub    %rsi,%rdx
   1532c:	16                   	(bad)  
   1532d:	49 39 f9             	cmp    %rdi,%r9
   15330:	fe                   	(bad)  
   15331:	ff                   	(bad)  
   15332:	ff 00                	incl   (%rax)
   15334:	00 41 f6             	add    %al,-0xa(%rcx)
   15337:	c1 03 75             	roll   $0x75,(%rbx)
   1533a:	4d 39 e0             	cmp    %r12,%r8
   1533d:	39 c3                	cmp    %eax,%ebx
   1533f:	5c                   	pop    %rsp
   15340:	0f 85 a2 00 00 00    	jne    153e8 <_obstack_memory_used@@Base+0x4c38>
   15346:	00 00                	add    %al,(%rax)
   15348:	81 c2 50 b8 1e 05    	add    $0x51eb850,%edx
   1534e:	41 89 d1             	mov    %edx,%r9d
   15351:	41 c1 c9 02          	ror    $0x2,%r9d
   15355:	41 81 f9 28 5c 8f 02 	cmp    $0x28f5c28,%r9d
   1535c:	77 17                	ja     15375 <_obstack_memory_used@@Base+0x4bc5>
   1535e:	c1 ca 04             	ror    $0x4,%edx
   15361:	45 31 c0             	xor    %r8d,%r8d
   15364:	81 fa 0b d7 a3 00    	cmp    $0xa3d70b,%edx
   1536a:	41 0f 92 c0          	setb   %r8b
   1536e:	41 81 c0 6d 01 00 00 	add    $0x16d,%r8d
   15375:	45 29 c2             	sub    %r8d,%r10d
   15378:	0f 8c 35 01 00 00    	jl     154b3 <_obstack_memory_used@@Base+0x4d03>
   1537e:	0f 8c 46 01 00 00    	jl     154ca <_obstack_memory_used@@Base+0x4d1a>
   15384:	00 49 63             	add    %cl,0x63(%rcx)
   15387:	d0 48 c1             	rorb   -0x3f(%rax)
   1538a:	e8 09 29 c2 48       	call   48c37c98 <obstack_alloc_failed_handler@@Base+0x48c15bf8>
   1538f:	69 d2 93 24 49 92    	imul   $0x92492493,%edx,%edx
   15395:	41 c1 49 f7 ff       	rorl   $0xff,-0x9(%r9)
   1539a:	c1 e9 3d             	shr    $0x3d,%ecx
   1539d:	fd                   	std    
   1539e:	ff                   	(bad)  
   1539f:	ff                   	(bad)  
   153a0:	fb                   	sti    
   153a1:	02 00                	add    (%rax),%al
   153a3:	48 31 d1             	xor    %rdx,%rcx
   153a6:	48 f7 f9             	idiv   %rcx
   153a9:	d5                   	(bad)  
   153aa:	00 00                	add    %al,(%rax)
   153ac:	00 00                	add    %al,(%rax)
   153ae:	41 29 d1             	sub    %edx,%r9d
   153b1:	47 8d 44 0a 03       	lea    0x3(%r10,%r9,1),%r8d
   153b6:	45 85 c0             	test   %r8d,%r8d
   153b9:	41 0f 49 c0          	cmovns %r8d,%eax
   153bd:	41 c1 f8 1f          	sar    $0x1f,%r8d
   153c1:	41 83 c0 01          	add    $0x1,%r8d
   153c5:	40 80 49 29 da       	rex orb $0xda,0x29(%rcx)
   153ca:	84 49 31             	test   %cl,0x31(%rcx)
   153cd:	d1 74 27 80          	shll   -0x80(%rdi,%riz,1)
   153d1:	fe                   	(bad)  
   153d2:	67 0f 85 51 16 00 00 	addr32 jne 16a2a <_obstack_memory_used@@Base+0x627a>
   153d9:	48 63 d1             	movslq %ecx,%rdx
   153dc:	89 c8                	mov    %ecx,%eax
   153de:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
   153e5:	c1 f8 1f             	sar    $0x1f,%eax
   153e8:	48                   	rex.W
   153e9:	48 29 c3             	sub    %rax,%rbx
   153ec:	29 4d 89             	sub    %ecx,-0x77(%rbp)
   153ef:	c6                   	(bad)  
   153f0:	0f af d7             	imul   %edi,%edx
   153f3:	29 d0                	sub    %edx,%eax
   153f5:	4d 89 df             	mov    %r11,%r15
   153f8:	48                   	rex.W
   153f9:	49 01 f8             	add    %rdi,%r8
   153fc:	89 c1                	mov    %eax,%ecx
   153fe:	48 69 d2 48 31 fb 49 	imul   $0x49fb3148,%rdx,%rdx
   15405:	29 da                	sub    %ebx,%edx
   15407:	f9                   	stc    
   15408:	48 0f af f0          	imul   %rax,%rsi
   1540c:	89 f1                	mov    %esi,%ecx
   1540e:	29 ca                	sub    %ecx,%edx
   15410:	44 6b 4c 39 f9 4d    	imul   $0x4d,-0x7(%rcx,%rdi,1),%r9d
   15416:	21 db                	and    %ebx,%ebx
   15418:	ff c1                	inc    %ecx
   1541a:	e7 2f                	out    %eax,$0x2f
   1541c:	48 ff c0             	inc    %rax
   1541f:	45 85 db             	test   %r11d,%r11d
   15422:	0f 84 ad 18 00 00    	je     16cd5 <_obstack_memory_used@@Base+0x6525>
   15428:	4d 89 ee             	mov    %r13,%r14
   1542b:	41 83 fb 2b          	cmp    $0x2b,%r11d
   1542f:	0f 84 b2 18 00 00    	je     16ce7 <_obstack_memory_used@@Base+0x6537>
   15435:	c6 44 24 48 00       	movb   $0x0,0x48(%rsp)
   1543a:	b8 01 00 0f 8f       	mov    $0x8f0f0001,%eax
   1543f:	0c 02                	or     $0x2,%al
   15441:	00 00                	add    %al,(%rax)
   15443:	44 24 30             	rex.R and $0x30,%al
   15446:	02 00                	add    (%rax),%al
   15448:	4c 39 d9             	cmp    %r11,%rcx
   1544b:	c9                   	leave  
   1544c:	0f 49 c1             	cmovns %ecx,%eax
   1544f:	ed                   	in     (%dx),%eax
   15450:	12 ff                	adc    %bh,%bh
   15452:	4f 0f 48 ff          	rex.WRXB cmovs %r15,%r15
   15456:	c0 00 00             	rolb   $0x0,(%rax)
   15459:	84 c0                	test   %al,%al
   1545b:	0f 84 67 0d 00 00    	je     161c8 <_obstack_memory_used@@Base+0x5a18>
   15461:	ba 20 48 85 d3       	mov    $0xd3854820,%edx
   15466:	45 31 48 c1          	xor    %r9d,-0x3f(%r8)
   1546a:	4d 09 e1             	or     %r12,%r9
   1546d:	fb                   	sti    
   1546e:	00 0f                	add    %cl,(%rdi)
   15470:	0f 85 e7 02 00 00    	jne    1575d <_obstack_memory_used@@Base+0x4fad>
   15476:	0f 48 ff             	cmovs  %edi,%edi
   15479:	c2 4d 01             	ret    $0x14d
   1547c:	f0 07                	lock (bad) 
   1547e:	48 89 d3             	mov    %rdx,%rbx
   15481:	40 88 30             	mov    %sil,(%rax)
   15484:	4c 09 de             	or     %r11,%rsi
   15487:	24 10                	and    $0x10,%al
   15489:	49 31 d4             	xor    %rdx,%r12
   1548c:	4d 09 eb             	or     %r13,%r11
   1548f:	00 75 c0             	add    %dh,-0x40(%rbp)
   15492:	8d bc 24 00 01 00 49 	lea    0x49000100(%rsp),%edi
   15499:	f7 fc                	idiv   %esp
   1549b:	01 00                	add    %eax,(%rax)
   1549d:	00 00                	add    %al,(%rax)
   1549f:	04 00                	add    $0x0,%al
   154a1:	49 f7 fe             	idiv   %r14
   154a4:	7f e4                	jg     1548a <_obstack_memory_used@@Base+0x4cda>
   154a6:	30 e8                	xor    %ch,%al
   154a8:	c4                   	(bad)  
   154a9:	f6 fe                	idiv   %dh
   154ab:	ff 48 89             	decl   -0x77(%rax)
   154ae:	c1 48 85 c0          	rorl   $0xc0,-0x7b(%rax)
   154b2:	0f 84 4d 01 e8 ff    	je     ffffffffffe95605 <obstack_alloc_failed_handler@@Base+0xffffffffffe73565>
   154b8:	49 21 df             	and    %rbx,%r15
   154bb:	24 30                	and    $0x30,%al
   154bd:	4c 8d 78 49          	lea    0x49(%rax),%r15
   154c1:	29 f9                	sub    %edi,%ecx
   154c3:	fb                   	sti    
   154c4:	2d 0f 84 4c 01       	sub    $0x14c840f,%eax
   154c9:	c7 00 85 0f 85 ab    	movl   $0xab850f85,(%rax)
   154cf:	02 00                	add    (%rax),%al
   154d1:	00 f7                	add    %dh,%bh
   154d3:	f8                   	clc    
   154d4:	63 d3                	movsxd %ebx,%edx
   154d6:	49 39 d7             	cmp    %rdx,%r15
   154d9:	48                   	rex.W
   154da:	48 0f af d8          	imul   %rax,%rbx
   154de:	d3 df                	rcr    %cl,%edi
   154e0:	48 8b 44 24 49       	mov    0x49(%rsp),%rax
   154e5:	ff c2                	inc    %edx
   154e7:	e0 e9                	loopne 154d2 <_obstack_memory_used@@Base+0x4d22>
   154e9:	9f                   	lahf   
   154ea:	fc                   	cld    
   154eb:	ff                   	(bad)  
   154ec:	ff 31                	push   (%rcx)
   154ee:	c0 ff ff             	sar    $0xff,%bh
   154f1:	48 85 ed             	test   %rbp,%rbp
   154f4:	0f 49 c1             	cmovns %ecx,%eax
   154f7:	e7 12                	out    %eax,$0x12
   154f9:	00 49 39             	add    %cl,0x39(%rcx)
   154fc:	d7                   	xlat   %ds:(%rbx)
   154fd:	73 3d                	jae    1553c <_obstack_memory_used@@Base+0x4d8c>
   154ff:	4c 29 fa             	sub    %r15,%rdx
   15502:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   15507:	48 8d 44 e9 52       	lea    0x52(%rcx,%rbp,8),%rax
   1550c:	ff                   	(bad)  
   1550d:	ff                   	(bad)  
   1550e:	ff 24 30             	jmp    *(%rax,%rsi,1)
   15511:	41 83 fb 30          	cmp    $0x30,%r11d
   15515:	0f 84 15 12 00 00    	je     16730 <_obstack_memory_used@@Base+0x5f80>
   1551b:	41 83 fb 2b          	cmp    $0x2b,%r11d
   1551f:	0f 84 0b 12 00 49    	je     49016730 <obstack_alloc_failed_handler@@Base+0x48ff4690>
   15525:	49 29 fb             	sub    %rdi,%r11
   15528:	85 f8                	test   %edi,%eax
   1552a:	00 00                	add    %al,(%rax)
   1552c:	00 e8                	add    %ch,%al
   1552e:	2e e9 07 03 00 00    	cs jmp 1583b <_obstack_memory_used@@Base+0x508b>
   15534:	2c 24                	sub    $0x24,%al
   15536:	30 48 8b             	xor    %cl,-0x75(%rax)
   15539:	4c                   	rex.WR
   1553a:	4c 85 c1             	test   %r8,%rcx
   1553d:	84 ed                	test   %ch,%ch
   1553f:	0f 85 97 11 00 00    	jne    166dc <_obstack_memory_used@@Base+0x5f2c>
   15545:	80 0f 84             	orb    $0x84,(%rdi)
   15548:	8e 01                	mov    (%rcx),%es
   1554a:	00 00                	add    %al,(%rax)
   1554c:	74 11                	je     1555f <_obstack_memory_used@@Base+0x4daf>
   1554e:	00 00                	add    %al,(%rax)
   15550:	4c 8d 69 49          	lea    0x49(%rcx),%r13
   15554:	c1 eb 09             	shr    $0x9,%ebx
   15557:	74 2d                	je     15586 <_obstack_memory_used@@Base+0x4dd6>
   15559:	e8 52 f1 fe ff       	call   46b0 <__ctype_toupper_loc@plt>
   1555e:	48 8d b4 24 48 c1 e3 	lea    0x27e3c148(%rsp),%rsi
   15565:	27 
   15566:	66 2e 0f 1f 84 00 49 	cs nopw 0xfff749(%rax,%rax,1)
   1556d:	f7 ff 00 
   15570:	42 0f b6 49 29       	rex.X movzbl 0x29(%rcx),%ecx
   15575:	f9                   	stc    
   15576:	4d 85 f8             	test   %r15,%r8
   15579:	85 d9                	test   %ebx,%ecx
   1557b:	42 88 54 2d 00       	mov    %dl,0x0(%rbp,%r13,1)
   15580:	49                   	rex.WB
   15581:	48 31 df             	xor    %rbx,%rdi
   15584:	73 ea                	jae    15570 <_obstack_memory_used@@Base+0x4dc0>
   15586:	4c 01 fd             	add    %r15,%rbp
   15589:	49 01 dc             	add    %rbx,%r12
   1558c:	e9 b3 fa ff 4d       	jmp    4e015044 <obstack_alloc_failed_handler@@Base+0x4dff2fa4>
   15591:	01 e1                	add    %esp,%ecx
   15593:	f5                   	cmc    
   15594:	83 ff 45             	cmp    $0x45,%edi
   15597:	0f 85 2d 48 c1 e2    	jne    ffffffffe2c29dca <obstack_alloc_failed_handler@@Base+0xffffffffe2c07d2a>
   1559d:	26 01 fc             	es add %edi,%esp
   155a0:	ff                   	(bad)  
   155a1:	ff 4d 89             	decl   -0x77(%rbp)
   155a4:	ee                   	out    %al,(%dx)
   155a5:	31 ff                	xor    %edi,%edi
   155a7:	0f b6 44 24 40       	movzbl 0x40(%rsp),%eax
   155ac:	49 c7 c4 79 fe ff ff 	mov    $0xfffffffffffffe79,%r12
   155b3:	88 44 48 09          	mov    %al,0x9(%rax,%rcx,2)
   155b7:	d7                   	xlat   %ds:(%rbx)
   155b8:	ff 45 0f             	incl   0xf(%rbp)
   155bb:	84 e0                	test   %ah,%al
   155bd:	fb                   	sti    
   155be:	ff                   	(bad)  
   155bf:	ff 45 31             	incl   0x31(%rbp)
   155c2:	ed                   	in     (%dx),%eax
   155c3:	41 b8 20 25 00 00    	mov    $0x2520,%r8d
   155c9:	66 44 89 84 24 48 ff 	mov    %r8w,0xc7ff48(%rsp)
   155d0:	c7 00 
   155d2:	85 ff                	test   %edi,%edi
   155d4:	4d 89 c3             	mov    %r8,%r11
   155d7:	48 c7 c3 45 ff ff ff 	mov    $0xffffffffffffff45,%rbx
   155de:	fd                   	std    
   155df:	00 49 f7             	add    %cl,-0x9(%rcx)
   155e2:	48 f7 f8             	idiv   %rax
   155e5:	48 f7 f8             	idiv   %rax
   155e8:	89 f5                	mov    %esi,%ebp
   155ea:	48 c1 e3 0a          	shl    $0xa,%rbx
   155ee:	ff 4d 8d             	decl   -0x73(%rbp)
   155f1:	7d ff                	jge    155f2 <_obstack_memory_used@@Base+0x4e42>
   155f3:	4d 89 fe             	mov    %r15,%r14
   155f6:	3c 25                	cmp    $0x25,%al
   155f8:	0f 49 21             	cmovns (%rcx),%esp
   155fb:	d1 ff                	sar    %edi
   155fd:	ff 49 21             	decl   0x21(%rcx)
   15600:	f5                   	cmc    
   15601:	00 00                	add    %al,(%rax)
   15603:	e9 49 c1 ed 09       	jmp    9ef1751 <obstack_alloc_failed_handler@@Base+0x9ecf6b1>
   15608:	4d 89 ee             	mov    %r13,%r14
   1560b:	4c 85 e2             	test   %r12,%rdx
   1560e:	24 08                	and    $0x8,%al
   15610:	4c 29 e0             	sub    %r12,%rax
   15613:	41 83 fb 2d          	cmp    $0x2d,%r11d
   15617:	0f 48 ff             	cmovs  %edi,%edi
   1561a:	c2 00 48             	ret    $0x4800
   1561d:	0f af f2             	imul   %edx,%esi
   15620:	88 58 12             	mov    %bl,0x12(%rax)
   15623:	00 00                	add    %al,(%rax)
   15625:	4c 29 f8             	sub    %r15,%rax
   15628:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1562e:	48 85 49 85          	test   %rcx,-0x7b(%rcx)
   15632:	c8 4d 09 49          	enter  $0x94d,$0x49
   15636:	85 4c 09 db          	test   %ecx,-0x25(%rcx,%rcx,1)
   1563a:	39 e4                	cmp    %esp,%esp
   1563c:	ff                   	(bad)  
   1563d:	ff 48 85             	decl   -0x7b(%rax)
   15640:	ed                   	in     (%dx),%eax
   15641:	74 3a                	je     1567d <_obstack_memory_used@@Base+0x4ecd>
   15643:	49 ff c3             	inc    %r11
   15646:	49 f7 fc             	idiv   %r12
   15649:	83 0f 8c             	orl    $0xffffff8c,(%rdi)
   1564c:	32 fd                	xor    %ch,%bh
   1564e:	ff                   	(bad)  
   1564f:	ff 48 4c             	decl   0x4c(%rax)
   15652:	31 f0                	xor    %esi,%eax
   15654:	e6 0f                	out    %al,$0xf
   15656:	84 1c 16             	test   %bl,(%rsi,%rdx,1)
   15659:	00 00                	add    %al,(%rax)
   1565b:	41 83 fb 48          	cmp    $0x48,%r11d
   1565f:	ff c1                	inc    %ecx
   15661:	12 16                	adc    (%rsi),%dl
   15663:	00 00                	add    %al,(%rax)
   15665:	48                   	rex.W
   15666:	4c 89 e2             	mov    %r12,%rdx
   15669:	20 00                	and    %al,(%rax)
   1566b:	00 00                	add    %al,(%rax)
   1566d:	48 89 dd             	mov    %rbx,%rbp
   15670:	e8 eb f2 fe ff       	call   4960 <memset@plt>
   15675:	4c 89 ca             	mov    %r9,%rdx
   15678:	09 48 49             	or     %ecx,0x49(%rax)
   1567b:	31 fa                	xor    %edi,%edx
   1567d:	4d 01 ec             	add    %r13,%r12
   15680:	e9 bf f9 ff ff       	jmp    15044 <_obstack_memory_used@@Base+0x4894>
   15685:	0f 84 bf fe ff ff    	je     1554a <_obstack_memory_used@@Base+0x4d9a>
   1568b:	48 c1 e3 0b          	shl    $0xb,%rbx
   1568f:	be 6b 00 00 00       	mov    $0x6b,%esi
   15694:	8b 49 ff             	mov    -0x1(%rcx),%ecx
   15697:	c2 85 49             	ret    $0x4985
   1569a:	f7 f9                	idiv   %ecx
   1569c:	49 39 f0             	cmp    %rsi,%r8
   1569f:	c7 44 4c 01 fb 00 00 	movl   $0xfb,0x1(%rsp,%rcx,2)
   156a6:	00 
   156a7:	44 0f 44 d8          	cmove  %eax,%r11d
   156ab:	89 48 89             	mov    %ecx,-0x77(%rax)
   156ae:	ce                   	(bad)  
   156af:	24 48                	and    $0x48,%al
   156b1:	00 31                	add    %dh,(%rcx)
   156b3:	c9                   	leave  
   156b4:	4d 89 c9             	mov    %r9,%r9
   156b7:	41 89 c7             	mov    %eax,%r15d
   156ba:	89 d0                	mov    %edx,%eax
   156bc:	f7 d0                	not    %eax
   156be:	c1 49 39 fa          	rorl   $0xfa,0x39(%rcx)
   156c2:	8a fd                	mov    %ch,%bh
   156c4:	ff 4d 31             	decl   0x31(%rbp)
   156c7:	f5                   	cmc    
   156c8:	ee                   	out    %al,(%dx)
   156c9:	31 e9                	xor    %ebp,%ecx
   156cb:	b7 fd                	mov    $0xfd,%bh
   156cd:	ff                   	(bad)  
   156ce:	ff 84 01 00 00 48 00 	incl   0x480000(%rcx,%rax,1)
   156d5:	be 6a 00 00 00       	mov    $0x6a,%esi
   156da:	c7                   	(bad)  
   156db:	0f 84 34 fe ff ff    	je     15515 <_obstack_memory_used@@Base+0x4d65>
   156e1:	00 8b 40 1c 0f 8f    	add    %cl,-0x70f0e3c0(%rbx)
   156e7:	35 02 00 00 41       	xor    $0x41000002,%eax
   156ec:	0f 9c 7c da 48       	setl   0x48(%rdx,%rbx,8)
   156f1:	ff c1                	inc    %ecx
   156f3:	c9                   	leave  
   156f4:	e9 57 fd ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   156f9:	4d 89 ee             	mov    %r13,%r14
   156fc:	31 4d 31             	xor    %ecx,0x31(%rbp)
   156ff:	ca 4d 85             	lret   $0x854d
   15702:	d0 be 49 c1 e1 20    	sarb   0x20e1c149(%rsi)
   15708:	8b 50 0c             	mov    0xc(%rax),%edx
   1570b:	48 ff c6             	inc    %rsi
   1570e:	89 ee                	mov    %ebp,%esi
   15710:	31 ff                	xor    %edi,%edi
   15712:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15717:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   1571e:	00 
   1571f:	be 64 00 00 00       	mov    $0x64,%esi
   15724:	8b 50 0c             	mov    0xc(%rax),%edx
   15727:	49 01 cd             	add    %rcx,%r13
   1572a:	89 ee                	mov    %ebp,%esi
   1572c:	0f 4c 01             	cmovl  (%rcx),%eax
   1572f:	cf                   	iret   
   15730:	ff 4c 01 c8          	decl   -0x38(%rcx,%rax,1)
   15734:	84 ff                	test   %bh,%bh
   15736:	48 c1 eb 33          	shr    $0x33,%rbx
   1573a:	00 41 0f             	add    %al,0xf(%rcx)
   1573d:	45 c7 45 31 49 29 c2 	rex.RB movl $0x24c22949,0x31(%r13)
   15744:	24 
   15745:	40 e9 78 fe ff ff    	rex jmp 155c3 <_obstack_memory_used@@Base+0x4e13>
   1574b:	4d 89 ee             	mov    %r13,%r14
   1574e:	0f b6 44 24 40       	movzbl 0x40(%rsp),%eax
   15753:	45 84 ff             	test   %r15b,%r15b
   15756:	be 41 00 00 00       	mov    $0x41,%esi
   1575b:	41 0f 45 c7          	cmovne %r15d,%eax
   1575f:	88 44 24 40          	mov    %al,0x40(%rsp)
   15763:	b8 20 25 00 4c       	mov    $0x4c002520,%eax
   15768:	31 c7                	xor    %eax,%edi
   1576a:	ed                   	in     (%dx),%eax
   1576b:	66 89 84 24 48 c7 c1 	mov    %ax,0x18c1c748(%rsp)
   15772:	18 
   15773:	48 c7 c6 cd fc ff ff 	mov    $0xfffffffffffffccd,%rsi
   1577a:	00 e9                	add    %ch,%cl
   1577c:	48 01 df             	add    %rbx,%rdi
   1577f:	ff 31                	push   (%rcx)
   15781:	ff 41 0f             	incl   0xf(%rcx)
   15784:	49 c1 e3 15          	shl    $0x15,%r11
   15788:	8d 75 01             	lea    0x1(%rbp),%esi
   1578b:	41 0f 84 d3 02 00 00 	rex.B je 15a65 <_obstack_memory_used@@Base+0x52b5>
   15792:	3a 0f                	cmp    (%rdi),%cl
   15794:	84 10                	test   %dl,(%rax)
   15796:	0e                   	(bad)  
   15797:	00 00                	add    %al,(%rax)
   15799:	be 3a 00 00 00       	mov    $0x3a,%esi
   1579e:	3c 7a                	cmp    $0x7a,%al
   157a0:	0f 85 49 85 4d 01    	jne    14edcef <obstack_alloc_failed_handler@@Base+0x14cbc4f>
   157a6:	e6 89                	out    %al,$0x89
   157a8:	ef                   	out    %eax,(%dx)
   157a9:	48 c1 e1 03          	shl    $0x3,%rcx
   157ad:	20 85 c9 49 85 da    	and    %al,-0x257ab637(%rbp)
   157b3:	f8                   	clc    
   157b4:	ff                   	(bad)  
   157b5:	ff 48 8b             	decl   -0x75(%rax)
   157b8:	50                   	push   %rax
   157b9:	28 41 bf             	sub    %al,-0x41(%rcx)
   157bc:	01 00                	add    %eax,(%rax)
   157be:	00 00                	add    %al,(%rax)
   157c0:	e9 f1 fd ff ff       	jmp    155b6 <_obstack_memory_used@@Base+0x4e06>
   157c5:	bf 00 00 00 00       	mov    $0x0,%edi
   157ca:	4c 09 e8             	or     %r13,%rax
   157cd:	8b 44 24 49          	mov    0x49(%rsp),%eax
   157d1:	31 c5                	xor    %eax,%ebp
   157d3:	0f 8f ac fe 48 c1    	jg     ffffffffc14a5685 <obstack_alloc_failed_handler@@Base+0xffffffffc14835e5>
   157d9:	e8 26 c1 d1 4c       	call   4cd31904 <obstack_alloc_failed_handler@@Base+0x4cd0f864>
   157de:	69 0f 85 99 fc ff    	imul   $0xfffc9985,(%rdi),%ecx
   157e4:	ff c0                	inc    %eax
   157e6:	1f                   	(bad)  
   157e7:	e9 49 39 c8 00       	jmp    c99135 <obstack_alloc_failed_handler@@Base+0xc77095>
   157ec:	88 88 49 c1 e8 20    	mov    %cl,0x20e8c149(%rax)
   157f2:	48 c1 e8 20          	shr    $0x20,%rax
   157f6:	41                   	rex.B
   157f7:	48 39 f6             	cmp    %rsi,%rsi
   157fa:	d0 4c 39 de          	rorb   -0x22(%rcx,%rdi,1)
   157fe:	0b c1                	or     %ecx,%eax
   15800:	f8                   	clc    
   15801:	05 45 89 48 29       	add    $0x29488945,%eax
   15806:	ca 41 29             	lret   $0x2941
   15809:	49 ff c3             	inc    %r11
   1580c:	c8 41 48 c1          	enter  $0x4841,$0xc1
   15810:	ef                   	out    %eax,(%dx)
   15811:	38 c9                	cmp    %cl,%cl
   15813:	89 4c 29 e0          	mov    %ecx,-0x20(%rcx,%rbp,1)
   15817:	3c c1                	cmp    $0xc1,%al
   15819:	f8                   	clc    
   1581a:	1f                   	(bad)  
   1581b:	48                   	rex.W
   1581c:	4d 39 c6             	cmp    %r8,%r14
   1581f:	01 c1                	add    %eax,%ecx
   15821:	c1 f9 05             	sar    $0x5,%ecx
   15824:	0f 84 d6 fd ff ff    	je     15600 <_obstack_memory_used@@Base+0x4e50>
   1582a:	3c 48                	cmp    $0x48,%al
   1582c:	f7 fb                	idiv   %ebx
   1582e:	c0 4c 0f 85 a6       	rorb   $0xa6,-0x7b(%rdi,%rcx,1)
   15833:	0f 8f 8b 00 00 00    	jg     158c4 <_obstack_memory_used@@Base+0x5114>
   15839:	49 83 f9 0f          	cmp    $0xf,%r9
   1583d:	84 bb fc ff ff 00    	test   %bh,0xfffffc(%rbx)
   15843:	0f 87 9a 0f 00 00    	ja     167e3 <_obstack_memory_used@@Base+0x6033>
   15849:	4d 0f 8c fb fe ff ff 	rex.WRB jl 1574b <_obstack_memory_used@@Base+0x4f9b>
   15850:	00 4d 29             	add    %cl,0x29(%rbp)
   15853:	e4 fc                	in     $0xfc,%al
   15855:	ff                   	(bad)  
   15856:	ff 48 89             	decl   -0x77(%rax)
   15859:	f9                   	stc    
   1585a:	00 00                	add    %al,(%rax)
   1585c:	48 01 c7             	add    %rax,%rdi
   1585f:	44 24 0f             	rex.R and $0xf,%al
   15862:	85 15 ff ff ff f0    	test   %edx,-0xf000001(%rip)        # fffffffff1015867 <obstack_alloc_failed_handler@@Base+0xfffffffff0ff37c7>
   15868:	01 01                	add    %eax,(%rcx)
   1586a:	49 0f 4d 21          	cmovge (%r9),%rsp
   1586e:	de 00                	fiadds (%rax)
   15870:	e9 db fb ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   15875:	48 ff c1             	inc    %rcx
   15878:	4c 0f af fe          	imul   %rsi,%r15
   1587c:	40                   	rex
   1587d:	45 84 ff             	test   %r15b,%r15b
   15880:	be 61 00 00 00       	mov    $0x61,%esi
   15885:	4c 0f af c6          	imul   %rsi,%r8
   15889:	88 44 24 48          	mov    %al,0x48(%rsp)
   1588d:	f7 f8                	idiv   %eax
   1588f:	fe                   	(bad)  
   15890:	ff                   	(bad)  
   15891:	ff 4d 89             	decl   -0x77(%rbp)
   15894:	ee                   	out    %al,(%dx)
   15895:	31 ff                	xor    %edi,%edi
   15897:	49 0f af ce          	imul   %r14,%rcx
   1589b:	b6 4c                	mov    $0x4c,%dh
   1589d:	24 40                	and    $0x40,%al
   1589f:	45 84 ff             	test   %r15b,%r15b
   158a2:	b8 4d 01 c5 00       	mov    $0xc5014d,%eax
   158a7:	be 70 49 c7 c3       	mov    $0xc3c74970,%esi
   158ac:	c6                   	(bad)  
   158ad:	fc                   	cld    
   158ae:	ff                   	(bad)  
   158af:	ff 0f                	decl   (%rdi)
   158b1:	45 c8 88 4c 24       	rex.RB enter $0x4c88,$0x24
   158b6:	40 e9 07 fd ff ff    	rex jmp 155c3 <_obstack_memory_used@@Base+0x4e13>
   158bc:	4d                   	rex.WRB
   158bd:	48 f7 fb             	idiv   %rbx
   158c0:	8b 44 24 08          	mov    0x8(%rsp),%eax
   158c4:	4c 29 e0             	sub    %r12,%rax
   158c7:	41 83 fb 2d          	cmp    $0x2d,%r11d
   158cb:	0f 84 8e 0f 49 c7    	je     ffffffffc74a685f <obstack_alloc_failed_handler@@Base+0xffffffffc74847bf>
   158d1:	c4                   	(bad)  
   158d2:	f8                   	clc    
   158d3:	00 00                	add    %al,(%rax)
   158d5:	00 0f                	add    %cl,(%rdi)
   158d7:	00 00                	add    %al,(%rax)
   158d9:	4d 89 e2             	mov    %r12,%r10
   158dc:	41 bd 7f 68 00 00    	mov    $0x687f,%r13d
   158e2:	48 85 d2             	test   %rdx,%rdx
   158e5:	e9 74 48 01 da       	jmp    ffffffffda02a15e <obstack_alloc_failed_handler@@Base+0xffffffffda0080be>
   158ea:	39 c5                	cmp    %eax,%ebp
   158ec:	0f 83 86 4d 0f af    	jae    ffffffffaf10a678 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e85d8>
   158f2:	f5                   	cmc    
   158f3:	84 48 01             	test   %cl,0x1(%rax)
   158f6:	00 4c 85 de          	add    %cl,-0x22(%rbp,%rax,4)
   158fa:	ff 83 fb 01 7e 2d    	incl   0x2d7e01fb(%rbx)
   15900:	48 83 ea 01          	sub    $0x1,%rdx
   15904:	48 0f 84 0f 8c fc 01 	rex.W je 1fde51a <obstack_alloc_failed_handler@@Base+0x1fbc47a>
   1590b:	4d 85 d6             	test   %r10,%r14
   1590e:	84 15 13 00 49 49    	test   %dl,0x49490013(%rip)        # 494a5927 <obstack_alloc_failed_handler@@Base+0x49483887>
   15914:	09 c2                	or     %eax,%edx
   15916:	fd                   	std    
   15917:	ff                   	(bad)  
   15918:	ff 0b                	decl   (%rbx)
   1591a:	13 00                	adc    (%rax),%eax
   1591c:	00 48 89             	add    %cl,-0x77(%rax)
   1591f:	ef                   	out    %eax,(%dx)
   15920:	be 20 00 00 00       	mov    $0x20,%esi
   15925:	48 89 dd             	mov    %rbx,%rbp
   15928:	e8 33 f0 fe ff       	call   4960 <memset@plt>
   1592d:	c6 45 00 0a          	movb   $0xa,0x0(%rbp)
   15931:	48 83 c5 01          	add    $0x1,%rbp
   15935:	e9 0f 85 6c 4c       	jmp    4c6dde49 <obstack_alloc_failed_handler@@Base+0x4c6bbda9>
   1593a:	21 f3                	and    %esi,%ebx
   1593c:	49 c1 e9 29          	shr    $0x29,%r9
   15940:	8b 44 24 0f          	mov    0xf(%rsp),%eax
   15944:	84 ee                	test   %ch,%dh
   15946:	02 00                	add    (%rax),%al
   15948:	00 be 6d 00 00 49    	add    %bh,0x4900006d(%rsi)
   1594e:	31 d6                	xor    %edx,%esi
   15950:	24 30                	and    $0x30,%al
   15952:	02 00                	add    (%rax),%al
   15954:	00 00                	add    %al,(%rax)
   15956:	8b 40 48             	mov    0x48(%rax),%eax
   15959:	09 c9                	or     %ecx,%ecx
   1595b:	89 f6                	mov    %esi,%esi
   1595d:	50                   	push   %rax
   1595e:	01 41 0f             	add    %eax,0xf(%rcx)
   15961:	9c                   	pushf  
   15962:	c7                   	(bad)  
   15963:	e9 a1 02 00 00       	jmp    15c09 <_obstack_memory_used@@Base+0x5459>
   15968:	e9 e3 fa ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   1596d:	4d 89 ee             	mov    %r13,%r14
   15970:	31 ff                	xor    %edi,%edi
   15972:	0f 85 eb c9 ff ff    	jne    12363 <_obstack_memory_used@@Base+0x1bb3>
   15978:	00 00                	add    %al,(%rax)
   1597a:	00 48 ff             	add    %cl,-0x1(%rax)
   1597d:	c0 ff 0f             	sar    $0xf,%bh
   15980:	8c 48 c1             	mov    %cs,-0x3f(%rax)
   15983:	e9 4d 0f af fc       	jmp    fffffffffcb068d5 <obstack_alloc_failed_handler@@Base+0xfffffffffcae4835>
   15988:	ff                   	(bad)  
   15989:	ff 4d 89             	decl   -0x77(%rbp)
   1598c:	ee                   	out    %al,(%dx)
   1598d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15992:	c6 44 24 48 0f       	movb   $0xf,0x48(%rsp)
   15997:	84 4a 02             	test   %cl,0x2(%rdx)
   1599a:	00 00                	add    %al,(%rax)
   1599c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   159a3:	00 
   159a4:	8b 40 10             	mov    0x10(%rax),%eax
   159a7:	8d 14 80             	lea    (%rax,%rax,4),%edx
   159aa:	8d 14 50             	lea    (%rax,%rdx,2),%edx
   159ad:	c1 fa 05             	sar    $0x5,%edx
   159b0:	83 c2 01             	add    $0x1,%edx
   159b3:	0f 1f 48 c1          	nopl   -0x3f(%rax)
   159b7:	eb 03                	jmp    159bc <_obstack_memory_used@@Base+0x520c>
   159b9:	8d 94 4c 89 d6 00 00 	lea    0xd689(%rsp,%rcx,2),%edx
   159c0:	41 b9 cd cc cc cc    	mov    $0xcccccccd,%r9d
   159c6:	49 85 df             	test   %rbx,%r15
   159c9:	0f 1f 4c 29 eb       	nopl   -0x15(%rcx,%rbp,1)
   159ce:	af                   	scas   %es:(%rdi),%eax
   159cf:	c6                   	(bad)  
   159d0:	4c 89 ef             	mov    %r13,%rdi
   159d3:	f6 4c 21 c3 4d       	testb  $0x4d,-0x3d(%rcx,%riz,1)
   159d8:	01 f1                	add    %esi,%ecx
   159da:	00 00                	add    %al,(%rax)
   159dc:	00 00                	add    %al,(%rax)
   159de:	83 ef 01             	sub    $0x1,%edi
   159e1:	89 d0                	mov    %edx,%eax
   159e3:	89 d6                	mov    %edx,%esi
   159e5:	d1 f9                	sar    %ecx
   159e7:	4d 21 ea             	and    %r13,%r10
   159ea:	ff 49 39             	decl   0x39(%rcx)
   159ed:	f2 c1 48 c1 e8       	repnz rorl $0xe8,-0x3f(%rax)
   159f2:	23 44 8d 04          	and    0x4(%rbp,%rcx,4),%eax
   159f6:	80 45 01 4d          	addb   $0x4d,0x1(%rbp)
   159fa:	0f af c1             	imul   %ecx,%eax
   159fd:	83 c6 30             	add    $0x30,%esi
   15a00:	40 88 77 ff          	mov    %sil,-0x1(%rdi)
   15a04:	83 fa 09             	cmp    $0x9,%edx
   15a07:	77 08                	ja     15a11 <_obstack_memory_used@@Base+0x5261>
   15a09:	85 c9                	test   %ecx,%ecx
   15a0b:	0f 84 57 0f 8f 4c    	je     4c906968 <obstack_alloc_failed_handler@@Base+0x4c8e48c8>
   15a11:	39 c0                	cmp    %eax,%eax
   15a13:	ff                   	(bad)  
   15a14:	bb 4d 4d 89 f2       	mov    $0xf2894d4d,%ebx
   15a19:	8b 7f 02             	mov    0x2(%rdi),%edi
   15a1c:	10 48 83             	adc    %cl,-0x7d(%rax)
   15a1f:	7c 24                	jl     15a45 <_obstack_memory_used@@Base+0x5295>
   15a21:	49 c1 ed 3b          	shr    $0x3b,%r13
   15a25:	85 e7                	test   %esp,%edi
   15a27:	74 98                	je     159c1 <_obstack_memory_used@@Base+0x5211>
   15a29:	0f 6f 00             	movq   (%rax),%mm0
   15a2c:	49                   	rex.WB
   15a2d:	4d 0f e9 89 fe ff ff 	rex.WRB psubsw 0x30fffffe(%r9),%mm1
   15a34:	30 
   15a35:	0f 29 64 24 30       	movaps %xmm4,0x30(%rsp)
   15a3a:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   15a41:	00 
   15a42:	44 89 4c 21 f1       	mov    %r9d,-0xf(%rcx,%riz,1)
   15a47:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   15a4e:	00 
   15a4f:	0f 29 94 24 90 00 00 	movaps %xmm2,0x90(%rsp)
   15a56:	00 
   15a57:	49 c1 eb 2e          	shr    $0x2e,%r11
   15a5b:	e9 29 ff ff ff       	jmp    15989 <_obstack_memory_used@@Base+0x51d9>
   15a60:	84 f8                	test   %bh,%al
   15a62:	11 00                	adc    %eax,(%rax)
   15a64:	00 48 8b             	add    %cl,-0x75(%rax)
   15a67:	7c 24                	jl     15a8d <_obstack_memory_used@@Base+0x52dd>
   15a69:	18 e8                	sbb    %ch,%al
   15a6b:	d1 ae ff ff 44 8b    	shrl   -0x74bb0001(%rsi)
   15a71:	5c                   	pop    %rsp
   15a72:	24 30                	and    $0x30,%al
   15a74:	48 85 c0             	test   %rax,%rax
   15a77:	49 89 c5             	mov    %rax,%r13
   15a7a:	0f 4d 31             	cmovge (%rcx),%esi
   15a7d:	e7 d7                	out    %eax,$0xd7
   15a7f:	0f 8f 15 01 00 00    	jg     15b9a <_obstack_memory_used@@Base+0x53ea>
   15a85:	ff 00                	incl   (%rax)
   15a87:	00 4c 89 ff          	add    %cl,-0x1(%rcx,%rcx,4)
   15a8b:	e8 50 f0 fe ff       	call   4ae0 <mktime@plt>
   15a90:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   15a95:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   15a99:	48 0f 84 45 ff 48 39 	rex.W je 394a59e5 <obstack_alloc_failed_handler@@Base+0x39483945>
   15aa0:	f3 0f 00 48 c1       	repz str -0x3f(%rax)
   15aa5:	eb 02                	jmp    15aa9 <_obstack_memory_used@@Base+0x52f9>
   15aa7:	24 18                	and    $0x18,%al
   15aa9:	4c 89 74 26 89       	mov    %r14,-0x77(%rsi,%riz,1)
   15aae:	5c                   	pop    %rsp
   15aaf:	24 30                	and    $0x30,%al
   15ab1:	e8 2a ad ff ff       	call   107e0 <_obstack_memory_used@@Base+0x30>
   15ab6:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   15abb:	4c 31 fe             	xor    %r15,%rsi
   15abe:	09 48 c7             	or     %ecx,-0x39(%rax)
   15ac1:	44 24 78             	rex.R and $0x78,%al
   15ac4:	ff                   	(bad)  
   15ac5:	ff                   	(bad)  
   15ac6:	ff                   	(bad)  
   15ac7:	ff 49 83             	decl   -0x7d(%rcx)
   15aca:	fd                   	std    
   15acb:	01 0f                	add    %ecx,(%rdi)
   15acd:	85 45 02             	test   %eax,0x2(%rbp)
   15ad0:	00 00                	add    %al,(%rax)
   15ad2:	89 5c 24 30          	mov    %ebx,0x30(%rsp)
   15ad6:	0f 8f 89 fd ff ff    	jg     15865 <_obstack_memory_used@@Base+0x50b5>
   15adc:	8b 5c 24 30          	mov    0x30(%rsp),%ebx
   15ae0:	84 c0                	test   %al,%al
   15ae2:	0f 84 41 13 00 00    	je     16e29 <_obstack_memory_used@@Base+0x6679>
   15ae8:	48 8b 4c 24 0f       	mov    0xf(%rsp),%rcx
   15aed:	8f                   	(bad)  
   15aee:	59                   	pop    %rcx
   15aef:	03 00                	add    (%rax),%eax
   15af1:	00 4d 31             	add    %cl,0x31(%rbp)
   15af4:	f8                   	clc    
   15af5:	01 00                	add    %eax,(%rax)
   15af7:	00 be 30 00 00 00    	add    %bh,0x30(%rsi)
   15afd:	49 0f                	rex.WB (bad) 
   15aff:	0f 8f 35 02 00 00    	jg     15d3a <_obstack_memory_used@@Base+0x558a>
   15b05:	c1 ee 0c             	shr    $0xc,%esi
   15b08:	0f 1f 84 4d 89 cb 00 	nopl   0xcb89(%rbp,%rcx,2)
   15b0f:	00 
   15b10:	48 b8 67 66 66 66 66 	movabs $0x294d666666666667,%rax
   15b17:	66 4d 29 
   15b1a:	e1 f7                	loope  15b13 <_obstack_memory_used@@Base+0x5363>
   15b1c:	4c 31 d6             	xor    %r10,%rsi
   15b1f:	01 00                	add    %eax,(%rax)
   15b21:	00 f8                	add    %bh,%al
   15b23:	3f                   	(bad)  
   15b24:	48 eb 54             	rex.W jmp 15b7b <_obstack_memory_used@@Base+0x53cb>
   15b27:	02 48 29             	add    0x29(%rax),%cl
   15b2a:	49 f7 f9             	idiv   %r9
   15b2d:	3c 92                	cmp    $0x92,%al
   15b2f:	4d 29 cb             	sub    %r9,%r11
   15b32:	48                   	rex.W
   15b33:	48                   	rex.W
   15b34:	4d 0f af c5          	imul   %r13,%r8
   15b38:	00 00                	add    %al,(%rax)
   15b3a:	ca 48 89             	lret   $0x8948
   15b3d:	c1 89 f0 29 e9 a5 fc 	rorl   $0xfc,-0x5a16d610(%rcx)
   15b44:	ff                   	(bad)  
   15b45:	ff 84 ff 0f 49 f7 f8 	incl   -0x708b6f1(%rdi,%rdi,8)
   15b4c:	83 ed 48             	sub    $0x48,%ebp
   15b4f:	89 c0                	mov    %eax,%eax
   15b51:	0f 84 96 fd ff ff    	je     158ed <_obstack_memory_used@@Base+0x513d>
   15b57:	ff                   	(bad)  
   15b58:	ff 44 e9 bd          	incl   -0x43(%rcx,%rbp,8)
   15b5c:	00 00                	add    %al,(%rax)
   15b5e:	00 c3                	add    %al,%bl
   15b60:	30 01                	xor    %al,(%rcx)
   15b62:	00 4d 31             	add    %cl,0x31(%rbp)
   15b65:	49 01 d8             	add    %rbx,%r8
   15b68:	45 e9 d2 00 00 00    	rex.RB jmp 15c40 <_obstack_memory_used@@Base+0x5490>
   15b6e:	0a 00                	or     (%rax),%al
   15b70:	00 41 83             	add    %al,-0x7d(%rcx)
   15b73:	fb                   	sti    
   15b74:	2d 0f 95 c0 85       	sub    $0x85c0950f,%eax
   15b79:	4d 89 de             	mov    %r11,%r14
   15b7c:	5c                   	pop    %rsp
   15b7d:	e9 ee fe ff ff       	jmp    15a70 <_obstack_memory_used@@Base+0x52c0>
   15b82:	02 00                	add    (%rax),%al
   15b84:	00 0f                	add    %cl,(%rdi)
   15b86:	85 5d 0a             	test   %ebx,0xa(%rbp)
   15b89:	00 00                	add    %al,(%rax)
   15b8b:	80 4d 89 cb          	orb    $0xcb,-0x77(%rbp)
   15b8f:	00 0f                	add    %cl,(%rdi)
   15b91:	85 0f                	test   %ecx,(%rdi)
   15b93:	8c 0f                	mov    %cs,(%rdi)
   15b95:	ff                   	(bad)  
   15b96:	ff                   	(bad)  
   15b97:	ff ca                	dec    %edx
   15b99:	44 39 d3             	cmp    %r10d,%ebx
   15b9c:	0f 8e c2 0a 00 00    	jle    16664 <_obstack_memory_used@@Base+0x5eb4>
   15ba2:	49 ff 0f             	decq   (%r15)
   15ba5:	85 b4 fc ff ff 48 63 	test   %esi,0x6348ffff(%rsp,%rdi,8)
   15bac:	d3 48 89             	rorl   %cl,-0x77(%rax)
   15baf:	cb                   	lret   
   15bb0:	48 39 ca             	cmp    %rcx,%rdx
   15bb3:	48 0f 49 f7          	cmovns %rdi,%rsi
   15bb7:	ff 8b 44 4d 21 c5    	decl   -0x3adeb2bc(%rbx)
   15bbd:	29 e0                	sub    %esp,%eax
   15bbf:	48 39 d8             	cmp    %rbx,%rax
   15bc2:	49 c1 ed 08          	shr    $0x8,%r13
   15bc6:	ff                   	(bad)  
   15bc7:	ff 48 85             	decl   -0x7b(%rax)
   15bca:	ed                   	in     (%dx),%eax
   15bcb:	0f 84 b8 f9 ff ff    	je     15589 <_obstack_memory_used@@Base+0x4dd9>
   15bd1:	48 39 ca             	cmp    %rcx,%rdx
   15bd4:	0f 8f ad 02 00 00    	jg     15e87 <_obstack_memory_used@@Base+0x56d7>
   15bda:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
   15bde:	4c e9 09 02 00 00    	rex.WR jmp 15ded <_obstack_memory_used@@Base+0x563d>
   15be4:	83 fb 4c             	cmp    $0x4c,%ebx
   15be7:	39 ea                	cmp    %ebp,%edx
   15be9:	fc                   	cld    
   15bea:	ff                   	(bad)  
   15beb:	ff                   	(bad)  
   15bec:	ff                   	(bad)  
   15bed:	ff 83 fb 0f 4d 89    	incl   -0x76b2f005(%rbx)
   15bf3:	ca 00 00             	lret   $0x0
   15bf6:	00 48 89             	add    %cl,-0x77(%rax)
   15bf9:	48 c7 c6 82 fd ff ff 	mov    $0xfffffffffffffd82,%rsi
   15c00:	89 fd                	mov    %edi,%ebp
   15c02:	e8 59 49 f7 fe       	call   fffffffffef8a560 <obstack_alloc_failed_handler@@Base+0xfffffffffef684c0>
   15c07:	48 8b 4c 24 49       	mov    0x49(%rsp),%rcx
   15c0c:	0f af d1             	imul   %ecx,%edx
   15c0f:	40 00 0f             	rex add %cl,(%rdi)
   15c12:	84 61 0a             	test   %ah,0xa(%rcx)
   15c15:	00 00                	add    %al,(%rax)
   15c17:	4c 8d 79 ff          	lea    -0x1(%rcx),%r15
   15c1b:	48 85 c9             	test   %rcx,%rcx
   15c1e:	0f 84 52 f6 ff ff    	je     15276 <_obstack_memory_used@@Base+0x4ac6>
   15c24:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   15c29:	e8 82 ea fe 48       	call   490046b0 <obstack_alloc_failed_handler@@Base+0x48fe2610>
   15c2e:	31 da                	xor    %ebx,%edx
   15c30:	4c                   	rex.WR
   15c31:	48 c1 ee 3b          	shr    $0x3b,%rsi
   15c35:	44                   	rex.R
   15c36:	49 29 f4             	sub    %rsi,%r12
   15c39:	0f b6 74 3d 00       	movzbl 0x0(%rbp,%rdi,1),%esi
   15c3e:	4d 09 d1             	or     %r10,%r9
   15c41:	8b 14 b2             	mov    (%rdx,%rsi,4),%edx
   15c44:	42 88 49 7c          	rex.X mov %cl,0x7c(%rcx)
   15c48:	86 49 83             	xchg   %cl,-0x7d(%rcx)
   15c4b:	ef                   	out    %eax,(%dx)
   15c4c:	01 73 e9             	add    %esi,-0x17(%rbx)
   15c4f:	e9 22 f6 ff ff       	jmp    15276 <_obstack_memory_used@@Base+0x4ac6>
   15c54:	49 c1 e3 19          	shl    $0x19,%r11
   15c58:	48 ff c3             	inc    %rbx
   15c5b:	40 31 c0             	rex xor %eax,%eax
   15c5e:	45 84 ff             	test   %r15b,%r15b
   15c61:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   15c66:	44 89 5c 24 30       	mov    %r11d,0x30(%rsp)
   15c6b:	0f 45 c8             	cmovne %eax,%ecx
   15c6e:	88 4c 0f 8c          	mov    %cl,-0x74(%rdi,%rcx,1)
   15c72:	d7                   	xlat   %ds:(%rbx)
   15c73:	00 00                	add    %al,(%rax)
   15c75:	00 ff                	add    %bh,%bh
   15c77:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   15c7c:	49 89 c5             	mov    %rax,%r13
   15c7f:	41 0f 84 3a ff ff ff 	rex.B je 15bc0 <_obstack_memory_used@@Base+0x5410>
   15c86:	0c 75                	or     $0x75,%al
   15c88:	f3 e6 88             	repz out %al,$0x88
   15c8b:	fd                   	std    
   15c8c:	ff                   	(bad)  
   15c8d:	ff 0c 00             	decl   (%rax,%rax,1)
   15c90:	00 48 63             	add    %cl,0x63(%rax)
   15c93:	db 48 39             	fisttpl 0x39(%rax)
   15c96:	d8 48 89             	fmuls  -0x77(%rax)
   15c99:	49 21 de             	and    %rbx,%r14
   15c9c:	43                   	rex.XB
   15c9d:	4d 39 d9             	cmp    %r11,%r9
   15ca0:	02 00                	add    (%rax),%al
   15ca2:	00 48 8b             	add    %cl,-0x75(%rax)
   15ca5:	44 24 0f             	rex.R and $0xf,%al
   15ca8:	84 6b 02             	test   %ch,0x2(%rbx)
   15cab:	00 00                	add    %al,(%rax)
   15cad:	ff 24 30             	jmp    *(%rax,%rsi,1)
   15cb0:	48 c7 c0 e1 fe ff ff 	mov    $0xfffffffffffffee1,%rax
   15cb7:	85 ed                	test   %ebp,%ebp
   15cb9:	74 4c                	je     15d07 <_obstack_memory_used@@Base+0x5557>
   15cbb:	89 f2                	mov    %esi,%edx
   15cbd:	dd 73 2f             	fnsave 0x2f(%rbx)
   15cc0:	4c 29 eb             	sub    %r13,%rbx
   15cc3:	48 89 da             	mov    %rbx,%rdx
   15cc6:	48 8d 5c 1d 0f       	lea    0xf(%rbp,%rbx,1),%rbx
   15ccb:	84 92 49 ff c3 84    	test   %dl,-0x7b3c00b7(%rdx)
   15cd1:	b7 4d                	mov    $0x4d,%bh
   15cd3:	0f af c5             	imul   %ebp,%eax
   15cd6:	83 fb 2b             	cmp    $0x2b,%ebx
   15cd9:	0f 48 c1             	cmovs  %ecx,%eax
   15cdc:	e2 33                	loop   15d11 <_obstack_memory_used@@Base+0x5561>
   15cde:	49 29 f9             	sub    %rdi,%r9
   15ce1:	ef                   	out    %eax,(%dx)
   15ce2:	4c 29 d9             	sub    %r11,%rcx
   15ce5:	00 00                	add    %al,(%rax)
   15ce7:	4c 31 f1             	xor    %r14,%rcx
   15cea:	48 31 ce             	xor    %rcx,%rsi
   15ced:	fe                   	(bad)  
   15cee:	ff 45 84             	incl   -0x7c(%rbp)
   15cf1:	ff 4d 39             	decl   0x39(%rbp)
   15cf4:	da 0e                	fimull (%rsi)
   15cf6:	00 00                	add    %al,(%rax)
   15cf8:	80 48 31 d7          	orb    $0xd7,0x31(%rax)
   15cfc:	00 0f                	add    %cl,(%rdi)
   15cfe:	84 d1                	test   %dl,%cl
   15d00:	0e                   	(bad)  
   15d01:	00 00                	add    %al,(%rax)
   15d03:	49 8d 5d ff          	lea    -0x1(%r13),%rbx
   15d07:	4d 85 ed             	test   %r13,%r13
   15d0a:	48 c1 e1 3f          	shl    $0x3f,%rcx
   15d0e:	49 01 ff             	add    %rdi,%r15
   15d11:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   15d16:	48 89 c6             	mov    %rax,%rsi
   15d19:	0f b6 14 19          	movzbl (%rcx,%rbx,1),%edx
   15d1d:	48 8b 06             	mov    (%rsi),%rax
   15d20:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   15d23:	88 4c 21 db          	mov    %cl,-0x25(%rcx,%riz,1)
   15d27:	48 83 eb 01          	sub    $0x1,%rbx
   15d2b:	73 ec                	jae    15d19 <_obstack_memory_used@@Base+0x5569>
   15d2d:	e9 20 fd ff ff       	jmp    15a52 <_obstack_memory_used@@Base+0x52a2>
   15d32:	64 24 30             	fs and $0x30,%al
   15d35:	e9 0a f3 ff ff       	jmp    15044 <_obstack_memory_used@@Base+0x4894>
   15d3a:	4d 0f 84 5f 01 48 0f 	rex.WRB je f495ea0 <obstack_alloc_failed_handler@@Base+0xf473e00>
   15d41:	af                   	scas   %es:(%rdi),%eax
   15d42:	c1 5f fa 0f          	rcrl   $0xf,-0x6(%rdi)
   15d46:	8c 43 02             	mov    %es,0x2(%rbx)
   15d49:	00 00                	add    %al,(%rax)
   15d4b:	49 85 c1             	test   %rax,%r9
   15d4e:	d0 85 db 0f 88 49    	rolb   0x49880fdb(%rbp)
   15d54:	01 cc                	add    %ecx,%esp
   15d56:	00 49 85             	add    %cl,-0x7b(%rcx)
   15d59:	d6                   	(bad)  
   15d5a:	49 f7 49 31 d6 c8 67 	testq  $0x4967c8d6,0x31(%r9)
   15d61:	49 
   15d62:	c1 e3 17             	shl    $0x17,%ebx
   15d65:	0f 49 c1             	cmovns %ecx,%eax
   15d68:	89 44 24 30          	mov    %eax,0x30(%rsp)
   15d6c:	0f 1f 40 00          	nopl   0x0(%rax)
   15d70:	44 0f b6 44 24 40    	movzbl 0x40(%rsp),%r8d
   15d76:	48 83 ec 08          	sub    $0x8,%rsp
   15d7a:	45 89 d9             	mov    %r11d,%r9d
   15d7d:	31 49 4d             	xor    %ecx,0x4d(%rcx)
   15d80:	49 39 cc             	cmp    %rcx,%r12
   15d83:	48 39 c1             	cmp    %rax,%rcx
   15d86:	4c 89 fa             	mov    %r15,%rdx
   15d89:	48 c7 c6 ff ff 0f 0f 	mov    $0xf0fffff,%rsi
   15d90:	84 50 fe             	test   %dl,-0x2(%rax)
   15d93:	ff                   	(bad)  
   15d94:	ff 00                	incl   (%rax)
   15d96:	00 49 85             	add    %cl,-0x7b(%rcx)
   15d99:	da 48 8b             	fimull -0x75(%rax)
   15d9c:	4c 24 30             	rex.WR and $0x30,%al
   15d9f:	44 89 49 c1          	mov    %r9d,-0x3f(%rcx)
   15da3:	e4 4d                	in     $0x4d,%al
   15da5:	89 dd                	mov    %ebx,%ebp
   15da7:	78 fe                	js     15da7 <_obstack_memory_used@@Base+0x55f7>
   15da9:	ff                   	(bad)  
   15daa:	ff f1                	push   %rcx
   15dac:	ff                   	(bad)  
   15dad:	ff 44 8b 5c          	incl   0x5c(%rbx,%rcx,4)
   15db1:	24 68                	and    $0x68,%al
   15db3:	48 83 49 ff c3       	orq    $0xffffffffffffffc3,-0x1(%rcx)
   15db8:	8b 44 24 40          	mov    0x40(%rsp),%eax
   15dbc:	48 f7 f9             	idiv   %rcx
   15dbf:	41 83 fb 2d          	cmp    $0x2d,%r11d
   15dc3:	0f 84 52 09 00 00    	je     1671b <_obstack_memory_used@@Base+0x5f6b>
   15dc9:	85 db                	test   %ebx,%ebx
   15dcb:	0f 88 49 01 c0 00    	js     c15f1a <obstack_alloc_failed_handler@@Base+0xbf3e7a>
   15dd1:	48 63 d3             	movslq %ebx,%rdx
   15dd4:	4c 39 49 c1          	cmp    %r9,-0x3f(%rcx)
   15dd8:	e7 16                	out    %eax,$0x16
   15dda:	4c 0f 43 d0          	cmovae %rax,%r10
   15dde:	48 8b 5c 49 c1       	mov    -0x3f(%rcx,%rcx,2),%rbx
   15de3:	e5 0f                	in     $0xf,%eax
   15de5:	84 b9 fc ff ff 86    	test   %bh,-0x79000004(%rcx)
   15deb:	48 01 c6             	add    %rax,%rsi
   15dee:	c7                   	(bad)  
   15def:	48 85 ed             	test   %rbp,%rbp
   15df2:	0f 84 92 00 00 00    	je     15e8a <_obstack_memory_used@@Base+0x56da>
   15df8:	4c 39 ea             	cmp    %r13,%rdx
   15dfb:	76 51                	jbe    15e4e <_obstack_memory_used@@Base+0x569e>
   15dfd:	49 ff c1             	inc    %r9
   15e00:	0f 49 f7             	cmovns %edi,%esi
   15e03:	fa                   	cli    
   15e04:	ff                   	(bad)  
   15e05:	ff 8d 44 15 00 44    	decl   0x44001544(%rbp)
   15e0b:	89 5c 24 54          	mov    %ebx,0x54(%rsp)
   15e0f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   15e14:	44 89 49 01          	mov    %r9d,0x1(%rcx)
   15e18:	c2 48 ff             	ret    $0xff48
   15e1b:	c2 00 48             	ret    $0x4800
   15e1e:	0f af d3             	imul   %ebx,%edx
   15e21:	00 00                	add    %al,(%rax)
   15e23:	41                   	rex.B
   15e24:	4c 01 ca             	add    %r9,%rdx
   15e27:	0f 84 0c 49 85 cd    	je     ffffffffcd86a739 <obstack_alloc_failed_handler@@Base+0xffffffffcd848699>
   15e2d:	af                   	scas   %es:(%rdi),%eax
   15e2e:	f2 48 f7 fa          	repnz idiv %rdx
   15e32:	00 00                	add    %al,(%rax)
   15e34:	49 21 de             	and    %rbx,%r14
   15e37:	eb fe                	jmp    15e37 <_obstack_memory_used@@Base+0x5687>
   15e39:	eb 27                	jmp    15e62 <_obstack_memory_used@@Base+0x56b2>
   15e3b:	8b 6c 24 40          	mov    0x40(%rsp),%ebp
   15e3f:	4c 8b 54 24 58       	mov    0x58(%rsp),%r10
   15e44:	44 8b 49 c1          	mov    -0x3f(%rcx),%r9d
   15e48:	e8 07 48 c1 e7       	call   ffffffffe7c2a654 <obstack_alloc_failed_handler@@Base+0xffffffffe7c085b4>
   15e4d:	23 4c 89 54          	and    0x54(%rcx,%rcx,4),%ecx
   15e51:	e9 0d 01 00 00       	jmp    15f63 <_obstack_memory_used@@Base+0x57b3>
   15e56:	08 48 89             	or     %cl,-0x77(%rax)
   15e59:	ef                   	out    %eax,(%dx)
   15e5a:	45 89 d9             	mov    %r11d,%r9d
   15e5d:	8b 84 24 68 05 00 00 	mov    0x568(%rsp),%eax
   15e64:	4c 89 fa             	mov    %r15,%rdx
   15e67:	48 89 de             	mov    %rbx,%rsi
   15e6a:	4c 01 48 c1          	add    %r9,-0x3f(%rax)
   15e6e:	e9 04 0f af c0       	jmp    ffffffffc0b06d77 <obstack_alloc_failed_handler@@Base+0xffffffffc0ae4cd7>
   15e73:	44 24 48             	rex.R and $0x48,%al
   15e76:	50                   	push   %rax
   15e77:	48 8b 4c 4c 85       	mov    -0x7b(%rsp,%rcx,2),%rcx
   15e7c:	de df                	(bad)  
   15e7e:	f0 4c 85 c7          	lock test %r8,%rdi
   15e82:	8b 54 0f 8f          	mov    -0x71(%rdi,%rcx,1),%edx
   15e86:	99                   	cltd   
   15e87:	01 00                	add    %eax,(%rax)
   15e89:	48                   	rex.W
   15e8a:	49 0f af fb          	imul   %r11,%rdi
   15e8e:	0f 8c 70 fd ff ff    	jl     15c04 <_obstack_memory_used@@Base+0x5454>
   15e94:	ee                   	out    %al,(%dx)
   15e95:	0f 85 79 4d 0f af    	jne    ffffffffaf10ac14 <obstack_alloc_failed_handler@@Base+0xffffffffaf0e8b74>
   15e9b:	dc ff                	fdivr  %st,%st(7)
   15e9d:	4c 8d 4c 89 cf       	lea    -0x31(%rcx,%rcx,4),%r9
   15ea2:	49 c1 ef 48          	shr    $0x48,%r15
   15ea6:	c1 eb 0b             	shr    $0xb,%ebx
   15ea9:	4d                   	rex.WRB
   15eaa:	48 f7 fe             	idiv   %rsi
   15ead:	ff 48 8b             	decl   -0x75(%rax)
   15eb0:	44 24 10             	rex.R and $0x10,%al
   15eb3:	8b 48 14             	mov    0x14(%rax),%ecx
   15eb6:	81 f9 94 f8 0f 8c    	cmp    $0x8c0ff894,%ecx
   15ebc:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
   15ebd:	01 00                	add    %eax,(%rax)
   15ebf:	00 00                	add    %al,(%rax)
   15ec1:	00 41 0f             	add    %al,0xf(%rcx)
   15ec4:	9c                   	pushf  
   15ec5:	c7                   	(bad)  
   15ec6:	3d 6c 49 ff c4       	cmp    $0xc4ff496c,%eax
   15ecb:	19 c0                	sbb    %eax,%eax
   15ecd:	83 e0 9d             	and    $0xffffff9d,%eax
   15ed0:	01 e9                	add    %ebp,%ecx
   15ed2:	a2 48 0f af ca f1 49 	movabs %al,0xf70149f1caaf0f48
   15ed9:	01 f7 
   15edb:	4c 21 d7             	and    %r10,%rdi
   15ede:	ff c2                	inc    %edx
   15ee0:	c1 fa 25             	sar    $0x25,%edx
   15ee3:	29 c2                	sub    %eax,%edx
   15ee5:	83 c2 13             	add    $0x13,%edx
   15ee8:	81 48 c7 0f 8c 99 fe 	orl    $0xfe998c0f,-0x39(%rax)
   15eef:	ff                   	(bad)  
   15ef0:	ff 4d 21             	decl   0x21(%rbp)
   15ef3:	cb                   	lret   
   15ef4:	0f 85 4c 31 f7 00    	jne    f89046 <obstack_alloc_failed_handler@@Base+0xf66fa6>
   15efa:	83 7c 49 f7 fd       	cmpl   $0xfffffffd,-0x9(%rcx,%rcx,2)
   15eff:	44 8b 5c 24 24       	mov    0x24(%rsp),%r11d
   15f04:	0f 84 be 0a 00 00    	je     169c8 <_obstack_memory_used@@Base+0x6218>
   15f0a:	c6                   	(bad)  
   15f0b:	49 85 de             	test   %rbx,%r14
   15f0e:	00 be 43 00 00 00    	add    %bh,0x43(%rsi)
   15f14:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   15f1b:	00 
   15f1c:	e9 29 f5 ff ff       	jmp    1544a <_obstack_memory_used@@Base+0x4c9a>
   15f21:	4d 89 ee             	mov    %r13,%r14
   15f24:	85 db                	test   %ebx,%ebx
   15f26:	b8 09 00 00 4c       	mov    $0x4c000009,%eax
   15f2b:	01 cb                	add    %ecx,%ebx
   15f2d:	fe                   	(bad)  
   15f2e:	ff                   	(bad)  
   15f2f:	ff 00                	incl   (%rax)
   15f31:	00 41 bd             	add    %al,-0x43(%rcx)
   15f34:	09 00                	or     %eax,(%rax)
   15f36:	00 00                	add    %al,(%rax)
   15f38:	0f 4e d8             	cmovle %eax,%ebx
   15f3b:	eb 1b                	jmp    15f58 <_obstack_memory_used@@Base+0x57a8>
   15f3d:	0f 1f 00             	nopl   (%rax)
   15f40:	48 0f 8f f2 02 00 00 	rex.W jg 16239 <_obstack_memory_used@@Base+0x5a89>
   15f47:	89 d1                	mov    %edx,%ecx
   15f49:	41 83 ed 01          	sub    $0x1,%r13d
   15f4d:	c1 49 c7 c7          	rorl   $0xc7,-0x39(%rcx)
   15f51:	ca 02 00             	lret   $0x2
   15f54:	00 c8                	add    %cl,%al
   15f56:	89 c2                	mov    %eax,%edx
   15f58:	48 63 c2             	movslq %edx,%rax
   15f5b:	41                   	rex.B
   15f5c:	49 39 cc             	cmp    %rcx,%r12
   15f5f:	e0 48                	loopne 15fa9 <_obstack_memory_used@@Base+0x57f9>
   15f61:	69 c8 67 66 66 66    	imul   $0x66666667,%eax,%ecx
   15f67:	89 d6                	mov    %edx,%esi
   15f69:	48 c1 e6 40          	shl    $0x40,%rsi
   15f6d:	c1 f9 22             	sar    $0x22,%ecx
   15f70:	29 f1                	sub    %esi,%ecx
   15f72:	8d 34 89             	lea    (%rcx,%rcx,4),%esi
   15f75:	89 d1                	mov    %edx,%ecx
   15f77:	01 f6                	add    %esi,%esi
   15f79:	29 f1                	sub    %esi,%ecx
   15f7b:	41 83 fd 01          	cmp    $0x1,%r13d
   15f7f:	0f 84 4c 31 ff 00    	je     10090d1 <obstack_alloc_failed_handler@@Base+0xfe7031>
   15f85:	85 c9                	test   %ecx,%ecx
   15f87:	74 b7                	je     15f40 <_obstack_memory_used@@Base+0x5790>
   15f89:	4d 63 fd             	movslq %r13d,%r15
   15f8c:	4c 89 fe             	mov    %r15,%rsi
   15f8f:	45 85 ed             	test   %r13d,%r13d
   15f92:	4d 39 d2             	cmp    %r10,%r10
   15f95:	4d 31 d9             	xor    %r11,%r9
   15f98:	48 8d 8c 34 00 01 49 	lea    -0x3eb6ff00(%rsp,%rsi,1),%rcx
   15f9f:	c1 
   15fa0:	e9 0d 7d ff 48       	jmp    4900dcb2 <obstack_alloc_failed_handler@@Base+0x48febc12>
   15fa5:	8d b4 4c 29 f1 00 00 	lea    0xf129(%rsp,%rcx,2),%esi
   15fac:	48 29 fe             	sub    %rdi,%rsi
   15faf:	eb 09                	jmp    15fba <_obstack_memory_used@@Base+0x580a>
   15fb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15fb8:	48 98                	cltq   
   15fba:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
   15fc1:	89 d7                	mov    %edx,%edi
   15fc3:	0f 8c cf 02 00 00    	jl     16298 <_obstack_memory_used@@Base+0x5ae8>
   15fc9:	4c 39 e6             	cmp    %r12,%rsi
   15fcc:	56                   	push   %rsi
   15fcd:	03 74 9c 31          	add    0x31(%rsp,%rbx,4),%esi
   15fd1:	49 ff c0             	inc    %r8
   15fd4:	ff 29                	ljmp   *(%rcx)
   15fd6:	fa                   	cli    
   15fd7:	83 c2 30             	add    $0x30,%edx
   15fda:	88 11                	mov    %dl,(%rcx)
   15fdc:	89 c2                	mov    %eax,%edx
   15fde:	48 39 ce             	cmp    %rcx,%rsi
   15fe1:	75 d5                	jne    15fb8 <_obstack_memory_used@@Base+0x5808>
   15fe3:	45 85 db             	test   %r11d,%r11d
   15fe6:	b8 30 00 00 00       	mov    $0x30,%eax
   15feb:	44 0f 44 d8          	cmove  %eax,%r11d
   15fef:	49 c1 e1 2c          	shl    $0x2c,%r9
   15ff3:	08 4c 21 e8          	or     %cl,-0x18(%rcx,%riz,1)
   15ff7:	4c 39 f8             	cmp    %r15,%rax
   15ffa:	0f 86 78 f0 48 39    	jbe    394a5078 <obstack_alloc_failed_handler@@Base+0x39482fd8>
   16000:	f8                   	clc    
   16001:	85 ed                	test   %ebp,%ebp
   16003:	74 4f                	je     16054 <_obstack_memory_used@@Base+0x58a4>
   16005:	0f 49 29             	cmovns (%rcx),%ebp
   16008:	cd 21                	int    $0x21
   1600a:	c6                   	(bad)  
   1600b:	ff c6                	inc    %esi
   1600d:	e9 cd fe ff ff       	jmp    15edf <_obstack_memory_used@@Base+0x572f>
   16012:	57                   	push   %rdi
   16013:	ff 48 89             	decl   -0x77(%rax)
   16016:	74 d6                	je     15fee <_obstack_memory_used@@Base+0x583e>
   16018:	30 4d 85             	xor    %cl,-0x7b(%rbp)
   1601b:	ff 74 33 44          	push   0x44(%rbx,%rsi,1)
   1601f:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   16023:	e8 88 4c 31 e2       	call   ffffffffe232acb0 <obstack_alloc_failed_handler@@Base+0xffffffffe2308c10>
   16028:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1602d:	44 75 a8             	rex.R jne 15fd8 <_obstack_memory_used@@Base+0x5828>
   16030:	24 40                	and    $0x40,%al
   16032:	48                   	rex.W
   16033:	4d 31 fe             	xor    %r15,%r14
   16036:	00 01                	add    %al,(%rcx)
   16038:	00 00                	add    %al,(%rax)
   1603a:	48                   	rex.W
   1603b:	4d 29 e2             	sub    %r12,%r10
   1603e:	b6 34                	mov    $0x34,%dh
   16040:	17                   	(bad)  
   16041:	48 8b 01             	mov    (%rcx),%rax
   16044:	8b 04 b0             	mov    (%rax,%rsi,4),%eax
   16047:	88 7c 4d 01          	mov    %bh,0x1(%rbp,%rcx,2)
   1604b:	d4                   	(bad)  
   1604c:	ff c1                	inc    %ecx
   1604e:	01 73 ec             	add    %esi,-0x14(%rbx)
   16051:	4c 01 fd             	add    %r15,%rbp
   16054:	4d 01 fc             	add    %r15,%r12
   16057:	41 83 fb 2d          	cmp    $0x2d,%r11d
   1605b:	0f                   	(bad)  
   1605c:	0f 84 49 c1 e3 21    	je     21e521ab <obstack_alloc_failed_handler@@Base+0x21e3010b>
   16062:	29 eb                	sub    %ebp,%ebx
   16064:	48 63 49 c1          	movslq -0x3f(%rcx),%rcx
   16068:	e2 16                	loop   16080 <_obstack_memory_used@@Base+0x58d0>
   1606a:	f0 ff                	lock (bad) 
   1606c:	ff 48 8b             	decl   -0x75(%rax)
   1606f:	44 24 08             	rex.R and $0x8,%al
   16072:	4c 29 e0             	sub    %r12,%rax
   16075:	48 39 c2             	cmp    %rax,%rdx
   16078:	0f 83 fa ef ff 4c    	jae    4d015078 <obstack_alloc_failed_handler@@Base+0x4cff2fd8>
   1607e:	85 e7                	test   %esp,%edi
   16080:	ed                   	in     (%dx),%eax
   16081:	0f 84 57 0d 00 49    	je     49016dde <obstack_alloc_failed_handler@@Base+0x48ff4d3e>
   16087:	c1 e0 48             	shl    $0x48,%eax
   1608a:	c7 c6 10 01 00 00    	mov    $0x110,%esi
   16090:	48                   	rex.W
   16091:	48 c1 eb 3d          	shr    $0x3d,%rbx
   16095:	09 dc                	or     %ebx,%esp
   16097:	49 c1 e6 20          	shl    $0x20,%r14
   1609b:	30 48 ff             	xor    %cl,-0x1(%rax)
   1609e:	c0 49 39 d9          	rorb   $0xd9,0x39(%rcx)
   160a2:	41 83 fb 49          	cmp    $0x49,%r11d
   160a6:	49 85 dc             	test   %rbx,%r12
   160a9:	ab                   	stos   %eax,%es:(%rdi)
   160aa:	fd                   	std    
   160ab:	ff                   	(bad)  
   160ac:	ff 89 ef 48 01 da    	decl   -0x25feb711(%rcx)
   160b2:	0f af d3             	imul   %ebx,%edx
   160b5:	89 48 89             	mov    %ecx,-0x77(%rax)
   160b8:	d8 9e 00 00 00 83    	fcomps -0x7d000000(%rsi)
   160be:	ef                   	out    %eax,(%dx)
   160bf:	ff 4c 89 d2          	decl   -0x2e(%rcx,%rcx,4)
   160c3:	48 ff c7             	inc    %rdi
   160c6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   160cb:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   160d2:	00 
   160d3:	be 4d 4d 09 d6       	mov    $0xd6094d4d,%esi
   160d8:	8b 50 04             	mov    0x4(%rax),%edx
   160db:	e9 49 85 f8 ff       	jmp    fffffffffff9e629 <obstack_alloc_failed_handler@@Base+0xfffffffffff7c589>
   160e0:	4d 89 ee             	mov    %r13,%r14
   160e3:	31 ff                	xor    %edi,%edi
   160e5:	be 63 00 00 48       	mov    $0x48000063,%esi
   160ea:	c1 e9 0f             	shr    $0xf,%ecx
   160ed:	e9 d1 f4 49 85       	jmp    ffffffff854b55c3 <obstack_alloc_failed_handler@@Base+0xffffffff85493523>
   160f2:	49 c1 e6 37          	shl    $0x37,%r14
   160f6:	0b 48 8b             	or     -0x75(%rax),%ecx
   160f9:	44                   	rex.R
   160fa:	49 c1 e5 22          	shl    $0x22,%r13
   160fe:	50                   	push   %rax
   160ff:	14 48                	adc    $0x48,%al
   16101:	4c 09 e2             	or     %r12,%rdx
   16104:	69 d2 1f 85 0f 84    	imul   $0x840f851f,%edx,%edx
   1610a:	25 fe ff ff 1f       	and    $0x1ffffffe,%eax
   1610f:	4c 89 c8             	mov    %r9,%rax
   16112:	25 29 ca 6b ca       	and    $0xca6bca29,%eax
   16117:	64 89 49 c7          	mov    %ecx,%fs:-0x39(%rcx)
   1611b:	c1 e3 03             	shl    $0x3,%ebx
   1611e:	00 00                	add    %al,(%rax)
   16120:	83 c2 64             	add    $0x64,%edx
   16123:	f7 0f 8f 56 fe ff    	testl  $0xfffe568f,(%rdi)
   16129:	ff 4d 21             	decl   0x21(%rbp)
   1612c:	48 ff c2             	inc    %rdx
   1612f:	00 00                	add    %al,(%rax)
   16131:	00 45 4d             	add    %al,0x4d(%rbp)
   16134:	09 f8                	or     %edi,%eax
   16136:	85 f0                	test   %esi,%eax
   16138:	f2 ff                	repnz (bad) 
   1613a:	ff 8b 44 24 24 83    	decl   -0x7cdbdbbc(%rbx)
   16140:	f8                   	clc    
   16141:	2b 0f                	sub    (%rdi),%ecx
   16143:	84 be 07 00 00 41    	test   %bh,0x41000007(%rsi)
   16149:	89 c3                	mov    %eax,%ebx
   1614b:	c6 44 24 48 00       	movb   $0x0,0x48(%rsp)
   16150:	be 79 00 00 00       	mov    $0x79,%esi
   16155:	45 31 ff             	xor    %r15d,%r15d
   16158:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   1615f:	00 
   16160:	b8 01 48 c7 c6       	mov    $0xc6c74801,%eax
   16165:	28 ff                	sub    %bh,%bh
   16167:	ff                   	(bad)  
   16168:	ff                   	(bad)  
   16169:	ff 4d 89             	decl   -0x77(%rbp)
   1616c:	ee                   	out    %al,(%dx)
   1616d:	31 ff                	xor    %edi,%edi
   1616f:	be 4c 4c 0f 8c       	mov    $0x8c0f4c4c,%esi
   16174:	73 03                	jae    16179 <_obstack_memory_used@@Base+0x59c9>
   16176:	00 00                	add    %al,(%rax)
   16178:	47 f4                	rex.RXB hlt 
   1617a:	ff                   	(bad)  
   1617b:	ff 4d 89             	decl   -0x77(%rbp)
   1617e:	ee                   	out    %al,(%dx)
   1617f:	31 ff                	xor    %edi,%edi
   16181:	48 8b 44 24 74       	mov    0x74(%rsp),%rax
   16186:	4f 59                	rex.WRXB pop %r9
   16188:	00 00                	add    %al,(%rax)
   1618a:	00 4c 01 ce          	add    %cl,-0x32(%rcx,%rax,1)
   1618e:	85 de                	test   %ebx,%esi
   16190:	94                   	xchg   %eax,%esp
   16191:	f8                   	clc    
   16192:	ff                   	(bad)  
   16193:	ff 41 0f             	incl   0xf(%rcx)
   16196:	48 f7 f8             	idiv   %rax
   16199:	c2 6c 49             	ret    $0x496c
   1619c:	01 db                	add    %ebx,%ebx
   1619e:	45 85 db             	test   %r11d,%r11d
   161a1:	0f 85 2e 07 00 48    	jne    480168d5 <obstack_alloc_failed_handler@@Base+0x47ff4835>
   161a7:	ff c6                	inc    %esi
   161a9:	dc 24 24             	fsubl  (%rsp)
   161ac:	41                   	rex.B
   161ad:	4c 01 e3             	add    %r12,%rbx
   161b0:	0f                   	(bad)  
   161b1:	0f 8f 08 03 00 00    	jg     164bf <_obstack_memory_used@@Base+0x5d0f>
   161b7:	44 24 48             	rex.R and $0x48,%al
   161ba:	00 31                	add    %dh,(%rcx)
   161bc:	c9                   	leave  
   161bd:	c7 44 24 30 04 00 00 	movl   $0x4,0x30(%rsp)
   161c4:	00 
   161c5:	0f 1f 00             	nopl   (%rax)
   161c8:	89 d0                	mov    %edx,%eax
   161ca:	f7 d8                	neg    %eax
   161cc:	45 84 ff             	test   %r15b,%r15b
   161cf:	0f 45 d0             	cmovne %eax,%edx
   161d2:	e9 e1 e9 40 fe       	jmp    fffffffffe424bb8 <obstack_alloc_failed_handler@@Base+0xfffffffffe402b18>
   161d7:	ff                   	(bad)  
   161d8:	ff                   	(bad)  
   161d9:	ee                   	out    %al,(%dx)
   161da:	31 ff                	xor    %edi,%edi
   161dc:	be 58 00 00 00       	mov    $0x58,%esi
   161e1:	48 f7 f9             	idiv   %rcx
   161e4:	4d 21 e8             	and    %r13,%r8
   161e7:	ff                   	(bad)  
   161e8:	ff 49 c1             	decl   -0x3f(%rcx)
   161eb:	e9 3e f4 48 8b       	jmp    ffffffff8b4a562e <obstack_alloc_failed_handler@@Base+0xffffffff8b48358e>
   161f0:	74 24                	je     16216 <_obstack_memory_used@@Base+0x5a66>
   161f2:	10 c7                	adc    %al,%bh
   161f4:	44                   	rex.R
   161f5:	48 c1 e9 32          	shr    $0x32,%rcx
   161f9:	00 00                	add    %al,(%rax)
   161fb:	8b 46 18             	mov    0x18(%rsi),%eax
   161fe:	8b 76 1c             	mov    0x1c(%rsi),%esi
   16201:	48 31 c6             	xor    %rax,%rsi
   16204:	48 63 c2             	movslq %edx,%rax
   16207:	89 d1                	mov    %edx,%ecx
   16209:	48 69 c0 93 24 49 92 	imul   $0xffffffff92492493,%rax,%rax
   16210:	c1 f9 1f             	sar    $0x1f,%ecx
   16213:	4d 0f af fe          	imul   %r14,%r15
   16217:	01 0f                	add    %ecx,(%rdi)
   16219:	8c d3                	mov    %ss,%ebx
   1621b:	fe                   	(bad)  
   1621c:	ff                   	(bad)  
   1621d:	ff 8d 0c c5 00 00    	decl   0xc50c(%rbp)
   16223:	48 29 c8             	sub    %rcx,%rax
   16226:	c1 48 f7 ff          	rorl   $0xff,-0x9(%rax)
   1622a:	af                   	scas   %es:(%rdi),%eax
   1622b:	fe 49 21             	decb   0x21(%rcx)
   1622e:	cf                   	iret   
   1622f:	be e9 c1 02 48       	mov    $0x4802c1e9,%esi
   16234:	f7 0f 8f 3b 03 00    	testl  $0x33b8f,(%rdi)
   1623a:	00 ff                	add    %bh,%bh
   1623c:	ff 92 4d 01 e8 20    	call   *0x20e8014d(%rdx)
   16242:	01 c2                	add    %eax,%edx
   16244:	c1 f8 49             	sar    $0x49,%eax
   16247:	c1 e0 3d             	shl    $0x3d,%eax
   1624a:	29 c2                	sub    %eax,%edx
   1624c:	e9 5a 4d 0f 8c       	jmp    ffffffff8c10afab <obstack_alloc_failed_handler@@Base+0xffffffff8c0e8f0b>
   16251:	26 fd                	es std 
   16253:	ff                   	(bad)  
   16254:	ff 4c 48 39          	decl   0x39(%rax,%rcx,2)
   16258:	d2 24 10             	shlb   %cl,(%rax,%rdx,1)
   1625b:	c7 44 24 30 02 00 00 	movl   $0x2,0x30(%rsp)
   16262:	00 
   16263:	be 55 00 00 00       	mov    $0x55,%esi
   16268:	48 21 f2             	and    %rsi,%rdx
   1626b:	2b 41 18             	sub    0x18(%rcx),%eax
   1626e:	4d 0f af fe          	imul   %r14,%r15
   16272:	63 d0                	movsxd %eax,%edx
   16274:	48 69 d2 93 24 49 92 	imul   $0xffffffff92492493,%rdx,%rdx
   1627b:	48 c1 ea 20          	shr    $0x20,%rdx
   1627f:	01 c2                	add    %eax,%edx
   16281:	c1 f8 1f             	sar    $0x1f,%eax
   16284:	c1 fa 02             	sar    $0x2,%edx
   16287:	29 c2                	sub    %eax,%edx
   16289:	e9 1d f4 ff 49       	jmp    4a0156ab <obstack_alloc_failed_handler@@Base+0x49ff360b>
   1628e:	31 f7                	xor    %esi,%edi
   16290:	ee                   	out    %al,(%dx)
   16291:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%rsp)
   16298:	ff 
   16299:	4c 8d 3d 84 62 4c 29 	lea    0x294c6284(%rip),%r15        # 294dc524 <obstack_alloc_failed_handler@@Base+0x294ba484>
   162a0:	f7 cb 48 85 f1 4d    	test   $0x4df18548,%ebx
   162a6:	89 ee                	mov    %ebp,%esi
   162a8:	31 ff                	xor    %edi,%edi
   162aa:	49 f7 fc             	idiv   %r12
   162ad:	24 10                	and    $0x10,%al
   162af:	c7 44 24 30 48 0f 8c 	movl   $0xf78c0f48,0x30(%rsp)
   162b6:	f7 
   162b7:	fd                   	std    
   162b8:	ff                   	(bad)  
   162b9:	ff 00                	incl   (%rax)
   162bb:	00 74 d8 49          	add    %dh,0x49(%rax,%rbx,8)
   162bf:	0f 85 d4 fc ff ff    	jne    15f99 <_obstack_memory_used@@Base+0x57e9>
   162c5:	ee                   	out    %al,(%dx)
   162c6:	c7 44 24 0f 85 17 ff 	movl   $0xffff1785,0xf(%rsp)
   162cd:	ff 
   162ce:	ff af f6 0f 8f c4    	ljmp   *-0x3b70f00a(%rdi)
   162d4:	75 4b                	jne    16321 <_obstack_memory_used@@Base+0x5b71>
   162d6:	ff 49 21             	decl   0x21(%rcx)
   162d9:	ff 4d 89             	decl   -0x77(%rbp)
   162dc:	ee                   	out    %al,(%dx)
   162dd:	31 ff                	xor    %edi,%edi
   162df:	41 7f eb             	rex.B jg 162cd <_obstack_memory_used@@Base+0x5b1d>
   162e2:	00 00                	add    %al,(%rax)
   162e4:	00 0f                	add    %cl,(%rdi)
   162e6:	8f                   	(bad)  
   162e7:	0f 85 b7 03 00 00    	jne    166a4 <_obstack_memory_used@@Base+0x5ef4>
   162ed:	31 48 c1             	xor    %ecx,-0x3f(%rax)
   162f0:	e3 49                	jrcxz  1633b <_obstack_memory_used@@Base+0x5b8b>
   162f2:	c7 c4 27 00 00 00    	mov    $0x27,%esp
   162f8:	54                   	push   %rsp
   162f9:	24 50                	and    $0x50,%al
   162fb:	be 49 00 00 00       	mov    $0x49,%esi
   16300:	e9 a6 49 c1 e7       	jmp    ffffffffe7c2acab <obstack_alloc_failed_handler@@Base+0xffffffffe7c08c0b>
   16305:	33 e5                	xor    %ebp,%esp
   16307:	25 31 49 85 0f       	and    $0xf854931,%eax
   1630c:	8f 47 fe             	pop    -0x2(%rdi)
   1630f:	ff                   	(bad)  
   16310:	ff                   	(bad)  
   16311:	ff                   	(bad)  
   16312:	ff 48 f7             	decl   -0x9(%rax)
   16315:	ff 00                	incl   (%rax)
   16317:	49 09 cc             	or     %rcx,%r12
   1631a:	00 e9                	add    %ch,%cl
   1631c:	94                   	xchg   %eax,%esp
   1631d:	fc                   	cld    
   1631e:	ff                   	(bad)  
   1631f:	ff f2                	push   %rdx
   16321:	01 00                	add    %eax,(%rax)
   16323:	00 4d 4c             	add    %cl,0x4c(%rbp)
   16326:	85 d9                	test   %ebx,%ecx
   16328:	ff 4c 85 ce          	decl   -0x32(%rbp,%rax,4)
   1632c:	24 10                	and    $0x10,%al
   1632e:	c7 44 24 4c 01 f9 ff 	movl   $0xfffff901,0x4c(%rsp)
   16335:	ff 
   16336:	ff 0f                	decl   (%rdi)
   16338:	84 b6 01 00 00 18    	test   %dh,0x18000001(%rsi)
   1633e:	e9 68 f3 ff ff       	jmp    156ab <_obstack_memory_used@@Base+0x4efb>
   16343:	4d 89 e9             	mov    %r13,%r9
   16346:	20 ff                	and    %bh,%bh
   16348:	ff                   	(bad)  
   16349:	ff                   	(bad)  
   1634a:	eb eb                	jmp    16337 <_obstack_memory_used@@Base+0x5b87>
   1634c:	74 c7                	je     16315 <_obstack_memory_used@@Base+0x5b65>
   1634e:	44 24 30             	rex.R and $0x30,%al
   16351:	01 00                	add    %eax,(%rax)
   16353:	00 00                	add    %al,(%rax)
   16355:	be 75 00 00 00       	mov    $0x75,%esi
   1635a:	8b 40 18             	mov    0x18(%rax),%eax
   1635d:	8d 50 06             	lea    0x6(%rax),%edx
   16360:	48 63 c2             	movslq %edx,%rax
   16363:	89 d1                	mov    %edx,%ecx
   16365:	48 69 c0 93 24 49 4d 	imul   $0x4d492493,%rax,%rax
   1636c:	31 d1                	xor    %edx,%ecx
   1636e:	1f                   	(bad)  
   1636f:	48 c1 e8 20          	shr    $0x20,%rax
   16373:	01 d0                	add    %edx,%eax
   16375:	c1 f8 02             	sar    $0x2,%eax
   16378:	29 0f                	sub    %ecx,(%rdi)
   1637a:	84 16                	test   %dl,(%rsi)
   1637c:	03 00                	add    (%rax),%eax
   1637e:	00 49 89             	add    %cl,-0x77(%rcx)
   16381:	d0 c1                	rol    %cl
   16383:	29 ca                	sub    %ecx,%edx
   16385:	83 c2 01             	add    $0x1,%edx
   16388:	e9 1e f3 48 c1       	jmp    ffffffffc14a56ab <obstack_alloc_failed_handler@@Base+0xffffffffc148360b>
   1638d:	e1 2d                	loope  163bc <_obstack_memory_used@@Base+0x5c0c>
   1638f:	4c 0f                	rex.WR (bad) 
   16391:	0f 8c 3c fe ff ff    	jl     161d3 <_obstack_memory_used@@Base+0x5a23>
   16397:	49 c7 c7 2b fd ff ff 	mov    $0xfffffffffffffd2b,%r15
   1639e:	15 05 00 00 4c       	adc    $0x4c000005,%eax
   163a3:	eb 99                	jmp    1633e <_obstack_memory_used@@Base+0x5b8e>
   163a5:	88 0d 05 00 00 48    	mov    %cl,0x48000005(%rip)        # 480163b0 <obstack_alloc_failed_handler@@Base+0x47ff4310>
   163ab:	63 d3                	movsxd %ebx,%edx
   163ad:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   163b3:	48 85 d2             	test   %rdx,%rdx
   163b6:	4c 0f 45 49 21       	cmovne 0x21(%rcx),%r9
   163bb:	ff cd                	dec    %ebp
   163bd:	0f 83 b5 ec ff 4d    	jae    4e015078 <obstack_alloc_failed_handler@@Base+0x4dff2fd8>
   163c3:	39 e0                	cmp    %esp,%eax
   163c5:	ed                   	in     (%dx),%eax
   163c6:	0f 84 b1 f2 ff ff    	je     1567d <_obstack_memory_used@@Base+0x4ecd>
   163cc:	83 fb 01             	cmp    $0x1,%ebx
   163cf:	7e 49                	jle    1641a <_obstack_memory_used@@Base+0x5c6a>
   163d1:	31 f5                	xor    %esi,%ebp
   163d3:	4c 85 e1             	test   %r12,%rcx
   163d6:	8d 5c 15 00          	lea    0x0(%rbp,%rdx,1),%ebx
   163da:	41 83 fb 30          	cmp    $0x30,%r11d
   163de:	0f 84 bd 08 00 00    	je     16ca1 <_obstack_memory_used@@Base+0x64f1>
   163e4:	41 83 4c 01 c7 84    	orl    $0xffffff84,-0x39(%r9,%rax,1)
   163ea:	b3 4d                	mov    $0x4d,%bl
   163ec:	48 0f af d7          	imul   %rdi,%rdx
   163f0:	ef                   	out    %eax,(%dx)
   163f1:	be 20 00 00 00       	mov    $0x20,%esi
   163f6:	48                   	rex.W
   163f7:	49 31 d2             	xor    %rdx,%r10
   163fa:	62 e5 fe ff 0f       	(bad)  {%k7}{z}
   163ff:	8f                   	(bad)  
   16400:	78 03                	js     16405 <_obstack_memory_used@@Base+0x5c55>
   16402:	00 00                	add    %al,(%rax)
   16404:	00 48 83             	add    %cl,-0x7d(%rax)
   16407:	c5 01 e9 6f f2       	vpsubsw -0xe(%rdi),%xmm15,%xmm13
   1640c:	ff                   	(bad)  
   1640d:	ff 4d 01             	decl   0x1(%rbp)
   16410:	cf                   	iret   
   16411:	0f 85 0d fb ff ff    	jne    15f24 <_obstack_memory_used@@Base+0x5774>
   16417:	49 ff c6             	inc    %r14
   1641a:	ff 4d 21             	decl   0x21(%rbp)
   1641d:	fc                   	cld    
   1641e:	4c 89 e3             	mov    %r12,%rbx
   16421:	1e                   	(bad)  
   16422:	da ff                	(bad)  
   16424:	e9 87 ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16429:	83 ff 4f             	cmp    $0x4f,%edi
   1642c:	0f 85 b3 fc ff ff    	jne    160e5 <_obstack_memory_used@@Base+0x5935>
   16432:	e9 49 c1 e4 0a       	jmp    ae62580 <obstack_alloc_failed_handler@@Base+0xae404e0>
   16437:	e7 4c                	out    %eax,$0x4c
   16439:	29 d8                	sub    %ebx,%eax
   1643b:	56                   	push   %rsi
   1643c:	49                   	rex.WB
   1643d:	49 c1 e1 34          	shl    $0x34,%r9
   16441:	ed                   	in     (%dx),%eax
   16442:	ff                   	(bad)  
   16443:	ff 83 ff 45 0f 49    	incl   0x490f45ff(%rbx)
   16449:	f7 fd                	idiv   %ebp
   1644b:	ff                   	(bad)  
   1644c:	ff                   	(bad)  
   1644d:	e9 5e ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16452:	85 ff                	test   %edi,%edi
   16454:	0f 84 4c 09 d9 ff    	je     ffffffffffda6da6 <obstack_alloc_failed_handler@@Base+0xffffffffffd84d06>
   1645a:	e9 51 ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   1645f:	85 ff                	test   %edi,%edi
   16461:	0f 84 49 0f af dd    	je     ffffffffddb073b0 <obstack_alloc_failed_handler@@Base+0xffffffffddae5310>
   16467:	e9 44 ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   1646c:	83 ff e9             	cmp    $0xffffffe9,%edi
   1646f:	90                   	nop
   16470:	49 ff c4             	inc    %r12
   16473:	ff                   	(bad)  
   16474:	ff 4c 0f 8f          	decl   -0x71(%rdi,%rcx,1)
   16478:	65 0f 8c 5f ff 4c 09 	gs jl  94e63de <obstack_alloc_failed_handler@@Base+0x94c433e>
   1647f:	cf                   	iret   
   16480:	09 d6                	or     %edx,%esi
   16482:	0f 84 d9 ef ff ff    	je     15461 <_obstack_memory_used@@Base+0x4cb1>
   16488:	e9 00 f5 ff ff       	jmp    1598d <_obstack_memory_used@@Base+0x51dd>
   1648d:	83 ff 4f             	cmp    $0x4f,%edi
   16490:	0f 85 d9 fc ff ff    	jne    1616f <_obstack_memory_used@@Base+0x59bf>
   16496:	e9 15 ed ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   1649b:	83 ff 45             	cmp    $0x45,%edi
   1649e:	0f 85 53 fc ff ff    	jne    160f7 <_obstack_memory_used@@Base+0x5947>
   164a4:	e9 b8 ef ff ff       	jmp    15461 <_obstack_memory_used@@Base+0x4cb1>
   164a9:	83 ff 45             	cmp    $0x45,%edi
   164ac:	0f 85 fc f9 ff 49    	jne    4a015eae <obstack_alloc_failed_handler@@Base+0x49ff3e0e>
   164b2:	29 d5                	sub    %edx,%ebp
   164b4:	ef                   	out    %eax,(%dx)
   164b5:	ff                   	(bad)  
   164b6:	ff 49 31             	decl   0x31(%rcx)
   164b9:	c4                   	(bad)  
   164ba:	0f 84 49 0f af c1    	je     ffffffffc1b07409 <obstack_alloc_failed_handler@@Base+0xffffffffc1ae5369>
   164c0:	83 ff 4f             	cmp    $0x4f,%edi
   164c3:	0f 85 48 ff c0 ff    	jne    ffffffffffc26411 <obstack_alloc_failed_handler@@Base+0xffffffffffc04371>
   164c9:	48 ff c1             	inc    %rcx
   164cc:	ff                   	(bad)  
   164cd:	ff 48 8b             	decl   -0x75(%rax)
   164d0:	4c 24 08             	rex.WR and $0x8,%al
   164d3:	4c 29 e1             	sub    %r12,%rcx
   164d6:	85 48 09             	test   %ecx,0x9(%rax)
   164d9:	df ba fe ff ff 4d    	fistpll 0x4dfffffe(%rdx)
   164df:	89 f7                	mov    %esi,%edi
   164e1:	b9 01 00 00 00       	mov    $0x1,%ecx
   164e6:	e9 e1 ec ff ff       	jmp    151cc <_obstack_memory_used@@Base+0x4a1c>
   164eb:	83 ff eb             	cmp    $0xffffffeb,%edi
   164ee:	48 c1 e2 38          	shl    $0x38,%rdx
   164f2:	85 48 c1             	test   %ecx,-0x3f(%rax)
   164f5:	e6 35                	out    %al,$0x35
   164f7:	ff                   	(bad)  
   164f8:	ff 49 21             	decl   0x21(%rcx)
   164fb:	df e3                	(bad)  
   164fd:	85 fc                	test   %edi,%esp
   164ff:	f1                   	int1   
   16500:	ff                   	(bad)  
   16501:	ff                   	(bad)  
   16502:	e9 4c 85 e8 ff       	jmp    ffffffffffe9ea53 <obstack_alloc_failed_handler@@Base+0xffffffffffe7c9b3>
   16507:	83 ff 45             	cmp    $0x45,%edi
   1650a:	0f 85 49 f7 f8 ff    	jne    fffffffffffa5c59 <obstack_alloc_failed_handler@@Base+0xfffffffffff83bb9>
   16510:	e9 9b ec ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16515:	83 ff 45             	cmp    $0x45,%edi
   16518:	49 c1 e5 0d          	shl    $0xd,%r13
   1651c:	ff 0f                	decl   (%rdi)
   1651e:	84 5e 02             	test   %bl,0x2(%rsi)
   16521:	00 00                	add    %al,(%rax)
   16523:	83 4d 0f af          	orl    $0xffffffaf,0xf(%rbp)
   16527:	e4 46                	in     $0x46,%al
   16529:	f4                   	hlt    
   1652a:	ff                   	(bad)  
   1652b:	ff                   	(bad)  
   1652c:	e9 7f ec ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16531:	83 ff 45             	cmp    $0x45,%edi
   16534:	0f 85 50 f1 4d 21    	jne    214f568a <obstack_alloc_failed_handler@@Base+0x214d35ea>
   1653a:	d0 4d 39             	rorb   0x39(%rbp)
   1653d:	d5                   	(bad)  
   1653e:	4c 89 c3             	mov    %r8,%rbx
   16541:	45 0f 85 83 4c 21 df 	rex.RB jne ffffffffdf22b1cb <obstack_alloc_failed_handler@@Base+0xffffffffdf20912b>
   16548:	e9 63 48 c1 e7       	jmp    ffffffffe7c2adb0 <obstack_alloc_failed_handler@@Base+0xffffffffe7c08d10>
   1654d:	1c 09                	sbb    $0x9,%al
   1654f:	45 0f 85 98 4c 01 d8 	rex.RB jne ffffffffd802b1ee <obstack_alloc_failed_handler@@Base+0xffffffffd800914e>
   16556:	e9 55 49 49 c1       	jmp    ffffffffc14aaeb0 <obstack_alloc_failed_handler@@Base+0xffffffffc1488e10>
   1655b:	e3 22                	jrcxz  1657f <_obstack_memory_used@@Base+0x5dcf>
   1655d:	45 0f 85 46 fd ff ff 	rex.RB jne 162aa <_obstack_memory_used@@Base+0x5afa>
   16564:	e9 4c 89 c0 ff       	jmp    ffffffffffc1eeb5 <obstack_alloc_failed_handler@@Base+0xffffffffffbfce15>
   16569:	83 ff 45             	cmp    $0x45,%edi
   1656c:	0f 85 e4 fc ff ff    	jne    16256 <_obstack_memory_used@@Base+0x5aa6>
   16572:	e9 48 39 c0 ff       	jmp    ffffffffffc19ebf <obstack_alloc_failed_handler@@Base+0xffffffffffbf7e1f>
   16577:	83 ff 45             	cmp    $0x45,%edi
   1657a:	0f 85 46 fb ff ff    	jne    160c6 <_obstack_memory_used@@Base+0x5916>
   16580:	e9 2b e9 e2 fe       	jmp    fffffffffee44eb0 <obstack_alloc_failed_handler@@Base+0xfffffffffee22e10>
   16585:	ff                   	(bad)  
   16586:	ff 45 4d             	incl   0x4d(%rbp)
   16589:	89 49 21             	mov    %ecx,0x21(%rcx)
   1658c:	d5                   	(bad)  
   1658d:	ff                   	(bad)  
   1658e:	e9 1d ec ff ff       	jmp    151b0 <_obstack_memory_used@@Base+0x4a00>
   16593:	48 09 ce             	or     %rcx,%rsi
   16596:	0f 85 49 c1 e4 48    	jne    48e626e5 <obstack_alloc_failed_handler@@Base+0x48e40645>
   1659c:	0f 8c 30 02 00 00    	jl     167d2 <_obstack_memory_used@@Base+0x6022>
   165a2:	89 f5                	mov    %esi,%ebp
   165a4:	e9 d9 f1 ff ff       	jmp    15782 <_obstack_memory_used@@Base+0x4fd2>
   165a9:	49 83 c1 01          	add    $0x1,%r9
   165ad:	43 0f b6 44 0d 00    	movzbl 0x0(%r13,%r9,1),%eax
   165b3:	4f 8d 74 0d 00       	lea    0x0(%r13,%r9,1),%r14
   165b8:	4c 85 fa             	test   %r15,%rdx
   165bb:	85 d9                	test   %ebx,%ecx
   165bd:	4c 39 49 09          	cmp    %r9,0x9(%rcx)
   165c1:	f6 66 0f             	mulb   0xf(%rsi)
   165c4:	1f                   	(bad)  
   165c5:	44 00 4c 0f 7c       	add    %r9b,0x7c(%rdi,%rcx,1)
   165ca:	47                   	rex.RXB
   165cb:	4c 0f af e6          	imul   %rsi,%r12
   165cf:	ef                   	out    %eax,(%dx)
   165d0:	e9 f7 01 00 00       	jmp    167cc <_obstack_memory_used@@Base+0x601c>
   165d5:	44 00 00             	add    %r8b,(%rax)
   165d8:	48                   	rex.W
   165d9:	48 29 db             	sub    %rbx,%rbx
   165dc:	d2 e9                	shr    %cl,%cl
   165de:	09 ec                	or     %ebp,%esp
   165e0:	ff                   	(bad)  
   165e1:	ff 0f                	decl   (%rdi)
   165e3:	8f                   	(bad)  
   165e4:	cb                   	lret   
   165e5:	fe                   	(bad)  
   165e6:	ff                   	(bad)  
   165e7:	ff f7                	push   %rdi
   165e9:	4d 01 f9             	add    %r15,%r9
   165ec:	00 00                	add    %al,(%rax)
   165ee:	8d 0f                	lea    (%rdi),%ecx
   165f0:	84 97 02 0f 85 90    	test   %dl,-0x6f7af0fe(%rdi)
   165f6:	03 49 c1             	add    -0x3f(%rcx),%ecx
   165f9:	e1 25                	loope  16620 <_obstack_memory_used@@Base+0x5e70>
   165fb:	ff                   	(bad)  
   165fc:	ff 85 c4 01 00 00    	incl   0x1c4(%rbp)
   16602:	0f 8f 41 ff ff ff    	jg     16549 <_obstack_memory_used@@Base+0x5d99>
   16608:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1660d:	c7 c3 0d 02 00 00    	mov    $0x20d,%ebx
   16613:	01 0f                	add    %ecx,(%rdi)
   16615:	86 5e ea             	xchg   %bl,-0x16(%rsi)
   16618:	ff                   	(bad)  
   16619:	ff 48 0f             	decl   0xf(%rax)
   1661c:	8c 62 01             	mov    %fs,0x1(%rdx)
   1661f:	00 00                	add    %al,(%rax)
   16621:	af                   	scas   %es:(%rdi),%eax
   16622:	fd                   	std    
   16623:	c4 83 c5 01          	(bad)
   16627:	4d 85 f2             	test   %r14,%r10
   1662a:	01 49 63             	add    %ecx,0x63(%rcx)
   1662d:	ca 41 83             	lret   $0x8341
   16630:	fb                   	sti    
   16631:	2d 74 3a 48 89       	sub    $0x89483a74,%eax
   16636:	cb                   	lret   
   16637:	31 d2                	xor    %edx,%edx
   16639:	85 f6                	test   %esi,%esi
   1663b:	0f 88 76 f5 ff ff    	js     15bb7 <_obstack_memory_used@@Base+0x5407>
   16641:	89 f3                	mov    %esi,%ebx
   16643:	49 29 da             	sub    %rbx,%r10
   16646:	ff                   	(bad)  
   16647:	ff 0f                	decl   (%rdi)
   16649:	1f                   	(bad)  
   1664a:	84 00                	test   %al,(%rax)
   1664c:	00 00                	add    %al,(%rax)
   1664e:	00 00                	add    %al,(%rax)
   16650:	b8 01 00 00 4d       	mov    $0x4d000001,%eax
   16655:	09 cc                	or     %ecx,%esp
   16657:	f0 00 00             	lock add %al,(%rax)
   1665a:	00 e9                	add    %ch,%cl
   1665c:	4c 39 d2             	cmp    %r10,%rdx
   1665f:	ff 31                	push   (%rcx)
   16661:	d2 eb                	shr    %cl,%bl
   16663:	9a                   	(bad)  
   16664:	41 83 fb 2d          	cmp    $0x2d,%r11d
   16668:	0f 49 c7             	cmovns %edi,%eax
   1666b:	c6                   	(bad)  
   1666c:	5e                   	pop    %rsi
   1666d:	fc                   	cld    
   1666e:	ff                   	(bad)  
   1666f:	ff cb                	dec    %ebx
   16671:	31 d2                	xor    %edx,%edx
   16673:	e9 3f f5 ff ff       	jmp    15bb7 <_obstack_memory_used@@Base+0x5407>
   16678:	48 89 ca             	mov    %rcx,%rdx
   1667b:	4c 89 ee             	mov    %r13,%rsi
   1667e:	48 89 ef             	mov    %rbp,%rdi
   16681:	48 89 0f             	mov    %rcx,(%rdi)
   16684:	85 4c 31 d1          	test   %ecx,-0x2f(%rcx,%rsi,1)
   16688:	00 fe                	add    %bh,%dh
   1668a:	ff 48 8b             	decl   -0x75(%rax)
   1668d:	4c 24 4d             	rex.WR and $0x4d,%al
   16690:	48                   	rex.W
   16691:	4d 39 d6             	cmp    %r10,%r14
   16694:	4c 01 d7             	add    %r10,%rdi
   16697:	ca 4c 89             	lret   $0x894c
   1669a:	fe 48 21             	decb   0x21(%rax)
   1669d:	d8 e9                	fsubr  %st(1),%st
   1669f:	fc                   	cld    
   166a0:	00 00                	add    %al,(%rax)
   166a2:	e9 48 85 db e9       	jmp    ffffffffe9dcebef <obstack_alloc_failed_handler@@Base+0xffffffffe9dacb4f>
   166a7:	40 01 00             	rex add %eax,(%rax)
   166aa:	00 db                	add    %bl,%bl
   166ac:	40 e9 c4 0f 84 cd    	rex jmp ffffffffcd857676 <obstack_alloc_failed_handler@@Base+0xffffffffcd8355d6>
   166b2:	00 00                	add    %al,(%rax)
   166b4:	00 48 c1             	add    %cl,-0x3f(%rax)
   166b7:	e9 12 ff c6 48       	jmp    48c865ce <obstack_alloc_failed_handler@@Base+0x48c6452e>
   166bc:	85 f7                	test   %esi,%edi
   166be:	01 e9                	add    %ebp,%ecx
   166c0:	33 ea                	xor    %edx,%ebp
   166c2:	ff                   	(bad)  
   166c3:	ff 48 8d             	decl   -0x73(%rax)
   166c6:	48                   	rex.W
   166c7:	4d 21 e4             	and    %r12,%r12
   166ca:	00 00                	add    %al,(%rax)
   166cc:	4d 01 e2             	add    %r12,%r10
   166cf:	48 89 ef             	mov    %rbp,%rdi
   166d2:	e8 79 e3 fe 7f       	call   80004a50 <obstack_alloc_failed_handler@@Base+0x7ffe29b0>
   166d7:	92                   	xchg   %eax,%edx
   166d8:	aa                   	stos   %al,%es:(%rdi)
   166d9:	ee                   	out    %al,(%dx)
   166da:	ff                   	(bad)  
   166db:	ff 4c 85 d3          	decl   -0x2d(%rbp,%rax,4)
   166df:	fe 4d 85             	decb   -0x7b(%rbp)
   166e2:	ff 0f                	decl   (%rdi)
   166e4:	84 9d ee ff ff 49    	test   %bl,0x49ffffee(%rbp)
   166ea:	21 ca                	and    %ecx,%edx
   166ec:	e7 0a                	out    %eax,$0xa
   166ee:	48                   	rex.W
   166ef:	4d 01 d7             	add    %r10,%r15
   166f2:	48 29 f1             	sub    %rsi,%rcx
   166f5:	00 66 2e             	add    %ah,0x2e(%rsi)
   166f8:	0f 1f 84 4d 85 ec 00 	nopl   0xec85(%rbp,%rcx,2)
   166ff:	00 
   16700:	42 0f b6 0c 2e       	movzbl (%rsi,%r13,1),%ecx
   16705:	48 8b 10             	mov    (%rax),%rdx
   16708:	8b 0f                	mov    (%rdi),%ecx
   1670a:	4c 85 c6             	test   %r8,%rsi
   1670d:	ff                   	(bad)  
   1670e:	ff 00                	incl   (%rax)
   16710:	49                   	rex.WB
   16711:	48 ff c1             	inc    %rcx
   16714:	73 ea                	jae    16700 <_obstack_memory_used@@Base+0x5f50>
   16716:	e9 6b 49 ff c6       	jmp    ffffffffc700b086 <obstack_alloc_failed_handler@@Base+0xffffffffc6fe8fe6>
   1671b:	4d 7c 5e             	rex.WRB jl 1677c <_obstack_memory_used@@Base+0x5fcc>
   1671e:	31 d2                	xor    %edx,%edx
   16720:	e9 48 c1 e9 2a       	jmp    2aeb286d <obstack_alloc_failed_handler@@Base+0x2ae907cd>
   16725:	0f 85 48 39 de ff    	jne    ffffffffffdfa073 <obstack_alloc_failed_handler@@Base+0xffffffffffdd7fd3>
   1672b:	e9 be 48 ff 48       	jmp    4900afee <obstack_alloc_failed_handler@@Base+0x48fe8f4e>
   16730:	39 ce                	cmp    %ecx,%esi
   16732:	ef                   	out    %eax,(%dx)
   16733:	be 0f 84 49 c1       	mov    $0xc149840f,%esi
   16738:	ee                   	out    %al,(%dx)
   16739:	2d e2 fe 0f 8c       	sub    $0x8c0ffee2,%eax
   1673e:	94                   	xchg   %eax,%esp
   1673f:	48 31 f9             	xor    %rdi,%rcx
   16742:	48 8b 4c 09 ca       	mov    -0x36(%rcx,%rcx,1),%rcx
   16747:	e9 f0 ed 4c 01       	jmp    14e553c <obstack_alloc_failed_handler@@Base+0x14c349c>
   1674c:	c0 49 f7 f8          	rorb   $0xf8,-0x9(%rcx)
   16750:	30 00                	xor    %al,(%rax)
   16752:	00 00                	add    %al,(%rax)
   16754:	4c 89 fd             	mov    %r15,%rbp
   16757:	48 89 d1             	mov    %rdx,%rcx
   1675a:	fe                   	(bad)  
   1675b:	ff 48 8b             	decl   -0x75(%rax)
   1675e:	4c 24 30             	rex.WR and $0x30,%al
   16761:	e9 0f 85 0b 4d       	jmp    4d0cec75 <obstack_alloc_failed_handler@@Base+0x4d0acbd5>
   16766:	85 e9                	test   %ebp,%ecx
   16768:	48 8b 5c 24 49       	mov    0x49(%rsp),%rbx
   1676d:	01 f5                	add    %esi,%ebp
   1676f:	48 63 d2             	movslq %edx,%rdx
   16772:	49 01 d4             	add    %rdx,%r12
   16775:	4c 29 e3             	sub    %r12,%rbx
   16778:	48 85 ed             	test   %rbp,%rbp
   1677b:	0f 84 9f 00 00 00    	je     16820 <_obstack_memory_used@@Base+0x6070>
   16781:	48 89 4d 31          	mov    %rcx,0x31(%rbp)
   16785:	f2 00 00             	repnz add %al,(%rax)
   16788:	00 48 89             	add    %cl,-0x77(%rax)
   1678b:	54                   	push   %rsp
   1678c:	24 30                	and    $0x30,%al
   1678e:	4c 89 54 0f 8f       	mov    %r10,-0x71(%rdi,%rcx,1)
   16793:	6a fd                	push   $0xfffffffffffffffd
   16795:	ff                   	(bad)  
   16796:	ff 44 89 5c          	incl   0x5c(%rcx,%rcx,4)
   1679a:	24 48                	and    $0x48,%al
   1679c:	e8 bf e1 fe ff       	call   4960 <memset@plt>
   167a1:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   167a6:	48 01 d5             	add    %rdx,%rbp
   167a9:	48 83 fb 01          	cmp    $0x1,%rbx
   167ad:	0f 4d 85 e4 85 7d 00 	cmovge 0x7d85e4(%rbp),%eax
   167b4:	00 00                	add    %al,(%rax)
   167b6:	8c 48 c1             	mov    %cs,-0x3f(%rax)
   167b9:	ea                   	(bad)  
   167ba:	0f 8c 2b fd ff ff    	jl     164eb <_obstack_memory_used@@Base+0x5d3b>
   167c0:	58                   	pop    %rax
   167c1:	8d 71 ff             	lea    -0x1(%rcx),%esi
   167c4:	e9 56 fe ff ff       	jmp    1661f <_obstack_memory_used@@Base+0x5e6f>
   167c9:	48 89 ef             	mov    %rbp,%rdi
   167cc:	be 30 00 00 00       	mov    $0x30,%esi
   167d1:	48 09 df             	or     %rbx,%rdi
   167d4:	e8 87 e1 0f 8f       	call   ffffffff8f114960 <obstack_alloc_failed_handler@@Base+0xffffffff8f0f28c0>
   167d9:	c4 02 00 00          	(bad)
   167dd:	30 e9                	xor    %ch,%cl
   167df:	5d                   	pop    %rbp
   167e0:	ea                   	(bad)  
   167e1:	ff                   	(bad)  
   167e2:	ff 49 83             	decl   -0x7d(%rcx)
   167e5:	0f 8c 5d fd ff ff    	jl     16548 <_obstack_memory_used@@Base+0x5d98>
   167eb:	00 00                	add    %al,(%rax)
   167ed:	45 85 c0             	test   %r8d,%r8d
   167f0:	0f 85 0f 84 a1 fd    	jne    fffffffffda2ec05 <obstack_alloc_failed_handler@@Base+0xfffffffffda0cb65>
   167f6:	ff                   	(bad)  
   167f7:	ff 0f                	decl   (%rdi)
   167f9:	0f 84 a5 01 00 00    	je     169a4 <_obstack_memory_used@@Base+0x61f4>
   167ff:	e9 37 fe ff 48       	jmp    4901663b <obstack_alloc_failed_handler@@Base+0x48ff459b>
   16804:	c1 ea 11             	shr    $0x11,%edx
   16807:	89 d2                	mov    %edx,%edx
   16809:	c7                   	(bad)  
   1680a:	4d 89 f5             	mov    %r14,%r13
   1680d:	03 00                	add    (%rax),%eax
   1680f:	00 00                	add    %al,(%rax)
   16811:	83 f0 01             	xor    $0x1,%eax
   16814:	e9 0f 8c 0e ff       	jmp    ffffffffff0ff428 <obstack_alloc_failed_handler@@Base+0xffffffffff0dd388>
   16819:	ff                   	(bad)  
   1681a:	ff 80 00 00 00 00    	incl   0x0(%rax)
   16820:	48                   	rex.W
   16821:	49 89 c0             	mov    %rax,%r8
   16824:	0f 86 4e 4c 39 e9    	jbe    ffffffffe93ab478 <obstack_alloc_failed_handler@@Base+0xffffffffe93893d8>
   1682a:	8d 49 09             	lea    0x9(%rcx),%ecx
   1682d:	f5                   	cmc    
   1682e:	83 c4 01             	add    $0x1,%esp
   16831:	49 63 ca             	movslq %r10d,%rcx
   16834:	49                   	rex.WB
   16835:	49 89 fb             	mov    %rdi,%r11
   16838:	ff 48 89             	decl   -0x77(%rax)
   1683b:	ef                   	out    %eax,(%dx)
   1683c:	be 49 09 c6 00       	mov    $0xc60949,%esi
   16841:	e8 1a e1 fe ff       	call   4960 <memset@plt>
   16846:	48                   	rex.W
   16847:	49 0f af fe          	imul   %r14,%rdi
   1684b:	44 8b 44 24 48       	mov    0x48(%rsp),%r8d
   16850:	44 8b 5c 24 0f       	mov    0xf(%rsp),%r11d
   16855:	84 b7 00 00 00 48    	test   %dh,0x48000000(%rdi)
   1685b:	c1 e2 27             	shl    $0x27,%edx
   1685e:	ff 48 83             	decl   -0x7d(%rax)
   16861:	f8                   	clc    
   16862:	01 0f                	add    %ecx,(%rdi)
   16864:	86 0f                	xchg   %cl,(%rdi)
   16866:	48 c7 c2 d9 00 00 00 	mov    $0xd9,%rdx
   1686d:	00 00                	add    %al,(%rax)
   1686f:	48 85 ed             	test   %rbp,%rbp
   16872:	0f 85 b5 f0 ff ff    	jne    1592d <_obstack_memory_used@@Base+0x517d>
   16878:	e9 00 ee ff ff       	jmp    1567d <_obstack_memory_used@@Base+0x4ecd>
   1687d:	48 83 f8 01          	cmp    $0x1,%rax
   16881:	0f 86 f1 e7 ff ff    	jbe    15078 <_obstack_memory_used@@Base+0x48c8>
   16887:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1688d:	48 85 ed             	test   %rbp,%rbp
   16890:	4d 09 df             	or     %r11,%r15
   16893:	ed                   	in     (%dx),%eax
   16894:	ff                   	(bad)  
   16895:	ff                   	(bad)  
   16896:	e9 e2 ed ff ff       	jmp    1567d <_obstack_memory_used@@Base+0x4ecd>
   1689b:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   168a0:	31 0f                	xor    %ecx,(%rdi)
   168a2:	84 49 02             	test   %cl,0x2(%rcx)
   168a5:	00 00                	add    %al,(%rax)
   168a7:	02 49 c1             	add    -0x3f(%rcx),%cl
   168aa:	e0 39                	loopne 168e5 <_obstack_memory_used@@Base+0x6135>
   168ac:	00 be 01 00 00 00    	add    %bh,0x1(%rsi)
   168b2:	e9 e1 0f 85 6f       	jmp    6f867898 <obstack_alloc_failed_handler@@Base+0x6f8457f8>
   168b7:	fc                   	cld    
   168b8:	ff                   	(bad)  
   168b9:	ff 01                	incl   (%rcx)
   168bb:	0f 86 0f 84 60 fe    	jbe    fffffffffe61ecd0 <obstack_alloc_failed_handler@@Base+0xfffffffffe5fcc30>
   168c1:	ff                   	(bad)  
   168c2:	ff                   	(bad)  
   168c3:	dc 03                	faddl  (%rbx)
   168c5:	00 00                	add    %al,(%rax)
   168c7:	e1 33                	loope  168fc <_obstack_memory_used@@Base+0x614c>
   168c9:	ed                   	in     (%dx),%eax
   168ca:	0f 85 32 fb ff ff    	jne    16402 <_obstack_memory_used@@Base+0x5c52>
   168d0:	e9 a8 ed ff ff       	jmp    1567d <_obstack_memory_used@@Base+0x4ecd>
   168d5:	49 21 c9             	and    %rcx,%r9
   168d8:	30 04 00             	xor    %al,(%rax,%rax,1)
   168db:	00 00                	add    %al,(%rax)
   168dd:	b8 0f 48 39 c2       	mov    $0xc239480f,%eax
   168e2:	41 83 fb 2b          	cmp    $0x2b,%r11d
   168e6:	0f 85 02 05 00 00    	jne    16dee <_obstack_memory_used@@Base+0x663e>
   168ec:	39 d0                	cmp    %edx,%eax
   168ee:	73 26                	jae    16916 <_obstack_memory_used@@Base+0x6166>
   168f0:	44 89 f8             	mov    %r15d,%eax
   168f3:	c6 44 24 48 01       	movb   $0x1,0x48(%rsp)
   168f8:	41 bb 2b 00 00 e9    	mov    $0xe900002b,%r11d
   168fe:	26 4d 31 e3          	es xor %r12,%r11
   16902:	44 eb ff             	rex.R jmp 16904 <_obstack_memory_used@@Base+0x6154>
   16905:	ff c7                	inc    %edi
   16907:	44 24 30             	rex.R and $0x30,%al
   1690a:	02 4c 01 f9          	add    -0x7(%rcx,%rax,1),%cl
   1690e:	be 79 00 00 00       	mov    $0x79,%esi
   16913:	45 31 ff             	xor    %r15d,%r15d
   16916:	3b 5c 24 30          	cmp    0x30(%rsp),%ebx
   1691a:	44                   	rex.R
   1691b:	48 39 d0             	cmp    %rdx,%rax
   1691e:	bb 4c 01 fa 00       	mov    $0xfa014c,%ebx
   16923:	0f 9f 44 24 48       	setg   0x48(%rsp)
   16928:	83 f0 01             	xor    $0x1,%eax
   1692b:	e9 1a eb ff ff       	jmp    1544a <_obstack_memory_used@@Base+0x4c9a>
   16930:	41 83 e9 01          	sub    $0x1,%r9d
   16934:	b8 6d 01 00 00       	mov    $0x16d,%eax
   16939:	41 f6 c1 03          	test   $0x3,%r9b
   1693d:	75 33                	jne    16972 <_obstack_memory_used@@Base+0x61c2>
   1693f:	41 69 d1 29 5c 8f c2 	imul   $0xc28f5c29,%r9d,%edx
   16946:	b8 6e 01 00 00       	mov    $0x16e,%eax
   1694b:	81 c2 50 b8 1e 05    	add    $0x51eb850,%edx
   16951:	c1 ca 02             	ror    $0x2,%edx
   16954:	81 fa 28 5c 8f 02    	cmp    $0x28f5c28,%edx
   1695a:	77 16                	ja     16972 <_obstack_memory_used@@Base+0x61c2>
   1695c:	44 89 c8             	mov    %r9d,%eax
   1695f:	41 b8 90 01 00 00    	mov    $0x190,%r8d
   16965:	99                   	cltd   
   16966:	49 c1 e9 0f          	shr    $0xf,%r9
   1696a:	da 19                	ficompl (%rcx)
   1696c:	c0 05 6e 01 00 49 c1 	rolb   $0xc1,0x4900016e(%rip)        # 49016ae1 <obstack_alloc_failed_handler@@Base+0x48ff4a41>
   16973:	e1 10                	loope  16985 <_obstack_memory_used@@Base+0x61d5>
   16975:	41                   	rex.B
   16976:	4c 21 f2             	and    %r14,%rdx
   16979:	29 4c 01 e3          	sub    %ecx,-0x1d(%rcx,%rax,1)
   1697d:	c0 7e 01 00          	sarb   $0x0,0x1(%rsi)
   16981:	00 49 63             	add    %cl,0x63(%rcx)
   16984:	d0 45 89             	rolb   -0x77(%rbp)
   16987:	c1 44 29 0f 8f       	roll   $0x8f,0xf(%rcx,%rbp,1)
   1698c:	37                   	(bad)  
   1698d:	02 00                	add    (%rax),%al
   1698f:	00 49 92             	add    %cl,-0x6e(%rcx)
   16992:	41 c1 0f 8c          	rorl   $0x8c,(%r15)
   16996:	6a 03                	push   $0x3
   16998:	00 00                	add    %al,(%rax)
   1699a:	ff 01                	incl   (%rcx)
   1699c:	c2 41 b8             	ret    $0xb841
   1699f:	ff                   	(bad)  
   169a0:	ff                   	(bad)  
   169a1:	ff 4c 09 db          	decl   -0x25(%rcx,%rcx,1)
   169a5:	02 44 0f 8c          	add    -0x74(%rdi,%rcx,1),%al
   169a9:	71 fc                	jno    169a7 <_obstack_memory_used@@Base+0x61f7>
   169ab:	4c 29 d9             	sub    %r11,%rcx
   169ae:	00 00                	add    %al,(%rax)
   169b0:	00 41 29             	add    %al,0x29(%rcx)
   169b3:	d1 42 8d             	roll   -0x73(%rdx)
   169b6:	44 08 03             	or     %r8b,(%rbx)
   169b9:	e9 07 ea ff ff       	jmp    153c5 <_obstack_memory_used@@Base+0x4c15>
   169be:	41 83 fb 2b          	cmp    $0x2b,%r11d
   169c2:	0f 85 42 f5 ff ff    	jne    15f0a <_obstack_memory_used@@Base+0x575a>
   169c8:	c7                   	(bad)  
   169c9:	75 f0                	jne    169bb <_obstack_memory_used@@Base+0x620b>
   169cb:	30 02                	xor    %al,(%rdx)
   169cd:	00 00                	add    %al,(%rax)
   169cf:	00 be 43 00 00 00    	add    %bh,0x43(%rsi)
   169d5:	b8 63 00 00 00       	mov    $0x63,%eax
   169da:	e9 0d ff ff ff       	jmp    168ec <_obstack_memory_used@@Base+0x613c>
   169df:	b8 94 f8 ff ff       	mov    $0xfffff894,%eax
   169e4:	42 8d 94 01 6c 07 00 	lea    0x76c(%rcx,%r8,1),%edx
   169eb:	00 
   169ec:	4d                   	rex.WRB
   169ed:	48 ff c3             	inc    %rbx
   169f0:	29 0f                	sub    %ecx,(%rdi)
   169f2:	48 29 de             	sub    %rbx,%rsi
   169f5:	00 0f                	add    %cl,(%rdi)
   169f7:	8f                   	(bad)  
   169f8:	4d 01 00             	add    %r8,(%r8)
   169fb:	00 c1                	add    %al,%cl
   169fd:	48 29 c1             	sub    %rax,%rcx
   16a00:	0f 8c 89 fe ff 0f    	jl     1001688f <obstack_alloc_failed_handler@@Base+0xfff47ef>
   16a06:	85 aa fd ff ff 49    	test   %ebp,0x49fffffd(%rdx)
   16a0c:	29 c6                	sub    %eax,%esi
   16a0e:	00 00                	add    %al,(%rax)
   16a10:	39 c1                	cmp    %eax,%ecx
   16a12:	4d 31 c4             	xor    %r8,%r12
   16a15:	48 00 4d 89          	rex.W add %cl,-0x77(%rbp)
   16a19:	ee                   	out    %al,(%dx)
   16a1a:	c7                   	(bad)  
   16a1b:	48 ff c3             	inc    %rbx
   16a1e:	01 f3                	add    %esi,%ebx
   16a20:	fd                   	std    
   16a21:	ff                   	(bad)  
   16a22:	ff 9d c0 e9 e9 eb    	lcall  *-0x14161640(%rbp)
   16a28:	02 00                	add    (%rax),%al
   16a2a:	00 48 c1             	add    %cl,-0x3f(%rax)
   16a2d:	e0 37                	loopne 16a66 <_obstack_memory_used@@Base+0x62b6>
   16a2f:	24 30                	and    $0x30,%al
   16a31:	02 00                	add    (%rax),%al
   16a33:	49 89 d1             	mov    %rdx,%r9
   16a36:	89 ee                	mov    %ebp,%esi
   16a38:	48 69 d2 93 24 49 92 	imul   $0xffffffff92492493,%rdx,%rdx
   16a3f:	48 c1 ea 20          	shr    $0x20,%rdx
   16a43:	01 c2                	add    %eax,%edx
   16a45:	c1 f8 1f             	sar    $0x1f,%eax
   16a48:	c1 48 21 d1          	rorl   $0xd1,0x21(%rax)
   16a4c:	c2 83 4c             	ret    $0x4c83
   16a4f:	89 d8                	mov    %ebx,%eax
   16a51:	02 00                	add    (%rax),%al
   16a53:	00 ff                	add    %bh,%bh
   16a55:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
   16a5c:	00 
   16a5d:	48 8d 7c 24 78       	lea    0x78(%rsp),%rdi
   16a62:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   16a67:	c1 e2 3e             	shl    $0x3e,%edx
   16a6a:	fe                   	(bad)  
   16a6b:	7f e0                	jg     16a4d <_obstack_memory_used@@Base+0x629d>
   16a6d:	49 c7 c6 9c 00 00 00 	mov    $0x9c,%r14
   16a74:	0f 84 4e f0 e9 82    	je     ffffffff82eb5ac8 <obstack_alloc_failed_handler@@Base+0xffffffff82e93a28>
   16a7a:	01 00                	add    %eax,(%rax)
   16a7c:	00 84 00 00 4d 39 f1 	add    %al,-0xec6b300(%rax,%rax,1)
   16a83:	24 a0                	and    $0xa0,%al
   16a85:	4d 31 4d 09          	xor    %r9,0x9(%r13)
   16a89:	e7 24                	out    %eax,$0x24
   16a8b:	e0 00                	loopne 16a8d <_obstack_memory_used@@Base+0x62dd>
   16a8d:	4d 0f 4c 21          	cmovl  (%r9),%r12
   16a91:	de ff                	fdivrp %st,%st(7)
   16a93:	ff c1                	inc    %ecx
   16a95:	e7 03                	out    %eax,$0x3
   16a97:	44 24 30             	rex.R and $0x30,%al
   16a9a:	49 01 f2             	add    %rsi,%r10
   16a9d:	c4                   	(bad)  
   16a9e:	00 00                	add    %al,(%rax)
   16aa0:	4d 31 f3             	xor    %r14,%r11
   16aa3:	49 c7 c5 34 fd ff ff 	mov    $0xfffffffffffffd34,%r13
   16aaa:	8b b4 24 4c 0f af d3 	mov    -0x2c50f0b4(%rsp),%esi
   16ab1:	44 8b 84 24 d0 00 0f 	mov    -0x7bf0ff30(%rsp),%r8d
   16ab8:	84 
   16ab9:	34 48                	xor    $0x48,%al
   16abb:	85 da                	test   %ebx,%edx
   16abd:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
   16ac4:	0f 94 44 24 6f       	sete   0x6f(%rsp)
   16ac9:	44                   	rex.R
   16aca:	49 f7 f9             	idiv   %r9
   16acd:	94                   	xchg   %eax,%esp
   16ace:	00 00                	add    %al,(%rax)
   16ad0:	00 44 8b 48          	add    %al,0x48(%rbx,%rcx,4)
   16ad4:	f7 f8                	idiv   %eax
   16ad6:	00 00                	add    %al,(%rax)
   16ad8:	49 c1 e7 03          	shl    $0x3,%r15
   16adc:	54                   	push   %rsp
   16add:	49 21 d3             	and    %rdx,%r11
   16ae0:	c8 48 ff c3          	enter  $0xff48,$0xc3
   16ae4:	3e 29 c9             	ds sub %ecx,%ecx
   16ae7:	58                   	pop    %rax
   16ae8:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   16aef:	49 f7 fe             	idiv   %r14
   16af2:	60                   	(bad)  
   16af3:	8b 84 24 cc 00 00 00 	mov    0xcc(%rsp),%eax
   16afa:	4c                   	rex.WR
   16afb:	4d 09 ec             	or     %r13,%r12
   16afe:	ff f3                	push   %rbx
   16b00:	24 e9                	and    $0xe9,%al
   16b02:	b1 01                	mov    $0x1,%cl
   16b04:	00 00                	add    %al,(%rax)
   16b06:	44 24 68             	rex.R and $0x68,%al
   16b09:	0f b6 44 24 6f       	movzbl 0x6f(%rsp),%eax
   16b0e:	38 44 24 6e          	cmp    %al,0x6e(%rsp)
   16b12:	74 08                	je     16b1c <_obstack_memory_used@@Base+0x636c>
   16b14:	09 ca                	or     %ecx,%edx
   16b16:	0f                   	(bad)  
   16b17:	0f 8c 51 03 00 00    	jl     16e6e <_obstack_memory_used@@Base+0x66be>
   16b1d:	44 24 68             	rex.R and $0x68,%al
   16b20:	45 31 48 ff          	xor    %r9d,-0x1(%r8)
   16b24:	0f 8c 07 fe ff ff    	jl     16931 <_obstack_memory_used@@Base+0x6181>
   16b2a:	54                   	push   %rsp
   16b2b:	e9 5a fc ff ff       	jmp    1678a <_obstack_memory_used@@Base+0x5fda>
   16b30:	44 09 c8             	or     %r9d,%eax
   16b33:	09 d0                	or     %edx,%eax
   16b35:	8b 54 24 54          	mov    0x54(%rsp),%edx
   16b39:	33 54 24 58          	xor    0x58(%rsp),%edx
   16b3d:	09 d0                	or     %edx,%eax
   16b3f:	8b 7c 99 4c          	mov    0x4c(%rcx,%rbx,4),%edi
   16b43:	09 4d 29             	or     %ecx,0x29(%rbp)
   16b46:	fe 48 0f             	decb   0xf(%rax)
   16b49:	af                   	scas   %es:(%rdi),%eax
   16b4a:	c9                   	leave  
   16b4b:	0f 84 53 ef ff ff    	je     15aa4 <_obstack_memory_used@@Base+0x52f4>
   16b51:	e9 e9 61 fd ff       	jmp    fffffffffffecd3f <obstack_alloc_failed_handler@@Base+0xfffffffffffcac9f>
   16b56:	ff 8d bc 24 00 01    	decl   0x10024bc(%rbp)
   16b5c:	00 00                	add    %al,(%rax)
   16b5e:	49 39 dc             	cmp    %rbx,%r12
   16b61:	0f 8c 08 03 4c 31    	jl     314d6e6f <obstack_alloc_failed_handler@@Base+0x314b4dcf>
   16b67:	f6 41 f6 c7          	testb  $0xc7,-0xa(%rcx)
   16b6b:	04 0f                	add    $0xf,%al
   16b6d:	49 39 f4             	cmp    %rsi,%r12
   16b70:	00 00                	add    %al,(%rax)
   16b72:	4d 85 ff             	test   %r15,%r15
   16b75:	49 09 c2             	or     %rax,%r10
   16b78:	f4                   	hlt    
   16b79:	ff                   	(bad)  
   16b7a:	ff 0f                	decl   (%rdi)
   16b7c:	b6 84                	mov    $0x84,%dh
   16b7e:	24 00                	and    $0x0,%al
   16b80:	4c 89 e7             	mov    %r12,%rdi
   16b83:	88 45 00             	mov    %al,0x0(%rbp)
   16b86:	41 f6 c7 02          	test   $0x2,%r15b
   16b8a:	0f 84 c1 f4 49 c1    	je     ffffffffc14b6051 <obstack_alloc_failed_handler@@Base+0xffffffffc1493fb1>
   16b90:	e6 2c                	out    %al,$0x2c
   16b92:	b7 84                	mov    $0x84,%bh
   16b94:	4d 39 ea             	cmp    %r13,%r10
   16b97:	00 00                	add    %al,(%rax)
   16b99:	66 42 89 44 49 31    	mov    %ax,0x31(%rcx,%r9,2)
   16b9f:	d7                   	xlat   %ds:(%rbx)
   16ba0:	ad                   	lods   %ds:(%rsi),%eax
   16ba1:	f4                   	hlt    
   16ba2:	ff                   	(bad)  
   16ba3:	ff 0f                	decl   (%rdi)
   16ba5:	1f                   	(bad)  
   16ba6:	40 00 6b c9          	add    %bpl,-0x37(%rbx)
   16baa:	64 44 89 f8          	fs mov %r15d,%eax
   16bae:	c6 44 24 48 01       	movb   $0x1,0x48(%rsp)
   16bb3:	41 69 d2 10 27 00 00 	imul   $0x2710,%r10d,%edx
   16bba:	c7 44 24 30 0f 85 75 	movl   $0x3475850f,0x30(%rsp)
   16bc1:	34 
   16bc2:	f8                   	clc    
   16bc3:	00 01                	add    %al,(%rcx)
   16bc5:	01 ca                	add    %ecx,%edx
   16bc7:	b9 14 00 00 00       	mov    $0x14,%ecx
   16bcc:	44                   	rex.R
   16bcd:	49 0f af f3          	imul   %r11,%rsi
   16bd1:	e8 ff ff 48 8b       	call   ffffffff8b4a6bd5 <obstack_alloc_failed_handler@@Base+0xffffffff8b484b35>
   16bd6:	74 24                	je     16bfc <_obstack_memory_used@@Base+0x644c>
   16bd8:	28 4c 89 ea          	sub    %cl,-0x16(%rcx,%rcx,4)
   16bdc:	48 89 ef             	mov    %rbp,%rdi
   16bdf:	e8 6c de fe 0f       	call   10004a50 <obstack_alloc_failed_handler@@Base+0xffe29b0>
   16be4:	8c 4e fe             	mov    %cs,-0x2(%rsi)
   16be7:	ff                   	(bad)  
   16be8:	ff 49 e9             	decl   -0x17(%rcx)
   16beb:	36 02 00             	ss add (%rax),%al
   16bee:	00 ed                	add    %ch,%ch
   16bf0:	0f 84 37 49 f7 f8    	je     fffffffff8f8b52d <obstack_alloc_failed_handler@@Base+0xfffffffff8f6948d>
   16bf6:	e8 c5 e0 fe ff       	call   4cc0 <__ctype_tolower_loc@plt>
   16bfb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   16c00:	0f 8c 1e ff ff 4c    	jl     4d016b24 <obstack_alloc_failed_handler@@Base+0x4cff4a84>
   16c06:	89 49 ff             	mov    %ecx,-0x1(%rcx)
   16c09:	c6                   	(bad)  
   16c0a:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   16c0d:	88 44 1d 00          	mov    %al,0x0(%rbp,%rbx,1)
   16c11:	48                   	rex.W
   16c12:	49 01 c9             	add    %rcx,%r9
   16c15:	73 ec                	jae    16c03 <_obstack_memory_used@@Base+0x6453>
   16c17:	0f 84 4e fd ff ff    	je     1696b <_obstack_memory_used@@Base+0x61bb>
   16c1d:	85 2d ff ff ff e9    	test   %ebp,-0x16000001(%rip)        # ffffffffea016c22 <obstack_alloc_failed_handler@@Base+0xffffffffe9ff4b82>
   16c23:	a0 48 c1 e7 0c 48 89 	movabs 0xbeef89480ce7c148,%al
   16c2a:	ef be 
   16c2c:	30 00                	xor    %al,(%rax)
   16c2e:	4d 31 ce             	xor    %r9,%r14
   16c31:	89 dd                	mov    %ebx,%ebp
   16c33:	e8 28 dd fe ff       	call   4960 <memset@plt>
   16c38:	e9 f0 ec ff ff       	jmp    1592d <_obstack_memory_used@@Base+0x517d>
   16c3d:	41 6b 48 21 d1       	imul   $0xffffffd1,0x21(%r8),%ecx
   16c42:	0f 49 85 f6 4d 29 48 	cmovns 0x48294df6(%rbp),%eax
   16c49:	89 c1                	mov    %eax,%ecx
   16c4b:	24 30                	and    $0x30,%al
   16c4d:	05 00 00 00 83       	add    $0x83000000,%eax
   16c52:	f0 01 01             	lock add %eax,(%rcx)
   16c55:	ca 31 c9             	lret   $0xc931
   16c58:	e9 f3 e7 ff ff       	jmp    15450 <_obstack_memory_used@@Base+0x4ca0>
   16c5d:	48                   	rex.W
   16c5e:	4d 29 e2             	sub    %r12,%r10
   16c61:	f7 ff                	idiv   %edi
   16c63:	00 00                	add    %al,(%rax)
   16c65:	e8 f6 4d 0f 4c       	call   4c10ba60 <obstack_alloc_failed_handler@@Base+0x4c0e99c0>
   16c6a:	39 d3                	cmp    %edx,%ebx
   16c6c:	5c                   	pop    %rsp
   16c6d:	24 30                	and    $0x30,%al
   16c6f:	48 89 c1             	mov    %rax,%rcx
   16c72:	e9 e9 c8 fc ff       	jmp    fffffffffffe3560 <obstack_alloc_failed_handler@@Base+0xfffffffffffc14c0>
   16c77:	ff 89 ef be 30 00    	decl   0x30beef(%rcx)
   16c7d:	00 00                	add    %al,(%rax)
   16c7f:	48 89 dd             	mov    %rbx,%rbp
   16c82:	e8 d9 dc fe 48       	call   49004960 <obstack_alloc_failed_handler@@Base+0x48fe28c0>
   16c87:	f7 f8                	idiv   %eax
   16c89:	e9 ff ff 48 89       	jmp    ffffffff894a6c8d <obstack_alloc_failed_handler@@Base+0xffffffff89484bed>
   16c8e:	ef                   	out    %eax,(%dx)
   16c8f:	4d 29 eb             	sub    %r13,%r11
   16c92:	00 00                	add    %al,(%rax)
   16c94:	48 89 dd             	mov    %rbx,%rbp
   16c97:	e8 c4 dc fe ff       	call   4960 <memset@plt>
   16c9c:	e9 4e f0 ff ff       	jmp    15cef <_obstack_memory_used@@Base+0x553f>
   16ca1:	eb 52                	jmp    16cf5 <_obstack_memory_used@@Base+0x6545>
   16ca3:	ef                   	out    %eax,(%dx)
   16ca4:	be 30 00 48 ff       	mov    $0xff480030,%esi
   16ca9:	c0 c7 c7             	rol    $0xc7,%bh
   16cac:	f5                   	cmc    
   16cad:	fd                   	std    
   16cae:	ff                   	(bad)  
   16caf:	ff                   	(bad)  
   16cb0:	ff 41 0f             	incl   0xf(%rcx)
   16cb3:	49 0f af c3          	imul   %r11,%rax
   16cb7:	f7 ff                	idiv   %edi
   16cb9:	ff                   	(bad)  
   16cba:	b8 94 f8 ff ff       	mov    $0xfffff894,%eax
   16cbf:	44 29 c0             	sub    %r8d,%eax
   16cc2:	39 49 c7             	cmp    %ecx,-0x39(%rcx)
   16cc5:	c1 91 00 00 00 f7 da 	rcll   $0xda,-0x9000000(%rcx)
   16ccc:	45 85 db             	test   %r11d,%r11d
   16ccf:	49 c1 e7 16          	shl    $0x16,%r15
   16cd3:	ff                   	(bad)  
   16cd4:	ff 44 8b 4d          	incl   0x4d(%rbx,%rcx,4)
   16cd8:	39 f4                	cmp    %esi,%esp
   16cda:	0f 8f 00 fd ff ff    	jg     169e0 <_obstack_memory_used@@Base+0x6230>
   16ce0:	01 00                	add    %eax,(%rax)
   16ce2:	00 4e e7             	add    %cl,-0x19(%rsi)
   16ce5:	ff 49 21             	decl   0x21(%rcx)
   16ce8:	fc                   	cld    
   16ce9:	24 30                	and    $0x30,%al
   16ceb:	02 48 85             	add    -0x7b(%rax),%cl
   16cee:	ce                   	(bad)  
   16cef:	45 31 ff             	xor    %r15d,%r15d
   16cf2:	e9 1f fc ff ff       	jmp    16916 <_obstack_memory_used@@Base+0x6166>
   16cf7:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   16cfe:	00 
   16cff:	48 8d 55 0f          	lea    0xf(%rbp),%rdx
   16d03:	85 28                	test   %ebp,(%rax)
   16d05:	fd                   	std    
   16d06:	ff                   	(bad)  
   16d07:	ff 89 45 00 4a 8b    	decl   -0x74b5ffbb(%rcx)
   16d0d:	84 3c f8             	test   %bh,(%rax,%rdi,8)
   16d10:	00 48 f7             	add    %cl,-0x9(%rax)
   16d13:	f8                   	clc    
   16d14:	48 c7 c2 7f 03 00 00 	mov    $0x37f,%rdx
   16d1b:	dc 29                	fsubrl (%rcx)
   16d1d:	d0 48 29             	rorb   0x29(%rax)
   16d20:	c7                   	(bad)  
   16d21:	4c                   	rex.WR
   16d22:	49 c7 c4 09 03 00 00 	mov    $0x309,%r12
   16d29:	00 00                	add    %al,(%rax)
   16d2b:	08 0f                	or     %cl,(%rdi)
   16d2d:	4d 21 f7             	and    %r14,%r15
   16d30:	ff                   	(bad)  
   16d31:	ff 48 83             	decl   -0x7d(%rax)
   16d34:	0f 8c 50 03 00 00    	jl     1708a <_obstack_memory_used@@Base+0x68da>
   16d3a:	34 49                	xor    $0x49,%al
   16d3c:	39 c7                	cmp    %eax,%edi
   16d3e:	34 0a                	xor    $0xa,%al
   16d40:	0f 85 d3 00 00 00    	jne    16e19 <_obstack_memory_used@@Base+0x6669>
   16d46:	c1 72 ef e9          	shll   $0xe9,-0x11(%rdx)
   16d4a:	03 f3                	add    %ebx,%esi
   16d4c:	ff                   	(bad)  
   16d4d:	ff 48 48             	decl   0x48(%rax)
   16d50:	ff c1                	inc    %ecx
   16d52:	30 00                	xor    %al,(%rax)
   16d54:	00 00                	add    %al,(%rax)
   16d56:	4d 89 fd             	mov    %r15,%r13
   16d59:	e8 02 dc fe 48       	call   49004960 <obstack_alloc_failed_handler@@Base+0x48fe28c0>
   16d5e:	89 cb                	mov    %ecx,%ebx
   16d60:	e2 ff                	loop   16d61 <_obstack_memory_used@@Base+0x65b1>
   16d62:	0f 8c 48 fe ff ff    	jl     16bb0 <_obstack_memory_used@@Base+0x6400>
   16d68:	40                   	rex
   16d69:	48 f7 fe             	idiv   %rsi
   16d6c:	08 31                	or     %dh,(%rcx)
   16d6e:	4c 29 49 ff          	sub    %r9,-0x1(%rcx)
   16d72:	c5 57 00             	(bad)
   16d75:	00 8b 84 24 68 05    	add    %cl,0x5682484(%rbx)
   16d7b:	00 00                	add    %al,(%rax)
   16d7d:	4c 89 fa             	mov    %r15,%rdx
   16d80:	4d 31 f5             	xor    %r14,%r13
   16d83:	75 6a                	jne    16def <_obstack_memory_used@@Base+0x663f>
   16d85:	0f 8f 19 01 00 00    	jg     16ea4 <_obstack_memory_used@@Base+0x66f4>
   16d8b:	7b fc                	jnp    16d89 <_obstack_memory_used@@Base+0x65d9>
   16d8d:	ff                   	(bad)  
   16d8e:	ff 74 24 28          	push   0x28(%rsp)
   16d92:	6a 04                	push   $0x4
   16d94:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   16d99:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
   16d9e:	e8 bd e1 ff ff       	call   14f60 <_obstack_memory_used@@Base+0x47b0>
   16da3:	48 83 4c 4d 31 4d    	orq    $0x4d,0x31(%rbp,%rcx,2)
   16da9:	29 f5                	sub    %esi,%ebp
   16dab:	44 24 40             	rex.R and $0x40,%al
   16dae:	49 89 c5             	mov    %rax,%r13
   16db1:	49 89 4d 39          	mov    %rcx,0x39(%r13)
   16db5:	f6 2b                	imulb  (%rbx)
   16db7:	00 00                	add    %al,(%rax)
   16db9:	49 f7 fe             	idiv   %r14
   16dbc:	24 30                	and    $0x30,%al
   16dbe:	49 c1 4c 0f 0f 8f    	rorq   $0x8f,0xf(%r15,%rcx,1)
   16dc4:	6d                   	insl   (%dx),%es:(%rdi)
   16dc5:	fe                   	(bad)  
   16dc6:	ff                   	(bad)  
   16dc7:	ff 44 24 30          	incl   0x30(%rsp)
   16dcb:	04 0f                	add    $0xf,%al
   16dcd:	84 40 fe             	test   %al,-0x2(%rax)
   16dd0:	ff                   	(bad)  
   16dd1:	ff 0f                	decl   (%rdi)
   16dd3:	af                   	scas   %es:(%rdi),%eax
   16dd4:	d3 49 c7             	rorl   %cl,-0x39(%rcx)
   16dd7:	c0 7e 01 00          	sarb   $0x0,0x1(%rsi)
   16ddb:	00 ff                	add    %bh,%bh
   16ddd:	ff 49 01             	decl   0x1(%rcx)
   16de0:	d4                   	(bad)  
   16de1:	e9 5e e2 ff ff       	jmp    15044 <_obstack_memory_used@@Base+0x4894>
   16de6:	45 31 ff             	xor    %r15d,%r15d
   16de9:	e9 f5 f1 ff ff       	jmp    15fe3 <_obstack_memory_used@@Base+0x5833>
   16dee:	44 89 f8             	mov    %r15d,%eax
   16df1:	c6 44 24 48 00       	movb   $0x0,0x48(%rsp)
   16df6:	49                   	rex.WB
   16df7:	4d 85 c9             	test   %r9,%r9
   16dfa:	ee                   	out    %al,(%dx)
   16dfb:	e6 ff                	out    %al,$0xff
   16dfd:	ff c7                	inc    %edi
   16dff:	44 24 30             	rex.R and $0x30,%al
   16e02:	04 00                	add    $0x0,%al
   16e04:	00 00                	add    %al,(%rax)
   16e06:	0f 84 d1 48 39 d3    	je     ffffffffd33ab6dd <obstack_alloc_failed_handler@@Base+0xffffffffd338963d>
   16e0c:	48                   	rex.W
   16e0d:	49 01 ce             	add    %rcx,%r14
   16e10:	fa                   	cli    
   16e11:	ff                   	(bad)  
   16e12:	ff                   	(bad)  
   16e13:	e8 78 da fe ff       	call   4890 <__stack_chk_fail@plt>
   16e18:	83 c2 64             	add    $0x64,%edx
   16e1b:	45 85 db             	test   %r11d,%r11d
   16e1e:	0f 84 b1 fe ff ff    	je     16cd5 <_obstack_memory_used@@Base+0x6525>
   16e24:	e9 ff 4c 21 ce       	jmp    ffffffffce22bb28 <obstack_alloc_failed_handler@@Base+0xffffffffce209a88>
   16e29:	48                   	rex.W
   16e2a:	49                   	rex.WB
   16e2b:	49 ff c6             	inc    %r14
   16e2e:	09 c8                	or     %ecx,%eax
   16e30:	85 aa 49 c1 e9 28    	test   %ebp,0x28e9c149(%rdx)
   16e36:	01 00                	add    %eax,(%rax)
   16e38:	00 0f                	add    %cl,(%rdi)
   16e3a:	8c d4                	mov    %ss,%esp
   16e3c:	49 c1 ed 05          	shr    $0x5,%r13
   16e40:	ff                   	(bad)  
   16e41:	ff 49 c1             	decl   -0x3f(%rcx)
   16e44:	ee                   	out    %al,(%dx)
   16e45:	13 44 3d fc          	adc    -0x4(%rbp,%rdi,1),%eax
   16e49:	e9 03 f2 ff ff       	jmp    16051 <_obstack_memory_used@@Base+0x58a1>
   16e4e:	0f 49 31             	cmovns (%rcx),%esi
   16e51:	f0 ff                	lock (bad) 
   16e53:	ff 48 83             	decl   -0x7d(%rax)
   16e56:	ec                   	in     (%dx),%al
   16e57:	08 40 0f             	or     %al,0xf(%rax)
   16e5a:	b6 ff                	mov    $0xff,%dh
   16e5c:	e8 2f 0f 85 dc       	call   ffffffffdc867d90 <obstack_alloc_failed_handler@@Base+0xffffffffdc845cf0>
   16e61:	fe                   	(bad)  
   16e62:	ff                   	(bad)  
   16e63:	ff 26                	jmp    *(%rsi)
   16e65:	48 8b 15 3c b1 00 00 	mov    0xb13c(%rip),%rdx        # 21fa8 <_obstack_memory_used@@Base+0x117f8>
   16e6c:	48 8b 3a             	mov    (%rdx),%rdi
   16e6f:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   16e73:	48 3b 57 30          	cmp    0x30(%rdi),%rdx
   16e77:	73 17                	jae    16e90 <_obstack_memory_used@@Base+0x66e0>
   16e79:	48 8d 4d 0f          	lea    0xf(%rbp),%rcx
   16e7d:	af                   	scas   %es:(%rdi),%eax
   16e7e:	e8 49 29 f9 ea       	call   ffffffffeafa97cc <obstack_alloc_failed_handler@@Base+0xffffffffeaf8772c>
   16e83:	09 83 05 48 0f af    	or     %eax,-0x50f0b7fb(%rbx)
   16e89:	fb                   	sti    
   16e8a:	48 0f af de          	imul   %rsi,%rbx
   16e8e:	08 c3                	or     %al,%bl
   16e90:	0f b6 f0             	movzbl %al,%esi
   16e93:	e8 68 da fe ff       	call   4900 <__overflow@plt>
   16e98:	eb e9                	jmp    16e83 <_obstack_memory_used@@Base+0x66d3>
   16e9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16ea0:	f3 0f 1e fa          	endbr64 
   16ea4:	41 54                	push   %r12
   16ea6:	49 89 f4             	mov    %rsi,%r12
   16ea9:	53                   	push   %rbx
   16eaa:	48 89 fb             	mov    %rdi,%rbx
   16ead:	48 81 ec a8 02 00 00 	sub    $0x2a8,%rsp
   16eb4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16ebb:	00 00 
   16ebd:	48 89 84 24 98 02 00 	mov    %rax,0x298(%rsp)
   16ec4:	00 
   16ec5:	31 c0                	xor    %eax,%eax
   16ec7:	80 3d 3a b4 00 00 00 	cmpb   $0x0,0xb43a(%rip)        # 22308 <obstack_alloc_failed_handler@@Base+0x268>
   16ece:	74 12                	je     16ee2 <_obstack_memory_used@@Base+0x6732>
   16ed0:	bf 04 00 00 00       	mov    $0x4,%edi
   16ed5:	e8 46 52 49 ff       	call   ffffffffff4ac120 <obstack_alloc_failed_handler@@Base+0xffffffffff48a080>
   16eda:	c0 d7 0f             	rcl    $0xf,%bh
   16edd:	85 76 01             	test   %esi,0x1(%rsi)
   16ee0:	00 00                	add    %al,(%rax)
   16ee2:	80 3d 28 b4 00 00 00 	cmpb   $0x0,0xb428(%rip)        # 22311 <obstack_alloc_failed_handler@@Base+0x271>
   16ee9:	0f 85 b9 00 00 00    	jne    16fa8 <_obstack_memory_used@@Base+0x67f8>
   16eef:	80 3d 1a b4 00 00 00 	cmpb   $0x0,0xb41a(%rip)        # 22310 <obstack_alloc_failed_handler@@Base+0x270>
   16ef6:	74 38                	je     16f30 <_obstack_memory_used@@Base+0x6780>
   16ef8:	4d 01 e0             	add    %r12,%r8
   16efb:	c3                   	ret    
   16efc:	00 0f                	add    %cl,(%rdi)
   16efe:	85 c6                	test   %eax,%esi
   16f00:	01 00                	add    %eax,(%rax)
   16f02:	00 2c 00             	add    %ch,(%rax,%rax,1)
   16f05:	00 0f                	add    %cl,(%rdi)
   16f07:	85 7c 01 00          	test   %edi,0x0(%rcx,%rax,1)
   16f0b:	00 31                	add    %dh,(%rcx)
   16f0d:	4c 09 f0             	or     %r14,%rax
   16f10:	49 c7 c5 83 fd ff ff 	mov    $0xfffffffffffffd83,%r13
   16f17:	8b 15 87 b3 00 00    	mov    0xb387(%rip),%edx        # 222a4 <obstack_alloc_failed_handler@@Base+0x204>
   16f1d:	48 8d 35 af 2c 00 00 	lea    0x2caf(%rip),%rsi        # 19bd3 <_obstack_memory_used@@Base+0x9423>
   16f24:	bf 01 00 00 00       	mov    $0x1,%edi
   16f29:	31 c0                	xor    %eax,%eax
   16f2b:	e8 10 dc fe ff       	call   4b40 <__printf_chk@plt>
   16f30:	80 3d c9 b3 00 00 00 	cmpb   $0x0,0xb3c9(%rip)        # 22300 <obstack_alloc_failed_handler@@Base+0x260>
   16f37:	74 2b                	je     16f64 <_obstack_memory_used@@Base+0x67b4>
   16f39:	31 d2                	xor    %edx,%edx
   16f3b:	83 3d ca b3 00 49 39 	cmpl   $0x39,0x4900b3ca(%rip)        # 4902230c <obstack_alloc_failed_handler@@Base+0x4900026c>
   16f42:	c9                   	leave  
   16f43:	8b 8b b0 00 00 00    	mov    0xb0(%rbx),%ecx
   16f49:	74 0f                	je     16f5a <_obstack_memory_used@@Base+0x67aa>
   16f4b:	8f                   	(bad)  
   16f4c:	2b 01                	sub    (%rcx),%eax
   16f4e:	00 00                	add    %al,(%rax)
   16f50:	00 48 8d             	add    %cl,-0x73(%rax)
   16f53:	35 7b 2c 4c 01       	xor    $0x14c2c7b,%eax
   16f58:	e7 01                	out    %eax,$0x1
   16f5a:	00 00                	add    %al,(%rax)
   16f5c:	00 31                	add    %dh,(%rcx)
   16f5e:	c0 e8 dc             	shr    $0xdc,%al
   16f61:	db fe                	(bad)  
   16f63:	ff 4c 89 e1          	decl   -0x1f(%rcx,%rcx,4)
   16f67:	31 d2                	xor    %edx,%edx
   16f69:	31 f6                	xor    %esi,%esi
   16f6b:	48 89 df             	mov    %rbx,%rdi
   16f6e:	e8 9d 92 ff ff       	call   10210 <_obstack_newchunk@@Base+0x550>
   16f73:	8b 05 8b b3 00 00    	mov    0xb38b(%rip),%eax        # 22304 <obstack_alloc_failed_handler@@Base+0x264>
   16f79:	85 c0                	test   %eax,%eax
   16f7b:	0f 85 b7 00 00 00    	jne    17038 <_obstack_memory_used@@Base+0x6888>
   16f81:	48 8b 84 24 98 02 00 	mov    0x298(%rsp),%rax
   16f88:	00 
   16f89:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   16f90:	00 00 
   16f92:	0f 85 25 01 00 00    	jne    170bd <_obstack_memory_used@@Base+0x690d>
   16f98:	48 81 c4 a8 02 00 00 	add    $0x2a8,%rsp
   16f9f:	5b                   	pop    %rbx
   16fa0:	41 5c                	pop    %r12
   16fa2:	c3                   	ret    
   16fa3:	0f 1f 44 0f 84       	nopl   -0x7c(%rdi,%rcx,1)
   16fa8:	16                   	(bad)  
   16fa9:	fd                   	std    
   16faa:	ff                   	(bad)  
   16fab:	ff 00                	incl   (%rax)
   16fad:	00 00                	add    %al,(%rax)
   16faf:	4c 8d 05 0b 49 c1 48 	lea    0x48c1490b(%rip),%r8        # 48c2b8c1 <obstack_alloc_failed_handler@@Base+0x48c09821>
   16fb6:	f7 ff                	idiv   %edi
   16fb8:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   16fbc:	48 85 c9             	test   %rcx,%rcx
   16fbf:	e9 c9 03 00 00       	jmp    1738d <_obstack_memory_used@@Base+0x6bdd>
   16fc4:	01 cf                	add    %ecx,%edi
   16fc6:	4c e9 b0 4c 21 ef    	rex.WR jmp ffffffffef22bc7c <obstack_alloc_failed_handler@@Base+0xffffffffef209bdc>
   16fcc:	bf cd cc cc cc       	mov    $0xcccccccd,%edi
   16fd1:	cc                   	int3   
   16fd2:	cc                   	int3   
   16fd3:	cc                   	int3   
   16fd4:	cc                   	int3   
   16fd5:	0f 4c 21             	cmovl  (%rcx),%esp
   16fd8:	fa                   	cli    
   16fd9:	2a 01                	sub    (%rcx),%al
   16fdb:	00 00                	add    %al,(%rax)
   16fdd:	d0 01                	rolb   (%rcx)
   16fdf:	48 f7 e7             	mul    %rdi
   16fe2:	48 89 c8             	mov    %rcx,%rax
   16fe5:	48 c1 e9 79          	shr    $0x79,%rcx
   16fe9:	fe                   	(bad)  
   16fea:	ff                   	(bad)  
   16feb:	ff 48 0f             	decl   0xf(%rax)
   16fee:	af                   	scas   %es:(%rdi),%eax
   16fef:	d1 48 29             	rorl   0x29(%rax)
   16ff2:	f0 83 4d 01 e7       	lock orl $0xffffffe7,0x1(%rbp)
   16ff7:	88 00                	mov    %al,(%rax)
   16ff9:	48                   	rex.W
   16ffa:	4c 39 f8             	cmp    %r15,%rax
   16ffd:	89 d1                	mov    %edx,%ecx
   16fff:	48 83 f8 48          	cmp    $0x48,%rax
   17003:	c1 e6 04             	shl    $0x4,%esi
   17006:	48 01 ce             	add    %rcx,%rsi
   17009:	d2 4d 21             	rorb   %cl,0x21(%rbp)
   1700c:	f7 c3 00 00 04 74    	test   $0x74040000,%ebx
   17012:	06                   	(bad)  
   17013:	8b 49 c7             	mov    -0x39(%rcx),%ecx
   17016:	c5 fa 02             	(bad)  
   17019:	00 00                	add    %al,(%rax)
   1701b:	c1 48 8d 49          	rorl   $0x49,-0x73(%rax)
   1701f:	ff c5                	inc    %ebp
   17021:	00 00                	add    %al,(%rax)
   17023:	bf 01 00 00 00       	mov    $0x1,%edi
   17028:	48 c1 e9 17          	shr    $0x17,%rcx
   1702c:	57                   	push   %rdi
   1702d:	fc                   	cld    
   1702e:	ff                   	(bad)  
   1702f:	ff 34 fc             	push   (%rsp,%rdi,8)
   17032:	ff                   	(bad)  
   17033:	ff 0f                	decl   (%rdi)
   17035:	1f                   	(bad)  
   17036:	40 00 8b 49 85 de 48 	rex add %cl,0x48de8549(%rbx)
   1703d:	89 d7                	mov    %edx,%edi
   1703f:	73 49                	jae    1708a <_obstack_memory_used@@Base+0x68da>
   17041:	c7 c3 47 03 00 00    	mov    $0x347,%ebx
   17047:	00 e8                	add    %ch,%al
   17049:	e9 e3 03 00 00       	jmp    17431 <_obstack_memory_used@@Base+0x6c81>
   1704e:	2f                   	(bad)  
   1704f:	ff                   	(bad)  
   17050:	ff                   	(bad)  
   17051:	ff 66 0f             	jmp    *0xf(%rsi)
   17054:	49 0f 49 01          	cmovns (%r9),%rax
   17058:	4d 09 e7             	or     %r12,%r15
   1705b:	61                   	(bad)  
   1705c:	b0 00                	mov    $0x0,%al
   1705e:	00 e8                	add    %ch,%al
   17060:	3c 4c                	cmp    $0x4c,%al
   17062:	85 fb                	test   %edi,%ebx
   17064:	48 8d 3d 95 b0 00 00 	lea    0xb095(%rip),%rdi        # 22100 <obstack_alloc_failed_handler@@Base+0x60>
   1706b:	e8 30 52 ff ff       	call   c2a0 <__sprintf_chk@plt+0x75c0>
   17070:	48 8d 3d 59 b0 0f 84 	lea    -0x7bf04fa7(%rip),%rdi        # ffffffff841120d0 <obstack_alloc_failed_handler@@Base+0xffffffff840f0030>
   17077:	6e                   	outsb  %ds:(%rsi),(%dx)
   17078:	fc                   	cld    
   17079:	ff 49 01             	decl   0x1(%rcx)
   1707c:	c3                   	ret    
   1707d:	e9 fe ff e9 b2       	jmp    ffffffffb2eb7080 <obstack_alloc_failed_handler@@Base+0xffffffffb2e94fe0>
   17082:	01 e9                	add    %ebp,%ecx
   17084:	32 03                	xor    (%rbx),%al
   17086:	00 00                	add    %al,(%rax)
   17088:	8b 15 2a b2 00 00    	mov    0xb22a(%rip),%edx        # 222b8 <obstack_alloc_failed_handler@@Base+0x218>
   1708e:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   17092:	b9 00 02 00 00       	mov    $0x200,%ecx
   17097:	48 89 e6             	mov    %rsp,%rsi
   1709a:	4c 8b 05 0f b2 00 00 	mov    0xb20f(%rip),%r8        # 222b0 <obstack_alloc_failed_handler@@Base+0x210>
   170a1:	e8 7a 5c ff ff       	call   cd20 <__sprintf_chk@plt+0x8040>
   170a6:	31 d2                	xor    %edx,%edx
   170a8:	83 3d 5d b2 00 00 04 	cmpl   $0x4,0xb25d(%rip)        # 2230c <obstack_alloc_failed_handler@@Base+0x26c>
   170af:	48 89 c1             	mov    %rax,%rcx
   170b2:	0f 49 c7             	cmovns %edi,%eax
   170b5:	c4                   	(bad)  
   170b6:	b4 fd                	mov    $0xfd,%ah
   170b8:	ff                   	(bad)  
   170b9:	ff                   	(bad)  
   170ba:	fe 4d 09             	decb   0x9(%rbp)
   170bd:	d8 01                	fadds  (%rcx)
   170bf:	f6 fe                	idiv   %dh
   170c1:	ff 66 2e             	jmp    *0x2e(%rsi)
   170c4:	49 c7 c1 bd 01 00 00 	mov    $0x1bd,%r9
   170cb:	91                   	xchg   %eax,%ecx
   170cc:	fd                   	std    
   170cd:	ff                   	(bad)  
   170ce:	ff 00                	incl   (%rax)
   170d0:	f3 0f 1e fa          	endbr64 
   170d4:	48 8b 15 2d af 00 00 	mov    0xaf2d(%rip),%rdx        # 22008 <_obstack_memory_used@@Base+0x11858>
   170db:	31 f6                	xor    %esi,%esi
   170dd:	e9 fe da fe ff       	jmp    4be0 <__cxa_atexit@plt>
   170e2:	66 2e 0f e9 75 ff    	cs psubsw -0x1(%rbp),%xmm6
   170e8:	ff                   	(bad)  
   170e9:	ff 00                	incl   (%rax)
   170eb:	00 0f                	add    %cl,(%rdi)
   170ed:	1f                   	(bad)  
   170ee:	40 00 f3             	add    %sil,%bl
   170f1:	0f 1e fa             	nop    %edx
   170f4:	48 8b 05 05 9f 00 00 	mov    0x9f05(%rip),%rax        # 21000 <_obstack_memory_used@@Base+0x10850>
   170fb:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   170ff:	74 2f                	je     17130 <_obstack_memory_used@@Base+0x6980>
   17101:	55                   	push   %rbp
   17102:	48 89 e5             	mov    %rsp,%rbp
   17105:	53                   	push   %rbx
   17106:	48 c7 c7 d0 00 00 00 	mov    $0xd0,%rdi
   1710d:	48 c7 c1 64 01 00 00 	mov    $0x164,%rcx
   17114:	49 c1 ed 2e          	shr    $0x2e,%r13
   17118:	ff d0                	call   *%rax
   1711a:	48 0f 85 a5 01 48 89 	rex.W jne ffffffff894972c6 <obstack_alloc_failed_handler@@Base+0xffffffff89475226>
   17121:	d7                   	xlat   %ds:(%rbx)
   17122:	e1 11                	loope  17135 <_obstack_memory_used@@Base+0x6985>
   17124:	f8                   	clc    
   17125:	ff 75 f0             	push   -0x10(%rbp)
   17128:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1712c:	c9                   	leave  
   1712d:	c3                   	ret    
   1712e:	66 90                	xchg   %ax,%ax
   17130:	c3                   	ret    
